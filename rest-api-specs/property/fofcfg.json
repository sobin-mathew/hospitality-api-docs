{
  "swagger": "2.0",
  "info": {
    "title": "OPERA Cloud Front Desk Configuration API",
    "description": "APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>",
    "version": "24.4",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality_apis_ww_grp@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "schemes": [
    "https"
  ],
  "basePath": "/fof/config/v1",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/accountTypes": {
      "put": {
        "summary": "Operation to modify AR Account Types.",
        "description": "Operation to change account types. <p><strong>OperationId:</strong>putARAccountTypes</p>",
        "operationId": "putARAccountTypes",
        "parameters": [
          {
            "name": "arAccountTypes",
            "in": "body",
            "required": true,
            "description": "Request object for changing account types.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/arAccountTypes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivablesConfig"
        ]
      },
      "post": {
        "summary": "Operation to create AR Account Types.",
        "description": "Operation to create account types. <p><strong>OperationId:</strong>postARAccountTypes</p>",
        "operationId": "postARAccountTypes",
        "parameters": [
          {
            "name": "arAccountTypes",
            "in": "body",
            "required": true,
            "description": "Request object to create account receivables account types",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/arAccountTypes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivablesConfig"
        ]
      },
      "delete": {
        "summary": "Operation to remove AR Account types.",
        "description": "Operation to remove account types. <p><strong>OperationId:</strong>deleteARAccountTypes</p>",
        "operationId": "deleteARAccountTypes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Property associated with account type",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "accountTypes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Account receivable account type",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivablesConfig"
        ]
      }
    },
    "/articles": {
      "put": {
        "summary": "Operation to change Articles.",
        "description": "Operation to change articles. <p><strong>OperationId:</strong>putArticles</p>",
        "operationId": "putArticles",
        "parameters": [
          {
            "name": "articles",
            "in": "body",
            "required": true,
            "description": "Request to change articles.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/articles"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create Articles.",
        "description": "Operation to create articles. <p><strong>OperationId:</strong>postArticles</p>",
        "operationId": "postArticles",
        "parameters": [
          {
            "name": "articles",
            "in": "body",
            "required": true,
            "description": "Request to create articles.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/articles"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Get articles",
        "description": "Use this API to return articles for one or multiple properties based on search criteria such as hotelIds, transactionCodes, articleCodes, etc. One transaction code can sometimes serve as an umbrella for multiple articles, which can be posted using that transaction code.  For example, a single mini bar food transaction code might cover potato chips, crackers, peanuts, pretzels, and so on.<p><strong>OperationId:</strong>getArticles</p>",
        "operationId": "getArticles",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "transactionCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "articleCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "universalProductCode",
            "in": "query",
            "required": false,
            "description": "Unique Universal product code search criteria.",
            "type": "string"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Indicator that tells whether to include inactive articles in search results.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for fetching articles.",
            "schema": {
              "$ref": "#/definitions/articlesInfo"
            }
          },
          "204": {
            "description": "Articles not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete Articles.",
        "description": "Operation to remove articles. <p><strong>OperationId:</strong>deleteArticles</p>",
        "operationId": "deleteArticles",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          },
          {
            "name": "articleCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique code of the article.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "articleHotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code to which the article belongs.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "inactive",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Indicates whether the article is inactive or not.",
            "items": {
              "type": "boolean"
            },
            "x-example": [
              "false"
            ],
            "required": false
          },
          {
            "name": "orderSequence",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Display Order sequence.",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "description",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Description of the article.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "transactionCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Transaction code to which the article belongs.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "currencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "availableForPostIt",
            "in": "query",
            "required": false,
            "description": "Indicates whether the article is available for post it.",
            "type": "boolean"
          },
          {
            "name": "color",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Color configuration type. This color configuration provides a visual category of entities.",
            "uniqueItems": true,
            "enum": [
              "Red",
              "DarkRed",
              "Green",
              "DarkGreen",
              "LightGreen",
              "Orange",
              "White",
              "Yellow",
              "DarkYellow",
              "Purple",
              "Brown",
              "Gray",
              "Aqua",
              "Chocolate",
              "Blue",
              "LightBlue",
              "DarkBlue",
              "Cyan",
              "DarkCyan",
              "Magenta",
              "DarkMagenta",
              "Black"
            ]
          },
          {
            "name": "universalProductCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique Universal product code of the article.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/authorizationConfigRule": {
      "put": {
        "summary": "Operation to change AuthorizationConfigRule.",
        "description": " <p><strong>OperationId:</strong>putAuthorizationConfigRule</p>",
        "operationId": "putAuthorizationConfigRule",
        "parameters": [
          {
            "name": "authorizationConfigRules",
            "in": "body",
            "required": true,
            "description": "Request object to change authorization rule.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/authorizationConfigRules"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create AuthorizationConfigRule.",
        "description": " <p><strong>OperationId:</strong>postAuthorizationConfigRule</p>",
        "operationId": "postAuthorizationConfigRule",
        "parameters": [
          {
            "name": "authorizationConfigRules",
            "in": "body",
            "required": true,
            "description": "Request object to create new authorization rule for given hotel code.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/authorizationConfigRules"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete AuthorizationConfigRule.",
        "description": " <p><strong>OperationId:</strong>deleteAuthorizationConfigRule</p>",
        "operationId": "deleteAuthorizationConfigRule",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Property associated with authorization rule",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "roomType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Authorization rule Room type.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "roomClassHotelId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "roomClassCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sourceCodeHotelId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sourceCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "rateCategory",
            "in": "query",
            "required": false,
            "description": "Rate category Code.",
            "type": "string"
          },
          {
            "name": "rateCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Rate code associated to this rule.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "guaranteeCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Guarantee code associated to this rule.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/authorizationConfigRules": {
      "get": {
        "summary": "Operation to fetch AuthorizationConfigRules.",
        "description": " <p><strong>OperationId:</strong>getAuthorizationConfigRules</p>",
        "operationId": "getAuthorizationConfigRules",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for FetchAuthorizationConfigRules.",
            "schema": {
              "$ref": "#/definitions/authorizationConfigRulesInfo"
            }
          },
          "204": {
            "description": "AuthorizationConfigRules not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/authorizationRule": {
      "get": {
        "summary": "Operation to fetch AuthorizationRule.",
        "description": " <p><strong>OperationId:</strong>getAuthorizationRule</p>",
        "operationId": "getAuthorizationRule",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "The hotel code to retrieve authorization rules for.",
            "type": "string"
          },
          {
            "name": "reservationId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "idExtension",
            "in": "query",
            "required": false,
            "description": "Additional identifying value assigned by the creating system.",
            "type": "integer"
          },
          {
            "name": "idContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "guaranteeCode",
            "in": "query",
            "required": false,
            "description": "The guarantee code to retrieve authorization rules for.",
            "type": "string"
          },
          {
            "name": "rateCode",
            "in": "query",
            "required": false,
            "description": "The rate code to retrieve authorization rules for.",
            "type": "string"
          },
          {
            "name": "roomType",
            "in": "query",
            "required": false,
            "description": "The room type to retrieve authorization rules for.",
            "type": "string"
          },
          {
            "name": "sourceCode",
            "in": "query",
            "required": false,
            "description": "The source code to retrieve authorization rules for.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "The result element containing the authorization rule matching the requested criteria.",
            "schema": {
              "$ref": "#/definitions/authorizationRule"
            }
          },
          "204": {
            "description": "AuthorizationRule not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CreditCard"
        ]
      }
    },
    "/authorizerGroups": {
      "put": {
        "summary": "Operation to change AuthorizerGroups.",
        "description": "Operation to change Authorizer Groups. <p><strong>OperationId:</strong>putAuthorizerGroups</p>",
        "operationId": "putAuthorizerGroups",
        "parameters": [
          {
            "name": "authorizerGroupsToChange",
            "in": "body",
            "required": true,
            "description": "Request object for changing existing Authorizer Group Configuration.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/authorizerGroupsToChange"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create AuthorizerGroups.",
        "description": "Operation to create Authorizer Groups. <p><strong>OperationId:</strong>postAuthorizerGroups</p>",
        "operationId": "postAuthorizerGroups",
        "parameters": [
          {
            "name": "authorizerGroups",
            "in": "body",
            "required": true,
            "description": "Request object for creating new Authorizer Group Configuration.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/authorizerGroups"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch AuthorizerGroups.",
        "description": "Operation to fetch Authorizer Groups. <p><strong>OperationId:</strong>getAuthorizerGroups</p>",
        "operationId": "getAuthorizerGroups",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "authorizerGroupsCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Authorizer Groups.",
            "schema": {
              "$ref": "#/definitions/authorizerGroups"
            }
          },
          "204": {
            "description": "AuthorizerGroups not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete AuthorizerGroups.",
        "description": "Operation to remove Authorizer Groups. <p><strong>OperationId:</strong>deleteAuthorizerGroups</p>",
        "operationId": "deleteAuthorizerGroups",
        "parameters": [
          {
            "name": "authorizerGroup",
            "in": "query",
            "required": false,
            "description": "Configuration code.",
            "type": "string"
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Hotel where the code is configured.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/autoFolioSettlementTypes": {
      "get": {
        "summary": "Get Auto Folio Settlement Types",
        "description": "Use this API to get Auto Folio Settlement Types. <p><strong>OperationId:</strong>getAutoFolioSettlementTypes</p>",
        "operationId": "getAutoFolioSettlementTypes",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Auto Folio Settlement Types.",
            "schema": {
              "$ref": "#/definitions/autoFolioSettlementTypesDetails"
            }
          },
          "204": {
            "description": "AutoFolioSettlementTypes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create Auto Folio Settlement Types",
        "description": "Use this API to create Auto Folio Settlement Types. <p><strong>OperationId:</strong>postAutoFolioSettlementTypes</p>",
        "operationId": "postAutoFolioSettlementTypes",
        "parameters": [
          {
            "name": "autoFolioSettlementTypesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Auto Folio Settlement Types.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/autoFolioSettlementTypesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/autoFolioSettlementTypes/{code}": {
      "put": {
        "summary": "Change Auto Folio Settlement Types",
        "description": "Use this API to update Auto Folio Settlement Types. <p><strong>OperationId:</strong>putAutoFolioSettlementTypes</p>",
        "operationId": "putAutoFolioSettlementTypes",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of Auto Folio Settlement Types."
          },
          {
            "name": "autoFolioSettlementTypesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Auto Folio Settlement Types.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/autoFolioSettlementTypesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete Auto Folio Settlement Types",
        "description": "Use this API to delete Auto Folio Settlement Types. <p><strong>OperationId:</strong>deleteAutoFolioSettlementTypes</p>",
        "operationId": "deleteAutoFolioSettlementTypes",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of Auto Folio Settlement Types."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/budgetForecast": {
      "put": {
        "summary": "Operation to delete BudgetForecast.",
        "description": "Operation to Delete Budget Forecast information. <p><strong>OperationId:</strong>deleteBudgetForecast</p>",
        "operationId": "deleteBudgetForecast",
        "parameters": [
          {
            "name": "budgetForecastToDelete",
            "in": "body",
            "required": true,
            "description": "Request to load the Budget or Forecast information.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/budgetForecastToDelete"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch BudgetForecast.",
        "description": "Operation to fetch Budget Forecast information. <p><strong>OperationId:</strong>getBudgetForecast</p>",
        "operationId": "getBudgetForecast",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Opera Hotel code for the Fetch Revenue information.",
            "type": "string"
          },
          {
            "name": "year",
            "in": "query",
            "required": false,
            "description": "Year of revenue to be fetched.",
            "type": "string"
          },
          {
            "name": "marketSegmentNights",
            "in": "query",
            "required": false,
            "description": "Flag to indicate if nights information has to be included.",
            "type": "boolean"
          },
          {
            "name": "marketSegmentRevenue",
            "in": "query",
            "required": false,
            "description": "Flag to indicate if revenue information has to be included.",
            "type": "boolean"
          },
          {
            "name": "marketSegmentABVariance",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Flag to include ABVariance revenue/nights information.",
            "type": "boolean"
          },
          {
            "name": "marketSegmentAFVariance",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Flag to include AFVariance revenue/nights information.",
            "type": "boolean"
          },
          {
            "name": "marketSegmentActual",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Flag to include Actual revenue/nights information.",
            "type": "boolean"
          },
          {
            "name": "marketSegmentBudget",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Flag to include Budget revenue/nights information.",
            "type": "boolean"
          },
          {
            "name": "marketSegmentFBVariance",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Flag to include FBVariance revenue/nights information.",
            "type": "boolean"
          },
          {
            "name": "marketSegmentForecast",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Flag to include Forecast revenue/nights information.",
            "type": "boolean"
          },
          {
            "name": "marketSegmentMarketCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "rateSegmentNights",
            "in": "query",
            "required": false,
            "description": "Flag to indicate if nights information has to be included.",
            "type": "boolean"
          },
          {
            "name": "rateSegmentRevenue",
            "in": "query",
            "required": false,
            "description": "Flag to indicate if revenue information has to be included.",
            "type": "boolean"
          },
          {
            "name": "rateSegmentABVariance",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Flag to include ABVariance revenue/nights information.",
            "type": "boolean"
          },
          {
            "name": "rateSegmentAFVariance",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Flag to include AFVariance revenue/nights information.",
            "type": "boolean"
          },
          {
            "name": "rateSegmentActual",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Flag to include Actual revenue/nights information.",
            "type": "boolean"
          },
          {
            "name": "rateSegmentBudget",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Flag to include Budget revenue/nights information.",
            "type": "boolean"
          },
          {
            "name": "rateSegmentFBVariance",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Flag to include FBVariance revenue/nights information.",
            "type": "boolean"
          },
          {
            "name": "rateSegmentForecast",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Flag to include Forecast revenue/nights information.",
            "type": "boolean"
          },
          {
            "name": "rateSegmentRateCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "customSegmentCustomValue",
            "in": "query",
            "required": false,
            "description": "Flag to indicate if Value information has to be fetched.",
            "type": "boolean"
          },
          {
            "name": "customSegmentABVariance",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Flag to include ABVariance revenue/nights information.",
            "type": "boolean"
          },
          {
            "name": "customSegmentAFVariance",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Flag to include AFVariance revenue/nights information.",
            "type": "boolean"
          },
          {
            "name": "customSegmentActual",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Flag to include Actual revenue/nights information.",
            "type": "boolean"
          },
          {
            "name": "customSegmentBudget",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Flag to include Budget revenue/nights information.",
            "type": "boolean"
          },
          {
            "name": "customSegmentFBVariance",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Flag to include FBVariance revenue/nights information.",
            "type": "boolean"
          },
          {
            "name": "customSegmentForecast",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Flag to include Forecast revenue/nights information.",
            "type": "boolean"
          },
          {
            "name": "customSegmentCustomCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "transactionSegmentRevenue",
            "in": "query",
            "required": false,
            "description": "Flag to indicate if revenue information has to be fetched.",
            "type": "boolean"
          },
          {
            "name": "transactionSegmentABVariance",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Flag to include ABVariance revenue/nights information.",
            "type": "boolean"
          },
          {
            "name": "transactionSegmentAFVariance",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Flag to include AFVariance revenue/nights information.",
            "type": "boolean"
          },
          {
            "name": "transactionSegmentActual",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Flag to include Actual revenue/nights information.",
            "type": "boolean"
          },
          {
            "name": "transactionSegmentBudget",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Flag to include Budget revenue/nights information.",
            "type": "boolean"
          },
          {
            "name": "transactionSegmentFBVariance",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Flag to include FBVariance revenue/nights information.",
            "type": "boolean"
          },
          {
            "name": "transactionSegmentForecast",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Flag to include Forecast revenue/nights information.",
            "type": "boolean"
          },
          {
            "name": "transactionSegmentTransactionCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "transactionSegmentTransactionCodeGrp",
            "in": "query",
            "required": false,
            "description": "Transaction code group of segment code.",
            "type": "string"
          },
          {
            "name": "cateringSegmentCovers",
            "in": "query",
            "required": false,
            "description": "Flag to indicate if Covers information has to be included.",
            "type": "boolean"
          },
          {
            "name": "cateringSegmentRevenue",
            "in": "query",
            "required": false,
            "description": "Flag to indicate if revenue information has to be included.",
            "type": "boolean"
          },
          {
            "name": "cateringSegmentABVariance",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Flag to include ABVariance revenue/nights information.",
            "type": "boolean"
          },
          {
            "name": "cateringSegmentAFVariance",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Flag to include AFVariance revenue/nights information.",
            "type": "boolean"
          },
          {
            "name": "cateringSegmentActual",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Flag to include Actual revenue/nights information.",
            "type": "boolean"
          },
          {
            "name": "cateringSegmentBudget",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Flag to include Budget revenue/nights information.",
            "type": "boolean"
          },
          {
            "name": "cateringSegmentFBVariance",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Flag to include FBVariance revenue/nights information.",
            "type": "boolean"
          },
          {
            "name": "cateringSegmentForecast",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Flag to include Forecast revenue/nights information.",
            "type": "boolean"
          },
          {
            "name": "cateringSegmentCateringCodeGrp",
            "in": "query",
            "required": false,
            "description": "Catering code group of segment code.",
            "type": "string"
          },
          {
            "name": "cateringSegmentCateringCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for Budget forecast information.",
            "schema": {
              "$ref": "#/definitions/budgetForecastInformation"
            }
          },
          "204": {
            "description": "BudForecast not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/budgetForecast/set": {
      "put": {
        "summary": "Operation to set BudgetForecast.",
        "description": "Operation to add/update Budget Forecast information. <p><strong>OperationId:</strong>setBudgetForecast</p>",
        "operationId": "setBudgetForecast",
        "parameters": [
          {
            "name": "budgetForecastInformationBase",
            "in": "body",
            "required": true,
            "description": "Request to load the Budget or Forecast information.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/budgetForecastInformationBase"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/cardReaderDelimiters": {
      "get": {
        "summary": "Operation to fetch CardReaderDelimiters.",
        "description": " <p><strong>OperationId:</strong>getCardReaderDelimiters</p>",
        "operationId": "getCardReaderDelimiters",
        "parameters": [
          {
            "name": "deviceID",
            "in": "query",
            "x-example": "120",
            "required": false,
            "type": "integer"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for reading the configured device delimiters.",
            "schema": {
              "$ref": "#/definitions/cardReaderDelimiters"
            }
          },
          "204": {
            "description": "CardReaderDelimiters not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CreditCard"
        ]
      }
    },
    "/cashierDetails/cashiers": {
      "get": {
        "summary": "Get cashiers",
        "description": "Use this API to return Cashier information based on search criteria such as cashierIDs, limit, name. <p><strong>OperationId:</strong>getCashiers</p>",
        "operationId": "getCashiers",
        "parameters": [
          {
            "name": "cashierIDs",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Numberic code for cashier ID.",
            "items": {
              "type": "number",
              "maxItems": 4000
            },
            "x-example": [
              "54"
            ],
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "description": "Partial name of a cashier.",
            "type": "string"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Indicator that tells whether to include inactive cashiers in search results.",
            "type": "boolean"
          },
          {
            "name": "appUser",
            "in": "query",
            "required": false,
            "description": "Name of the application user associated with the cashier id",
            "type": "string",
            "minLength": 0,
            "maxLength": 60
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching information regarding Cashiers.",
            "schema": {
              "$ref": "#/definitions/cashiersDetails"
            }
          },
          "204": {
            "description": "Cashiers not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/cashierShifts/dropLocations": {
      "get": {
        "summary": "Get Template Cashier Shift Drop Locations",
        "description": "Use this API to get Template Cashier Shift Drop Locations. <p><strong>OperationId:</strong>getTemplateCashierShiftDropLocations</p>",
        "operationId": "getTemplateCashierShiftDropLocations",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Template Cashier Shift Drop Locations.",
            "schema": {
              "$ref": "#/definitions/templateCashierShiftDropLocationsDetails"
            }
          },
          "204": {
            "description": "TemplateCashierShiftDropLocations not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create Template Cashier Shift Drop Locations",
        "description": "Use this API to create Template Cashier Shift Drop Locations. <p><strong>OperationId:</strong>postTemplateCashierShiftDropLocations</p>",
        "operationId": "postTemplateCashierShiftDropLocations",
        "parameters": [
          {
            "name": "templateCashierShiftDropLocationsCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Template Cashier Shift Drop Locations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateCashierShiftDropLocationsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/cashierShifts/dropLocations/{dropLocationId}": {
      "put": {
        "summary": "Change Template Cashier Shift Drop Locations",
        "description": "Use this API to update Template Cashier Shift Drop Locations. <p><strong>OperationId:</strong>changeTemplateCashierShiftDropLocations</p>",
        "operationId": "changeTemplateCashierShiftDropLocations",
        "parameters": [
          {
            "name": "dropLocationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of drop location."
          },
          {
            "name": "templateCashierShiftDropLocationsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Template Cashier Shift Drop Locations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateCashierShiftDropLocationsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete Template Cashier Shift Drop Locations",
        "description": "Use this API to delete Template Cashier Shift Drop Locations. <p><strong>OperationId:</strong>removeTemplateCashierShiftDropLocations</p>",
        "operationId": "removeTemplateCashierShiftDropLocations",
        "parameters": [
          {
            "name": "dropLocationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of drop location."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/cashiers": {
      "put": {
        "summary": "Operation to change CashiersDetails.",
        "description": "This Operation to Change a Cashier. <p><strong>OperationId:</strong>putCashiers</p>",
        "operationId": "putCashiers",
        "parameters": [
          {
            "name": "cashiers",
            "in": "body",
            "required": true,
            "description": "Request objects for modifying cashiers",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/cashiers"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create Cashiers.",
        "description": "Operation to Create Cashier. <p><strong>OperationId:</strong>postCashiers</p>",
        "operationId": "postCashiers",
        "parameters": [
          {
            "name": "cashiers",
            "in": "body",
            "required": true,
            "description": "Request object for creating cashiers.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/cashiers"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/cashiers/nextAvailable": {
      "get": {
        "summary": "Operation to fetch AvailableCashierNumber.",
        "description": "The operation returns a next available Cashier Number to be used while creating a new Cashier. <p><strong>OperationId:</strong>getAvailableCashierNumber</p>",
        "operationId": "getAvailableCashierNumber",
        "parameters": [
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object that returns next available cashier number.",
            "schema": {
              "$ref": "#/definitions/cashierNumber"
            }
          },
          "204": {
            "description": "AvailableCashierNumber not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/collectingAgentTaxes": {
      "put": {
        "summary": "Operation to change CollectingAgentTaxes.",
        "description": "Operation to change Collecting Agent Taxes. <p><strong>OperationId:</strong>putCollectingAgentTaxes</p>",
        "operationId": "putCollectingAgentTaxes",
        "parameters": [
          {
            "name": "collectingAgentTaxes",
            "in": "body",
            "required": true,
            "description": "Request object to change Collecting Agent Taxes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/collectingAgentTaxes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create CollectingAgentTaxes.",
        "description": "Operation to create Collecting Agent Taxes. <p><strong>OperationId:</strong>postCollectingAgentTaxes</p>",
        "operationId": "postCollectingAgentTaxes",
        "parameters": [
          {
            "name": "collectingAgentTaxes",
            "in": "body",
            "required": true,
            "description": "Request object to create Collecting Agent Taxes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/collectingAgentTaxes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch CollectingAgentTaxes.",
        "description": "Operation to fetch Collecting Agent Taxes. <p><strong>OperationId:</strong>getCollectingAgentTaxes</p>",
        "operationId": "getCollectingAgentTaxes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "It represents Hotel Code",
            "type": "string"
          },
          {
            "name": "taxCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "taxType",
            "description": "Parameter to fetch Collecting Agent Taxes based on tax types which are marked Collecting Agent. The list of tax types is fetched using getTaxTypes operation.",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 40
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetch Collecting Agent Taxes request.",
            "schema": {
              "$ref": "#/definitions/collectingAgentTaxes"
            }
          },
          "204": {
            "description": "CollectingAgentTaxes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete CollectingAgentTaxes.",
        "description": "Operation to remove Collecting Agent Taxes. <p><strong>OperationId:</strong>deleteCollectingAgentTaxes</p>",
        "operationId": "deleteCollectingAgentTaxes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "It represents Hotel code",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "taxCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Primary Key Sequence.",
            "items": {
              "type": "integer",
              "minimum": 1,
              "maximum": 5
            },
            "required": false
          },
          {
            "name": "taxTypeCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/commissionCodes": {
      "get": {
        "summary": "Operation to fetch commission codes.",
        "description": " <p><strong>OperationId:</strong>getCommissionCodes</p>",
        "operationId": "getCommissionCodes",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "commissionCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching commission codes.",
            "schema": {
              "$ref": "#/definitions/commissionCodesSummary"
            }
          },
          "204": {
            "description": "CommissionCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      },
      "put": {
        "summary": "Operation to change commission codes.",
        "description": " <p><strong>OperationId:</strong>putCommissionCodes</p>",
        "operationId": "putCommissionCodes",
        "parameters": [
          {
            "name": "commissionCodes",
            "in": "body",
            "required": true,
            "description": "Request object to update commission codes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/commissionCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      },
      "post": {
        "summary": "Operation to create commission codes.",
        "description": " <p><strong>OperationId:</strong>postCommissionCodes</p>",
        "operationId": "postCommissionCodes",
        "parameters": [
          {
            "name": "commissionCodes",
            "in": "body",
            "required": true,
            "description": "Request object to create new commission codes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/commissionCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      },
      "delete": {
        "summary": "Operation to remove commission codes.",
        "description": " <p><strong>OperationId:</strong>deleteCommissionCodes</p>",
        "operationId": "deleteCommissionCodes",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Property of the commission code.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "commissionCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Commission code for which details are deleted.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      }
    },
    "/compAuthorizers/set": {
      "put": {
        "summary": "Operation to set CompAuthorizer.",
        "description": "Operation to Set Comp Authorizer. <p><strong>OperationId:</strong>setCompAuthorizer</p>",
        "operationId": "setCompAuthorizer",
        "parameters": [
          {
            "name": "compAuthorizer",
            "in": "body",
            "required": true,
            "description": "Retrieve a summary of transactions for a guest or a set of guests.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/compAuthorizer"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/compTypes": {
      "post": {
        "summary": "Operation to Create Comp Types",
        "description": "Operation to Create Comp Types <p><strong>OperationId:</strong>postCompTypes</p>",
        "operationId": "postCompTypes",
        "parameters": [
          {
            "name": "compTypesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating CompTypes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/compTypesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "put": {
        "summary": "Operation to Change Comp Types.",
        "description": "Operation to Change Comp Types. <p><strong>OperationId:</strong>changeCompTypes</p>",
        "operationId": "changeCompTypes",
        "parameters": [
          {
            "name": "compTypesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Comp Types.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/compTypesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/compTypesStatus"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/compTypes/codes/{compTypesCode}": {
      "delete": {
        "summary": "Operation to Remove Comp Types.",
        "description": "Operation to Remove Comp Types. <p><strong>OperationId:</strong>removeCompTypes</p>",
        "operationId": "removeCompTypes",
        "parameters": [
          {
            "name": "compTypesCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Comp Types Code to be deleted."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/configBankAccounts": {
      "get": {
        "summary": "Operation to fetch config bank accounts.",
        "description": " <p><strong>OperationId:</strong>getConfigBankAccounts</p>",
        "operationId": "getConfigBankAccounts",
        "parameters": [
          {
            "name": "hotels",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "bankCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for fetching Bank Accounts",
            "schema": {
              "$ref": "#/definitions/bankAccountsInfo"
            }
          },
          "204": {
            "description": "ConfigBankAccounts not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      },
      "put": {
        "summary": "Operation to change config bank accounts.",
        "description": " <p><strong>OperationId:</strong>putConfigBankAccounts</p>",
        "operationId": "putConfigBankAccounts",
        "parameters": [
          {
            "name": "bankAccounts",
            "in": "body",
            "required": true,
            "description": "Request object to edit Bank Accounts",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/bankAccounts"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      },
      "delete": {
        "summary": "Operation to remove config bank accounts.",
        "description": " <p><strong>OperationId:</strong>deleteConfigBankAccounts</p>",
        "operationId": "deleteConfigBankAccounts",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Property of the bank account.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "bankAccountID",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Bank account ID.",
            "items": {
              "type": "number"
            },
            "required": true
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      },
      "post": {
        "summary": "Operation to create config bank accounts.",
        "description": " <p><strong>OperationId:</strong>postConfigBankAccounts</p>",
        "operationId": "postConfigBankAccounts",
        "parameters": [
          {
            "name": "bankAccounts",
            "in": "body",
            "required": true,
            "description": "Request object to create Bank Accounts",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/bankAccounts"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      }
    },
    "/contractBillingInstructions": {
      "get": {
        "summary": "Get Contract Billing Instructions",
        "description": "Use this API to get Contract Billing Instructions. <p><strong>OperationId:</strong>getContractBillingInstructions</p>",
        "operationId": "getContractBillingInstructions",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Contract Billing Instructions.",
            "schema": {
              "$ref": "#/definitions/contractBillingInstructionsDetails"
            }
          },
          "204": {
            "description": "ContractBillingInstructions not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create Contract Billing Instructions",
        "description": "Use this API to create Contract Billing Instructions. <p><strong>OperationId:</strong>postContractBillingInstructions</p>",
        "operationId": "postContractBillingInstructions",
        "parameters": [
          {
            "name": "contractBillingInstructionsCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Contract Billing Instructions.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/contractBillingInstructionsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/contractBillingInstructions/{contractBillingInstructionsId}": {
      "put": {
        "summary": "Change Contract Billing Instructions",
        "description": "Use this API to update Contract Billing Instructions. <p><strong>OperationId:</strong>putContractBillingInstructions</p>",
        "operationId": "putContractBillingInstructions",
        "parameters": [
          {
            "name": "contractBillingInstructionsId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of Contract Billing Instructions."
          },
          {
            "name": "contractBillingInstructionsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Contract Billing Instructions.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/contractBillingInstructionsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete Contract Billing Instructions",
        "description": "Use this API to delete Contract Billing Instructions. <p><strong>OperationId:</strong>deleteContractBillingInstructions</p>",
        "operationId": "deleteContractBillingInstructions",
        "parameters": [
          {
            "name": "contractBillingInstructionsId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of Contract Billing Instructions."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/creditCardInfo": {
      "get": {
        "summary": "Get credit card token information",
        "description": "Use this API to return the token inclusive cardType and expirationDate for the credit card used in a specific reservation. Oracle does not provide any credit card numbers. Include the hotelId and the cardId in the parameters. The cardId can be returned with the getReservation operation. <p><strong>OperationId:</strong>getCreditCardInfo</p>",
        "operationId": "getCreditCardInfo",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          },
          {
            "name": "reservationId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "idExtension",
            "in": "query",
            "required": false,
            "description": "Additional identifying value assigned by the creating system.",
            "type": "integer"
          },
          {
            "name": "idContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "cardId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "cardIdExtension",
            "in": "query",
            "required": false,
            "description": "Additional identifying value assigned by the creating system.",
            "type": "integer"
          },
          {
            "name": "cardIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "cardIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "accessTransactionType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Currently supported transaction type categories used for credit card authorization.",
            "uniqueItems": true,
            "enum": [
              "Additional",
              "ArPayment",
              "Batch",
              "BatchDeposit",
              "BatchDepositRefund",
              "Billing",
              "CheckIn",
              "CheckInManualAuth",
              "Deposit",
              "EndOfDay",
              "EndOfDayDeposit",
              "Manual",
              "Other",
              "PasserBy",
              "PostIt",
              "PreCheckIn",
              "Refund",
              "Scheduled"
            ]
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Respose for the fetch credit card information.",
            "schema": {
              "$ref": "#/definitions/creditCardInfo"
            }
          },
          "204": {
            "description": "CreditCardInfo not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CreditCard"
        ]
      }
    },
    "/creditCardTypes/validate": {
      "get": {
        "summary": "Operation to validate CreditCardType.",
        "description": " <p><strong>OperationId:</strong>validateCreditCardType</p>",
        "operationId": "validateCreditCardType",
        "parameters": [
          {
            "name": "reservationID",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "reservationIDIdExtension",
            "in": "query",
            "required": false,
            "description": "Additional identifying value assigned by the creating system.",
            "type": "integer"
          },
          {
            "name": "reservationIDIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "reservationIDType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "paymentMethodDescription",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "paymentMethodFolioView",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "paymentMethod",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "attachCreditCardToProfile",
            "in": "query",
            "required": false,
            "description": "Attach the credit card to profile.",
            "type": "boolean"
          },
          {
            "name": "cardHolderName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardNumberLast4Digits",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardNumberMasked",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardNumberType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Simple type for indicating if credit card number is tokenized.",
            "uniqueItems": true,
            "enum": [
              "CardNumber",
              "Token"
            ]
          },
          {
            "name": "cardType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
            "uniqueItems": true,
            "enum": [
              "Ab",
              "Am",
              "Ax",
              "Cb",
              "Dc",
              "Ds",
              "Dt",
              "Ec",
              "Er",
              "Jc",
              "Jl",
              "Mc",
              "Nb",
              "So",
              "St",
              "Sw",
              "Va",
              "Xy",
              "Zz",
              "Cp",
              "Cu"
            ]
          },
          {
            "name": "expirationDate",
            "in": "query",
            "required": false,
            "description": "Expiration date of the credit card",
            "type": "string",
            "format": "date"
          },
          {
            "name": "expirationDateExpired",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "expirationDateMasked",
            "in": "query",
            "required": false,
            "description": "Masked Expiration date of the credit card",
            "type": "string"
          },
          {
            "name": "processing",
            "in": "query",
            "required": false,
            "type": "string",
            "uniqueItems": true,
            "enum": [
              "Eft",
              "Manual"
            ]
          },
          {
            "name": "swiped",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "userDefinedCardType",
            "in": "query",
            "required": false,
            "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
            "type": "string"
          },
          {
            "name": "cardId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "cardIdExtension",
            "in": "query",
            "required": false,
            "description": "Additional identifying value assigned by the creating system.",
            "type": "integer"
          },
          {
            "name": "cardIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "cardIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "currentAuthorizedAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "currentAuthorizedAmountCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "approvalAmountNeeded",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "approvalAmountNeededCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "balanceAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "balanceCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "authorizationRuleCode",
            "in": "query",
            "required": false,
            "description": "The authorization rule code.",
            "type": "integer"
          },
          {
            "name": "authorizationRuleAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "authorizationRuleCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "authorizationRulePercent",
            "in": "query",
            "required": false,
            "description": "A percentage value if the authorization rule is percentage based.",
            "type": "number"
          },
          {
            "name": "emailFolio",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "emailFolioInfoId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "emailFolioInfoIDExtension",
            "in": "query",
            "required": false,
            "description": "Additional identifying value assigned by the creating system.",
            "type": "integer"
          },
          {
            "name": "emailFolioInfoIDContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "emailFolioInfoType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "emailFolioInfoCreateDateTime",
            "in": "query",
            "required": false,
            "description": "Time stamp of the creation.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "emailFolioInfoCreatorID",
            "in": "query",
            "required": false,
            "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
            "type": "string"
          },
          {
            "name": "emailFolioInfoEmailAddress",
            "in": "query",
            "required": false,
            "description": "Defines the e-mail address.",
            "type": "string"
          },
          {
            "name": "emailFolioInfoEmailFormat",
            "in": "query",
            "required": false,
            "description": "Supported Email format.",
            "type": "string",
            "uniqueItems": true,
            "enum": [
              "Html",
              "Text"
            ]
          },
          {
            "name": "emailFolioInfoLastModifierID",
            "in": "query",
            "required": false,
            "description": "Identifies the last software system or person to modify a record.",
            "type": "string"
          },
          {
            "name": "emailFolioInfoLastModifyDateTime",
            "in": "query",
            "required": false,
            "description": "Time stamp of last modification.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "emailFolioInfoOrderSequence",
            "in": "query",
            "required": false,
            "description": "Display Order sequence.",
            "type": "number"
          },
          {
            "name": "emailFolioInfoPrimaryInd",
            "in": "query",
            "required": false,
            "description": "When true, indicates a primary information.",
            "type": "boolean"
          },
          {
            "name": "emailFolioInfoPurgeDate",
            "in": "query",
            "required": false,
            "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
            "type": "string",
            "format": "date"
          },
          {
            "name": "emailEmailFolioInfoType",
            "in": "query",
            "required": false,
            "description": "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
            "type": "string"
          },
          {
            "name": "emailFolioInfoTypeDescription",
            "in": "query",
            "required": false,
            "description": "Describes the Type code",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "The result element from validating a credit card number against its vendor's format requirements.",
            "schema": {
              "$ref": "#/definitions/creditCardTypeValidationStatus"
            }
          },
          "204": {
            "description": "validateCreditCardType not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CreditCard"
        ]
      }
    },
    "/creditCards/decode": {
      "get": {
        "summary": "Operation to Decode Card.",
        "description": " <p><strong>OperationId:</strong>decodeCard</p>",
        "operationId": "decodeCard",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          },
          {
            "name": "trackData",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Used for Character Strings, length 0 to 200."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Respose for the decoded card information.",
            "schema": {
              "$ref": "#/definitions/decodedCard"
            }
          },
          "204": {
            "description": "decodeCard not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CreditCard"
        ]
      }
    },
    "/creditCards/readerDevices": {
      "get": {
        "summary": "Operation to fetch CreditCardReaderDevices.",
        "description": " <p><strong>OperationId:</strong>getCreditCardReaderDevices</p>",
        "operationId": "getCreditCardReaderDevices",
        "parameters": [
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for fetching list of supported credit card reader devices.",
            "schema": {
              "$ref": "#/definitions/creditCardReaderDevices"
            }
          },
          "204": {
            "description": "CreditCardReaderDevices not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CreditCard"
        ]
      }
    },
    "/creditCards/vaultedId": {
      "post": {
        "summary": "Operation to fetch CreditCardUniqueId.",
        "description": " <p><strong>OperationId:</strong>getCreditCardUniqueId</p>",
        "operationId": "getCreditCardUniqueId",
        "parameters": [
          {
            "name": "creditCardUniqueIdRQ",
            "in": "body",
            "required": true,
            "description": "Request for fetching credit card unique id.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/creditCardUniqueIdRQ"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response for fetching credit card unique id.",
            "schema": {
              "$ref": "#/definitions/creditCardUniqueId"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CreditCard"
        ]
      }
    },
    "/currencyExchangeServiceTaxes": {
      "put": {
        "summary": "Operation to change ExchangeServiceTaxes.",
        "description": "Operation to change currency exchange service taxes. <p><strong>OperationId:</strong>putCurrencyExchangeServiceTaxes</p>",
        "operationId": "putCurrencyExchangeServiceTaxes",
        "parameters": [
          {
            "name": "currencyExchangeServiceTaxes",
            "in": "body",
            "required": true,
            "description": "Request object for changing currency exchange service taxes",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/currencyExchangeServiceTaxes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create CurrencyExchangeServiceTaxes.",
        "description": "Operation to create currency exchange service taxes. <p><strong>OperationId:</strong>postCurrencyExchangeServiceTaxes</p>",
        "operationId": "postCurrencyExchangeServiceTaxes",
        "parameters": [
          {
            "name": "currencyExchangeServiceTaxes",
            "in": "body",
            "required": true,
            "description": "Request object for creating new currency exchange service taxes",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/currencyExchangeServiceTaxes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch CurrencyExchangeServiceTaxes.",
        "description": "Operation to fetch currency exchange service taxes. <p><strong>OperationId:</strong>getCurrencyExchangeServiceTaxes</p>",
        "operationId": "getCurrencyExchangeServiceTaxes",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for fetch currency exchange service taxes",
            "schema": {
              "$ref": "#/definitions/currencyExchangeServiceTaxes"
            }
          },
          "204": {
            "description": "CurrencyExchangeServiceTaxes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete CurrencyExchangeServiceTaxes.",
        "description": "Operation to remove currency exchange service taxes. <p><strong>OperationId:</strong>deleteCurrencyExchangeServiceTaxes</p>",
        "operationId": "deleteCurrencyExchangeServiceTaxes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Property associated with currency exchange service tax",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "currencyExchangeServiceTaxCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Currency exchange service tax code",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/customCharges/exemptions": {
      "get": {
        "summary": "Operation to fetch Custom Charge Exemptions Config.",
        "description": "You can use this API to fetch Custom Charge Exemptions Config. <p><strong>OperationId:</strong>getCustomChargeExemptions</p>",
        "operationId": "getCustomChargeExemptions",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "configurationId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "default": "false",
            "required": false,
            "description": "Indicator that tells whether to include inactive articles in search results.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Custom Charge Exemptions.",
            "schema": {
              "$ref": "#/definitions/customChargeExemptionsConfig"
            }
          },
          "204": {
            "description": "CustomChargeExemptions not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/customTaxTypes": {
      "get": {
        "summary": "Get Custom Tax Types",
        "description": "Use this API to get Custom Tax Types. <p><strong>OperationId:</strong>getCustomTaxTypes</p>",
        "operationId": "getCustomTaxTypes",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Custom Tax Types.",
            "schema": {
              "$ref": "#/definitions/customTaxTypesDetails"
            }
          },
          "204": {
            "description": "CustomTaxTypes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create Custom Tax Types",
        "description": "Use this API to create Custom Tax Types. <p><strong>OperationId:</strong>postCustomTaxTypes</p>",
        "operationId": "postCustomTaxTypes",
        "parameters": [
          {
            "name": "customTaxTypesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Custom Tax Types.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/customTaxTypesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/customTaxTypes/{taxTypeCode}": {
      "put": {
        "summary": "Change Custom Tax Types",
        "description": "Use this API to update Custom Tax Types. <p><strong>OperationId:</strong>changeCustomTaxTypes</p>",
        "operationId": "changeCustomTaxTypes",
        "parameters": [
          {
            "name": "taxTypeCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of Tax Types."
          },
          {
            "name": "customTaxTypesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Custom Tax Types.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/customTaxTypesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete Custom Tax Types",
        "description": "Use this API to delete Custom Tax Types. <p><strong>OperationId:</strong>removeCustomTaxTypes</p>",
        "operationId": "removeCustomTaxTypes",
        "parameters": [
          {
            "name": "taxTypeCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of Tax Types."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/dailyPlanCodes": {
      "put": {
        "summary": "Operation to change DailyPlanCodes.",
        "description": " <p><strong>OperationId:</strong>putDailyPlanCodes</p>",
        "operationId": "putDailyPlanCodes",
        "parameters": [
          {
            "name": "dailyPlanCodes",
            "in": "body",
            "required": true,
            "description": "Request object for changing daily plan codes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/dailyPlanCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch DailyPlanCodes.",
        "description": " <p><strong>OperationId:</strong>getDailyPlanCodes</p>",
        "operationId": "getDailyPlanCodes",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "includeTransactionCodes",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "A flag that determines whether or not to fetch associated transaction codes. Fetches only the arrangement codes when this flag is true.",
            "type": "boolean"
          },
          {
            "name": "arrangementCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching daily plan codes.",
            "schema": {
              "$ref": "#/definitions/dailyPlanCodes"
            }
          },
          "204": {
            "description": "DailyPlanCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/defaultPaymentMethodRules": {
      "get": {
        "summary": "Operation to fetch DefaultPaymentMethodRule.",
        "description": "Operation to fetch payment method rule. <p><strong>OperationId:</strong>getDefaultPaymentMethodRule</p> <p>The maximum allowable limit for this API is <strong>50</strong>.</p>",
        "operationId": "getDefaultPaymentMethodRule",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "transactionCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "paymentMethods",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple Type for payment method fetch instruction.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "CardRanges"
              ]
            },
            "x-example": [
              "CardRanges"
            ],
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for fetching default payment method rule.",
            "schema": {
              "$ref": "#/definitions/defaultPaymentMethodRule"
            }
          },
          "204": {
            "description": "DefaultPaymentMethodRule not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/exchangeRates": {
      "get": {
        "summary": "Operation to fetch ExchangeRates.",
        "description": "You can use this API to retrieve exchange rate information for a hotel. You can search by hotel, Currency Code and exchange types. Results can include past, current and future exchange rate information for a currency. <p><strong>OperationId:</strong>getExchangeRatesInfo</p>",
        "operationId": "getExchangeRatesInfo",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Property where exchange rate is set.",
            "type": "string"
          },
          {
            "name": "exchangeTypes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "E-certificate conversion.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Cash",
                "Settlement",
                "Posting",
                "Check",
                "TACommission",
                "Membership",
                "Certificate"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Collection of exchange rates and their information.",
            "schema": {
              "$ref": "#/definitions/exchangeRatesDetails"
            }
          },
          "204": {
            "description": "ExchangeRatesInfo not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "put": {
        "summary": "Operation to delete ExchangeRates.",
        "description": "Operation to Delete Exchange Rates. <p><strong>OperationId:</strong>deleteExchangeRates</p>",
        "operationId": "deleteExchangeRates",
        "parameters": [
          {
            "name": "exchangeRates",
            "in": "body",
            "required": true,
            "description": "Exchange Rates to be Set.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/exchangeRates"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/exchangeRates/set": {
      "put": {
        "summary": "Operation to set ExchangeRates.",
        "description": "The operation sets exchange rates. <p><strong>OperationId:</strong>setExchangeRates</p>",
        "operationId": "setExchangeRates",
        "parameters": [
          {
            "name": "exchangeRates",
            "in": "body",
            "required": true,
            "description": "Exchange Rates to be Set.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/exchangeRates"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/expenseArrangementCodes": {
      "put": {
        "summary": "Operation to change ExpenseArrangementCodes.",
        "description": " <p><strong>OperationId:</strong>putExpenseArrangementCodes</p>",
        "operationId": "putExpenseArrangementCodes",
        "parameters": [
          {
            "name": "expenseArrangementCodes",
            "in": "body",
            "required": true,
            "description": "Request object for changing expense arrangement codes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/expenseArrangementCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create ExpenseArrangementCodes.",
        "description": " <p><strong>OperationId:</strong>postExpenseArrangementCodes</p>",
        "operationId": "postExpenseArrangementCodes",
        "parameters": [
          {
            "name": "expenseArrangementCodes",
            "in": "body",
            "required": true,
            "description": "Request object for creating new expense arrangement codes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/expenseArrangementCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch ExpenseArrangementCodes.",
        "description": " <p><strong>OperationId:</strong>getExpenseArrangementCodes</p>",
        "operationId": "getExpenseArrangementCodes",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "includeTransactionCodes",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "A flag that determines whether or not to fetch associated transaction codes. Fetches only the arrangement codes when this flag is true.",
            "type": "boolean"
          },
          {
            "name": "arrangementCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching expense arrangement codes.",
            "schema": {
              "$ref": "#/definitions/expenseArrangementCodes"
            }
          },
          "204": {
            "description": "ExpenseArrangementCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete ExpenseArrangementCodes.",
        "description": " <p><strong>OperationId:</strong>deleteExpenseArrangementCodes</p>",
        "operationId": "deleteExpenseArrangementCodes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel where the code is configured.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/expenseArrangementCodes/copy": {
      "put": {
        "summary": "Operation to copy ExpenseArrangementCodes.",
        "description": " <p><strong>OperationId:</strong>copyExpenseArrangementCodes</p>",
        "operationId": "copyExpenseArrangementCodes",
        "parameters": [
          {
            "name": "expenseArrangementCodesCopy",
            "in": "body",
            "required": true,
            "description": "List of the expense arrangement codes to be copied.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/expenseArrangementCodesCopy"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/fiscalFolioParameters": {
      "put": {
        "summary": "Operation to change FiscalFolioParameters.",
        "description": "Operation to change Fiscal Folio Parameters. <p><strong>OperationId:</strong>putFiscalFolioParameters</p>",
        "operationId": "putFiscalFolioParameters",
        "parameters": [
          {
            "name": "fiscalFolioParameters",
            "in": "body",
            "required": true,
            "description": "Request object for changing existing Fiscal Folio Parameter Configurations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fiscalFolioParameters"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch FiscalFolioParameters.",
        "description": "Operation to fetch Fiscal Folio Parameters. <p><strong>OperationId:</strong>getFiscalFolioParameters</p>",
        "operationId": "getFiscalFolioParameters",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "internal",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Indicates whether the Fiscal Folio Parameter is user created or from seed data. Set this true to see the standard Fiscal Folio Parameters that are seeded along with the manually created Fiscal Folio Parameters.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Fiscal Folio Parameter configurations.",
            "schema": {
              "$ref": "#/definitions/fiscalFolioParameters"
            }
          },
          "204": {
            "description": "FiscalFolioParameters not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete FiscalFolioParameters.",
        "description": "Operation to remove Fiscal Folio Parameters. <p><strong>OperationId:</strong>deleteFiscalFolioParameters</p>",
        "operationId": "deleteFiscalFolioParameters",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Code of the Hotel.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "partner",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Fiscal folio parameter associated with Partner.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Code of the Fiscal Folio Parameter.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/fiscalGuestTypes": {
      "get": {
        "summary": "Get Fiscal Guest Types",
        "description": "Use this API to get Fiscal Guest Types. <p><strong>OperationId:</strong>getFiscalGuestTypes</p>",
        "operationId": "getFiscalGuestTypes",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Fiscal Guest Types.",
            "schema": {
              "$ref": "#/definitions/fiscalGuestTypesDetails"
            }
          },
          "204": {
            "description": "FiscalGuestTypes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create Fiscal Guest Types",
        "description": "Use this API to create Fiscal Guest Types. <p><strong>OperationId:</strong>postFiscalGuestTypes</p>",
        "operationId": "postFiscalGuestTypes",
        "parameters": [
          {
            "name": "fiscalGuestTypesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Fiscal Guest Types.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fiscalGuestTypesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/fiscalGuestTypes/{fiscalGuestTypeCode}": {
      "put": {
        "summary": "Change Fiscal Guest Types",
        "description": "Use this API to update Fiscal Guest Types. <p><strong>OperationId:</strong>changeFiscalGuestTypes</p>",
        "operationId": "changeFiscalGuestTypes",
        "parameters": [
          {
            "name": "fiscalGuestTypeCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of Fiscal Guest Types."
          },
          {
            "name": "fiscalGuestTypesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Fiscal Guest Types.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fiscalGuestTypesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete Fiscal Guest Types",
        "description": "Use this API to delete Fiscal Guest Types. <p><strong>OperationId:</strong>removeFiscalGuestTypes</p>",
        "operationId": "removeFiscalGuestTypes",
        "parameters": [
          {
            "name": "fiscalGuestTypeCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of Fiscal Guest Types."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/fiscalPeriods": {
      "put": {
        "summary": "Operation to change FiscalPeriods.",
        "description": "Operation to change Fiscal Periods. <p><strong>OperationId:</strong>putFiscalPeriods</p>",
        "operationId": "putFiscalPeriods",
        "parameters": [
          {
            "name": "fiscalPeriodsEdit",
            "in": "body",
            "required": true,
            "description": "Request object to edit Fiscal Periods",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fiscalPeriodsEdit"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create FiscalPeriods.",
        "description": "Operation to create Fiscal Periods. <p><strong>OperationId:</strong>postFiscalPeriods</p>",
        "operationId": "postFiscalPeriods",
        "parameters": [
          {
            "name": "fiscalPeriods",
            "in": "body",
            "required": true,
            "description": "Request object to create Fiscal Periods",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fiscalPeriods"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch FiscalPeriods.",
        "description": "Operation to fetch Fiscal Periods. <p><strong>OperationId:</strong>getFiscalPeriods</p>",
        "operationId": "getFiscalPeriods",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": true,
            "description": "Resort for which the Period is defined.",
            "type": "string"
          },
          {
            "name": "year",
            "in": "query",
            "required": false,
            "description": "Year to search for.",
            "type": "number"
          },
          {
            "name": "periodType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Defined Values for Fiscal Year Type.",
            "uniqueItems": true,
            "enum": [
              "Calendar",
              "Fiscal"
            ]
          },
          {
            "name": "period",
            "in": "query",
            "required": false,
            "description": "Period to search.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for fetching Fiscal Periods",
            "schema": {
              "$ref": "#/definitions/fiscalPeriodsInfo"
            }
          },
          "204": {
            "description": "FiscalPeriods not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete FiscalPeriods.",
        "description": "Operation to remove Fiscal Periods. <p><strong>OperationId:</strong>deleteFiscalPeriods</p>",
        "operationId": "deleteFiscalPeriods",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Resort for which the Period is defined.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "yearId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Id of the Year.",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "startDate",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Start Date of the Period",
            "items": {
              "type": "string",
              "format": "date"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/fiscalRegions": {
      "get": {
        "summary": "Get Fiscal Regions",
        "description": "Use this API to get Fiscal Regions. <p><strong>OperationId:</strong>getFiscalRegions</p>",
        "operationId": "getFiscalRegions",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Fiscal Regions.",
            "schema": {
              "$ref": "#/definitions/fiscalRegionsDetails"
            }
          },
          "204": {
            "description": "FiscalRegions not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create Fiscal Regions",
        "description": "Use this API to create Fiscal Regions. <p><strong>OperationId:</strong>postFiscalRegions</p>",
        "operationId": "postFiscalRegions",
        "parameters": [
          {
            "name": "fiscalRegionsCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Fiscal Regions.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fiscalRegionsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/fiscalRegions/{regionCode}": {
      "put": {
        "summary": "Change Fiscal Regions",
        "description": "Use this API to update Fiscal Regions. <p><strong>OperationId:</strong>changeFiscalRegions</p>",
        "operationId": "changeFiscalRegions",
        "parameters": [
          {
            "name": "regionCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of Region."
          },
          {
            "name": "fiscalRegionsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Fiscal Regions.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fiscalRegionsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete Fiscal Regions",
        "description": "Use this API to delete Fiscal Regions. <p><strong>OperationId:</strong>removeFiscalRegions</p>",
        "operationId": "removeFiscalRegions",
        "parameters": [
          {
            "name": "regionCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of Region."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/fiscalYears": {
      "put": {
        "summary": "Operation to change FiscalYears.",
        "description": "Operation to change Fiscal Years. <p><strong>OperationId:</strong>putFiscalYears</p>",
        "operationId": "putFiscalYears",
        "parameters": [
          {
            "name": "fiscalYears",
            "in": "body",
            "required": true,
            "description": "Request object to edit Fiscal Years",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fiscalYears"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create FiscalYears.",
        "description": "Operation to create Fiscal Years. <p><strong>OperationId:</strong>postFiscalYears</p>",
        "operationId": "postFiscalYears",
        "parameters": [
          {
            "name": "fiscalYears",
            "in": "body",
            "required": true,
            "description": "Request object to create Fiscal Years",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fiscalYears"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch FiscalYears.",
        "description": "Operation to fetch Fiscal Years. <p><strong>OperationId:</strong>getFiscalYears</p>",
        "operationId": "getFiscalYears",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": true,
            "description": "Search all years for this Resort.",
            "type": "string"
          },
          {
            "name": "year",
            "in": "query",
            "required": false,
            "description": "Year to Search.",
            "type": "number"
          },
          {
            "name": "yearType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Defined Values for Fiscal Year Type.",
            "uniqueItems": true,
            "enum": [
              "Calendar",
              "Fiscal"
            ]
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for fetching Fiscal Years",
            "schema": {
              "$ref": "#/definitions/fiscalYears"
            }
          },
          "204": {
            "description": "FiscalYears not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete FiscalYears.",
        "description": "Operation to remove Fiscal Years. <p><strong>OperationId:</strong>deleteFiscalYears</p>",
        "operationId": "deleteFiscalYears",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Resort for which the Year is defined.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "yearId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique id of the Year.",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/flaggedReasons": {
      "get": {
        "summary": "Operation to fetch AR flagged reasons.",
        "description": " <p><strong>OperationId:</strong>getARFlaggedReasons</p>",
        "operationId": "getARFlaggedReasons",
        "parameters": [
          {
            "name": "reasonCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "reasonWildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description text set to the search criteria",
            "type": "string"
          },
          {
            "name": "propertyCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "propertyWildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for fetching Flagged Reasons.",
            "schema": {
              "$ref": "#/definitions/arFlaggedReasons"
            }
          },
          "204": {
            "description": "ARFlaggedReasons not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivablesConfig"
        ]
      },
      "put": {
        "summary": "Operation to change AR flagged reasons.",
        "description": " <p><strong>OperationId:</strong>putARFlaggedReasons</p>",
        "operationId": "putARFlaggedReasons",
        "parameters": [
          {
            "name": "arFlaggedReasons",
            "in": "body",
            "required": true,
            "description": "Request object to edit Flagged Reasons.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/arFlaggedReasons"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivablesConfig"
        ]
      },
      "post": {
        "summary": "Operation to create AR flagged reasons.",
        "description": " <p><strong>OperationId:</strong>postARFlaggedReasons</p>",
        "operationId": "postARFlaggedReasons",
        "parameters": [
          {
            "name": "arFlaggedReasons",
            "in": "body",
            "required": true,
            "description": "Request object to create Flagged Reason",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/arFlaggedReasons"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivablesConfig"
        ]
      },
      "delete": {
        "summary": "Operation to remove AR flagged reasons.",
        "description": " <p><strong>OperationId:</strong>deleteARFlaggedReasons</p>",
        "operationId": "deleteARFlaggedReasons",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel where the code is configured.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivablesConfig"
        ]
      }
    },
    "/folioArrangementCodes": {
      "put": {
        "summary": "Operation to change FolioArrangementCodes.",
        "description": " <p><strong>OperationId:</strong>putFolioArrangementCodes</p>",
        "operationId": "putFolioArrangementCodes",
        "parameters": [
          {
            "name": "folioArrangementCodes",
            "in": "body",
            "required": true,
            "description": "Request object for changing folio arrangement codes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/folioArrangementCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create FolioArrangementCodes.",
        "description": " <p><strong>OperationId:</strong>postFolioArrangementCodes</p>",
        "operationId": "postFolioArrangementCodes",
        "parameters": [
          {
            "name": "folioArrangementCodes",
            "in": "body",
            "required": true,
            "description": "Request object for creating new folio arrangement codes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/folioArrangementCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch FolioArrangementCodes.",
        "description": " <p><strong>OperationId:</strong>getFolioArrangementCodes</p>",
        "operationId": "getFolioArrangementCodes",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "includeTransactionCodes",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "A flag that determines whether or not to fetch associated transaction codes. Fetches only the arrangement codes when this flag is true.",
            "type": "boolean"
          },
          {
            "name": "arrangementCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching folio arrangement codes.",
            "schema": {
              "$ref": "#/definitions/folioArrangementCodes"
            }
          },
          "204": {
            "description": "FolioArrangementCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete FolioArrangementCodes.",
        "description": " <p><strong>OperationId:</strong>deleteFolioArrangementCodes</p>",
        "operationId": "deleteFolioArrangementCodes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel where the code is configured.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/folioArrangementCodes/copy": {
      "put": {
        "summary": "Operation to copy FolioArrangementCodes.",
        "description": " <p><strong>OperationId:</strong>copyFolioArrangementCodes</p>",
        "operationId": "copyFolioArrangementCodes",
        "parameters": [
          {
            "name": "folioArrangementCodesCopy",
            "in": "body",
            "required": true,
            "description": "List of folio arrangement codes to be copied.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/folioArrangementCodesCopy"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/folioCopyLegends": {
      "put": {
        "summary": "Operation to change FolioCopyLegends.",
        "description": "Operation to change folio copy legends information <p><strong>OperationId:</strong>putFolioCopyLegends</p>",
        "operationId": "putFolioCopyLegends",
        "parameters": [
          {
            "name": "folioCopyLegend",
            "in": "body",
            "required": true,
            "description": "Request object to edit description of folio copy legends",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/folioCopyLegend"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch FolioCopyLegends.",
        "description": "Operation to fetch folio copy legends. <p><strong>OperationId:</strong>getFolioCopyLegends</p>",
        "operationId": "getFolioCopyLegends",
        "parameters": [
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "languageCode",
            "in": "query",
            "required": false,
            "description": "Language code to be searched.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetch folio copy legend",
            "schema": {
              "$ref": "#/definitions/folioCopyLegends"
            }
          },
          "204": {
            "description": "FolioCopyLegends not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/folioPrintQueues": {
      "put": {
        "summary": "Operation to change FolioPrintQueues.",
        "description": "Operation to change folio print queues. <p><strong>OperationId:</strong>putFolioPrintQueues</p>",
        "operationId": "putFolioPrintQueues",
        "parameters": [
          {
            "name": "folioPrintQueues",
            "in": "body",
            "required": true,
            "description": "Request object for changing folio print queues",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/folioPrintQueues"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create FolioPrintQueues.",
        "description": "Operation to create folio print queues. <p><strong>OperationId:</strong>postFolioPrintQueues</p>",
        "operationId": "postFolioPrintQueues",
        "parameters": [
          {
            "name": "folioPrintQueues",
            "in": "body",
            "required": true,
            "description": "Request object for creating new folio print queues",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/folioPrintQueues"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch FolioPrintQueues.",
        "description": "Operation to folio fetch print queues. <p><strong>OperationId:</strong>getFolioPrintQueues</p>",
        "operationId": "getFolioPrintQueues",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": true,
            "description": "Property to be searched for",
            "type": "string"
          },
          {
            "name": "fetchInactive",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Determines whether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "queueName",
            "in": "query",
            "required": false,
            "description": "Queue name to be searched for",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for fetch folio print queues",
            "schema": {
              "$ref": "#/definitions/folioPrintQueues"
            }
          },
          "204": {
            "description": "FolioPrintQueues not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete FolioPrintQueues.",
        "description": "Operation to remove folio print queues. <p><strong>OperationId:</strong>deleteFolioPrintQueues</p>",
        "operationId": "deleteFolioPrintQueues",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Property associated with folio print queue",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "queueName",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Folio print queue name",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/folioTypeLegendMappings": {
      "get": {
        "summary": "Operation to fetch folio type legend mappings config.",
        "description": "Operation to fetch folio type legend mappings config. <p><strong>OperationId:</strong>getFolioTypeLegendMappingsConfig</p>",
        "operationId": "getFolioTypeLegendMappingsConfig",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": true,
            "description": "Property associated with folio type legend mapping",
            "type": "string"
          },
          {
            "name": "legendCode",
            "in": "query",
            "required": true,
            "description": "Legend code to which folio types attached.",
            "type": "string"
          },
          {
            "name": "folioType",
            "in": "query",
            "required": false,
            "description": "Folio type to be searched.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetch folio type legend mapping.",
            "schema": {
              "$ref": "#/definitions/folioTypeLegendMappingsConfigDetails"
            }
          },
          "204": {
            "description": "FolioTypeLegendMappingsConfig not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create folio type legend mappings config.",
        "description": "Operation to create folio type legend mappings config. <p><strong>OperationId:</strong>postFolioTypeLegendMappingConfig</p>",
        "operationId": "postFolioTypeLegendMappingConfig",
        "parameters": [
          {
            "name": "folioTypeLegendMappingConfigCriteria",
            "in": "body",
            "required": true,
            "description": "Request object to create folio type legend mapping information.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/folioTypeLegendMappingConfigCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "put": {
        "summary": "Operation to change folio type legend mappings config.",
        "description": "Operation to change folio type legend mappings config. <p><strong>OperationId:</strong>changeFolioTypeLegendMappingConfig</p>",
        "operationId": "changeFolioTypeLegendMappingConfig",
        "parameters": [
          {
            "name": "folioTypeLegendMappingConfigToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object to edit folio type legend mapping information.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/folioTypeLegendMappingConfigToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/folioTypeLegendMappingConfigStatus"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/folioTypesConfig": {
      "put": {
        "summary": "Operation to change FolioTypesConfig.",
        "description": "Operation to change Folio Type Names. <p><strong>OperationId:</strong>putFolioTypesConfig</p>",
        "operationId": "putFolioTypesConfig",
        "parameters": [
          {
            "name": "folioTypesConfig",
            "in": "body",
            "required": true,
            "description": "Request object to change Folio Type Names.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/folioTypesConfig"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create FolioTypesConfig.",
        "description": "Operation to Create Folio Type Names. <p><strong>OperationId:</strong>postFolioTypesConfig</p>",
        "operationId": "postFolioTypesConfig",
        "parameters": [
          {
            "name": "folioTypesConfig",
            "in": "body",
            "required": true,
            "description": "Request object to create Folio Type Name.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/folioTypesConfig"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch FolioTypesConfig.",
        "description": "Operation to fetch Folio Type Names. <p><strong>OperationId:</strong>getFolioTypesConfig</p>",
        "operationId": "getFolioTypesConfig",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": true,
            "description": "Folio Type Names belong to Hotels.",
            "type": "string"
          },
          {
            "name": "folioTypeNamesCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "taxTypeCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Folio Type Names.",
            "schema": {
              "$ref": "#/definitions/folioTypesConfig"
            }
          },
          "204": {
            "description": "FolioTypesConfig not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete FolioTypesConfig.",
        "description": "Operation to remove Folio Type Names. <p><strong>OperationId:</strong>deleteFolioTypesConfig</p>",
        "operationId": "deleteFolioTypesConfig",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel where the code is configured.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/foreignCurrencies": {
      "put": {
        "summary": "Operation to change ForeignCurrencies.",
        "description": "Operation to change Foreign Currencies. <p><strong>OperationId:</strong>putForeignCurrencies</p>",
        "operationId": "putForeignCurrencies",
        "parameters": [
          {
            "name": "foreignCurrencies",
            "in": "body",
            "required": true,
            "description": "Request object to edit Foreign Currencies",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/foreignCurrencies"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create ForeignCurrencies.",
        "description": "Operation to create Foreign Currencies. <p><strong>OperationId:</strong>postForeignCurrencies</p>",
        "operationId": "postForeignCurrencies",
        "parameters": [
          {
            "name": "foreignCurrencies",
            "in": "body",
            "required": true,
            "description": "Request object to create Foreign Currencies",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/foreignCurrencies"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch ForeignCurrencies.",
        "description": "Operation to fetch Foreign Currencies. <p><strong>OperationId:</strong>getForeignCurrencies</p>",
        "operationId": "getForeignCurrencies",
        "parameters": [
          {
            "name": "currencies",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "x-example": [
              "USD"
            ],
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description text set to the search criteria",
            "type": "string"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Inactive flag used to include/exclude inactive foreign currencies from the search result",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for fetching Foreign Currencies",
            "schema": {
              "$ref": "#/definitions/foreignCurrencies"
            }
          },
          "204": {
            "description": "ForeignCurrencies not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete ForeignCurrencies.",
        "description": "Operation to remove Foreign Currencies. <p><strong>OperationId:</strong>deleteForeignCurrencies</p>",
        "operationId": "deleteForeignCurrencies",
        "parameters": [
          {
            "name": "currencyCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/generates": {
      "put": {
        "summary": "Put transaction generates",
        "description": "Use this API to update transaction generates for a specific property.<p><strong>OperationId:</strong>putTransactionGenerates</p>",
        "operationId": "putTransactionGenerates",
        "parameters": [
          {
            "name": "hotelTransactionGenerates",
            "in": "body",
            "required": true,
            "description": "Request to change transaction generates.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelTransactionGenerates"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Post transaction generates",
        "description": "Use this API to create transaction generates for a specific property.  Generates are rules used to calculate and post additional charges, such as service charges and taxes, when a particular sales charge transaction code is posted to guest, package or AR ledgers.<p><strong>OperationId:</strong>postTransactionGenerates</p>",
        "operationId": "postTransactionGenerates",
        "parameters": [
          {
            "name": "hotelTransactionGenerates",
            "in": "body",
            "required": true,
            "description": "Request to create transaction generates.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelTransactionGenerates"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/generatesInfoType"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/globalExchangeRates": {
      "get": {
        "summary": "Operation to fetch GlobalExchangeRates.",
        "description": "You can use this API to retrieve global exchange rate information for a chain. You can search by Currency Code and exchange types. Results can include past, current and future exchange rate information for a currency. <p><strong>OperationId:</strong>getGlobalExchangeRatesInfo</p>",
        "operationId": "getGlobalExchangeRatesInfo",
        "parameters": [
          {
            "name": "exchangeTypes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "E-certificate conversion.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Membership"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Collection of global exchange rates and their information.",
            "schema": {
              "$ref": "#/definitions/exchangeRatesDetails"
            }
          },
          "204": {
            "description": "GlobalExchangeRatesInfo not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "put": {
        "summary": "Operation to delete GlobalExchangeRates.",
        "description": "Operation to Delete Global Exchange Rates. <p><strong>OperationId:</strong>deleteGlobalExchangeRates</p>",
        "operationId": "deleteGlobalExchangeRates",
        "parameters": [
          {
            "name": "exchangeRates",
            "in": "body",
            "required": true,
            "description": "Global Exchange Rates to be Set.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/exchangeRates"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/globalExchangeRates/set": {
      "put": {
        "summary": "Operation to set GlobalExchangeRates.",
        "description": "The operation sets global exchange rates. <p><strong>OperationId:</strong>setGlobalExchangeRates</p>",
        "operationId": "setGlobalExchangeRates",
        "parameters": [
          {
            "name": "exchangeRates",
            "in": "body",
            "required": true,
            "description": "Exchange Rates to be Set.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/exchangeRates"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/groupArrangementCodes": {
      "put": {
        "summary": "Operation to change GroupArrangementCodes.",
        "description": " <p><strong>OperationId:</strong>putGroupArrangementCodes</p>",
        "operationId": "putGroupArrangementCodes",
        "parameters": [
          {
            "name": "groupArrangementCodes",
            "in": "body",
            "required": true,
            "description": "Request object for changing group arrangement codes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/groupArrangementCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create GroupArrangementCodes.",
        "description": " <p><strong>OperationId:</strong>postGroupArrangementCodes</p>",
        "operationId": "postGroupArrangementCodes",
        "parameters": [
          {
            "name": "groupArrangementCodes",
            "in": "body",
            "required": true,
            "description": "Request object for creating new group arrangement codes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/groupArrangementCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to create GroupArrangementCodes.",
        "description": " <p><strong>OperationId:</strong>getGroupArrangementCodes</p>",
        "operationId": "getGroupArrangementCodes",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "includeTransactionCodes",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "A flag that determines whether or not to fetch associated transaction codes. Fetches only the arrangement codes when this flag is true.",
            "type": "boolean"
          },
          {
            "name": "arrangementCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching group arrangement codes.",
            "schema": {
              "$ref": "#/definitions/groupArrangementCodes"
            }
          },
          "204": {
            "description": "GroupArrangementCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete GroupArrangementCodes.",
        "description": " <p><strong>OperationId:</strong>deleteGroupArrangementCodes</p>",
        "operationId": "deleteGroupArrangementCodes",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel where the code is configured.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/groupArrangementCodes/copy": {
      "put": {
        "summary": "Operation to copy GroupArrangementCodes.",
        "description": " <p><strong>OperationId:</strong>copyGroupArrangementCodes</p>",
        "operationId": "copyGroupArrangementCodes",
        "parameters": [
          {
            "name": "groupArrangementCodesCopy",
            "in": "body",
            "required": true,
            "description": "List of the group arrangement codes to be copied.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/groupArrangementCodesCopy"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/guiNumberRules": {
      "put": {
        "summary": "Operation to change GUINumberRules.",
        "description": "Operation to change GUI Number rules <p><strong>OperationId:</strong>putGUINumberRules</p>",
        "operationId": "putGUINumberRules",
        "parameters": [
          {
            "name": "gUINumberRulesDetails",
            "in": "body",
            "required": true,
            "description": "Request object to edit GUI number rules.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/gUINumberRulesDetails"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch GUINumberRules.",
        "description": "Operation to fetch GUI Number rules <p><strong>OperationId:</strong>getGUINumberRules</p>",
        "operationId": "getGUINumberRules",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetch GUI number rules",
            "schema": {
              "$ref": "#/definitions/gUINumberRulesDetails"
            }
          },
          "204": {
            "description": "GUINumberRules not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotelAdjustmentCodes": {
      "put": {
        "summary": "Operation to change AdjustmentCodes.",
        "description": "Operation to change Adjustment Codes. <p><strong>OperationId:</strong>putAdjustmentCodes</p>",
        "operationId": "putAdjustmentCodes",
        "parameters": [
          {
            "name": "adjustmentCodes",
            "in": "body",
            "required": true,
            "description": "Request object for changing existing Adjustment Code Configurations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/adjustmentCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create AdjustmentCodes.",
        "description": "Operation to create Adjustment Codes. <p><strong>OperationId:</strong>postAdjustmentCodes</p>",
        "operationId": "postAdjustmentCodes",
        "parameters": [
          {
            "name": "adjustmentCodes",
            "in": "body",
            "required": true,
            "description": "Request object for creating new Adjustment Code Configurations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/adjustmentCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch AdjustmentCodes.",
        "description": "Operation to fetch Adjustment Codes. <p><strong>OperationId:</strong>getAdjustmentCodes</p>",
        "operationId": "getAdjustmentCodes",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "adjustmentCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Adjustment Code configurations.",
            "schema": {
              "$ref": "#/definitions/adjustmentCodes"
            }
          },
          "204": {
            "description": "AdjustmentCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete AdjustmentCodes.",
        "description": "Operation to remove Adjustment Codes. <p><strong>OperationId:</strong>deleteAdjustmentCodes</p>",
        "operationId": "deleteAdjustmentCodes",
        "parameters": [
          {
            "name": "adjustmentCode",
            "in": "query",
            "required": false,
            "description": "Configuration code.",
            "type": "string"
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Hotel where the code is configured.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotelAdjustmentCodes/copy": {
      "put": {
        "summary": "Operation to copy AdjustmentCodes.",
        "description": "Operation to copy Adjustment Codes. <p><strong>OperationId:</strong>copyAdjustmentCodes</p>",
        "operationId": "copyAdjustmentCodes",
        "parameters": [
          {
            "name": "adjustmentCodesCopy",
            "in": "body",
            "required": true,
            "description": "List of the Adjustment Codes to be copied.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/adjustmentCodesCopy"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotelPaymentMethods": {
      "put": {
        "summary": "Operation to change PaymentMethods.",
        "description": "Operation to change payment methods. <p><strong>OperationId:</strong>putPaymentMethods</p>",
        "operationId": "putPaymentMethods",
        "parameters": [
          {
            "name": "paymentMethods",
            "in": "body",
            "required": true,
            "description": "Request to change payment methods.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/paymentMethods"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create PaymentMethods.",
        "description": "Operation to create payment methods. <p><strong>OperationId:</strong>postPaymentMethods</p>",
        "operationId": "postPaymentMethods",
        "parameters": [
          {
            "name": "paymentMethods",
            "in": "body",
            "required": true,
            "description": "Request to create payment methods.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/paymentMethods"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch PaymentMethods.",
        "description": "Operation to fetch payment methods. <p><strong>OperationId:</strong>getPaymentMethods</p>",
        "operationId": "getPaymentMethods",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "transactionCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "paymentMethods",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple Type for payment method fetch instruction.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "CardRanges"
              ]
            },
            "x-example": [
              "CardRanges"
            ],
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for fetching payment methods.",
            "schema": {
              "$ref": "#/definitions/paymentMethodsInfo"
            }
          },
          "204": {
            "description": "PaymentMethods not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotelPaymentMethods/copy": {
      "put": {
        "summary": "Operation to copy PaymentMethods.",
        "description": "Operation to copy payment methods. <p><strong>OperationId:</strong>copyPaymentMethods</p>",
        "operationId": "copyPaymentMethods",
        "parameters": [
          {
            "name": "paymentMethodsCopy",
            "in": "body",
            "required": true,
            "description": "List of payment methods to be copied.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/paymentMethodsCopy"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotelTaxTypes": {
      "put": {
        "summary": "Operation to change TaxTypes.",
        "description": "Operation to change Tax Types. <p><strong>OperationId:</strong>putTaxTypes</p>",
        "operationId": "putTaxTypes",
        "parameters": [
          {
            "name": "taxTypes",
            "in": "body",
            "required": true,
            "description": "Request object for changing existing Tax Type Configurations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/taxTypes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create TaxTypes.",
        "description": "Operation to create Tax Types. <p><strong>OperationId:</strong>postTaxTypes</p>",
        "operationId": "postTaxTypes",
        "parameters": [
          {
            "name": "taxTypes",
            "in": "body",
            "required": true,
            "description": "Request object for creating new Tax Type Configurations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/taxTypes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch TaxTypes.",
        "description": "Operation to fetch Tax Types. <p><strong>OperationId:</strong>getTaxTypes</p>",
        "operationId": "getTaxTypes",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "taxTypeCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Tax Type configurations.",
            "schema": {
              "$ref": "#/definitions/taxTypes"
            }
          },
          "204": {
            "description": "TaxTypes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete TaxTypes.",
        "description": "Operation to remove Tax Types. <p><strong>OperationId:</strong>deleteTaxTypes</p>",
        "operationId": "deleteTaxTypes",
        "parameters": [
          {
            "name": "taxTypeCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel where the code is configured.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotelTaxTypes/copy": {
      "put": {
        "summary": "Operation to copy TaxTypes.",
        "description": "Operation to copy Tax Types. <p><strong>OperationId:</strong>copyTaxTypes</p>",
        "operationId": "copyTaxTypes",
        "parameters": [
          {
            "name": "taxTypesCopy",
            "in": "body",
            "required": true,
            "description": "List of the Tax Types to be copied.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/taxTypesCopy"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotelVouchersConfig/copy": {
      "put": {
        "summary": "Operation to copy Vouchers Config.",
        "description": "Operation to copy Vouchers Config. <p><strong>OperationId:</strong>copyVouchersConfig</p>",
        "operationId": "copyVouchersConfig",
        "parameters": [
          {
            "name": "copyVouchersConfig",
            "in": "body",
            "required": true,
            "description": "List of the Membership Type of Vouchers Config to be copied.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/vouchersConfigCopy"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{hotelId}/ARAccountTypes": {
      "get": {
        "summary": "Operation to fetch AR account types.",
        "description": "Operation to fetch account types. <p><strong>OperationId:</strong>getARAccountTypes</p>",
        "operationId": "getARAccountTypes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "accountType",
            "in": "query",
            "required": false,
            "description": "Account receivable account type",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Full description of account type",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for fetch account types",
            "schema": {
              "$ref": "#/definitions/arAccountTypes"
            }
          },
          "204": {
            "description": "ARAccountTypes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivablesConfig"
        ]
      }
    },
    "/hotels/{hotelId}/cashierShifts/dropLocations": {
      "get": {
        "summary": "Get Cashier Shift Drop Locations",
        "description": "Use this API to get Cashier Shift Drop Locations. <p><strong>OperationId:</strong>getCashierShiftDropLocations</p>",
        "operationId": "getCashierShiftDropLocations",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Cashier Shift Drop Locations.",
            "schema": {
              "$ref": "#/definitions/cashierShiftDropLocationsDetails"
            }
          },
          "204": {
            "description": "CashierShiftDropLocations not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create Cashier Shift Drop Locations",
        "description": "Use this API to create Cashier Shift Drop Locations. <p><strong>OperationId:</strong>postCashierShiftDropLocations</p>",
        "operationId": "postCashierShiftDropLocations",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "cashierShiftDropLocationsCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Cashier Shift Drop Locations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/cashierShiftDropLocationsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/hotels/{hotelId}/cashierShifts/dropLocations/{dropLocationId}": {
      "put": {
        "summary": "Change Cashier Shift Drop Locations",
        "description": "Use this API to update Cashier Shift Drop Locations. <p><strong>OperationId:</strong>changeCashierShiftDropLocations</p>",
        "operationId": "changeCashierShiftDropLocations",
        "parameters": [
          {
            "name": "dropLocationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of drop location."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "cashierShiftDropLocationsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Cashier Shift Drop Locations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/cashierShiftDropLocationsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete Cashier Shift Drop Locations",
        "description": "Use this API to delete Cashier Shift Drop Locations. <p><strong>OperationId:</strong>removeCashierShiftDropLocations</p>",
        "operationId": "removeCashierShiftDropLocations",
        "parameters": [
          {
            "name": "dropLocationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of drop location."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/hotels/{hotelId}/commissionCode/{commissionCode}": {
      "get": {
        "summary": "Operation to fetch commission code.",
        "description": " <p><strong>OperationId:</strong>getCommissionCode</p>",
        "operationId": "getCommissionCode",
        "parameters": [
          {
            "name": "commissionCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Commission Code in OPERA"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching commission code details.",
            "schema": {
              "$ref": "#/definitions/commissionCodeDetail"
            }
          },
          "204": {
            "description": "CommissionCode not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      }
    },
    "/hotels/{hotelId}/compAuthorizers": {
      "get": {
        "summary": "Operation to fetch CompAuthorizers.",
        "description": "Operation to fetch Authorizer Groups. <p><strong>OperationId:</strong>getCompAuthorizers</p>",
        "operationId": "getCompAuthorizers",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "includeCompAuthorizerDetails",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Configuring this flag to be TRUE will return the details of the comp authorizers.",
            "type": "boolean"
          },
          {
            "name": "includeInactiveAuthorizers",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Configuring this flag to be TRUE will return also the inactive authorizers.",
            "type": "boolean"
          },
          {
            "name": "includeTerminatedAuthorizers",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Configuring this flag to be TRUE will return the terminated authorizers.",
            "type": "boolean"
          },
          {
            "name": "authorizer",
            "in": "query",
            "required": false,
            "description": "Name for the authorizer.",
            "type": "string"
          },
          {
            "name": "firstName",
            "in": "query",
            "required": false,
            "description": "First name for the authorizer.",
            "type": "string"
          },
          {
            "name": "lastName",
            "in": "query",
            "required": false,
            "description": "Last name for the authorizer.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Returns all information about the comp authorizers.",
            "schema": {
              "$ref": "#/definitions/compAuthorizers"
            }
          },
          "204": {
            "description": "CompAuthorizers not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{hotelId}/compBucket/redemption": {
      "get": {
        "summary": "Operation to fetch Comp Bucket Redemption Codes.",
        "description": "You can use this API to fetch Comp Bucket Redemption Codes. <p><strong>OperationId:</strong>getCompBucketRedemptionCodes</p>",
        "operationId": "getCompBucketRedemptionCodes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "redemptionCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Comp Bucket Redemption Codes configurations.",
            "schema": {
              "$ref": "#/definitions/compBucketRedemptionConfigDetails"
            }
          },
          "204": {
            "description": "CompBucketRedemptionCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create Comp Bucket Redemption Codes.",
        "description": "Operation to create Comp Bucket Redemption Codes. <p><strong>OperationId:</strong>postCompBucketRedemptionConfig</p>",
        "operationId": "postCompBucketRedemptionConfig",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "compBucketRedemptionConfig",
            "in": "body",
            "required": true,
            "description": "Request object for creating new Comp Bucket Redemption Codes configurations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/compBucketRedemptionConfig"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{hotelId}/compBucket/redemption/{redemptionCode}": {
      "get": {
        "summary": "Operation to fetch Comp Bucket Redemption Codes.",
        "description": "You can use this API to fetch Comp Bucket Redemption Codes.<br><p><strong><mark>This API is deprecated. Please use getCompBucketRedemptionCodes instead</mark></strong></p> <p><strong>OperationId:</strong>getCompBucketRedemptionConfig</p>",
        "operationId": "getCompBucketRedemptionConfig",
        "deprecated": true,
        "parameters": [
          {
            "name": "redemptionCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Bucket Redemption Code"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Comp Bucket Redemption Codes configurations.",
            "schema": {
              "$ref": "#/definitions/compBucketRedemptionConfigDetails"
            }
          },
          "204": {
            "description": "CompBucketRedemptionConfig not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "put": {
        "summary": "Operation to change Comp Bucket Redemption Codes.",
        "description": "Operation to change Comp Bucket Redemption Codes. <p><strong>OperationId:</strong>putCompBucketRedemptionConfig</p>",
        "operationId": "putCompBucketRedemptionConfig",
        "parameters": [
          {
            "name": "redemptionCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Bucket Redemption Code"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "compBucketRedemptionConfig",
            "in": "body",
            "required": true,
            "description": "Request object for changing existing Comp Bucket Redemption Codes configurations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/compBucketRedemptionConfig"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to remove Comp Bucket Redemption Codes.",
        "description": "Operation to remove Comp Bucket Redemption Codes. <p><strong>OperationId:</strong>deleteCompBucketRedemptionConfig</p>",
        "operationId": "deleteCompBucketRedemptionConfig",
        "parameters": [
          {
            "name": "redemptionCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Bucket Redemption Code"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{hotelId}/compTypes": {
      "get": {
        "summary": "Operation to Fetch Comp Types.",
        "description": "Operation to Fetch Comp TYpes. <p><strong>OperationId:</strong>getCompTypes</p>",
        "operationId": "getCompTypes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the source hotel in OPERA"
          },
          {
            "name": "compTypeCode",
            "in": "query",
            "required": false,
            "description": "Code is used to identify the CompType.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Comp Types.",
            "schema": {
              "$ref": "#/definitions/compTypesDetails"
            }
          },
          "204": {
            "description": "CompTypes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{hotelId}/customCharges": {
      "get": {
        "summary": "Operation to fetch Custom Charge Codes.",
        "description": "You can use this API to fetch Custom Charge Codes. <p><strong>OperationId:</strong>getCustomChargeCodes</p>",
        "operationId": "getCustomChargeCodes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "configurationId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "Indicator that tells whether to include inactive articles in search results.",
            "type": "boolean"
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Custom Charges.",
            "schema": {
              "$ref": "#/definitions/customChargesConfigDetails"
            }
          },
          "204": {
            "description": "CustomChargeCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create Custom Charge Codes.",
        "description": "Operation to create Custom Charge Codes. <p><strong>OperationId:</strong>postCustomChargesConfig</p>",
        "operationId": "postCustomChargesConfig",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "customChargesConfig",
            "in": "body",
            "required": true,
            "description": "Request object for creating new Custom Charges.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/customChargesConfig"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{hotelId}/customCharges/configuration/{configurationId}": {
      "get": {
        "summary": "Operation to fetch Custom Charge Codes.",
        "description": "You can use this API to fetch Custom Charge Codes.<br><p><strong><mark>This API is deprecated. Please use getCustomChargeCodes instead</mark></strong></p> <p><strong>OperationId:</strong>getCustomChargesConfig</p>",
        "operationId": "getCustomChargesConfig",
        "deprecated": true,
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the configuration"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Custom Charges.",
            "schema": {
              "$ref": "#/definitions/customChargesConfigDetails"
            }
          },
          "204": {
            "description": "CustomChargesConfig not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "put": {
        "summary": "Operation to change Custom Charge Codes.",
        "description": "Operation to change Custom ChargeCodes. <p><strong>OperationId:</strong>putCustomChargesConfig</p>",
        "operationId": "putCustomChargesConfig",
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the configuration"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "customChargesConfig",
            "in": "body",
            "required": true,
            "description": "Request object for changing existing Custom Charges.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/customChargesConfig"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to remove Custom Charge Codes.",
        "description": "Operation to remove Custom Charge Codes. <p><strong>OperationId:</strong>deleteCustomChargesConfig</p>",
        "operationId": "deleteCustomChargesConfig",
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the configuration"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{hotelId}/customCharges/exemptions": {
      "post": {
        "summary": "Operation to create Custom Charge Exemptions Config.",
        "description": "Operation to create Custom Charge Exemptions Config. <p><strong>OperationId:</strong>postCustomChargeExemptionsConfig</p>",
        "operationId": "postCustomChargeExemptionsConfig",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "customChargeExemptionsConfigToBeCreated",
            "in": "body",
            "required": true,
            "description": "New one or more Custom Charge Exemptions to be created.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/customChargeExemptionsConfigToBeCreated"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{hotelId}/customCharges/exemptions/{configurationId}": {
      "get": {
        "summary": "Operation to fetch Custom Charge Exemptions Config.",
        "description": "You can use this API to fetch Custom Charge Exemptions Config.<br><p><strong><mark>This API is deprecated. Please use getCustomChargeExemptions instead</mark></strong></p> <p><strong>OperationId:</strong>getCustomChargeExemptionsConfig</p>",
        "operationId": "getCustomChargeExemptionsConfig",
        "deprecated": true,
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the configuration"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "Indicator that tells whether to include inactive articles in search results.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Custom Charge Exemptions.",
            "schema": {
              "$ref": "#/definitions/customChargeExemptionsConfig"
            }
          },
          "204": {
            "description": "CustomChargeExemptionsConfig not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "put": {
        "summary": "Operation to change Custom Charge Exemptions Config.",
        "description": "Operation to change Custom Charge Exemptions Config. <p><strong>OperationId:</strong>putCustomChargeExemptionsConfig</p>",
        "operationId": "putCustomChargeExemptionsConfig",
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the configuration"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "customChargeExemptionsConfigToBeChanged",
            "in": "body",
            "required": true,
            "description": "Existing Custom Charge Exemptions to be changed.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/customChargeExemptionsConfigToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to remove Custom Charge Exemptions Config.",
        "description": "Operation to remove Custom Charge Exemptions Config. <p><strong>OperationId:</strong>deleteCustomChargeExemptionsConfig</p>",
        "operationId": "deleteCustomChargeExemptionsConfig",
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the configuration"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{hotelId}/customNumbers": {
      "get": {
        "summary": "Operation to fetch custom number config.",
        "description": "You can use this API to fetch custom number config. <p><strong>OperationId:</strong>getCustomNumbers</p>",
        "operationId": "getCustomNumbers",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "Indicator that tells whether to return the inactive custom number configuration in search results.",
            "type": "boolean"
          },
          {
            "name": "configurationId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "The description of the custom number configuration code.",
            "type": "string"
          },
          {
            "name": "area",
            "in": "query",
            "required": false,
            "type": "string",
            "uniqueItems": true,
            "enum": [
              "Folio",
              "Receipt"
            ],
            "description": "Receipt"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching custom number configurations.",
            "schema": {
              "$ref": "#/definitions/customNumberConfigDetails"
            }
          },
          "204": {
            "description": "CustomNumbers not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create custom number config.",
        "description": " <p><strong>OperationId:</strong>postCustomNumberConfig</p>",
        "operationId": "postCustomNumberConfig",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "customNumberConfiguration",
            "in": "body",
            "required": true,
            "description": "Request object to create custom number configuration.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/customNumberConfiguration"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{hotelId}/customNumbers/configuration/{configurationId}": {
      "get": {
        "summary": "Operation to fetch custom number config.",
        "description": "You can use this API to fetch custom number config.<br><p><strong><mark>This API is deprecated. Please use getCustomNumbers instead</mark></strong></p> <p><strong>OperationId:</strong>getCustomNumberConfig</p>",
        "operationId": "getCustomNumberConfig",
        "deprecated": true,
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the configuration"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "Indicator that tells whether to return the inactive custom number configuration in search results.",
            "type": "boolean"
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "The description of the custom number configuration code.",
            "type": "string"
          },
          {
            "name": "area",
            "in": "query",
            "required": false,
            "type": "string",
            "uniqueItems": true,
            "enum": [
              "Folio",
              "Receipt"
            ],
            "description": "Receipt"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching custom number configurations.",
            "schema": {
              "$ref": "#/definitions/customNumberConfigDetails"
            }
          },
          "204": {
            "description": "CustomNumberConfig not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "put": {
        "summary": "Operation to change custom number config.",
        "description": " <p><strong>OperationId:</strong>putCustomNumberConfig</p>",
        "operationId": "putCustomNumberConfig",
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the configuration"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "customNumberConfiguration",
            "in": "body",
            "required": true,
            "description": "Request object to change custom number configuration.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/customNumberConfiguration"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response object to change custom number configuration.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to remove custom number config.",
        "description": " <p><strong>OperationId:</strong>deleteCustomNumberConfig</p>",
        "operationId": "deleteCustomNumberConfig",
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the configuration"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{hotelId}/exchangeRates": {
      "get": {
        "summary": "Operation to fetch ExchangeRates.",
        "description": "You can use this API to retrieve exchange rate information for a hotel. You can search by hotel, Currency Code and exchange types. Results can include past, current and future exchange rate information for a currency.<br><p><strong><mark>This API is deprecated. Please use getExchangeRatesInfo instead</mark></strong></p> <p><strong>OperationId:</strong>getExchangeRates</p>",
        "operationId": "getExchangeRates",
        "deprecated": true,
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "exchangeTypes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "E-certificate conversion.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Cash",
                "Settlement",
                "Posting",
                "Check",
                "TACommission",
                "Membership",
                "Certificate"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Collection of exchange rates and their information.",
            "schema": {
              "$ref": "#/definitions/exchangeRatesDetails"
            },
            "examples": {
              "application/json": [
                {
                  "exchangeType": [
                    "Cash"
                  ],
                  "currency": {
                    "code": "AUD"
                  },
                  "baseCurrency": {
                    "code": "USD"
                  },
                  "beginDate": "2020-09-01 00:28:45.0",
                  "buyRate": "1",
                  "buyCommission": "0",
                  "status": "Future"
                },
                {
                  "exchangeType": [
                    "Cash"
                  ],
                  "currency": {
                    "code": "AUD"
                  },
                  "baseCurrency": {
                    "code": "USD"
                  },
                  "beginDate": "2020-01-01 00:28:45.0",
                  "buyRate": "1.34",
                  "buyCommission": "0",
                  "status": "Current"
                },
                {
                  "exchangeType": [
                    "Cash"
                  ],
                  "currency": {
                    "code": "AUD"
                  },
                  "baseCurrency": {
                    "code": "USD"
                  },
                  "beginDate": "2016-09-01 13:04:40.0",
                  "buyRate": "5",
                  "buyCommission": "5",
                  "status": "Past"
                }
              ]
            }
          },
          "204": {
            "description": "ExchangeRates not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{hotelId}/exchangeRates/{currencyCode}": {
      "get": {
        "summary": "Operation to fetch FuturePastExchangeRates.",
        "description": "Operation to Fetch Future Past Exchange Rates. <p><strong>OperationId:</strong>getFuturePastExchangeRates</p> <p>This API allows a time span of <strong>30</strong> days.</p>",
        "operationId": "getFuturePastExchangeRates",
        "parameters": [
          {
            "name": "currencyCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Currency Code in OPERA"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "exchangeTypes",
            "in": "query",
            "enum": [
              "Cash",
              "Settlement",
              "Posting",
              "Check",
              "TACommission",
              "Membership",
              "Certificate"
            ],
            "x-example": "Cash",
            "required": true,
            "type": "string",
            "description": "E-certificate conversion.",
            "uniqueItems": true
          },
          {
            "name": "dateRangeStart",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "dateRangeEnd",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Collection of exchange rates and their information.",
            "schema": {
              "$ref": "#/definitions/futurePastExchangeRates"
            }
          },
          "204": {
            "description": "FuturePastExchangeRates not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{hotelId}/fiscalCommands": {
      "get": {
        "summary": "Get Fiscal Commands",
        "description": "Use this API to get fiscal commands. <p><strong>OperationId:</strong>getFiscalCommands</p>",
        "operationId": "getFiscalCommands",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "Inactive flag used to include/exclude inactive transaction codes from the search result",
            "type": "boolean"
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "partnerCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used for fiscal partner codes. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "operationType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "List of Fiscal Operations supported.",
            "uniqueItems": true,
            "enum": [
              "FiscalCommand",
              "Operation"
            ]
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Lists available Fiscal Operations.",
            "schema": {
              "$ref": "#/definitions/fiscalCommandsDetails"
            }
          },
          "204": {
            "description": "FiscalCommands not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "put": {
        "summary": "Change configuration fiscal commands",
        "description": "Use this API to update configuration fiscal commands. <p><strong>OperationId:</strong>changeFiscalCommands</p>",
        "operationId": "changeFiscalCommands",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "changeFiscalCommands",
            "in": "body",
            "required": true,
            "description": "Request to update existing Fiscal Command.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/changeFiscalCommands"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{hotelId}/fiscalPartners": {
      "get": {
        "summary": "Get fiscal partners",
        "description": "Use this API to get fiscal partners. <p><strong>OperationId:</strong>getFiscalPartners</p>",
        "operationId": "getFiscalPartners",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "partnerCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used for fiscal partner codes. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetch Fiscal Partners Config.",
            "schema": {
              "$ref": "#/definitions/fiscalPartnersDetails"
            }
          },
          "204": {
            "description": "FiscalPartners not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Create fiscal partners",
        "description": "Use this API to create fiscal partners. <p><strong>OperationId:</strong>postFiscalPartners</p>",
        "operationId": "postFiscalPartners",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "createFiscalPartners",
            "in": "body",
            "required": true,
            "description": "Request object to create Fiscal Partners.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/createFiscalPartners"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Delete configuration fiscal partners",
        "description": "Use this API to delete configuration fiscal partners. <p><strong>OperationId:</strong>removeFiscalPartners</p>",
        "operationId": "removeFiscalPartners",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "partnerCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used for fiscal partner codes. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "put": {
        "summary": "Change configuration fiscal partners",
        "description": "Use this API to update configuration fiscal partners. <p><strong>OperationId:</strong>changeFiscalPartners</p>",
        "operationId": "changeFiscalPartners",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "changeFiscalPartners",
            "in": "body",
            "required": true,
            "description": "Request object to change Fiscal Partners.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/changeFiscalPartners"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{hotelId}/folios/{folioType}/legends/{legendCode}": {
      "delete": {
        "summary": "Operation to remove folio type legend mappings config.",
        "description": "Operation to remove folio type legend mappings config. <p><strong>OperationId:</strong>removeFolioTypeLegendMappingConfig</p>",
        "operationId": "removeFolioTypeLegendMappingConfig",
        "parameters": [
          {
            "name": "legendCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Legend Code"
          },
          {
            "name": "folioType",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Folio Type"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the source hotel in OPERA"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{hotelId}/generates": {
      "get": {
        "summary": "Operation to fetch GenerateTaxTypes.",
        "description": "Operation to fetch tax types. <p><strong>OperationId:</strong>getGenerateTaxTypes</p>",
        "operationId": "getGenerateTaxTypes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "transactionCode",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for fetching tax types.",
            "schema": {
              "$ref": "#/definitions/taxTypesGenerate"
            }
          },
          "204": {
            "description": "GenerateTaxTypes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{hotelId}/interfaces/{interfaceLogoId}/customData": {
      "put": {
        "summary": "Operation to update hotel interface custom data.",
        "description": "Operation to update hotel interface custom data. <p><strong>OperationId:</strong>updateInterfaceCustomData</p>",
        "operationId": "updateInterfaceCustomData",
        "parameters": [
          {
            "name": "interfaceLogoId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel interface logo"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "hotelInterfaceDetail",
            "in": "body",
            "required": true,
            "description": "Request object for updating a Hotel Interface.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelInterfaceDetail"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CreditCard"
        ]
      },
      "get": {
        "summary": "Operation to fetch hotel interface custom data.",
        "description": "Operation to fetch hotel interface custom data. <p><strong>OperationId:</strong>getHotelInterfaceCustomData</p>",
        "operationId": "getHotelInterfaceCustomData",
        "parameters": [
          {
            "name": "interfaceLogoId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel interface logo"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "enum": [
              "PrimaryInfo",
              "AdditionalInfo",
              "GeneralInfo",
              "CommunicationInfo",
              "IfcTranslation",
              "IfcClassOfService",
              "IfcImportRooms",
              "WorkstationSetupInfo",
              "PostingsInfo",
              "CustomDataInfo",
              "ExportDataInfo",
              "TransactionCodesInfo"
            ],
            "required": false,
            "type": "string",
            "uniqueItems": true,
            "description": "Transaction codes of a Hotel Interface."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for retrieving the details of a Hotel Interface.",
            "schema": {
              "$ref": "#/definitions/hotelInterfaceDetail"
            }
          },
          "204": {
            "description": "HotelInterfaceCustomData not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CreditCard"
        ]
      }
    },
    "/hotels/{hotelId}/template/customNumbers": {
      "post": {
        "summary": "Operation to create a new template custom number configuration.",
        "description": "You can use this API to create a new template custom number configuration.<br><p><strong><mark>This API is deprecated. Please use postTemplateCustomNumber instead</mark></strong></p> <p><strong>OperationId:</strong>postTemplateCustomNumberConfig</p>",
        "operationId": "postTemplateCustomNumberConfig",
        "deprecated": true,
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "templateCustomNumberConfig",
            "in": "body",
            "required": true,
            "description": "Request object to create a new template custom number configuration.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateCustomNumberConfig"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{hotelId}/template/customNumbers/configuration/{configurationId}": {
      "get": {
        "summary": "Operation to fetch template custom number configuration.",
        "description": "You can use this API to fetch template custom number configuration.<br><p><strong><mark>This API is deprecated. Please use getTemplateCustomNumbers instead</mark></strong></p> <p><strong>OperationId:</strong>getTemplateCustomNumberConfig</p>",
        "operationId": "getTemplateCustomNumberConfig",
        "deprecated": true,
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the configuration"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "Indicator that tells whether to return the inactive custom number configuration in search results.",
            "type": "boolean"
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching template custom number configurations.",
            "schema": {
              "$ref": "#/definitions/templateCustomNumberConfigDetails"
            }
          },
          "204": {
            "description": "TemplateCustomNumberConfig not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "put": {
        "summary": "Operation to change template custom number configuration.",
        "description": "You can use this API to change template custom number configuration.<br><p><strong><mark>This API is deprecated. Please use putTemplateCustomNumber instead</mark></strong></p> <p><strong>OperationId:</strong>putTemplateCustomNumberConfig</p>",
        "operationId": "putTemplateCustomNumberConfig",
        "deprecated": true,
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the configuration"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "templateCustomNumberConfig",
            "in": "body",
            "required": true,
            "description": "Request object to change template custom number configuration.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateCustomNumberConfig"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response object to change template custom number configuration.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to remove template custom number configuration.",
        "description": "You can use this API to remove template custom number configuration.<br><p><strong><mark>This API is deprecated. Please use deleteTemplateCustomNumber instead</mark></strong></p> <p><strong>OperationId:</strong>deleteTemplateCustomNumberConfig</p>",
        "operationId": "deleteTemplateCustomNumberConfig",
        "deprecated": true,
        "parameters": [
          {
            "name": "configurationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the configuration"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{hotelId}/trackItActions": {
      "get": {
        "summary": "Get Track it Actions",
        "description": "Use this API to get Track it Actions. <p><strong>OperationId:</strong>getTrackItActions</p>",
        "operationId": "getTrackItActions",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "showInactive",
            "in": "query",
            "required": false,
            "description": "If true this boolean will set the criteria to only return Inactive records.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Track it Actions.",
            "schema": {
              "$ref": "#/definitions/trackItActionsDetails"
            }
          },
          "204": {
            "description": "TrackItActions not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create Track it Actions",
        "description": "Use this API to create Track it Actions. <p><strong>OperationId:</strong>postTrackItActions</p>",
        "operationId": "postTrackItActions",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "trackItActionsCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating new Track it Actions.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/trackItActionsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/trackItActions/{actionCode}": {
      "put": {
        "summary": "Change Track it Actions",
        "description": "Use this API to update Track it Actions. <p><strong>OperationId:</strong>changeTrackItActions</p>",
        "operationId": "changeTrackItActions",
        "parameters": [
          {
            "name": "actionCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of action."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "trackItActionsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing existing Track it Actions.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/trackItActionsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete Track it Actions",
        "description": "Use this API to delete Track it Actions. <p><strong>OperationId:</strong>removeTrackItActions</p>",
        "operationId": "removeTrackItActions",
        "parameters": [
          {
            "name": "actionCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of action."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/trackItLocations": {
      "get": {
        "summary": "Get Track it Locations",
        "description": "Use this API to get Track it Locations. <p><strong>OperationId:</strong>getTrackItLocations</p>",
        "operationId": "getTrackItLocations",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "showInactive",
            "in": "query",
            "required": false,
            "description": "If true this boolean will set the criteria to only return Inactive records.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Track it Locations.",
            "schema": {
              "$ref": "#/definitions/trackItLocationsDetails"
            }
          },
          "204": {
            "description": "TrackItLocations not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create Track it Locations",
        "description": "Use this API to create Track it Locations. <p><strong>OperationId:</strong>postTrackItLocations</p>",
        "operationId": "postTrackItLocations",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "trackItLocationsCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating new Track it Locations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/trackItLocationsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/trackItLocations/{locationCode}": {
      "put": {
        "summary": "Change Track it Locations",
        "description": "Use this API to update Track it Locations. <p><strong>OperationId:</strong>changeTrackItLocations</p>",
        "operationId": "changeTrackItLocations",
        "parameters": [
          {
            "name": "locationCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of location."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "trackItLocationsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing existing Track it Locations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/trackItLocationsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete Track it Locations",
        "description": "Use this API to delete Track it Locations. <p><strong>OperationId:</strong>removeTrackItLocations</p>",
        "operationId": "removeTrackItLocations",
        "parameters": [
          {
            "name": "locationCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of location."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/trackItTypes": {
      "get": {
        "summary": "Get Track it Types",
        "description": "Use this API to get Track it Types. <p><strong>OperationId:</strong>getTrackItTypes</p>",
        "operationId": "getTrackItTypes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "showInactive",
            "in": "query",
            "required": false,
            "description": "If true this boolean will set the criteria to only return Inactive records.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Track it Types.",
            "schema": {
              "$ref": "#/definitions/trackItTypesDetails"
            }
          },
          "204": {
            "description": "TrackItTypes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create Track it Types",
        "description": "Use this API to create Track it Types. <p><strong>OperationId:</strong>postTrackItTypes</p>",
        "operationId": "postTrackItTypes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "trackItTypesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating new Track it Types.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/trackItTypesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/trackItTypes/{typeCode}": {
      "put": {
        "summary": "Change Track it Types",
        "description": "Use this API to update Track it Types. <p><strong>OperationId:</strong>changeTrackItTypes</p>",
        "operationId": "changeTrackItTypes",
        "parameters": [
          {
            "name": "typeCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of track it type."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "trackItTypesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing existing Track it Types.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/trackItTypesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete Track it Types",
        "description": "Use this API to delete Track it Types. <p><strong>OperationId:</strong>removeTrackItTypes</p>",
        "operationId": "removeTrackItTypes",
        "parameters": [
          {
            "name": "typeCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of track it type."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/transactionCodeAccessRoles": {
      "get": {
        "summary": "Operation to fetch TransactionCodeAccessRoles.",
        "description": "Operation to Fetch Transaction Code Access Roles. <p><strong>OperationId:</strong>getTransactionCodeAccessRoles</p>",
        "operationId": "getTransactionCodeAccessRoles",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "roleCode",
            "in": "query",
            "required": false,
            "description": "Codes",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for information regarding Transaction Code Access Role",
            "schema": {
              "$ref": "#/definitions/transactionCodeAccessRoles"
            }
          },
          "204": {
            "description": "TransactionCodeAccessRoles not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{hotelId}/transactionCodes/{transactionCode}/chargeSimulations": {
      "get": {
        "summary": "Operation to CalculatePosting.",
        "description": "Operation to test posting amount. <p><strong>OperationId:</strong>calculatePosting</p>",
        "operationId": "calculatePosting",
        "parameters": [
          {
            "name": "transactionCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Transaction Code in OPERA"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "postingAmount",
            "in": "query",
            "x-example": "299",
            "required": false,
            "description": "Base amount to test for posting.",
            "type": "number"
          },
          {
            "name": "taxType",
            "in": "query",
            "required": false,
            "description": "Specify this criteria if calculation is based on the tax type.",
            "type": "string"
          },
          {
            "name": "guestBalance",
            "in": "query",
            "x-example": "299",
            "required": false,
            "description": "Specify this criteria if calculation is based on the guest balance.",
            "type": "number"
          },
          {
            "name": "roomType",
            "in": "query",
            "x-example": "STD",
            "required": false,
            "description": "Specify this criteria if calculation is based on room type.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for testing posting amount.",
            "schema": {
              "$ref": "#/definitions/calculatedPosting"
            }
          },
          "204": {
            "description": "calculatePosting not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{hotelId}/transactionCodes/{transactionCode}/hotelTransactionCode": {
      "get": {
        "summary": "Get transaction codes",
        "description": "Use this API to return transaction codes based on search criteria such as hotelIds, transactionGroupCodes, transactionSubgroupsCodes, transactionCodes, description, etc.<p><strong>OperationId:</strong>getTransactionCodes</p>",
        "operationId": "getTransactionCode",
        "parameters": [
          {
            "name": "transactionCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Transaction Code in OPERA"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple type for transaction code instructions that can be used for partial operations.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Header",
                "Generates",
                "Glmapping",
                "AssociatedTrxCodes",
                "MappingCodes"
              ]
            },
            "x-example": [
              "Header"
            ],
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching detailed transaction code.",
            "schema": {
              "$ref": "#/definitions/hotelTransactionCode"
            }
          },
          "204": {
            "description": "TransactionCode not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{hotelId}/transactionCodes/{transactionCode}/transactionCodes": {
      "delete": {
        "summary": "Operation to delete TransactionCodes.",
        "description": "Operation to remove transaction codes. <p><strong>OperationId:</strong>deleteTransactionCodes</p>",
        "operationId": "deleteTransactionCodes",
        "parameters": [
          {
            "name": "transactionCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Transaction Code in OPERA"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{hotelId}/transactionDiscounts/{transactionDiscountCode}": {
      "put": {
        "summary": "Operation to change TransactionDiscounts.",
        "description": "Operation to change Transaction Discounts. <p><strong>OperationId:</strong>putTransactionDiscounts</p>",
        "operationId": "putTransactionDiscounts",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "transactionDiscountCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 20,
            "description": "Unique code for transaction discount"
          },
          {
            "name": "transactionDiscount",
            "in": "body",
            "required": true,
            "description": "Request object for changing a Transaction Discount Configuration.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionDiscount"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Additional warnings about the operation.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete TransactionDiscounts.",
        "description": "Operation to remove Transaction Discounts. <p><strong>OperationId:</strong>deleteTransactionDiscounts</p>",
        "operationId": "deleteTransactionDiscounts",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "transactionDiscountCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 20,
            "description": "Unique code for transaction discount"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{hotelId}/transactionGroupCode/{transactionGroupCode}/transactionGroup": {
      "get": {
        "summary": "Operation to fetch TransactionGroup.",
        "description": "Operation to fetch detailed transaction group. <p><strong>OperationId:</strong>getTransactionGroup</p>",
        "operationId": "getTransactionGroup",
        "parameters": [
          {
            "name": "transactionGroupCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Transaction Group Code in OPERA"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple type for transaction group instructions that can be used for partial operations.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Header",
                "Generates"
              ]
            },
            "x-example": [
              "Header"
            ],
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching detailed transaction group configuration.",
            "schema": {
              "$ref": "#/definitions/transactionGroup"
            }
          },
          "204": {
            "description": "TransactionGroup not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{hotelId}/transactionSubGroupCodes/{transactionSubGroupCode}/transactionGroupCodes/{transactionGroupCode}/transactionSubGroup": {
      "get": {
        "summary": "Operation to fetch TransactionGroup.",
        "description": "Operation to fetch detailed transaction sub group. <p><strong>OperationId:</strong>getTransactionSubgroup</p>",
        "operationId": "getTransactionSubgroup",
        "parameters": [
          {
            "name": "transactionGroupCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Transaction Group Code in OPERA"
          },
          {
            "name": "transactionSubGroupCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Transaction SubGroup Code in OPERA"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple type for transaction sub group instructions that can be used for partial operations.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Header",
                "Generates"
              ]
            },
            "x-example": [
              "Header"
            ],
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching detailed transaction subgroup configuration.",
            "schema": {
              "$ref": "#/definitions/hotelTransactionSubgroup"
            }
          },
          "204": {
            "description": "TransactionSubgroup not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{hotelId}/vouchers": {
      "get": {
        "summary": "Get Vouchers",
        "description": "Use this API to get Vouchers. <p><strong>OperationId:</strong>getVouchers</p>",
        "operationId": "getVouchers",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "membershipTypes",
            "in": "query",
            "type": "array",
            "description": "Membership Types set to the search criteria",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "membershipLevels",
            "in": "query",
            "type": "array",
            "description": "Membership Levels set to the search criteria",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "description": "Start date of the voucher",
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "description": "End date of the voucher",
            "type": "string",
            "format": "date"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Vouchers.",
            "schema": {
              "$ref": "#/definitions/vouchersDetails"
            }
          },
          "204": {
            "description": "Vouchers not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to remove Vouchers.",
        "description": " <p><strong>OperationId:</strong>deleteVouchers</p>",
        "operationId": "deleteVouchers",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "voucherId",
            "in": "query",
            "description": "Unique internal ID of the voucher",
            "type": "integer",
            "required": true
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "put": {
        "summary": "Operation to change a voucher.",
        "description": "<p><strong>OperationId:</strong>putVouchers</p>",
        "operationId": "putVouchers",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "vouchers",
            "in": "body",
            "required": true,
            "description": "Request to change voucher.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/vouchersDetails"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create Vouchers.",
        "description": "<p><strong>OperationId:</strong>postVouchers</p>",
        "operationId": "postVouchers",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "vouchers",
            "in": "body",
            "required": true,
            "description": "Request to create a voucher.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/vouchersDetails"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{sourceHotelId}/customCharges/exemptions/copy": {
      "post": {
        "summary": "Operation to copy Custom Charge Exemptions Config.",
        "description": "Operation to copy Custom Charge Exemptions Config. <p><strong>OperationId:</strong>copyCustomChargeExemptionsConfig</p>",
        "operationId": "copyCustomChargeExemptionsConfig",
        "parameters": [
          {
            "name": "sourceHotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "customChargeExemptionsConfigCopy",
            "in": "body",
            "required": true,
            "description": "List of the Custom Charge Exemptions to be copied.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/customChargeExemptionsConfigCopy"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{sourceHotelId}/fiscalFolioParameters/copy": {
      "put": {
        "summary": "Operation to copy FiscalFolioParameters.",
        "description": "Operation to copy Fiscal Folio Parameters. <p><strong>OperationId:</strong>copyFiscalFolioParameters</p>",
        "operationId": "copyFiscalFolioParameters",
        "deprecated": true,
        "parameters": [
          {
            "name": "sourceHotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the source hotel in OPERA"
          },
          {
            "name": "fiscalFolioParametersCopy",
            "in": "body",
            "required": true,
            "description": "Request object for copying Fiscal Folio Parameters to other hotel code(s).",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fiscalFolioParametersCopy"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/hotels/{sourceHotelId}/trackItActions/copy": {
      "put": {
        "summary": " Copy Track it Actions",
        "description": "Copy Track it Actions. <p><strong>OperationId:</strong>copyTrackItActions</p>",
        "operationId": "copyTrackItActions",
        "parameters": [
          {
            "name": "sourceHotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of source hotel."
          },
          {
            "name": "copyTrackItActions",
            "in": "body",
            "required": true,
            "description": "List of Track it Actions to be copied.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/copyTrackItActions"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{sourceHotelId}/trackItLocations/copy": {
      "put": {
        "summary": " Copy Track it Locations",
        "description": "Copy Track it Locations. <p><strong>OperationId:</strong>copyTrackItLocations</p>",
        "operationId": "copyTrackItLocations",
        "parameters": [
          {
            "name": "sourceHotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of source hotel."
          },
          {
            "name": "copyTrackItLocations",
            "in": "body",
            "required": true,
            "description": "List of Track it Locations to be copied.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/copyTrackItLocations"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{sourceHotelId}/trackItTypes/copy": {
      "put": {
        "summary": " Copy Track it Types",
        "description": "Copy Track it Types. <p><strong>OperationId:</strong>copyTrackItTypes</p>",
        "operationId": "copyTrackItTypes",
        "parameters": [
          {
            "name": "sourceHotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of source hotel."
          },
          {
            "name": "copyTrackItTypes",
            "in": "body",
            "required": true,
            "description": "List of Track it Types to be copied.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/copyTrackItTypes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/noShowPostingRules": {
      "put": {
        "summary": "Operation to change NoShowPostingRules.",
        "description": "Operation to change No Show Posting Rules. <p><strong>OperationId:</strong>putNoShowPostingRules</p>",
        "operationId": "putNoShowPostingRules",
        "parameters": [
          {
            "name": "noShowPostingRulesEdit",
            "in": "body",
            "required": true,
            "description": "Request object for changing existing No Show Posting Rule Configurations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/noShowPostingRulesEdit"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create NoShowPostingRules.",
        "description": "Operation to create No Show Posting Rules. <p><strong>OperationId:</strong>postNoShowPostingRules</p>",
        "operationId": "postNoShowPostingRules",
        "parameters": [
          {
            "name": "noShowPostingRules",
            "in": "body",
            "required": true,
            "description": "Request object for creating new No Show Posting Rule Configuration.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/noShowPostingRules"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch NoShowPostingRules.",
        "description": "Operation to fetch No Show Posting Rules. <p><strong>OperationId:</strong>getNoShowPostingRules</p>",
        "operationId": "getNoShowPostingRules",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "sourceCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching No Show Posting Rule Configurations.",
            "schema": {
              "$ref": "#/definitions/noShowPostingRules"
            }
          },
          "204": {
            "description": "NoShowPostingRules not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete NoShowPostingRules.",
        "description": "Operation to remove No Show Posting Rules. <p><strong>OperationId:</strong>deleteNoShowPostingRules</p>",
        "operationId": "deleteNoShowPostingRules",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Indicates for which hotel this posting rule apply to.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "reservationType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Type of the reservation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "sourceCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Source code of the reservation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "postingRule",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple Type for Posting Rule Types.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "AllNights",
                "DepositOnly",
                "FirstNight"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/numberDescriptions": {
      "put": {
        "summary": "Operation to change NumberDescriptions.",
        "description": "The operation is to change the description corresponding to a number. <p><strong>OperationId:</strong>putNumberDescriptions</p>",
        "operationId": "putNumberDescriptions",
        "parameters": [
          {
            "name": "numberDescriptions",
            "in": "body",
            "required": true,
            "description": "Request object to edit description of numbers",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/numberDescriptions"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch NumberDescriptions.",
        "description": "The operation accepts code and/or descriptions for numbers as search criteria in fetch request and returns numbers, descriptions that match the criteria. <p><strong>OperationId:</strong>getNumberDescriptions</p>",
        "operationId": "getNumberDescriptions",
        "parameters": [
          {
            "name": "numberCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used for Number specific codes for OPERA tables. Possible values of this pattern are 1, 10, 17, THOUSAND, BILLION, etc.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description text set to the search criteria",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for fetching Numbers and Descriptions",
            "schema": {
              "$ref": "#/definitions/numberDescriptions"
            }
          },
          "204": {
            "description": "NumberDescriptions not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/operaControlSequences": {
      "put": {
        "summary": "Operation to change OperaControlSequences.",
        "description": "Operation to change Opera Document Sequences. <p><strong>OperationId:</strong>putOperaControlSequences</p>",
        "operationId": "putOperaControlSequences",
        "parameters": [
          {
            "name": "operaControlSequences",
            "in": "body",
            "required": true,
            "description": "Request objects for updating Opera Control Sequences",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/operaControlSequences"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch OperaControlSequences.",
        "description": "Operation to fetch Opera Document Sequences. <p><strong>OperationId:</strong>getOperaControlSequences</p>",
        "operationId": "getOperaControlSequences",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": true,
            "description": "Hotel code of fetch criteria",
            "type": "string"
          },
          {
            "name": "countryCode",
            "in": "query",
            "required": false,
            "description": "Country Code of fetch criteria",
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "HotelCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel where the code is configured.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "fetchInstruction",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple type for opera sequence instructions that can be used for partial operations.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "BillFolioTypes",
                "ArInvoice",
                "SequenceNumbers",
                "ARPayment"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object of Opera Control Sequence.",
            "schema": {
              "$ref": "#/definitions/operaControlSequences"
            }
          },
          "204": {
            "description": "OperaControlSequences not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/packageArrangementCodes": {
      "put": {
        "summary": "Operation to change PackageArrangementCodes.",
        "description": " <p><strong>OperationId:</strong>putPackageArrangementCodes</p>",
        "operationId": "putPackageArrangementCodes",
        "parameters": [
          {
            "name": "packageArrangementCodes",
            "in": "body",
            "required": true,
            "description": "Request object for changing package arrangement codes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/packageArrangementCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create PackageArrangementCodes.",
        "description": " <p><strong>OperationId:</strong>postPackageArrangementCodes</p>",
        "operationId": "postPackageArrangementCodes",
        "parameters": [
          {
            "name": "packageArrangementCodes",
            "in": "body",
            "required": true,
            "description": "Request object for creating new package arrangement codes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/packageArrangementCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch PackageArrangementCodes.",
        "description": " <p><strong>OperationId:</strong>getPackageArrangementCodes</p>",
        "operationId": "getPackageArrangementCodes",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "arrangementCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "A flag that determines whether to fetch active records or inactive records",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching package arrangement codes.",
            "schema": {
              "$ref": "#/definitions/packageArrangementCodes"
            }
          },
          "204": {
            "description": "PackageArrangementCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete PackageArrangementCodes.",
        "description": " <p><strong>OperationId:</strong>deletePackageArrangementCodes</p>",
        "operationId": "deletePackageArrangementCodes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel where the code is configured.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/packageArrangementCodes/copy": {
      "put": {
        "summary": "Operation to copy PackageArrangementCodes.",
        "description": " <p><strong>OperationId:</strong>copyPackageArrangementCodes</p>",
        "operationId": "copyPackageArrangementCodes",
        "parameters": [
          {
            "name": "packageArrangementCodesCopy",
            "in": "body",
            "required": true,
            "description": "List of the package arrangement codes to be copied.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/packageArrangementCodesCopy"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/paymentMethods": {
      "put": {
        "summary": "Operation to delete TransactionArrangementCodes.",
        "description": "Operation to remove payment methods. <p><strong>OperationId:</strong>removePaymentMethods</p>",
        "operationId": "removePaymentMethods",
        "parameters": [
          {
            "name": "paymentMethods",
            "in": "body",
            "required": true,
            "description": "Request to remove payment methods.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/paymentMethods"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/prepaidCard": {
      "get": {
        "summary": "Operation to fetch Prepaid Card.",
        "description": " <p><strong>OperationId:</strong>getPrepaidCard</p>",
        "operationId": "getPrepaidCard",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": true,
            "description": "Hotel code.",
            "type": "string"
          },
          {
            "name": "cardNumber",
            "in": "query",
            "required": true,
            "description": "Prepaid card number.",
            "type": "string"
          },
          {
            "name": "interfaceId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "interfaceIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "reservationId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "reservationIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "pin",
            "in": "query",
            "required": false,
            "description": "PIN code associated for the prepaid card.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for fetch Prepaid card operation",
            "schema": {
              "$ref": "#/definitions/prepaidCardDetails"
            }
          },
          "204": {
            "description": "PrepaidCard not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CreditCard"
        ]
      }
    },
    "/prepaidCardBalance": {
      "get": {
        "summary": "Operation to fetch prepaid card balance.",
        "description": " <p><strong>OperationId:</strong>getPrepaidCardBalance</p>",
        "operationId": "getPrepaidCardBalance",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": true,
            "description": "Hotel code.",
            "type": "string"
          },
          {
            "name": "cardNumber",
            "in": "query",
            "required": true,
            "description": "Prepaid card number.",
            "type": "string"
          },
          {
            "name": "interfaceId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "interfaceIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "reservationId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "reservationIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "pin",
            "in": "query",
            "required": false,
            "description": "PIN code associated for the prepaid card.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for fetch Prepaid card balance.",
            "schema": {
              "$ref": "#/definitions/prepaidCardBalanceDetails"
            }
          },
          "204": {
            "description": "PrepaidCardBalance not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CreditCard"
        ]
      }
    },
    "/prepaidCards": {
      "get": {
        "summary": "Operation to fetch PrepaidCards.",
        "description": " <p><strong>OperationId:</strong>getPrepaidCards</p>",
        "operationId": "getPrepaidCards",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": true,
            "description": "Hotel code.",
            "type": "string"
          },
          {
            "name": "includeCardDetails",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Configuring this flag to be TRUE will fetch and return card details from vendor interface.",
            "type": "boolean"
          },
          {
            "name": "reservationId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "idExtension",
            "in": "query",
            "required": false,
            "description": "Additional identifying value assigned by the creating system.",
            "type": "integer"
          },
          {
            "name": "idContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "cardNo",
            "in": "query",
            "required": false,
            "description": "Prepaid card number.",
            "type": "string"
          },
          {
            "name": "roomNo",
            "in": "query",
            "required": false,
            "description": "Room No search criteria.",
            "type": "string"
          },
          {
            "name": "nameWildCard",
            "in": "query",
            "required": false,
            "description": "Last name search criteria.",
            "type": "string"
          },
          {
            "name": "firstNameWildCard",
            "in": "query",
            "required": false,
            "description": "First name search criteria.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for fetch Prepaid cards operation",
            "schema": {
              "$ref": "#/definitions/prepaidCards"
            }
          },
          "204": {
            "description": "PrepaidCards not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CreditCard"
        ]
      }
    },
    "/revenueBucketCodes": {
      "put": {
        "summary": "Operation to change RevenueBucketCodes.",
        "description": "Operation to change Revenue Bucket Codes. <p><strong>OperationId:</strong>putRevenueBucketCodes</p>",
        "operationId": "putRevenueBucketCodes",
        "parameters": [
          {
            "name": "revenueBucketCodes",
            "in": "body",
            "required": true,
            "description": "Request object for changing existing Revenue Bucket Codes Configurations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/revenueBucketCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create RevenueBucketCodes.",
        "description": "Operation to create Revenue Bucket Codes. <p><strong>OperationId:</strong>postRevenueBucketCodes</p>",
        "operationId": "postRevenueBucketCodes",
        "parameters": [
          {
            "name": "revenueBucketCodes",
            "in": "body",
            "required": true,
            "description": "Request object for creating new Revenue Bucket Codes Configurations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/revenueBucketCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch RevenueBucketCodes.",
        "description": "Operation to fetch Revenue Bucket Codes. <p><strong>OperationId:</strong>getRevenueBucketCodes</p>",
        "operationId": "getRevenueBucketCodes",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "trxCodeArrangementCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "trxCodeArrangementType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Fiscal Bucket Type.",
            "uniqueItems": true,
            "enum": [
              "Default",
              "Fiscal"
            ]
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "revenueBucketTypesWildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Revenue Bucket Codes configurations.",
            "schema": {
              "$ref": "#/definitions/revenueBucketCodes"
            }
          },
          "204": {
            "description": "RevenueBucketCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete RevenueBucketCodes.",
        "description": "Operation to remove Revenue Bucket Codes. <p><strong>OperationId:</strong>deleteRevenueBucketCodes</p>",
        "operationId": "deleteRevenueBucketCodes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel where the code is configured.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "revenueBucketType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Revenue Export Bucket Type",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "bucketType",
            "in": "query",
            "required": false,
            "type": "array",
            "collectionFormat": "multi",
            "description": "Flag to identify Fiscal related bucket types.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Default",
                "Fiscal"
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/revenueBucketCodes/copy": {
      "put": {
        "summary": "Operation to copy RevenueBucketCodes.",
        "description": "Operation to copy Revenue Bucket Codes. <p><strong>OperationId:</strong>copyRevenueBucketCodes</p>",
        "operationId": "copyRevenueBucketCodes",
        "parameters": [
          {
            "name": "revenueBucketCodesCopy",
            "in": "body",
            "required": true,
            "description": "Request object for copying one or more Revenue Bucket Codes configurations from one source property to one or more target properties.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/revenueBucketCodesCopy"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/revenueBucketTypes": {
      "put": {
        "summary": "Operation to change RevenueBucketTypes.",
        "description": "Operation to change Revenue Bucket Types. <p><strong>OperationId:</strong>putRevenueBucketTypes</p>",
        "operationId": "putRevenueBucketTypes",
        "parameters": [
          {
            "name": "revenueBucketTypes",
            "in": "body",
            "required": true,
            "description": "Request object for changing existing Revenue Bucket Types Configurations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/revenueBucketTypes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create RevenueBucketTypes.",
        "description": "Operation to create Revenue Bucket Types. <p><strong>OperationId:</strong>postRevenueBucketTypes</p>",
        "operationId": "postRevenueBucketTypes",
        "parameters": [
          {
            "name": "revenueBucketTypes",
            "in": "body",
            "required": true,
            "description": "Request object for creating new Revenue Bucket Types Configurations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/revenueBucketTypes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch RevenueBucketTypes.",
        "description": "Operation to fetch Revenue Bucket Types. <p><strong>OperationId:</strong>getRevenueBucketTypes</p>",
        "operationId": "getRevenueBucketTypes",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "revenueBucketTypeCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "bucketType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Fiscal Bucket Type.",
            "uniqueItems": true,
            "enum": [
              "Default",
              "Fiscal"
            ]
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Revenue Bucket Types configurations.",
            "schema": {
              "$ref": "#/definitions/revenueBucketTypes"
            }
          },
          "204": {
            "description": "RevenueBucketTypes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete RevenueBucketTypes.",
        "description": "Operation to remove Revenue Bucket Types. <p><strong>OperationId:</strong>deleteRevenueBucketTypes</p>",
        "operationId": "deleteRevenueBucketTypes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel where the code is configured.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/revenueBucketTypes/copy": {
      "put": {
        "summary": "Operation to copy RevenueBucketTypes.",
        "description": "Operation to copy Revenue Bucket Types. <p><strong>OperationId:</strong>copyRevenueBucketTypes</p>",
        "operationId": "copyRevenueBucketTypes",
        "parameters": [
          {
            "name": "revenueBucketTypesCopy",
            "in": "body",
            "required": true,
            "description": "List of the Revenue Bucket Types to be copied.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/revenueBucketTypesCopy"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/revenueTypeMapping": {
      "put": {
        "summary": "Operation to change RevenueTypeMapping.",
        "description": " <p><strong>OperationId:</strong>putRevenueTypeMapping</p>",
        "operationId": "putRevenueTypeMapping",
        "parameters": [
          {
            "name": "revenueTypeMapping",
            "in": "body",
            "required": true,
            "description": "Request object to change Revenue Type Mapping configurations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/revenueTypeMapping"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response object to change Revenue Type Mapping configurations.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Post revenue type mapping",
        "description": "Use this API to update transaction generates for a specific property.  Generates are rules used to calculate and post additional charges, such as service charges and taxes, when a particular sales charge transaction code is posted to guest, package or AR ledgers.<p><strong>OperationId:</strong>putTransactionGenerates</p>",
        "operationId": "postRevenueTypeMapping",
        "parameters": [
          {
            "name": "revenueTypeMapping",
            "in": "body",
            "required": true,
            "description": "Request object to create Revenue Type Mapping configurations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/revenueTypeMapping"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch RevenueTypeMapping.",
        "description": " <p><strong>OperationId:</strong>getRevenueTypeMapping</p>",
        "operationId": "getRevenueTypeMapping",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "eventTypeCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "revenueTypeCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "transactionCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "spaceCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Revenue Type Mapping configurations.",
            "schema": {
              "$ref": "#/definitions/revenueTypeMappingList"
            }
          },
          "204": {
            "description": "RevenueTypeMapping not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete RevenueTypeMapping.",
        "description": " <p><strong>OperationId:</strong>deleteRevenueTypeMapping</p>",
        "operationId": "deleteRevenueTypeMapping",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": true,
            "description": "Hotel Code to which the Revenue Type Mapping belongs to.",
            "type": "string"
          },
          {
            "name": "revenueTypeMappingID",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "idExtension",
            "in": "query",
            "required": false,
            "description": "Additional identifying value assigned by the creating system.",
            "type": "integer"
          },
          {
            "name": "idContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "revenueType",
            "in": "query",
            "required": false,
            "description": "Provides information about the Revenue Type.",
            "type": "string"
          },
          {
            "name": "eventType",
            "in": "query",
            "required": false,
            "description": "Provides information about the Event Type.",
            "type": "string"
          },
          {
            "name": "space",
            "in": "query",
            "required": false,
            "description": "Provides information about the Space/Location for the Revenue Type.",
            "type": "string"
          },
          {
            "name": "transactionCode",
            "in": "query",
            "required": false,
            "description": "Transaction code for the Revenue Type.",
            "type": "string"
          },
          {
            "name": "cateringOnly",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "For Catering and Event.",
            "uniqueItems": true,
            "enum": [
              "Yes",
              "No",
              "Both"
            ]
          },
          {
            "name": "serviceCharge",
            "in": "query",
            "required": false,
            "description": "Service Charge for the Revenue Type.",
            "type": "number",
            "minimum": 0,
            "maximum": 100
          },
          {
            "name": "serviceChargeTrxCode",
            "in": "query",
            "required": false,
            "description": "Service Charge for the Revenue Type.",
            "type": "string"
          },
          {
            "name": "serviceChargeCalulationMethod",
            "in": "query",
            "required": false,
            "description": "Service Charge for the Revenue Type.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/revenueTypeMapping/copy": {
      "put": {
        "summary": "Operation to copy RevenueTypeMapping.",
        "description": " <p><strong>OperationId:</strong>copyRevenueTypeMapping</p>",
        "operationId": "copyRevenueTypeMapping",
        "parameters": [
          {
            "name": "revenueTypeMappingCopy",
            "in": "body",
            "required": true,
            "description": "Request object for Copying Revenue Type Mapping.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/revenueTypeMappingCopy"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/roomTypeBasedChargeRanges": {
      "put": {
        "summary": "Operation to change Room Type Based Charge Ranges.",
        "description": "Operation to change Room Type Based Charge Ranges. <p><strong>OperationId:</strong>putRoomTypeBasedChargeRanges</p>",
        "operationId": "putRoomTypeBasedChargeRanges",
        "parameters": [
          {
            "name": "roomTypeBasedChargeRanges",
            "in": "body",
            "required": true,
            "description": "Request to change Room Type Based Charge Ranges.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomTypeBasedChargeRngs"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create Room Type Based Charge Ranges.",
        "description": "Operation to create Room Type Based Charge Ranges. <p><strong>OperationId:</strong>postRoomTypeBasedChargeRanges</p>",
        "operationId": "postRoomTypeBasedChargeRanges",
        "parameters": [
          {
            "name": "roomTypeBasedChargeRanges",
            "in": "body",
            "required": true,
            "description": "Request to create Room Type Based Charge Ranges.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomTypeBasedChargeRngs"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch Room Type Based Charge Ranges.",
        "description": "Use this API to return Room Type Based Charge Ranges for a hotels based on search criteria such as hotelId, transactionCode, generateTrxCode, RoomTypeGroup.<p><strong>OperationId:</strong>getRoomTypeBasedChargeRanges</p>",
        "operationId": "getRoomTypeBasedChargeRanges",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the source hotel in OPERA"
          },
          {
            "name": "transactionCode",
            "in": "query",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 20,
            "description": "Transaction code"
          },
          {
            "name": "generateTrxCode",
            "in": "query",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 20,
            "description": "Generate of the Main Transaction code"
          },
          {
            "name": "roomTypeGroup",
            "in": "query",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Room Type Group Code"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for fetching Room Type Based Charge Ranges.",
            "schema": {
              "$ref": "#/definitions/roomTypeBasedChargeRngs"
            }
          },
          "204": {
            "description": "Room Type Based Charge Ranges not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete Room Type Based Charge Ranges.",
        "description": "Operation to remove Room Type Based Charge Ranges. <p><strong>OperationId:</strong>deleteRoomTypebasedchargeranges</p>",
        "operationId": "deleteRoomTypebasedchargeranges",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the source hotel in OPERA."
          },
          {
            "name": "transactionNo",
            "in": "query",
            "required": true,
            "type": "number",
            "description": "Transaction number, Unique Identifier of the record."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/routingInstructions": {
      "put": {
        "summary": "Operation to change RoutingInstructions.",
        "description": "Operation to change routing instructions. <p><strong>OperationId:</strong>putRoutingInstructions</p>",
        "operationId": "putRoutingInstructions",
        "parameters": [
          {
            "name": "routingInstructions",
            "in": "body",
            "required": true,
            "description": "Request when changing a routing instruction.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/routingInstructions"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create RoutingInstructions.",
        "description": "Operation to create routing instructions. <p><strong>OperationId:</strong>postRoutingInstructions</p>",
        "operationId": "postRoutingInstructions",
        "parameters": [
          {
            "name": "routingInstructions",
            "in": "body",
            "required": true,
            "description": "Request to create a routing instruction.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/routingInstructions"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Get routing instructions",
        "description": "Use this API to return routing instructions based on search criteria such as hotelId, trxCodeArrangementCode, wildCard.  Routing instructions are used to route specific charges to different destinations.<p><strong>OperationId:</strong>getRoutingInstructions</p>",
        "operationId": "getRoutingInstructions",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": true,
            "type": "array",
            "maxItems": 4000,
            "items": {
              "type": "string"
            }
          },
          {
            "name": "trxCodeArrangementCode",
            "in": "query",
            "required": false,
            "description": "Codes to be searched.",
            "type": "array",
            "maxItems": 4000,
            "items": {
              "type": "string"
            }
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "compAccounting",
            "in": "query",
            "required": false,
            "description": "Determines if this is a comp routing code or a routing code.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching routing instructions.",
            "schema": {
              "$ref": "#/definitions/routingInstructions"
            }
          },
          "204": {
            "description": "RoutingInstructions not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete RoutingInstructions.",
        "description": "Operation to remove routing instructions. <p><strong>OperationId:</strong>deleteRoutingInstructions</p>",
        "operationId": "deleteRoutingInstructions",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": true,
            "description": "Hotel where the code is configured.",
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "description": "Configuration code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/routingInstructions/copy": {
      "put": {
        "summary": "Operation to copy RoutingInstructions.",
        "description": "Operation to copy routing instructions. <p><strong>OperationId:</strong>copyRoutingInstructions</p>",
        "operationId": "copyRoutingInstructions",
        "parameters": [
          {
            "name": "routingInstructionsCopy",
            "in": "body",
            "required": true,
            "description": "List of the routing instructions to be copied to hotel code(s).",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/routingInstructionsCopy"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/secureApplicationSettings": {
      "put": {
        "summary": "Operation to change AR SecureApplicationSettings.",
        "description": "Operation to update one or more secure application settings. <p><strong>OperationId:</strong>putSecureApplicationSettings</p>",
        "operationId": "putSecureApplicationSettings",
        "parameters": [
          {
            "name": "applicationSecureSetting",
            "in": "body",
            "required": true,
            "description": "Request for reading the configured device delimiters.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/applicationSecureSetting"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CreditCard"
        ]
      }
    },
    "/stopProcessingReasons": {
      "get": {
        "summary": "Operation to fetch stop processing reasons.",
        "description": " <p><strong>OperationId:</strong>getStopProcessingReasons</p>",
        "operationId": "getStopProcessingReasons",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Stop Processing Reason.",
            "schema": {
              "$ref": "#/definitions/stopProcessingReasons"
            }
          },
          "204": {
            "description": "StopProcessingReasons not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      },
      "put": {
        "summary": "Operation to change stop processing reasons.",
        "description": " <p><strong>OperationId:</strong>putStopProcessingReasons</p>",
        "operationId": "putStopProcessingReasons",
        "parameters": [
          {
            "name": "stopProcessingReasons",
            "in": "body",
            "required": true,
            "description": "Request object for changing Stop Processing Reason.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/stopProcessingReasons"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response object for changing Stop Processing Reason.",
            "schema": {
              "$ref": "#/definitions/stopProcessingReasons"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      },
      "post": {
        "summary": "Operation to create stop processing reasons.",
        "description": " <p><strong>OperationId:</strong>postStopProcessingReasons</p>",
        "operationId": "postStopProcessingReasons",
        "parameters": [
          {
            "name": "stopProcessingReasons",
            "in": "body",
            "required": true,
            "description": "Request object for creating Stop Processing Reason",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/stopProcessingReasons"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      },
      "delete": {
        "summary": "Operation to remove stop processing reasons.",
        "description": " <p><strong>OperationId:</strong>deleteStopProcessingReasons</p>",
        "operationId": "deleteStopProcessingReasons",
        "parameters": [
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CommissionConfig"
        ]
      }
    },
    "/taxBrackets": {
      "put": {
        "summary": "Operation to change TaxBrackets.",
        "description": "Operation to change Tax Brackets. This function only be available when the parameter \"Tax Bracket Calculation\" is on. <p><strong>OperationId:</strong>putTaxBrackets</p>",
        "operationId": "putTaxBrackets",
        "parameters": [
          {
            "name": "taxBrackets",
            "in": "body",
            "required": true,
            "description": "Request object for changing tax brackets.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/taxBrackets"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create TaxBrackets.",
        "description": "Operation to Create Tax Brackets. This function only be available when the parameter \"Tax Bracket Calculation\" is on. <p><strong>OperationId:</strong>postTaxBrackets</p>",
        "operationId": "postTaxBrackets",
        "parameters": [
          {
            "name": "taxBrackets",
            "in": "body",
            "required": true,
            "description": "Request object for creating tax brackets.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/taxBrackets"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch TaxBrackets.",
        "description": "Operation to fetch Tax Brackets. This function only be available when the parameter \"Tax Bracket Calculation\" is on. <p><strong>OperationId:</strong>getTaxBrackets</p>",
        "operationId": "getTaxBrackets",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "taxPercentagesCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching details about tax brackets.",
            "schema": {
              "$ref": "#/definitions/taxBrackets"
            }
          },
          "204": {
            "description": "TaxBrackets not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete TaxBrackets.",
        "description": "Operation to remove Tax Brackets. This function only be available when the parameter \"Tax Bracket Calculation\" is on. <p><strong>OperationId:</strong>deleteTaxBrackets</p>",
        "operationId": "deleteTaxBrackets",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel Code where tax bracket belongs to.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "taxPercentage",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Tax Percentage for which this Tax Bracket applies.",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/taxBrackets/copy": {
      "put": {
        "summary": "Operation to copy TaxBrackets.",
        "description": "Operation to copy Tax Brackets. This function only be available when the parameter \"Tax Bracket Calculation\" is on. <p><strong>OperationId:</strong>copyTaxBrackets</p>",
        "operationId": "copyTaxBrackets",
        "parameters": [
          {
            "name": "taxBracketsCopy",
            "in": "body",
            "required": true,
            "description": "Request object for copying tax brackets.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/taxBracketsCopy"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/taxCategories": {
      "get": {
        "summary": "Get Tax Category Codes",
        "description": "Use this API to get Tax Category Codes. <p><strong>OperationId:</strong>getFetchTaxCategoryCodes</p>",
        "operationId": "getFetchTaxCategoryCodes",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Tax Category Codes.",
            "schema": {
              "$ref": "#/definitions/taxCategoryCodesDetails"
            }
          },
          "204": {
            "description": "FetchTaxCategoryCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create Tax Category Codes",
        "description": "Use this API to create Tax Category Codes. <p><strong>OperationId:</strong>postTaxCategoryCodes</p>",
        "operationId": "postTaxCategoryCodes",
        "parameters": [
          {
            "name": "taxCategoryCodesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Tax Category Codes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/taxCategoryCodesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/taxCategories/{taxCategoryCode}": {
      "put": {
        "summary": "Change Tax Category Codes",
        "description": "Use this API to update Tax Category Codes. <p><strong>OperationId:</strong>putTaxCategoryCodes</p>",
        "operationId": "putTaxCategoryCodes",
        "parameters": [
          {
            "name": "taxCategoryCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of Tax Category Codes."
          },
          {
            "name": "taxCategoryCodesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Tax Category Codes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/taxCategoryCodesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete Tax Category Codes",
        "description": "Use this API to delete Tax Category Codes. <p><strong>OperationId:</strong>deleteTaxCategoryCodes</p>",
        "operationId": "deleteTaxCategoryCodes",
        "parameters": [
          {
            "name": "taxCategoryCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of Tax Category Codes."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/taxOffices": {
      "get": {
        "summary": "Get Tax Offices",
        "description": "Use this API to get Tax Offices. <p><strong>OperationId:</strong>getTaxOffices</p>",
        "operationId": "getTaxOffices",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Tax Offices.",
            "schema": {
              "$ref": "#/definitions/taxOfficesDetails"
            }
          },
          "204": {
            "description": "TaxOffices not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create Tax Offices",
        "description": "Use this API to create Tax Offices. <p><strong>OperationId:</strong>postTaxOffices</p>",
        "operationId": "postTaxOffices",
        "parameters": [
          {
            "name": "taxOfficesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Tax Offices.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/taxOfficesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/taxOffices/{taxOfficeId}": {
      "put": {
        "summary": "Change Tax Offices",
        "description": "Use this API to update Tax Offices. <p><strong>OperationId:</strong>changeTaxOffices</p>",
        "operationId": "changeTaxOffices",
        "parameters": [
          {
            "name": "taxOfficeId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of Tax Offices."
          },
          {
            "name": "taxOfficesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Tax Offices.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/taxOfficesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete Tax Offices",
        "description": "Use this API to delete Tax Offices. <p><strong>OperationId:</strong>removeTaxOffices</p>",
        "operationId": "removeTaxOffices",
        "parameters": [
          {
            "name": "taxOfficeId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of Tax Offices."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/template/customNumbers": {
      "get": {
        "summary": "Operation to fetch template custom number configuration.",
        "description": "You can use this API to fetch template custom number configuration. <p><strong>OperationId:</strong>getTemplateCustomNumbers</p>",
        "operationId": "getTemplateCustomNumbers",
        "parameters": [
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "Indicator that tells whether to return the inactive custom number configuration in search results.",
            "type": "boolean"
          },
          {
            "name": "configurationId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching template custom number configurations.",
            "schema": {
              "$ref": "#/definitions/templateCustomNumberConfigDetails"
            }
          },
          "204": {
            "description": "TemplateCustomNumbers not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "put": {
        "summary": "Operation to change template custom number configuration.",
        "description": "You can use this API to change template custom number configuration. <p><strong>OperationId:</strong>putTemplateCustomNumber</p>",
        "operationId": "putTemplateCustomNumber",
        "parameters": [
          {
            "name": "templateCustomNumberConfig",
            "in": "body",
            "required": true,
            "description": "Request object to change template custom number configuration.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateCustomNumberConfig"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response object to change template custom number configuration.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to remove template custom number configuration.",
        "description": "You can use this API to remove template custom number configuration. <p><strong>OperationId:</strong>deleteTemplateCustomNumber</p>",
        "operationId": "deleteTemplateCustomNumber",
        "parameters": [
          {
            "name": "configurationId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create a new template custom number configuration.",
        "description": "You can use this API to create a new template custom number configuration. <p><strong>OperationId:</strong>postTemplateCustomNumber</p>",
        "operationId": "postTemplateCustomNumber",
        "parameters": [
          {
            "name": "templateCustomNumberConfig",
            "in": "body",
            "required": true,
            "description": "Request object to create a new template custom number configuration.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateCustomNumberConfig"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/templateTransactionCodes": {
      "put": {
        "summary": "Operation to change TemplateTransactionCodes.",
        "description": "Operation to change template transaction codes. <p><strong>OperationId:</strong>putTemplateTransactionCodes</p>",
        "operationId": "putTemplateTransactionCodes",
        "parameters": [
          {
            "name": "templateTransactionCodes",
            "in": "body",
            "required": true,
            "description": "Request object for changing existing template transaction codes configuration.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateTransactionCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Post template transaction codes",
        "description": "Use this API to create template transaction codes.<p><strong>OperationId:</strong>postTemplateTransactionCodes</p>",
        "operationId": "postTemplateTransactionCodes",
        "parameters": [
          {
            "name": "templateTransactionCodes",
            "in": "body",
            "required": true,
            "description": "Request object for creating new template transaction codes configuration.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateTransactionCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Get template transaction codes",
        "description": "Use this API to return template transaction codes summaries based on search criteria such as transactionGroupCodes, transactionSubgroupsCodes, transactionCodes, wildCard, etc.<p><strong>OperationId:</strong>getTemplateTransactionCodes</p>",
        "operationId": "getTemplateTransactionCodes",
        "parameters": [
          {
            "name": "compTransactionCodes",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Flag to indicate whether comp accounting transaction codes are being requested. If true, only comp accounting transaction codes will be returned. If false, only standard transaction codes will be returned.",
            "type": "boolean"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Inactive flag used to include/exclude inactive transaction codes from the search result",
            "type": "boolean"
          },
          {
            "name": "transactionGroupCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "transactionSubgroupsCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "transactionCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the Transaction code.",
            "type": "string"
          },
          {
            "name": "brandCode",
            "in": "query",
            "required": false,
            "description": "Property associated with the corporate information brand code in the search criteria",
            "type": "string"
          },
          {
            "name": "universalProductCode",
            "in": "query",
            "required": false,
            "description": "Unique Universal product code search criteria.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching template transaction codes summary.",
            "schema": {
              "$ref": "#/definitions/templateTransactionCodes"
            }
          },
          "204": {
            "description": "TemplateTransactionCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete TemplateTransactionCodes.",
        "description": "Operation to remove template transaction codes. <p><strong>OperationId:</strong>deleteTemplateTransactionCodes</p>",
        "operationId": "deleteTemplateTransactionCodes",
        "parameters": [
          {
            "name": "transactionCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/templateTransactionGroups": {
      "put": {
        "summary": "Operation to change TemplateTransactionGroups.",
        "description": "Operation to change existing template transaction group. <p><strong>OperationId:</strong>putTemplateTransactionGroups</p>",
        "operationId": "putTemplateTransactionGroups",
        "parameters": [
          {
            "name": "templateTransactionGroups",
            "in": "body",
            "required": true,
            "description": "Request object to changing Template Transaction Groups Configuration.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateTransactionGroups"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create TemplateTransactionGroups.",
        "description": "Operation to create new template transaction group. <p><strong>OperationId:</strong>postTemplateTransactionGroups</p>",
        "operationId": "postTemplateTransactionGroups",
        "parameters": [
          {
            "name": "templateTransactionGroups",
            "in": "body",
            "required": true,
            "description": "Request object for creating new Template Transaction Groups Configuration.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateTransactionGroups"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch TemplateTransactionGroups.",
        "description": "Operation to fetch template transaction group. <p><strong>OperationId:</strong>getTemplateTransactionGroups</p>",
        "operationId": "getTemplateTransactionGroups",
        "parameters": [
          {
            "name": "transactionGroupCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "transactionGroupType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Wrapper Transaction Type.",
            "uniqueItems": true,
            "enum": [
              "Revenue",
              "Payment",
              "Wrapper"
            ]
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetch template transaction groups",
            "schema": {
              "$ref": "#/definitions/templateTransactionGroups"
            }
          },
          "204": {
            "description": "TemplateTransactionGroups not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete TemplateTransactionGroups.",
        "description": "Operation to remove existing template transaction group. <p><strong>OperationId:</strong>deleteTemplateTransactionGroups</p>",
        "operationId": "deleteTemplateTransactionGroups",
        "parameters": [
          {
            "name": "templateTransactionCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/templateTransactionSubGroups": {
      "put": {
        "summary": "Operation to change TemplateTransactionSubgroups.",
        "description": "Operation to change template transaction subgroups <p><strong>OperationId:</strong>putTemplateTransactionSubgroups</p>",
        "operationId": "putTemplateTransactionSubgroups",
        "parameters": [
          {
            "name": "templateTransactionSubgroups",
            "in": "body",
            "required": true,
            "description": "Request object for changing existing template transaction subgroups configuration.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateTransactionSubgroups"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create TemplateTransactionSubgroups.",
        "description": "Operation to create template transaction subgroups <p><strong>OperationId:</strong>postTemplateTransactionSubgroups</p>",
        "operationId": "postTemplateTransactionSubgroups",
        "parameters": [
          {
            "name": "templateTransactionSubgroups",
            "in": "body",
            "required": true,
            "description": "Request object for creating new template transaction subgroups configuration.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateTransactionSubgroups"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch TemplateTransactionSubgroups.",
        "description": "Operation to fetch template transaction subgroups <p><strong>OperationId:</strong>getTemplateTransactionSubgroups</p>",
        "operationId": "getTemplateTransactionSubgroups",
        "parameters": [
          {
            "name": "transactionGroupCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "transactionSubgroupsCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetch template transaction subgroups configuration.",
            "schema": {
              "$ref": "#/definitions/templateTransactionSubgroups"
            }
          },
          "204": {
            "description": "TemplateTransactionSubgroups not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete TemplateTransactionSubgroups.",
        "description": "Operation to remove template transaction subgroups <p><strong>OperationId:</strong>deleteTemplateTransactionSubgroups</p>",
        "operationId": "deleteTemplateTransactionSubgroups",
        "parameters": [
          {
            "name": "subgroup",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Template transaction subgroup configuration code",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "group",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Template transaction group configuration code",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/transactionArrangementCodes": {
      "get": {
        "summary": "Operation to fetch TransactionArrangementCodes.",
        "description": " <p><strong>OperationId:</strong>getTransactionArrangementCodes</p>",
        "operationId": "getTransactionArrangementCodes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": true,
            "description": "Hotel code for which the transaction codes belong to.",
            "type": "string"
          },
          {
            "name": "transactionCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching transaction codes with associated arrangement codes.",
            "schema": {
              "$ref": "#/definitions/transactionArrangementCodes"
            }
          },
          "204": {
            "description": "TransactionArrangementCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/transactionCodeAccessRoles/set": {
      "put": {
        "summary": "Operation to set TransactionCodeAccessRoles.",
        "description": "Operation to Set Transaction Code Access Roles. <p><strong>OperationId:</strong>setTransactionCodeAccessRoles</p>",
        "operationId": "setTransactionCodeAccessRoles",
        "parameters": [
          {
            "name": "transactionCodeAccessRoles",
            "in": "body",
            "required": true,
            "description": "Request object for Setting a Transaction Code Access Roles",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionCodeAccessRoles"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/transactionCodeOwnership": {
      "put": {
        "summary": "Operation to change TransactionCodeOwnership.",
        "description": "Operation to change ownership of transaction code. <p><strong>OperationId:</strong>putTransactionCodeOwnership</p>",
        "operationId": "putTransactionCodeOwnership",
        "parameters": [
          {
            "name": "transactionCodeOwnership",
            "in": "body",
            "required": true,
            "description": "Request object for changing ownership of selected transaction codes operation.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionCodeOwnership"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/transactionCodes": {
      "put": {
        "summary": "Put transaction codes",
        "description": "Use this API to update transaction codes for a specific property.<p><strong>OperationId:</strong>putTransactionCodes</p>",
        "operationId": "putTransactionCodes",
        "parameters": [
          {
            "name": "hotelTransactionCodes",
            "in": "body",
            "required": true,
            "description": "Request object for changing existing Transaction Codes Configuration.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelTransactionCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response object for changing existing Transaction Codes Configuration.",
            "schema": {
              "$ref": "#/definitions/transactionCodes"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Post transaction codes",
        "description": "Use this API to create transaction codes for a specific property.<p><strong>OperationId:</strong>postTransactionCodes</p>",
        "operationId": "postTransactionCodes",
        "parameters": [
          {
            "name": "hotelTransactionCodes",
            "in": "body",
            "required": true,
            "description": "Request object for creating new Transaction Codes Configuration.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelTransactionCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch TransactionCodes.",
        "description": "Use this API to return transaction codes based on search criteria such as hotelIds, transactionGroupCodes, transactionSubgroupsCodes, transactionCodes, description, etc.. <p><strong>OperationId:</strong>getTransactionCodes</p>",
        "operationId": "getTransactionCodes",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "compTransactionCodes",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Flag to indicate whether comp accounting transaction codes are being requested. If true, only comp accounting transaction codes will be returned. If false, only standard transaction codes will be returned.",
            "type": "boolean"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Inactive flag used to include/exclude inactive transaction codes from the search result",
            "type": "boolean"
          },
          {
            "name": "earnMembershipPoints",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "This flag indicates that the transaction is eligible to earn points (guest can earn points on the revenue posted to this transaction code)",
            "type": "boolean"
          },
          {
            "name": "transactionGroupCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "transactionSubgroupsCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "transactionCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the Transaction code.",
            "type": "string"
          },
          {
            "name": "brandCode",
            "in": "query",
            "required": false,
            "description": "Property associated with the corporate information brand code in the search criteria",
            "type": "string"
          },
          {
            "name": "universalProductCode",
            "in": "query",
            "required": false,
            "description": "Unique Universal product code search criteria.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching hotel's transaction codes summary.",
            "schema": {
              "$ref": "#/definitions/hotelTransactionCodes"
            }
          },
          "204": {
            "description": "TransactionCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/transactionCodes/copy": {
      "put": {
        "summary": "Operation to copy TransactionCodes.",
        "description": "Operation to copy transaction codes. <p><strong>OperationId:</strong>copyTransactionCodes</p>",
        "operationId": "copyTransactionCodes",
        "parameters": [
          {
            "name": "transactionCodesCopy",
            "in": "body",
            "required": true,
            "description": "Request object for copying transaction codes in the configuration.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionCodesCopy"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/transactionDiscounts": {
      "post": {
        "summary": "Operation to create TransactionDiscounts.",
        "description": "Use this API to create transaction discounts for a specific hotel. <p><strong>OperationId:</strong>postTransactionDiscounts</p>",
        "operationId": "postTransactionDiscounts",
        "parameters": [
          {
            "name": "transactionDiscount",
            "in": "body",
            "required": true,
            "description": "Request object for creating new Transaction Discount Configuration.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionDiscount"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch TransactionDiscounts.",
        "description": "Operation to fetch Transaction Discounts. <p><strong>OperationId:</strong>getTransactionDiscounts</p>",
        "operationId": "getTransactionDiscounts",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "transactionDiscountCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Discount codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description text set to the search criteria",
            "maxLength": 2000,
            "type": "string"
          },
          {
            "name": "ruleType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The rule type on which the transaction discount is based.",
            "uniqueItems": true,
            "enum": [
              "Membership"
            ]
          },
          {
            "name": "membershipTypes",
            "in": "query",
            "type": "array",
            "description": "Membership Types set to the search criteria",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "membershipLevels",
            "in": "query",
            "type": "array",
            "description": "Membership Levels set to the search criteria",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "When this fetch instruction is passed, the details of article codes and transaction codes attached to the transaction discount are fetched.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "IncludeCodes"
              ]
            },
            "required": false
          },
          {
            "name": "includeInactive",
            "in": "query",
            "x-example": "false",
            "required": false,
            "description": "Indicator that tells whether to include inactive transaction discounts in search results.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Transaction Discount Configurations.",
            "schema": {
              "$ref": "#/definitions/transactionDiscounts"
            }
          },
          "204": {
            "description": "No transaction discounts found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/transactionDiversionRules": {
      "put": {
        "summary": "Operation to change TransactionDiversionRules.",
        "description": "Operation to change Transaction Diversion Rules. <p><strong>OperationId:</strong>putTransactionDiversionRules</p>",
        "operationId": "putTransactionDiversionRules",
        "parameters": [
          {
            "name": "transactionDiversionRules",
            "in": "body",
            "required": true,
            "description": "Request object for modifying an existing Transaction Diversion Rule",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionDiversionRules"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create TransactionDiversionRules.",
        "description": "Operation to create Transaction Diversion Rules. <p><strong>OperationId:</strong>postTransactionDiversionRules</p>",
        "operationId": "postTransactionDiversionRules",
        "parameters": [
          {
            "name": "transactionDiversionRules",
            "in": "body",
            "required": true,
            "description": "Request object for creating a Transaction Diversion Rule",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionDiversionRules"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch TransactionDiversionRules.",
        "description": "Operation to fetch Transaction Diversion Rules. <p><strong>OperationId:</strong>getTransactionDiversionRules</p>",
        "operationId": "getTransactionDiversionRules",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "ruleCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The rule type on which the Transaction Diversion Rule is based. If a reservation has any of the following code, Transaction Diversion rule gets active for that reservation",
            "uniqueItems": true,
            "enum": [
              "Vip",
              "Membership"
            ]
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "User defined message for the Transaction Diversion Rule.",
            "type": "string"
          },
          {
            "name": "level",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Reservation level.",
            "uniqueItems": true,
            "enum": [
              "Property",
              "Reservation"
            ]
          },
          {
            "name": "membershipTypeCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "membershipTypeLevels",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "vipCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for information regarding Transaction Diversion Rule",
            "schema": {
              "$ref": "#/definitions/transactionDiversionRules"
            }
          },
          "204": {
            "description": "TransactionDiversionRules not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/transactionDiversionRules/remove": {
      "put": {
        "summary": "Operation to delete TransactionDiversionRules.",
        "description": "Operation to remove Transaction Diversion Rules. <p><strong>OperationId:</strong>removeTransactionDiversionRules</p>",
        "operationId": "removeTransactionDiversionRules",
        "parameters": [
          {
            "name": "transactionDiversionRules",
            "in": "body",
            "required": true,
            "description": "Request object for deleting an existing Transaction Diversion Rule",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionDiversionRules"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/transactionGenerates": {
      "put": {
        "summary": "Operation to delete TransactionGenerates.",
        "description": "Operation to remove transaction generates. <p><strong>OperationId:</strong>removeTransactionGenerates</p>",
        "operationId": "removeTransactionGenerates",
        "parameters": [
          {
            "name": "hotelTransactionGenerates",
            "in": "body",
            "required": true,
            "description": "Request to remove transaction generates.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelTransactionGenerates"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/transactionGroups": {
      "put": {
        "summary": "Operation to change TransactionGroups.",
        "description": "Operation to change transaction groups. <p><strong>OperationId:</strong>putTransactionGroups</p>",
        "operationId": "putTransactionGroups",
        "parameters": [
          {
            "name": "transactionGroups",
            "in": "body",
            "required": true,
            "description": "Request object for changing existing Transaction Groups Configuration.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionGroups"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create TransactionGroups.",
        "description": "Operation to create transaction groups. <p><strong>OperationId:</strong>postTransactionGroups</p>",
        "operationId": "postTransactionGroups",
        "parameters": [
          {
            "name": "transactionGroups",
            "in": "body",
            "required": true,
            "description": "Request object for creating new Transaction Groups Configuration.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionGroups"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch TransactionGroups.",
        "description": "Operation to fetch transaction groups. <p><strong>OperationId:</strong>getTransactionGroups</p>",
        "operationId": "getTransactionGroups",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "transactionGroupCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "transactionGroupType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Wrapper Transaction Type.",
            "uniqueItems": true,
            "enum": [
              "Revenue",
              "Payment",
              "Wrapper"
            ]
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Transaction Groups Configuration.",
            "schema": {
              "$ref": "#/definitions/transactionGroups"
            }
          },
          "204": {
            "description": "TransactionGroups not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete TransactionGroups.",
        "description": "Operation to remove transaction groups. <p><strong>OperationId:</strong>deleteTransactionGroups</p>",
        "operationId": "deleteTransactionGroups",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel where the code is configured.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/transactionGroups/copy": {
      "put": {
        "summary": "Operation to copy TransactionGroups.",
        "description": "Operation to copy transaction groups. <p><strong>OperationId:</strong>copyTransactionGroups</p>",
        "operationId": "copyTransactionGroups",
        "parameters": [
          {
            "name": "transactionGroupsCopy",
            "in": "body",
            "required": true,
            "description": "List of the transaction groups to be copied.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionGroupsCopy"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/transactionSubGroups": {
      "put": {
        "summary": "Operation to change TransactionSubgroups.",
        "description": "Operation to change transaction sub groups. <p><strong>OperationId:</strong>putTransactionSubgroups</p>",
        "operationId": "putTransactionSubgroups",
        "parameters": [
          {
            "name": "hotelTransactionSubgroups",
            "in": "body",
            "required": true,
            "description": "Request object for changing existing Transaction Subgroups Configuration.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelTransactionSubgroups"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "post": {
        "summary": "Operation to create TransactionSubgroups.",
        "description": "Operation to create transaction sub groups. <p><strong>OperationId:</strong>postTransactionSubgroups</p>",
        "operationId": "postTransactionSubgroups",
        "parameters": [
          {
            "name": "hotelTransactionSubgroups",
            "in": "body",
            "required": true,
            "description": "Request object for creating new Transaction Subgroups Configuration.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelTransactionSubgroups"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch TransactionSubgroups.",
        "description": "Operation to fetch transaction sub groups. <p><strong>OperationId:</strong>getTransactionSubgroups</p>",
        "operationId": "getTransactionSubgroups",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "transactionGroupCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "transactionSubgroupsCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Transaction Subgroups Configuration.",
            "schema": {
              "$ref": "#/definitions/hotelTransactionSubgroups"
            }
          },
          "204": {
            "description": "TransactionSubgroups not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete TransactionSubgroups.",
        "description": "Operation to remove transaction sub groups. <p><strong>OperationId:</strong>deleteTransactionSubgroups</p>",
        "operationId": "deleteTransactionSubgroups",
        "parameters": [
          {
            "name": "subgroup",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Template transaction subgroup configuration code",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "group",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Template transaction group configuration code",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code where the transaction subgroup is configured.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    },
    "/transactionSubGroups/copy": {
      "put": {
        "summary": "Operation to copy TransactionSubgroups.",
        "description": "Operation to copy transaction subgroups <p><strong>OperationId:</strong>copyTransactionSubgroups</p>",
        "operationId": "copyTransactionSubgroups",
        "parameters": [
          {
            "name": "transactionSubgroupsCopy",
            "in": "body",
            "required": true,
            "description": "Request object to copy transaction subgroups to the properties specified.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transactionSubgroupsCopy"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "CashieringConfig"
        ]
      }
    }
  },
  "parameters": {
    "authKey": {
      "name": "authorization",
      "description": "Bearer token that needs to be passed which is generated post user authentication",
      "type": "string",
      "in": "header",
      "required": true
    },
    "x-app-key": {
      "name": "x-app-key",
      "description": "Client or Partner's Application Key",
      "type": "string",
      "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
      "in": "header",
      "required": true
    },
    "x-hotelid": {
      "name": "x-hotelid",
      "type": "string",
      "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
      "in": "header",
      "required": true
    },
    "x-externalsystem": {
      "name": "x-externalsystem",
      "type": "string",
      "maxLength": 80,
      "description": "External system code.",
      "in": "header",
      "x-example": "EXTERNALSYSTEMCODE"
    },
    "Accept-Language": {
      "name": "Accept-Language",
      "type": "string",
      "description": "Language code",
      "in": "header"
    },
    "x-hubid": {
      "name": "x-hubid",
      "type": "string",
      "description": "x-hubid is a logical grouping of multiple properties that allows api consumers to manage data from a group of properties. This x-hubid is a valid list of hub codes configured in OPERA to which the user has access. Rest APIs without hotelId in the operation path can support hub level integration using x-hubid",
      "in": "header"
    }
  },
  "responses": {
    "400": {
      "description": "Bad Request",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "401": {
      "description": "Unauthorized"
    },
    "403": {
      "description": "Forbidden"
    },
    "404": {
      "description": "Resource not found",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "405": {
      "description": "Method not allowed"
    },
    "406": {
      "description": "Not acceptable."
    },
    "413": {
      "description": "Request Entity Too Large"
    },
    "414": {
      "description": "Request URI Too Large"
    },
    "415": {
      "description": "Unsupported Media Type"
    },
    "500": {
      "description": "System Error",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "502": {
      "description": "Bad Gateway"
    },
    "503": {
      "description": "Service Unavailable"
    }
  },
  "definitions": {
    "arAccountTypes": {
      "type": "object",
      "description": "Request object for changing account types.",
      "properties": {
        "accountTypes": {
          "description": "Collection of account types that needs to be created",
          "$ref": "#/definitions/aRAccountTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "aRAccountTypesType": {
      "type": "array",
      "description": "Holds collection of account types",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/aRAccountTypeType"
      }
    },
    "aRAccountTypeType": {
      "type": "object",
      "description": "Information which uniquely identifies account type",
      "properties": {
        "hotelId": {
          "description": "Property associated with account type",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "accountType": {
          "description": "Account receivable account type",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Full description of account type",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "creditLimit": {
          "description": "Maximum credit available for account type",
          "type": "number"
        },
        "statementMode": {
          "description": "Statements for all account types will be prepared using this statement mode",
          "$ref": "#/definitions/statementType"
        },
        "statementName": {
          "description": "Statement file name that account receivable account types uses",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "statementNameDesc": {
          "description": "Description associated with statement file name",
          "type": "string",
          "minLength": 0,
          "maxLength": 1000
        },
        "printPreference": {
          "description": "Print preference whether to print statement with invoice details or with out invoice details or print separate folios",
          "$ref": "#/definitions/aRPrintPreferenceType"
        },
        "financeCharge": {
          "description": "Finance charges will allow user to post a flat amount or percentage finance charge based on user-defined cycle.",
          "$ref": "#/definitions/aRFinanceChargeType"
        },
        "reminderCycle": {
          "description": "When reminder letters needs to be generated. user can choose from End of month or Day cycle",
          "$ref": "#/definitions/aRReminderCycleType"
        },
        "reminderDelayDays": {
          "description": "Defines the number of days(aging) within which the payment must be made for a account type, if not a reminder is generated.",
          "type": "integer"
        }
      }
    },
    "statementType": {
      "type": "string",
      "description": "The Types of Statements that can be used on an Account Type.",
      "enum": [
        "BalanceForward",
        "IndividualOpenItems"
      ]
    },
    "aRPrintPreferenceType": {
      "type": "string",
      "description": "Preference type when separate folios has to be included in the statement",
      "enum": [
        "InvoicesWithoutDetails",
        "InvoicesWithDetails",
        "SeparateFolios"
      ]
    },
    "aRFinanceChargeType": {
      "type": "object",
      "description": "Finance charges will allow user to post a flat amount or percentage finance charge based on user-defined cycle.",
      "properties": {
        "postOnDay": {
          "description": "Day of the month when the end of day procedure should run",
          "type": "integer"
        },
        "financeCharge": {
          "description": "Determines how the finance charge will be applied to outstanding balance valid values are F, P",
          "type": "string",
          "minLength": 1,
          "maxLength": 1
        },
        "financeChargeValue": {
          "description": "Amount or percentage value",
          "type": "number"
        },
        "daysOlderThan": {
          "description": "Number of days after which an outstanding balance triggers",
          "type": "integer"
        },
        "includeUnallocatedPayments": {
          "description": "If true unallocated payments are subtracted from the outstanding balances before finance charge is calculated",
          "type": "boolean"
        }
      }
    },
    "aRReminderCycleType": {
      "type": "object",
      "description": "When reminder letters needs to be generated. user can choose from End of month or Day cycle",
      "properties": {
        "endOfMonthCycle": {
          "description": "Reminder letters are generated at the end of month if user specifies this element",
          "$ref": "#/definitions/aREndOfMonthCycleType"
        },
        "daysCycle": {
          "description": "Reminder letters are generate at user-defined cycles if user specifies this element",
          "$ref": "#/definitions/aRDaysCycleType"
        }
      }
    },
    "aREndOfMonthCycleType": {
      "type": "object",
      "description": "Reminder letters will be generated at the end of each month if user specifies this element",
      "properties": {
        "reportName": {
          "description": "Reminder letter file name for the reminder letter to be generated at the end of month",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "reportNameDesc": {
          "description": "Description associated with reminder letter.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1000
        }
      }
    },
    "aRDaysCycleType": {
      "type": "array",
      "description": "Reminder letters will be generated based on the number of days for which the account has had an outstanding balance",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/aRDaysReminderCycleType"
      }
    },
    "aRDaysReminderCycleType": {
      "type": "object",
      "description": "Custom reminder cycles determine which to generated statements for the account with outstanding balances",
      "properties": {
        "accountTypeReminderCycleId": {
          "description": "Internal number associated with daily reminder type",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "noOfDays": {
          "description": "Number of days in the reminder cycle",
          "type": "integer"
        },
        "reportName": {
          "description": "File name for the reminder letter to be granted for this cycle",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "uniqueID_Type": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "instanceLink": {
      "type": "object",
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      }
    },
    "warningsType": {
      "type": "array",
      "description": "Used in conjunction with the Success element to define a business error.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    },
    "warningType": {
      "type": "object",
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "minLength": 1,
          "maxLength": 8
        }
      }
    },
    "status": {
      "type": "object",
      "description": "Response Body.",
      "properties": {
        "warnings": {
          "$ref": "#/definitions/warningsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      }
    },
    "exceptionDetailType": {
      "title": "Error Detail",
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "errorInstance": {
      "title": "Error Instance Details",
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "articles": {
      "type": "object",
      "description": "Request to change articles.",
      "properties": {
        "hotelId": {
          "description": "Hotel context for the articles.",
          "$ref": "#/definitions/codeType"
        },
        "articles": {
          "description": "Collection of articles.",
          "$ref": "#/definitions/articlesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "codeType": {
      "type": "string",
      "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
      "minLength": 0,
      "maxLength": 20
    },
    "articlesType": {
      "type": "array",
      "description": "Holds collection of articles.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/articleInfoType"
      }
    },
    "articleInfoType": {
      "type": "object",
      "description": "Information regarding an article.",
      "properties": {
        "description": {
          "description": "Description of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionCode": {
          "description": "Transaction code to which the article belongs.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "price": {
          "description": "Default price of the article.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postIt": {
          "description": "Post it information of the article.",
          "$ref": "#/definitions/articlePostItType"
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel code to which the article belongs.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "articleCode": {
          "description": "Unique code of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "inactive": {
          "description": "Indicates whether the article is inactive or not.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        }
      }
    },
    "currencyAmountType": {
      "type": "object",
      "description": "A monetary value expressed with a currency code.",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "articlePostItType": {
      "type": "object",
      "description": "Post it information of an article.",
      "properties": {
        "availableForPostIt": {
          "description": "Indicates whether the article is available for post it.",
          "type": "boolean"
        },
        "color": {
          "description": "Color indicator which is only configurable if article is available for post it.",
          "$ref": "#/definitions/colorType"
        }
      }
    },
    "colorType": {
      "type": "string",
      "description": "Color configuration type. This color configuration provides a visual category of entities.",
      "enum": [
        "Red",
        "DarkRed",
        "Green",
        "DarkGreen",
        "LightGreen",
        "Orange",
        "White",
        "Yellow",
        "DarkYellow",
        "Purple",
        "Brown",
        "Gray",
        "Aqua",
        "Chocolate",
        "Blue",
        "LightBlue",
        "DarkBlue",
        "Cyan",
        "DarkCyan",
        "Magenta",
        "DarkMagenta",
        "Black"
      ]
    },
    "articlesInfo": {
      "type": "object",
      "properties": {
        "articles": {
          "description": "Collection of articles.",
          "$ref": "#/definitions/articlesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "authorizationConfigRules": {
      "type": "object",
      "properties": {
        "authorizationConfigRulesType": {
          "description": "Authorization configuration rule type.",
          "$ref": "#/definitions/authorizationConfigRulesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "authorizationConfigRulesType": {
      "type": "array",
      "description": "List of AuthorizationRuleType.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/authorizationConfigRuleType"
      }
    },
    "authorizationConfigRuleType": {
      "type": "object",
      "description": "Authorization configuration Rule Type.Authorization Rules specify the rule (or rules) that the property uses for credit card authorizations",
      "properties": {
        "hotelId": {
          "description": "Property associated with authorization rule",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "description": "Authorization rule Room type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomClass": {
          "description": "Authorization rule room class code.",
          "$ref": "#/definitions/roomClassCodeInfoType"
        },
        "sourceCode": {
          "description": "Authorization rule source code.",
          "$ref": "#/definitions/sourceCodeInfoType"
        },
        "rateCategory": {
          "description": "Authorization rule Rate Category code.",
          "$ref": "#/definitions/rateCategoryType"
        },
        "rateCode": {
          "description": "Rate code associated to this rule.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "guaranteeCode": {
          "description": "Guarantee code associated to this rule.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ruleNo": {
          "description": "Rule Number for current authorization.",
          "type": "integer"
        },
        "ruleDescription": {
          "description": "Rule Number description for current authorization.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "amount": {
          "description": "Amount to be applied to all rules with an amount configured in the formula.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "percentage": {
          "description": "Percentage to be applied to all rules with a percentage configured in the formula.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "maxDaysToAuthorize": {
          "description": "A maximum of two digits to set the number of days to authorize for a credit card. If the field is left blank, authorizations will be done for the entire stay duration of the reservation",
          "type": "integer"
        },
        "ignoreDepositsYN": {
          "description": "Ignore deposits paid for calculation of the amount to be authorized.",
          "type": "boolean"
        }
      }
    },
    "roomClassCodeInfoType": {
      "type": "object",
      "description": "Code of the room class type.",
      "properties": {
        "roomClassCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "sourceCodeInfoType": {
      "type": "object",
      "properties": {
        "sourceCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceGroup": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "rateCategoryType": {
      "type": "object",
      "description": "This type represents the rate category type.",
      "properties": {
        "rateCategoryDetails": {
          "description": "Begin date for the rate category.",
          "type": "object",
          "properties": {
            "beginDate": {
              "description": "Begin date for the rate category.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "endDate": {
              "description": "End date for the rate category.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "description": {
              "description": "Description of rate category.",
              "type": "string",
              "minLength": 0,
              "maxLength": 200
            },
            "rateClass": {
              "description": "Active date of the room category.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "sellSequence": {
              "description": "Indicates rate category sell sequence.",
              "type": "number"
            }
          }
        },
        "rateCategory": {
          "description": "Rate category Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "authorizationConfigRulesInfo": {
      "type": "object",
      "properties": {
        "authorizationConfigRulesType": {
          "description": "List of authorization configuration rule type.",
          "$ref": "#/definitions/authorizationConfigRulesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "authorizationRule": {
      "type": "object",
      "properties": {
        "authorizationRule": {
          "description": "The authorization rule details.",
          "$ref": "#/definitions/authorizationRuleType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "authorizationRuleType": {
      "type": "object",
      "description": "Configured rule for computing the amount to authorize.",
      "properties": {
        "code": {
          "description": "The authorization rule code.",
          "type": "integer",
          "pattern": "[0-9]{1,9}"
        },
        "amount": {
          "description": "The amount applicable to the authorization rule.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "percent": {
          "description": "A percentage value if the authorization rule is percentage based.",
          "type": "number"
        }
      }
    },
    "authorizerGroupsToChange": {
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Authorizer Groups Configuration to be changed.",
          "$ref": "#/definitions/authorizerGroupsCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "authorizerGroupsCriteriaType": {
      "type": "object",
      "description": "Criteria to change authorizer group.",
      "properties": {
        "updateAuthorizers": {
          "description": "If true, updates all authorizers in the group.",
          "type": "boolean"
        },
        "authorizerGroups": {
          "description": "Authorizer Groups Configuration to be changed.",
          "$ref": "#/definitions/authorizerGroupsType"
        }
      }
    },
    "authorizerGroupsType": {
      "type": "array",
      "description": "Authorizer Group",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/authorizerGroupType"
      }
    },
    "authorizerGroupType": {
      "type": "object",
      "description": "A representation of the information contained by a Authorizer Group.",
      "properties": {
        "description": {
          "description": "Description of the Authorizer Group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "rateCode": {
          "description": "Rate Code of the Authorizer Group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionLimits": {
          "description": "Transactions information of the Authorizer Group.",
          "$ref": "#/definitions/authorizerTrxLimitsType"
        },
        "hotelId": {
          "description": "Hotel Code to which the Authorizer Group belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Authorizer Group code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "authorizerTrxLimitsType": {
      "type": "array",
      "description": "Set of Transaction Limit configured for the Authorizer Group.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/authorizerTrxLimitType"
      }
    },
    "authorizerTrxLimitType": {
      "type": "object",
      "description": "A representation of the information of Transaction Limit.",
      "properties": {
        "transactionCodes": {
          "description": "Set of Transaction Codes configured for the Authorizer Group.",
          "$ref": "#/definitions/authTransactionCodesType"
        },
        "billingInstructions": {
          "description": "Set of Billing Instructions configured for the Authorizer Group.",
          "$ref": "#/definitions/authBillingInstructionsType"
        },
        "groupHeaderId": {
          "description": "Group Header Id for a transaction row.",
          "type": "number"
        },
        "creditLimit": {
          "description": "Credit Limit for a transaction.",
          "type": "number"
        },
        "occurrenceLimit": {
          "description": "Occurrence Limit for a transaction.",
          "type": "number"
        }
      }
    },
    "authTransactionCodesType": {
      "type": "array",
      "description": "List of Transaction codes info.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/codeDescriptionType"
      }
    },
    "codeDescriptionType": {
      "type": "object",
      "description": "This contains a generic code and description information.",
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "authBillingInstructionsType": {
      "type": "array",
      "description": "Set of Billing Instruction codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/codeDescriptionType"
      }
    },
    "authorizerGroups": {
      "type": "object",
      "properties": {
        "authorizerGroups": {
          "description": "Collection of Authorizer Groups fetched.",
          "$ref": "#/definitions/authorizerGroupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "autoFolioSettlementTypesDetails": {
      "type": "object",
      "description": "Response object for fetching Auto Folio Settlement Types.",
      "properties": {
        "autoFolioSettlementTypes": {
          "description": "Collection of Auto Folio Settlement Types.",
          "$ref": "#/definitions/autoFolioSettlementTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "autoFolioSettlementTypesType": {
      "type": "array",
      "description": "List of Auto Folio Settlement Types.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/autoFolioSettlementTypeType"
      }
    },
    "autoFolioSettlementTypeType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "translationTextType2000": {
      "type": "object",
      "description": "Contains Multiple translated texts and language codes.",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 2000.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "translationsTextType": {
      "type": "array",
      "description": "Language code for the translation.",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Used for Character Strings, length 0 to 2000.",
            "minLength": 0,
            "maxLength": 2000
          },
          "language": {
            "description": "Language identification.",
            "type": "string",
            "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          }
        },
        "description": "Language code for the translation."
      }
    },
    "autoFolioSettlementTypesCriteria": {
      "type": "object",
      "description": "Request object for creating Auto Folio Settlement Types.",
      "properties": {
        "autoFolioSettlementTypes": {
          "description": "Auto Folio Settlement Typesto be created.",
          "$ref": "#/definitions/autoFolioSettlementTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "autoFolioSettlementTypesToBeChanged": {
      "type": "object",
      "description": "Request object for changing Auto Folio Settlement Types.",
      "properties": {
        "autoFolioSettlementTypes": {
          "description": "Auto Folio Settlement Typesto be changed.",
          "$ref": "#/definitions/autoFolioSettlementTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "budgetForecastToDelete": {
      "type": "object",
      "properties": {
        "segmentCodeInformation": {
          "description": "Search criteria for budget forecast information.",
          "$ref": "#/definitions/deleteSegmentCodeBudgetInformationType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "deleteSegmentCodeBudgetInformationType": {
      "type": "object",
      "description": "Holds segment and segment code information to delete.",
      "properties": {
        "marketCodeInformation": {
          "description": "Market Segment code information to delete.",
          "$ref": "#/definitions/deleteSegmentCodeInfoType"
        },
        "rateCodeInformation": {
          "description": "Rate Segment code information to delete.",
          "$ref": "#/definitions/deleteSegmentCodeInfoType"
        },
        "customCodeInformation": {
          "description": "Custom Segment code information to delete.",
          "$ref": "#/definitions/deleteSegmentCodeInfoType"
        },
        "transactionCodeInformation": {
          "description": "Transaction Segment code information to delete.",
          "$ref": "#/definitions/deleteSegmentCodeInfoType"
        },
        "cateringCodeInformation": {
          "description": "Catering Segment code information to delete.",
          "$ref": "#/definitions/deleteSegmentCodeInfoType"
        },
        "hotelId": {
          "description": "Opera Hotel code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "year": {
          "description": "Year of revenue.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "deleteSegmentCodeInfoType": {
      "type": "object",
      "description": "Holds segment code information to delete.",
      "properties": {
        "segmentCode": {
          "description": "segment code to delete budget information.",
          "$ref": "#/definitions/codeListType"
        },
        "segmentCodeGroup": {
          "description": "segment code group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "segment": {
          "description": "holds segment name of which segment code belongs to.",
          "$ref": "#/definitions/segmentNameType"
        },
        "deleteInformation": {
          "description": "holds budget information type to delete.",
          "$ref": "#/definitions/budgetInfoDeleteType"
        },
        "budgetMonth": {
          "description": "holds budget month information if daily information of a month needs to be deleted.",
          "$ref": "#/definitions/monthNoType"
        },
        "budget": {
          "description": "Flag to include Budget revenue/nights information.",
          "type": "boolean"
        },
        "forecast": {
          "description": "Flag to include Forecast revenue/nights information.",
          "type": "boolean"
        }
      }
    },
    "codeListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "minLength": 0,
        "maxLength": 20
      }
    },
    "segmentNameType": {
      "type": "string",
      "description": "Forecast.",
      "enum": [
        "Market",
        "Rate",
        "Custom",
        "Transaction",
        "Catering"
      ]
    },
    "budgetInfoDeleteType": {
      "type": "string",
      "description": "Daily information.",
      "enum": [
        "Monthly",
        "Daily"
      ]
    },
    "monthNoType": {
      "type": "string",
      "description": "December.",
      "enum": [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9",
        "10",
        "11",
        "12"
      ]
    },
    "budgetForecastInformation": {
      "type": "object",
      "properties": {
        "budgetForecastInformation": {
          "description": "Budget forecast information for segment codes.",
          "$ref": "#/definitions/budgetForecastInformationType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "budgetForecastInformationType": {
      "type": "object",
      "description": "Holds budget forecast information for included segment types.",
      "properties": {
        "marketSegmentInformation": {
          "description": "Holds budget forecast information for MarketCode segment.",
          "$ref": "#/definitions/budgetForecastMarketInfoType"
        },
        "rateSegmentInformation": {
          "description": "Holds budget forecast information for RateCode segment.",
          "$ref": "#/definitions/budgetForecastRateInfoType"
        },
        "customSegmentInformation": {
          "description": "Holds budget forecast information for Custom Code segment.",
          "$ref": "#/definitions/budgetForecastCustomInfoType"
        },
        "transactionSegmentInformation": {
          "description": "Holds budget forecast information for Transaction Code segment.",
          "$ref": "#/definitions/budgetForecastTransactionInfoType"
        },
        "cateringSegmentInformation": {
          "description": "Holds budget forecast information for Catering Code segment.",
          "$ref": "#/definitions/budgetForecastCateringInfoType"
        }
      }
    },
    "budgetForecastMarketInfoType": {
      "type": "object",
      "description": "Budget Forecast information for budget segment codes.",
      "properties": {
        "marketCodeInformation": {
          "description": "Budget Forecast information for segment.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/marketCodeInformationType"
          }
        },
        "marketCodeTotalInformation": {
          "description": "Budget Forecast totals information for segment.",
          "$ref": "#/definitions/marketCodeTotalInformationType"
        }
      }
    },
    "marketCodeInformationType": {
      "type": "object",
      "description": "Budget Forecast information for budget segment code.",
      "properties": {
        "marketCode": {
          "description": "Segment code for which budget forecast information is fetched.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "marketCodeDescription": {
          "description": "Segment code description for segment code.",
          "type": "string"
        },
        "budgetRevenueInfo": {
          "description": "Budget Revenue information for a segment code.",
          "$ref": "#/definitions/revenueNightsInfoType"
        },
        "forecastRevenueInfo": {
          "description": "Forecast Revenue information for a segment code.",
          "$ref": "#/definitions/revenueNightsInfoType"
        },
        "actualRevenueInfo": {
          "description": "Actual Revenue information for a segment code.",
          "$ref": "#/definitions/revenueNightsInfoType"
        },
        "aFVarianceInfo": {
          "description": "Actual Forecast Revenue variance for a segment code.",
          "$ref": "#/definitions/revenueNightsVarianceInfoType"
        },
        "aBVarianceInfo": {
          "description": "Actual Budget Revenue variance for a segment code.",
          "$ref": "#/definitions/revenueNightsVarianceInfoType"
        },
        "fBVarianceInfo": {
          "description": "Forecast Budget Revenue variance for a segment code.",
          "$ref": "#/definitions/revenueNightsVarianceInfoType"
        }
      }
    },
    "revenueNightsInfoType": {
      "type": "object",
      "description": "Revenue information for a segment code. Holds total and monthly revenue information.",
      "properties": {
        "totalRevenue": {
          "description": "Total revenue for segment code.",
          "type": "number"
        },
        "totalNights": {
          "description": "Total Nights for segment code.",
          "type": "number"
        },
        "monthlyRevenueInfo": {
          "description": "Revenue information for each month for segment code.",
          "type": "array",
          "maxItems": 12,
          "items": {
            "$ref": "#/definitions/monthlyRevenueNightsInfoType"
          }
        }
      }
    },
    "monthlyRevenueNightsInfoType": {
      "type": "object",
      "description": "Holds monthly revenue summary information",
      "properties": {
        "month": {
          "description": "Month number",
          "type": "integer"
        },
        "revenue": {
          "description": "Revenue total for a month.",
          "type": "number"
        },
        "roomNights": {
          "description": "No of nights for a month.",
          "type": "integer"
        }
      }
    },
    "revenueNightsVarianceInfoType": {
      "type": "array",
      "description": "Monthly Revenue Variance information.",
      "maxItems": 12,
      "items": {
        "$ref": "#/definitions/monthlyRevenueNightsVarianceInfoType"
      }
    },
    "monthlyRevenueNightsVarianceInfoType": {
      "type": "object",
      "description": "Revenue Variance information for a segment code for a month.",
      "properties": {
        "month": {
          "description": "Month number",
          "type": "integer"
        },
        "revenueVariance": {
          "description": "Variance for a month.",
          "type": "number"
        },
        "nightsVariance": {
          "description": "Variance for a month.",
          "type": "number"
        }
      }
    },
    "marketCodeTotalInformationType": {
      "type": "object",
      "description": "Budget Forecast information for segment.",
      "properties": {
        "budgetTotalInfo": {
          "description": "Budget Revenue information for a segment .",
          "$ref": "#/definitions/revenueNightsInfoType"
        },
        "forecastTotalInfo": {
          "description": "Forecast Revenue information for a segment .",
          "$ref": "#/definitions/revenueNightsInfoType"
        },
        "actualTotalInfo": {
          "description": "Actual Revenue information for a segment .",
          "$ref": "#/definitions/revenueNightsInfoType"
        },
        "aFVarianceTotalInfo": {
          "description": "Actual Forecast Revenue variance for a segment .",
          "$ref": "#/definitions/revenueNightsVarianceInfoType"
        },
        "aBVarianceTotalInfo": {
          "description": "Actual Budget Revenue variance for a segment .",
          "$ref": "#/definitions/revenueNightsVarianceInfoType"
        },
        "fBVarianceTotalInfo": {
          "description": "Forecast Budget Revenue variance for a segment .",
          "$ref": "#/definitions/revenueNightsVarianceInfoType"
        }
      }
    },
    "budgetForecastRateInfoType": {
      "type": "object",
      "description": "Budget Forecast information for budget segment codes.",
      "properties": {
        "rateCodeInformation": {
          "description": "Budget Forecast totals information for Rate segment.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/rateCodeInformationType"
          }
        },
        "rateCodeTotalInformation": {
          "description": "Budget Forecast totals information for Rate segment.",
          "$ref": "#/definitions/rateCodeTotalInformationType"
        }
      }
    },
    "rateCodeInformationType": {
      "type": "object",
      "description": "Budget Forecast information for budget segment code.",
      "properties": {
        "rateCode": {
          "description": "Segment code for which budget forecast information is fetched.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateCodeDescription": {
          "description": "Segment code description for segment code.",
          "type": "string"
        },
        "budgetRevenueInfo": {
          "description": "Budget Revenue information for a segment code.",
          "$ref": "#/definitions/revenueNightsInfoType"
        },
        "forecastRevenueInfo": {
          "description": "Forecast Revenue information for a segment code.",
          "$ref": "#/definitions/revenueNightsInfoType"
        },
        "actualRevenueInfo": {
          "description": "Actual Revenue information for a segment code.",
          "$ref": "#/definitions/revenueNightsInfoType"
        },
        "aFVarianceInfo": {
          "description": "Actual Forecast Revenue variance for a segment code.",
          "$ref": "#/definitions/revenueNightsVarianceInfoType"
        },
        "aBVarianceInfo": {
          "description": "Actual Budget Revenue variance for a segment code.",
          "$ref": "#/definitions/revenueNightsVarianceInfoType"
        },
        "fBVarianceInfo": {
          "description": "Forecast Budget Revenue variance for a segment code.",
          "$ref": "#/definitions/revenueNightsVarianceInfoType"
        }
      }
    },
    "rateCodeTotalInformationType": {
      "type": "object",
      "description": "Budget Forecast information for segment.",
      "properties": {
        "budgetTotalInfo": {
          "description": "Budget Revenue information for a segment .",
          "$ref": "#/definitions/revenueNightsInfoType"
        },
        "forecastTotalInfo": {
          "description": "Forecast Revenue information for a segment .",
          "$ref": "#/definitions/revenueNightsInfoType"
        },
        "actualTotalInfo": {
          "description": "Actual Revenue information for a segment .",
          "$ref": "#/definitions/revenueNightsInfoType"
        },
        "aFVarianceTotalInfo": {
          "description": "Actual Forecast Revenue variance for a segment .",
          "$ref": "#/definitions/revenueNightsVarianceInfoType"
        },
        "aBVarianceTotalInfo": {
          "description": "Actual Budget Revenue variance for a segment .",
          "$ref": "#/definitions/revenueNightsVarianceInfoType"
        },
        "fBVarianceTotalInfo": {
          "description": "Forecast Budget Revenue variance for a segment .",
          "$ref": "#/definitions/revenueNightsVarianceInfoType"
        }
      }
    },
    "budgetForecastCustomInfoType": {
      "type": "object",
      "description": "Budget Forecast information for budget Custom codes.",
      "properties": {
        "customCodeInformation": {
          "description": "Budget Forecast information for Custom segment code .",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/customCodeInformationType"
          }
        },
        "customCodeTotalInformation": {
          "description": "Budget Forecast information for Custom segment code .",
          "$ref": "#/definitions/customCodeTotalInformationType"
        }
      }
    },
    "customCodeInformationType": {
      "type": "object",
      "description": "Budget Forecast information for Custom segment code.",
      "properties": {
        "customCode": {
          "description": "Custom code for which budget forecast information is fetched.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "customCodeDescription": {
          "description": "Custom code description for Custom code.",
          "type": "string"
        },
        "budgetValueInfo": {
          "description": "Budget Value information for a Custom code.",
          "$ref": "#/definitions/customValueInfoType"
        },
        "forecastValueInfo": {
          "description": "Forecast Value information for a Custom code.",
          "$ref": "#/definitions/customValueInfoType"
        },
        "actualValueInfo": {
          "description": "Actual Value information for a Custom code.",
          "$ref": "#/definitions/customValueInfoType"
        },
        "aFVarianceInfo": {
          "description": "Actual Forecast Value variance for a Custom code.",
          "$ref": "#/definitions/customVarianceInfoType"
        },
        "aBVarianceInfo": {
          "description": "Actual Budget Value variance for a Custom code.",
          "$ref": "#/definitions/customVarianceInfoType"
        },
        "fBVarianceInfo": {
          "description": "Forecast Budget Value variance for a Custom code.",
          "$ref": "#/definitions/customVarianceInfoType"
        }
      }
    },
    "customValueInfoType": {
      "type": "object",
      "description": "Value information for a CUSTOM segment code. Holds total and monthly Value information.",
      "properties": {
        "totalValue": {
          "description": "Total Value for CUSTOM segment code.",
          "type": "number"
        },
        "monthlyValueInfo": {
          "description": "Value information for each month for CUSTOM segment code.",
          "type": "array",
          "maxItems": 12,
          "items": {
            "$ref": "#/definitions/monthlyValueInfoType"
          }
        }
      }
    },
    "monthlyValueInfoType": {
      "type": "object",
      "description": "Holds monthly value summary information",
      "properties": {
        "month": {
          "description": "Month number",
          "type": "integer"
        },
        "value": {
          "description": "Value information for a month.",
          "type": "number"
        }
      }
    },
    "customVarianceInfoType": {
      "type": "array",
      "description": "Monthly Value Variance information.",
      "maxItems": 12,
      "items": {
        "$ref": "#/definitions/monthlyCustomVarianceInfoType"
      }
    },
    "monthlyCustomVarianceInfoType": {
      "type": "object",
      "description": "Value Variance information for a CUSTOM code for a month.",
      "properties": {
        "month": {
          "description": "Month number",
          "type": "integer"
        },
        "variance": {
          "description": "Variance for a month.",
          "type": "number"
        }
      }
    },
    "customCodeTotalInformationType": {
      "type": "object",
      "description": "Budget Forecast information for Custom segment.",
      "properties": {
        "budgetTotalInfo": {
          "description": "Budget Value information for a Custom code.",
          "$ref": "#/definitions/customValueInfoType"
        },
        "forecastTotalInfo": {
          "description": "Forecast Value information for a Custom code.",
          "$ref": "#/definitions/customValueInfoType"
        },
        "actualTotalInfo": {
          "description": "Actual Value information for a Custom code.",
          "$ref": "#/definitions/customValueInfoType"
        },
        "aFVarianceTotalInfo": {
          "description": "Actual Forecast Value variance for a Custom code.",
          "$ref": "#/definitions/customVarianceInfoType"
        },
        "aBVarianceTotalInfo": {
          "description": "Actual Budget Value variance for a Custom code.",
          "$ref": "#/definitions/customVarianceInfoType"
        },
        "fBVarianceTotalInfo": {
          "description": "Forecast Budget Value variance for a Custom code.",
          "$ref": "#/definitions/customVarianceInfoType"
        }
      }
    },
    "budgetForecastTransactionInfoType": {
      "type": "object",
      "description": "Budget Forecast information for budget Transaction codes.",
      "properties": {
        "transactionCodeInformation": {
          "description": "Budget Forecast information for Transaction segment code .",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/transactionCodeInformationType"
          }
        },
        "transactionCodeTotalsInformation": {
          "description": "Budget Forecast information for Transaction segment code .",
          "$ref": "#/definitions/transactionCodeTotalsInformationType"
        }
      }
    },
    "transactionCodeInformationType": {
      "type": "object",
      "description": "Budget Forecast information for Transaction segment code.",
      "properties": {
        "transactionCode": {
          "description": "Transaction code for which budget forecast information is fetched.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionCodeGrp": {
          "description": "Transaction code group of segment code.",
          "type": "string"
        },
        "transactionCodeDescription": {
          "description": "Transaction code description for Transaction code.",
          "type": "string"
        },
        "budgetInfo": {
          "description": "Budget revenue information for a Transaction code.",
          "$ref": "#/definitions/transactionInfoType"
        },
        "forecastInfo": {
          "description": "Forecast revenue information for a Transaction code.",
          "$ref": "#/definitions/transactionInfoType"
        },
        "actualInfo": {
          "description": "Actual revenue information for a Transaction code.",
          "$ref": "#/definitions/transactionInfoType"
        },
        "aFVarianceInfo": {
          "description": "Actual Forecast revenue variance for a Transaction code.",
          "$ref": "#/definitions/transactionVarianceInfoType"
        },
        "aBVarianceInfo": {
          "description": "Actual Budget revenue variance for a Transaction code.",
          "$ref": "#/definitions/transactionVarianceInfoType"
        },
        "fBVarianceInfo": {
          "description": "Forecast Budget revenue variance for a Transaction code.",
          "$ref": "#/definitions/transactionVarianceInfoType"
        }
      }
    },
    "transactionInfoType": {
      "type": "object",
      "description": "Revenue information for a TRANSACTION segment code. Holds total and monthly revenue information.",
      "properties": {
        "totalRevenue": {
          "description": "Total Value for TRANSACTION segment code.",
          "type": "number"
        },
        "monthlyRevenueInfo": {
          "description": "Value information for each month for TRANSACTION segment code.",
          "type": "array",
          "maxItems": 12,
          "items": {
            "$ref": "#/definitions/monthlyTransactionInfoType"
          }
        }
      }
    },
    "monthlyTransactionInfoType": {
      "type": "object",
      "description": "Holds monthly Revenue summary information",
      "properties": {
        "month": {
          "description": "Month number",
          "type": "integer"
        },
        "revenue": {
          "description": "Revenue information for a month.",
          "type": "number"
        }
      }
    },
    "transactionVarianceInfoType": {
      "type": "array",
      "description": "Monthly Revenue Variance information.",
      "maxItems": 12,
      "items": {
        "$ref": "#/definitions/monthlyTransactionVarianceInfoType"
      }
    },
    "monthlyTransactionVarianceInfoType": {
      "type": "object",
      "description": "Revenue Variance information for a segment code for a month.",
      "properties": {
        "month": {
          "description": "Month number",
          "type": "integer"
        },
        "revenueVariance": {
          "description": "Variance for a month.",
          "type": "number"
        }
      }
    },
    "transactionCodeTotalsInformationType": {
      "type": "object",
      "description": "Budget Forecast totals information for Transaction segment.",
      "properties": {
        "budgetTotalInfo": {
          "description": "Budget revenue information for a Transaction.",
          "$ref": "#/definitions/transactionInfoType"
        },
        "forecastTotalInfo": {
          "description": "Forecast revenue information for a Transaction.",
          "$ref": "#/definitions/transactionInfoType"
        },
        "actualTotalInfo": {
          "description": "Actual revenue information for a Transaction.",
          "$ref": "#/definitions/transactionInfoType"
        },
        "aFVarianceTotalInfo": {
          "description": "Actual Forecast revenue variance for a Transaction.",
          "$ref": "#/definitions/transactionVarianceInfoType"
        },
        "aBVarianceTotalInfo": {
          "description": "Actual Budget revenue variance for a Transaction.",
          "$ref": "#/definitions/transactionVarianceInfoType"
        },
        "fBVarianceTotalInfo": {
          "description": "Forecast Budget revenue variance for a Transaction.",
          "$ref": "#/definitions/transactionVarianceInfoType"
        }
      }
    },
    "budgetForecastCateringInfoType": {
      "type": "object",
      "description": "Budget Forecast information for budget Catering codes.",
      "properties": {
        "cateringCodeInformation": {
          "description": "Budget Forecast totals information for Catering segment.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/cateringCodeInformationType"
          }
        },
        "cateringTotalsInformation": {
          "description": "Budget Forecast totals information for Catering segment.",
          "$ref": "#/definitions/cateringTotalsInformationType"
        }
      }
    },
    "cateringCodeInformationType": {
      "type": "object",
      "description": "Budget Forecast information for Catering segment code.",
      "properties": {
        "cateringCode": {
          "description": "Catering segment code for which budget forecast information is fetched.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cateringCodeGrp": {
          "description": "Catering code group of segment code.",
          "type": "string"
        },
        "cateringCodeDescription": {
          "description": "Catering code description for segment code.",
          "type": "string"
        },
        "budgetInfo": {
          "description": "Budget Revenue information for a Catering code.",
          "$ref": "#/definitions/cateringInfoType"
        },
        "forecastInfo": {
          "description": "Forecast Revenue information for a Catering code.",
          "$ref": "#/definitions/cateringInfoType"
        },
        "actualInfo": {
          "description": "Actual Revenue information for a Catering code.",
          "$ref": "#/definitions/cateringInfoType"
        },
        "aFVarianceInfo": {
          "description": "Actual Forecast variance for a Catering code.",
          "$ref": "#/definitions/cateringVarianceInfoType"
        },
        "aBVarianceInfo": {
          "description": "Actual Budget variance for a Catering code.",
          "$ref": "#/definitions/cateringVarianceInfoType"
        },
        "fBVarianceInfo": {
          "description": "Forecast Budget variance for a Catering code.",
          "$ref": "#/definitions/cateringVarianceInfoType"
        }
      }
    },
    "cateringInfoType": {
      "type": "object",
      "description": "Revenue and Covers information for a catering segment code. Holds total and monthly information.",
      "properties": {
        "totalRevenue": {
          "description": "Total revenue for segment code.",
          "type": "number"
        },
        "totalCovers": {
          "description": "Total Covers for segment code.",
          "type": "number"
        },
        "monthlyInfo": {
          "description": "Catering information for each month for segment code.",
          "type": "array",
          "maxItems": 12,
          "items": {
            "$ref": "#/definitions/monthlyCateringInfoType"
          }
        }
      }
    },
    "monthlyCateringInfoType": {
      "type": "object",
      "description": "Holds monthly Catering summary information",
      "properties": {
        "month": {
          "description": "Month number",
          "type": "integer"
        },
        "revenue": {
          "description": "Revenue total for a month.",
          "type": "number"
        },
        "covers": {
          "description": "No of Covers for a month.",
          "type": "integer"
        }
      }
    },
    "cateringVarianceInfoType": {
      "type": "array",
      "description": "Monthly Variance information.",
      "maxItems": 12,
      "items": {
        "$ref": "#/definitions/monthlyCateringVarianceInfoType"
      }
    },
    "monthlyCateringVarianceInfoType": {
      "type": "object",
      "description": "Variance information for a catering segment code for a month.",
      "properties": {
        "month": {
          "description": "Month number",
          "type": "integer"
        },
        "revenueVariance": {
          "description": "Variance for a month.",
          "type": "number"
        },
        "coversVariance": {
          "description": "Variance for a month.",
          "type": "number"
        }
      }
    },
    "cateringTotalsInformationType": {
      "type": "object",
      "description": "Budget Forecast totals information for Catering segment.",
      "properties": {
        "budgetTotalInfo": {
          "description": "Budget Revenue information for a Catering code.",
          "$ref": "#/definitions/cateringInfoType"
        },
        "forecastTotalInfo": {
          "description": "Forecast Revenue information for a Catering code.",
          "$ref": "#/definitions/cateringInfoType"
        },
        "actualTotalInfo": {
          "description": "Actual Revenue information for a Catering code.",
          "$ref": "#/definitions/cateringInfoType"
        },
        "aFVarianceTotalInfo": {
          "description": "Actual Forecast variance for a Catering code.",
          "$ref": "#/definitions/cateringVarianceInfoType"
        },
        "aBVarianceTotalInfo": {
          "description": "Actual Budget variance for a Catering code.",
          "$ref": "#/definitions/cateringVarianceInfoType"
        },
        "fBVarianceTotalInfo": {
          "description": "Forecast Budget variance for a Catering code.",
          "$ref": "#/definitions/cateringVarianceInfoType"
        }
      }
    },
    "budgetForecastInformationBase": {
      "type": "object",
      "properties": {
        "budgetForecastInformation": {
          "description": "Search criteria for budget forecast information.",
          "$ref": "#/definitions/budgetForecastInformationBaseType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "budgetForecastInformationBaseType": {
      "type": "object",
      "description": "Holds budget forecast information for included segment types.",
      "properties": {
        "marketSegmentInformation": {
          "description": "Holds budget forecast information for MarketCode segment.",
          "$ref": "#/definitions/budgetForecastMarketInfoBaseType"
        },
        "rateSegmentInformation": {
          "description": "Holds budget forecast information for RateCode segment.",
          "$ref": "#/definitions/budgetForecastRateInfoBaseType"
        },
        "customSegmentInformation": {
          "description": "Holds budget forecast information for Custom Code segment.",
          "$ref": "#/definitions/budgetForecastCustomInfoBaseType"
        },
        "transactionSegmentInformation": {
          "description": "Holds budget forecast information for Transaction Code segment.",
          "$ref": "#/definitions/budgetForecastTransactionInfoBaseType"
        },
        "cateringSegmentInformation": {
          "description": "Holds budget forecast information for Catering Code segment.",
          "$ref": "#/definitions/budgetForecastCateringInfoBaseType"
        },
        "hotelId": {
          "description": "Opera Hotel code for the Fetch Revenue information.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "year": {
          "description": "Year of revenue to be fetched.",
          "type": "string",
          "minLength": 4,
          "maxLength": 4
        }
      }
    },
    "budgetForecastMarketInfoBaseType": {
      "type": "object",
      "description": "Budget Forecast information for budget segment codes.",
      "properties": {
        "marketCodeInformation": {
          "description": "Budget Forecast information for budget segment code .",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/marketCodeInformationBaseType"
          }
        },
        "revenue": {
          "description": "Flag to indicate if revenue information is included.",
          "type": "boolean"
        },
        "nights": {
          "description": "Flag to indicate if nights information is included.",
          "type": "boolean"
        }
      }
    },
    "marketCodeInformationBaseType": {
      "type": "object",
      "description": "Budget Forecast information for budget segment code.",
      "properties": {
        "marketCode": {
          "description": "Segment code for which budget forecast information is fetched.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "marketCodeDescription": {
          "description": "Segment code description for segment code.",
          "type": "string"
        },
        "budgetRevenueInfo": {
          "description": "Budget Revenue information for a segment code.",
          "$ref": "#/definitions/revenueNightsInfoType"
        },
        "forecastRevenueInfo": {
          "description": "Forecast Revenue information for a segment code.",
          "$ref": "#/definitions/revenueNightsInfoType"
        }
      }
    },
    "budgetForecastRateInfoBaseType": {
      "type": "object",
      "description": "Budget Forecast information for budget segment codes.",
      "properties": {
        "rateCodeInformation": {
          "description": "Budget Forecast information for budget segment code .",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/rateCodeInformationBaseType"
          }
        },
        "revenue": {
          "description": "Flag to indicate if revenue information has to be included.",
          "type": "boolean"
        },
        "nights": {
          "description": "Flag to indicate if nights information has to be included.",
          "type": "boolean"
        }
      }
    },
    "rateCodeInformationBaseType": {
      "type": "object",
      "description": "Budget Forecast information for budget segment code.",
      "properties": {
        "rateCode": {
          "description": "Segment code for which budget forecast information is fetched.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateCodeDescription": {
          "description": "Segment code description for segment code.",
          "type": "string"
        },
        "budgetRevenueInfo": {
          "description": "Budget Revenue information for a segment code.",
          "$ref": "#/definitions/revenueNightsInfoType"
        },
        "forecastRevenueInfo": {
          "description": "Forecast Revenue information for a segment code.",
          "$ref": "#/definitions/revenueNightsInfoType"
        }
      }
    },
    "budgetForecastCustomInfoBaseType": {
      "type": "object",
      "description": "Budget Forecast information for budget Custom codes.",
      "properties": {
        "customCodeInformation": {
          "description": "Budget Forecast information for Custom segment code .",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/customCodeInformationBaseType"
          }
        },
        "customValue": {
          "description": "Flag to indicate if values information has to be included.",
          "type": "boolean"
        }
      }
    },
    "customCodeInformationBaseType": {
      "type": "object",
      "description": "Budget Forecast information for Custom segment code.",
      "properties": {
        "customCode": {
          "description": "Custom code for which budget forecast information is fetched.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "customCodeDescription": {
          "description": "Custom code description for Custom code.",
          "type": "string"
        },
        "budgetValueInfo": {
          "description": "Budget Value information for a Custom code.",
          "$ref": "#/definitions/customValueInfoType"
        },
        "forecastValueInfo": {
          "description": "Forecast Value information for a Custom code.",
          "$ref": "#/definitions/customValueInfoType"
        }
      }
    },
    "budgetForecastTransactionInfoBaseType": {
      "type": "object",
      "description": "Budget Forecast information for budget Transaction codes.",
      "properties": {
        "transactionCodeInformation": {
          "description": "Budget Forecast information for Transaction segment code .",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/transactionCodeInformationBaseType"
          }
        },
        "revenue": {
          "description": "Flag to indicate if revenue information has to be included.",
          "type": "boolean"
        }
      }
    },
    "transactionCodeInformationBaseType": {
      "type": "object",
      "description": "Budget Forecast information for Transaction segment code.",
      "properties": {
        "transactionCode": {
          "description": "Transaction code for which budget forecast information is fetched.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionCodeGrp": {
          "description": "Transaction code group of segment code.",
          "type": "string"
        },
        "transactionCodeDescription": {
          "description": "Transaction code description for Transaction code.",
          "type": "string"
        },
        "budgetInfo": {
          "description": "Budget revenue information for a Transaction code.",
          "$ref": "#/definitions/transactionInfoType"
        },
        "forecastInfo": {
          "description": "Forecast revenue information for a Transaction code.",
          "$ref": "#/definitions/transactionInfoType"
        }
      }
    },
    "budgetForecastCateringInfoBaseType": {
      "type": "object",
      "description": "Budget Forecast information for budget Catering codes.",
      "properties": {
        "cateringCodeInformation": {
          "description": "Budget Forecast information for Catering segment code .",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/cateringCodeInformationBaseType"
          }
        },
        "revenue": {
          "description": "Flag to indicate if revenue information has to be included.",
          "type": "boolean"
        },
        "covers": {
          "description": "Flag to indicate if covers information has to be included.",
          "type": "boolean"
        }
      }
    },
    "cateringCodeInformationBaseType": {
      "type": "object",
      "description": "Budget Forecast information for Catering segment code.",
      "properties": {
        "cateringCode": {
          "description": "Catering segment code for which budget forecast information is fetched.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cateringCodeGrp": {
          "description": "Catering code group of segment code.",
          "type": "string"
        },
        "cateringCodeDescription": {
          "description": "Catering code description for segment code.",
          "type": "string"
        },
        "budgetInfo": {
          "description": "Budget Revenue information for a Catering code.",
          "$ref": "#/definitions/cateringInfoType"
        },
        "forecastInfo": {
          "description": "Forecast Revenue information for a Catering code.",
          "$ref": "#/definitions/cateringInfoType"
        }
      }
    },
    "cardReaderDelimiters": {
      "type": "object",
      "properties": {
        "delimiters": {
          "description": "Delimiters configured for the requested device.",
          "$ref": "#/definitions/cardReaderDelimitersType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cardReaderDelimitersType": {
      "type": "object",
      "description": "Configured delimiters for parsing a card track data based on a particular card reader device.",
      "properties": {
        "deviceId": {
          "description": "Device ID to which this delimiter is assigned.",
          "type": "integer"
        },
        "track2Separator": {
          "description": "Character to be used as Track2 Separator.",
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "expirationDateStartCharacter": {
          "description": "Character that will denote the start of Expiry Date.",
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "cardHolderNameSeparator": {
          "description": "Character to be used as Guest Name separator.",
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "endOfTrackSeparator": {
          "description": "Character to be used as End of Track Separator.",
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "secureDevice": {
          "description": "A flag indicating whether the data from the device is encrypted or not.",
          "type": "boolean"
        },
        "additionalInfoSeparator": {
          "description": "Character to be used as Additional Info Separator.",
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "kSNField": {
          "description": "Interpreted as the field position or field ID of KSN, depending on the value of Additional Information Format Type.",
          "type": "integer"
        },
        "eT1Field": {
          "description": "Interpreted as the field position or field ID of Encrypted Track 1, depending on the value of Additional Information Format Type.",
          "type": "integer"
        },
        "eT2Field": {
          "description": "Interpreted as the field position or field ID of Encrypted Track 2, depending on the value of Additional Information Format Type.",
          "type": "integer"
        },
        "encryptionFormatCode": {
          "description": "Encryption Format Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "additionalInfoEndSeparator": {
          "description": "Character to be used as Additional Info End Separator.",
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "additionalInfoFormatType": {
          "description": "String to be used to indicate whether KSNField, ET1Field, ET2Field should be interpreted as field positions or field IDs.",
          "type": "string"
        },
        "trackDataPattern": {
          "description": "The Regular Expression pattern of the track data that is generated by this device.",
          "type": "string"
        },
        "manualTokenPattern": {
          "description": "The Regular Expression pattern of the token that is present in the track data if data was inputted manually through the device instead of swiping.",
          "type": "string"
        },
        "softwareId": {
          "description": "Software ID of device.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "cashiersDetails": {
      "type": "object",
      "properties": {
        "cashiers": {
          "description": "Lists of cashiers and their information.",
          "$ref": "#/definitions/cashiersType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashiersType": {
      "type": "array",
      "description": "Details about a cashier.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cashierType"
      }
    },
    "cashierType": {
      "type": "object",
      "description": "Cashiers Information.",
      "properties": {
        "cashierId": {
          "description": "Numeric code for cashier ID.",
          "type": "number"
        },
        "currencyCode": {
          "description": "The currency code used by the hotel that the cashier belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "name": {
          "description": "Name assigned to the cashier.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "attachedUser": {
          "description": "User(s) assigned to the cashier.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "cashierType": {
          "description": "Cashier / Interface Cashier / LDAP Template options are provided.",
          "$ref": "#/definitions/cashierTypeType"
        },
        "startingAmount": {
          "description": "The Starting Amount in the Cashier drawer.",
          "type": "number"
        },
        "floatOverShort": {
          "description": "Selected if the cashier is allowed to drop below or above the required drop amount.",
          "type": "boolean"
        },
        "usageInfo": {
          "description": "Information about how the cashier is used.",
          "type": "object",
          "properties": {
            "maximumDailyUses": {
              "description": "The Maximum Daily Uses for the cashier.",
              "type": "integer"
            },
            "history": {
              "description": "Statistics about the use of the cashier.",
              "type": "object",
              "properties": {
                "lastOpened": {
                  "description": "The date that the cashier last opened.",
                  "type": "string",
                  "format": "date",
                  "maxLength": 8
                },
                "timesOpened": {
                  "description": "The number of times the cashier has opened their account today.",
                  "type": "integer"
                }
              }
            }
          }
        },
        "kiosk": {
          "description": "Indicator that this cashier is the one to be used by Kiosk Partner to carry out postings and payments for the guest.",
          "type": "boolean"
        },
        "inactive": {
          "description": "Indicator that tells whether the cashier is active or not.",
          "type": "boolean"
        },
        "open": {
          "description": "Indicator that tells whether the cashier is open or not.",
          "type": "boolean"
        },
        "appUsers": {
          "description": "List of application users associated with the cashier",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/applicationUserType"
          }
        }
      }
    },
    "cashierTypeType": {
      "type": "string",
      "description": "The types of cashier.",
      "enum": [
        "Cashier",
        "InterfaceCashier",
        "LDAPTemplate"
      ]
    },
    "templateCashierShiftDropLocationsDetails": {
      "type": "object",
      "description": "Response object for fetching Template Cashier Shift Drop Locations.",
      "properties": {
        "templateCashierShiftDropLocations": {
          "description": "Collection of Template Cashier Shift Drop Locations.",
          "$ref": "#/definitions/templateCashierShiftDropLocationsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateCashierShiftDropLocationsType": {
      "type": "array",
      "description": "List of Template Cashier Shift Drop Locations.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/templateCashierShiftDropLocationType"
      }
    },
    "templateCashierShiftDropLocationType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "templateCashierShiftDropLocationsCriteria": {
      "type": "object",
      "description": "Request object for creating Template Cashier Shift Drop Locations.",
      "properties": {
        "templateCashierShiftDropLocations": {
          "description": "Template Cashier Shift Drop Locations to be created.",
          "$ref": "#/definitions/templateCashierShiftDropLocationsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateCashierShiftDropLocationsToBeChanged": {
      "type": "object",
      "description": "Request object for changing Template Cashier Shift Drop Locations.",
      "properties": {
        "templateCashierShiftDropLocations": {
          "description": "Template Cashier Shift Drop Locations to be changed.",
          "$ref": "#/definitions/templateCashierShiftDropLocationsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashiers": {
      "type": "object",
      "properties": {
        "cashiers": {
          "description": "List of cashiers to be modified.",
          "$ref": "#/definitions/cashiersType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashierNumber": {
      "type": "object",
      "properties": {
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashierId": {
      "type": "number",
      "description": "The Cashier ID of the Cashier who is currently processing the transaction(s)."
    },
    "collectingAgentTaxes": {
      "type": "object",
      "properties": {
        "collectingAgentTaxes": {
          "description": "Collection of Collecting Agent Taxes details.",
          "$ref": "#/definitions/collectingAgentTaxesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "collectingAgentTaxesType": {
      "type": "object",
      "description": "Type which holds collection of Agent Tax details",
      "properties": {
        "collectingAgentTax": {
          "description": "It represent Agent Tax details.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/collectingAgentTaxType"
          }
        },
        "overrideCollectingAgentTaxes": {
          "description": "Flag that indicates if Collecting Agent Taxes check should be skipped when given Tax code already exist.",
          "type": "boolean"
        }
      }
    },
    "collectingAgentTaxType": {
      "type": "object",
      "description": "Type which holds Collecting Agent Taxes primary details.",
      "properties": {
        "hotelId": {
          "description": "It represents Hotel code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "taxCode": {
          "description": "Primary Key Sequence",
          "$ref": "#/definitions/taxCodeSeqType"
        },
        "taxType": {
          "description": "Tax Type for which tax is applicable.",
          "$ref": "#/definitions/codeListType"
        },
        "taxTransactionCode": {
          "description": "The Transaction Code used to post the Taxes.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "percentage": {
          "description": "Percentage used to calculate the Taxes",
          "type": "integer"
        },
        "triggerAmount": {
          "description": "Minimum Net amount (gross minus taxes) that the folio has to reach to apply the Tax.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "taxVoid": {
          "description": "Indicates the Collecting Agent Tax that cannot be combined with this Tax. When this Tax is calculated then the Tax for the TaxVoid sequence will not be calculated.",
          "$ref": "#/definitions/taxCodeSeqType"
        },
        "newTaxType": {
          "description": "New Tax Type for which tax is applicable.",
          "$ref": "#/definitions/codeListType"
        },
        "calculatedOnTransactionCodes": {
          "description": "Collection of Transaction Codes based on which the Collecting Agent Tax will be calculated.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeDescriptionType"
          }
        },
        "calculatedOnArrangementCodes": {
          "description": "Collection of Arrangement Codes based on which the Collecting Agent Tax will be calculated.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeDescriptionType"
          }
        }
      }
    },
    "taxCodeSeqType": {
      "type": "integer",
      "description": "Primary Key Sequence.",
      "minimum": 1,
      "maximum": 5
    },
    "commissionCodesSummary": {
      "type": "object",
      "description": "Response object for fetching commission codes.",
      "properties": {
        "commissionCodesSummary": {
          "description": "Collection of commission code details.",
          "$ref": "#/definitions/commissionCodesSummaryType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commissionCodesSummaryType": {
      "type": "array",
      "description": "Commission code details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/commissionCodeSummaryInfoType"
      }
    },
    "commissionCodeSummaryInfoType": {
      "type": "object",
      "description": "Commission codes summary details.",
      "properties": {
        "hotelId": {
          "description": "Property of the commission codes.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "commissionCode": {
          "description": "Commission code details.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Commission code description for which details are fetched.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "sequence": {
          "description": "Commission code sequence number.",
          "type": "integer"
        },
        "basedOn": {
          "description": "Commission based on information.",
          "$ref": "#/definitions/commissionBasedOnType"
        },
        "commissionAmount": {
          "description": "Commission amount that needs to be paid.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "taxPercentage": {
          "description": "Commission paid Tax details.",
          "type": "number"
        },
        "default": {
          "type": "boolean"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "commissionBasedOnType": {
      "type": "string",
      "description": "Commission based on Revenue.",
      "enum": [
        "Reservation",
        "Revenue"
      ]
    },
    "commissionCodes": {
      "type": "object",
      "description": "Request object to update commission codes.",
      "properties": {
        "commissionCodes": {
          "description": "Commission codes information to update.",
          "$ref": "#/definitions/commissionCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commissionCodesType": {
      "type": "array",
      "description": "Commission code details object.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/commissionCodeInfoType"
      }
    },
    "commissionCodeInfoType": {
      "type": "object",
      "description": "Commission code info.",
      "properties": {
        "hotelId": {
          "description": "Property of the commission codes.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "commissionCode": {
          "description": "Commission code for which details are fetched.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Commission code description for which details are fetched.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "sequence": {
          "description": "Commission code sequence number.",
          "type": "integer"
        },
        "commissionCodeHoldStatus": {
          "description": "Commission code hold status details.",
          "$ref": "#/definitions/commissionCodeHoldStatusType"
        },
        "reservationHistoryRecords": {
          "description": "Commission paid manually details.",
          "$ref": "#/definitions/commissionPaidDetailsType"
        },
        "commissionCalculation": {
          "description": "Commission calculation type based on details.",
          "$ref": "#/definitions/commissionCalculationType"
        },
        "taxPercentage": {
          "description": "Commission paid Tax details.",
          "type": "number"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "commissionCodeHoldStatusType": {
      "type": "object",
      "description": "Commission Code Hold Status type",
      "properties": {
        "holdAlways": {
          "description": "Hold always status for commission code.",
          "type": "boolean"
        },
        "holdPrepaid": {
          "description": "Hold prepaid status for commission code.",
          "type": "boolean"
        },
        "holdAccountReceivables": {
          "description": "Hold accoutn receivables status for commission code.",
          "type": "boolean"
        }
      }
    },
    "commissionPaidDetailsType": {
      "type": "object",
      "description": "Commission paid details.",
      "properties": {
        "perNight": {
          "type": "boolean"
        },
        "perStay": {
          "type": "boolean"
        },
        "commissionAmount": {
          "description": "Commission amount that needs to be paid.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "weekEndCommissionAmount": {
          "description": "Commission amount that needs to be paid over weekend.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "commissionType": {
          "description": "Indicates the type of commission paid to agent.",
          "type": "string",
          "minLength": 1,
          "maxLength": 1
        }
      }
    },
    "commissionCalculationType": {
      "type": "object",
      "description": "Commission calculation type based on details.",
      "properties": {
        "revenueBasedCommission": {
          "$ref": "#/definitions/revenueBasedCommissionType"
        },
        "reservationBasedCommission": {
          "$ref": "#/definitions/reservationBasedCommissionType"
        }
      }
    },
    "revenueBasedCommissionType": {
      "type": "array",
      "description": "Revenue based commission details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/commissionCodeTransactionType"
      }
    },
    "commissionCodeTransactionType": {
      "type": "object",
      "description": "Revenue based commission details.",
      "properties": {
        "transactionCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionCodeDesc": {
          "type": "string"
        },
        "basedOnNetAmount": {
          "type": "boolean"
        },
        "commissionPaidDetails": {
          "$ref": "#/definitions/commissionPaidDetailsType"
        }
      }
    },
    "reservationBasedCommissionType": {
      "type": "object",
      "description": "Reservation based commission details.",
      "properties": {
        "commissionPaidDetails": {
          "$ref": "#/definitions/commissionPaidDetailsType"
        }
      }
    },
    "compAuthorizer": {
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria to fetch the check details.",
          "$ref": "#/definitions/compAuthorizerType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "compAuthorizerType": {
      "type": "object",
      "description": "Information related to comp authorizers.",
      "properties": {
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "authorizerId": {
          "description": "Unique id for the authorizer.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "profileId": {
          "description": "Profile Id of the authorizer.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "authorizer": {
          "description": "Name for the authorizer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "authorizerDisplayName": {
          "description": "Display name for the authorizer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "lastName": {
          "description": "Last name for the authorizer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "firstName": {
          "description": "First name for the authorizer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "name": {
          "description": "Full name of the authorizer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "totalCreditLimit": {
          "description": "Credit limit associated for the authorizer.",
          "type": "integer"
        },
        "aRAccount": {
          "description": "AR account for the comp authorizers.",
          "$ref": "#/definitions/aRAccountType"
        },
        "compAuthorizerHeaders": {
          "description": "Comp authorizer details information.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/compAuthorizerHeaderType"
          }
        },
        "inactive": {
          "description": "Indicator that tells whether the authorizer is active or not.",
          "type": "boolean"
        },
        "overrideWarning": {
          "description": "Indicator that tells whether to override warnings when deactivating authorizer.",
          "type": "boolean"
        }
      }
    },
    "aRAccountType": {
      "type": "object",
      "description": "Accounts Receivabales Account details type.",
      "properties": {
        "hotelId": {
          "description": "Property where the AR Account exists.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "accountName": {
          "description": "Name of the AR Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "accountId": {
          "description": "The unique ID for the Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountNo": {
          "description": "The Account Number for the Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "profileId": {
          "description": "Internal Profile ID for the AR Account.",
          "$ref": "#/definitions/profileId"
        },
        "balance": {
          "description": "Open Balance of the Account for this property.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "creditLimit": {
          "description": "The maximum credit allowed for the Account.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "contactName": {
          "description": "The person to contact for this Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "paymentDueDays": {
          "description": "Number of days on which person can make payment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "monthEndCalcYN": {
          "description": "Month End Calculation.",
          "type": "boolean"
        },
        "address": {
          "description": "Address information for the address which is attached to this AR Account.",
          "$ref": "#/definitions/addressInfoType"
        },
        "email": {
          "description": "Email information for the Account. This is the Email that is attached to this AR Account.",
          "$ref": "#/definitions/emailInfoType"
        },
        "telephones": {
          "description": "The Telephone and Fax details attached to the Account.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/telephoneInfoType"
          }
        },
        "lastReminderInfo": {
          "description": "Report History Type used as based type for Remiders and Statements History types.",
          "type": "object",
          "properties": {
            "reportName": {
              "description": "Report Name.",
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "reportFileName": {
              "description": "Report file name when exists to allow report re-printing.",
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "dateSent": {
              "description": "The Reminder Letter name which is to be used for this Reminder based on the setup on the Account Type.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "age": {
              "description": "The minimum age(days) of the invoices to be included in the Reminder",
              "type": "integer"
            },
            "historyExists": {
              "description": "Indicates that reminders history exists.",
              "type": "boolean"
            }
          }
        },
        "lastStatementInfo": {
          "description": "Report History Type used as based type for Remiders and Statements History types.",
          "type": "object",
          "properties": {
            "reportName": {
              "description": "Report Name.",
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "reportFileName": {
              "description": "Report file name when exists to allow report re-printing.",
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "dateSent": {
              "description": "The Reminder Letter name which is to be used for this Reminder based on the setup on the Account Type.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "statementNo": {
              "description": "When using Statement Numbering, a unique number is associated to the Statement.",
              "type": "integer"
            },
            "historyExists": {
              "description": "Indicates that statement history exists.",
              "type": "boolean"
            }
          }
        },
        "notes": {
          "description": "The Note details attached to the Account.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/commentInfoType"
          }
        },
        "traces": {
          "description": "The Trace details attached to the Account.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/traceType"
          }
        },
        "fixedCharges": {
          "description": "Fixed charges attached to this AR Account.",
          "$ref": "#/definitions/fixedChargesType"
        },
        "accountIndicators": {
          "description": "Indicators of additional information attached to the Account.",
          "$ref": "#/definitions/indicatorsType"
        },
        "agingInfo": {
          "description": "The Aging balance information for this account, by Aging Buckets.",
          "$ref": "#/definitions/aRAgingInfoType"
        },
        "yearViewInfo": {
          "description": "The Year View balance information for this account.",
          "$ref": "#/definitions/aRYearViewInfoType"
        },
        "invoices": {
          "description": "List of all Invoices.",
          "$ref": "#/definitions/aRInvoicesType"
        },
        "payments": {
          "description": "List of all Payments made.",
          "$ref": "#/definitions/aRPaymentsType"
        },
        "summary": {
          "description": "The Summary Information of the Invoices for the Account.",
          "$ref": "#/definitions/aRBalanceType"
        },
        "status": {
          "description": "The status of the account.",
          "$ref": "#/definitions/aRAccountStatusType"
        },
        "batchStatement": {
          "description": "Include In Batch Statement",
          "type": "boolean"
        },
        "printFoliosWithStatement": {
          "description": "Indicates if associated folios should be printed by default with the statement.",
          "type": "boolean"
        },
        "emailStatementsReminders": {
          "description": "Indicates if the Account has opted to send the statements and reminders to the Account email address by default.",
          "type": "boolean"
        },
        "searchMatches": {
          "description": "Super Search matching terms.",
          "$ref": "#/definitions/searchMatchesType"
        },
        "primary": {
          "description": "Indicates if this Account is the Primary Account for this Guest/Company.",
          "type": "boolean"
        },
        "type": {
          "description": "The type of Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "accountTypeDescription": {
          "description": "The description of the Account Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "permanent": {
          "description": "Indicates if this is a Permanent Account. Permanent Accounts cannot be deleted.",
          "type": "boolean"
        }
      }
    },
    "profileId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "addressInfoType": {
      "type": "object",
      "description": "Provides address information.",
      "properties": {
        "address": {
          "description": "Address details for the profile.",
          "$ref": "#/definitions/addressType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "addressType": {
      "type": "object",
      "description": "Provides address information.",
      "properties": {
        "isValidated": {
          "description": "Indicator to define if the Address is validated by the Address Validation System.",
          "type": "boolean"
        },
        "addressLine": {
          "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "type": "array",
          "maxItems": 4,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 80
          }
        },
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "cityExtension": {
          "description": "Post Office City Extension Code number. City Extension mainly used for UK addresses.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "county": {
          "description": "County or District Name (e.g., Fairfax). This is read only.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "type": {
          "description": "Defines the type of address (e.g. home, business, other).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Describes the type code",
          "type": "string"
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "updateReservations": {
          "description": "Indicates whether to update the reservations or not. If true and the address is primary, then all associated active reservations will be updated with the new primary address.",
          "type": "boolean"
        },
        "barCode": {
          "description": "The postal barcode for the address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "countryNameType": {
      "type": "object",
      "description": "Code for a country or a nationality.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Used for Character Strings, length 0 to 200.",
          "minLength": 0,
          "maxLength": 200
        },
        "code": {
          "description": "Code for a country or a nationality.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "emailInfoType": {
      "type": "object",
      "description": "Information on an email for the customer.",
      "properties": {
        "email": {
          "description": "eMail deatils for the profile.",
          "$ref": "#/definitions/emailType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "emailType": {
      "type": "object",
      "description": "Information on an email for the customer.",
      "properties": {
        "emailAddress": {
          "description": "Defines the e-mail address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "type": {
          "description": "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Describes the Type code",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "emailFormat": {
          "description": "Supported Email format.",
          "type": "string",
          "enum": [
            "Html",
            "Text"
          ]
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "telephoneInfoType": {
      "type": "object",
      "description": "Information on a telephone number for the customer.",
      "properties": {
        "telephone": {
          "description": "Phone details for the profile.",
          "$ref": "#/definitions/telephoneType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "telephoneType": {
      "type": "object",
      "description": "Information on a telephone number for the customer.",
      "properties": {
        "phoneTechType": {
          "description": "Indicates type of technology associated with this telephone number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "phoneUseType": {
          "description": "Describes the type of telephone number, in the context of its general use (e.g. Home, Business, Emergency Contact, Travel Arranger, Day, Evening).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "phoneUseTypeDescription": {
          "description": "Description of the PhoneUseType code",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "phoneNumber": {
          "description": "Telephone number assigned to a single location.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "extension": {
          "description": "Extension to reach a specific party at the phone number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "commentInfoType": {
      "type": "object",
      "description": "Comment related to the profile/reservation.",
      "properties": {
        "comment": {
          "description": "Comment details for the comment. It will be empty in case of delete comment.",
          "$ref": "#/definitions/commentType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "commentType": {
      "type": "object",
      "description": "An indication of a new paragraph for a sub-section of a formatted text message.",
      "properties": {
        "text": {
          "description": "Formatted text content.",
          "$ref": "#/definitions/formattedTextTextType"
        },
        "image": {
          "description": "An image for this paragraph.",
          "type": "string"
        },
        "url": {
          "description": "A URL for this paragraph.",
          "type": "string"
        },
        "commentTitle": {
          "description": "Specifies Comment's Title.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "notificationLocation": {
          "description": "Notification Location associated with the Note.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "type": {
          "description": "Specifies type of the comment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Comment type Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "internal": {
          "description": "When true, the comment may not be shown to the consumer. When false, the comment may be shown to the consumer.",
          "type": "boolean"
        },
        "confidential": {
          "description": "When true, the comment may be confidential.",
          "type": "boolean"
        },
        "overrideInternal": {
          "description": "When true, the note internal could be modified.",
          "type": "boolean"
        },
        "protectDescription": {
          "description": "When true, the note title will be populated from the note type description and couldn't be modified.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "If specified comment belongs to the Hotel, otherwise it is a global comment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "actionType": {
          "description": "Specifies type of action described in the comments.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "actionDate": {
          "description": "Indicates at which date an action described in the comment must be taken.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "formattedTextTextType": {
      "type": "object",
      "description": "Provides text and indicates whether it is formatted or not.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        }
      }
    },
    "traceType": {
      "type": "object",
      "properties": {
        "timeInfo": {
          "description": "Date of the trace.",
          "$ref": "#/definitions/traceTimeInfoType"
        },
        "reservationId": {
          "description": "Reservation ID of the reservation for which the traces are to be retrieved.",
          "$ref": "#/definitions/reservationId"
        },
        "departmentId": {
          "description": "Indicates the Department code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "traceText": {
          "description": "The information this trace contains.",
          "type": "string"
        },
        "resolveInfo": {
          "description": "Information regarding the status of the trace",
          "$ref": "#/definitions/traceResolveType"
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "traceTimeInfoType": {
      "type": "object",
      "properties": {
        "dateTimeSpan": {
          "description": "Time span for the trace.",
          "$ref": "#/definitions/dateTimeSpanType"
        },
        "traceOn": {
          "description": "Date of the trace.",
          "type": "string",
          "format": "date-time"
        },
        "traceTime": {
          "description": "Time of the trace",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "enteredBy": {
          "description": "User that entered this trace.",
          "type": "string"
        }
      }
    },
    "dateTimeSpanType": {
      "type": "object",
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
      "properties": {
        "startDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "endDateTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "reservationId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "traceResolveType": {
      "type": "object",
      "properties": {
        "resolvedOn": {
          "description": "Date the trace was resolved",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "resolvedBy": {
          "description": "User that resolved the trace",
          "type": "string"
        }
      }
    },
    "fixedChargesType": {
      "type": "array",
      "description": "Holds fixed charge detail.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fixedChargeType"
      }
    },
    "fixedChargeType": {
      "type": "object",
      "description": "Holds fixed charge information.",
      "properties": {
        "schedule": {
          "description": "Holds schedule of fixed charge.",
          "$ref": "#/definitions/fixedChargeScheduleType"
        },
        "charge": {
          "description": "Holds specific details of fixed charge.",
          "$ref": "#/definitions/fixedChargeDetailType"
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "fixedChargeScheduleType": {
      "type": "object",
      "description": "Holds schedule of fixed charge.",
      "properties": {
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "frequency": {
          "description": "Frequency of a fixed charge.",
          "$ref": "#/definitions/fixedChargeFrequencyType"
        },
        "dayToExecute": {
          "description": "Day of when to execute fixed charge. Applicable when frequency is Daily or Weekly.",
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "dateToExecute": {
          "description": "Date of when to execute yearly fixed charge. Applicable when frequency is Yearly.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "fixedChargeFrequencyType": {
      "type": "string",
      "description": "Yearly.",
      "enum": [
        "O",
        "D",
        "W",
        "M",
        "Q",
        "Y"
      ]
    },
    "fixedChargeDetailType": {
      "type": "object",
      "description": "Fixed charge amount could be specified by flat fee or be a percentage of the rate amount.",
      "properties": {
        "transaction": {
          "description": "Transaction code and description of a fixed charge.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "quantity": {
          "description": "Quantity of the product.",
          "type": "integer"
        },
        "chargeAmount": {
          "description": "Price of the product.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "percent": {
          "description": "Percentage of the rate amount.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "supplement": {
          "description": "Additional information regarding the fixed charge.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "article": {
          "description": "Holds related article code and description.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "roomNights": {
          "description": "Holds number of comp or cash room night to allocate.",
          "type": "integer"
        }
      }
    },
    "indicatorsType": {
      "type": "array",
      "description": "Collection of lamp indicators.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/indicatorType"
      }
    },
    "indicatorType": {
      "type": "object",
      "description": "Lamp indicator Type.",
      "properties": {
        "indicatorName": {
          "description": "Name of the indicator.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "count": {
          "description": "Indicates number of occurrences of the indicator.",
          "type": "integer"
        }
      }
    },
    "aRAgingInfoType": {
      "type": "object",
      "description": "Information regarding the aging balances for an account.",
      "properties": {
        "totalOutstanding": {
          "description": "The total debit and credit balance of the account.",
          "$ref": "#/definitions/aRBalanceType"
        },
        "aging": {
          "description": "The debit and credit balance per Aging bucket.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/aRAgingType"
          }
        }
      }
    },
    "aRBalanceType": {
      "type": "object",
      "description": "Balance information for AR.",
      "properties": {
        "debit": {
          "description": "Debit Balance amount. The amount owed by the Account.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "credit": {
          "description": "The credit Balance amount. Any payment that is Unallocated i.e not applied against an invoice, is included in this.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "total": {
          "description": "The total balance i.e Debit minus Credit amounts.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "aRAgingType": {
      "type": "object",
      "description": "Aging information for an Aging Bucket.",
      "properties": {
        "agingBucketRange": {
          "description": "The bucket description in terms of days. Example : 0-31 days",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "agingDate": {
          "description": "The start date and end date for this Aging bucket.",
          "$ref": "#/definitions/dateRangeType"
        },
        "balanceInfo": {
          "description": "The balance amounts for this bucket. Contains the Debit Balance, Credit Balance and the Total Balance.",
          "$ref": "#/definitions/aRBalanceType"
        },
        "agingStartDay": {
          "description": "The start number of days for this Aging bucket. Example: For the range 31-60 days, this would be 31.",
          "type": "integer"
        },
        "agingEndDay": {
          "description": "The end number of days for this Aging bucket. Example: For the range 31-60 days, this would be 60.",
          "type": "integer"
        },
        "sequence": {
          "description": "The sequence for display.",
          "type": "integer"
        }
      }
    },
    "dateRangeType": {
      "type": "object",
      "description": "Date Range with Start and End dates.",
      "properties": {
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "aRYearViewInfoType": {
      "type": "object",
      "description": "Information regarding Year View balances for an account.",
      "properties": {
        "totalOutstanding": {
          "description": "The total debit and credit balance of the account.",
          "$ref": "#/definitions/aRBalanceType"
        },
        "yearView": {
          "description": "The debit and credit balance per account.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/aRYearViewType"
          }
        }
      }
    },
    "aRYearViewType": {
      "type": "object",
      "description": "Year information for an Year View.",
      "properties": {
        "dateRange": {
          "description": "The period start and end date.",
          "$ref": "#/definitions/dateRangeType"
        },
        "balanceInfo": {
          "description": "The balance amounts for this date range. Contains the Debit Balance, Credit Balance and the Total Balance.",
          "$ref": "#/definitions/aRBalanceType"
        },
        "runningTotal": {
          "description": "The running total balance for the date range.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "aRInvoicesType": {
      "type": "array",
      "description": "A collection of AR Invoices.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/aRInvoiceType"
      }
    },
    "aRInvoiceType": {
      "type": "object",
      "description": "Details of an AR Invoice.",
      "properties": {
        "hotelId": {
          "description": "Property where the invoice exists.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "Reservation ID of the invoice.",
          "$ref": "#/definitions/reservationId"
        },
        "guestProfileId": {
          "description": "Guest Profile ID of the invoice.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "age": {
          "description": "The Aging age of the invoice",
          "type": "integer"
        },
        "guestName": {
          "description": "Name of the Guest who consumed these transactions.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "originalAmount": {
          "description": "Original Amount of the Invoice",
          "$ref": "#/definitions/currencyAmountType"
        },
        "amount": {
          "description": "Current Amount of the Invoice.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "payments": {
          "description": "Total Payments made to this Invoice.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Amount still open which has not been paid",
          "$ref": "#/definitions/currencyAmountType"
        },
        "reference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "remark": {
          "description": "User-defined posting remark.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "adjusted": {
          "type": "boolean"
        },
        "parentInvoiceNo": {
          "type": "number"
        },
        "compressed": {
          "type": "boolean"
        },
        "compressedDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transferredOut": {
          "type": "boolean"
        },
        "transferredIn": {
          "type": "boolean"
        },
        "market": {
          "description": "Invoice market code.",
          "$ref": "#/definitions/marketCodeInfoType"
        },
        "roomClass": {
          "description": "Invoice room class code.",
          "$ref": "#/definitions/roomClassCodeInfoType"
        },
        "source": {
          "description": "Invoice source code.",
          "$ref": "#/definitions/sourceCodeInfoType"
        },
        "reservationInfo": {
          "description": "Reservation guest details.",
          "$ref": "#/definitions/reservationInfoType"
        },
        "cashierInfo": {
          "description": "Cashier information. Contains Id and Name details of the cashier.",
          "$ref": "#/definitions/cashierInfoType"
        },
        "transactionInfo": {
          "description": "Transaction information .",
          "$ref": "#/definitions/trxInfoType"
        },
        "paymentCard": {
          "description": "Payment card details.",
          "$ref": "#/definitions/resPaymentCardType"
        },
        "addresseeInfo": {
          "description": "Addressee Information for the folio. This is available when the Addressee functionality is used and and Addressee is attached to the folio of the Invoice.",
          "$ref": "#/definitions/profileInfoType"
        },
        "allowPartialTransferYn": {
          "description": "Flag to check Partail Transfer Allowed.",
          "type": "boolean"
        },
        "printed": {
          "description": "Flag to check Invoice Statement is Printed.",
          "type": "boolean"
        },
        "printedDate": {
          "description": "Invoice Statement Printed Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "storedFolioId": {
          "description": "ID of the Stored Folio.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "storedFolioName": {
          "description": "Name of the Stored Folio.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "storedDebitFolioId": {
          "description": "ID of the Stored Debit Folio.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "storedDebitFolioName": {
          "description": "Name of the Stored Debit Folio.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "folioTexts": {
          "description": "Additional text fields to display on the folio.",
          "$ref": "#/definitions/folioTextsType"
        },
        "customNumbers": {
          "description": "Unique Custom Numbers associated with this record.",
          "type": "array",
          "maxItems": 5,
          "items": {
            "$ref": "#/definitions/customNumberType"
          }
        },
        "fiscalResponseType": {
          "description": "Provides information which is used for fiscal response processing.",
          "$ref": "#/definitions/fiscalResponseType"
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier of the Invoice.",
          "type": "number"
        },
        "transactionDate": {
          "description": "Transaction Date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "status": {
          "description": "Status of the invoice.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionCode": {
          "description": "Transaction code of the invoice.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioNo": {
          "description": "Folio Number.",
          "type": "number"
        },
        "invoiceNo": {
          "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
          "type": "number"
        },
        "fiscalBillNo": {
          "description": "The Fiscal Bill number of this posting",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "folioTypeName": {
          "description": "The name of the Folio Type used for the Folio Number sequence.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "internalFolioWindowID": {
          "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioDate": {
          "description": "Date of Folio Generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "folioStatus": {
          "$ref": "#/definitions/folioStatusType"
        },
        "folioNoWithPrefix": {
          "description": "The folio number with prefix value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "invoiceType": {
          "description": "Invoice code of the invoice.",
          "$ref": "#/definitions/aRInvoiceCategory"
        },
        "statementNo": {
          "description": "Statementno of the invoice.",
          "type": "integer"
        },
        "revenueDate": {
          "description": "Revenue date ID of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "closeDate": {
          "description": "Close date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "postingDate": {
          "description": "Posting date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transferDate": {
          "description": "Transfer date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "canBeModified": {
          "description": "Flag to indicate if postings or adjustments can be made to the invoice.",
          "type": "boolean"
        }
      }
    },
    "marketCodeInfoType": {
      "type": "object",
      "properties": {
        "marketCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "marketGroup": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "reservationInfoType": {
      "type": "object",
      "description": "The Reservation class contains the current reservation being created or altered.",
      "properties": {
        "reservationIdList": {
          "description": "Unique identifiers for the reservation for both internal and external systems",
          "$ref": "#/definitions/reservationIdList"
        },
        "externalReferences": {
          "description": "External Reference information for Reservation.",
          "$ref": "#/definitions/externalReferencesType"
        },
        "roomStay": {
          "description": "Collection of room stays.",
          "$ref": "#/definitions/stayInfoType"
        },
        "reservationGuest": {
          "description": "Collection of guests associated with the reservation.",
          "$ref": "#/definitions/resGuestInfoType"
        },
        "sharedGuests": {
          "description": "Collection of guests who share this reservation.",
          "$ref": "#/definitions/resSharedGuestListType"
        },
        "attachedProfiles": {
          "description": "List of attached profiles",
          "$ref": "#/definitions/resAttachedProfileListType"
        },
        "reservationPaymentMethod": {
          "description": "Payment method used for this reservation",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "reservationFolioWindows": {
          "description": "Collection of reservation folio windows.",
          "$ref": "#/definitions/reservationFolioWindowsType"
        },
        "specials": {
          "description": "Set of reservation preferences which belongs to the Specials group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "lastPrivacyPromptDate": {
          "description": "Last Privacy Prompt Date",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "displayColor": {
          "description": "Color setting of the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationIndicators": {
          "description": "Indicators of additional information attached to the reservation",
          "$ref": "#/definitions/indicatorsType"
        },
        "roomStatus": {
          "description": "Current room status",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "searchMatches": {
          "description": "Super Search matching terms.",
          "$ref": "#/definitions/searchMatchesType"
        },
        "sourceOfSale": {
          "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
          "$ref": "#/definitions/sourceOfSaleType"
        },
        "waitlist": {
          "description": "Information regarding why reservation has been/was waitlisted. This could hold information as history even if reservation is not in Waitlist status anymore.",
          "$ref": "#/definitions/waitlistResType"
        },
        "queue": {
          "description": "Information about the time and duration this reservation was on Queue for Checkin.",
          "$ref": "#/definitions/reservationQueueInformationType"
        },
        "housekeeping": {
          "description": "Information regarding housekeeping for this reservation.",
          "$ref": "#/definitions/resHousekeepingType"
        },
        "cashiering": {
          "description": "Holds cashiering related information for the reservation.",
          "$ref": "#/definitions/resCashieringType"
        },
        "taxType": {
          "description": "This stores the code for the type of tax calculation especially with tax exemption, etc.",
          "$ref": "#/definitions/taxTypeType"
        },
        "deposit": {
          "description": "Holds reservation deposit information.",
          "$ref": "#/definitions/reservationDepositType"
        },
        "allowedActions": {
          "description": "Collection of reservation allowed actions.",
          "$ref": "#/definitions/reservationAllowedActionsType"
        },
        "revenuesAndBalances": {
          "description": "Revenues and Balances Amount summary for the reservation.",
          "$ref": "#/definitions/resRevenueBalanceType"
        },
        "hotelInterfaceStatusList": {
          "description": "Collection of Hotel Interfaces and rights, this is populated only when fetching interface status for rooms.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationInterfaceStatusType"
          }
        },
        "guestPreferredCurrency": {
          "description": "Currency code preferred by guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "turndownInfo": {
          "description": "Currency code preferred by guest.",
          "$ref": "#/definitions/reservationTurndownInfoType"
        },
        "mobileNotifications": {
          "description": "Denotes the status of Room Ready, Key Ready messages.",
          "$ref": "#/definitions/resMobileNotificationsType"
        },
        "reservationCommunication": {
          "description": "Collection of reservation communication details.",
          "$ref": "#/definitions/resCommunicationType"
        },
        "advanceCheckIn": {
          "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
          "$ref": "#/definitions/advanceCheckInType"
        },
        "welcomeOffer": {
          "description": "This flag will determine wheather the reservation is eligible for Welcome Offer or not.",
          "type": "boolean"
        },
        "cancellationInfo": {
          "description": "Information regarding why reservation has been/was cancelled.",
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "code": {
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "date": {
              "description": "Date when reservation was last cancelled.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            }
          }
        },
        "keyCount": {
          "description": "Number of keys created for the reservation.",
          "type": "integer"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "expectedServiceTime": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomStayReservation": {
          "description": "Boolean True if this reservation is reserving rooms. False if it is only reserving services.",
          "type": "boolean"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "computedReservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "walkInIndicator": {
          "description": "When true, indicates the reservation is for a guest that walks-in without a reservation. When false, the reservation is not a walk-in.",
          "type": "boolean"
        },
        "accessRestriction": {
          "description": "Indicates user restriction on the reservation based on the Access exclusion functionality such as Restriction on Changes, Cancellation or both.",
          "$ref": "#/definitions/resAccessRestrictionType"
        },
        "commissionPayoutTo": {
          "description": "If not null, reservation is considered to pay out commission to either Travel Agent, Source or both.",
          "$ref": "#/definitions/commissionPayoutToType"
        },
        "paymentMethod": {
          "description": "Payment Method.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "preRegistered": {
          "description": "Defines if the reservation is pre-registered or not.",
          "type": "boolean"
        },
        "openFolio": {
          "description": "Returns true when reservation has an open folio.",
          "type": "boolean"
        },
        "allowMobileCheckout": {
          "description": "Flag containing true or false value for reservation to be eligible for self-checkout by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile checkout yes / no. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "allowMobileViewFolio": {
          "description": "Attribute AllowMobileViewFolio is set to true when the reservation is eligible for viewing folio using mobile device.",
          "type": "boolean"
        },
        "optedForCommunication": {
          "description": "Attribute OptedForCommunication is set to true when the guest has opted for receiving communicationsl related to the reservation.",
          "type": "boolean"
        }
      }
    },
    "reservationIdList": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "externalReferencesType": {
      "type": "array",
      "description": "This type contains unique information of external reference.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/externalReferenceType"
      }
    },
    "externalReferenceType": {
      "type": "object",
      "description": "This type contains unique information of external reference.",
      "properties": {
        "id": {
          "description": "Unique ID of external reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "ID extension for external reference.",
          "type": "integer"
        },
        "idContext": {
          "description": "ID context for external reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "stayInfoType": {
      "type": "object",
      "description": "Details on the Room Stay including Guest Counts, Time Span of this Room Stay, pointers to Res Guests, guest Memberships, Comments and Special Requests pertaining to this particular Room Stay and finally financial information related to the Room Stay, including Guarantee, Deposit and Payment and Cancellation Penalties.",
      "properties": {
        "arrivalDate": {
          "type": "string",
          "format": "date"
        },
        "departureDate": {
          "type": "string",
          "format": "date"
        },
        "originalTimeSpan": {
          "description": "The Original Time Span covers the Room Stay dates of the original reservation.",
          "$ref": "#/definitions/timeSpanType"
        },
        "expectedTimes": {
          "description": "The expected arrival, return and departure times of the guest.",
          "$ref": "#/definitions/resExpectedTimesType"
        },
        "adultCount": {
          "description": "A collection of Guest Counts associated with Room Stay.",
          "type": "integer"
        },
        "childCount": {
          "description": "A collection of Child Counts associated with Room Stay.",
          "type": "integer"
        },
        "roomClass": {
          "description": "Room class code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "description": "Room type code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "componentRoomType": {
          "description": "True indicates room type is a component type.",
          "type": "boolean"
        },
        "numberOfRooms": {
          "description": "Room Id",
          "type": "integer"
        },
        "roomId": {
          "description": "Room Id",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCode": {
          "description": "Rate plan code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateAmount": {
          "description": "Rate amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "points": {
          "description": "The Points contains the number of points used to book a particular room type.",
          "$ref": "#/definitions/pointsType"
        },
        "rateSuppressed": {
          "description": "Whether this rate should be suppressed from view",
          "type": "boolean"
        },
        "reservationBlock": {
          "description": "Key information about the block for this reservation.",
          "$ref": "#/definitions/reservationBlockType"
        },
        "bookingChannelCode": {
          "description": "Booking channel code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "linkCode": {
          "description": "Party code",
          "type": "string",
          "maxLength": 2000
        },
        "fixedRate": {
          "description": "True if the rate is a fixed rate, otherwise false",
          "type": "boolean"
        },
        "totalAmount": {
          "description": "The total amount charged for the Room Stay including additional occupant amounts and fees. If TaxInclusive is set to True, then taxes are included in the total amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "guarantee": {
          "description": "The guarantee information associated to the Room Stay. A maximum of 5 occurances are available for use depending on the context.",
          "$ref": "#/definitions/resGuaranteeType"
        },
        "promotion": {
          "description": "Promotion Codes",
          "$ref": "#/definitions/promotionType"
        },
        "marketCode": {
          "description": "Market code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "marketDescription": {
          "description": "Description of Market code",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "sourceCode": {
          "description": "Source of business",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceCodeDescription": {
          "description": "Description of the source of business.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "balance": {
          "description": "Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "roomTypeCharged": {
          "description": "Room type code that was charged",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "depositPayments": {
          "description": "A collection of deposit and/or payments for the Room Stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "guestServiceStatus": {
          "description": "Service Status of In House guest like DND or MUP",
          "$ref": "#/definitions/guestHousekeepingServiceRequestType"
        },
        "scheduledCheckoutTime": {
          "description": "Indicates that this reservation is scheduled for automated check out.",
          "type": "string",
          "format": "date"
        },
        "roomNumberLocked": {
          "description": "When true, indicates a room number cannot be changed. When false, indicates a room number may be changed.",
          "type": "boolean"
        },
        "pseudoRoom": {
          "description": "True indicates as pseudo room type. This is usually used for a posting master reservation.",
          "type": "boolean"
        },
        "assignedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        },
        "upgradedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        }
      }
    },
    "timeSpanType": {
      "type": "object",
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "duration": {
          "type": "string"
        }
      }
    },
    "resExpectedTimesType": {
      "type": "object",
      "description": "Holds the Arrival and Departure Time Information",
      "properties": {
        "reservationExpectedArrivalTime": {
          "description": "Arrival Time",
          "type": "string",
          "format": "date-time"
        },
        "reservationExpectedDepartureTime": {
          "description": "Departure Time",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pointsType": {
      "type": "object",
      "description": "The Redeem Points contains the number of points required to book a room type.",
      "properties": {
        "awardsType": {
          "description": "Awards type for the award type rate code.",
          "type": "string"
        },
        "points": {
          "description": "No of points required to book this Room Stay.",
          "type": "integer"
        }
      }
    },
    "reservationBlockType": {
      "type": "object",
      "description": "Key information about the block for a reservation.",
      "properties": {
        "blockIdList": {
          "description": "Collection of unique block identifiers for the reservation.",
          "$ref": "#/definitions/blockIdList"
        },
        "blockName": {
          "description": "The Name of the block that is attached to the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "hotelId": {
          "description": "This is the HotelCode of the Block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "blockIdList": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "resGuaranteeType": {
      "type": "object",
      "description": "Validations type record returned after Validations are done.",
      "properties": {
        "guaranteeCode": {
          "description": "Guarantee Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "shortDescription": {
          "description": "Guarantee Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "onHold": {
          "description": "Guarantee Code.",
          "type": "boolean"
        }
      }
    },
    "promotionType": {
      "type": "object",
      "description": "Type to specify a rate promotion. Usually attached to a reservation to indicate a specific promotion is applied to the reservation.",
      "properties": {
        "promotionCode": {
          "description": "Promotion code associated with the rate plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "promotionName": {
          "description": "Promotion code Name associated with the rate plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "couponCode": {
          "description": "Promotion Coupon Code when promotion is setup to have a valid coupon code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "guestHousekeepingServiceRequestType": {
      "type": "string",
      "description": "Possible values for the Guest Service Status.",
      "enum": [
        "DoNotDisturb",
        "MakeUpRoom",
        "NoStatusSelected"
      ]
    },
    "resGuestInfoType": {
      "type": "object",
      "description": "Specifies Company or Travel Agent profile using IATA or Corp. No.",
      "properties": {
        "membership": {
          "description": "The Membership object identifying the frequent customer reward program.",
          "$ref": "#/definitions/membershipInfoType"
        },
        "namePrefix": {
          "description": "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)",
          "$ref": "#/definitions/namePrefixType"
        },
        "givenName": {
          "description": "Given name, first name or names",
          "$ref": "#/definitions/givenNameType"
        },
        "alternateGivenName": {
          "description": "Alternate given name, first name or names",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "middleName": {
          "description": "The middle name of the person name",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "surnamePrefix": {
          "description": "e.g \"van der\", \"von\", \"de\"",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "surname": {
          "description": "Family name, last name.",
          "$ref": "#/definitions/surnameType"
        },
        "alternateSurname": {
          "description": "Alternate family name, last name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "fullName": {
          "description": "Full display name",
          "type": "string"
        },
        "alternateFullName": {
          "description": "Altername full display name",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Phone number",
          "$ref": "#/definitions/phoneNumberType"
        },
        "email": {
          "description": "Email address",
          "$ref": "#/definitions/basicEmailType"
        },
        "birthDate": {
          "description": "Date of birth",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nationality": {
          "description": "Affiliation or ethnicity to a particular country.",
          "$ref": "#/definitions/countryNameType"
        },
        "vip": {
          "description": "The supplier's ranking of the customer (e.g., VIP, numerical ranking).",
          "$ref": "#/definitions/vIPType"
        },
        "address": {
          "description": "Address information that is attached to the reservation guest",
          "$ref": "#/definitions/addressSearchType"
        },
        "anonymization": {
          "description": "Provides information about the guest's anonymization status",
          "$ref": "#/definitions/anonymizationType"
        },
        "accompanyGuests": {
          "description": "List of guest names that are accompanying the reservation guest",
          "$ref": "#/definitions/resAccompanyGuestListType"
        },
        "externalInfo": {
          "description": "External information about the guest associated with the reservation.",
          "$ref": "#/definitions/resGuestExternalInfoType"
        },
        "guestLastStayInfo": {
          "description": "Contains information regarding the last stay of this guest.",
          "$ref": "#/definitions/guestLastStayInfoType"
        },
        "guestRestrictedCode": {
          "description": "Guest profile restricted reason code",
          "type": "string"
        },
        "guestRestrictedReasonDesc": {
          "description": "Guest profile restricted reason description",
          "type": "string"
        },
        "guestRestricted": {
          "description": "True indicates there are restrictions associated with the current profile.",
          "type": "boolean"
        },
        "registrationCardNo": {
          "description": "Unique identifier of the police registration card number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameType": {
          "$ref": "#/definitions/nameTypeType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "membershipInfoType": {
      "type": "object",
      "description": "The Membership object identifies the frequent customer reward program.",
      "properties": {
        "membershipId": {
          "description": "Membership ID (Unique ID from the memberships table).",
          "type": "number"
        },
        "programCode": {
          "description": "The code or name of the membership program ('Hertz', 'AAdvantage', etc.).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bonusCode": {
          "description": "The code or name of the bonus program. BonusCode can be used to indicate the level of membership (Gold Club, Platinum member, etc.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "membershipTypeDesc": {
          "description": "The description of the ProgramCode.(Delta Previlige for code DP)",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "membershipLevelDesc": {
          "description": "The description of the Bonus Code.(Platinum for code P)",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "accountId": {
          "description": "The account identification number for this particular member in this particular program.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "membershipLevel": {
          "description": "The code or name of the membership level and indicates the level of membership (Gold Club, Platinum member, etc.). This is same as the BonusCode.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        }
      }
    },
    "namePrefixType": {
      "type": "string",
      "description": "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)",
      "minLength": 0,
      "maxLength": 40
    },
    "givenNameType": {
      "type": "string",
      "description": "Given name, first name or names",
      "minLength": 0,
      "maxLength": 40
    },
    "surnameType": {
      "type": "string",
      "description": "Family name, last name.",
      "minLength": 0,
      "maxLength": 40
    },
    "phoneNumberType": {
      "type": "string",
      "description": "Phone number",
      "minLength": 0,
      "maxLength": 40
    },
    "basicEmailType": {
      "type": "string",
      "description": "Email address",
      "minLength": 0,
      "maxLength": 2000
    },
    "vIPType": {
      "type": "object",
      "description": "The supplier's ranking of the customer.",
      "properties": {
        "vipCode": {
          "description": "VIP Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vipDescription": {
          "description": "VIP Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "addressSearchType": {
      "type": "object",
      "description": "Address Details such as city, state, country, postal code etc.",
      "properties": {
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "streetAddress": {
          "description": "First Line of Street Address. For profile search it matches the first Address line.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "excludeNoCity": {
          "description": "When true indicates that only profiles with city will be fetched.",
          "type": "boolean"
        }
      }
    },
    "anonymizationType": {
      "type": "object",
      "description": "Provides information about guest's anonymization status.",
      "properties": {
        "anonymizationStatus": {
          "description": "Status of anonymization such as Requested or Anonymized.",
          "$ref": "#/definitions/anonymizationStatusType"
        },
        "anonymizationDate": {
          "description": "Date and Time when the guest was anonymized.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "anonymizationStatusType": {
      "type": "string",
      "description": "Guest has been anonymized.",
      "enum": [
        "Requested",
        "Anonymized"
      ]
    },
    "resAccompanyGuestListType": {
      "type": "array",
      "description": "Collection of accompany guests",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAccompanyGuestInfoType"
      }
    },
    "resAccompanyGuestInfoType": {
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        },
        "registrationCardNo": {
          "description": "Unique identifier of the police registration card number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
          "$ref": "#/definitions/profileIdList"
        }
      }
    },
    "profileIdList": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "resGuestExternalInfoType": {
      "type": "object",
      "description": "Specifies Company or Travel Agent profile using IATA or Corp. No.",
      "properties": {
        "givenName": {
          "description": "Given name, first name or names",
          "$ref": "#/definitions/givenNameType"
        },
        "surname": {
          "description": "Family name, last name.",
          "$ref": "#/definitions/surnameType"
        }
      }
    },
    "guestLastStayInfoType": {
      "type": "object",
      "description": "Contains last stay related details of the guest.",
      "properties": {
        "lastStayDate": {
          "description": "Guest's last stay date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastStayRoom": {
          "description": "Room Number where the guest stayed.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "lastStayRate": {
          "description": "The Rate amount of the guest's last stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalStay": {
          "description": "The total number of previous stay of the guest.",
          "type": "integer"
        }
      }
    },
    "nameTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Agent",
        "Contact",
        "Source",
        "Group",
        "Employee",
        "Hotel",
        "Purge"
      ]
    },
    "resSharedGuestListType": {
      "type": "array",
      "description": "Collection of shared guest reservations.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resSharedGuestInfoType"
      }
    },
    "resSharedGuestInfoType": {
      "type": "object",
      "description": "Contains information regarding the share reservation.",
      "properties": {
        "profileId": {
          "$ref": "#/definitions/profileId"
        },
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        }
      }
    },
    "resAttachedProfileListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAttachedProfileType"
      }
    },
    "resAttachedProfileType": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Attached profile name",
          "type": "string"
        },
        "profileIdList": {
          "description": "Collection of unique profile identifiers",
          "$ref": "#/definitions/profileIdList"
        },
        "reservationProfileType": {
          "$ref": "#/definitions/resProfileTypeType"
        }
      }
    },
    "resProfileTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Group",
        "TravelAgent",
        "Source",
        "ReservationContact",
        "BillingContact",
        "Addressee"
      ]
    },
    "reservationPaymentMethodType": {
      "type": "object",
      "properties": {
        "paymentCard": {
          "$ref": "#/definitions/resPaymentCardType"
        },
        "balance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "authorizationRule": {
          "$ref": "#/definitions/authorizationRuleType"
        },
        "emailFolioInfo": {
          "description": "Information on an email for the customer.",
          "type": "object",
          "properties": {
            "email": {
              "description": "eMail deatils for the profile.",
              "$ref": "#/definitions/emailType"
            },
            "emailFolio": {
              "type": "boolean"
            },
            "id": {
              "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "type": {
              "description": "A reference to the type of object defined by the UniqueID element.",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            }
          }
        },
        "paymentMethod": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "folioView": {
          "type": "integer"
        }
      }
    },
    "resPaymentCardType": {
      "type": "object",
      "description": "Information on a credit card for the customer.",
      "properties": {
        "cardId": {
          "description": "credit card id",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "currentAuthorizedAmount": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "approvalAmountNeeded": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "approvalCode": {
          "description": "Approval code sent by the credit card company on a successful authorization.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cardType": {
          "description": "Indicates the type of credit card from a defined list",
          "$ref": "#/definitions/cardTypeType"
        },
        "userDefinedCardType": {
          "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
          "type": "string",
          "minLength": 0,
          "maxLength": 2
        },
        "cardNumber": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "cardNumberMasked": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "cardNumberLast4Digits": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "expirationDate": {
          "description": "Expiration date of the credit card",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expirationDateMasked": {
          "description": "Masked Expiration date of the credit card",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "expirationDateExpired": {
          "type": "boolean"
        },
        "cardHolderName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "attachCreditCardToProfile": {
          "description": "Attach the credit card to profile.",
          "type": "boolean"
        },
        "processing": {
          "description": "This contains information on whether EFT is enabled. A value of 'C' indicates EFT is enabled and 'M' indicates manual authorization is available for this payment card type.",
          "$ref": "#/definitions/cardProcessingType"
        },
        "swiped": {
          "type": "boolean"
        },
        "cardPresent": {
          "description": "Flag to determine if the credit card was swiped/manually entered , This element is only used when PAYMENT SERVICE DIRECTIVE(PSD) Opera Control is active.",
          "type": "boolean"
        },
        "cardOrToken": {
          "description": "This contains information on whether credit card is tokenized (token enabled). A value of 'Token' indicates credit card is token enabled and 'CardNumber' indicates non token environment for this payment card type.",
          "$ref": "#/definitions/cardNumberTypeType"
        },
        "citId": {
          "description": "Customer Initiated Transaction(CIT) Id for Credit Cards. This is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        }
      }
    },
    "cardTypeType": {
      "type": "string",
      "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
      "enum": [
        "Ab",
        "Am",
        "Ax",
        "Cb",
        "Dc",
        "Ds",
        "Dt",
        "Ec",
        "Er",
        "Jc",
        "Jl",
        "Mc",
        "Nb",
        "So",
        "St",
        "Sw",
        "Va",
        "Xy",
        "Zz",
        "Cp",
        "Cu"
      ]
    },
    "cardProcessingType": {
      "type": "string",
      "enum": [
        "Eft",
        "Manual"
      ]
    },
    "cardNumberTypeType": {
      "type": "string",
      "description": "Simple type for indicating if credit card number is tokenized.",
      "enum": [
        "CardNumber",
        "Token"
      ]
    },
    "reservationFolioWindowsType": {
      "type": "array",
      "description": "Collection of reservation folio windows.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationFolioWindowType"
      }
    },
    "reservationFolioWindowType": {
      "type": "object",
      "description": "Folio window view which holds the set of folios for a reservation.",
      "properties": {
        "payeeInfo": {
          "description": "The window's configured payee information.",
          "$ref": "#/definitions/payeeInfoType"
        },
        "balance": {
          "description": "Running balance of the window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "paymentMethod": {
          "description": "Payment Method Type",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioWindowNo": {
          "type": "integer"
        }
      }
    },
    "payeeInfoType": {
      "type": "object",
      "description": "Payee information.",
      "properties": {
        "payeeId": {
          "description": "Opera name id of the payee.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "payeeName": {
          "description": "Name of the payee.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "payeeAddress": {
          "description": "Address of the payee.",
          "$ref": "#/definitions/addressInfoType"
        },
        "payeeAddressCount": {
          "description": "Payee multiple address count.",
          "type": "integer"
        },
        "payeeReferenceCurrency": {
          "description": "Reference currency of the payee.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "payeeAccountInfo": {
          "description": "AR account short info of the payee.",
          "$ref": "#/definitions/aRAccountShortInfoType"
        },
        "payeeTaxNumber": {
          "description": "The tax number of the payee.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "aRAccountShortInfoType": {
      "type": "object",
      "description": "Accounts Receivabales Account details type charged for batched posting.",
      "properties": {
        "accountName": {
          "description": "Name of the AR Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "accountId": {
          "description": "The unique ID for the Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountNo": {
          "description": "The Account Number for the Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "status": {
          "description": "The status of the account.",
          "$ref": "#/definitions/aRAccountStatusType"
        }
      }
    },
    "aRAccountStatusType": {
      "type": "object",
      "description": "Type for the Account Status. Status can be restricted and a message/description added to the Account.",
      "properties": {
        "restriction": {
          "description": "The Restriction Code added on the Account. This is available when the functionality for adding restriction codes is ON.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "User defined status message on the Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "restricted": {
          "description": "Flag to indicate if the Account is restricted.",
          "type": "boolean"
        }
      }
    },
    "housekeepingRoomStatusType": {
      "type": "string",
      "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
      "enum": [
        "Clean",
        "Dirty",
        "Pickup",
        "Inspected",
        "OutOfOrder",
        "OutOfService"
      ]
    },
    "searchMatchesType": {
      "type": "array",
      "description": "List of Generic Name-Value-Pair Parameters used for super search matches.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/searchMatchType"
      }
    },
    "searchMatchType": {
      "type": "object",
      "description": "Search match indicating attribute and the matching value.",
      "properties": {
        "attribute": {
          "description": "Search match attribute.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "value": {
          "description": "Search match value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "sourceOfSaleType": {
      "type": "object",
      "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
      "properties": {
        "sourceType": {
          "description": "Type of entity/channel who made the reservation..",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "sourceCode": {
          "description": "The entity/channel who made the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "waitlistResType": {
      "type": "object",
      "description": "Information regarding why reservation is being /has been waitlisted.",
      "properties": {
        "reasonDescription": {
          "description": "Waitlist Reason Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "priorityDescription": {
          "description": "Waitlist priority Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "description": {
          "description": "Description why the reservation is being /has been waitlisted.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "reasonCode": {
          "description": "Waitlist Reason Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "priorityCode": {
          "description": "Waitlist Priority Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "telephone": {
          "description": "Guest telephone number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "reservationQueueInformationType": {
      "type": "object",
      "description": "Information regarding the Date, Duration and Priority of the reservation on Queue for Check in.",
      "properties": {
        "timeSpan": {
          "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
          "type": "object",
          "properties": {
            "startDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "endDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "duration": {
              "type": "string"
            },
            "durationInSeconds": {
              "description": "The total duration, in seconds, the reservation is on Queue.",
              "type": "integer"
            }
          }
        },
        "guestTextInfo": {
          "description": "Information for the message sent to the user",
          "$ref": "#/definitions/queueTextInfoType"
        },
        "priority": {
          "description": "The Queue Priority given to this reservation.",
          "type": "integer"
        },
        "averageQueueTimeToCheckIn": {
          "description": "The average time, in seconds, a reservation was on queue prior to Check-In.",
          "type": "integer"
        },
        "averageQueueTimeCurrentReservations": {
          "description": "The average time, in seconds, of the reservations currently in queue.",
          "type": "integer"
        },
        "queueDate": {
          "description": "The Business date on which the reservation was due to arrive and is currently placed on Queue for Check In.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "queueTextInfoType": {
      "type": "object",
      "description": "Information regarding the message sent to guest.",
      "properties": {
        "sentTime": {
          "description": "Time the text was last sent to the user.",
          "type": "string",
          "format": "date-time"
        },
        "sentBy": {
          "description": "User name of the user who sent message.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "resHousekeepingType": {
      "type": "object",
      "description": "Holds housekeeping turndown service information for the room.",
      "properties": {
        "instructions": {
          "description": "Turndown instructions for the room.",
          "type": "string"
        },
        "facilityTaskInfo": {
          "description": "The facility task applicable for the current day. This will be information only and not used for any updates.",
          "$ref": "#/definitions/facilityTaskType"
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "turndownRequested": {
          "description": "Indicates whether guest wants turndown facility or not.",
          "type": "boolean"
        },
        "serviceTime": {
          "description": "This is the Turndown room service time.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expectedServiceTime": {
          "description": "Expected Start Time for housekeeping task(s).",
          "type": "string"
        },
        "roomStatus": {
          "description": "Current room status. Current room status is populated only if room is assigned to the reservation and reservation is due in or in house.",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        }
      }
    },
    "facilityTaskType": {
      "type": "object",
      "description": "Information regarding facility task on a reservation.",
      "properties": {
        "task": {
          "description": "The Task Code.",
          "$ref": "#/definitions/housekeepingTaskCodeType"
        },
        "supplies": {
          "description": "Supplies associated with the task.",
          "$ref": "#/definitions/facilityCodesType"
        },
        "date": {
          "description": "The Date on which the task is applicable.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "housekeepingTaskCodeType": {
      "type": "object",
      "description": "Information related to a Task Code. Task Codes are used to generate task sheets in Rooms Management.",
      "properties": {
        "description": {
          "description": "Description of the Task Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "instructions": {
          "description": "Instructions for this Task Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "facilityDepartureTask": {
          "description": "Indicates if this task code is the default departure task for Facility Tasks. This requires",
          "type": "boolean"
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Property where this task code is configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "The Code for the task.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sequence": {
          "description": "Ordering sequence for display.",
          "type": "integer"
        }
      }
    },
    "facilityCodesType": {
      "type": "array",
      "description": "List of the facility codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/facilityCodeType"
      }
    },
    "facilityCodeType": {
      "type": "object",
      "description": "Facility Housekeeping Code, its description and quantity.",
      "properties": {
        "description": {
          "description": "Facility Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "quantity": {
          "description": "Signifies the quantity.",
          "type": "integer"
        },
        "code": {
          "description": "Facility code value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "resCashieringType": {
      "type": "object",
      "description": "Cashiering Information for the reservation.",
      "properties": {
        "revenuesAndBalances": {
          "description": "Revenues and Balances Amount summary for the reservation.",
          "$ref": "#/definitions/resRevenueBalanceType"
        },
        "billingPrivileges": {
          "description": "Billing privileges set on the reservation.",
          "$ref": "#/definitions/billingPrivilegesType"
        },
        "taxType": {
          "description": "This stores the code for the type of tax calculation especially with tax exemption, etc.",
          "$ref": "#/definitions/reservationTaxTypeInfo"
        },
        "bedTaxReporting": {
          "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
          "$ref": "#/definitions/bedTaxReportingType"
        },
        "folioTexts": {
          "description": "Additional text fields to display on the folio.",
          "$ref": "#/definitions/folioTextsType"
        },
        "periodicFolio": {
          "description": "Information regarding periodic folios set on the reservation.",
          "$ref": "#/definitions/resPeriodicFolioType"
        },
        "compAccounting": {
          "description": "Information regarding comp accounting on the reservation.",
          "$ref": "#/definitions/resCompAccountingType"
        },
        "reservationPreConfiguredRoutingInstruction": {
          "description": "Information regarding the selected preconfigured routing instruction on the reservation.",
          "$ref": "#/definitions/resPreConfiguredRoutingInstrType"
        },
        "financiallyResponsible": {
          "description": "The guest from whom payment has to be recovered (direct guest).",
          "type": "boolean"
        },
        "proratedBilling": {
          "description": "In case of Appartment style billing indicates whether a prorated amount should be used for an Apartment Style Billing rate.",
          "type": "boolean"
        },
        "lastRoomAndTaxPostedDate": {
          "description": "Date of the last Room And Tax posting. Used primarily to know the date in case of Advance Billing.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reverseCheckInAllowed": {
          "description": "This attribute is to verify if reverse check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "reverseAdvanceCheckInAllowed": {
          "description": "This attribute is to verify if reverse advance check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "transactionsPosted": {
          "description": "Specifies whether reservation has a financial transaction associated with it.",
          "type": "boolean"
        }
      }
    },
    "resRevenueBalanceType": {
      "type": "object",
      "description": "Revenue and Balance Amount summary for the reservation.",
      "properties": {
        "totalFixedCharge": {
          "description": "Total Fixed Charges on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalPayment": {
          "description": "Total payment received for the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "roomRevenue": {
          "description": "Room Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "foodAndBevRevenue": {
          "description": "Food and Beverage Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "otherRevenue": {
          "description": "Other Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "nonRevenue": {
          "description": "Total Non Revenue posted on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalRevenue": {
          "description": "Total Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Balance amount on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "billingPrivilegesType": {
      "type": "object",
      "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
      "properties": {
        "postingRestriction": {
          "description": "Flag used by interface program during check in.",
          "type": "boolean"
        },
        "preStayCharging": {
          "description": "Indicates if the reservation has charging privileges before arrival.",
          "type": "boolean"
        },
        "postStayCharging": {
          "description": "Indicates if the reservation has charging privileges after checkout.",
          "type": "boolean"
        },
        "folioCloseDate": {
          "description": "Date when folio was closed. This works with PostStayCharging flag.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "scheduledCheckout": {
          "description": "Indicates if the guest is scheduled for automatic check out.",
          "type": "boolean"
        },
        "scheduledCheckoutTime": {
          "description": "Time of automatic check out if guest is schedule for automatic check out.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "directBillAuthorized": {
          "description": "If Direct bill is authorized this will hold User ID who authorized it.",
          "type": "boolean"
        },
        "videoCheckout": {
          "description": "Indicates if the guest can do video checkout",
          "type": "boolean"
        },
        "allowAutoCheckin": {
          "description": "Indicated if a new reservation should be created and automatically checked in whenever the room is checked out. Available for pseudo room types only.",
          "type": "boolean"
        },
        "autoSettlement": {
          "description": "Indicates if the is a candidate for auto folio settlement.",
          "type": "boolean"
        },
        "autoSettlementType": {
          "description": "The folio settlement type for auto folio settlement.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "autoSettlementFreq": {
          "description": "The interval of days between each auto folio settlement.",
          "type": "integer"
        },
        "creditLimitAutoPay": {
          "description": "Indicates if the reservation will be included in the Automatic Credit Limit Overages process and also be listed in the Credit Limit Overages screen results.",
          "type": "boolean"
        }
      }
    },
    "reservationTaxTypeInfo": {
      "type": "object",
      "description": "Provides information about the Tax Type.",
      "properties": {
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Code of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "collectingAgentTax": {
          "description": "A boolean flag for Collecting Agent Tax",
          "type": "boolean"
        },
        "printAutoAdjust": {
          "description": "Print auto adjust information for this tax type on the tax exempt report.",
          "type": "boolean"
        },
        "reportExemptDays": {
          "description": "Number of days after which the guest will be tax exempt. Only used for tax exempt report.",
          "type": "integer"
        },
        "reportTaxPercentage": {
          "description": "Tax percentage. Only used for tax exempt report.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "minimumLengthOfStay": {
          "description": "Minimun Length of Stay.",
          "type": "integer"
        },
        "taxExemptNo": {
          "description": "Tax exempt number on the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "bedTaxReportingType": {
      "type": "object",
      "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
      "properties": {
        "taxRegistrationNo": {
          "description": "Tax Registration Number for Maldives Bed Tax Reporting.",
          "type": "number"
        },
        "visaNumber": {
          "description": "Visa number used for Maldives Bed Tax Reporting",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "visaIssueDate": {
          "description": "Visa Issue Date used for Maldives Bed Tax Reporting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaExpiryDate": {
          "description": "Visa Expiration Date used for Maldives Bed Tax Reporting",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "taxableDays": {
          "description": "Number of days for which the Maldives tax is applicable.",
          "type": "integer"
        }
      }
    },
    "folioTextsType": {
      "type": "array",
      "description": "This stores the description for the type of tax calculation especially with tax exemption, etc.",
      "maxItems": 2,
      "items": {
        "type": "object",
        "properties": {
          "text": {
            "description": "Additional text field to display on the folio.",
            "type": "string",
            "minLength": 0,
            "maxLength": 50
          },
          "row": {
            "description": "Row number of the additional text.",
            "type": "integer"
          }
        }
      }
    },
    "resPeriodicFolioType": {
      "type": "object",
      "description": "Information regarding periodic folios set on the reservation.",
      "properties": {
        "lastSettlementDate": {
          "description": "Latest date when a direct bill settlement was automatically done using the \"Direct Bill Batch Folios\" option.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastFolioDate": {
          "description": "Latest date when a folio was printed using the \"Periodic Batch Folios\" option",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "frequency": {
          "description": "Frequency in number of days when folios should be printed for this reservation.",
          "type": "integer"
        }
      }
    },
    "resCompAccountingType": {
      "type": "object",
      "description": "Information regarding comp accounting on the reservation.",
      "properties": {
        "compType": {
          "description": "Code used to identify the casino comp type and ranking of a guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "authorizer": {
          "description": "ID of the employee who will act as the host for this guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "compPostings": {
          "description": "Indicates if the Comp Billing/posting Exist",
          "type": "string",
          "minLength": 0,
          "maxLength": 5
        }
      }
    },
    "resPreConfiguredRoutingInstrType": {
      "type": "object",
      "description": "Instruction to attach Pre-Configured Routing Instructions to a Reservation.",
      "properties": {
        "authorizerInfo": {
          "description": "The authorizer information for Promotion Code with attached Complimentary Routing",
          "$ref": "#/definitions/authorizerInfoType"
        },
        "ratePlanCode": {
          "description": "Rate Code with attached Routing Instruction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "profileType": {
          "description": "Profile Type with attached Routing Instruction.",
          "$ref": "#/definitions/resProfileTypeType"
        },
        "promotionCode": {
          "description": "Promotion Code with attached Complimentary Routing.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "authorizerInfoType": {
      "type": "object",
      "description": "Authorizer Information",
      "properties": {
        "authorizerId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "authorizerUserName": {
          "description": "Application user name of the authorizer",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "authorizerName": {
          "description": "Full name of the authorizer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "authorizerRateCode": {
          "description": "Rate code of the authorizer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "inheritAuthorizerRateCode": {
          "description": "Indicates whether user has the choice to have reservation inherit rate code from the authorizer.",
          "type": "boolean"
        }
      }
    },
    "taxTypeType": {
      "type": "object",
      "description": "Provides information about the Tax Type.",
      "properties": {
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Code of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "collectingAgentTax": {
          "description": "A boolean flag for Collecting Agent Tax",
          "type": "boolean"
        },
        "printAutoAdjust": {
          "description": "Print auto adjust information for this tax type on the tax exempt report.",
          "type": "boolean"
        },
        "reportExemptDays": {
          "description": "Number of days after which the guest will be tax exempt. Only used for tax exempt report.",
          "type": "integer"
        },
        "reportTaxPercentage": {
          "description": "Tax percentage. Only used for tax exempt report.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "minimumLengthOfStay": {
          "description": "Minimun Length of Stay.",
          "type": "integer"
        }
      }
    },
    "reservationDepositType": {
      "type": "object",
      "description": "Reservation Deposit Type.",
      "properties": {
        "amountRequired": {
          "description": "Deposit Amount Required.",
          "type": "number"
        },
        "amountPaid": {
          "description": "Deposit Amount Paid.",
          "type": "number"
        },
        "amountOwed": {
          "description": "Deposit Amount Owed.",
          "type": "number"
        },
        "dueDate": {
          "description": "Deposit Due Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "postingDate": {
          "description": "Deposit Posting Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hasPaid": {
          "description": "Resolves whether reservation has paid deposit.",
          "type": "boolean"
        },
        "hasOutstanding": {
          "description": "Resolves whether reservation has outstanding deposit.",
          "type": "boolean"
        }
      }
    },
    "reservationAllowedActionsType": {
      "type": "array",
      "description": "Allowed action.",
      "maxItems": 11,
      "items": {
        "$ref": "#/definitions/reservationAllowedActionType"
      }
    },
    "reservationAllowedActionType": {
      "type": "string",
      "description": "Flag indicating whether the Enrollment is in progress or not for the Profile associated with this Reservation.",
      "enum": [
        "Cancel",
        "Move",
        "PreCharge",
        "PostCharge",
        "FacilitySchedule",
        "Upsell",
        "PreCheckIn",
        "PostToNoShowCancel",
        "NoShow",
        "NameChange",
        "Discount",
        "EnrollToPrimaryMembership",
        "EnrollInProgress"
      ]
    },
    "reservationInterfaceStatusType": {
      "type": "object",
      "description": "Hotel Interface Type for a reservation and status of the various services",
      "properties": {
        "roomExtension": {
          "description": "Identifier for the room extension",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelInterface": {
          "description": "Hotel interface information for the reservation",
          "$ref": "#/definitions/hotelInterfaceType"
        },
        "interfaceRights": {
          "description": "Contains a list of status/rights for the various services under this interface",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/interfaceRightsStatusType"
          }
        }
      }
    },
    "hotelInterfaceType": {
      "type": "object",
      "properties": {
        "interfaceId": {
          "description": "Unique DB internal number of a Hotel Interface record.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "Hotel Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "interfaceName": {
          "description": "Name of the Hotel Interface",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "interfaceType": {
          "description": "Three letter code for each interface that identifies the interface.",
          "$ref": "#/definitions/hotelInterfaceTypeType"
        },
        "logo": {
          "description": "Hotel Interface Logo. On the database, this is also referred as DBF Logo. This is a three letter code followed by an underscore(_). This tells us which DBF files and log files with the prefix that IFC7 is going to create.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "machineName": {
          "description": "Unique machine name of the running IFC.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "status": {
          "description": "The current status of the IFC.",
          "$ref": "#/definitions/hotelInterfaceStatusType"
        },
        "activeFlag": {
          "description": "Indicator if the Hotel Interface is active or not. This is different from the Interface Status, which is either STOPPED or RUNNING.",
          "type": "boolean"
        }
      }
    },
    "hotelInterfaceTypeType": {
      "type": "string",
      "enum": [
        "Bms",
        "Cas",
        "Ccw",
        "Dls",
        "Eft",
        "Exp",
        "Mak",
        "Mbs",
        "Msc",
        "Pbx",
        "Pos",
        "Svs",
        "Tik",
        "Vid",
        "Vms",
        "Www",
        "Xml"
      ],
      "description": "XML Posting Interface"
    },
    "hotelInterfaceStatusType": {
      "type": "string",
      "description": "Status of the Hotel Interface either STOPPED or RUNNING.",
      "enum": [
        "Stopped",
        "Running",
        "Waiting",
        "StopInitiated",
        "StartInitiated",
        "RebootInitiated",
        "Other"
      ]
    },
    "interfaceRightsStatusType": {
      "type": "object",
      "properties": {
        "right": {
          "description": "Internal code for each allowed right of a Hotel Interface record.",
          "type": "integer"
        },
        "statusCode": {
          "description": "User defined code for an Interface Right.",
          "type": "string",
          "minLength": 0,
          "maxLength": 5
        },
        "description": {
          "description": "User defined description for an Interface Right.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "category": {
          "description": "Category code of this interface right.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        }
      }
    },
    "reservationTurndownInfoType": {
      "type": "object",
      "description": "Turndown information for a reservation",
      "properties": {
        "allowed": {
          "description": "Indicates if turndown is allowed or not",
          "type": "boolean"
        },
        "status": {
          "description": "Indicates turndown status, values could be required, not required, completed",
          "$ref": "#/definitions/turndownStatusType"
        }
      }
    },
    "turndownStatusType": {
      "type": "string",
      "description": "Simple type for turndown status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Required, Not Required and Completed.",
      "enum": [
        "Required",
        "NotRequired",
        "Compeleted"
      ]
    },
    "resMobileNotificationsType": {
      "type": "object",
      "description": "Contains the status of Room Ready and Key Ready messages.",
      "properties": {
        "roomReady": {
          "description": "Denotes the status of Room Ready message. It can have one of the values:PENDING, COMPLETED or FAILED",
          "$ref": "#/definitions/communicationStatusType"
        },
        "keyReady": {
          "description": "Denotes the status of Key Ready message. It can have one of the values:PENDING, COMPLETED or FAILED",
          "$ref": "#/definitions/communicationStatusType"
        },
        "checkoutMessageReceived": {
          "description": "Indicates if the Mobile checkout message is received.",
          "type": "boolean"
        },
        "requiresAction": {
          "description": "Indicates if user action is required. The action could be for sending Room Ready or Key Ready Notification. It could also be for initiating Checkout",
          "type": "boolean"
        },
        "errorMessage": {
          "description": "Error message when Mobile Notification has failed.",
          "type": "string"
        }
      }
    },
    "communicationStatusType": {
      "type": "string",
      "description": "Enum to denote the Status of Readiness messages sent to Guest Devices.",
      "enum": [
        "Pending",
        "Completed",
        "Failed",
        "Sent",
        "Received",
        "Cancelled",
        "PendingAvailability"
      ]
    },
    "resCommunicationType": {
      "type": "object",
      "description": "Communication details for a reservation.",
      "properties": {
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        }
      }
    },
    "advanceCheckInType": {
      "type": "object",
      "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
      "properties": {
        "advanceCheckedIn": {
          "description": "Indicates if the reservation is marked as Advance Checked In",
          "type": "boolean"
        },
        "expectedReturnTime": {
          "description": "Expected Return Time",
          "type": "string",
          "format": "date-time"
        },
        "eTRComments": {
          "description": "ETR Comments",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "pMS_ResStatusType": {
      "type": "string",
      "description": "This reservation is in checked in status and the business date is past departure date. This could occur when ORS and PMS are in same environment.",
      "enum": [
        "Reserved",
        "Requested",
        "NoShow",
        "Cancelled",
        "InHouse",
        "CheckedOut",
        "Waitlisted",
        "DueIn",
        "DueOut",
        "Walkin",
        "PendingCheckout"
      ]
    },
    "resAccessRestrictionType": {
      "type": "string",
      "description": "Indicates any Updates/Changes on the reservation as well as Reservation Cancellation are not allowed.",
      "enum": [
        "Change",
        "Cancel",
        "ChangeOrCancel"
      ]
    },
    "commissionPayoutToType": {
      "type": "string",
      "enum": [
        "TravelAgent",
        "Source",
        "TravelAgentSource",
        "None"
      ]
    },
    "cashierInfoType": {
      "type": "object",
      "description": "Cashier information. Contains Id and Name details of the cashier.",
      "properties": {
        "cashierId": {
          "description": "Cashier Id of the Cashier.",
          "type": "number"
        },
        "cashierName": {
          "description": "Cashier Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "trxInfoType": {
      "type": "object",
      "description": "Transaction codes info.",
      "properties": {
        "description": {
          "description": "Transaction codes info.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionGroup": {
          "description": "Category of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionSubGroup": {
          "description": "Sub category of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "routingInstructionsId": {
          "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
          "type": "number"
        },
        "articles": {
          "description": "The List of Articles defined for this transaction code, when using the Articles functionality.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/articleInfoType"
          }
        },
        "trxServiceType": {
          "description": "Contains service type for transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionCode": {
          "description": "Unique identifier for the Transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel context of the Transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "printTrxReceipt": {
          "description": "Print receipt flag that tells whether the transaction receipt is to be printed or not. This is based on the transaction code.",
          "type": "boolean"
        }
      }
    },
    "profileInfoType": {
      "type": "object",
      "description": "Provides information about attached profiles to the block.",
      "properties": {
        "profileId": {
          "description": "Opera ID for the profile attached to the block.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "name": {
          "description": "Name for the profile attached to the block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "city": {
          "description": "City for the profile attached to the block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "phone": {
          "description": "Phone for the profile attached to the block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "Defines the type of Linked profiles for a block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "customNumberType": {
      "type": "string",
      "description": "Custom number",
      "minLength": 0,
      "maxLength": 200
    },
    "fiscalResponseType": {
      "type": "object",
      "description": "Provides information which is used for fiscal response processing.",
      "properties": {
        "folioSeqId": {
          "description": "Fiscal Folio sequence ID stored in queue table.",
          "type": "integer"
        },
        "retryFiscalPrinting": {
          "description": "Flag to do the retrieval process of fiscal printing or not.",
          "type": "boolean"
        }
      }
    },
    "folioStatusType": {
      "type": "string",
      "description": "The Folio Status Example: DEPOSIT folio, VOID folio or the default OK folio status.",
      "enum": [
        "Deposit",
        "Void",
        "Ok",
        "Zero",
        "Compress",
        "Converted",
        "Internal"
      ]
    },
    "aRInvoiceCategory": {
      "type": "string",
      "enum": [
        "Normal",
        "Credit",
        "OldBalance",
        "PasserBy"
      ]
    },
    "aRPaymentsType": {
      "type": "array",
      "description": "A collection of AR Payments.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/aRPaymentType"
      }
    },
    "aRPaymentType": {
      "type": "object",
      "description": "Details of an AR Payment.",
      "properties": {
        "age": {
          "description": "The Aging age of the payment.",
          "type": "integer"
        },
        "amount": {
          "description": "Amount of the Payment.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "amountUsed": {
          "description": "Total amount applied against an invoice.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Amount still open which has not been applied against any invoice.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "reference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "remark": {
          "description": "User-defined posting remark.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "cashierInfo": {
          "description": "Cashier information. Contains Id and Name details of the cashier.",
          "$ref": "#/definitions/cashierInfoType"
        },
        "paymentCard": {
          "description": "Payment card details.",
          "$ref": "#/definitions/resPaymentCardType"
        },
        "transferredOut": {
          "type": "boolean"
        },
        "transferredIn": {
          "type": "boolean"
        },
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier of the Payment.",
          "type": "number"
        },
        "transactionDate": {
          "description": "Date of the Payment.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionCode": {
          "description": "Transaction code of the Payment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "postingDate": {
          "description": "Posting date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "revenueDate": {
          "description": "Revenue date ID of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transferDate": {
          "description": "Transfer of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "sequenceNo": {
          "description": "When this PostingType is used to return the postings generated by a batch request, the sequence number is used to relate to the Request's sequence number.",
          "type": "integer"
        }
      }
    },
    "compAuthorizerHeaderType": {
      "type": "object",
      "description": "Detail information related to comp authorizers.",
      "properties": {
        "creditLimit": {
          "description": "Credit limit associated for the authorizer.",
          "type": "integer"
        },
        "occurenceLimit": {
          "description": "Credit limit already used up for the authorizer.",
          "type": "integer"
        },
        "compAuthorizerDetails": {
          "description": "Comp authorizer details information.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/compAuthorizerDetailType"
          }
        }
      }
    },
    "compAuthorizerDetailType": {
      "type": "object",
      "description": "Detail information related to comp authorizers.",
      "properties": {
        "arrangementCode": {
          "description": "Arrangement code for the detail limit.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "arrangementId": {
          "description": "Arrangement id for the arrangement code.",
          "type": "integer"
        },
        "transactionCode": {
          "description": "Transaction code for the detail limit.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "description": {
          "description": "Description for the transaction code or the arrangement code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "authorizationGroup": {
          "description": "Authorization group for the instruction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "rateCode": {
          "description": "Rate code for the instruction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        }
      }
    },
    "compTypesCriteria": {
      "type": "object",
      "description": "Request object for creating CompTypes.",
      "properties": {
        "compTypes": {
          "description": "Comp Types to be created.",
          "$ref": "#/definitions/compTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "compTypesType": {
      "type": "array",
      "description": "List of Comp Types.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/compTypeType"
      }
    },
    "compTypeType": {
      "type": "object",
      "description": "Information representation of Comp Type.",
      "properties": {
        "compTypeCode": {
          "description": "Code is used to identify the CompType.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "compTypeDescription": {
          "description": "Text is used to describe the CompType.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "displayOrder": {
          "description": "Comp Type record sequence number.",
          "type": "number"
        }
      }
    },
    "compTypesToBeChanged": {
      "type": "object",
      "description": "Request object for changing Comp Types.",
      "properties": {
        "compTypes": {
          "description": "Comp Types to be changed.",
          "$ref": "#/definitions/compTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "compTypesStatus": {
      "type": "object",
      "description": "Response Body.",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "bankAccountsInfo": {
      "type": "object",
      "description": "Response for fetching Bank Accounts",
      "properties": {
        "bankAccounts": {
          "description": "Collection of Bank Accounts",
          "$ref": "#/definitions/configBankAccountsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "configBankAccountsType": {
      "type": "array",
      "description": "List of bank accounts.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/configBankAccountType"
      }
    },
    "configBankAccountType": {
      "type": "object",
      "description": "Indentifier for a Bank Account.",
      "properties": {
        "hotelId": {
          "description": "Property of the bank account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bankAccountId": {
          "description": "Bank account ID.",
          "type": "number"
        },
        "bankAccountNumber": {
          "description": "Account number at the bank.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "bankCode": {
          "description": "Unique code of the bank.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "branchCode": {
          "description": "Code for the branch of the bank.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bankName": {
          "description": "Name of the bank account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "routingNumber": {
          "description": "Routing number for the bank account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "paymentMethod": {
          "description": "Type of payment associated with the bank account.",
          "$ref": "#/definitions/commissionConfigPaymentMethodType"
        },
        "format": {
          "description": "Type of format for Payment Method.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "lastExportDate": {
          "description": "Used to hold last exported date for commission export.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastExportFileNo": {
          "description": "Used to hold last exported filename for commission export.",
          "type": "integer"
        },
        "nextCheckNumber": {
          "description": "Next check number used by commission handling module for bank account selected.",
          "type": "number"
        },
        "minProcessingAmount": {
          "description": "Minimum amount required to produce a check through commission processing for the selected account.",
          "type": "number"
        },
        "currency": {
          "description": "Currency associated with the bank account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "checkStubLines": {
          "description": "Number of lines to be printed on check stub.",
          "type": "number"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "sourceImportDirectory": {
          "description": "Source directory for importing commission information.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "targetImportDirectory": {
          "description": "Target directory where import files will be stored.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "editCheckNumber": {
          "description": "Check number allowed to be edited true/false.",
          "type": "boolean"
        },
        "validateIATANumber": {
          "description": "Force validation of TA/Source IATA number during commision payment process.",
          "type": "boolean"
        },
        "default": {
          "description": "Default Bank Account for that resort.",
          "type": "boolean"
        },
        "defaultForCurrency": {
          "description": "Used mainly to figure out default bank for resort and currency combination.",
          "type": "boolean"
        },
        "positivePayExport": {
          "description": "Indicate that the bank account uses Positive Pay Export.",
          "type": "boolean"
        },
        "report1099": {
          "description": "Indicates that bank account uses 1099 report.",
          "type": "boolean"
        }
      }
    },
    "commissionConfigPaymentMethodType": {
      "type": "string",
      "description": "This value of the enum is used for Payment methods",
      "enum": [
        "Check",
        "CentrallyPaid",
        "Eft"
      ]
    },
    "bankAccounts": {
      "type": "object",
      "description": "Request object to edit Bank Accounts",
      "properties": {
        "bankAccounts": {
          "description": "Details of the Bank Accounts to edit",
          "$ref": "#/definitions/configBankAccountsType"
        },
        "updateDefault": {
          "description": "Update default confirmation response",
          "type": "boolean"
        },
        "updateDefaultForCurrency": {
          "description": "Update default for currency confirmation response",
          "type": "boolean"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "contractBillingInstructionsDetails": {
      "type": "object",
      "description": "Response object for fetching Contract Billing Instructions.",
      "properties": {
        "contractBillingInstructions": {
          "description": "Collection of Contract Billing Instructions.",
          "$ref": "#/definitions/contractBillingInstructionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "contractBillingInstructionsType": {
      "type": "array",
      "description": "List of Contract Billing Instructions.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/contractBillingInstructionType"
      }
    },
    "contractBillingInstructionType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "comments": {
          "description": "Additional Comment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "contractBillingInstructionsCriteria": {
      "type": "object",
      "description": "Request object for creating Contract Billing Instructions.",
      "properties": {
        "contractBillingInstructions": {
          "description": "Contract Billing Instructionsto be created.",
          "$ref": "#/definitions/contractBillingInstructionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "contractBillingInstructionsToBeChanged": {
      "type": "object",
      "description": "Request object for changing Contract Billing Instructions.",
      "properties": {
        "contractBillingInstructions": {
          "description": "Contract Billing Instructionsto be changed.",
          "$ref": "#/definitions/contractBillingInstructionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "creditCardInfo": {
      "type": "object",
      "properties": {
        "creditCard": {
          "description": "Credit card information.",
          "$ref": "#/definitions/resPaymentCardType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "creditCardTypeValidationStatus": {
      "type": "object",
      "properties": {
        "valid": {
          "description": "A flag indicating whether the credit card number meets its vendor's format requirements",
          "type": "boolean"
        },
        "validatedPaymentMethod": {
          "description": "Validated card type payment method. This object will be present if the requested payment method was successfully evaluated to be a credit card.",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "decodedCard": {
      "type": "object",
      "properties": {
        "creditCard": {
          "description": "This object will be present if the requested card was successfully evaluated to be a credit card.",
          "$ref": "#/definitions/resPaymentCardType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "creditCardReaderDevices": {
      "type": "object",
      "properties": {
        "devices": {
          "description": "List of supported credit card reader devices.",
          "$ref": "#/definitions/listOfDevicesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "listOfDevicesType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/creditCardReaderDevicesType"
      }
    },
    "creditCardReaderDevicesType": {
      "type": "object",
      "description": "Supported credit card reader devices.",
      "properties": {
        "deviceId": {
          "description": "Device ID assigned to the credit card reader device.",
          "type": "integer"
        },
        "description": {
          "description": "Description of the device.",
          "type": "string"
        },
        "secureDevice": {
          "description": "A flag indicating whether the data from the device is encrypted or not.",
          "type": "boolean"
        },
        "trackDataPattern": {
          "description": "The Regular Expression pattern of the track data that is generated by this device.",
          "type": "string"
        }
      }
    },
    "creditCardUniqueIdRQ": {
      "type": "object",
      "description": "Request for fetching credit card unique id.",
      "properties": {
        "creditCardUniqueId": {
          "description": "Contains the unique id information request.",
          "$ref": "#/definitions/creditCardUniqueIdType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "creditCardUniqueIdType": {
      "type": "object",
      "description": "Information about the credit card unique id.",
      "properties": {
        "creditCardType": {
          "description": "Credit card type.",
          "type": "string"
        },
        "uniqueId": {
          "description": "Unique id of credit card.",
          "type": "string"
        },
        "creditCardName": {
          "description": "Card name holder.",
          "type": "string"
        },
        "creditCardNumber": {
          "description": "Credit card number.",
          "type": "string"
        },
        "expirationDateString": {
          "description": "Expiration date in string representation.",
          "type": "string"
        },
        "creditCardNumberLast4Digits": {
          "description": "Last 4 digits of a credit card.",
          "type": "string"
        },
        "actionType": {
          "description": "Based on Action Type credit card services will be called. By default it will call IFC service. e.g. IFC, Direct Vendor",
          "$ref": "#/definitions/creditCardServiceActionType"
        },
        "cardPresent": {
          "description": "Flag to determine if the credit card was swiped/manually entered , This element is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.",
          "type": "boolean"
        },
        "citId": {
          "description": "Customer Initiated Transaction(CIT) Id for Credit Cards. This is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        },
        "terminalId": {
          "description": "Terminal ID from where this request originated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 128
        }
      }
    },
    "creditCardServiceActionType": {
      "type": "string",
      "description": "Instruction to call direct vendor service.",
      "enum": [
        "IfcInterface",
        "DirectVendor"
      ]
    },
    "creditCardUniqueId": {
      "type": "object",
      "properties": {
        "creditCardUniqueIdInfo": {
          "description": "This object will be present if the requested card was successfully evaluated to be a credit card.",
          "$ref": "#/definitions/creditCardUniqueIdInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "creditCardUniqueIdInfoType": {
      "type": "object",
      "description": "Information about the credit card unique id.",
      "properties": {
        "creditCardType": {
          "description": "Credit card type.",
          "type": "string"
        },
        "uniqueId": {
          "description": "Unique id of credit card.",
          "type": "string"
        },
        "creditCardName": {
          "description": "Card name holder.",
          "type": "string"
        },
        "creditCardNumber": {
          "description": "Credit card number.",
          "type": "string"
        },
        "expirationDateString": {
          "description": "Expiration date in string representation.",
          "type": "string"
        },
        "creditCardNumberLast4Digits": {
          "description": "Last 4 digits of a credit card.",
          "type": "string"
        },
        "actionType": {
          "description": "Based on Action Type credit card services will be called. By default it will call IFC service. e.g. IFC, Direct Vendor",
          "$ref": "#/definitions/creditCardServiceActionType"
        },
        "cardPresent": {
          "description": "Flag to determine if the credit card was swiped/manually entered , This element is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.",
          "type": "boolean"
        },
        "citId": {
          "description": "Customer Initiated Transaction(CIT) Id for Credit Cards. This is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        },
        "terminalId": {
          "description": "Terminal ID from where this request originated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 128
        },
        "successYn": {
          "description": "Success flag after requesting a unique id.",
          "type": "string"
        },
        "errorCode": {
          "description": "Error code for a unique id request failure.",
          "type": "string"
        },
        "errorMessage": {
          "description": "Error message for a unique id request failure.",
          "type": "string"
        }
      }
    },
    "currencyExchangeServiceTaxes": {
      "type": "object",
      "properties": {
        "currencyExchangeServiceTaxes": {
          "$ref": "#/definitions/currencyExchangeServiceTaxesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "currencyExchangeServiceTaxesType": {
      "type": "array",
      "description": "List of currency exchange service taxes",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/currencyExchangeServiceTaxType"
      }
    },
    "currencyExchangeServiceTaxType": {
      "type": "object",
      "description": "Currency exchange service tax identification details",
      "properties": {
        "hotel": {
          "description": "Property associated with currency exchange service tax",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Currency exchange service tax code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "amountFrom": {
          "description": "Starting value of exchange equivalent range",
          "type": "number"
        },
        "amountTo": {
          "description": "End value of exchange equivalent range",
          "type": "number"
        },
        "percentage": {
          "description": "Percentage of local currency",
          "type": "number"
        },
        "minServiceTax": {
          "description": "Minimum service tax to be collected",
          "type": "number"
        },
        "maxServiceTax": {
          "description": "Maximimum service tax to be collected",
          "type": "number"
        },
        "baseAmount": {
          "description": "Base tax basis of local currency. This is normally configured to the resulting tax basis of the previous tax slab range.",
          "type": "number"
        }
      }
    },
    "customChargeExemptionsConfig": {
      "type": "object",
      "description": "Response object for fetching Custom Charge Exemptions.",
      "properties": {
        "customChargeExemptionsConfig": {
          "description": "Collection of Custom Charge Exemptions.",
          "$ref": "#/definitions/customChargeExemptionsConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "customChargeExemptionsConfigType": {
      "type": "array",
      "description": "Holds Exemption details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/customChargeExemptionConfigType"
      }
    },
    "customChargeExemptionConfigType": {
      "type": "object",
      "description": "Provides information about Exemptions.",
      "properties": {
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "exemption": {
          "description": "Exemption",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Exemption Desciption",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "percentage": {
          "description": "Exemption Percentage",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "startDate": {
          "description": "Date when this Exemption will be effective",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "description": "Date till the Exemption will be effective.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "inactiveDate": {
          "description": "Date when this Exemption is Inactive",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "includeInactive": {
          "description": "Indicator that tells whether to include inactive Custom Charge Ememptions.",
          "type": "boolean"
        },
        "propertyExemption": {
          "description": "Flag specifying if custom charge exemptions is property level or not.",
          "type": "boolean"
        }
      }
    },
    "customTaxTypesDetails": {
      "type": "object",
      "description": "Response object for fetching Custom Tax Types.",
      "properties": {
        "customTaxTypes": {
          "description": "Collection of Custom Tax Types.",
          "$ref": "#/definitions/customTaxTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "customTaxTypesType": {
      "type": "array",
      "description": "List of Custom Tax Types.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/customTaxTypeType"
      }
    },
    "customTaxTypeType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "customTaxTypesCriteria": {
      "type": "object",
      "description": "Request object for creating Custom Tax Types.",
      "properties": {
        "customTaxTypes": {
          "description": "Custom Tax Types to be created.",
          "$ref": "#/definitions/customTaxTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "customTaxTypesToBeChanged": {
      "type": "object",
      "description": "Request object for changing Custom Tax Types.",
      "properties": {
        "customTaxTypes": {
          "description": "Custom Tax Types to be changed.",
          "$ref": "#/definitions/customTaxTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "dailyPlanCodes": {
      "type": "object",
      "properties": {
        "dailyPlanCodes": {
          "description": "Collection of daily plan codes.",
          "$ref": "#/definitions/dailyPlanCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "dailyPlanCodesType": {
      "type": "array",
      "description": "Details for daily plan code along with associated transaction codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/dailyPlanCodeType"
      }
    },
    "dailyPlanCodeType": {
      "type": "object",
      "description": "Generic Type to specify unique/primary id for the code. mostly used for Hotel level configuration codes removal request.",
      "properties": {
        "hotelId": {
          "description": "Hotel where the code is configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Configuration code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "arrangementId": {
          "description": "Primay key of arrangement codes",
          "type": "number"
        },
        "description": {
          "description": "Description of the Folio Group Code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "taxTypeCode": {
          "description": "information about the tax type code linked to the folio arrangment Code.",
          "type": "string"
        },
        "revenue": {
          "description": "specify whether the arrangement postings are classed as revenue.",
          "type": "boolean"
        },
        "transactionCodes": {
          "description": "Transaction codes that are associated to the folio grouping codes.",
          "$ref": "#/definitions/codeListType"
        }
      }
    },
    "defaultPaymentMethodRule": {
      "type": "object",
      "properties": {
        "rule": {
          "description": "Payment method default rule information.",
          "$ref": "#/definitions/paymentMethodValidationRuleType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "paymentMethodValidationRuleType": {
      "type": "object",
      "description": "Payment method card validation rules.",
      "properties": {
        "length": {
          "description": "Valid lengths of card number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "prefix": {
          "description": "Valid card number prefix.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "ranges": {
          "description": "Collection of card number ranges.",
          "$ref": "#/definitions/cardRangesType"
        },
        "formula": {
          "description": "Formula used for card validation. Only valid in case of user defined validation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "rule": {
          "description": "Defines rules to be used for card validation.",
          "$ref": "#/definitions/cardValidationRuleTypeType"
        }
      }
    },
    "cardRangesType": {
      "type": "array",
      "description": "Card number start and end range.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cardRangeType"
      }
    },
    "cardRangeType": {
      "type": "object",
      "description": "Card number start and end range.",
      "properties": {
        "from": {
          "description": "Starting range of the card.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "to": {
          "description": "End range of the card.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        }
      }
    },
    "cardValidationRuleTypeType": {
      "type": "string",
      "description": "Defines rules to be used for card validation.",
      "enum": [
        "Mod7",
        "Mod10",
        "Udef",
        "Novalid"
      ]
    },
    "exchangeRatesDetails": {
      "type": "object",
      "properties": {
        "rates": {
          "type": "array",
          "description": "Collection of exchange rates and their information.",
          "items": {
            "$ref": "#/definitions/exchangeRateType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "exchangeRateType": {
      "type": "object",
      "description": "Exchange rate configuration type.",
      "properties": {
        "hotelId": {
          "description": "Property where exchange rate is set.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "exchangeType": {
          "description": "Type for exchange calculation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/currencyExchangeType"
          }
        },
        "currency": {
          "description": "Currency code.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "baseCurrency": {
          "description": "Exchange rate base currency.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "beginDate": {
          "description": "Date on which the rate is to become active.",
          "type": "string",
          "format": "date-time"
        },
        "buyRate": {
          "description": "Buy Rate for foreign currency.",
          "type": "number"
        },
        "buyCommission": {
          "description": "Percentage of the amount that is to be a commission for the currency buy operation.",
          "type": "number"
        },
        "sellRate": {
          "description": "Sell Rate for foreign currency.",
          "type": "number"
        },
        "sellCommission": {
          "description": "Percentage of the amount that is to be a commission for the currency sell operation.",
          "type": "number"
        },
        "comment": {
          "description": "Comments associated with the exchange rate.",
          "type": "string"
        },
        "status": {
          "description": "Status past, present, or future.",
          "$ref": "#/definitions/statusTypes"
        }
      }
    },
    "currencyExchangeType": {
      "type": "string",
      "description": "E-certificate conversion.",
      "enum": [
        "Cash",
        "Settlement",
        "Posting",
        "Check",
        "TACommission",
        "Membership",
        "Certificate"
      ]
    },
    "statusTypes": {
      "type": "string",
      "description": "Defines status in terms of time.",
      "enum": [
        "Future",
        "Current",
        "Past"
      ]
    },
    "exchangeRates": {
      "type": "object",
      "properties": {
        "rates": {
          "type": "array",
          "description": "Exchange Rates to be Set.",
          "items": {
            "$ref": "#/definitions/exchangeRateType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "expenseArrangementCodes": {
      "type": "object",
      "properties": {
        "expenseArrangementCodes": {
          "description": "Collection of expense arrangement codes.",
          "$ref": "#/definitions/expenseArrangementCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "expenseArrangementCodesType": {
      "type": "array",
      "description": "Details for expense arrangement code along with associated transaction codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/expenseArrangementCodeType"
      }
    },
    "expenseArrangementCodeType": {
      "type": "object",
      "description": "Generic Type to specify unique/primary id for the code. mostly used for Hotel level configuration codes removal request.",
      "properties": {
        "hotelId": {
          "description": "Hotel where the code is configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Configuration code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "arrangementId": {
          "description": "Primay key of arrangement codes",
          "type": "number"
        },
        "description": {
          "description": "Description of the Folio Group Code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "taxTypeCode": {
          "description": "information about the tax type code linked to the folio arrangment Code.",
          "type": "string"
        },
        "revenue": {
          "description": "specify whether the arrangement postings are classed as revenue.",
          "type": "boolean"
        },
        "transactionCodes": {
          "description": "Transaction codes that are associated to the folio grouping codes.",
          "$ref": "#/definitions/codeListType"
        }
      }
    },
    "expenseArrangementCodesCopy": {
      "type": "object",
      "properties": {
        "expenseArrangementCode": {
          "type": "array",
          "description": "List of the expense arrangement codes to be copied.",
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyConfigurationCodeType": {
      "type": "object",
      "description": "Information needed to copy configuration code from one property to the other.",
      "properties": {
        "targetHotelCode": {
          "description": "Property to which configuration code type to be copied to.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "sourceHotelCode": {
          "description": "Code that is to be copied.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Source hotel code from which code is to be copied from.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "fiscalFolioParameters": {
      "type": "object",
      "properties": {
        "fiscalFolioParameters": {
          "description": "Collection of Fiscal Folio Parameter configurations.",
          "$ref": "#/definitions/fiscalFolioParametersType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalFolioParametersType": {
      "type": "array",
      "description": "Holds Fiscal Folio Parameter details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fiscalFolioParameterType"
      }
    },
    "fiscalFolioParameterType": {
      "type": "object",
      "description": "Provides information about the Fiscal Folio Parameter.",
      "properties": {
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "partner": {
          "description": "Fiscal folio parameter associated with Partner.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "code": {
          "description": "Code of the Fiscal Folio Parameter.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "description": {
          "description": "Description of the Fiscal Folio Parameter.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "value": {
          "description": "Parameter value of the Fiscal Folio Parameter.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "internal": {
          "description": "Indicates whether the Fiscal Folio Parameter is user created or from seed data.",
          "type": "boolean"
        }
      }
    },
    "fiscalGuestTypesDetails": {
      "type": "object",
      "description": "Response object for fetching Fiscal Guest Types.",
      "properties": {
        "fiscalGuestTypes": {
          "description": "Collection of Fiscal Guest Types.",
          "$ref": "#/definitions/fiscalGuestTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalGuestTypesType": {
      "type": "array",
      "description": "List of Fiscal Guest Types.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fiscalGuestTypeType"
      }
    },
    "fiscalGuestTypeType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "fiscalGuestTypesCriteria": {
      "type": "object",
      "description": "Request object for creating Fiscal Guest Types.",
      "properties": {
        "fiscalGuestTypes": {
          "description": "Fiscal Guest Typesto be created.",
          "$ref": "#/definitions/fiscalGuestTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalGuestTypesToBeChanged": {
      "type": "object",
      "description": "Request object for changing Fiscal Guest Types.",
      "properties": {
        "fiscalGuestTypes": {
          "description": "Fiscal Guest Typesto be changed.",
          "$ref": "#/definitions/fiscalGuestTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalPeriodsEdit": {
      "type": "object",
      "properties": {
        "fiscalPeriods": {
          "description": "Details of the Fiscal Periods to edit",
          "$ref": "#/definitions/fiscalPeriodsEditType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalPeriodsEditType": {
      "type": "array",
      "description": "List of Fiscal Periods.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fiscalPeriodEditType"
      }
    },
    "fiscalPeriodEditType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Resort for which the Period is defined.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "yearId": {
          "description": "Id of the Year.",
          "type": "number"
        },
        "startDate": {
          "description": "Start Date of the Period",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "newPeriod": {
          "description": "Edited values of the fiscal period.",
          "$ref": "#/definitions/fiscalPeriodType"
        }
      },
      "description": "Values of the old primary key."
    },
    "fiscalPeriodType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Resort for which the Period is defined.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "yearId": {
          "description": "Id of the Year.",
          "type": "number"
        },
        "startDate": {
          "description": "Start Date of the Period",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "year": {
          "description": "Year for the current Period.",
          "type": "number"
        },
        "code": {
          "description": "Code of the current Period.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Period.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "periodType": {
          "description": "Type of the Period.",
          "$ref": "#/definitions/yearTypeType"
        },
        "endDate": {
          "description": "End Date of the Period.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      },
      "description": "Fiscal Period Type"
    },
    "yearTypeType": {
      "type": "string",
      "description": "Defined Values for Fiscal Year Type.",
      "enum": [
        "Calendar",
        "Fiscal"
      ]
    },
    "fiscalPeriods": {
      "type": "object",
      "properties": {
        "fiscalPeriods": {
          "description": "Details of the Fiscal Periods to be created",
          "$ref": "#/definitions/fiscalPeriodsType"
        },
        "cycleFiscalPeriods": {
          "description": "Details of the Cycle Fiscal Periods",
          "type": "object",
          "properties": {
            "cycleFiscalPeriods": {
              "description": "Details of the Cycle Fiscal Periods",
              "$ref": "#/definitions/cycleFiscalPeriodsType"
            },
            "forceDelete": {
              "description": "If true all overlapping periods will be deleted. No further confirmation required.",
              "type": "boolean"
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalPeriodsType": {
      "type": "array",
      "description": "List of Fiscal Periods.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fiscalPeriodType"
      }
    },
    "cycleFiscalPeriodsType": {
      "type": "array",
      "description": "List of Cycle Fiscal Periods.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cycleFiscalPeriodType"
      }
    },
    "cycleFiscalPeriodType": {
      "type": "object",
      "description": "Fiscal Year Cycle Period creation type.",
      "properties": {
        "hotelId": {
          "description": "Resort for which the Period is defined.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "yearId": {
          "description": "Id of the Year.",
          "type": "number"
        },
        "periodPrefix": {
          "description": "Prefix added to all period to be created",
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "cycle": {
          "description": "Type of Cycle Period to create.",
          "$ref": "#/definitions/cyclePeriodType"
        }
      }
    },
    "cyclePeriodType": {
      "type": "string",
      "description": "Signifies Calendar Period",
      "enum": [
        "FourWeeks",
        "FourFourFiveWeeks",
        "FourFiveFourWeeks",
        "FiveFourFourWeeks",
        "CalendarMonth"
      ]
    },
    "fiscalPeriodsInfo": {
      "type": "object",
      "properties": {
        "fiscalPeriods": {
          "description": "Collection of Fiscal Periods",
          "$ref": "#/definitions/fiscalPeriodsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalRegionsDetails": {
      "type": "object",
      "description": "Response object for fetching Fiscal Regions.",
      "properties": {
        "fiscalRegions": {
          "description": "Collection of Fiscal Regions.",
          "$ref": "#/definitions/fiscalRegionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalRegionsType": {
      "type": "array",
      "description": "List of Fiscal Regions.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fiscalRegionType"
      }
    },
    "fiscalRegionType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "fiscalRegionsCriteria": {
      "type": "object",
      "description": "Request object for creating Fiscal Regions.",
      "properties": {
        "fiscalRegions": {
          "description": "Fiscal Regions to be created.",
          "$ref": "#/definitions/fiscalRegionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalRegionsToBeChanged": {
      "type": "object",
      "description": "Request object for changing Fiscal Regions.",
      "properties": {
        "fiscalRegions": {
          "description": "Fiscal Regions to be changed.",
          "$ref": "#/definitions/fiscalRegionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalYears": {
      "type": "object",
      "properties": {
        "fiscalYears": {
          "description": "Collection of Fiscal Years",
          "$ref": "#/definitions/fiscalYearsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalYearsType": {
      "type": "array",
      "description": "List of Fiscal Years.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fiscalYearType"
      }
    },
    "fiscalYearType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Resort for which the Year is defined.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "yearId": {
          "description": "Unique id of the Year.",
          "type": "number"
        },
        "year": {
          "description": "Number of the Year.",
          "type": "number"
        },
        "description": {
          "description": "Description of the Year.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "yearType": {
          "description": "Type of the Year.",
          "$ref": "#/definitions/yearTypeType"
        },
        "startDate": {
          "description": "Start Date of the Year.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "description": "End Date of the Year.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      },
      "description": "Fiscal Year Type"
    },
    "arFlaggedReasons": {
      "type": "object",
      "description": "Response for fetching Flagged Reasons.",
      "properties": {
        "aRFlaggedReasons": {
          "description": "Collection of Flagged Reasons.",
          "$ref": "#/definitions/aRFlaggedReasonsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "aRFlaggedReasonsType": {
      "type": "array",
      "description": "List of the Flagged Reason to be configured or fetched",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/aRFlaggedReasonType"
      }
    },
    "aRFlaggedReasonType": {
      "type": "object",
      "description": "Details for AR Flagged Reason.",
      "properties": {
        "code": {
          "description": "AR Flagged Reason Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of AR Flagged Reason.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "displaySequence": {
          "description": "Display sequence for AR Flagged Reason.",
          "type": "number"
        }
      }
    },
    "folioArrangementCodes": {
      "type": "object",
      "properties": {
        "folioArrangementCodes": {
          "description": "Collection of folio arrangement codes.",
          "$ref": "#/definitions/folioArrangementCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioArrangementCodesType": {
      "type": "array",
      "description": "Details for folio arrangement code along with associated transaction codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/folioArrangementCodeType"
      }
    },
    "folioArrangementCodeType": {
      "type": "object",
      "description": "Generic Type to specify unique/primary id for the code. mostly used for Hotel level configuration codes removal request.",
      "properties": {
        "hotelId": {
          "description": "Hotel where the code is configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Configuration code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "arrangementId": {
          "description": "Primay key of arrangement codes",
          "type": "number"
        },
        "description": {
          "description": "Description of the Folio Group Code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "taxTypeCode": {
          "description": "information about the tax type code linked to the folio arrangment Code.",
          "type": "string"
        },
        "revenue": {
          "description": "specify whether the arrangement postings are classed as revenue.",
          "type": "boolean"
        },
        "transactionCodes": {
          "description": "Transaction codes that are associated to the folio grouping codes.",
          "$ref": "#/definitions/codeListType"
        }
      }
    },
    "folioArrangementCodesCopy": {
      "type": "object",
      "properties": {
        "folioArrangementCode": {
          "type": "array",
          "description": "List of folio arrangement codes to be copied.",
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioCopyLegend": {
      "type": "object",
      "properties": {
        "criteria": {
          "description": "Criteria to fetch folio copy legends description",
          "$ref": "#/definitions/folioCopyLegendType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioCopyLegendType": {
      "type": "object",
      "description": "Search criteria to fetch folio copy legends information.",
      "properties": {
        "code": {
          "description": "Term code to be searched.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Term description",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "languageCode": {
          "description": "Language code to be searched.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "folioCopyLegends": {
      "type": "object",
      "properties": {
        "legends": {
          "$ref": "#/definitions/folioCopyLegendsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioCopyLegendsType": {
      "type": "array",
      "description": "Details about folio copy legends.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/folioCopyLegendType"
      }
    },
    "folioPrintQueues": {
      "type": "object",
      "properties": {
        "folioPrintQueues": {
          "$ref": "#/definitions/folioPrintQueuesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioPrintQueuesType": {
      "type": "array",
      "description": "List of folio print queues",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/folioPrintQueueType"
      }
    },
    "folioPrintQueueType": {
      "type": "object",
      "description": "Folio Print queue identification details",
      "properties": {
        "hotelId": {
          "description": "Property associated with folio print queue",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "queueName": {
          "description": "Folio print queue name",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "billNumber": {
          "description": "Last folio number",
          "type": "integer"
        },
        "fiscalBillNumber": {
          "description": "Last fiscal bill number",
          "type": "integer"
        },
        "incrementalValue": {
          "description": "Incremental Value",
          "type": "integer"
        },
        "inactive": {
          "description": "Indicates whether the folio print queue is inactive or not.",
          "type": "boolean"
        }
      }
    },
    "folioTypeLegendMappingsConfigDetails": {
      "type": "object",
      "description": "Response object for fetch folio type legend mapping.",
      "properties": {
        "legends": {
          "$ref": "#/definitions/folioTypeLegendMappingsConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioTypeLegendMappingsConfigType": {
      "type": "array",
      "description": "Details about folio type legened mapping.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/folioTypeLegendMappingConfigType"
      }
    },
    "folioTypeLegendMappingConfigType": {
      "type": "object",
      "description": "Folio type legened mapping information.",
      "properties": {
        "hotelId": {
          "description": "Property associated with folio type legend mapping",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "legendCode": {
          "description": "Legend code to which folio types attached.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioType": {
          "description": "Folio type attached to the legend.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioTypeDescription": {
          "description": "Folio type description attached to the legend.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "folioTypeLegendMappingConfigCriteria": {
      "type": "object",
      "description": "Request object to create folio type legend mapping information.",
      "properties": {
        "criteria": {
          "description": "Criteria to create folio type legend mapping.",
          "$ref": "#/definitions/folioTypeLegendMappingConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioTypeLegendMappingConfigToBeChanged": {
      "type": "object",
      "description": "Request object to edit folio type legend mapping information.",
      "properties": {
        "criteria": {
          "description": "Criteria to edit folio type legend mapping.",
          "$ref": "#/definitions/folioTypeLegendMappingConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioTypeLegendMappingConfigStatus": {
      "type": "object",
      "description": "Response Body.",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioTypesConfig": {
      "type": "object",
      "properties": {
        "folioTypes": {
          "description": "Collection of Folio Type Name details.",
          "$ref": "#/definitions/folioTypesConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioTypesConfigType": {
      "type": "array",
      "description": "Information details of the Folio Type Names.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/folioTypeConfigType"
      }
    },
    "folioTypeConfigType": {
      "type": "object",
      "description": "Information detail for uniquely identifying a Folio Type Name.",
      "properties": {
        "hotelId": {
          "description": "Hotel where the code is configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Configuration code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "taxType": {
          "description": "Name Tax Type associated with folio type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "guestClassification": {
          "description": "Type of guest Individual, Professional, etc, used in certain countries.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionServiceType": {
          "description": "Identify the service type of transaction, used in certain countries.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioReports": {
          "description": "Collection of reports associated with a Folio Type Name.",
          "$ref": "#/definitions/folioReportsType"
        },
        "associatedCreditFolioType": {
          "description": "Stores the Linked Associated Credit Folio Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "profileAttributes": {
          "description": "Determines the Folio Type based on attributes of the Payee Profile.",
          "$ref": "#/definitions/folioTypeProfileAttributes"
        },
        "fiscalFolio": {
          "description": "Folio Type is fiscal or not, used in certain countries.",
          "type": "boolean"
        },
        "sendFiscalFolio": {
          "description": "Adding this flag at folio type level would decide to send fiscal folio (generate payload) or not.",
          "type": "boolean"
        },
        "correctionFolio": {
          "description": "Folio type is the correction or not, used in certain countries.",
          "type": "boolean"
        },
        "debitFolio": {
          "description": "Folio type is a debit folio or not, used in certain countries.",
          "type": "boolean"
        },
        "depositFolio": {
          "description": "Folio type is a deposit folio type or not, used in certain countries.",
          "type": "boolean"
        },
        "simpleFolio": {
          "description": "Folio type is a simple folio type or not, used in certain countries.",
          "type": "boolean"
        },
        "internalFolio": {
          "description": "Folio type is internal or not, used in certain countries.",
          "type": "boolean"
        },
        "aRFolio": {
          "description": "Folio type is Account Receivable or not, used in certain countries.",
          "type": "boolean"
        },
        "manualFolio": {
          "description": "Folio type has a manual folio type associated or not, used in certain countries.",
          "type": "boolean"
        },
        "informationFolio": {
          "description": "Used only for Information and Pro-forma folios in certain countries.",
          "type": "boolean"
        },
        "useNationality": {
          "description": "Folio type is used for Local national or foreigner, used in certain countries.",
          "type": "boolean"
        },
        "cityLedgerFolio": {
          "description": "Folio type is used for City Ledger bills or not or not, used in certain countries.",
          "type": "boolean"
        },
        "useTaxNumber": {
          "description": "Folio type is used for profiles which have a tax number or not, used in certain countries.",
          "type": "boolean"
        },
        "allowFolioCompression": {
          "description": "Allowed to create compressed folio on existing folio type if user tries to compress on the folio otherwise user is not allowed to compress, used in certain countries.",
          "type": "boolean"
        },
        "compressedFolio": {
          "description": "Folio type is Compressible or not, indicates that the folio which was created is a Compressed Folio based on the AllowFolioCompression flag, used in certain countries.",
          "type": "boolean"
        },
        "allowCreditFolio": {
          "description": "Allowed to create credit folio on existing folio type if user gives the credit on the folio otherwise user is not allowed to give a credit, used in certain countries.",
          "type": "boolean"
        },
        "creditFolio": {
          "description": "Folio type used for Credit Folio or not, indicates that the folio which was created is a Credit Folio based on the AllowCreditFolio flag , used in certain countries.",
          "type": "boolean"
        },
        "allowFolioConversion": {
          "description": "Folio type used for Converting the Folios, used in certain countries.",
          "type": "boolean"
        },
        "folioUsed": {
          "description": "Flag to indicate if the Folio Type has been used to create a Folio.",
          "type": "boolean"
        },
        "supplementalFolio": {
          "description": "Folio type is a supplemental folio ( debit bill ) type or not, used in certain countries.",
          "type": "boolean"
        },
        "useOriginalFolioStayDetails": {
          "description": "Use original folio stay details on the folio which was created using the folio type.",
          "type": "boolean"
        },
        "documentCode": {
          "description": "Document code which can be defined on each folio type, which is an alphanumeric value can be used on Invoices or other documents for tax purposes. E.g. In case of Portugal, this value is combined with Folio Number for ATCUD requirements.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "taxFolio": {
          "description": "To indicate if the folio type is to be used for a tax folio. Used in Greece Country.",
          "type": "boolean"
        },
        "folioTypePrefix": {
          "description": "Prefix used for folio type",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioTypeSuffix": {
          "description": "Suffix used for folio type",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "lastFolioNumber": {
          "description": "Last folio number issued for a folio type",
          "type": "number"
        },
        "proFormaFolio": {
          "description": "To indicate if the folio type is to be used for a proforma folio.",
          "type": "boolean"
        }
      }
    },
    "folioReportsType": {
      "type": "array",
      "description": "Information details of the Folio Reports associated with Folio Type Name.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/folioReportType"
      }
    },
    "folioReportType": {
      "type": "object",
      "description": "Folio Report associated with the Folio Type Name. Includes Name Of the folio report,the Group for Folio Type Name belongs to and the Language Code for which the folio is effective.",
      "properties": {
        "reportName": {
          "description": "Name of the .REP or .RDF file. .REP or .RDF extension is not needed.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "reportGroup": {
          "description": "Report group to which the report is being added.",
          "$ref": "#/definitions/folioReportGroupType"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        }
      }
    },
    "folioReportGroupType": {
      "type": "string",
      "description": "The Folio Report Group name. The folio report will be defined under each group and based on where the folio has to be printed, Opera will pick up the correct folio report name to print.",
      "enum": [
        "Guest",
        "Group",
        "AccountsReceivables",
        "PasserBy",
        "PostIt",
        "Expense",
        "CorrectionHeader"
      ]
    },
    "folioTypeProfileAttributes": {
      "type": "string",
      "description": "Profile is not configured with Tax Id.",
      "enum": [
        "WithoutTaxId"
      ]
    },
    "foreignCurrencies": {
      "type": "object",
      "properties": {
        "foreignCurrencies": {
          "description": "Collection of Foreign Currencies",
          "$ref": "#/definitions/foreignCurrenciesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "foreignCurrenciesType": {
      "type": "array",
      "description": "List of the Foreign Currencies to be configured or fetched",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/foreignCurrencyType"
      }
    },
    "foreignCurrencyType": {
      "type": "object",
      "description": "Provides information about the Foreign Currency Code.",
      "properties": {
        "currencyCode": {
          "description": "Code of the Foreign Currency",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Foreign Currency Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "decimals": {
          "description": "Number of Decimal places defined for the Foreign Currency Code",
          "type": "integer"
        },
        "symbol": {
          "description": "Symbol defined for the Currency",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "sellCurrency": {
          "description": "Indicates if the Currency is available for selling",
          "type": "boolean"
        },
        "inactive": {
          "description": "Indicates if the Foreign Currency Code is inactive",
          "type": "boolean"
        },
        "displaySequence": {
          "description": "Display Sequence",
          "type": "number"
        },
        "currencyLimits": {
          "description": "Provides information about various limits on the Currency Code",
          "type": "array",
          "maxItems": 6,
          "items": {
            "$ref": "#/definitions/currencyLimitType"
          }
        }
      }
    },
    "currencyLimitType": {
      "type": "object",
      "description": "Type used for Currency Limits.",
      "properties": {
        "postingLimit": {
          "description": "Indicated the Posting Limit.",
          "$ref": "#/definitions/postingLimitType"
        },
        "currencyType": {
          "description": "Indicates what type of currency it is Local/Foreign.",
          "$ref": "#/definitions/currencyHandlingType"
        },
        "amount": {
          "description": "Indicates the curresponding limit for amount.",
          "type": "number"
        }
      }
    },
    "postingLimitType": {
      "type": "string",
      "description": "Simple Type for Posting Limit Types.",
      "enum": [
        "Daily",
        "Monthly",
        "PerTransaction"
      ]
    },
    "currencyHandlingType": {
      "type": "string",
      "description": "Simple Type for Posting Limit Types.",
      "enum": [
        "Local",
        "Foreign"
      ]
    },
    "hotelTransactionGenerates": {
      "type": "object",
      "properties": {
        "transactionGenerates": {
          "description": "Transaction generates to be created.",
          "$ref": "#/definitions/hotelTransactionGeneratesSetupType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelTransactionGeneratesSetupType": {
      "type": "object",
      "description": "Defines the Generates Setup and its Calculation Rules.",
      "properties": {
        "addBaseAmtTo": {
          "description": "Defines the buckets the base or posting amount will be added to.",
          "$ref": "#/definitions/generateCalculationBucketsType"
        },
        "generates": {
          "description": "Defines the Generates and its Calculation Rules.",
          "$ref": "#/definitions/generatesType"
        },
        "hotelId": {
          "description": "Hotel code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionCode": {
          "description": "Transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionGroup": {
          "description": "Transaction group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionSubGroup": {
          "description": "Transaction sub group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "taxInclusive": {
          "description": "True indicates that the tax is inclusive in the generate.",
          "type": "boolean"
        }
      }
    },
    "generateCalculationBucketsType": {
      "type": "object",
      "description": "Defines the buckets the generated amount can be added to.",
      "properties": {
        "bucket1": {
          "description": "Generate Calculation Bucket1.",
          "type": "boolean"
        },
        "bucket2": {
          "description": "Generate Calculation Bucket2.",
          "type": "boolean"
        },
        "bucket3": {
          "description": "Generate Calculation Bucket3.",
          "type": "boolean"
        }
      }
    },
    "generatesType": {
      "type": "array",
      "description": "Defines the Generate and its Calculation Rules.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/generateType"
      }
    },
    "generateType": {
      "type": "object",
      "description": "Defines the Generate and its Calculation Rules",
      "properties": {
        "generateId": {
          "description": "Unique ID of the Generate.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "rule": {
          "description": "Defines percentage rule for generates.",
          "$ref": "#/definitions/generateCalcRuleType"
        },
        "addGeneratedAmtTo": {
          "description": "Defines the buckets the generated amount will be added to.",
          "$ref": "#/definitions/generateCalculationBucketsType"
        },
        "level": {
          "description": "Defines the level from which the generates was created.",
          "$ref": "#/definitions/generateLevelType"
        },
        "code": {
          "description": "Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "generateCalcRuleType": {
      "type": "object",
      "description": "Defines the Calculation Rule for the generate.",
      "properties": {
        "percentage": {
          "description": "Defines percentage rule for generates.",
          "$ref": "#/definitions/percentageGenerateType"
        },
        "flatAmount": {
          "description": "Defines Flat Amount rule for generates.",
          "$ref": "#/definitions/flatAmtGenerateType"
        },
        "uDF": {
          "description": "Defines User Defined Function to calculate generates.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "uDFFunctionName": {
          "description": "The function name of the User Defined Function used to calculate generates.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "uDFFunctionArguments": {
          "description": "The function argument name-value combination accepted by the User Defined Function.",
          "$ref": "#/definitions/functionArgumentsType"
        },
        "taxTypeBased": {
          "description": "Defines TaxType Based Generat Calculation.",
          "$ref": "#/definitions/taxTypesGenerateType"
        },
        "roundingMethod": {
          "description": "Defines the rounding method to be used.",
          "$ref": "#/definitions/generateRoundingMethodType"
        },
        "posting": {
          "description": "Advance Generates posting rules, this is only applicable when Advance Generates parameter is active.",
          "$ref": "#/definitions/generatePostingRuleType"
        }
      }
    },
    "percentageGenerateType": {
      "type": "object",
      "description": "Defines percentage rule for generates.",
      "properties": {
        "amount": {
          "description": "Percentage Amount.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "calculatedOn": {
          "description": "Calculation bucket the percentage generates are calculated against.",
          "$ref": "#/definitions/generateCalcBucketType"
        },
        "useTaxBracket": {
          "description": "Determines if tax bracket calculations are to apply to generates.",
          "type": "boolean"
        }
      }
    },
    "generateCalcBucketType": {
      "type": "string",
      "description": "Generates calculation bucket/group. Percentage generates are calculated against amount in one of the the calculation bucket.",
      "enum": [
        "Base",
        "Bucket1",
        "Bucket2",
        "Bucket3"
      ]
    },
    "flatAmtGenerateType": {
      "type": "object",
      "description": "Defines Flat Amount rule for generates.",
      "properties": {
        "amount": {
          "description": "Flat Amount of the generate.",
          "type": "number"
        }
      }
    },
    "functionArgumentsType": {
      "type": "array",
      "description": "Collection of function arguments and their corresponding values.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/functionArgumentType"
      }
    },
    "functionArgumentType": {
      "type": "object",
      "description": "This type provided details of a function argument and the value it holds.",
      "properties": {
        "name": {
          "description": "Specifies the name of the function argument.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "value": {
          "description": "Specifies the value held by the function argument.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "position": {
          "description": "Specifies the position of the function argument in the argument list.",
          "type": "integer"
        },
        "dataType": {
          "description": "Specifies the datatype of the function argument.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "required": {
          "description": "Argument of the function mandatory or not.",
          "type": "boolean"
        }
      }
    },
    "taxTypesGenerateType": {
      "type": "array",
      "description": "Defines the Calculation Rule for the Tax Type for a specific date schedule",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/taxTypeGenerateType"
      }
    },
    "taxTypeGenerateType": {
      "type": "object",
      "description": "Defines the Calculation Rules for the Tax Type",
      "properties": {
        "schedule": {
          "description": "Defines the Calculation Rule for the Tax Type for a specific date schedule",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/taxTypeGenerateScheduleType"
          }
        },
        "code": {
          "description": "Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "taxTypeGenerateScheduleType": {
      "type": "object",
      "description": "Defines the Calculation Rule for the Tax Type for a specific date schedule",
      "properties": {
        "rule": {
          "description": "Defines percentage rule for generates.",
          "$ref": "#/definitions/taxTypeCalcRuleType"
        },
        "startDate": {
          "description": "Date when this schedule will be effective.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "taxTypeCalcRuleType": {
      "type": "object",
      "description": "Defines the Calculation Rule for the generate.",
      "properties": {
        "percentage": {
          "description": "Defines percentage rule for generates.",
          "$ref": "#/definitions/percentageGenerateType"
        },
        "flatAmount": {
          "description": "Defines Flat Amount rule for generates.",
          "$ref": "#/definitions/flatAmtGenerateType"
        },
        "uDF": {
          "description": "Defines User Defined Function to calculate generates.",
          "$ref": "#/definitions/uDFGenerateType"
        },
        "doNotPost": {
          "description": "Existence of this element indicates that generate will not be calculated/posted.",
          "$ref": "#/definitions/doNotPostGenerateType"
        },
        "roundingMethod": {
          "description": "Defines the rounding method to be used.",
          "$ref": "#/definitions/generateRoundingMethodType"
        }
      }
    },
    "uDFGenerateType": {
      "type": "object",
      "description": "Defines UDF rule for generates.",
      "properties": {
        "uDF": {
          "description": "Defines User Defined Function to calculate generates.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "uDFFunctionName": {
          "description": "The function name of the User Defined Function used to calculate generates.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "uDFFunctionArguments": {
          "description": "The function argument name-value combination accepted by the User Defined Function.",
          "$ref": "#/definitions/functionArgumentsType"
        }
      }
    },
    "doNotPostGenerateType": {
      "type": "object",
      "description": "Existance of this type indicates that the generate will not be effective. This is mainly used on Tax Type based generates rule.",
      "properties": {}
    },
    "generateRoundingMethodType": {
      "type": "string",
      "description": "This type is only available for properties with zero decimals. If a property is using decimal points, this type will not be available. The rounding methods which can be specified are: UP, DOWN or NONE.",
      "enum": [
        "Up",
        "Down",
        "None"
      ]
    },
    "generatePostingRuleType": {
      "type": "object",
      "description": "Advance Generates posting rules.",
      "properties": {
        "applicableDays": {
          "description": "Generates are posted/applicable only for first Applicable Days of the stay.",
          "type": "integer"
        },
        "adjustmentType": {
          "description": "Indicates type of adjustment procedure required, if there is a need due to the ApplicableDays setting.",
          "$ref": "#/definitions/generateAdjustmentTypeType"
        }
      }
    },
    "generateAdjustmentTypeType": {
      "type": "string",
      "description": "Generates calculation bucket/group. Percentage generates are calculated against amount in one of the the calculation bucket.",
      "enum": [
        "DuringEndOfDay",
        "PromptAtCheckOut",
        "NoAdjustment"
      ]
    },
    "generateLevelType": {
      "type": "string",
      "description": "Defines the level from which the generates was created.",
      "enum": [
        "Group",
        "SubGroup",
        "TransactionCode"
      ]
    },
    "groupArrangementCodes": {
      "type": "object",
      "properties": {
        "groupArrangementCodes": {
          "description": "Collection of group arrangement codes.",
          "$ref": "#/definitions/groupArrangementCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "groupArrangementCodesType": {
      "type": "array",
      "description": "Details for group arrangement code along with associated transaction codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/groupArrangementCodeType"
      }
    },
    "groupArrangementCodeType": {
      "type": "object",
      "description": "Generic Type to specify unique/primary id for the code. mostly used for Hotel level configuration codes removal request.",
      "properties": {
        "hotelId": {
          "description": "Hotel where the code is configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Configuration code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "arrangementId": {
          "description": "Primay key of arrangement codes",
          "type": "number"
        },
        "description": {
          "description": "Description of the Folio Group Code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "taxTypeCode": {
          "description": "information about the tax type code linked to the folio arrangment Code.",
          "type": "string"
        },
        "revenue": {
          "description": "specify whether the arrangement postings are classed as revenue.",
          "type": "boolean"
        },
        "transactionCodes": {
          "description": "Transaction codes that are associated to the folio grouping codes.",
          "$ref": "#/definitions/codeListType"
        }
      }
    },
    "groupArrangementCodesCopy": {
      "type": "object",
      "properties": {
        "groupArrangementCode": {
          "type": "array",
          "description": "List of the group arrangement codes to be copied.",
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "gUINumberRulesDetails": {
      "type": "object",
      "properties": {
        "rules": {
          "$ref": "#/definitions/gUINumberRules"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "gUINumberRules": {
      "type": "array",
      "description": "List of GUI number rules",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/gUINumberRule"
      }
    },
    "gUINumberRule": {
      "type": "object",
      "description": "GUI Number rule",
      "properties": {
        "hotelId": {
          "description": "Property associated with GUI number",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "period": {
          "description": "Period associated with GUI number, each Period defined by two month sets example JANUARY/FEBRUARY",
          "$ref": "#/definitions/gUINumberPeriodType"
        },
        "periodCode": {
          "description": "Period code associated with period",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "prefix": {
          "description": "Prefix associated with GUI number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "beginNo": {
          "description": "BeginNo associated with GUI number",
          "type": "integer"
        },
        "endNo": {
          "description": "EndNo associated with GUI number",
          "type": "integer"
        },
        "currentFiscalBillNo": {
          "description": "CurrentFiscalBillNo associated with GUI number",
          "type": "integer"
        }
      }
    },
    "gUINumberPeriodType": {
      "type": "string",
      "description": "Period set November-December",
      "enum": [
        "JanuaryFebruary",
        "MarchApril",
        "MayJune",
        "JulyAugust",
        "SeptemberOctober",
        "NovemberDecember"
      ]
    },
    "adjustmentCodes": {
      "type": "object",
      "properties": {
        "adjustmentCodes": {
          "description": "Collection of Adjustment Code configurations.",
          "$ref": "#/definitions/adjustmentCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "adjustmentCodesType": {
      "type": "array",
      "description": "Holds Adjustment Code details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/adjustmentCodeType"
      }
    },
    "adjustmentCodeType": {
      "type": "object",
      "description": "Provides information about Adjustment Codes.",
      "properties": {
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Adjustment Reason Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "codeType": {
          "description": "Correction type. e.g. ADJ for adjustment, COR for correction, DEL for deletion.",
          "$ref": "#/definitions/adjustmentReasonCodeType"
        },
        "description": {
          "description": "Adjustment Reason Description",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "amount": {
          "description": "Amount or Percentage Value for Adjustment Code",
          "$ref": "#/definitions/currencyAmountType"
        },
        "bIRGuest": {
          "description": "BIR Guest Type in Adjustment Codes.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "amountOrPercentageFlag": {
          "description": "Adjustment Code Calculation Type, valid values are Amount and Percentage.",
          "$ref": "#/definitions/amountOrPercentage"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "adjustmentReasonCodeType": {
      "type": "string",
      "description": "Defines values for Adjustment reason codes. e.g. ADJ for adjustment, COR for correction, DEL for deletion.",
      "enum": [
        "Adjustment",
        "Correction",
        "Deletion",
        "ServiceRecovery",
        "CreditBill",
        "VoidBill"
      ]
    },
    "amountOrPercentage": {
      "type": "string",
      "description": "Adjustment Code calculation type based on details.",
      "enum": [
        "Amount",
        "Percent"
      ]
    },
    "adjustmentCodesCopy": {
      "type": "object",
      "properties": {
        "adjustmentCode": {
          "type": "array",
          "description": "List of the Adjustment Codes to be copied.",
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "paymentMethods": {
      "type": "object",
      "properties": {
        "paymentMethods": {
          "description": "Collection of payment methods.",
          "$ref": "#/definitions/paymentMethodsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "paymentMethodsType": {
      "type": "array",
      "description": "Holds the various types of payment methods.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/paymentMethodType"
      }
    },
    "paymentMethodType": {
      "type": "object",
      "description": "Provides information about the payment methods. CreditCardCode and CreditCardType help to determine if EFTs are allowed.",
      "properties": {
        "description": {
          "description": "Description of the payment method.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "paymentCard": {
          "description": "Contains credit card information.",
          "$ref": "#/definitions/paymentCardType"
        },
        "paymentMethodTransactionInfo": {
          "description": "Contains summary information of the transaction.",
          "$ref": "#/definitions/paymentMethodTransactionInfoType"
        },
        "paymentMethodUsage": {
          "description": "Contains various usage options permitted for the payment method.",
          "$ref": "#/definitions/paymentMethodUsageType"
        },
        "creditLimit": {
          "description": "Contains the credit limit of a transaction.",
          "$ref": "#/definitions/creditLimitType"
        },
        "hotelId": {
          "description": "Property from which the payment method belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "paymentMethod": {
          "description": "Defines the unique identifier for this payment method.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "calculatePoints": {
          "description": "Defines when the points are to be calculated.",
          "$ref": "#/definitions/calculatePointsType"
        },
        "inactive": {
          "description": "Indicates whether the payment method is inactive or not.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        }
      }
    },
    "paymentCardType": {
      "type": "object",
      "description": "Contains credit card information.",
      "properties": {
        "cardUsageRules": {
          "description": "Contains valid usages of the card.",
          "$ref": "#/definitions/cardUsageRulesType"
        },
        "validation": {
          "description": "Contains rules to validate card information.",
          "$ref": "#/definitions/paymentMethodValidationRuleType"
        },
        "merchantNumber": {
          "description": "The merchant number to use when settling or transmitting credit card information.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "option": {
          "description": "Switch card options.",
          "$ref": "#/definitions/cardOptionType"
        },
        "cardType": {
          "description": "Internal code of credit card type.",
          "$ref": "#/definitions/cardTypeType"
        },
        "userDefinedCardType": {
          "description": "User defined credit card type if credit card type from a defined list is not provided.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2
        },
        "processing": {
          "description": "This contains information on whether EFT is enabled. A value of 'C' indicates EFT is enabled and 'M' indicates manual authorization is available for this payment card type.",
          "$ref": "#/definitions/cardProcessingType"
        }
      }
    },
    "cardUsageRulesType": {
      "type": "object",
      "description": "Provides information on the various authorization options for a given card type .",
      "properties": {
        "authorizationAtCheckin": {
          "description": "Indicates if this payment method can be used for Authorization at check in.",
          "type": "boolean"
        },
        "authorizationDuringStay": {
          "description": "Indicates if this payment method can be used for Authorization during stay.",
          "type": "boolean"
        },
        "authorizationReversal": {
          "description": "Indicates if this payment method can be used for Authorization reversal can be done.",
          "type": "boolean"
        },
        "authorizationSettlementAtCheckout": {
          "description": "Indicates if this payment method can be used for Authorization settlement can happen during checkout.",
          "type": "boolean"
        },
        "cVVCheck": {
          "description": "Indicates if this payment method needs CVV check.",
          "type": "boolean"
        },
        "addressVerification": {
          "description": "Indicates if this payment method requires an address verification.",
          "type": "boolean"
        },
        "promptAtCheckin": {
          "description": "Indicates if this payment method needs a prompt during check in.",
          "type": "boolean"
        },
        "chipAndPin": {
          "description": "Indicates if this payment method is a chip and pin.",
          "type": "boolean"
        }
      }
    },
    "cardOptionType": {
      "type": "object",
      "description": "Switch card options.",
      "properties": {
        "requireIssueNumber": {
          "description": "Indicates whether issue number is mandatory or not.",
          "type": "boolean"
        },
        "requireStartDate": {
          "description": "Indicates whether start date is mandatory or not.",
          "type": "boolean"
        },
        "either": {
          "description": "Indicates that either Issue Number or Start Date is sufficient.",
          "type": "boolean"
        }
      }
    },
    "paymentMethodTransactionInfoType": {
      "type": "object",
      "description": "Provides information about the transactions including the transaction code, group, subgroup and the posting amount.",
      "properties": {
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "postingAmount": {
          "$ref": "#/definitions/postingAmountType"
        },
        "surcharge": {
          "description": "Surcharge information regarding the payment method.",
          "$ref": "#/definitions/surchargeType"
        },
        "transactionCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionGroup": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionSubGroup": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionDisplay": {
          "type": "string",
          "minLength": 0,
          "maxLength": 8
        }
      }
    },
    "postingAmountType": {
      "type": "object",
      "properties": {
        "minimumAmount": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "maximumAmount": {
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "surchargeType": {
      "type": "object",
      "description": "Surcharge information regarding the payment configuration.",
      "properties": {
        "minimum": {
          "description": "Indicates the minimum credit card transaction amount for which the surcharge applies.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "percentage": {
          "description": "Indicates the percentage amount for a credit card transaction.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        }
      }
    },
    "paymentMethodUsageType": {
      "type": "object",
      "description": "This provides information about the various usage options permitted for the given payment method.",
      "properties": {
        "billing": {
          "description": "Indicates if the payment method can be used for Guest Billing",
          "type": "boolean"
        },
        "accountsReceivable": {
          "description": "Indicates if this payment method can be used for Accounts Receivables.",
          "type": "boolean"
        },
        "deposit": {
          "description": "Indicates if this payment method can be used for Deposit payments.",
          "type": "boolean"
        },
        "compAccounting": {
          "description": "Indicates if this payment method can be used for Comp Accounting.",
          "type": "boolean"
        },
        "reservation": {
          "description": "Indicates if this payment method can be used as a Reservation payment method.",
          "type": "boolean"
        },
        "posting": {
          "description": "Indicates if postings can be manually added to the Reservation when this payment method is used.",
          "type": "boolean"
        },
        "cash": {
          "description": "Indicates if this payment method is a Cash type payment method.",
          "type": "boolean"
        }
      }
    },
    "creditLimitType": {
      "type": "object",
      "properties": {
        "creditLimit": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "percentage": {
          "type": "number",
          "minimum": 0,
          "maximum": 100
        }
      }
    },
    "calculatePointsType": {
      "type": "string",
      "description": "Defines when the points are to be calculated.",
      "enum": [
        "Always",
        "Prompt",
        "Never"
      ]
    },
    "paymentMethodsInfo": {
      "type": "object",
      "properties": {
        "paymentMethods": {
          "description": "Collection of payment methods.",
          "$ref": "#/definitions/paymentMethodsType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "paymentMethodsCopy": {
      "type": "object",
      "properties": {
        "paymentMethods": {
          "type": "array",
          "description": "List of payment methods to be copied.",
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "taxTypes": {
      "type": "object",
      "properties": {
        "taxTypes": {
          "description": "Collection of Tax Type configurations.",
          "$ref": "#/definitions/taxTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "taxTypesType": {
      "type": "array",
      "description": "Holds Tax Type details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/taxTypeType"
      }
    },
    "taxTypesCopy": {
      "type": "object",
      "properties": {
        "taxType": {
          "type": "array",
          "description": "List of the Tax Types to be copied.",
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashierShiftDropLocationsDetails": {
      "type": "object",
      "description": "Response object for fetching Cashier Shift Drop Locations.",
      "properties": {
        "cashierShiftDropLocations": {
          "description": "Collection of Cashier Shift Drop Locations.",
          "$ref": "#/definitions/cashierShiftDropLocationsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashierShiftDropLocationsType": {
      "type": "array",
      "description": "List of Cashier Shift Drop Locations.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cashierShiftDropLocationType"
      }
    },
    "cashierShiftDropLocationType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "hotelId": {
          "description": "Hotel of the record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "cashierShiftDropLocationsCriteria": {
      "type": "object",
      "description": "Request object for creating Cashier Shift Drop Locations.",
      "properties": {
        "cashierShiftDropLocations": {
          "description": "Cashier Shift Drop Locations to be created.",
          "$ref": "#/definitions/cashierShiftDropLocationsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cashierShiftDropLocationsToBeChanged": {
      "type": "object",
      "description": "Request object for changing Cashier Shift Drop Locations.",
      "properties": {
        "cashierShiftDropLocations": {
          "description": "Cashier Shift Drop Locations to be changed.",
          "$ref": "#/definitions/cashierShiftDropLocationsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commissionCodeDetail": {
      "type": "object",
      "description": "Response object for fetching commission code details.",
      "properties": {
        "commissionCodeDetail": {
          "description": "Collection of commission code details.",
          "$ref": "#/definitions/commissionCodeDetailType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commissionCodeDetailType": {
      "type": "object",
      "description": "Commission code detail.",
      "properties": {
        "commissionCodeInfo": {
          "description": "Commission code details.",
          "$ref": "#/definitions/commissionCodeInfoType"
        }
      }
    },
    "compAuthorizers": {
      "type": "object",
      "properties": {
        "compAuthorizerInfo": {
          "description": "Comp authorizer information.",
          "$ref": "#/definitions/compAuthorizersType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "compAuthorizersType": {
      "type": "array",
      "description": "Information associated for an authorizer.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/compAuthorizerType"
      }
    },
    "compBucketRedemptionConfigDetails": {
      "type": "object",
      "description": "Response object for fetching Comp Bucket Redemption Codes configurations.",
      "properties": {
        "bucketRedemptionCodes": {
          "description": "Collection of Comp Bucket Redemption Codes configurations.",
          "$ref": "#/definitions/bucketRedemptionCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "bucketRedemptionCodesType": {
      "type": "array",
      "description": "Details for Bucket Redemption codes along with associated transaction codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/bucketRedemptionCodeType"
      }
    },
    "bucketRedemptionCodeType": {
      "type": "object",
      "description": "This gives detailed information about redemption code.",
      "properties": {
        "description": {
          "description": "Description of the trx code arrangement code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "compTransactionCode": {
          "description": "Comp Transaction code which form the trx code arrangement.",
          "$ref": "#/definitions/compTrxInfoType"
        },
        "code": {
          "description": "Code is used to identify a trx code arrangement.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Identifies the hotel code for which the trx code arrangement is specified.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "compTrxInfoType": {
      "type": "object",
      "description": "Transaction codes info.",
      "properties": {
        "description": {
          "description": "Transaction codes info.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionCode": {
          "description": "Unique identifier for the Transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "compBucketRedemptionConfig": {
      "type": "object",
      "description": "Request object for creating new Comp Bucket Redemption Codes configurations.",
      "properties": {
        "bucketRedemptionCodes": {
          "description": "Bucket Redemption Codes Configurations to be created.",
          "$ref": "#/definitions/bucketRedemptionCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "compTypesDetails": {
      "type": "object",
      "description": "Response object for fetching Comp Types.",
      "properties": {
        "compTypes": {
          "description": "Collection of Comp Types.",
          "$ref": "#/definitions/compTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "customChargesConfigDetails": {
      "type": "object",
      "description": "Response object for fetching Custom Charges.",
      "properties": {
        "customCharges": {
          "description": "Collection of Custom Charges codes.",
          "$ref": "#/definitions/customChargesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "customChargesType": {
      "type": "array",
      "description": "Details for Custom Charges Codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/customChargeType"
      }
    },
    "customChargeType": {
      "type": "object",
      "description": "This gives detailed information about Custom Charges.",
      "properties": {
        "customChargeCode": {
          "description": "Code is used to identify the Custom Charge.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Identifies the hotel code for which the Custom Charge code is specified.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description for the Custom Charge code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "priority": {
          "description": "Identifies the priority for which the Custom Charge code is specified.",
          "type": "integer"
        },
        "price": {
          "description": "Identifies the price for which the Custom Charge code is specified.",
          "type": "number"
        },
        "dateRange": {
          "description": "Identifies the date range for which the Custom Charge code is specified.",
          "$ref": "#/definitions/dateRangeType"
        },
        "percentage": {
          "description": "The percentage of the Rate Code, which will be posted as the Custom Charge to a reservation. The value can contain up to 2 decimal places (ie 10.25%).",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "customChargeRuleType": {
          "description": "Identifies the rule for which the Custom Charge code is specified.",
          "$ref": "#/definitions/customChargeRuleTypeType"
        },
        "customChargePostingRhythm": {
          "description": "Flag to indicate if the custom charge code has a posting rhythm configured or not.",
          "type": "boolean"
        },
        "customChargePostingRhythmType": {
          "description": "Identifies the posting rhythm type for the specified custom charge code.",
          "$ref": "#/definitions/customChargePostingRhythmType"
        },
        "customChargeRanges": {
          "type": "array",
          "description": "List of custom charge ranges.",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/customChargeRangeType"
          }
        },
        "excludeTransactionCodes": {
          "description": "List of Transaction Codes to be excluded from custom charge calculation.",
          "$ref": "#/definitions/codeListType"
        },
        "excludePackageCodes": {
          "description": "List of Package Codes to be excluded from custom charge calculation.",
          "$ref": "#/definitions/codeListType"
        },
        "excludePackageGroups": {
          "description": "List of Package Group Codes to be excluded from custom charge calculation.",
          "$ref": "#/definitions/codeListType"
        },
        "active": {
          "description": "Flag specifying if custom charge code is active or not.",
          "type": "boolean"
        }
      }
    },
    "customChargeRuleTypeType": {
      "type": "object",
      "description": "The rule types for custom charge.",
      "properties": {
        "customChargeRuleType": {
          "description": "Identifies the Custom Charge rule type.",
          "$ref": "#/definitions/customChargeRuleTypeOption"
        },
        "customChargeRuleTypeValue": {
          "description": "Identifies the Custom Charge rule type value.",
          "type": "integer"
        }
      }
    },
    "customChargeRuleTypeOption": {
      "type": "string",
      "description": "The Custom Charge is only posted for the maximum number of nights of the stay.",
      "enum": [
        "Rate",
        "RatePercWithLimit",
        "RatePerPerson"
      ]
    },
    "customChargesConfig": {
      "type": "object",
      "description": "Request object for creating new Custom Charges.",
      "properties": {
        "customCharges": {
          "description": "Custom Charges to be created.",
          "$ref": "#/definitions/customChargesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "customChargeExemptionsConfigToBeCreated": {
      "type": "object",
      "properties": {
        "customChargeExemptionsConfig": {
          "type": "array",
          "description": "New one or more Custom Charge Exemptions to be created.",
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/customChargeExemptionsConfigType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "customChargeExemptionsConfigToBeChanged": {
      "type": "object",
      "properties": {
        "customChargeExemptionsConfig": {
          "type": "array",
          "description": "Existing Custom Charge Exemptions to be changed.",
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/customChargeExemptionsConfigType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "customNumberConfigDetails": {
      "type": "object",
      "description": "Response object for fetching custom number configurations.",
      "properties": {
        "customNumberConfigurationList": {
          "description": "Collection of custom number configurations.",
          "$ref": "#/definitions/customNumberConfigurationListType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "customNumberConfigurationListType": {
      "type": "array",
      "description": "Details about custom number configuration.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/customNumberConfigurationType"
      }
    },
    "customNumberConfigurationType": {
      "type": "object",
      "description": "Custom number configuration details.",
      "properties": {
        "code": {
          "description": "Custom number configuration code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "The description of the custom number configuration code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "area": {
          "description": "The area where this custom number will be used.",
          "$ref": "#/definitions/customNumberConfigurationAreaType"
        },
        "formula": {
          "description": "The formula to generate the custom number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "condition": {
          "description": "The condition to be met to generate and apply the custom number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "timeSpan": {
          "description": "The begin and end date of the custom number configuration.",
          "$ref": "#/definitions/timeSpanType"
        },
        "inActive": {
          "description": "Indicator that tells whether the configuration is active or not.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "hotelId": {
          "description": "Hotel context for the custom number configuration.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "customNumberConfigurationAreaType": {
      "type": "string",
      "enum": [
        "Folio",
        "Receipt"
      ],
      "description": "Receipt"
    },
    "customNumberConfiguration": {
      "type": "object",
      "description": "Request object to create custom number configuration.",
      "properties": {
        "customNumberConfiguration": {
          "description": "Custom number configuration to be created.",
          "$ref": "#/definitions/customNumberConfigurationType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "futurePastExchangeRates": {
      "type": "array",
      "description": "Collection of exchange rates and their information.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/exchangeRateType"
      }
    },
    "fiscalCommandsDetails": {
      "type": "object",
      "description": "Response object for fetching Fiscal Commands.",
      "properties": {
        "fiscalPartners": {
          "$ref": "#/definitions/fiscalCommandsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalCommandsType": {
      "type": "array",
      "description": "List of FiscalCommands.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fiscalCommandType"
      }
    },
    "fiscalCommandType": {
      "type": "object",
      "description": "Fiscal Command details.",
      "properties": {
        "hotelId": {
          "description": "Unique code of the hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "fiscalCommandCode": {
          "description": "Fiscal Command.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "fiscalPartnerCodes": {
          "description": "Configured Fiscal Partners of fiscal Command.",
          "$ref": "#/definitions/fiscalPartnerCodeListType"
        },
        "description": {
          "description": "Fiscal Command description that is only used during a fetch.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "inactive": {
          "description": "A flag that determines whether to fetch active records or inactive records.",
          "type": "boolean"
        }
      }
    },
    "fiscalPartnerCodeListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fiscalPartnerCodeType"
      }
    },
    "fiscalPartnerCodeType": {
      "type": "string",
      "description": "Used for fiscal partner codes. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
      "maxLength": 100,
      "minLength": 0
    },
    "changeFiscalCommands": {
      "type": "object",
      "description": "Request object to edit Fiscal Commands.",
      "properties": {
        "fiscalPartners": {
          "description": "Change existing Fiscal Commands.",
          "$ref": "#/definitions/fiscalCommandsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalPartnersDetails": {
      "type": "object",
      "description": "Response object for fetching Fiscal Partners.",
      "properties": {
        "fiscalPartners": {
          "$ref": "#/definitions/fiscalPartnersType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fiscalPartnersType": {
      "type": "array",
      "description": "Details of Fiscal Partners.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fiscalPartnerType"
      }
    },
    "fiscalPartnerType": {
      "type": "object",
      "description": "Fiscal partner Type",
      "properties": {
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "partnerCode": {
          "description": "Fiscal Partner Code.",
          "$ref": "#/definitions/fiscalPartnerCodeType"
        },
        "priority": {
          "description": "Priority order for processing.",
          "type": "integer"
        },
        "paymentTypes": {
          "description": "Payment types associated with Fiscal Partner.",
          "$ref": "#/definitions/codeListType"
        },
        "payloadPaymentTypes": {
          "description": "Payment types associated with the Fiscal Partner for payment payload generation.",
          "$ref": "#/definitions/codeListType"
        },
        "fiscalFolioProfile": {
          "description": "Payment types associated with Fiscal Partner.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "fiscalPayloadTypes": {
          "type": "array",
          "description": "Types of payload supported by the Fiscal Partner.",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/fiscalPayloadType"
          }
        },
        "folioRequired": {
          "description": "Indicates if the folio PDF is required by the partner or not.",
          "type": "boolean"
        }
      }
    },
    "createFiscalPartners": {
      "type": "object",
      "description": "Request object to create Fiscal Partners",
      "properties": {
        "fiscalPeriods": {
          "description": "Details of the Fiscal Periods to edit",
          "$ref": "#/definitions/fiscalPartnersType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changeFiscalPartners": {
      "type": "object",
      "description": "Request object to edit Fiscal Partners.",
      "properties": {
        "fiscalPartners": {
          "description": "Change existing Fiscal Partners.",
          "$ref": "#/definitions/fiscalPartnersType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "taxTypesGenerate": {
      "type": "object",
      "properties": {
        "taxTypes": {
          "description": "Tax types fetched.",
          "$ref": "#/definitions/taxTypesGenerateType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelInterfaceDetail": {
      "type": "object",
      "description": "Request object for changing Hotel Interface Data.",
      "properties": {
        "details": {
          "description": "Details.",
          "$ref": "#/definitions/hotelInterfaceDetailType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelInterfaceDetailType": {
      "type": "object",
      "properties": {
        "primaryInfo": {
          "description": "Primary information of a Hotel Interface.",
          "$ref": "#/definitions/interfacePrimaryInfoType"
        },
        "additionalInfo": {
          "description": "Additional information of a Hotel Interface.",
          "$ref": "#/definitions/interfaceAdditionalInfoType"
        },
        "generalInfo": {
          "description": "General information of a Hotel Interface.",
          "$ref": "#/definitions/generalInfoType"
        },
        "communicationInfo": {
          "description": "Communication related information of a Hotel Interface.",
          "$ref": "#/definitions/interfaceCommunicationInfoType"
        },
        "translationInfo": {
          "description": "Communication related information of a Hotel Interface.",
          "$ref": "#/definitions/translationType"
        },
        "classOfServiceInfo": {
          "description": "Information related to Class of Service of a Hotel Interface.",
          "$ref": "#/definitions/classOfServiceType"
        },
        "importRoomsInfo": {
          "description": "Information related to Import Rooms of a Hotel Interface.",
          "$ref": "#/definitions/importRoomsType"
        },
        "workstationSetupInfo": {
          "description": "Workstation setup of a hotel interface.",
          "$ref": "#/definitions/workstationSetupType"
        },
        "postingsInfo": {
          "description": "Postings of a hotel interface.",
          "$ref": "#/definitions/postingInfoType"
        },
        "customDataInfo": {
          "description": "Information related to Custom Data of a Hotel Interface.",
          "$ref": "#/definitions/interfaceCustomDataInfoType"
        },
        "exportDataInfo": {
          "description": "Information related to Export Data of a Hotel Interface.",
          "$ref": "#/definitions/interfaceExportDataInfoType"
        },
        "transactionsInfo": {
          "description": "Postings of a hotel interface.",
          "$ref": "#/definitions/transactionCodeInfoType"
        }
      }
    },
    "interfacePrimaryInfoType": {
      "type": "object",
      "properties": {
        "interfaceId": {
          "description": "Unique DB internal number of a Hotel Interface record.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "Hotel Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "logo": {
          "description": "Hotel Interface Logo. On the database, this is also referred as DBF Logo. This is a three letter code followed by an underscore(_). This tells us which DBF files and log files with the prefix that IFC7 is going to create.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "interfaceName": {
          "description": "Name of the Hotel Interface",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "interfaceType": {
          "description": "Three letter code for each interface that identifies the interface.",
          "$ref": "#/definitions/hotelInterfaceTypeType"
        },
        "productCode": {
          "description": "Three letter code that uniquely identifies the external interface.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4
        },
        "licenseCode": {
          "description": "Interface License code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "machineId": {
          "description": "The ID stored in IFC_MACHINES table.",
          "type": "integer"
        },
        "machineName": {
          "description": "Unique machine name of the running IFC.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "interfaceProductCode": {
          "description": "FKT Logo required for the external interface.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "interfaceAdditionalInfoType": {
      "type": "object",
      "properties": {
        "menuType": {
          "description": "Internal representation for Interface Type",
          "$ref": "#/definitions/ifcMenuTypeType"
        },
        "menuName": {
          "description": "Name of the Interface sub-menu",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "controllerPort": {
          "description": "Opera IFC controller (server) port for the connecting clients.",
          "type": "integer"
        },
        "vncPort": {
          "description": "VNC server port for connecting to a VNC server.",
          "type": "integer"
        },
        "cashierId": {
          "description": "Cashier Number.",
          "type": "integer"
        },
        "pathId1": {
          "description": "Used if interface has to support more than one front office system.",
          "type": "integer"
        },
        "timeout": {
          "description": "Used by the Interface module. ( IFC7.exe )",
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "displayFlag": {
          "description": "True if the interface will be displayed.",
          "type": "boolean"
        },
        "autoStartFlag": {
          "description": "Decides if the interface will be started automatically when the controller is restarted.",
          "type": "boolean"
        },
        "activeFlag": {
          "description": "Indicator if the Hotel Interface is active or not. This is different from the Interface Status, which is either STOPPED or RUNNING.",
          "type": "boolean"
        },
        "interfaceStatus": {
          "description": "Status if the Hotel Interface is STOPPED or RUNNING. This is different from the Active Flag, which is either 1 or 0.",
          "$ref": "#/definitions/hotelInterfaceStatusType"
        },
        "version": {
          "description": "Version no. of each external interface that is installed",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "msgExpiresAfter": {
          "description": "(Internal Use) Message Expires After",
          "type": "string",
          "minLength": 0,
          "maxLength": 8
        },
        "useDataThroughFlag": {
          "type": "boolean"
        },
        "nAStart": {
          "description": "Indicator if the Hotel Interface handles night audit commands.",
          "type": "boolean"
        },
        "multipleRoomKey": {
          "description": "Indicator if the Hotel Interface allows multiple room selection for keys.",
          "type": "boolean"
        },
        "onlineKeySystem": {
          "description": "Indicator if the Hotel Interface is an online key system.",
          "type": "boolean"
        },
        "deleteIfcKeysOnKeyDelete": {
          "description": "Indicator if the Interface Keys will be deleted on KeyDelete.",
          "type": "boolean"
        },
        "sendTrack1Data": {
          "description": "Indicator for Hotel Interface Send Track 1 Data.",
          "type": "boolean"
        },
        "sendTrack2Data": {
          "description": "Indicator for Hotel Interface Send Track 2 Data.",
          "type": "boolean"
        },
        "sendRoomStatus": {
          "description": "Indicator if the Room Status will be sent.",
          "type": "boolean"
        },
        "telephoneCharge": {
          "description": "Indicates on what the post unit charge is based on.",
          "$ref": "#/definitions/telephoneChargeType"
        },
        "additionalRoomsLimit": {
          "description": "Maximum number of additional rooms allowed.",
          "type": "integer",
          "minimum": 1,
          "maximum": 999
        },
        "sendValidStartDateTime": {
          "description": "Indicator if the DLS Interface allows to send valid start date and time.",
          "type": "boolean"
        }
      }
    },
    "ifcMenuTypeType": {
      "type": "string",
      "enum": [
        "Cas",
        "Kss",
        "Mbs",
        "Pbx",
        "Pos",
        "Vss",
        "Dcs"
      ],
      "description": "Data Card System"
    },
    "telephoneChargeType": {
      "type": "string",
      "enum": [
        "0",
        "1",
        "2"
      ],
      "description": "Auto Choose"
    },
    "generalInfoType": {
      "type": "object",
      "properties": {
        "createSVCheckIn": {
          "description": "Create stored value during checkin of a Hotel Interface",
          "type": "boolean"
        },
        "enableFailover": {
          "description": "Enable failover of a Hotel Interface",
          "type": "boolean"
        },
        "ccVaultFunction": {
          "description": "CC vault of a Hotel Interface",
          "type": "boolean"
        },
        "enableResend": {
          "description": "Enable resend of a Hotel Interface",
          "type": "boolean"
        },
        "sendARAuthType": {
          "description": "Send AR auth type of a Hotel Interface",
          "type": "boolean"
        },
        "enableDBVerification": {
          "description": "Enable DB verification of a Hotel Interface",
          "type": "boolean"
        },
        "allowCCCancelTransaction": {
          "description": "Allow CC cancel transactions of a Hotel Interface",
          "type": "boolean"
        },
        "showStoredValuePin": {
          "description": "Show stored value pin of a Hotel Interface",
          "type": "boolean"
        },
        "showSVTransaction": {
          "description": "Show SV transaction of a Hotel Interface",
          "$ref": "#/definitions/sVTransactionType"
        },
        "storedValueSystem": {
          "description": "Stored value system of a Hotel Interface",
          "type": "boolean"
        },
        "sendEnhancedFields": {
          "description": "Send enhanced fields of a Hotel Interface",
          "type": "boolean"
        },
        "cardPresentFlag": {
          "description": "Card present of a Hotel Interface",
          "type": "boolean"
        },
        "handleNightAudit": {
          "description": "Handle night audit command of a Hotel Interface",
          "type": "boolean"
        },
        "regularTransaction": {
          "description": "Regular transaction command of a Hotel Interface",
          "type": "boolean"
        },
        "courtesyCardHandling": {
          "description": "Courtesy card handling command of a Hotel Interface",
          "type": "boolean"
        },
        "sendEndOfDay": {
          "description": "Send end of day of a Hotel Interface",
          "type": "boolean"
        },
        "portNumber1": {
          "description": "Logical port number 1 of a the Hotel Interface",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "portNumber2": {
          "description": "Logical port number 2 of a the Hotel Interface",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "portNumber3": {
          "description": "Logical port number 3 of a the Hotel Interface",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "portNumber4": {
          "description": "Logical port number 4 of a the Hotel Interface",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "iPAddress": {
          "description": "IP Address of a the Hotel Interface",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "sVRedeemTrx": {
          "description": "Stored value reedeem transaction of a the Hotel Interface",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "device": {
          "description": "Device of a the Hotel Interface",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "departmentCode1": {
          "description": "Department code 1 of a the Hotel Interface",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "departmentCode2": {
          "description": "Department code 2 of a the Hotel Interface",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "rollupTransactions": {
          "description": "Rollup transactions flag of the Hotel Interface",
          "type": "boolean"
        },
        "allowVideoCheckout": {
          "description": "Indicator if video checkout is allowed or not.",
          "type": "boolean"
        },
        "checkCreditLimit": {
          "description": "One of the video checkout options whether to check the credit limit.",
          "type": "boolean"
        },
        "checkBalance": {
          "description": "One of the video checkout options whether to check the balance.",
          "type": "boolean"
        },
        "checkRouting": {
          "description": "One of the video checkout options whether to check the routing.",
          "type": "boolean"
        },
        "wakeupYn": {
          "description": "Indicator if the Hotel Interface handles wakeup calls.",
          "type": "boolean"
        },
        "wakeupHandledBy": {
          "description": "Determines who handles the wakeup calls, either by Opera (0) or a Vendor (1).",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "wakeRetry": {
          "description": "Wakeup retry limit of the Hotel Interface. Value range is 0 to 999.",
          "type": "integer"
        },
        "wakeDelay": {
          "description": "Wakeup delay value of the Hotel Interface.",
          "type": "integer"
        },
        "prevWake": {
          "description": "Used by the Interface module (IFC7.exe).",
          "type": "integer"
        },
        "folioDisplayOption": {
          "description": "Folio display option of the Hotel Interface applicable to VID and MSC. \"0\" means folio display option off. \"A\" means a guest folio display option. \"U\" means user defined folio display option.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "userDefinedFolio1": {
          "description": "Indicator if the User defined folio 1 is utilized.",
          "type": "boolean"
        },
        "userDefinedFolio2": {
          "description": "Indicator if the User defined folio 2 is utilized.",
          "type": "boolean"
        },
        "userDefinedFolio3": {
          "description": "Indicator if the User defined folio 3 is utilized.",
          "type": "boolean"
        },
        "userDefinedFolio4": {
          "description": "Indicator if the User defined folio 4 is utilized.",
          "type": "boolean"
        },
        "displayPhoneName": {
          "description": "Indicator if the phone name will be displayed.",
          "type": "boolean"
        },
        "keyPinActive": {
          "description": "Indicator if the Key Pin is active or not.",
          "type": "boolean"
        },
        "allPrintDetailOn": {
          "description": "Indicator for Default All Print Details On.",
          "type": "boolean"
        }
      }
    },
    "sVTransactionType": {
      "type": "string",
      "description": "Status of the Hotel Interface either STOPPED or RUNNING.",
      "enum": [
        "OperaTransaction",
        "VendorTransaction",
        "OperaAndVendorTransaction"
      ]
    },
    "interfaceCommunicationInfoType": {
      "type": "object",
      "properties": {
        "tCPConfig": {
          "$ref": "#/definitions/tCPConfigType"
        },
        "serialPortConfig": {
          "$ref": "#/definitions/serialPortConfigType"
        }
      }
    },
    "tCPConfigType": {
      "type": "object",
      "properties": {
        "iPAddress": {
          "description": "IP address of the interface server",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "portNumber": {
          "description": "Logical Port assignment",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "serialPortConfigType": {
      "type": "object",
      "properties": {
        "portNumber": {
          "description": "IP address of the interface server",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "baudRate": {
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        },
        "parity": {
          "type": "string",
          "enum": [
            "Odd",
            "Even"
          ]
        },
        "dataBits": {
          "type": "integer"
        },
        "stopBits": {
          "type": "integer"
        }
      }
    },
    "translationType": {
      "type": "object",
      "properties": {
        "guestNoLength": {
          "description": "Guest number length of a translation setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2
        },
        "guestMessageIdLength": {
          "description": "Guest message id length of a translation setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2
        },
        "groupNoLength": {
          "description": "Group number length of a translation setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2
        },
        "defaultCharge": {
          "description": "Default charge of a translation setup.",
          "type": "integer"
        },
        "configuation": {
          "description": "Translation configuration of a hotel interface.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/interfaceControlCfgType"
          }
        },
        "articles": {
          "description": "Translation article setup of a hotel interface.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/interfaceControlArticleType"
          }
        },
        "specifications": {
          "description": "Translation specifications setup of a hotel interface.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/interfaceControlSpecType"
          }
        },
        "languages": {
          "description": "Translation languages setup of a hotel interface.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/interfaceControlLangType"
          }
        }
      }
    },
    "interfaceControlCfgType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel Code of the hotel interface.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "logo": {
          "description": "Logo of the hotel interface.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "internalCode": {
          "description": "Internal code of a translation configuration setup.",
          "type": "integer"
        },
        "originCode": {
          "description": "Origin code of a translation configuration setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "merchantId": {
          "description": "Merchant Id of a translation configuration setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        }
      }
    },
    "interfaceControlArticleType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel Code of the hotel interface.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "logo": {
          "description": "Logo of the hotel interface.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "internalCode": {
          "description": "Internal code of a translation article setup.",
          "type": "integer"
        },
        "selector": {
          "description": "Selector of a translation article setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "articleNo": {
          "description": "Article Number of a translation article setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "description": {
          "description": "Description of a translation article setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        }
      }
    },
    "interfaceControlSpecType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel Code of the hotel interface.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "logo": {
          "description": "Logo of the hotel interface.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "internalCode": {
          "description": "Internal code of a translation specification setup.",
          "type": "integer"
        },
        "selector": {
          "description": "Selector of a translation specification setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "specification": {
          "description": "Specification of a translation specification setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "priority": {
          "description": "Priority of a translation specification setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "position": {
          "description": "Position of a translation specification setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        }
      }
    },
    "interfaceControlLangType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel Code of the hotel interface.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "logo": {
          "description": "Logo of the hotel interface.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "internalCode": {
          "description": "Internal code of a translation language setup.",
          "type": "integer"
        },
        "selector": {
          "description": "Selector of a translation language setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "languageCode": {
          "description": "Language code of a translation language setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        }
      }
    },
    "classOfServiceType": {
      "type": "object",
      "properties": {
        "cosMsgLmpRg": {
          "description": "",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "cosChkRg": {
          "description": "",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "cosMsgCmdRg": {
          "description": "",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "roomEquipCi": {
          "description": "",
          "type": "boolean"
        },
        "roomEquipCo": {
          "description": "",
          "type": "boolean"
        },
        "guestDataChangeCo": {
          "description": "",
          "type": "boolean"
        },
        "standardNameFormat": {
          "description": "Standard name format in the class of service.",
          "type": "string",
          "minLength": 0,
          "maxLength": 5
        },
        "definedNameFormat": {
          "description": "Defined name format in the class of service.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/definedNameFormatType"
          }
        },
        "resvInQueue": {
          "description": "Indicates whethe a message will be triggered when a room/reservation is placed on QUEUE",
          "type": "boolean"
        }
      }
    },
    "definedNameFormatType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel Code where the defined name format is associated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "definedFormatId": {
          "description": "ID of the defined name format.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "expressionTable": {
          "description": "Table from which the info will be retrieved.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "expression": {
          "description": "Expression of the defined name format It basically contains all formats that are being set.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "logo": {
          "description": "Logo of the hotel interface.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "importRoomsType": {
      "type": "object",
      "properties": {
        "requiresLineNumberSetup": {
          "description": "Indicator for Requires line number setup, from Import Rooms related information of a Hotel Interface.",
          "type": "boolean"
        },
        "virtualNumberSetup": {
          "description": "Indicator for Virtual number setup, from Import Rooms related information of a Hotel Interface.",
          "type": "boolean"
        },
        "ioLines": {
          "description": "Indicator for support of Input/Output Lines for Hotel Room Categories.",
          "type": "boolean"
        },
        "inXlatId": {
          "description": "Translation table for incoming messages.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "ouXlatId": {
          "description": "Translation table for outgoing messages.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "selectedRoomTypes": {
          "description": "Concatenated label of Hotel Room Categories for which SendToInterface flag should be set as true.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        }
      }
    },
    "workstationSetupType": {
      "type": "array",
      "description": "List of workstations of a hotel interface.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/interfaceWorkstationType"
      }
    },
    "interfaceWorkstationType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel Code of a workstation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "logo": {
          "description": "Logo of a workstation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "internalCode": {
          "description": "Internal code of a workstation.",
          "type": "integer"
        },
        "workstation": {
          "description": "Workstation of a hotel interface.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "deviceIp": {
          "description": "IP of a workstation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "location": {
          "description": "Location of a workstation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "type": {
          "description": "Type of a workstation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2
        },
        "deviceLocation": {
          "description": "Device Group / Area.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "postingInfoType": {
      "type": "object",
      "properties": {
        "referenceField": {
          "description": "Reference field of postings setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "chargeScaling": {
          "description": "Charge scaling of postings setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "zeroChargePostings": {
          "description": "Zero charge posting of postings setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "postings": {
          "description": "Postings of postings setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "postType": {
          "description": "Post type of postings setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "conversion": {
          "description": "Conversion of postings setup.",
          "type": "integer"
        },
        "reference": {
          "description": "Reference of postings setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "supplement": {
          "description": "Supplement of postings setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "overrideCreditLimit": {
          "description": "Override credit limit of postings setup.",
          "type": "boolean"
        },
        "noPostFlag": {
          "description": "No post flag of postings setup.",
          "type": "boolean"
        },
        "generatesTax": {
          "description": "IFC generate tax of postings setup.",
          "type": "boolean"
        },
        "dialedNumberMasking": {
          "description": "Type of number masking used for the dialed numbers in the particular interface.",
          "$ref": "#/definitions/maskDialNumberType"
        },
        "articleNoPrefix": {
          "description": "Article Prefix of postings setup.",
          "type": "boolean"
        }
      }
    },
    "maskDialNumberType": {
      "type": "string",
      "description": "Mask the dialled digits as per the room configuration.",
      "enum": [
        "NoMasking",
        "MaskLast2Digits",
        "MaskLast4Digits",
        "Mask4DigitsLeaveLast2Intact",
        "MaskAllExceptFirst2",
        "MaskAll",
        "MaskingPerRoom"
      ]
    },
    "interfaceCustomDataInfoType": {
      "type": "object",
      "description": "This type holds the custom data of a hotel interface.",
      "properties": {
        "exportAsXml": {
          "description": "Specifies whether the details have to be exported as XML. If true, then the details are exported as XML else details are exported as text.",
          "type": "boolean"
        },
        "includeDoorcardField": {
          "description": "Specifies whether the Doorcard field details have to be included in the XML Export. If true, Doorcard field details will be included in the XML Export else details will not be included. This field is available only when the Export as XML field is selected.",
          "type": "boolean"
        },
        "interfaceCustomDataDetails": {
          "description": "Collection of custom data details of a hotel interface.",
          "$ref": "#/definitions/interfaceCustomDataDetailsType"
        }
      }
    },
    "interfaceCustomDataDetailsType": {
      "type": "array",
      "description": "Collection of custom data details of a hotel interface.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/interfaceCustomDataDetailType"
      }
    },
    "interfaceCustomDataDetailType": {
      "type": "object",
      "description": "This gives information of custom detail of a hotel interface.",
      "properties": {
        "customDataField": {
          "description": "Specifies the type of data stored.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "customDataValue": {
          "description": "Specifies the actual data corresponding to each value in the field.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "interfaceExportDataInfoType": {
      "type": "object",
      "description": "This type holds the export data of a hotel interface.",
      "properties": {
        "interfaceExportDataDetails": {
          "description": "Collection which shows the manually selected columns for the export data of a hotel interface.",
          "$ref": "#/definitions/interfaceExportDataDetailsType"
        },
        "interfaceExportDataMandatoryDetails": {
          "description": "Collection which shows the mandatory columns for the export data of a hotel interface.",
          "$ref": "#/definitions/interfaceExportDataDetailsType"
        }
      }
    },
    "interfaceExportDataDetailsType": {
      "type": "array",
      "description": "Collection of export data details of a hotel interface.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/interfaceExportDataDetailType"
      }
    },
    "interfaceExportDataDetailType": {
      "type": "object",
      "description": "This gives information of export detail of a hotel interface.",
      "properties": {
        "sourceTableName": {
          "description": "Specifies the table where the event data is stored.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "columnName": {
          "description": "Specifies the column name found in the table.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "dataType": {
          "description": "Specifies the type of data in the column.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "dataLength": {
          "description": "Specifies the length of data in the column.",
          "type": "integer"
        },
        "xMLTagName": {
          "description": "Specifies the tag name found in the export.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "columnSelected": {
          "description": "Specifies whether the column is chosen to be included in the export.",
          "type": "boolean"
        }
      }
    },
    "transactionCodeInfoType": {
      "type": "object",
      "properties": {
        "allChargesCode": {
          "description": "All charges code of transaction code setup",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "miniBarCode": {
          "description": "Minibar charges code of transaction code setup",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "cashCreditCardPosting": {
          "description": "Cash or credit card posting of transaction code setup",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "subtotalPosting": {
          "description": "Subtotal posting of transaction code setup",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "differencePosting": {
          "description": "Difference posting of transaction code setup",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "calcTrxCodePosting": {
          "description": "Calculated transaction code posting of transaction code setup",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "numberOfDialedDigits": {
          "description": "Number of dialed digits transaction code setup",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "postingAccounts": {
          "description": "Postings information of transaction codes setup.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/postingAccountType"
          }
        },
        "itemizers": {
          "description": "Split information of transaction code setup.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/itemizerType"
          }
        },
        "transactionCodes": {
          "description": "Split information of transaction code setup.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/transactionCodeDetailType"
          }
        }
      }
    },
    "postingAccountType": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Internal ID to reference the records.",
          "type": "number"
        },
        "paymentMethod": {
          "description": "Payment method of posting accounts in transaction codes setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "account": {
          "description": "Account of posting accounts in transaction codes setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "accountDescription": {
          "description": "Account description of posting accounts in transaction codes setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "salesOutlet": {
          "description": "Sales outlet of posting accounts in transaction codes setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "transactionCode": {
          "description": "Transaction code of posting accounts in transaction codes setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of posting accounts in transaction codes setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "autoBalance": {
          "description": "Auto balance flag of postings setup.",
          "type": "boolean"
        }
      }
    },
    "itemizerType": {
      "type": "object",
      "properties": {
        "splitCode": {
          "description": "Split code of the itemizer setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "splitPost": {
          "description": "Split posting of the itemizer setup.",
          "type": "integer"
        },
        "splitText": {
          "description": "Split text of the itemizer setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "splitFactor": {
          "description": "Split factor of the itemizer setup.",
          "type": "integer"
        }
      }
    },
    "transactionCodeDetailType": {
      "type": "object",
      "properties": {
        "servingPeriod": {
          "description": "Serving period of transaction code setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "rowNum": {
          "description": "Row number of transaction code setup.",
          "type": "integer"
        },
        "revenueCenter": {
          "description": "Revenue center of transaction code setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "terminal": {
          "description": "Terminal of transaction code setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "paymentNum": {
          "description": "Payment number of transaction code setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "userId": {
          "description": "User id of transaction code setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "postRoute": {
          "description": "Post route of transaction code setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "dialedDigits": {
          "description": "Dialed digits of transaction code setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "lineType": {
          "description": "Line type of transaction code setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "code": {
          "description": "Code of transaction code setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "tipCode": {
          "description": "Tip code of transaction code setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "description": {
          "description": "Description of transaction code setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "itemizersShortInfo": {
          "description": "Itemizer short info of transaction code setup.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/itemizerShortInfoType"
          }
        }
      }
    },
    "itemizerShortInfoType": {
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the itemizer on a transaction code setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "itemizerName": {
          "description": "Itemizer name on a transaction code setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "itemNumber": {
          "description": "Itemizer number which is the split post on a transaction code setup.",
          "type": "integer"
        }
      }
    },
    "templateCustomNumberConfig": {
      "type": "object",
      "description": "Request object to create a new template custom number configuration.",
      "properties": {
        "customNumberConfiguration": {
          "description": "Custom number template configuration to be created.",
          "$ref": "#/definitions/customNumberTemplateConfigurationType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "customNumberTemplateConfigurationType": {
      "type": "object",
      "description": "Custom number configuration details.",
      "properties": {
        "code": {
          "description": "Custom number configuration code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "The description of the custom number configuration code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "area": {
          "description": "The area where this custom number will be used.",
          "$ref": "#/definitions/customNumberConfigurationAreaType"
        },
        "formula": {
          "description": "The formula to generate the custom number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "condition": {
          "description": "The condition to be met to generate and apply the custom number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "timeSpan": {
          "description": "The begin and end date of the custom number configuration.",
          "$ref": "#/definitions/timeSpanType"
        },
        "inActive": {
          "description": "Indicator that tells whether the configuration is active or not.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        }
      }
    },
    "templateCustomNumberConfigDetails": {
      "type": "object",
      "description": "Response object for fetching template custom number configurations.",
      "properties": {
        "customNumberConfigurationList": {
          "description": "Collection of template custom number configurations.",
          "$ref": "#/definitions/customNumberTemplateConfigurationListType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "customNumberTemplateConfigurationListType": {
      "type": "array",
      "description": "Details about template custom number configuration.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/customNumberTemplateConfigurationType"
      }
    },
    "trackItActionsDetails": {
      "type": "object",
      "description": "Response object for fetching Track it Actions.",
      "properties": {
        "trackItActions": {
          "description": "Collection of Track it Actions.",
          "$ref": "#/definitions/trackItActionsConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "trackItActionsConfigType": {
      "type": "array",
      "description": "Track It Action Collection element.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trackItActionConfigType"
      }
    },
    "trackItActionConfigType": {
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the Track It Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Track It Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "displaySequence": {
          "description": "Display Sequence.",
          "type": "number"
        },
        "hotelId": {
          "description": "Property to which the Track It Code is configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "trackItGroup": {
          "description": "Track it Group details for the Track it Code",
          "$ref": "#/definitions/trackItGroupType"
        },
        "inactive": {
          "description": "Indicates if the Track it Code is inactive.",
          "type": "boolean"
        },
        "status": {
          "description": "Status of the Track it Action.",
          "$ref": "#/definitions/trackItActionStatusType"
        }
      },
      "description": "Track It Action Information Type."
    },
    "trackItGroupType": {
      "type": "object",
      "properties": {
        "valet": {
          "description": "Indicates if the Track It belongs to the Valet Group.",
          "type": "boolean"
        },
        "parcel": {
          "description": "Indicates if the Track It belongs to the Parcel Group.",
          "type": "boolean"
        },
        "baggage": {
          "description": "Indicates if the Track It belongs to the Baggage Group.",
          "type": "boolean"
        },
        "lost": {
          "description": "Indicates if the Track It belongs to the Lost Group.",
          "type": "boolean"
        }
      }
    },
    "trackItActionStatusType": {
      "type": "string",
      "description": "Defined Values for Status of the Track it Action.",
      "enum": [
        "Open",
        "Closed"
      ]
    },
    "trackItActionsCriteria": {
      "type": "object",
      "description": "Request object for creating new Track it Actions.",
      "properties": {
        "trackItActions": {
          "description": "Track it Actions to be created.",
          "$ref": "#/definitions/trackItActionsConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "trackItActionsToBeChanged": {
      "type": "object",
      "description": "Request object for changing existing Track it Actions.",
      "properties": {
        "trackItActions": {
          "description": "Track it Actions to be changed.",
          "$ref": "#/definitions/trackItActionsConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "trackItLocationsDetails": {
      "type": "object",
      "description": "Response object for fetching Track it Locations.",
      "properties": {
        "trackItLocations": {
          "description": "Collection of Track it Locations.",
          "$ref": "#/definitions/trackItLocationsConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "trackItLocationsConfigType": {
      "type": "array",
      "description": "Track It Locations Collection element.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trackItLocationConfigType"
      }
    },
    "trackItLocationConfigType": {
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the Track It Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Track It Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "displaySequence": {
          "description": "Display Sequence.",
          "type": "number"
        },
        "hotelId": {
          "description": "Property to which the Track It Code is configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "trackItGroup": {
          "description": "Track it Group details for the Track it Code",
          "$ref": "#/definitions/trackItGroupType"
        },
        "inactive": {
          "description": "Indicates if the Track it Code is inactive.",
          "type": "boolean"
        }
      },
      "description": "Track It Location Information Type."
    },
    "trackItLocationsCriteria": {
      "type": "object",
      "description": "Request object for creating new Track it Locations.",
      "properties": {
        "trackItLocations": {
          "description": "Track it Locations to be created.",
          "$ref": "#/definitions/trackItLocationsConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "trackItLocationsToBeChanged": {
      "type": "object",
      "description": "Request object for changing existing Track it Locations.",
      "properties": {
        "trackItLocations": {
          "description": "Track it Locations to be changed.",
          "$ref": "#/definitions/trackItLocationsConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "trackItTypesDetails": {
      "type": "object",
      "description": "Response object for fetching Track it Types.",
      "properties": {
        "trackItTypes": {
          "description": "Collection of Track it Types.",
          "$ref": "#/definitions/trackItTypesConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "trackItTypesConfigType": {
      "type": "array",
      "description": "Track It Type Collection element.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trackItTypeConfigType"
      }
    },
    "trackItTypeConfigType": {
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the Track It Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Track It Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "displaySequence": {
          "description": "Display Sequence.",
          "type": "number"
        },
        "hotelId": {
          "description": "Property to which the Track It Code is configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "trackItGroup": {
          "description": "Track it Group details for the Track it Code",
          "$ref": "#/definitions/trackItGroupType"
        },
        "inactive": {
          "description": "Indicates if the Track it Code is inactive.",
          "type": "boolean"
        },
        "website": {
          "description": "Website associated with Track it type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "includePromptToSendMessage": {
          "description": "Indicator to send a message to the guest when a new trackit item is created.",
          "type": "boolean"
        },
        "messageCode": {
          "description": "Code of the Message to be sent.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      },
      "description": "Track It Type Information Type."
    },
    "trackItTypesCriteria": {
      "type": "object",
      "description": "Request object for creating new Track it Types.",
      "properties": {
        "trackItTypes": {
          "description": "Track it Types to be created.",
          "$ref": "#/definitions/trackItTypesConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "trackItTypesToBeChanged": {
      "type": "object",
      "description": "Request object for changing existing Track it Types.",
      "properties": {
        "trackItTypes": {
          "description": "Track it Types to be changed.",
          "$ref": "#/definitions/trackItTypesConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transactionCodeAccessRoles": {
      "type": "object",
      "properties": {
        "transactionAccessRoles": {
          "description": "Collection of User roles and their information",
          "$ref": "#/definitions/trxCodeAccessRolesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "trxCodeAccessRolesType": {
      "type": "array",
      "description": "List of Roles having access to set of transaction codes",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trxCodeAccessRoleType"
      }
    },
    "trxCodeAccessRoleType": {
      "type": "object",
      "description": "Role having access to set of transaction codes",
      "properties": {
        "hotel": {
          "description": "Transaction Codes associated with particular Hotel",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/hotelTrxCodesAccessType"
          }
        },
        "code": {
          "description": "Role code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "levelCode": {
          "description": "Role level code, for Chain Level code Level code will be Chain Code the role belongs to and for Hotel level role it will b the Hotel Code the role belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "level": {
          "description": "Role Level type. Only Property or Chain level roles are supported by this type.",
          "$ref": "#/definitions/roleLevelType"
        }
      }
    },
    "hotelTrxCodesAccessType": {
      "type": "object",
      "description": "Transaction Codes associated with particular Hotel",
      "properties": {
        "transactionCode": {
          "description": "Transaction Code and Description. Description is for information only and is used for fetch operation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeDescriptionType"
          }
        },
        "hotelId": {
          "description": "Hotel Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "roleLevelType": {
      "type": "string",
      "enum": [
        "Global",
        "Template",
        "Chain",
        "Brand",
        "Property"
      ]
    },
    "calculatedPosting": {
      "type": "object",
      "properties": {
        "result": {
          "description": "List of charges that will be posted against the transaction code based from the test criteria.",
          "$ref": "#/definitions/calculatePostingResult"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "calculatePostingResult": {
      "type": "object",
      "description": "List of charges that will be posted against the transaction code based from the test criteria.",
      "properties": {
        "charges": {
          "description": "Charges that will be posted based from the criteria defined.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/calculatePostingCharge"
          }
        },
        "totalAmount": {
          "description": "The full amount that would be posted.",
          "type": "number"
        }
      }
    },
    "calculatePostingCharge": {
      "type": "object",
      "description": "Corresponds to each charge that will be posted against the transaction code based from the test criteria.",
      "properties": {
        "hotelId": {
          "description": "Hotel code of the associated transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionCode": {
          "description": "The associated transaction code of the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "level": {
          "description": "Defines the level from which the transaction generates was created.",
          "$ref": "#/definitions/generateLevelType"
        },
        "amount": {
          "description": "The amount that will be posted against the transaction code.",
          "type": "number"
        },
        "formula": {
          "description": "The formula that is used to calculate the generates.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "bucket": {
          "description": "The amount that will be posted for each bucket.",
          "$ref": "#/definitions/postingBucket"
        },
        "sequence": {
          "description": "The order in which the charge will be posted. The base posting will always be 0 (zero) followed by generates associated in order of which they were created.",
          "type": "integer"
        },
        "basePosting": {
          "description": "Indicates whether it is the base posting.",
          "type": "boolean"
        }
      }
    },
    "postingBucket": {
      "type": "object",
      "description": "Holds the amount that will be stored in each bucket after posting.",
      "properties": {
        "bucket1": {
          "description": "Holds amount for sub-total 1.",
          "type": "number"
        },
        "bucket2": {
          "description": "Holds amount for sub-total 2.",
          "type": "number"
        },
        "bucket3": {
          "description": "Holds amount for sub-total 3.",
          "type": "number"
        }
      }
    },
    "hotelTransactionCode": {
      "type": "object",
      "properties": {
        "transactionCode": {
          "description": "Detailed information regarding transaction code.",
          "$ref": "#/definitions/hotelTransactionCodeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelTransactionCodeType": {
      "type": "object",
      "description": "Transaction Code configuration details.",
      "properties": {
        "classification": {
          "description": "Transaction Code classification details.",
          "$ref": "#/definitions/trxCodeClassificationType"
        },
        "description": {
          "description": "Transaction Code descriptions.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "paymentSetup": {
          "description": "Payment Transaction Code configuration details.",
          "$ref": "#/definitions/paymentTrxSetupType"
        },
        "trxSetup": {
          "description": "Transaction code setup/config details.",
          "$ref": "#/definitions/trxSetupType"
        },
        "adjustmentCode": {
          "description": "Transaction code to be used to make adjustments on the posting made using this transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "otaTaxType": {
          "description": "Open Travel Alliance(OTA) tax type for the given transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionAdjustments": {
          "description": "Combination of Adjustment Reason Code and Transaction Adjustment Code.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/transactionAdjustmentType"
          }
        },
        "serviceRecoveryAdjustmentCode": {
          "description": "Transaction code to be used to make service recovery adjustments on the posting made using this transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "amounts": {
          "description": "Default Amounts for the Transaction Codes.",
          "$ref": "#/definitions/trxCodeAmountsType"
        },
        "generatesSetup": {
          "description": "Transaction code's generates setup.",
          "$ref": "#/definitions/generatesSetupType"
        },
        "gLMapping": {
          "description": "Gl mapping for transaction codes specific to hotels like Hilton.",
          "$ref": "#/definitions/gLMappingType"
        },
        "associatedTransactionCodes": {
          "description": "Code and description of the standard transaction code associated to this comp transaction code.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeDescriptionType"
          }
        },
        "allowServiceRecovery": {
          "description": "Flag to identify if this transaction code already used as service recovery adjustment code.",
          "type": "boolean"
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "mappingCodes": {
          "description": "Mapping code and value attached to Transaction Code.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/exportMappingLinkedCodeType"
          }
        },
        "code": {
          "description": "Unique Transaction Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "compTransaction": {
          "description": "If true indicates this transaction codes is for Comp Accounting.",
          "type": "boolean"
        },
        "printTrxReceipt": {
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel's Transaction Code configuration detail.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "trxCodeClassificationType": {
      "type": "object",
      "description": "Transaction Code Classification details.",
      "properties": {
        "type": {
          "description": "Transaction Type.",
          "$ref": "#/definitions/cashieringTransactionTypeType"
        },
        "transactionType": {
          "description": "Transaction Code Type detail.",
          "type": "object",
          "properties": {
            "code": {
              "description": "Transaction Code Type.",
              "$ref": "#/definitions/transactionCodeTypeType"
            },
            "taxCode": {
              "description": "Tax Code if the transaction Code if it is of type Tax.",
              "type": "integer"
            }
          }
        },
        "group": {
          "description": "Group the transaction code belongs to..",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "subgroup": {
          "description": "Subgroup the transaction code belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "fiscalTransactionType": {
          "description": "Transaction code type for fiscal printing purposes.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        }
      }
    },
    "cashieringTransactionTypeType": {
      "type": "string",
      "description": "Wrapper Transaction Type.",
      "enum": [
        "Revenue",
        "Payment",
        "Wrapper"
      ]
    },
    "transactionCodeTypeType": {
      "type": "string",
      "description": "Other Charges Transaction.",
      "enum": [
        "Lodging",
        "FoodAndBeverage",
        "Telephone",
        "Minibar",
        "Tax",
        "NonRevenue",
        "Others"
      ]
    },
    "paymentTrxSetupType": {
      "type": "object",
      "description": "Payment Transaction Code setup details.",
      "properties": {
        "usage": {
          "description": "Payment Transaction Code usage information.",
          "$ref": "#/definitions/paymentTrxUsageType"
        },
        "card": {
          "description": "Card payment setup information.",
          "$ref": "#/definitions/cardPaymentTrxSetupType"
        },
        "iRS8300Reporting": {
          "description": "True indicates the Transaction Code payment will be reposted to IRS according to the rule specified by IRS.",
          "type": "boolean"
        },
        "roundingFactor": {
          "description": "True indicates the Transaction Code posting will have a rounding effect.",
          "type": "boolean"
        },
        "generateTaxInvoice": {
          "description": "Indicates if the Transaction Code payment will generate a Tax Invoice at the time of making a payment. Tax Invoices are used in Thailand.",
          "type": "boolean"
        },
        "paymentType": {
          "description": "Type of payment this transaction code represents.",
          "$ref": "#/definitions/paymentTrxCodeTypeType"
        }
      }
    },
    "paymentTrxUsageType": {
      "type": "object",
      "description": "Payment Transaction Code usage details.",
      "properties": {
        "aR": {
          "description": "True indicates the payment Transaction Code is used for AR payments.",
          "type": "boolean"
        },
        "cashier": {
          "description": "Indicates whether Profiles are shared across the Hotels within the chain or not.",
          "type": "boolean"
        },
        "comp": {
          "description": "True indicates the payment Transaction Code is used for Comp payments.",
          "type": "boolean"
        },
        "deposit": {
          "description": "True indicates the payment Transaction Code is used for deposits.",
          "type": "boolean"
        },
        "interHotelPayment": {
          "description": "True indicates the payment Transaction Code inter hotel payments.",
          "type": "boolean"
        },
        "interHotelDeposit": {
          "description": "True indicates the payment Transaction Code is used for inter hotel deposits.",
          "type": "boolean"
        }
      }
    },
    "cardPaymentTrxSetupType": {
      "type": "object",
      "description": "Card Payment Transaction Code configuration details.",
      "properties": {
        "processingType": {
          "description": "Type of processing for the payment.",
          "$ref": "#/definitions/cardPaymentProcessingType"
        },
        "accountReceivable": {
          "description": "AR account information to route the payments.",
          "$ref": "#/definitions/aRAccountRefType"
        },
        "commission": {
          "description": "Commission percentage on the payment.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "displayCode": {
          "description": "Display code of the payment Transaction Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 8
        },
        "interfaceCode": {
          "description": "Card Payment's internal interface code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "cardPaymentProcessingType": {
      "type": "string",
      "description": "Manual Processing.",
      "enum": [
        "Eft",
        "Manual"
      ]
    },
    "aRAccountRefType": {
      "type": "object",
      "description": "AR account Info.",
      "properties": {
        "name": {
          "description": "AR account name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "accountNo": {
          "description": "The Account Number for the Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "paymentTrxCodeTypeType": {
      "type": "string",
      "description": "Other Payment Type Transaction.",
      "enum": [
        "Cash",
        "Check",
        "CreditCard",
        "Others"
      ]
    },
    "trxSetupType": {
      "type": "object",
      "description": "Transaction Code setup details.",
      "properties": {
        "generatesType": {
          "description": "Short Summary information of the Chain and it's Hubs and Hotels.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "taxInclusive": {
          "description": "True indicates that the tax is inclusive in the generate.",
          "type": "boolean"
        },
        "revenue": {
          "description": "True indicates the Transaction Code is to be considered as revenue to the Hotel.",
          "type": "boolean"
        },
        "manualPosting": {
          "description": "True indicates the Transaction Code is allowed to be posted manually.",
          "type": "boolean"
        },
        "useForPaidout": {
          "description": "True indicates the Transaction Code is used for Paid outs.",
          "type": "boolean"
        },
        "redeemMembershipPoints": {
          "description": "This flag indicates that the transaction is eligible to redeem points (guest can use their points to pay for transactions posted with this transaction code)",
          "type": "boolean"
        },
        "includeInDepositRule": {
          "description": "True indicates the Transaction Code posting will be included in Deposit/Cencallation rule calculations.",
          "type": "boolean"
        },
        "depositPostingOnly": {
          "description": "True indicates the Transaction Code is used for deposit postings only.",
          "type": "boolean"
        },
        "postingRule": {
          "description": "Deposit posting associated with the transaction code.",
          "type": "boolean"
        },
        "depositType": {
          "description": "Represents the type of deposit with possible values of \"RECEIPT\" or \"FOLIO\".",
          "$ref": "#/definitions/depositTypeType"
        },
        "checkNoRequired": {
          "description": "True indicates the Transaction Code requires the Check Number for posting.",
          "type": "boolean"
        },
        "interHotelSales": {
          "description": "True indicates the Transaction Code is used for cross posting across the hotels/.",
          "type": "boolean"
        },
        "postCovers": {
          "description": "True indicates the Transaction Code is used to post covers.",
          "type": "boolean"
        },
        "nonTaxable": {
          "description": "True indicates the Transaction Code is non taxable.",
          "type": "boolean"
        },
        "inactive": {
          "description": "True indicates the Transaction Code is inactive.",
          "type": "boolean"
        },
        "ownershipStatus": {
          "description": "Protected by the Property or Corporate level",
          "$ref": "#/definitions/trxOwnershipType"
        },
        "serviceType": {
          "description": "Service Type for the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "accountingCode": {
          "description": "Accounting Code for the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "quantityCode": {
          "description": "Quantity Code for the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "earnMembershipPoints": {
          "description": "This flag indicates that the transaction is eligible to earn points (guest can earn points on the revenue posted to this transaction code)",
          "type": "boolean"
        }
      }
    },
    "depositTypeType": {
      "type": "string",
      "description": "Represents the Folio Deposit Type.",
      "enum": [
        "Receipts",
        "Folios"
      ]
    },
    "trxOwnershipType": {
      "type": "string",
      "description": "Protected by the Property level",
      "enum": [
        "Corporate",
        "Property"
      ]
    },
    "transactionAdjustmentType": {
      "type": "object",
      "description": "Combination of Adjustment Reason Code and Transaction Adjustment Code.",
      "properties": {
        "adjustmentReasonCode": {
          "description": "Adjustment reason Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "adjustmentTransactionCode": {
          "description": "Adjustment Transaction Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "trxCodeAmountsType": {
      "type": "object",
      "description": "Transaction Code's default amount details.",
      "properties": {
        "defaultPrice": {
          "description": "Default price of the Transaction Code.",
          "type": "number"
        },
        "minAmount": {
          "description": "Minimum amount to be posted on this Transaction Code.",
          "type": "number"
        },
        "maxAmount": {
          "description": "Maximum Amount to be posted on this Transaction Code.",
          "type": "number"
        },
        "currency": {
          "description": "Default currency code for the amounts.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "generatesSetupType": {
      "type": "object",
      "description": "Defines the Generates Setup and its Calculation Rules.",
      "properties": {
        "addBaseAmtTo": {
          "description": "Defines the buckets the base or posting amount will be added to.",
          "$ref": "#/definitions/generateCalculationBucketsType"
        },
        "generates": {
          "description": "Defines the Generates and its Calculation Rules.",
          "$ref": "#/definitions/generatesType"
        }
      }
    },
    "gLMappingType": {
      "type": "object",
      "description": "Gl mapping for transaction codes specific to hotels like Hilton.",
      "properties": {
        "itemId": {
          "description": "Hilton Department Group Item Id",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "departmentCode": {
          "description": "Hilton Department Group Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "accountCode": {
          "description": "Hilton GL Account code Description",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "accountDescription": {
          "description": "Hilton GL Account code Description",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "currencyCode": {
          "description": "Hilton GL Account Currency Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "statCode": {
          "description": "Hilton GL Account StatCode",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "productCode": {
          "description": "Hilton Product Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "chargeCode": {
          "description": "Hilton GL Charge Category Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "accountingCategory": {
          "description": "Hilton Account Category Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "exportMappingLinkedCodeType": {
      "type": "object",
      "description": "Details of linked code.",
      "properties": {
        "linkedCode": {
          "description": "Linked code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "exportMappingId": {
          "description": "Mapping id associated with linked code.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "exportMappingCode": {
          "description": "Mapping code attached to linked code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "defaultMappedValue": {
          "description": "Default value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "mappedValue": {
          "description": "Linked code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "mappingTypeDescription": {
          "description": "Description of the export mapping type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "mappingCodeDescription": {
          "description": "Description of the export mapping code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "lovName": {
          "description": "Name of the LOV group to be used.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "transactionGroup": {
      "type": "object",
      "properties": {
        "transactionGroup": {
          "description": "Detailed transaction group configuration.",
          "$ref": "#/definitions/hotelTransactionGroupType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelTransactionGroupType": {
      "type": "object",
      "description": "Transaction Group configuration information.",
      "properties": {
        "description": {
          "description": "Description of the Transaction Group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "sequence": {
          "description": "Display sequence for the code type.",
          "type": "integer"
        },
        "code": {
          "description": "Transaction Group Configuration Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "type": {
          "description": "Transaction type to which the corresponding transaction group belongs.",
          "$ref": "#/definitions/cashieringTransactionTypeType"
        },
        "generatesSetup": {
          "description": "Transaction group's generates setup.",
          "$ref": "#/definitions/generatesSetupType"
        },
        "generatesAvailable": {
          "description": "Flag to determine whether generates are available or not",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel Code where the Transaction Group is configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "hotelTransactionSubgroup": {
      "type": "object",
      "properties": {
        "transactionSubgroup": {
          "description": "Detailed information regarding transaction subgroup.",
          "$ref": "#/definitions/hotelTransactionSubgroupType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelTransactionSubgroupType": {
      "type": "object",
      "description": "Transaction Subgroup configuration Information.",
      "properties": {
        "description": {
          "description": "Description of the Transaction Subgroup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "sequence": {
          "description": "Display sequence for the code type.",
          "type": "integer"
        },
        "groupDescription": {
          "description": "Description of the Transaction Group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "code": {
          "description": "Transaction Subroup Configuration Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "group": {
          "description": "Transaction Group Configuration Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "newGroup": {
          "description": "Use this attribute to update the existing group during change operation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "type": {
          "description": "Transaction type to which the corresponding transaction group belongs. This is an information only attribute.",
          "$ref": "#/definitions/cashieringTransactionTypeType"
        },
        "generatesSetup": {
          "description": "Transaction subgroup's generates setup.",
          "$ref": "#/definitions/generatesSetupType"
        },
        "generatesAvailable": {
          "description": "Flag to determine whether generates are available or not",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel Code where the Transaction Subgroup is configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "customChargeExemptionsConfigCopy": {
      "type": "object",
      "properties": {
        "customChargeExemptionsConfigCopy": {
          "type": "array",
          "description": "List of the Custom Charge Exemptions to be copied.",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/copyCustomChargeExemptionConfigType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyCustomChargeExemptionConfigType": {
      "type": "object",
      "description": "Information needed to copy Custom Charge Exemption from one property to the other.",
      "properties": {
        "targetHotelCode": {
          "description": "Property to which Custom Charge Exemptions to be copied to.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "exemptionCodes": {
          "description": "Custom Charge Exemption to be copied.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "sourceHotelCode": {
          "description": "Property from which Custom Charge Exemptions to be copied from.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "fiscalFolioParametersCopy": {
      "type": "object",
      "description": "Request object for copying Fiscal Folio Parameters to other hotel code(s).",
      "properties": {
        "fiscalFolioParameters": {
          "description": "List of the Fiscal Folio Parameters to be copied to other hotel code(s).",
          "type": "array",
          "items": {
            "$ref": "#/definitions/copyFiscalFolioParametersType"
          }
        },
        "fiscalFolioParameter": {
          "description": "Fiscal Folio Parameter Configurations to be copied.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/genericHotelCodeCodeType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyFiscalFolioParametersType": {
      "type": "object",
      "description": "Copy instructions for Fiscal Folio Parameters.",
      "properties": {
        "sourceHotelCode": {
          "description": "Source hotel code from where Fiscal Folio Parameter(s) have to be copied.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "copyFiscalFolioParametersInfo": {
          "description": "Provides information about the target hotel code where the source Fiscal Folio Parameter will be copied to, what the Fiscal Folio Parameter will be named under the target hotel code and the description of the Fiscal Folio Parameter under the target hotel code.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/copyFiscalFolioParametersInfoType"
          }
        }
      }
    },
    "copyFiscalFolioParametersInfoType": {
      "type": "object",
      "description": "The type gives details of the source Fiscal Folio Parameter to be copied along with information of the target where the Fiscal Folio Parameter is being copied. Details include source code, hotel code, description, Internal, value with which the Fiscal Folio Parameter will be copied under the target hotel code.",
      "properties": {
        "sourceCode": {
          "description": "Source Fiscal Folio Parameter to be copied.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "targetHotelCode": {
          "description": "Target hotel code where the Fiscal Folio Parameter will be copied to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "copyAs": {
          "description": "The code and description to be used for fiscal folio parameter being copied under the target hotel code.",
          "$ref": "#/definitions/codeDescriptionType"
        }
      }
    },
    "genericHotelCodeCodeType": {
      "type": "object",
      "description": "Generic Type to specify unique/primary id for the code. mostly used for Hotel level configuration codes removal request.",
      "properties": {
        "hotelId": {
          "description": "Hotel where the code is configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Configuration code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "copyTrackItActions": {
      "type": "object",
      "properties": {
        "trackItActions": {
          "type": "array",
          "description": "List of Track it Actions to be copied.",
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyTrackItLocations": {
      "type": "object",
      "properties": {
        "trackItLocations": {
          "type": "array",
          "description": "List of Track it Locations to be copied.",
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyTrackItTypes": {
      "type": "object",
      "properties": {
        "trackItTypes": {
          "type": "array",
          "description": "List of Track it Types to be copied.",
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "noShowPostingRulesEdit": {
      "type": "object",
      "properties": {
        "noShowPostingRules": {
          "description": "No Show Posting Rule Configurations to be changed.",
          "$ref": "#/definitions/noShowPostingRulesEditType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "noShowPostingRulesEditType": {
      "type": "array",
      "description": "Contains new rules along with associated old rules to edit.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/noShowPostingRuleEditType"
      }
    },
    "noShowPostingRuleEditType": {
      "type": "object",
      "description": "Provides information about No Show Posting Rule Configuration.",
      "properties": {
        "reservationType": {
          "description": "Type of the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceCode": {
          "description": "Source code of the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "postingRule": {
          "description": "Posting Rule to be selected.",
          "$ref": "#/definitions/postingRuleType"
        },
        "hotelId": {
          "description": "Indicates for which hotel this posting rule apply to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "newRule": {
          "description": "New rule values for reservation type, source code and posting rule.",
          "$ref": "#/definitions/noShowPostingRuleType"
        }
      }
    },
    "postingRuleType": {
      "type": "string",
      "description": "Simple Type for Posting Rule Types.",
      "enum": [
        "AllNights",
        "DepositOnly",
        "FirstNight"
      ]
    },
    "noShowPostingRuleType": {
      "type": "object",
      "description": "Provides information about No Show Posting Rule Configuration.",
      "properties": {
        "reservationType": {
          "description": "Type of the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceCode": {
          "description": "Source code of the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "postingRule": {
          "description": "Posting Rule to be selected.",
          "$ref": "#/definitions/postingRuleType"
        }
      }
    },
    "noShowPostingRules": {
      "type": "object",
      "properties": {
        "noShowPostingRules": {
          "description": "Collection of No Show Posting Rule Configurations.",
          "$ref": "#/definitions/hotelNoShowPostingRulesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelNoShowPostingRulesType": {
      "type": "array",
      "description": "Holds No Show Posting Rules Configuration details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelNoShowPostingRuleType"
      }
    },
    "hotelNoShowPostingRuleType": {
      "type": "object",
      "description": "Provides information about No Show Posting Rule Configuration.",
      "properties": {
        "reservationType": {
          "description": "Type of the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceCode": {
          "description": "Source code of the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "postingRule": {
          "description": "Posting Rule to be selected.",
          "$ref": "#/definitions/postingRuleType"
        },
        "hotelId": {
          "description": "Indicates for which hotel this posting rule apply to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "numberDescriptions": {
      "type": "object",
      "properties": {
        "numberDescriptions": {
          "description": "Collection of Numbers and Descriptions",
          "$ref": "#/definitions/numberDescriptionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "numberDescriptionsType": {
      "type": "array",
      "description": "Individual number and description.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/numberDescriptionType"
      }
    },
    "numberDescriptionType": {
      "type": "object",
      "description": "Indicates type definition for Numbers.",
      "properties": {
        "numberCode": {
          "description": "Indicates code for a number",
          "$ref": "#/definitions/numberCodeType"
        },
        "description": {
          "description": "Indicates Description text for a number",
          "$ref": "#/definitions/translationTextType4000"
        }
      }
    },
    "numberCodeType": {
      "type": "string",
      "description": "Used for Number specific codes for OPERA tables. Possible values of this pattern are 1, 10, 17, THOUSAND, BILLION, etc.",
      "minLength": 0,
      "maxLength": 200
    },
    "translationTextType4000": {
      "type": "object",
      "description": "Contains Multiple translated texts and language codes.",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 4000.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "operaControlSequences": {
      "type": "object",
      "properties": {
        "controlSequences": {
          "description": "Collection of Opera Control Sequence details.",
          "$ref": "#/definitions/controlSequencesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "controlSequencesType": {
      "type": "array",
      "description": "List of Control Sequence details",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/controlSequenceType"
      }
    },
    "controlSequenceType": {
      "type": "object",
      "description": "Provides information about the OPERA Control Sequence",
      "properties": {
        "hotelId": {
          "description": "Control Sequence code associated with Hotel",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "controlCode": {
          "description": "Identifier of Opera Control Sequence",
          "$ref": "#/definitions/controlSequenceCodeType"
        },
        "folioType": {
          "description": "Opera Control Sequence associated with folio",
          "$ref": "#/definitions/folioCodeDescriptionType"
        },
        "minimum": {
          "description": "Minimum value of Opera Control Sequence",
          "type": "number"
        },
        "maximum": {
          "description": "Maximum value of Opera Control Sequence",
          "type": "number"
        },
        "countryCode": {
          "description": "Opera Control Sequence belongs to country",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sequenceValue": {
          "description": "Current Sequence Value for the OPERA Sequence",
          "type": "number"
        }
      }
    },
    "controlSequenceCodeType": {
      "type": "string",
      "description": "Indicates control sequences used for bills. Eg. CREDIT_BILL, FATTURA etc.",
      "enum": [
        "AcknowledgeReceipt",
        "Statement",
        "Folio",
        "OfficialReceipt",
        "Bill",
        "ARInvoice",
        "SupportingDocument",
        "TaxRegNo",
        "InternalPOSAccount",
        "InternalPOSAccountCredit",
        "ARPayment"
      ]
    },
    "packageArrangementCodes": {
      "type": "object",
      "properties": {
        "packageArrangementCodes": {
          "description": "Collection of package arrangement codes.",
          "$ref": "#/definitions/packageArrangementCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "packageArrangementCodesType": {
      "type": "array",
      "description": "Details for package arrangement codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/packageArrangementCodeType"
      }
    },
    "packageArrangementCodeType": {
      "type": "object",
      "description": "Generic Type to specify unique/primary id for the code. mostly used for Hotel level configuration codes removal request.",
      "properties": {
        "hotelId": {
          "description": "Hotel where the code is configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Configuration code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "arrangementId": {
          "description": "Primay key of arrangement codes",
          "type": "number"
        },
        "description": {
          "description": "Description of the Folio Group Code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "taxTypeCode": {
          "description": "information about the tax type code linked to the folio arrangment Code.",
          "type": "string"
        },
        "revenue": {
          "description": "specify whether the arrangement postings are classed as revenue.",
          "type": "boolean"
        },
        "inactive": {
          "description": "Represents whether the package arrangement code is inactive or not",
          "type": "boolean"
        }
      }
    },
    "packageArrangementCodesCopy": {
      "type": "object",
      "properties": {
        "packageArrangementCode": {
          "type": "array",
          "description": "List of the package arrangement codes to be copied.",
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "prepaidCardDetails": {
      "type": "object",
      "description": "Response for fetch Prepaid card operation",
      "properties": {
        "prepaidCardDetails": {
          "description": "Prepaid Card details type.",
          "$ref": "#/definitions/prepaidCardInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "prepaidCardInfoType": {
      "type": "object",
      "description": "Detailed information about the prepaid card.",
      "properties": {
        "hotelId": {
          "description": "Hotel context for the prepaid card.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "The reservation name id where the transaction is associated.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "cardNo": {
          "description": "Prepaid card number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "cardNumberMasked": {
          "description": "Masked Prepaid card / account number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "interfaceId": {
          "description": "The unique ID for the Interface.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "initialLoadDate": {
          "description": "Initial Load Date of the prepaid card.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "issueDate": {
          "description": "Issue Date of the prepaid card.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "validUntil": {
          "description": "Validity of the prepaid card amount.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expiryDate": {
          "description": "Expiry Date of the prepaid card.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "initialCredit": {
          "description": "Initial Credit of the prepaid card.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalDebit": {
          "description": "Total Debt of the prepaid card.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalCredit": {
          "description": "Total Credit of the prepaid card.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Balance of the prepaid card.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "availableCashoutAmount": {
          "description": "Available cashout of the prepaid card.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "reservedAmount": {
          "description": "Reserved Amount of the prepaid card.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "prepaidCardTransactions": {
          "description": "List of prepaid card transactions.",
          "$ref": "#/definitions/prepaidCardTransactionsType"
        },
        "vendorTransactionsActive": {
          "description": "Indicate if vendor transactions are included on the transactions list.",
          "type": "boolean"
        },
        "operaTransactionsActive": {
          "description": "Indicate if opera transactions are included on the transactions list.",
          "type": "boolean"
        }
      }
    },
    "prepaidCardTransactionsType": {
      "type": "array",
      "description": "Prepaid card transaction details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/prepaidCardTransactionInfoType"
      }
    },
    "prepaidCardTransactionInfoType": {
      "type": "object",
      "description": "Prepaid Card Transactions",
      "properties": {
        "amount": {
          "description": "Prepaid card transaction amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "type": {
          "description": "Prepaid card transaction type.",
          "$ref": "#/definitions/prepaidCardTrxTypeType"
        },
        "date": {
          "description": "Prepaid card transaction date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionNo": {
          "description": "Opera transaction number.",
          "type": "integer"
        },
        "vendorTransactionNo": {
          "description": "Vendor transaction number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "profileId": {
          "description": "The guest name id associated to the card.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "source": {
          "description": "Prepaid card transaction source.",
          "$ref": "#/definitions/prepaidCardTransactionSourceType"
        },
        "cancellable": {
          "description": "Indicate if the transaction is cancellable or not.",
          "type": "boolean"
        }
      }
    },
    "prepaidCardTrxTypeType": {
      "type": "string",
      "description": "Reload transaction.",
      "enum": [
        "Activate",
        "Cancel",
        "Cashout",
        "Inquiry",
        "Issue",
        "Redeem",
        "Reload"
      ]
    },
    "prepaidCardTransactionSourceType": {
      "type": "string",
      "description": "Vendor transaction source type.",
      "enum": [
        "Opera",
        "Vendor"
      ]
    },
    "prepaidCardBalanceDetails": {
      "type": "object",
      "description": "Response for fetch Prepaid card balance operation",
      "properties": {
        "prepaidCardDetails": {
          "description": "Prepaid Card balance details type.",
          "$ref": "#/definitions/prepaidCardInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "prepaidCards": {
      "type": "object",
      "properties": {
        "prepaidCards": {
          "description": "Prepaid Card details type.",
          "$ref": "#/definitions/prepaidCardsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "prepaidCardsType": {
      "type": "array",
      "description": "Holds fixed charge detail.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/prepaidCardType"
      }
    },
    "prepaidCardType": {
      "type": "object",
      "description": "Holds fixed charge information.",
      "properties": {
        "hotelId": {
          "description": "Hotel context for the Reservations.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "The unique ID of the reservation to which this record applies.",
          "$ref": "#/definitions/reservationId"
        },
        "name": {
          "description": "Family name, last name or Company Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "firstName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "profileId": {
          "description": "Card / Account holder name ID",
          "$ref": "#/definitions/profileId"
        },
        "cardNo": {
          "description": "Prepaid card / account number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "cardNumberMasked": {
          "description": "Masked Prepaid card / account number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "amount": {
          "description": "Prepaid Card Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "pinCode": {
          "description": "Prepaid card pin code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "interfaceId": {
          "description": "The unique ID for the Interface.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "cardDetails": {
          "description": "Prepaid Card details from vendor.",
          "$ref": "#/definitions/prepaidCardDetailsType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "giftCard": {
          "description": "Indicates a gift card type.",
          "type": "boolean"
        }
      }
    },
    "prepaidCardDetailsType": {
      "type": "object",
      "description": "Prepaid Card Details.",
      "properties": {
        "initialLoadDate": {
          "description": "Holds fixed charge detail.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "activateDate": {
          "description": "Holds fixed charge detail.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "initialCreditTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "creditTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "debitTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "reservedTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balanceTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "validUntilDate": {
          "description": "Holds fixed charge detail.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expiredDate": {
          "description": "Holds fixed charge detail.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactions": {
          "description": "Holds fixed charge detail.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/prepaidCardTransactionType"
          }
        }
      }
    },
    "prepaidCardTransactionType": {
      "type": "object",
      "description": "Prepaid Card transaction.",
      "properties": {
        "transactionType": {
          "description": "Transaction type enumeration.",
          "$ref": "#/definitions/prepaidCardTrxTypeType"
        },
        "transactionDate": {
          "description": "Transaction number of the Prepaid card transaction.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionNo": {
          "description": "Transaction number of the Prepaid card transaction.",
          "type": "number"
        },
        "amount": {
          "description": "Prepaid Card Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "revenueBucketCodes": {
      "type": "object",
      "properties": {
        "revenueBucketCodes": {
          "description": "Collection of Revenue Bucket Codes configurations.",
          "$ref": "#/definitions/revenueBucketCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "revenueBucketCodesType": {
      "type": "array",
      "description": "Details for Revenue Bucket codes along with associated transaction codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/revenueBucketCodeType"
      }
    },
    "revenueBucketCodeType": {
      "type": "object",
      "description": "This gives detailed information about a trx code arrangement.",
      "properties": {
        "description": {
          "description": "Description of the trx code arrangement code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "transactionCodes": {
          "description": "Collection of transaction codes which form the trx code arrangement.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "code": {
          "description": "Code is used to identify a trx code arrangement.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Identifies the hotel code for which the trx code arrangement is specified.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "revenueBucketType": {
          "description": "This holds Revenue Bucket Type",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "pointsEligible": {
          "description": "Bucket is eligible for membership points",
          "type": "boolean"
        },
        "bucketValue": {
          "description": "Stores the default value for the arrangement code for revenue buckets in order to group transaction codes.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "bucketType": {
          "description": "Flag to identify Fiscal related bucket types.",
          "$ref": "#/definitions/bucketTypeType"
        }
      }
    },
    "trxCodesInfoType": {
      "type": "array",
      "description": "List of Transaction codes info.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trxInfoType"
      }
    },
    "bucketTypeType": {
      "type": "string",
      "description": "Fiscal Bucket Type.",
      "enum": [
        "Default",
        "Fiscal"
      ]
    },
    "revenueBucketCodesCopy": {
      "type": "object",
      "properties": {
        "revenueBucketCodes": {
          "description": "List of the Revenue Bucket Codes to be copied to hotel code(s)",
          "$ref": "#/definitions/configCopyRevenueBucketCodeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "configCopyRevenueBucketCodeType": {
      "type": "object",
      "description": "Copy instructions for copying Revenue Bucket Codes to hotel code(s)",
      "properties": {
        "copyCodes": {
          "description": "This holds a List of copy codes",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        },
        "revenueBucketType": {
          "description": "This holds a Revenue Bucket Type",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        }
      }
    },
    "revenueBucketTypes": {
      "type": "object",
      "properties": {
        "revenueBucketTypes": {
          "description": "Collection of Revenue Bucket Types configurations.",
          "$ref": "#/definitions/revenueBucketTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "revenueBucketTypesType": {
      "type": "array",
      "description": "Holds Revenue Bucket Type details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/revenueBucketTypeType"
      }
    },
    "revenueBucketTypeType": {
      "type": "object",
      "description": "Provides information about Revenue Bucket Types.",
      "properties": {
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Revenue Bucket Type Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Revenue Bucket Type Description",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "bucketType": {
          "description": "Flag to identify Fiscal related bucket types.",
          "$ref": "#/definitions/bucketTypeType"
        },
        "bucketTrxCodes": {
          "description": "Provides ability to configure same transaction code in multiple buckets.",
          "type": "boolean"
        }
      }
    },
    "revenueBucketTypesCopy": {
      "type": "object",
      "properties": {
        "revenueBucketTypes": {
          "type": "array",
          "description": "List of the Revenue Bucket Types to be copied.",
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "revenueTypeMapping": {
      "type": "object",
      "properties": {
        "revenueTypeMapping": {
          "description": "Revenue type mapping to be changed.",
          "$ref": "#/definitions/revenueTypeMappingType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "revenueTypeMappingType": {
      "type": "object",
      "description": "Type used for Revenue Type mapping.",
      "properties": {
        "revenueTypeMappingId": {
          "description": "Unique Identifier for Revenue Type Mapping.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "Hotel Code to which the Revenue Type Mapping belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "revenueType": {
          "description": "Provides information about the Revenue Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "eventType": {
          "description": "Provides information about the Event Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "space": {
          "description": "Provides information about the Space/Location for the Revenue Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionCode": {
          "description": "Transaction code for the Revenue Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cateringOnly": {
          "description": "Flag to indicate if the Revenue Type is used for catering or event only.",
          "$ref": "#/definitions/cateringOnlyType"
        },
        "serviceCharge": {
          "description": "Service Charge for the Revenue Type.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "serviceChargeTrxCode": {
          "description": "Service Charge for the Revenue Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "serviceChargeCalulationMethod": {
          "description": "Service Charge for the Revenue Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "cateringOnlyType": {
      "type": "string",
      "description": "For Catering and Event.",
      "enum": [
        "Yes",
        "No",
        "Both"
      ]
    },
    "revenueTypeMappingList": {
      "type": "object",
      "properties": {
        "revenueTypeMappingList": {
          "description": "Collection of Revenue Type mapping configurations.",
          "$ref": "#/definitions/revenueTypeMappingListType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "revenueTypeMappingListType": {
      "type": "array",
      "description": "Collection of multiple Revenue type mapping codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/revenueTypeMappingType"
      }
    },
    "revenueTypeMappingCopy": {
      "type": "object",
      "description": "Request object for Copying Revenue Type Mapping.",
      "properties": {
        "criteria": {
          "description": "Criteria for copying Revenue Type Mapping.",
          "$ref": "#/definitions/copyRevenueTypeMappingCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyRevenueTypeMappingCriteriaType": {
      "type": "array",
      "description": "Provides Revenue Type Mapping details that needs to be copied.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/copyRevenueTypeMappingListType"
      }
    },
    "copyRevenueTypeMappingListType": {
      "type": "object",
      "description": "Type used for Revenue Type mapping.",
      "properties": {
        "revenueTypeMappingId": {
          "description": "Unique Identifier for Revenue Type Mapping.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "Hotel Code to which the Revenue Type Mapping belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "revenueType": {
          "description": "Provides information about the Revenue Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "eventType": {
          "description": "Provides information about the Event Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "space": {
          "description": "Provides information about the Space/Location for the Revenue Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionCode": {
          "description": "Transaction code for the Revenue Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cateringOnly": {
          "description": "Flag to indicate if the Revenue Type is used for catering or event only.",
          "$ref": "#/definitions/cateringOnlyType"
        },
        "serviceCharge": {
          "description": "Service Charge for the Revenue Type.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "serviceChargeTrxCode": {
          "description": "Service Charge for the Revenue Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "serviceChargeCalulationMethod": {
          "description": "Service Charge for the Revenue Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "isEventType": {
          "description": "This flag will notify the service that transactional postings will not be returned.",
          "type": "boolean"
        },
        "isSpace": {
          "description": "This flag will notify the service that transactional postings will not be returned.",
          "type": "boolean"
        },
        "isCateringOnly": {
          "description": "This flag will notify the service that transactional postings will not be returned.",
          "type": "boolean"
        },
        "eventList": {
          "description": "List of Event Types.",
          "$ref": "#/definitions/codeListType"
        },
        "spaceList": {
          "description": "List of the Space/Location.",
          "$ref": "#/definitions/codeListType"
        }
      }
    },
    "routingInstructions": {
      "type": "object",
      "properties": {
        "routingInstructions": {
          "description": "Collection of routing instructions fetched.",
          "$ref": "#/definitions/configRoutingInstructionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "configRoutingInstructionsType": {
      "type": "array",
      "description": "This type holds a collection of routing instructions.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/configRoutingInstructionType"
      }
    },
    "configRoutingInstructionType": {
      "type": "object",
      "description": "Routing limit can be one of the three: Covers, Limit, Percent. It is not mandatory to set value of either. This field is available when the Cashiering>Routing Limits application function is set to Y.",
      "properties": {
        "description": {
          "description": "Description of the trx code arrangement code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "transactionCodes": {
          "description": "Collection of transaction codes which form the trx code arrangement.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "code": {
          "description": "Code is used to identify a trx code arrangement.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Identifies the hotel code for which the trx code arrangement is specified.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "covers": {
          "description": "Number of covers for this routing instruction. Null means no value has been specified.",
          "type": "number"
        },
        "limit": {
          "description": "Allowable credit amount for this routing instruction. Null means no value has been specified.",
          "type": "number"
        },
        "percent": {
          "description": "The routing limit percentage allowed for this routing instruction. Null means no value has been specified.",
          "type": "number"
        },
        "daysOfWeek": {
          "description": "The selected days of the week indicate the days which will be selected on the Routing Instructions screen when this routing code is chosen for the routing instructions.",
          "$ref": "#/definitions/timeSpanDaysOfWeekType"
        },
        "daily": {
          "description": "Signifies whether a separate routing instruction has to be generated for each day of the stay.",
          "type": "boolean"
        },
        "inheritAuthRateCode": {
          "description": "Reservation to inherit Rate Code from Authorizer.",
          "type": "boolean"
        },
        "compAccounting": {
          "description": "Determines if this is a comp routing code or a routing code.",
          "type": "boolean"
        }
      }
    },
    "timeSpanDaysOfWeekType": {
      "type": "object",
      "description": "Container for Time span with days of week.",
      "properties": {
        "timeSpan": {
          "$ref": "#/definitions/timeSpanType"
        },
        "sunday": {
          "type": "boolean"
        },
        "monday": {
          "type": "boolean"
        },
        "tuesday": {
          "type": "boolean"
        },
        "wednesday": {
          "type": "boolean"
        },
        "thursday": {
          "type": "boolean"
        },
        "friday": {
          "type": "boolean"
        },
        "saturday": {
          "type": "boolean"
        }
      }
    },
    "routingInstructionsCopy": {
      "type": "object",
      "properties": {
        "routingInstructions": {
          "type": "array",
          "description": "List of the routing instructions to be copied to hotel code(s).",
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "applicationSecureSetting": {
      "type": "object",
      "properties": {
        "settings": {
          "description": "Contains a single application setting to update.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationSecureSettingType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "applicationSecureSettingType": {
      "type": "object",
      "description": "Internal settings that is mainly used to get a secure information on the type.",
      "properties": {
        "name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "levelType": {
          "$ref": "#/definitions/applicationSettingLevelType"
        },
        "levelCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "securedValue": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "applicationSettingLevelType": {
      "type": "string",
      "enum": [
        "Global",
        "Hotel",
        "Cro"
      ]
    },
    "stopProcessingReasons": {
      "type": "object",
      "description": "Response object for fetching Stop Processing Reason.",
      "properties": {
        "stopProcessingReasons": {
          "description": "Collection of Stop Processing Reasons.",
          "$ref": "#/definitions/stopProcessingReasonsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "stopProcessingReasonsType": {
      "type": "array",
      "description": "List of the Stop Processing Reasons to be configured or fetched",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/stopProcessingReasonType"
      }
    },
    "stopProcessingReasonType": {
      "type": "object",
      "description": "Details for Stop Processing Reason.",
      "properties": {
        "code": {
          "description": "Code is used to identify a Stop Processing Reason.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Stop Processing Reason.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "displaySequence": {
          "description": "Stop Processing Reason display sequence Number.",
          "type": "number"
        }
      }
    },
    "taxBrackets": {
      "type": "object",
      "properties": {
        "taxBrackets": {
          "description": "Collection containing information of tax brackets.",
          "$ref": "#/definitions/taxBracketsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "taxBracketsType": {
      "type": "array",
      "description": "Details used for storing information about a tax bracket.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/taxBracketType"
      }
    },
    "taxBracketType": {
      "type": "object",
      "description": "This gives information for uniquely identifying a tax bracket detail.",
      "properties": {
        "hotelId": {
          "description": "Hotel Code where tax bracket belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "taxPercentage": {
          "description": "Tax Percentage for which this Tax Bracket applies.",
          "type": "number"
        },
        "description": {
          "description": "Description of the Tax Bracket.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "threshold": {
          "description": "The threshold(max) amount for which Tax Brackets are defined for this percentage.",
          "type": "number"
        },
        "taxBracketAmounts": {
          "description": "List of tax bracket amount details.",
          "$ref": "#/definitions/taxBracketAmountsType"
        }
      }
    },
    "taxBracketAmountsType": {
      "type": "array",
      "description": "Details used for storing information about a tax bracket amount.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/taxBracketAmountType"
      }
    },
    "taxBracketAmountType": {
      "type": "object",
      "description": "Details used for storing information about a tax bracket amount.",
      "properties": {
        "startAmount": {
          "description": "Bracket Start amount for this tax. If the net amount falls within the Bracket Start and End amount, the tax defined is applied as the tax amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "endAmount": {
          "description": "Bracket End amount for this tax. If the net amount falls within the Bracket Start and End amount, the tax defined is applied as the tax amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "taxAmount": {
          "description": "Tax amount which should be applied.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "taxBracketsCopy": {
      "type": "object",
      "properties": {
        "copyInstructions": {
          "description": "List of the Tax Brackets details to be copied to hotel(s).",
          "$ref": "#/definitions/copyConfigurationCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyConfigurationCodesType": {
      "type": "array",
      "description": "Information needed to copy configuration code from one property to the other.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/copyConfigurationCodeType"
      }
    },
    "taxCategoryCodesDetails": {
      "type": "object",
      "description": "Response object for fetching Tax Category Codes.",
      "properties": {
        "taxCategoryCodes": {
          "description": "Collection of Tax Category Codes.",
          "$ref": "#/definitions/taxCategoryCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "taxCategoryCodesType": {
      "type": "array",
      "description": "List of Tax Category Codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/taxCategoryCodeType"
      }
    },
    "taxCategoryCodeType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "taxCategoryCodesCriteria": {
      "type": "object",
      "description": "Request object for creating Tax Category Codes.",
      "properties": {
        "taxCategoryCodes": {
          "description": "Tax Category Codesto be created.",
          "$ref": "#/definitions/taxCategoryCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "taxCategoryCodesToBeChanged": {
      "type": "object",
      "description": "Request object for changing Tax Category Codes.",
      "properties": {
        "taxCategoryCodes": {
          "description": "Tax Category Codesto be changed.",
          "$ref": "#/definitions/taxCategoryCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "taxOfficesDetails": {
      "type": "object",
      "description": "Response object for fetching Tax Offices.",
      "properties": {
        "taxOffices": {
          "description": "Collection of Tax Offices.",
          "$ref": "#/definitions/taxOfficesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "taxOfficesType": {
      "type": "array",
      "description": "List of Tax Offices.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/taxOfficeType"
      }
    },
    "taxOfficeType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "taxOfficesCriteria": {
      "type": "object",
      "description": "Request object for creating Tax Offices.",
      "properties": {
        "taxOffices": {
          "description": "Tax Officesto be created.",
          "$ref": "#/definitions/taxOfficesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "taxOfficesToBeChanged": {
      "type": "object",
      "description": "Request object for changing Tax Offices.",
      "properties": {
        "taxOffices": {
          "description": "Tax Officesto be changed.",
          "$ref": "#/definitions/taxOfficesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateTransactionCodes": {
      "type": "object",
      "properties": {
        "transactionCodes": {
          "description": "Collection of template transaction codes summary.",
          "$ref": "#/definitions/templateTransactionCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateTransactionCodesType": {
      "type": "array",
      "description": "Template transaction code configuration details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/templateTransactionCodeType"
      }
    },
    "templateTransactionCodeType": {
      "type": "object",
      "description": "Transaction Code configuration details.",
      "properties": {
        "classification": {
          "description": "Transaction Code classification details.",
          "$ref": "#/definitions/trxCodeClassificationType"
        },
        "description": {
          "description": "Transaction Code descriptions.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "paymentSetup": {
          "description": "Payment Transaction Code configuration details.",
          "$ref": "#/definitions/paymentTrxSetupType"
        },
        "trxSetup": {
          "description": "Transaction code setup/config details.",
          "$ref": "#/definitions/trxSetupType"
        },
        "adjustmentCode": {
          "description": "Transaction code to be used to make adjustments on the posting made using this transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "otaTaxType": {
          "description": "Open Travel Alliance(OTA) tax type for the given transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionAdjustments": {
          "description": "Combination of Adjustment Reason Code and Transaction Adjustment Code.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/transactionAdjustmentType"
          }
        },
        "serviceRecoveryAdjustmentCode": {
          "description": "Transaction code to be used to make service recovery adjustments on the posting made using this transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "amounts": {
          "description": "Default Amounts for the Transaction Codes.",
          "$ref": "#/definitions/trxCodeAmountsType"
        },
        "generatesSetup": {
          "description": "Transaction code's generates setup.",
          "$ref": "#/definitions/generatesSetupType"
        },
        "gLMapping": {
          "description": "Gl mapping for transaction codes specific to hotels like Hilton.",
          "$ref": "#/definitions/gLMappingType"
        },
        "associatedTransactionCodes": {
          "description": "Code and description of the standard transaction code associated to this comp transaction code.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeDescriptionType"
          }
        },
        "allowServiceRecovery": {
          "description": "Flag to identify if this transaction code already used as service recovery adjustment code.",
          "type": "boolean"
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "mappingCodes": {
          "description": "Mapping code and value attached to Transaction Code.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/exportMappingLinkedCodeType"
          }
        },
        "code": {
          "description": "Unique Transaction Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "compTransaction": {
          "description": "If true indicates this transaction codes is for Comp Accounting.",
          "type": "boolean"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "templateTransactionGroups": {
      "type": "object",
      "properties": {
        "transactionGroups": {
          "description": "Collection of template transaction groups.",
          "$ref": "#/definitions/templateTransactionGroupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateTransactionGroupsType": {
      "type": "array",
      "description": "Template transaction groups.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/transactionGroupType"
      }
    },
    "transactionGroupType": {
      "type": "object",
      "description": "Transaction Group configuration information.",
      "properties": {
        "description": {
          "description": "Description of the Transaction Group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "sequence": {
          "description": "Display sequence for the code type.",
          "type": "integer"
        },
        "code": {
          "description": "Transaction Group Configuration Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "type": {
          "description": "Transaction type to which the corresponding transaction group belongs.",
          "$ref": "#/definitions/cashieringTransactionTypeType"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "templateTransactionSubgroups": {
      "type": "object",
      "properties": {
        "transactionSubgroups": {
          "description": "Collection of template transaction subgroups configuration.",
          "$ref": "#/definitions/templateTransactionSubgroupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateTransactionSubgroupsType": {
      "type": "array",
      "description": "Template transaction subgroup configurations.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/transactionSubgroupType"
      }
    },
    "transactionSubgroupType": {
      "type": "object",
      "description": "Transaction Subgroup configuration Information.",
      "properties": {
        "description": {
          "description": "Description of the Transaction Subgroup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "sequence": {
          "description": "Display sequence for the code type.",
          "type": "integer"
        },
        "groupDescription": {
          "description": "Description of the Transaction Group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "code": {
          "description": "Transaction Subroup Configuration Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "group": {
          "description": "Transaction Group Configuration Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "newGroup": {
          "description": "Use this attribute to update the existing group during change operation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "type": {
          "description": "Transaction type to which the corresponding transaction group belongs. This is an information only attribute.",
          "$ref": "#/definitions/cashieringTransactionTypeType"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "transactionArrangementCodes": {
      "type": "object",
      "properties": {
        "transactionArrangementCodes": {
          "description": "Collection of transaction code with associated arrangement codes.",
          "$ref": "#/definitions/transactionArrangementCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transactionArrangementCodesType": {
      "type": "array",
      "description": "Contains transaction codes along with associated arrangement codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/transactionArrangementCodeType"
      }
    },
    "transactionArrangementCodeType": {
      "type": "object",
      "description": "This has arrangement codes association details for a transaction code.",
      "properties": {
        "transactionCode": {
          "description": "Transaction code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioArrangementCode": {
          "description": "Folio arrangement code that is associated with the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "groupArrangementCode": {
          "description": "Group arrangement code that is associated with the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "expenseArrangementCode": {
          "description": "Expense arrangement code that is associated with the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "dailyPlanCode": {
          "description": "Daily plan code that is associated with the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "transactionCodeOwnership": {
      "type": "object",
      "properties": {
        "transactionCodes": {
          "description": "Transaction Code and ownership status information.",
          "$ref": "#/definitions/changeTransactionCodeOwnershipType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changeTransactionCodeOwnershipType": {
      "type": "object",
      "description": "Change Transaction Code Ownership configuration details.",
      "properties": {
        "transactionCodes": {
          "description": "List of unique Transaction Codes.",
          "$ref": "#/definitions/codeListType"
        },
        "hotelId": {
          "description": "Hotel Code for which to update ownership of the Transaction codes",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ownershipStatus": {
          "description": "Ownership status to which the Transaction Codes have to be changed",
          "$ref": "#/definitions/trxOwnershipType"
        }
      }
    },
    "hotelTransactionCodes": {
      "type": "object",
      "properties": {
        "transactionCodes": {
          "description": "Collection of hotel's transaction codes summary.",
          "$ref": "#/definitions/hotelTransactionCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelTransactionCodesType": {
      "type": "array",
      "description": "Transaction Code configuration details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelTransactionCodeType"
      }
    },
    "transactionCodes": {
      "type": "object",
      "properties": {
        "trxCodeUsages": {
          "description": "Contains a list of elements on which the transaction code is used. When attempting to set a transaction code as inactive, a check is performed to make sure the transaction code is not being used before the change operation can be performed. If there are usages, the change operation will fail and this element will be populated with the associated usages for reference.",
          "$ref": "#/definitions/trxCodeUsagesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "trxCodeUsagesType": {
      "type": "array",
      "description": "Element on which the transaction code is being used.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trxCodeUsageType"
      }
    },
    "trxCodeUsageType": {
      "type": "object",
      "description": "Details about the element on which the transaction code is being used.",
      "properties": {
        "usageName": {
          "description": "Name of the element type on which the transaction code is being used.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "usageDetail": {
          "description": "Specific codes of the element type on which the transaction code is being used.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "transactionCodesCopy": {
      "type": "object",
      "properties": {
        "transactionCodes": {
          "description": "List of the transaction codes to be copied.",
          "$ref": "#/definitions/copyTransactionCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyTransactionCodesType": {
      "type": "object",
      "description": "Collection of transaction codes to be copied within same hotel",
      "properties": {
        "transactionCode": {
          "description": "List of transaction codes to be copied within the same hotel code.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/copyTransactionCodeType"
          }
        },
        "hotelId": {
          "description": "Source hotel code from where transaction codes(s) have to be copied. The transaction codes will be copied to the same hotel code with a different code and description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "copyGenerates": {
          "description": "Indicator that tells whether the transaction code generates should be copied or not.",
          "type": "boolean"
        }
      }
    },
    "copyTransactionCodeType": {
      "type": "object",
      "description": "The type gives details of the source transaction code to be copied. Details also include the new code and description with which the transaction code will be copied under the same hotel code.",
      "properties": {
        "sourceTransactionCode": {
          "description": "Source transaction code to be copied.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "copyAs": {
          "description": "The code and description to be used for the transaction code being copied. Transaction code will be copied to the same hotel code with a different code and description.",
          "$ref": "#/definitions/codeDescriptionType"
        }
      }
    },
    "transactionDiversionRules": {
      "type": "object",
      "properties": {
        "diversionRules": {
          "description": "Collection of Transaction Diversion Rule and their information",
          "$ref": "#/definitions/transactionDiversionRulesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transactionDiversionRulesType": {
      "type": "array",
      "description": "Collection of Transaction Diversion Rule List",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/transactionDiversionRuleType"
      }
    },
    "transactionDiversionRuleType": {
      "type": "object",
      "description": "A Transaction Diversion Rule Type",
      "properties": {
        "vipCode": {
          "description": "VIP code to consider while applying Diversion Instruction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "membership": {
          "description": "Membership type to consider while applying Diversion Instruction.",
          "$ref": "#/definitions/membershipTypeLevelType"
        },
        "targetRoom": {
          "description": "Room number to receive all the diverted transactions configured for this instruction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionCodes": {
          "description": "Collection of Transaction Code List",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeDescriptionType"
          }
        },
        "description": {
          "description": "User defined message for the Transaction Diversion Rule.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "level": {
          "description": "Level of the Transaction Diversion rule that can be Property or Reservation.",
          "$ref": "#/definitions/transactionDiversionRuleLevelType"
        },
        "thresholds": {
          "description": "Threshold Details related to the Transaction diversion rule.",
          "$ref": "#/definitions/thresholdDetailsType"
        },
        "type": {
          "description": "Transaction Diversion Rule Types",
          "$ref": "#/definitions/transactionDiversionRuleTypeType"
        },
        "hotelId": {
          "description": "Hotel code with which Transaction Diversion Rule is associated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Transaction Diversion Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "displaySequence": {
          "description": "User configured Sequence number.",
          "type": "number"
        },
        "inactive": {
          "description": "Indicator that tells whether the transaction diversion rule is active or not.",
          "type": "boolean"
        },
        "amount": {
          "description": "The amount applicable to the discount on transaction diversion rule. This would be a positive amount indicating the discount.",
          "type": "number",
          "minimum": 0
        },
        "percent": {
          "description": "A percentage value if the discount on transaction diversion rule is percentage based.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        }
      }
    },
    "membershipTypeLevelType": {
      "type": "object",
      "properties": {
        "type": {
          "description": "Code type for Rule Details",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "level": {
          "description": "Description type for Rule Details",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "transactionDiversionRuleLevelType": {
      "type": "string",
      "description": "Reservation level.",
      "enum": [
        "Property",
        "Reservation"
      ]
    },
    "thresholdDetailsType": {
      "type": "object",
      "description": "Type for the threshold elements.",
      "properties": {
        "entity": {
          "description": "Diversion entity type associated with the charge for the transaction diversion rule .",
          "$ref": "#/definitions/entityType"
        },
        "scope": {
          "description": "Diversion scope for the transaction diversion rule.",
          "$ref": "#/definitions/scopeType"
        },
        "minRequired": {
          "description": "Minimum required number of quantities, counts or minutes that must be posted.",
          "type": "integer"
        },
        "complimentary": {
          "description": "The number of quantities, counts or minutes for which transaction diversion is allowed .",
          "type": "integer"
        },
        "isEditable": {
          "description": "Configuring this flag to be TRUE will make the thresholds editable.",
          "type": "boolean"
        }
      }
    },
    "entityType": {
      "type": "string",
      "description": "Indicates the rule is based on Minutes associated with the charge.",
      "enum": [
        "ThresholdCount",
        "ThresholdQuantity",
        "ThresholdMinutes"
      ]
    },
    "scopeType": {
      "type": "string",
      "description": "Minimum required and complimentary values are applicable Per Stay.",
      "enum": [
        "PerDay",
        "PerStay"
      ]
    },
    "transactionDiversionRuleTypeType": {
      "type": "string",
      "description": "The rule type on which the Transaction Diversion Rule is based. If a reservation has any of the following code, Transaction Diversion rule gets active for that reservation",
      "enum": [
        "Vip",
        "Membership"
      ]
    },
    "transactionGroups": {
      "type": "object",
      "properties": {
        "transactionGroups": {
          "description": "Collection of Transaction Groups Configuration.",
          "$ref": "#/definitions/hotelTransactionGroupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelTransactionGroupsType": {
      "type": "array",
      "description": "Hotel's Transaction Group configuration.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelTransactionGroupType"
      }
    },
    "transactionGroupsCopy": {
      "type": "object",
      "properties": {
        "transactionGroups": {
          "type": "array",
          "description": "List of the transaction groups to be copied.",
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelTransactionSubgroups": {
      "type": "object",
      "properties": {
        "transactionSubgroups": {
          "description": "Collection of Transaction Subgroups Configuration.",
          "$ref": "#/definitions/hotelTransactionSubgroupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelTransactionSubgroupsType": {
      "type": "array",
      "description": "Hotel's Transaction Subgroup configuration.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelTransactionSubgroupType"
      }
    },
    "transactionSubgroupsCopy": {
      "type": "object",
      "properties": {
        "copyInstructions": {
          "description": "List of transactions subgroups that needs to be copied to the properties specified.",
          "$ref": "#/definitions/copyTransactionSubgroupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyTransactionSubgroupsType": {
      "type": "object",
      "description": "Copy information required to copy transaction subgroup type",
      "properties": {
        "transactionSubgroups": {
          "description": "Template transaction subgroups that needs to be copied to the properties specified.",
          "$ref": "#/definitions/templateTransactionSubgroupIDsType"
        },
        "hotels": {
          "description": "List of hotels to which the template transaction subgroups needs to be copied.",
          "$ref": "#/definitions/codeListType"
        }
      }
    },
    "templateTransactionSubgroupIDsType": {
      "type": "array",
      "description": "List of template transaction subgroup IDs",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/templateTransactionSubgroupIDType"
      }
    },
    "templateTransactionSubgroupIDType": {
      "type": "object",
      "description": "Information that uniquely identifies template transaction subgroups",
      "properties": {
        "subgroup": {
          "description": "Template transaction subgroup configuration code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "group": {
          "description": "Template transaction group configuration code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "fiscalPayloadType": {
      "type": "string",
      "enum": [
        "CheckOut",
        "FolioGeneration",
        "PostPayment"
      ]
    },
    "transactionDiscounts": {
      "type": "object",
      "properties": {
        "transactionDiscounts": {
          "description": "Collection of Transaction Discount Configurations.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/hotelTransactionDiscountType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transactionDiscount": {
      "type": "object",
      "properties": {
        "transactionDiscount": {
          "description": "Request to create or change a Transaction Discount",
          "$ref": "#/definitions/hotelTransactionDiscountType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelTransactionDiscountType": {
      "type": "object",
      "description": "Provides information about Transaction Discount Configuration.",
      "properties": {
        "hotelId": {
          "description": "Indicates for which hotel this transaction discount apply to.",
          "type": "string",
          "minLength": 1,
          "maxLength": 20
        },
        "transactionDiscountCode": {
          "description": "Unique code of the transaction discount.",
          "type": "string",
          "minLength": 1,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the transaction discount.",
          "type": "string",
          "minLength": 1,
          "maxLength": 2000
        },
        "ruleType": {
          "description": "The rule type on which the Transaction Discount is based.",
          "$ref": "#/definitions/transactionDiscountRuleType"
        },
        "codeType": {
          "description": "The rule type on which the Transaction Discount is based.",
          "$ref": "#/definitions/transactionDiscountCodeType"
        },
        "amount": {
          "description": "The amount applicable to the transaction discount.This would be a positive amount indicating the discount.",
          "type": "number",
          "format": "double",
          "minimum": 0
        },
        "percent": {
          "description": "A percentage value if the transaction discount is percentage based.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "inactive": {
          "description": "Indicates whether the transaction discount is inactive or not.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number",
          "minimum": 1
        },
        "transactionDiscountId": {
          "description": "Unique code of the transaction discount.",
          "type": "number"
        },
        "discountAttributes": {
          "description": "Holds Transaction Discounts Attributes details.If discount is applied to a membership type, only membership type details are required. If discount is applied on a membership level , membership type and membership level details are required.",
          "type": "array",
          "maxItems": 2,
          "items": {
            "$ref": "#/definitions/transactionDiscountsAttributeType"
          }
        },
        "articleCodes": {
          "description": "Collection of article codes eligible for transaction discounts.",
          "type": "array",
          "maxItems": 2000,
          "items": {
            "type": "string"
          }
        },
        "transactionCodes": {
          "description": "Collection of transaction codes eligible for transaction discounts.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "hotelId",
        "transactionDiscountCode",
        "description",
        "ruleType",
        "codeType",
        "discountAttributes"
      ]
    },
    "transactionDiscountRuleType": {
      "type": "string",
      "description": "The rule type on which the transaction discount is based.",
      "enum": [
        "Membership"
      ]
    },
    "transactionDiscountsAttributeType": {
      "type": "object",
      "properties": {
        "transactionDiscountType": {
          "description": "Holds Transaction Discounts Attribute. e.g if the discount is applied to a membership type only or if it's applied to a membership level of a membership type.",
          "$ref": "#/definitions/transactionDiscountType"
        },
        "transactionDiscountTypeValue": {
          "description": "Holds the value of transaction discount type. e.g the value of the membership type can be given when transactionDiscountType is set to MembershipType",
          "type": "string",
          "minLength": 1,
          "maxLength": 200
        }
      }
    },
    "transactionDiscountType": {
      "type": "string",
      "description": "The type on which the transaction discount is based. e.g MembershipType , MembershipLevel",
      "enum": [
        "MembershipType",
        "MembershipLevel"
      ]
    },
    "transactionDiscountCodeType": {
      "type": "string",
      "description": "The code type on which the transaction discount is based.",
      "enum": [
        "Article",
        "Transaction"
      ]
    },
    "applicationUserType": {
      "type": "object",
      "description": "Information to uniquely identify an application user",
      "properties": {
        "appUser": {
          "description": "Name of the application user",
          "type": "string",
          "minLength": 0,
          "maxLength": 140
        },
        "appUserId": {
          "description": "Unique numeric ID of the application user",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "generatesInfoType": {
      "type": "object",
      "description": "Defines Generates Info.",
      "properties": {
        "generates": {
          "type": "array",
          "description": "Defines Generates Info",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/generateInfoType"
          }
        }
      }
    },
    "generateInfoType": {
      "type": "object",
      "description": "Defines Generates Info",
      "properties": {
        "generateId": {
          "description": "Unique ID of the Generate.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "vouchersDetails": {
      "type": "object",
      "description": "Object for Voucher Info.",
      "properties": {
        "vouchersInfoType": {
          "type": "array",
          "description": "List of Vouchers.",
          "items": {
            "$ref": "#/definitions/voucherType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "voucherType": {
      "type": "object",
      "description": "Voucher details.",
      "properties": {
        "voucherId": {
          "description": "Unique internal ID of the voucher",
          "type": "integer",
          "minLength": 0,
          "maxLength": 20
        },
        "membershipType": {
          "description": "Membership type",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "membershipLevel": {
          "description": "Membership level",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "startDate": {
          "description": "Start date",
          "type": "string",
          "format": "date",
          "minLength": 0,
          "maxLength": 40
        },
        "endDate": {
          "description": "End date",
          "type": "string",
          "format": "date",
          "minLength": 0,
          "maxLength": 40
        },
        "amount": {
          "description": "Voucher amount",
          "type": "number",
          "format": "double",
          "minimum": 0
        },
        "hotelId": {
          "description": "Unique ID of the hotel in OPERA",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "vouchersConfigCopy": {
      "type": "object",
      "properties": {
        "membershipTypes": {
          "type": "array",
          "description": "List of the Membership Types of Vouchers Config to be copied.",
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "customChargePostingRhythmType": {
      "type": "object",
      "description": "Posting rhythm details.",
      "properties": {
        "type": {
          "description": "Posting rhythm types for custom charges.",
          "$ref": "#/definitions/customChargePostingRhythmTypeOption"
        },
        "startOnNight": {
          "description": "Starting night of the reservation for which the custom charge will be posted. This is applicable when the posting rhythm 'Post On Every X Nights Starting Y Night' is selected.",
          "type": "integer",
          "maximum": 9999
        },
        "postEveryXNights": {
          "description": "The custom charge will be posted for every X night, where X is the frequency of nights. This is applicable when the posting rhythm 'Post On Every X Nights Starting Y Night' is selected.",
          "type": "integer",
          "maximum": 9999
        },
        "startOnNightPrice": {
          "description": "The amount for which the custom charge will be posted to the reservation, starting on the night defined by 'Start On Night'. This is applicable when the posting rhythm 'Post On Every X Nights Starting Y Night' is selected.",
          "type": "integer"
        },
        "maxNights": {
          "description": "The maximum number of nights for which the custom charge posted to the reservation. This is applicable when the posting rhythm 'Post Every Night For X Nights' is selected.",
          "type": "integer",
          "maximum": 9999
        }
      }
    },
    "customChargePostingRhythmTypeOption": {
      "type": "string",
      "description": "Defined values for posting rhythm LOV.",
      "enum": [
        "PostEveryNightForXNights",
        "PostOnEveryXNightsStartingYNight"
      ]
    },
    "customChargeRangeType": {
      "type": "object",
      "description": "The lower and upper range value for which the corresponding price is posted as a custom charge.",
      "properties": {
        "rangeFrom": {
          "description": "The lower range value for which the corresponding price is posted as a custom charge.",
          "type": "number"
        },
        "rangeTo": {
          "description": "The upper range value for which the corresponding price is posted as a custom charge.",
          "type": "number"
        },
        "price": {
          "description": "The price of the custom charge, for the given range.",
          "type": "number"
        }
      }
    },
    "folioCodeDescriptionType": {
      "type": "object",
      "description": "This contains a folio code and description information.",
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "description": {
          "description": "description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "managedByOptions": {
      "description": "Describes of the Configuration is Managed by Enterprise or Property.",
      "type": "string",
      "enum": [
        "EnterpriseManaged",
        "PropertyManaged",
        "EnterpriseEnforced",
        "PropertyOverridden"
      ]
    },
    "roomTypeBasedChargeRngs": {
      "type": "object",
      "description": "Defines Room Type Based Charge Range response type.",
      "properties": {
        "roomTypeBasedChrgRanges": {
          "type": "array",
          "description": "The result element containing the requested list of Room Type Based Charge Range configuration.",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomTypeBasedChargeRangesType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomTypeBasedChargeRangesType": {
      "type": "object",
      "description": "Provides information about Room Type Based Charge Ranges.",
      "properties": {
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionNo": {
          "description": "Transaction number, Unique Identifier of the record.",
          "type": "number"
        },
        "transactionCode": {
          "description": "Transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "generateTrxCode": {
          "description": "Generate of the Main Transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomTypeGroup": {
          "description": "Room Type Group Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "startDate": {
          "description": "Start Date for Room Type Based Charge Range.",
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "description": "End Date for Room Type Based Charge Range.",
          "type": "string",
          "format": "date"
        },
        "amount": {
          "description": "Amount of the Room Type Group Based Range.",
          "type": "number"
        }
      }
    }
  },
  "tags": [
    {
      "name": "AccountsReceivablesConfig",
      "description": "The Accounts Receivables Config module offers the capability of creating, managing, and retrieving of Accounts Receivables configuration."
    },
    {
      "name": "CashieringConfig",
      "description": "Cashiering configurations affect the control and management of financial transactions at your property. You can configure cashiering components for articles for sale, cancellation handling, deposits, folios, settlements, exchange rates, payment methods and so on."
    },
    {
      "name": "CreditCard",
      "description": "The Credit Card Internal Service contains operations used internally by OPERA Cloud."
    },
    {
      "name": "CommissionConfig",
      "description": "These Commission APIs allow you to get, update, and remove commissions on an Account Receivable (AR) profile in OPERA Cloud."
    },
    {
      "name": "ChainConfig",
      "description": "These APIs will allow you to configure front office related configuration related to Administration."
    },
    {
      "name": "HotelConfig",
      "description": "These APIs will allow you to configure front office related configuration related to Administration."
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}
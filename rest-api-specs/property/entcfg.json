{
  "swagger": "2.0",
  "info": {
    "title": "OPERA Cloud Enterprise Configuration API",
    "description": "APIs to cater for Enterprise Configuration functionality in OPERA Cloud. <br /><br In this module, you can configure a variety of options related to your properties such as their locations, facilities, and local attractions. The available options are dependant on the active controls at your property.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>",
    "version": "24.4",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality_apis_ww_grp@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "schemes": [
    "https"
  ],
  "basePath": "/ent/config/v1",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/airports": {
      "get": {
        "summary": "Get template airports",
        "description": "Use this API to get template airports. <p><strong>OperationId:</strong>getTemplateAirports</p>",
        "operationId": "getTemplateAirports",
        "parameters": [
          {
            "name": "airportCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Airport code identifying the airport.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching template airports.",
            "schema": {
              "$ref": "#/definitions/templateAirportsDetails"
            }
          },
          "204": {
            "description": "TemplateAirports not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create new template airports",
        "description": "Use this API to create new template airports. <p><strong>OperationId:</strong>postTemplateAirports</p>",
        "operationId": "postTemplateAirports",
        "parameters": [
          {
            "name": "templateAirportsCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating new template airports.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateAirportsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/airports/{airportCode}": {
      "put": {
        "summary": "Change template airports",
        "description": "Use this API to update template airports. <p><strong>OperationId:</strong>changeTemplateAirports</p>",
        "operationId": "changeTemplateAirports",
        "parameters": [
          {
            "name": "airportCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of airport."
          },
          {
            "name": "templateAirportsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for modifying template airports.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateAirportsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete template airports",
        "description": "Use this API to delete template airports. <p><strong>OperationId:</strong>removeTemplateAirports</p>",
        "operationId": "removeTemplateAirports",
        "parameters": [
          {
            "name": "airportCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of airport."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/amenities": {
      "get": {
        "summary": " Get template amenities",
        "description": " Use this API to get template amenities. <p><strong>OperationId:</strong>getTemplateAmenities</p>",
        "operationId": "getTemplateAmenities",
        "parameters": [
          {
            "name": "general",
            "in": "query",
            "required": false,
            "description": "Is it a General amenity type.",
            "type": "boolean"
          },
          {
            "name": "meeting",
            "in": "query",
            "required": false,
            "description": "Is it a Meeting amenity type.",
            "type": "boolean"
          },
          {
            "name": "amenityCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching amenities at the template level.",
            "schema": {
              "$ref": "#/definitions/templateAmenitiesDetails"
            }
          },
          "204": {
            "description": "TemplateAmenities not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create template amenities",
        "description": "Use this API to create template amenities. <p><strong>OperationId:</strong>postTemplateAmenities</p>",
        "operationId": "postTemplateAmenities",
        "parameters": [
          {
            "name": "templateAmenitiesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating amenities at the template level.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateAmenitiesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/amenities/{featureCode}": {
      "put": {
        "summary": "Change template amenities",
        "description": "Use this API to update template amenities. <p><strong>OperationId:</strong>changeTemplateAmenities</p>",
        "operationId": "changeTemplateAmenities",
        "parameters": [
          {
            "name": "featureCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of feature."
          },
          {
            "name": "templateAmenitiesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing amenities at the template level.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateAmenitiesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete template amenities",
        "description": "Use this API to delete template amenities. <p><strong>OperationId:</strong>removeTemplateAmenities</p>",
        "operationId": "removeTemplateAmenities",
        "parameters": [
          {
            "name": "featureCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of feature."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/attractionClasses": {
      "get": {
        "summary": "Get Attraction Classes",
        "description": "Use this API to get Attraction Classes. <p><strong>OperationId:</strong>getAttractionClasses</p>",
        "operationId": "getAttractionClasses",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Attraction Classes.",
            "schema": {
              "$ref": "#/definitions/attractionClassesDetails"
            }
          },
          "204": {
            "description": "AttractionClasses not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create Attraction Classes",
        "description": "Use this API to create Attraction Classes. <p><strong>OperationId:</strong>postAttractionClasses</p>",
        "operationId": "postAttractionClasses",
        "parameters": [
          {
            "name": "attractionClassesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Attraction Classes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/attractionClassesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/attractionClasses/{attractionClassCode}": {
      "put": {
        "summary": "Change Attraction Classes",
        "description": "Use this API to update Attraction Classes. <p><strong>OperationId:</strong>putAttractionClasses</p>",
        "operationId": "putAttractionClasses",
        "parameters": [
          {
            "name": "attractionClassCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of Attraction Classes."
          },
          {
            "name": "attractionClassesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Attraction Classes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/attractionClassesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete Attraction Classes",
        "description": "Use this API to delete Attraction Classes. <p><strong>OperationId:</strong>deleteAttractionClasses</p>",
        "operationId": "deleteAttractionClasses",
        "parameters": [
          {
            "name": "attractionClassCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of Attraction Classes."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/attractions": {
      "get": {
        "summary": "Get Attraction Template",
        "description": "This API accepts the attraction template request search criteria and fetches the attraction templates that match the criteria. <p><strong>OperationId:</strong>getAttractionTemplates</p>",
        "operationId": "getAttractionTemplates",
        "parameters": [
          {
            "name": "attractionCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "classCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for information regarding attraction templates.",
            "schema": {
              "$ref": "#/definitions/attractionTemplatesDetails"
            }
          },
          "204": {
            "description": "AttractionTemplates not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create Attraction Template",
        "description": "This API is used to create a new attraction template based on the request. . <p><strong>OperationId:</strong>postAttractionTemplates</p>",
        "operationId": "postAttractionTemplates",
        "parameters": [
          {
            "name": "attractionTemplatesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating a new attraction code template.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/attractionTemplatesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/attractions/{attractionCode}": {
      "put": {
        "summary": "Change Attraction Template",
        "description": "This API is used to update an existing attraction template. <p><strong>OperationId:</strong>changeAttractionTemplates</p>",
        "operationId": "changeAttractionTemplates",
        "parameters": [
          {
            "name": "attractionCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of attraction template."
          },
          {
            "name": "attractionTemplatesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for modifying the existing attraction attraction templates.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/attractionTemplatesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete an existing attraction template",
        "description": "Use this API to delete an existing attraction template. <p><strong>OperationId:</strong>removeAttractionTemplates</p>",
        "operationId": "removeAttractionTemplates",
        "parameters": [
          {
            "name": "attractionCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of attraction template."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/brandCodes": {
      "get": {
        "summary": "Get brand codes",
        "description": "Use this API to return brand codes based on search criteria such as codes, wildCard, description. Brand codes are used for different hotel brands within a hotel corporation.<p><strong>OperationId:</strong>getBrandCodes</p>",
        "operationId": "getBrandCodes",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Brand Codes.",
            "schema": {
              "$ref": "#/definitions/brandCodesDetails"
            }
          },
          "204": {
            "description": "BrandCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create Brand Codes",
        "description": "Use this API to create Brand Codes. <p><strong>OperationId:</strong>postBrandCodes</p>",
        "operationId": "postBrandCodes",
        "parameters": [
          {
            "name": "brandCodesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Brand Codes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/brandCodesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/brandCodes/{brandCode}": {
      "put": {
        "summary": "Change Brand Code",
        "description": "Use this API to update Brand Code. <p><strong>OperationId:</strong>changeBrandCodes</p>",
        "operationId": "changeBrandCodes",
        "parameters": [
          {
            "name": "brandCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of Brand."
          },
          {
            "name": "brandCodesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Brand Codes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/brandCodesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete Brand Code",
        "description": "Use this API to delete Brand Code. <p><strong>OperationId:</strong>removeBrandCodes</p>",
        "operationId": "removeBrandCodes",
        "parameters": [
          {
            "name": "brandCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of Brand."
          },
          {
            "name": "brandCodesCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/calendar": {
      "get": {
        "summary": "Get Hotel Calendar",
        "description": "Use this API to get detailed information of calendar entries for a date range. <p><strong>OperationId:</strong>getPropertyCalendar</p>",
        "operationId": "getPropertyCalendar",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Indicates entries for a day in calendar. Entries can vary between day types, events, etc.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "DayType",
                "Event"
              ]
            },
            "required": true
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Hotel for which calendar is being represented.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching calendar entries for a hotel.",
            "schema": {
              "$ref": "#/definitions/hotelCalendarDetails"
            }
          },
          "204": {
            "description": "PropertyCalendar not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/chain": {
      "get": {
        "summary": "Get Chains",
        "description": "Use this API to get Chains. <p><strong>OperationId:</strong>getChain</p>",
        "operationId": "getChain",
        "parameters": [
          {
            "name": "enforceSecurity",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeActive",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "chainCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "chainName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Chain.",
            "schema": {
              "$ref": "#/definitions/chainDetails"
            }
          },
          "204": {
            "description": "Chain not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/chain/{chainCode}": {
      "put": {
        "summary": "Change Chain",
        "description": "Use this API to update Chain. <p><strong>OperationId:</strong>putChain</p>",
        "operationId": "putChain",
        "parameters": [
          {
            "name": "chainCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of Chain."
          },
          {
            "name": "chainToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Chain.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/chainToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/communicationMethodsEntDetails": {
      "get": {
        "summary": "Get Communication Methods Ent Details",
        "description": "Use this API to get Communication Methods Ent Details. <p><strong>OperationId:</strong>getCommunicationMethodsEntDetails</p>",
        "operationId": "getCommunicationMethodsEntDetails",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Communication Methods Ent Details.",
            "schema": {
              "$ref": "#/definitions/communicationMethodsEntDetailsDetails"
            }
          },
          "204": {
            "description": "CommunicationMethodsEntDetails not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create Communication Methods Ent Details",
        "description": "Use this API to create Communication Methods Ent Details. <p><strong>OperationId:</strong>postCommunicationMethodsEntDetails</p>",
        "operationId": "postCommunicationMethodsEntDetails",
        "parameters": [
          {
            "name": "communicationMethodsEntDetailsCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Communication Methods Ent Details.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/communicationMethodsEntDetailsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/communicationMethodsEntDetails/{communicationMethodsEntDetailsId}": {
      "put": {
        "summary": "Change Communication Methods Ent Details",
        "description": "Use this API to update Communication Methods Ent Details. <p><strong>OperationId:</strong>putCommunicationMethodsEntDetails</p>",
        "operationId": "putCommunicationMethodsEntDetails",
        "parameters": [
          {
            "name": "communicationMethodsEntDetailsId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of Communication Methods Ent Details."
          },
          {
            "name": "communicationMethodsEntDetailsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Communication Methods Ent Details.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/communicationMethodsEntDetailsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete Communication Methods Ent Details",
        "description": "Use this API to delete Communication Methods Ent Details. <p><strong>OperationId:</strong>deleteCommunicationMethodsEntDetails</p>",
        "operationId": "deleteCommunicationMethodsEntDetails",
        "parameters": [
          {
            "name": "communicationMethodsEntDetailsId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of Communication Methods Ent Details."
          },
          {
            "name": "communicationMethodsEntDetailsCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/configurations/activityLogs": {
      "get": {
        "summary": "Get Configuration Activity Logs",
        "description": "Use this API to Fetch Configuration Activity logs from Activity Group or Type. <p><strong>OperationId:</strong>getConfigActivityLog</p> <p>The maximum allowable limit for this API is <strong>20</strong>.</p> <p>This API allows a time span of <strong>4</strong> days.</p>",
        "operationId": "getConfigActivityLog",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Hotel code.",
            "type": "string"
          },
          {
            "name": "module",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Activity module.",
            "uniqueItems": true,
            "enum": [
              "Reservation",
              "Contract",
              "Allotment",
              "Outlookview",
              "Profile",
              "Accountreceivables",
              "GdsConvRateCodes",
              "RateCode",
              "Billing",
              "Activity"
            ]
          },
          {
            "name": "parameterName",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Name of the parameter.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "parameterValue",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Value of the parameter.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "activityGroup",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "activityType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "description": "Search from date for the user activity log.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "description": "Search to date for the user activity log.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "description": "Search text for the user activity log.",
            "type": "string"
          },
          {
            "name": "userByIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "integer",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "userForIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "integer",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching configuration activity log.",
            "schema": {
              "$ref": "#/definitions/configActivityLogDetails"
            }
          },
          "204": {
            "description": "ConfigActivityLog not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create a new Config Activity Log",
        "description": "Use this API to create a new Activity Log. <p><strong>OperationId:</strong>postConfigActivityLog</p>",
        "operationId": "postConfigActivityLog",
        "parameters": [
          {
            "name": "createConfigActivityLogCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Config Activity Logs.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/createConfigActivityLogCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/corporateBusinessUnits": {
      "get": {
        "summary": "Get Corporate Business Units",
        "description": "Use this API to get Corporate Business Units. <p><strong>OperationId:</strong>getCorporateBusinessUnits</p>",
        "operationId": "getCorporateBusinessUnits",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Corporate Business Units.",
            "schema": {
              "$ref": "#/definitions/corporateBusinessUnitsDetails"
            }
          },
          "204": {
            "description": "CorporateBusinessUnits not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create Corporate Business Units",
        "description": "Use this API to create Corporate Business Units. <p><strong>OperationId:</strong>postCorporateBusinessUnits</p>",
        "operationId": "postCorporateBusinessUnits",
        "parameters": [
          {
            "name": "corporateBusinessUnitsCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Corporate Business Units.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/corporateBusinessUnitsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/corporateBusinessUnits/{businessUnitCode}": {
      "put": {
        "summary": "Change Corporate Business Units",
        "description": "Use this API to update Corporate Business Units. <p><strong>OperationId:</strong>changeCorporateBusinessUnits</p>",
        "operationId": "changeCorporateBusinessUnits",
        "parameters": [
          {
            "name": "businessUnitCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of Business Units."
          },
          {
            "name": "corporateBusinessUnitsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Corporate Business Units.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/corporateBusinessUnitsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete Corporate Business Units",
        "description": "Use this API to delete Corporate Business Units. <p><strong>OperationId:</strong>removeCorporateBusinessUnits</p>",
        "operationId": "removeCorporateBusinessUnits",
        "parameters": [
          {
            "name": "businessUnitCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of Business Units."
          },
          {
            "name": "corporateBusinessUnitsCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/corporateDepartmentCodes": {
      "get": {
        "summary": "Get Corporate Department Codes",
        "description": "Use this API to get Corporate Department Codes. <p><strong>OperationId:</strong>getCorporateDepartmentCodes</p>",
        "operationId": "getCorporateDepartmentCodes",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Corporate Department Codes.",
            "schema": {
              "$ref": "#/definitions/corporateDepartmentCodesDetails"
            }
          },
          "204": {
            "description": "CorporateDepartmentCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create Corporate Department Codes",
        "description": "Use this API to create Corporate Department Codes. <p><strong>OperationId:</strong>postCorporateDepartmentCodes</p>",
        "operationId": "postCorporateDepartmentCodes",
        "parameters": [
          {
            "name": "corporateDepartmentCodesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Corporate Department Codes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/corporateDepartmentCodesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/corporateDepartmentCodes/{departmentCode}": {
      "put": {
        "summary": "Change Corporate Department Codes",
        "description": "Use this API to update Corporate Department Codes. <p><strong>OperationId:</strong>changeCorporateDepartmentCodes</p>",
        "operationId": "changeCorporateDepartmentCodes",
        "parameters": [
          {
            "name": "departmentCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of Department."
          },
          {
            "name": "corporateDepartmentCodesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Corporate Department Codes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/corporateDepartmentCodesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete Corporate Department Codes",
        "description": "Use this API to delete Corporate Department Codes. <p><strong>OperationId:</strong>removeCorporateDepartmentCodes</p>",
        "operationId": "removeCorporateDepartmentCodes",
        "parameters": [
          {
            "name": "departmentCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of Department."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/corporateDivisions": {
      "get": {
        "summary": "Get Corporate Divisions",
        "description": "Use this API to get Corporate Divisions. <p><strong>OperationId:</strong>getCorporateDivisions</p>",
        "operationId": "getCorporateDivisions",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Corporate Divisions.",
            "schema": {
              "$ref": "#/definitions/corporateDivisionsDetails"
            }
          },
          "204": {
            "description": "CorporateDivisions not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create Corporate Divisions",
        "description": "Use this API to create Corporate Divisions. <p><strong>OperationId:</strong>postCorporateDivisions</p>",
        "operationId": "postCorporateDivisions",
        "parameters": [
          {
            "name": "corporateDivisionsCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Corporate Divisions.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/corporateDivisionsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/corporateDivisions/{divisionCode}": {
      "put": {
        "summary": "Change Corporate Divisions",
        "description": "Use this API to update Corporate Divisions. <p><strong>OperationId:</strong>changeCorporateDivisions</p>",
        "operationId": "changeCorporateDivisions",
        "parameters": [
          {
            "name": "divisionCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of Corporate Divisions."
          },
          {
            "name": "corporateDivisionsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Corporate Divisions.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/corporateDivisionsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete Corporate Divisions",
        "description": "Use this API to delete Corporate Divisions. <p><strong>OperationId:</strong>removeCorporateDivisions</p>",
        "operationId": "removeCorporateDivisions",
        "parameters": [
          {
            "name": "divisionCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of Corporate Divisions."
          },
          {
            "name": "corporateDivisionsCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/corporateOperatingUnits": {
      "get": {
        "summary": "Get Corporate Operating Units",
        "description": "Use this API to get Corporate Operating Units. <p><strong>OperationId:</strong>getCorporateOperatingUnits</p>",
        "operationId": "getCorporateOperatingUnits",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Corporate Operating Units.",
            "schema": {
              "$ref": "#/definitions/corporateOperatingUnitsDetails"
            }
          },
          "204": {
            "description": "CorporateOperatingUnits not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create Corporate Operating Units",
        "description": "Use this API to create Corporate Operating Units. <p><strong>OperationId:</strong>postCorporateOperatingUnits</p>",
        "operationId": "postCorporateOperatingUnits",
        "parameters": [
          {
            "name": "corporateOperatingUnitsCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Corporate Operating Units.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/corporateOperatingUnitsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/corporateOperatingUnits/{operatingUnitCode}": {
      "put": {
        "summary": "Change Corporate Operating Units",
        "description": "Use this API to update Corporate Operating Units. <p><strong>OperationId:</strong>changeCorporateOperatingUnits</p>",
        "operationId": "changeCorporateOperatingUnits",
        "parameters": [
          {
            "name": "operatingUnitCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of Corporate Operating Units."
          },
          {
            "name": "corporateOperatingUnitsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Corporate Operating Units.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/corporateOperatingUnitsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete Corporate Operating Units",
        "description": "Use this API to delete Corporate Operating Units. <p><strong>OperationId:</strong>removeCorporateOperatingUnits</p>",
        "operationId": "removeCorporateOperatingUnits",
        "parameters": [
          {
            "name": "operatingUnitCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of Corporate Operating Units."
          },
          {
            "name": "corporateOperatingUnitsCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/countries": {
      "get": {
        "summary": "Get template Countries",
        "description": "Use this API to get template Countries. <p><strong>OperationId:</strong>getTemplateCountries</p>",
        "operationId": "getTemplateCountries",
        "parameters": [
          {
            "name": "countriesCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching template Countries.",
            "schema": {
              "$ref": "#/definitions/templateCountriesDetails"
            }
          },
          "204": {
            "description": "TemplateCountries not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create template Countries",
        "description": "Use this API to create template Countries. <p><strong>OperationId:</strong>postTemplateCountries</p>",
        "operationId": "postTemplateCountries",
        "parameters": [
          {
            "name": "templateCountriesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating new template Countries.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateCountriesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/countries/guestTypes": {
      "get": {
        "summary": "Get Country Guest Types",
        "description": "Use this API to get Country Guest Types. <p><strong>OperationId:</strong>getCountryGuestTypes</p>",
        "operationId": "getCountryGuestTypes",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Philippines Country Guest Types.",
            "schema": {
              "$ref": "#/definitions/countryGuestTypesDetails"
            }
          },
          "204": {
            "description": "CountryGuestTypes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create Country Guest Types",
        "description": "Use this API to create Country Guest Types. <p><strong>OperationId:</strong>postCountryGuestTypes</p>",
        "operationId": "postCountryGuestTypes",
        "parameters": [
          {
            "name": "countryGuestTypesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Country Guest Types.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/countryGuestTypesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/countries/guestTypes/{guestTypeCode}": {
      "put": {
        "summary": "Change Country Guest Types",
        "description": "Use this API to update Country Guest Types. <p><strong>OperationId:</strong>changeCountryGuestTypes</p>",
        "operationId": "changeCountryGuestTypes",
        "parameters": [
          {
            "name": "guestTypeCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of guest type."
          },
          {
            "name": "countryGuestTypesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Philippines Country Guest Types.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/countryGuestTypesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete Country Guest Types",
        "description": "Use this API to delete Country Guest Types. <p><strong>OperationId:</strong>removeCountryGuestTypes</p>",
        "operationId": "removeCountryGuestTypes",
        "parameters": [
          {
            "name": "guestTypeCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of guest type."
          },
          {
            "name": "countryGuestTypesCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/countries/{countryCode}": {
      "put": {
        "summary": "Change template Countries",
        "description": "Use this API to update template Countries. <p><strong>OperationId:</strong>changeTemplateCountries</p>",
        "operationId": "changeTemplateCountries",
        "parameters": [
          {
            "name": "countryCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of country."
          },
          {
            "name": "templateCountriesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for modifying template Countries.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateCountriesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete template Countries",
        "description": "Use this API to delete template Countries. <p><strong>OperationId:</strong>removeTemplateCountries</p>",
        "operationId": "removeTemplateCountries",
        "parameters": [
          {
            "name": "countryCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of country."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/countryMainGroups": {
      "get": {
        "summary": "Get Country Main Groups",
        "description": "Use this API to get Country Main Groups. <p><strong>OperationId:</strong>getCountryMainGroups</p>",
        "operationId": "getCountryMainGroups",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Country Main Groups.",
            "schema": {
              "$ref": "#/definitions/countryMainGroupsDetails"
            }
          },
          "204": {
            "description": "CountryMainGroups not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create Country Main Groups",
        "description": "Use this API to create Country Main Groups. <p><strong>OperationId:</strong>postCountryMainGroups</p>",
        "operationId": "postCountryMainGroups",
        "parameters": [
          {
            "name": "countryMainGroupsCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Country Main Groups.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/countryMainGroupsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/countryMainGroups/{groupCode}": {
      "put": {
        "summary": "Change Country Main Groups",
        "description": "Use this API to update Country Main Groups. <p><strong>OperationId:</strong>changeCountryMainGroups</p>",
        "operationId": "changeCountryMainGroups",
        "parameters": [
          {
            "name": "groupCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of Groups."
          },
          {
            "name": "countryMainGroupsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Country Main Groups.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/countryMainGroupsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete Country Main Groups",
        "description": "Use this API to delete Country Main Groups. <p><strong>OperationId:</strong>removeCountryMainGroups</p>",
        "operationId": "removeCountryMainGroups",
        "parameters": [
          {
            "name": "groupCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of Groups."
          },
          {
            "name": "countryMainGroupsCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/currencyExchangeRates": {
      "get": {
        "summary": "Get Currency Exchange Rates",
        "description": "Fetch the currency exchange rates when using this API. <p><strong>OperationId:</strong>getCurrencyExchangeRates</p>",
        "operationId": "getCurrencyExchangeRates",
        "parameters": [
          {
            "name": "exchangeType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Exchange Rate Types",
            "uniqueItems": true,
            "enum": [
              "Posting",
              "Settlement",
              "Exchangecash",
              "Travelagent",
              "Forecast",
              "Membership",
              "Exchangecheck",
              "Certificate"
            ]
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "List of Hotels for which the currency exchange rate information is required.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "currencyCode",
            "in": "query",
            "required": false,
            "description": "Currency Code for which the exchange rate is requested. Sending no currency code will return values for all available currency codes.",
            "type": "string"
          },
          {
            "name": "currencyCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "List of currency codes with their exchange rates.",
            "schema": {
              "$ref": "#/definitions/currencyExchangeRatesDetails"
            }
          },
          "204": {
            "description": "CurrencyExchangeRates not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/dayTypeCodes": {
      "get": {
        "summary": "Get Template Day Type Codes",
        "description": "Use this API to get Template Day Type Codes. <p><strong>OperationId:</strong>getTemplateDayTypeCodes</p>",
        "operationId": "getTemplateDayTypeCodes",
        "parameters": [
          {
            "name": "dayTypesCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching template day type codes.",
            "schema": {
              "$ref": "#/definitions/templateDayTypeCodesDetails"
            }
          },
          "204": {
            "description": "TemplateDayTypeCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "put": {
        "summary": "Change Template Day Type Codes",
        "description": "Use this API to update Template Day Type Codes. <p><strong>OperationId:</strong>changeTemplateDayTypeCodes</p>",
        "operationId": "changeTemplateDayTypeCodes",
        "parameters": [
          {
            "name": "templateDayTypeCodesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for modifying template day type codes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateDayTypeCodesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete Template Day Type Codes",
        "description": "Use this API to delete Template Day Type Codes. <p><strong>OperationId:</strong>removeTemplateDayTypeCodes</p>",
        "operationId": "removeTemplateDayTypeCodes",
        "parameters": [
          {
            "name": "templateDayTypeCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create Template Day Type Codes",
        "description": "Use this API to create Template Day Type Codes. <p><strong>OperationId:</strong>postTemplateDayTypeCodes</p>",
        "operationId": "postTemplateDayTypeCodes",
        "parameters": [
          {
            "name": "templateDayTypeCodesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating new template day type codes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateDayTypeCodesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/dayTypes": {
      "put": {
        "summary": "Set day type for a date range",
        "description": "You can use this API to set day type for a date range. <p><strong>OperationId:</strong>setDayTypes</p>",
        "operationId": "setDayTypes",
        "parameters": [
          {
            "name": "setDayTypes",
            "in": "body",
            "required": true,
            "description": "Request object for setting day type for specified date range.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/setDayTypes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/dayTypes/{dayType}": {
      "delete": {
        "summary": "Delete day type for a date range",
        "description": "Use this API to delete day type for a date range. <p><strong>OperationId:</strong>removeDayTypes</p>",
        "operationId": "removeDayTypes",
        "parameters": [
          {
            "name": "dayType",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of day type."
          },
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Day type code selected.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "friday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "monday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "saturday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sunday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "thursday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "tuesday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "wednesday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/defaultNote": {
      "get": {
        "summary": "Get Default Note text",
        "description": "Use this API to get Default Note text. <p><strong>OperationId:</strong>getDefaultNote</p>",
        "operationId": "getDefaultNote",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Default Hotel Code for users",
            "type": "string"
          },
          {
            "name": "noteType",
            "in": "query",
            "required": false,
            "description": "Notes Group added to Search criteria",
            "type": "string"
          },
          {
            "name": "noteCode",
            "in": "query",
            "required": false,
            "description": "Code of the Note Type added to the Search criteria",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Default Application Note text.",
            "schema": {
              "$ref": "#/definitions/defaultNoteDetails"
            }
          },
          "204": {
            "description": "DefaultNote not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/departments": {
      "get": {
        "summary": "Get Departments",
        "description": "Use this API to get Departments. <p><strong>OperationId:</strong>getDepartments</p>",
        "operationId": "getDepartments",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "departmentCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "departmentWildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching departments.",
            "schema": {
              "$ref": "#/definitions/departmentsDetails"
            }
          },
          "204": {
            "description": "Departments not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create Departments",
        "description": "Use this API to create Departments. <p><strong>OperationId:</strong>postDepartments</p>",
        "operationId": "postDepartments",
        "parameters": [
          {
            "name": "departmentsCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating new departments.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/departmentsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/departments/{departmentCode}": {
      "delete": {
        "summary": "Delete Departments",
        "description": "Use this API to delete Departments. <p><strong>OperationId:</strong>removeDepartments</p>",
        "operationId": "removeDepartments",
        "parameters": [
          {
            "name": "departmentCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of department."
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Hotel where the code is configured.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "put": {
        "summary": "Change Departments",
        "description": "Use this API to update Departments. <p><strong>OperationId:</strong>changeDepartments</p>",
        "operationId": "changeDepartments",
        "parameters": [
          {
            "name": "departmentCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of department."
          },
          {
            "name": "departmentsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for updating departments.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/departmentsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/flexFields": {
      "get": {
        "summary": "Operation to fetch flex fields.",
        "description": "API to fetch flex fields. <p><strong>OperationId:</strong>getFlexFields</p> <p>The maximum allowable limit for this API is <strong>50</strong>.</p>",
        "operationId": "getFlexFields",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code",
            "items": {
              "type": "string",
              "maxItems": 50
            },
            "required": false
          },
          {
            "name": "flexFieldId",
            "in": "query",
            "type": "number",
            "description": "Flex field ID",
            "required": false
          },
          {
            "name": "code",
            "in": "query",
            "type": "string",
            "description": "Flex field code",
            "required": false
          },
          {
            "name": "module",
            "in": "query",
            "type": "string",
            "description": "Flex field module",
            "required": false
          },
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines whether to fetch inactive records or not",
            "type": "boolean"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "default": 50,
            "maximum": 100,
            "description": "Indicates maximum number of records a Web Service should return. Default is 50",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching flex fields.",
            "schema": {
              "$ref": "#/definitions/flexFieldsResponse"
            }
          },
          "204": {
            "description": "Flex field details not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Operation to create a flex field.",
        "description": "Operation to create a flex field. <p><strong>OperationId:</strong>postFlexField</p>",
        "operationId": "postFlexField",
        "parameters": [
          {
            "name": "flexFieldDetail",
            "in": "body",
            "required": true,
            "description": "Request object to create a new flex field",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/flexFieldCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/hotelCategories": {
      "get": {
        "summary": "Get Hotel Categories",
        "description": ". <p><strong>OperationId:</strong>getHotelCategories</p>",
        "operationId": "getHotelCategories",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Hotel Categories.",
            "schema": {
              "$ref": "#/definitions/hotelCategoriesDetails"
            }
          },
          "204": {
            "description": "HotelCategories not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create Hotel Categories",
        "description": ". <p><strong>OperationId:</strong>postHotelCategories</p>",
        "operationId": "postHotelCategories",
        "parameters": [
          {
            "name": "hotelCategoriesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Hotel Categories.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelCategoriesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/hotelCategories/{categoryCode}": {
      "put": {
        "summary": "Change Hotel Categories",
        "description": ". <p><strong>OperationId:</strong>changeHotelCategories</p>",
        "operationId": "changeHotelCategories",
        "parameters": [
          {
            "name": "categoryCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of Categories."
          },
          {
            "name": "hotelCategoriesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Hotel Categories.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelCategoriesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete Hotel Categories",
        "description": ". <p><strong>OperationId:</strong>removeHotelCategories</p>",
        "operationId": "removeHotelCategories",
        "parameters": [
          {
            "name": "categoryCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of Categories."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/hotelDetails": {
      "get": {
        "summary": "Get hotel details specified at the template level",
        "description": "Use this API to get hotel details specified at the template level. <p><strong>OperationId:</strong>getTemplateHotelDetails</p>",
        "operationId": "getTemplateHotelDetails",
        "parameters": [
          {
            "name": "hotelDetailCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "hotelDetailCategoriesCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching hotel details at the template level.",
            "schema": {
              "$ref": "#/definitions/templateHotelDetailsDetails"
            }
          },
          "204": {
            "description": "TemplateHotelDetails not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create hotel details at the template level",
        "description": "Use this API to create hotel details at the template level. <p><strong>OperationId:</strong>postTemplateHotelDetails</p>",
        "operationId": "postTemplateHotelDetails",
        "parameters": [
          {
            "name": "templateHotelDetailsCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating hotel details at the template level.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateHotelDetailsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "put": {
        "summary": "Change hotel details specified at the template level",
        "description": "Use this API to update hotel details specified at the template level. <p><strong>OperationId:</strong>changeTemplateHotelDetails</p>",
        "operationId": "changeTemplateHotelDetails",
        "parameters": [
          {
            "name": "templateHotelDetailsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing hotel details at the template level.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateHotelDetailsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete hotel details specified at the template level",
        "description": "Use this API to delete hotel details specified at the template level. <p><strong>OperationId:</strong>removeTemplateHotelDetails</p>",
        "operationId": "removeTemplateHotelDetails",
        "parameters": [
          {
            "name": "templateHotelDetailCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Specifies the hotel detail code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "templateHotelDetailCategory",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Specifies the hotel detail category.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotelDetails/copy": {
      "put": {
        "summary": "Copy template hotel details to other properties",
        "description": "Use this API to copy template hotel details to other properties. <p><strong>OperationId:</strong>copyHotelDetails</p>",
        "operationId": "copyHotelDetails",
        "parameters": [
          {
            "name": "copyHotelDetails",
            "in": "body",
            "required": true,
            "description": "Request object for copying template hotel details to hotel(s).",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/copyHotelDetails"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels": {
      "get": {
        "summary": "Get property configuration",
        "description": "Use this API to return hotel configuration information based on search criteria such as hotelId, name.<p><strong>OperationId:</strong>getHotels</p>",
        "operationId": "getHotels",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Code identifying the hotel.",
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "description": "Hotel name to be searched.",
            "type": "string"
          },
          {
            "name": "countryCode",
            "description": "Code for a country or a nationality (e.g. SW, USA, IN). This is configured chain wise and can be retrieved via /lov/{version}/listOfValues/Countries",
            "in": "query",
            "required": false,
            "type": "string",
            "minLength": 0,
            "maxLength": 10
          },
          {
            "name": "marketingRegionCode",
            "description": "Marketing Region Code where the given cities are located. This is configured chain wise and can be retrieved via /lov/{version}/listOfValues/MarketingRegions",
            "in": "query",
            "required": false,
            "type": "string",
            "minLength": 0,
            "maxLength": 40
          },
          {
            "name": "marketingCity",
            "description": "Marketing City where the properties are located. This is configured chain wise and can be retrieved via /lov/{version}/listOfValues/MarketingCityTemplates",
            "in": "query",
            "required": false,
            "type": "string",
            "minLength": 0,
            "maxLength": 40
          },
          {
            "name": "propertyTypeCode",
            "in": "query",
            "required": false,
            "type": "array",
            "description": "Property Type to filter the search result. This is configured chain wise and can be retrieved via /lov/{version}/listOfValues/HotelTypes",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            }
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Indicates the search mode to further filter the properties, ex: when it is marked as CateringEvent, it should fetch the CATERING_EVENTS active properties",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "CateringEvent"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching lists of Property summary information.",
            "schema": {
              "$ref": "#/definitions/hotelsDetails"
            }
          },
          "204": {
            "description": "Hotels not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/attractions/{attractionCode}": {
      "delete": {
        "summary": "Delete Attractions",
        "description": " Use this API to remove an existing attraction. <p><strong>OperationId:</strong>removeAttractionsByCode</p>",
        "operationId": "removeAttractionsByCode",
        "parameters": [
          {
            "name": "attractionCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of attraction."
          },
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel where the code is configured.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}": {
      "get": {
        "summary": "Get hotel property configuration details",
        "description": "Use this API to return hotel configuration information details for a specific property.  Specific areas of configuration can be returned based on the fetchInstructions query parameter such as General, Attraction, Airports, Alternatehotels, Raterange, etc.<p><strong>OperationId:</strong>getHotel</p>",
        "operationId": "getHotel",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple type for hotel fetch instruction.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "General",
                "Attraction",
                "Transportation",
                "Package",
                "Dining",
                "Feature",
                "Directions",
                "GeneralNotes",
                "Airports",
                "Alternatehotels",
                "Miscellaneous",
                "Raterange",
                "Contacts",
                "EventSpaces",
                "Notes",
                "Corporateinformation",
                "Meetingrooms"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Property configuration information.",
            "schema": {
              "$ref": "#/definitions/hotelDetails"
            },
            "examples": {
              "application/json": {
                "hotelConfigInfo": {
                  "primaryDetails": {
                    "legalOwner": "string"
                  },
                  "generalInformation": {
                    "hotelType": "string",
                    "roomCount": 0,
                    "bedCount": 0,
                    "floorCount": 0,
                    "checkInTime": "2020-08-26T15:00:10.503Z",
                    "checkOutTime": "2020-08-26T15:00:10.503Z",
                    "hotelInfoWebsite": {
                      "value": "string",
                      "type": "string",
                      "typeDescription": "string",
                      "primaryInd": true,
                      "orderSequence": 0
                    },
                    "longitude": 0,
                    "latitude": 0,
                    "baseLanguage": "string"
                  },
                  "accommodationDetails": {
                    "singleRooms": 0,
                    "doubleRooms": 0,
                    "twinRooms": 0,
                    "familyRooms": 0,
                    "connectingRooms": 0,
                    "accessibleRooms": 0,
                    "nonSmokingRooms": 0,
                    "maxAdultsInFamilyRoom": 0,
                    "maxChildrenInFamilyRoom": 0,
                    "guestRoomFloors": 0,
                    "guestRoomElevators": 0,
                    "suites": 0,
                    "executiveFloorNo": "string",
                    "roomAmenties": "string",
                    "shopDescription": "string"
                  },
                  "propertyControls": {
                    "sellControls": {
                      "startDate": "2020-08-26",
                      "endDate": "2020-08-26",
                      "hotelId": "string"
                    },
                    "currencyFormatting": {
                      "currencyCode": "string",
                      "currencyFormat": "string",
                      "currencySymbol": "string",
                      "decimalPositions": 0
                    },
                    "cateringCurrencyFormatting": {
                      "currencyCode": "string",
                      "currencyFormat": "string"
                    },
                    "dateTimeFormatting": {
                      "longDateFormat": "string",
                      "shortDateFormat": "string",
                      "timeFormat": "string",
                      "timeZoneRegion": "string"
                    },
                    "applicationMode": {
                      "configurationMode": "string",
                      "countryMode": "string",
                      "expHotelCode": "string",
                      "touristNumber": "string",
                      "mbsSupported": true
                    }
                  },
                  "communication": {
                    "phoneNumber": {
                      "phoneTechType": "string",
                      "phoneUseType": "string",
                      "phoneUseTypeDescription": "string",
                      "phoneNumber": "string",
                      "extension": "string",
                      "primaryInd": true,
                      "orderSequence": 0,
                      "createDateTime": "2020-08-26T15:00:10.503Z",
                      "creatorId": "string",
                      "lastModifyDateTime": "2020-08-26T15:00:10.503Z",
                      "lastModifierId": "string",
                      "purgeDate": "2020-08-26"
                    },
                    "tollFreeNumber": {
                      "phoneTechType": "string",
                      "phoneUseType": "string",
                      "phoneUseTypeDescription": "string",
                      "phoneNumber": "string",
                      "extension": "string",
                      "primaryInd": true,
                      "orderSequence": 0,
                      "createDateTime": "2020-08-26T15:00:10.503Z",
                      "creatorId": "string",
                      "lastModifyDateTime": "2020-08-26T15:00:10.503Z",
                      "lastModifierId": "string",
                      "purgeDate": "2020-08-26"
                    },
                    "faxNumber": {
                      "phoneTechType": "string",
                      "phoneUseType": "string",
                      "phoneUseTypeDescription": "string",
                      "phoneNumber": "string",
                      "extension": "string",
                      "primaryInd": true,
                      "orderSequence": 0,
                      "createDateTime": "2020-08-26T15:00:10.503Z",
                      "creatorId": "string",
                      "lastModifyDateTime": "2020-08-26T15:00:10.503Z",
                      "lastModifierId": "string",
                      "purgeDate": "2020-08-26"
                    },
                    "emailAddress": "string",
                    "webPage": {
                      "value": "string",
                      "type": "string",
                      "typeDescription": "string",
                      "primaryInd": true,
                      "orderSequence": 0
                    }
                  },
                  "address": {
                    "addressLine": [
                      "string"
                    ],
                    "cityName": "string",
                    "postalCode": "string",
                    "cityExtension": "string",
                    "county": "string",
                    "state": "string",
                    "country": {
                      "value": "string",
                      "code": "string"
                    },
                    "language": "string",
                    "type": "string",
                    "typeDescription": "string",
                    "primaryInd": true,
                    "updateReservations": true,
                    "barCode": "string",
                    "createDateTime": "2020-08-26T15:00:10.503Z",
                    "creatorId": "string",
                    "lastModifyDateTime": "2020-08-26T15:00:10.503Z",
                    "lastModifierId": "string",
                    "purgeDate": "2020-08-26",
                    "regionCode": "string"
                  },
                  "hotelRestaurants": [
                    {
                      "restaurantName": "string",
                      "restaurantType": "string",
                      "hours": "string",
                      "priceRange": "string",
                      "comments": "string",
                      "category": "Restaurant",
                      "timeSpan": {
                        "startDate": "2020-08-26",
                        "endDate": "2020-08-26",
                        "duration": "string"
                      },
                      "newRestaurantCode": "string",
                      "restaurantCode": "string",
                      "orderBy": 0,
                      "hotelId": "string"
                    }
                  ],
                  "hotelRateRanges": [
                    {
                      "timeSpan": {
                        "startDate": "2020-08-26",
                        "endDate": "2020-08-26",
                        "duration": "string"
                      },
                      "minRate": 0,
                      "maxRate": 0,
                      "currencyCode": "string",
                      "hotelId": "string"
                    }
                  ],
                  "alternateHotels": [
                    {
                      "address": {
                        "addressLine": [
                          "string"
                        ],
                        "cityName": "string",
                        "postalCode": "string",
                        "cityExtension": "string",
                        "county": "string",
                        "state": "string",
                        "country": {
                          "value": "string",
                          "code": "string"
                        },
                        "language": "string",
                        "type": "string",
                        "typeDescription": "string",
                        "primaryInd": true,
                        "updateReservations": true,
                        "barCode": "string",
                        "createDateTime": "2020-08-26T15:00:10.504Z",
                        "creatorId": "string",
                        "lastModifyDateTime": "2020-08-26T15:00:10.504Z",
                        "lastModifierId": "string",
                        "purgeDate": "2020-08-26"
                      },
                      "contactNumbers": [
                        {
                          "phoneTechType": "string",
                          "phoneUseType": "string",
                          "phoneUseTypeDescription": "string",
                          "phoneNumber": "string",
                          "extension": "string",
                          "primaryInd": true,
                          "orderSequence": 0,
                          "createDateTime": "2020-08-26T15:00:10.504Z",
                          "creatorId": "string",
                          "lastModifyDateTime": "2020-08-26T15:00:10.504Z",
                          "lastModifierId": "string",
                          "purgeDate": "2020-08-26"
                        }
                      ],
                      "minRate": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "maxRate": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "relativePosition": {
                        "distance": 0,
                        "distanceType": "string",
                        "drivingTime": "string"
                      },
                      "hotelAmenities": [
                        {
                          "description": "string",
                          "code": "string",
                          "type": "string",
                          "displayOrder": 0
                        }
                      ],
                      "event": true,
                      "rateRoomDetails": {
                        "memberships": [
                          {
                            "membershipId": "string",
                            "membershipLevel": [
                              "string"
                            ],
                            "membershipType": [
                              "string"
                            ],
                            "associatedReservationsOnly": true
                          }
                        ],
                        "restrictionType": "Closed",
                        "roomStays": [
                          {
                            "roomRates": [
                              {
                                "total": {
                                  "taxes": {
                                    "tax": [
                                      {
                                        "description": "string",
                                        "type": "Inclusive",
                                        "code": "string",
                                        "amount": 0,
                                        "currencyCode": "string"
                                      }
                                    ],
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "fees": {
                                    "fee": [
                                      {
                                        "description": "string",
                                        "type": "Inclusive",
                                        "code": "string",
                                        "amount": 0,
                                        "currencyCode": "string"
                                      }
                                    ],
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "description": "string",
                                  "amountBeforeTax": 0,
                                  "amountAfterTax": 0,
                                  "currencyCode": "string",
                                  "currencySymbol": "string",
                                  "decimalPlaces": 0,
                                  "code": "string",
                                  "rateOverride": true
                                },
                                "totalPoints": {
                                  "awardsType": "string",
                                  "points": 0
                                },
                                "rates": {
                                  "rate": [
                                    {
                                      "base": {
                                        "taxes": {
                                          "tax": [
                                            {
                                              "description": "string",
                                              "type": "Inclusive",
                                              "code": "string",
                                              "amount": 0,
                                              "currencyCode": "string"
                                            }
                                          ],
                                          "amount": 0,
                                          "currencyCode": "string"
                                        },
                                        "fees": {
                                          "fee": [
                                            {
                                              "description": "string",
                                              "type": "Inclusive",
                                              "code": "string",
                                              "amount": 0,
                                              "currencyCode": "string"
                                            }
                                          ],
                                          "amount": 0,
                                          "currencyCode": "string"
                                        },
                                        "description": "string",
                                        "amountBeforeTax": 0,
                                        "amountAfterTax": 0,
                                        "currencyCode": "string",
                                        "currencySymbol": "string",
                                        "decimalPlaces": 0,
                                        "code": "string",
                                        "rateOverride": true
                                      },
                                      "additionalGuestAmounts": [
                                        {
                                          "amount": {
                                            "taxes": {
                                              "tax": [
                                                {
                                                  "description": "string",
                                                  "type": "Inclusive",
                                                  "code": "string",
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                }
                                              ],
                                              "amount": 0,
                                              "currencyCode": "string"
                                            },
                                            "fees": {
                                              "fee": [
                                                {
                                                  "description": "string",
                                                  "type": "Inclusive",
                                                  "code": "string",
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                }
                                              ],
                                              "amount": 0,
                                              "currencyCode": "string"
                                            },
                                            "description": "string",
                                            "amountBeforeTax": 0,
                                            "amountAfterTax": 0,
                                            "currencyCode": "string",
                                            "currencySymbol": "string",
                                            "decimalPlaces": 0,
                                            "code": "string",
                                            "rateOverride": true
                                          },
                                          "ageQualifyingCode": "ADULT"
                                        }
                                      ],
                                      "discount": {
                                        "discountReason": "string",
                                        "percent": 0,
                                        "amount": 0,
                                        "currencyCode": "string",
                                        "discountCode": "string"
                                      },
                                      "shareRatePercentage": 0,
                                      "shareDistributionInstruction": "Full",
                                      "total": {
                                        "taxes": {
                                          "tax": [
                                            {
                                              "description": "string",
                                              "type": "Inclusive",
                                              "code": "string",
                                              "amount": 0,
                                              "currencyCode": "string"
                                            }
                                          ],
                                          "amount": 0,
                                          "currencyCode": "string"
                                        },
                                        "fees": {
                                          "fee": [
                                            {
                                              "description": "string",
                                              "type": "Inclusive",
                                              "code": "string",
                                              "amount": 0,
                                              "currencyCode": "string"
                                            }
                                          ],
                                          "amount": 0,
                                          "currencyCode": "string"
                                        },
                                        "description": "string",
                                        "amountBeforeTax": 0,
                                        "amountAfterTax": 0,
                                        "currencyCode": "string",
                                        "currencySymbol": "string",
                                        "decimalPlaces": 0,
                                        "code": "string",
                                        "rateOverride": true
                                      },
                                      "requiredPoints": {
                                        "awardsType": "string",
                                        "points": 0
                                      },
                                      "effectiveRate": {
                                        "taxes": {
                                          "tax": [
                                            {
                                              "description": "string",
                                              "type": "Inclusive",
                                              "code": "string",
                                              "amount": 0,
                                              "currencyCode": "string"
                                            }
                                          ],
                                          "amount": 0,
                                          "currencyCode": "string"
                                        },
                                        "fees": {
                                          "fee": [
                                            {
                                              "description": "string",
                                              "type": "Inclusive",
                                              "code": "string",
                                              "amount": 0,
                                              "currencyCode": "string"
                                            }
                                          ],
                                          "amount": 0,
                                          "currencyCode": "string"
                                        },
                                        "description": "string",
                                        "amountBeforeTax": 0,
                                        "amountAfterTax": 0,
                                        "currencyCode": "string",
                                        "currencySymbol": "string",
                                        "decimalPlaces": 0,
                                        "code": "string",
                                        "rateOverride": true
                                      },
                                      "start": "2020-08-26",
                                      "end": "2020-08-26"
                                    }
                                  ],
                                  "rateRange": [
                                    {
                                      "base": [
                                        {
                                          "taxes": {
                                            "tax": [
                                              {
                                                "description": "string",
                                                "type": "Inclusive",
                                                "code": "string",
                                                "amount": 0,
                                                "currencyCode": "string"
                                              }
                                            ],
                                            "amount": 0,
                                            "currencyCode": "string"
                                          },
                                          "fees": {
                                            "fee": [
                                              {
                                                "description": "string",
                                                "type": "Inclusive",
                                                "code": "string",
                                                "amount": 0,
                                                "currencyCode": "string"
                                              }
                                            ],
                                            "amount": 0,
                                            "currencyCode": "string"
                                          },
                                          "description": "string",
                                          "amountBeforeTax": 0,
                                          "amountAfterTax": 0,
                                          "currencyCode": "string",
                                          "currencySymbol": "string",
                                          "decimalPlaces": 0,
                                          "code": "string",
                                          "rateOverride": true
                                        }
                                      ],
                                      "rateChange": true
                                    }
                                  ]
                                },
                                "packages": [
                                  {
                                    "amount": {
                                      "amount": 0,
                                      "currencyCode": "string"
                                    },
                                    "allowance": {
                                      "amount": 0,
                                      "currencyCode": "string"
                                    },
                                    "description": [
                                      "string"
                                    ],
                                    "startDate": "2020-08-26",
                                    "endDate": "2020-08-26",
                                    "packageCode": "string",
                                    "calculationRule": "string",
                                    "postingRhythm": "string",
                                    "quantity": 0,
                                    "includedInRate": true,
                                    "addRateSeprateLine": true,
                                    "addRateCombinedLine": true,
                                    "startTime": "string",
                                    "endTime": "string",
                                    "sellSeparate": true
                                  }
                                ],
                                "stayProfiles": [
                                  {
                                    "profileIdList": [
                                      {
                                        "id": "string",
                                        "type": "string"
                                      }
                                    ],
                                    "profile": {
                                      "customer": {
                                        "personName": [
                                          {
                                            "namePrefix": "string",
                                            "givenName": "string",
                                            "middleName": "string",
                                            "surname": "string",
                                            "nameSuffix": "string",
                                            "nameTitle": "string",
                                            "nameTitleSuffix": 0,
                                            "envelopeGreeting": "string",
                                            "salutation": "string",
                                            "nameType": "Primary",
                                            "language": "string",
                                            "externalSystem": "string"
                                          }
                                        ],
                                        "anonymization": {
                                          "anonymizationStatus": "Requested",
                                          "anonymizationDate": "2020-08-26T15:00:10.506Z"
                                        },
                                        "citizenCountry": {
                                          "value": "string",
                                          "code": "string"
                                        },
                                        "identifications": {
                                          "identificationInfo": [
                                            {
                                              "identification": {
                                                "idType": "string",
                                                "idNumber": "string",
                                                "idNumberMasked": "string",
                                                "issuedCountry": "string",
                                                "issuedDate": "2020-08-26",
                                                "issuedPlace": "string",
                                                "expirationDate": "2020-08-26",
                                                "registeredProperty": "string",
                                                "primaryInd": true,
                                                "orderSequence": 0
                                              },
                                              "id": "string",
                                              "type": "string"
                                            }
                                          ],
                                          "hasMore": true,
                                          "totalResults": 0,
                                          "count": 0
                                        },
                                        "profession": "string",
                                        "alienInfo": {
                                          "alienRegistrationNo": "string",
                                          "immigrationStatus": "string",
                                          "visaValidityType": "string"
                                        },
                                        "birthCountry": {
                                          "value": "string",
                                          "code": "string"
                                        },
                                        "legalCompany": "string",
                                        "companyInfo": {
                                          "legalCompany": "string",
                                          "department": "string",
                                          "position": "string"
                                        },
                                        "businessTitle": "string",
                                        "gender": "Male",
                                        "birthDate": "2020-08-26",
                                        "birthDateMasked": "string",
                                        "currencyCode": "string",
                                        "currencySymbol": "string",
                                        "decimalPlaces": 0,
                                        "language": "string",
                                        "nationality": "string",
                                        "nationalityDescription": "string",
                                        "customerValue": "string",
                                        "creditRating": "string",
                                        "vipStatus": "string",
                                        "vipDescription": "string",
                                        "birthPlace": "string",
                                        "privateProfile": true,
                                        "blacklist": true
                                      },
                                      "company": {
                                        "companyName": "string",
                                        "companyName2": "string",
                                        "companyName3": "string",
                                        "alternateName": "string",
                                        "alternateLanguage": "string",
                                        "businessLocale": "string",
                                        "iATAInfo": {
                                          "iATACompany": "string",
                                          "iATAConsortia": "string",
                                          "iATAValidationResult": true
                                        },
                                        "businessTitle": "string",
                                        "currencyCode": "string",
                                        "currencySymbol": "string",
                                        "decimalPlaces": 0,
                                        "language": "string",
                                        "nationality": "string",
                                        "nationalityDescription": "string",
                                        "commissionCode": "string",
                                        "creditRating": "string",
                                        "corporateIdType": "string",
                                        "vipStatus": "string",
                                        "vipDescription": "string",
                                        "blacklist": true
                                      },
                                      "profileImage": {
                                        "language": "string",
                                        "imageSet": "string",
                                        "sequenceId": 0,
                                        "imageStyle": "Full",
                                        "imageType": "string",
                                        "hotelId": "string",
                                        "chainCode": "string",
                                        "imageURL": "string",
                                        "description": "string",
                                        "imageOrder": 0,
                                        "website": "string"
                                      },
                                      "addresses": {
                                        "addressInfo": [
                                          {
                                            "address": {
                                              "addressLine": [
                                                "string"
                                              ],
                                              "cityName": "string",
                                              "postalCode": "string",
                                              "cityExtension": "string",
                                              "county": "string",
                                              "state": "string",
                                              "country": {
                                                "value": "string",
                                                "code": "string"
                                              },
                                              "language": "string",
                                              "type": "string",
                                              "typeDescription": "string",
                                              "primaryInd": true,
                                              "updateReservations": true,
                                              "barCode": "string",
                                              "createDateTime": "2020-08-26T15:00:10.507Z",
                                              "creatorId": "string",
                                              "lastModifyDateTime": "2020-08-26T15:00:10.507Z",
                                              "lastModifierId": "string",
                                              "purgeDate": "2020-08-26"
                                            },
                                            "id": "string",
                                            "type": "string"
                                          }
                                        ],
                                        "hasMore": true,
                                        "totalResults": 0,
                                        "count": 0
                                      },
                                      "businessSegments": [
                                        "string"
                                      ],
                                      "territory": "string",
                                      "traceCode": "string",
                                      "ownerCode": "string",
                                      "influenceCode": "string",
                                      "telephones": {
                                        "telephoneInfo": [
                                          {
                                            "telephone": {
                                              "phoneTechType": "string",
                                              "phoneUseType": "string",
                                              "phoneUseTypeDescription": "string",
                                              "phoneNumber": "string",
                                              "extension": "string",
                                              "primaryInd": true,
                                              "orderSequence": 0,
                                              "createDateTime": "2020-08-26T15:00:10.507Z",
                                              "creatorId": "string",
                                              "lastModifyDateTime": "2020-08-26T15:00:10.507Z",
                                              "lastModifierId": "string",
                                              "purgeDate": "2020-08-26"
                                            },
                                            "id": "string",
                                            "type": "string"
                                          }
                                        ],
                                        "hasMore": true,
                                        "totalResults": 0,
                                        "count": 0
                                      },
                                      "emails": {
                                        "emailInfo": [
                                          {
                                            "email": {
                                              "emailAddress": "string",
                                              "type": "string",
                                              "typeDescription": "string",
                                              "emailFormat": "Html",
                                              "primaryInd": true,
                                              "orderSequence": 0,
                                              "createDateTime": "2020-08-26T15:00:10.507Z",
                                              "creatorId": "string",
                                              "lastModifyDateTime": "2020-08-26T15:00:10.507Z",
                                              "lastModifierId": "string",
                                              "purgeDate": "2020-08-26"
                                            },
                                            "id": "string",
                                            "type": "string"
                                          }
                                        ],
                                        "hasMore": true,
                                        "totalResults": 0,
                                        "count": 0
                                      },
                                      "uRLs": {
                                        "uRLInfo": [
                                          {
                                            "url": {
                                              "value": "string",
                                              "type": "string",
                                              "typeDescription": "string",
                                              "primaryInd": true,
                                              "orderSequence": 0
                                            },
                                            "id": "string",
                                            "type": "string"
                                          }
                                        ],
                                        "hasMore": true,
                                        "totalResults": 0,
                                        "count": 0
                                      },
                                      "comments": {
                                        "commentInfo": [
                                          {
                                            "comment": {
                                              "text": {
                                                "value": "string",
                                                "language": "string"
                                              },
                                              "image": "string",
                                              "url": "string",
                                              "commentTitle": "string",
                                              "notificationLocation": "string",
                                              "type": "string",
                                              "typeDescription": "string",
                                              "internal": true,
                                              "confidential": true,
                                              "overrideInternal": true,
                                              "protectDescription": true,
                                              "hotelId": "string",
                                              "actionType": "string",
                                              "actionDate": "2020-08-26",
                                              "createDateTime": "2020-08-26T15:00:10.507Z",
                                              "creatorId": "string",
                                              "lastModifyDateTime": "2020-08-26T15:00:10.507Z",
                                              "lastModifierId": "string",
                                              "purgeDate": "2020-08-26"
                                            },
                                            "createDateTime": "2020-08-26T15:00:10.507Z",
                                            "creatorId": "string",
                                            "lastModifyDateTime": "2020-08-26T15:00:10.507Z",
                                            "lastModifierId": "string",
                                            "purgeDate": "2020-08-26",
                                            "id": "string",
                                            "type": "string"
                                          }
                                        ],
                                        "hasMore": true,
                                        "totalResults": 0,
                                        "count": 0
                                      },
                                      "profileDeliveryMethods": {
                                        "profileDeliveryMethod": [
                                          {
                                            "deliveryId": {
                                              "id": "string",
                                              "type": "string"
                                            },
                                            "deliveryType": "string",
                                            "deliveryValue": "string",
                                            "hotelId": "string",
                                            "deliveryModule": "EfolioExport",
                                            "primaryInd": true,
                                            "orderSequence": 0
                                          }
                                        ],
                                        "hasMore": true,
                                        "totalResults": 0,
                                        "count": 0
                                      },
                                      "profileMemberships": {
                                        "profileMembership": [
                                          {
                                            "comment": {
                                              "text": {
                                                "value": "string",
                                                "language": "string"
                                              },
                                              "image": "string",
                                              "url": "string"
                                            },
                                            "newMembershipNumber": "string",
                                            "nameOnCard": "string",
                                            "programDescription": "string",
                                            "membershipLevel": "string",
                                            "membershipLevelDescription": "string",
                                            "membershipClass": "string",
                                            "earningPreference": "Points",
                                            "inactive": true,
                                            "benefits": [
                                              {
                                                "code": "string",
                                                "message": "string",
                                                "inactive": true
                                              }
                                            ],
                                            "tierAdministration": "Disabled",
                                            "downgrade": "Grace",
                                            "reIssueNewCard": "Pending",
                                            "excludeFromBatch": true,
                                            "upgradeDescription": "string",
                                            "downgradeDescription": "string",
                                            "rating": "string",
                                            "membershipEnrollmentCode": "string",
                                            "memberStatus": "string",
                                            "currentPoints": 0,
                                            "pointsLabel": "string",
                                            "enrollmentSource": "string",
                                            "enrollmentResort": "string",
                                            "preferredCard": true,
                                            "membershipId": "string",
                                            "membershipType": "string",
                                            "primaryMembershipYn": "string",
                                            "primaryMembership": true,
                                            "membershipIdNo": 0,
                                            "playerRanking": 0,
                                            "centralSetup": true,
                                            "signupDate": "2020-08-26",
                                            "effectiveDate": "2020-08-26",
                                            "expireDate": "2020-08-26",
                                            "expireDateExclusiveIndicator": true,
                                            "orderSequence": 0,
                                            "createDateTime": "2020-08-26T15:00:10.508Z",
                                            "creatorId": "string",
                                            "lastModifyDateTime": "2020-08-26T15:00:10.508Z",
                                            "lastModifierId": "string",
                                            "purgeDate": "2020-08-26"
                                          }
                                        ],
                                        "hasMore": true,
                                        "totalResults": 0,
                                        "count": 0
                                      },
                                      "preferenceCollection": {
                                        "preferenceType": [
                                          {
                                            "preference": [
                                              {
                                                "preferenceValue": "string",
                                                "description": "string",
                                                "global": true,
                                                "source": "string",
                                                "hotels": [
                                                  "string"
                                                ],
                                                "preferenceId": "string",
                                                "excludedPreferencesCount": 0
                                              }
                                            ],
                                            "preferenceType": "string",
                                            "preferenceTypeDescription": "string",
                                            "sequence": "string",
                                            "maxQuantity": 0,
                                            "availableQuantity": 0,
                                            "maxResortUsedQuantity": 0,
                                            "reservationPreference": true,
                                            "createDateTime": "2020-08-26T15:00:10.508Z",
                                            "creatorId": "string",
                                            "lastModifyDateTime": "2020-08-26T15:00:10.508Z",
                                            "lastModifierId": "string",
                                            "purgeDate": "2020-08-26"
                                          }
                                        ],
                                        "hasMore": true,
                                        "totalResults": 0,
                                        "count": 0
                                      },
                                      "keywords": {
                                        "keyword": [
                                          {
                                            "keywordDetail": {
                                              "newKeyword": "string"
                                            },
                                            "type": "string",
                                            "keyword": "string"
                                          }
                                        ],
                                        "hasMore": true,
                                        "totalResults": 0,
                                        "count": 0
                                      },
                                      "negotiatedRates": {
                                        "negotiatedRate": [
                                          {
                                            "negotiatedInfoList": [
                                              {
                                                "corporateAgreementId": "string",
                                                "comissionCode": "string",
                                                "order": 0,
                                                "inactive": true,
                                                "start": "2020-08-26",
                                                "end": "2020-08-26"
                                              }
                                            ],
                                            "hotelId": "string",
                                            "rateCode": "string"
                                          }
                                        ],
                                        "hasMore": true,
                                        "totalResults": 0,
                                        "count": 0
                                      },
                                      "gdsNegotiatedRates": {
                                        "gdsNegotiatedRate": [
                                          {
                                            "gdsNegotiatedInfoList": [
                                              {
                                                "accessCode": "string",
                                                "order": 0,
                                                "inactive": true,
                                                "start": "2020-08-26",
                                                "end": "2020-08-26"
                                              }
                                            ],
                                            "bookingChannelCode": "string",
                                            "hotelId": "string",
                                            "channelRatePlanCode": "string"
                                          }
                                        ],
                                        "hasMore": true,
                                        "totalResults": 0,
                                        "count": 0
                                      },
                                      "profileIndicators": [
                                        {
                                          "indicatorName": "string",
                                          "count": 0
                                        }
                                      ],
                                      "relationships": {
                                        "relationship": [
                                          {
                                            "changeRelationship": {
                                              "id": "string",
                                              "relation": "string",
                                              "relationDescription": "string",
                                              "targetRelation": "string",
                                              "targetRelationDescription": "string"
                                            },
                                            "relationshipProfile": {
                                              "customer": {
                                                "personName": [
                                                  {
                                                    "namePrefix": "string",
                                                    "givenName": "string",
                                                    "middleName": "string",
                                                    "surname": "string",
                                                    "nameSuffix": "string",
                                                    "nameTitle": "string",
                                                    "nameTitleSuffix": 0,
                                                    "envelopeGreeting": "string",
                                                    "salutation": "string",
                                                    "nameType": "Primary",
                                                    "language": "string",
                                                    "externalSystem": "string"
                                                  }
                                                ],
                                                "anonymization": {
                                                  "anonymizationStatus": "Requested",
                                                  "anonymizationDate": "2020-08-26T15:00:10.508Z"
                                                },
                                                "citizenCountry": {
                                                  "value": "string",
                                                  "code": "string"
                                                },
                                                "identifications": {
                                                  "identificationInfo": [
                                                    {
                                                      "identification": {
                                                        "idType": "string",
                                                        "idNumber": "string",
                                                        "idNumberMasked": "string",
                                                        "issuedCountry": "string",
                                                        "issuedDate": "2020-08-26",
                                                        "issuedPlace": "string",
                                                        "expirationDate": "2020-08-26",
                                                        "registeredProperty": "string",
                                                        "primaryInd": true,
                                                        "orderSequence": 0
                                                      },
                                                      "id": "string",
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "hasMore": true,
                                                  "totalResults": 0,
                                                  "count": 0
                                                },
                                                "profession": "string",
                                                "alienInfo": {
                                                  "alienRegistrationNo": "string",
                                                  "immigrationStatus": "string",
                                                  "visaValidityType": "string"
                                                },
                                                "birthCountry": {
                                                  "value": "string",
                                                  "code": "string"
                                                },
                                                "legalCompany": "string",
                                                "companyInfo": {
                                                  "legalCompany": "string",
                                                  "department": "string",
                                                  "position": "string"
                                                },
                                                "businessTitle": "string",
                                                "gender": "Male",
                                                "birthDate": "2020-08-26",
                                                "birthDateMasked": "string",
                                                "currencyCode": "string",
                                                "currencySymbol": "string",
                                                "decimalPlaces": 0,
                                                "language": "string",
                                                "nationality": "string",
                                                "nationalityDescription": "string",
                                                "customerValue": "string",
                                                "creditRating": "string",
                                                "vipStatus": "string",
                                                "vipDescription": "string",
                                                "birthPlace": "string",
                                                "privateProfile": true,
                                                "blacklist": true
                                              },
                                              "company": {
                                                "companyName": "string",
                                                "companyName2": "string",
                                                "companyName3": "string",
                                                "alternateName": "string",
                                                "alternateLanguage": "string",
                                                "businessLocale": "string",
                                                "iATAInfo": {
                                                  "iATACompany": "string",
                                                  "iATAConsortia": "string",
                                                  "iATAValidationResult": true
                                                },
                                                "businessTitle": "string",
                                                "currencyCode": "string",
                                                "currencySymbol": "string",
                                                "decimalPlaces": 0,
                                                "language": "string",
                                                "nationality": "string",
                                                "nationalityDescription": "string",
                                                "commissionCode": "string",
                                                "creditRating": "string",
                                                "corporateIdType": "string",
                                                "vipStatus": "string",
                                                "vipDescription": "string",
                                                "blacklist": true
                                              },
                                              "telephone": {
                                                "telephone": {
                                                  "phoneTechType": "string",
                                                  "phoneUseType": "string",
                                                  "phoneUseTypeDescription": "string",
                                                  "phoneNumber": "string",
                                                  "extension": "string",
                                                  "primaryInd": true,
                                                  "orderSequence": 0,
                                                  "createDateTime": "2020-08-26T15:00:10.513Z",
                                                  "creatorId": "string",
                                                  "lastModifyDateTime": "2020-08-26T15:00:10.513Z",
                                                  "lastModifierId": "string",
                                                  "purgeDate": "2020-08-26"
                                                },
                                                "id": "string",
                                                "type": "string"
                                              },
                                              "address": {
                                                "address": {
                                                  "addressLine": [
                                                    "string"
                                                  ],
                                                  "cityName": "string",
                                                  "postalCode": "string",
                                                  "cityExtension": "string",
                                                  "county": "string",
                                                  "state": "string",
                                                  "country": {
                                                    "value": "string",
                                                    "code": "string"
                                                  },
                                                  "language": "string",
                                                  "type": "string",
                                                  "typeDescription": "string",
                                                  "primaryInd": true,
                                                  "updateReservations": true,
                                                  "barCode": "string",
                                                  "createDateTime": "2020-08-26T15:00:10.513Z",
                                                  "creatorId": "string",
                                                  "lastModifyDateTime": "2020-08-26T15:00:10.513Z",
                                                  "lastModifierId": "string",
                                                  "purgeDate": "2020-08-26"
                                                },
                                                "id": "string",
                                                "type": "string"
                                              },
                                              "email": {
                                                "email": {
                                                  "emailAddress": "string",
                                                  "type": "string",
                                                  "typeDescription": "string",
                                                  "emailFormat": "Html",
                                                  "primaryInd": true,
                                                  "orderSequence": 0,
                                                  "createDateTime": "2020-08-26T15:00:10.513Z",
                                                  "creatorId": "string",
                                                  "lastModifyDateTime": "2020-08-26T15:00:10.513Z",
                                                  "lastModifierId": "string",
                                                  "purgeDate": "2020-08-26"
                                                },
                                                "id": "string",
                                                "type": "string"
                                              },
                                              "uRLs": {
                                                "url": {
                                                  "value": "string",
                                                  "type": "string",
                                                  "typeDescription": "string",
                                                  "primaryInd": true,
                                                  "orderSequence": 0
                                                },
                                                "id": "string",
                                                "type": "string"
                                              },
                                              "primaryOwner": {
                                                "hotel": {
                                                  "code": "string",
                                                  "description": "string"
                                                },
                                                "userId": {
                                                  "id": "string",
                                                  "type": "string"
                                                },
                                                "userName": "string",
                                                "ownerCode": "string",
                                                "profileId": {
                                                  "url": "string",
                                                  "type": "string",
                                                  "instance": "string",
                                                  "idContext": "string",
                                                  "id": "string",
                                                  "idExtension": 0
                                                },
                                                "name": {
                                                  "namePrefix": "string",
                                                  "givenName": "string",
                                                  "middleName": "string",
                                                  "surname": "string",
                                                  "nameSuffix": "string",
                                                  "nameTitle": "string",
                                                  "nameTitleSuffix": 0,
                                                  "envelopeGreeting": "string",
                                                  "salutation": "string",
                                                  "nameType": "Primary",
                                                  "language": "string",
                                                  "externalSystem": "string"
                                                },
                                                "department": {
                                                  "code": "string",
                                                  "description": "string"
                                                },
                                                "email": {
                                                  "email": {
                                                    "emailAddress": "string",
                                                    "type": "string",
                                                    "typeDescription": "string",
                                                    "emailFormat": "Html",
                                                    "primaryInd": true,
                                                    "orderSequence": 0,
                                                    "createDateTime": "2020-08-26T15:00:10.513Z",
                                                    "creatorId": "string",
                                                    "lastModifyDateTime": "2020-08-26T15:00:10.513Z",
                                                    "lastModifierId": "string",
                                                    "purgeDate": "2020-08-26"
                                                  },
                                                  "id": "string",
                                                  "type": "string"
                                                },
                                                "phone": {
                                                  "telephone": {
                                                    "phoneTechType": "string",
                                                    "phoneUseType": "string",
                                                    "phoneUseTypeDescription": "string",
                                                    "phoneNumber": "string",
                                                    "extension": "string",
                                                    "primaryInd": true,
                                                    "orderSequence": 0,
                                                    "createDateTime": "2020-08-26T15:00:10.513Z",
                                                    "creatorId": "string",
                                                    "lastModifyDateTime": "2020-08-26T15:00:10.513Z",
                                                    "lastModifierId": "string",
                                                    "purgeDate": "2020-08-26"
                                                  },
                                                  "id": "string",
                                                  "type": "string"
                                                },
                                                "relationship": {
                                                  "code": "string",
                                                  "description": "string"
                                                },
                                                "primary": true
                                              },
                                              "profileIdList": [
                                                {
                                                  "id": "string",
                                                  "type": "string"
                                                }
                                              ],
                                              "changeProfileIdList": [
                                                {
                                                  "id": "string",
                                                  "type": "string"
                                                }
                                              ],
                                              "primary": "string",
                                              "id": "string",
                                              "statusCode": "Active",
                                              "profileType": "Guest"
                                            },
                                            "masterAccountInfo": {
                                              "masterAccountId": {
                                                "id": "string",
                                                "type": "string"
                                              },
                                              "masterAccountName": "string"
                                            },
                                            "id": "string",
                                            "relation": "string",
                                            "relationDescription": "string",
                                            "targetRelation": "string",
                                            "targetRelationDescription": "string"
                                          }
                                        ],
                                        "hasMore": true,
                                        "totalResults": 0,
                                        "count": 0
                                      },
                                      "reservationInfoList": {
                                        "historyList": {
                                          "reservationInfo": [
                                            {
                                              "reservationIdList": [
                                                {
                                                  "id": "string",
                                                  "type": "string"
                                                }
                                              ],
                                              "roomStay": {
                                                "arrivalDate": "2020-08-26",
                                                "departureDate": "2020-08-26",
                                                "originalTimeSpan": {
                                                  "startDate": "2020-08-26",
                                                  "endDate": "2020-08-26",
                                                  "duration": "string"
                                                },
                                                "expectedTimes": {
                                                  "reservationExpectedArrivalTime": "2020-08-26T15:00:10.514Z",
                                                  "reservationExpectedDepartureTime": "2020-08-26T15:00:10.514Z"
                                                },
                                                "adultCount": 0,
                                                "childCount": 0,
                                                "roomClass": "string",
                                                "roomType": "string",
                                                "numberOfRooms": 0,
                                                "roomNumber": "string",
                                                "ratePlanCode": "string",
                                                "rateAmount": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "points": {
                                                  "awardsType": "string",
                                                  "points": 0
                                                },
                                                "rateSuppressed": true,
                                                "reservationBlock": {
                                                  "blockIdList": [
                                                    {
                                                      "id": "string",
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "blockName": "string",
                                                  "hotelId": "string"
                                                },
                                                "bookingChannelCode": "string",
                                                "partyCode": "string",
                                                "fixedRate": true,
                                                "totalAmount": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "guarantee": {
                                                  "guaranteeCode": "string",
                                                  "shortDescription": "string",
                                                  "onHold": true
                                                },
                                                "promotion": {
                                                  "promotionCode": "string",
                                                  "promotionName": "string",
                                                  "couponCode": "string"
                                                },
                                                "marketCode": "string",
                                                "sourceOfBusiness": "string",
                                                "sourceOfBusinessDescription": "string",
                                                "balance": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "compBalance": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "roomTypeCharged": "string",
                                                "depositPayments": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "guestServiceStatus": "DoNotDisturb",
                                                "scheduledCheckoutTime": "2020-08-26",
                                                "roomNumberLocked": true,
                                                "pseudoRoom": true
                                              },
                                              "reservationGuest": {
                                                "membership": {
                                                  "membershipId": 0,
                                                  "programCode": "string",
                                                  "bonusCode": "string",
                                                  "membershipTypeDesc": "string",
                                                  "membershipLevelDesc": "string",
                                                  "accountId": "string",
                                                  "membershipLevel": "string",
                                                  "playerRanking": 0
                                                },
                                                "namePrefix": "string",
                                                "givenName": "string",
                                                "alternateGivenName": "string",
                                                "middleName": "string",
                                                "surnamePrefix": "string",
                                                "surname": "string",
                                                "alternateSurname": "string",
                                                "nameSuffix": "string",
                                                "nameTitle": "string",
                                                "fullName": "string",
                                                "alternateFullName": "string",
                                                "phoneNumber": "string",
                                                "email": "string",
                                                "birthDate": "2020-08-26",
                                                "language": "string",
                                                "nationality": {
                                                  "value": "string",
                                                  "code": "string"
                                                },
                                                "vip": {
                                                  "vipCode": "string",
                                                  "vipDescription": "string"
                                                },
                                                "address": {
                                                  "cityName": "string",
                                                  "postalCode": "string",
                                                  "state": "string",
                                                  "country": {
                                                    "value": "string",
                                                    "code": "string"
                                                  },
                                                  "streetAddress": "string",
                                                  "excludeNoCity": true
                                                },
                                                "anonymization": {
                                                  "anonymizationStatus": "Requested",
                                                  "anonymizationDate": "2020-08-26T15:00:10.514Z"
                                                },
                                                "accompanyGuests": [
                                                  {
                                                    "firstName": "string",
                                                    "lastName": "string",
                                                    "fullName": "string",
                                                    "registrationCardNo": "string",
                                                    "profileIdList": [
                                                      {
                                                        "id": "string",
                                                        "type": "string"
                                                      }
                                                    ]
                                                  }
                                                ],
                                                "externalInfo": {
                                                  "givenName": "string",
                                                  "surname": "string"
                                                },
                                                "guestLastStayInfo": {
                                                  "lastStayDate": "2020-08-26",
                                                  "lastStayRoom": "string",
                                                  "lastStayRate": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "totalStay": 0
                                                },
                                                "guestRestrictedCode": "string",
                                                "guestRestrictedReasonDesc": "string",
                                                "guestRestricted": true,
                                                "registrationCardNo": "string",
                                                "nameType": "Guest",
                                                "id": "string",
                                                "type": "string"
                                              },
                                              "sharedGuests": [
                                                {
                                                  "profileId": {
                                                    "url": "string",
                                                    "type": "string",
                                                    "instance": "string",
                                                    "idContext": "string",
                                                    "id": "string",
                                                    "idExtension": 0
                                                  },
                                                  "firstName": "string",
                                                  "lastName": "string",
                                                  "fullName": "string"
                                                }
                                              ],
                                              "attachedProfiles": [
                                                {
                                                  "name": "string",
                                                  "profileIdList": [
                                                    {
                                                      "id": "string",
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "reservationProfileType": "Company"
                                                }
                                              ],
                                              "reservationPaymentMethod": {
                                                "paymentCard": {
                                                  "cardId": {
                                                    "id": "string",
                                                    "type": "string"
                                                  },
                                                  "currentAuthorizedAmount": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "approvalAmountNeeded": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "cardType": "Ab",
                                                  "userDefinedCardType": "string",
                                                  "cardNumber": "string",
                                                  "cardNumberMasked": "string",
                                                  "cardNumberLast4Digits": "string",
                                                  "expirationDate": "2020-08-26",
                                                  "expirationDateMasked": "string",
                                                  "expirationDateExpired": true,
                                                  "cardHolderName": "string",
                                                  "attachCreditCardToProfile": true,
                                                  "processing": "Eft",
                                                  "swiped": true,
                                                  "cardOrToken": "CardNumber"
                                                },
                                                "balance": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "authorizationRule": {
                                                  "code": 0,
                                                  "amount": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "percent": 0
                                                },
                                                "emailFolioInfo": {
                                                  "email": {
                                                    "emailAddress": "string",
                                                    "type": "string",
                                                    "typeDescription": "string",
                                                    "emailFormat": "Html",
                                                    "primaryInd": true,
                                                    "orderSequence": 0,
                                                    "createDateTime": "2020-08-26T15:00:10.514Z",
                                                    "creatorId": "string",
                                                    "lastModifyDateTime": "2020-08-26T15:00:10.514Z",
                                                    "lastModifierId": "string",
                                                    "purgeDate": "2020-08-26"
                                                  },
                                                  "emailFolio": true,
                                                  "id": "string",
                                                  "type": "string"
                                                },
                                                "paymentMethod": "string",
                                                "description": "string",
                                                "folioView": 0
                                              },
                                              "reservationFolioWindows": [
                                                {
                                                  "payeeInfo": {
                                                    "payeeId": {
                                                      "id": "string",
                                                      "type": "string"
                                                    },
                                                    "payeeName": "string",
                                                    "payeeAddress": {
                                                      "address": {
                                                        "addressLine": [
                                                          "string"
                                                        ],
                                                        "cityName": "string",
                                                        "postalCode": "string",
                                                        "cityExtension": "string",
                                                        "county": "string",
                                                        "state": "string",
                                                        "country": {
                                                          "value": "string",
                                                          "code": "string"
                                                        },
                                                        "language": "string",
                                                        "type": "string",
                                                        "typeDescription": "string",
                                                        "primaryInd": true,
                                                        "updateReservations": true,
                                                        "barCode": "string",
                                                        "createDateTime": "2020-08-26T15:00:10.515Z",
                                                        "creatorId": "string",
                                                        "lastModifyDateTime": "2020-08-26T15:00:10.515Z",
                                                        "lastModifierId": "string",
                                                        "purgeDate": "2020-08-26"
                                                      },
                                                      "id": "string",
                                                      "type": "string"
                                                    },
                                                    "payeeAddressCount": 0,
                                                    "payeeReferenceCurrency": "string",
                                                    "payeeAccountInfo": {
                                                      "accountName": "string",
                                                      "accountId": {
                                                        "id": "string",
                                                        "type": "string"
                                                      },
                                                      "accountNo": "string",
                                                      "status": {
                                                        "restriction": "string",
                                                        "description": "string",
                                                        "restricted": true
                                                      }
                                                    },
                                                    "payeeTaxNumber": "string"
                                                  },
                                                  "balance": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "paymentMethod": "string",
                                                  "folioWindowNo": 0
                                                }
                                              ],
                                              "specials": "string",
                                              "lastPrivacyPromptDate": "2020-08-26",
                                              "displayColor": "string",
                                              "reservationIndicators": [
                                                {
                                                  "indicatorName": "string",
                                                  "count": 0
                                                }
                                              ],
                                              "roomStatus": "Clean",
                                              "searchMatches": [
                                                {
                                                  "attribute": "string",
                                                  "value": "string"
                                                }
                                              ],
                                              "sourceOfSale": {
                                                "sourceType": "string",
                                                "sourceCode": "string"
                                              },
                                              "waitlist": {
                                                "reasonDescription": "string",
                                                "priorityDescription": "string",
                                                "description": "string",
                                                "reasonCode": "string",
                                                "priorityCode": "string",
                                                "telephone": "string"
                                              },
                                              "queue": {
                                                "timeSpan": {
                                                  "startDate": "2020-08-26",
                                                  "endDate": "2020-08-26",
                                                  "duration": "string",
                                                  "durationInSeconds": 0
                                                },
                                                "guestTextInfo": {
                                                  "sentTime": "2020-08-26T15:00:10.515Z",
                                                  "sentBy": "string"
                                                },
                                                "priority": 0,
                                                "averageQueueTimeToCheckIn": 0,
                                                "averageQueueTimeCurrentReservations": 0,
                                                "queueDate": "2020-08-26"
                                              },
                                              "housekeeping": {
                                                "instructions": "string",
                                                "facilityTaskInfo": {
                                                  "task": {
                                                    "description": "string",
                                                    "instructions": "string",
                                                    "facilityDepartureTask": true,
                                                    "linenChange": true,
                                                    "hotelId": "string",
                                                    "code": "string",
                                                    "sequence": 0
                                                  },
                                                  "supplies": [
                                                    {
                                                      "description": "string",
                                                      "quantity": 0,
                                                      "code": "string"
                                                    }
                                                  ],
                                                  "date": "2020-08-26"
                                                },
                                                "linenChange": true,
                                                "turndownRequested": true,
                                                "serviceTime": "2020-08-26",
                                                "expectedServiceTime": "string",
                                                "roomStatus": "Clean"
                                              },
                                              "cashiering": {
                                                "revenuesAndBalances": {
                                                  "totalFixedCharge": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "totalPayment": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "roomRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "foodAndBevRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "otherRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "nonRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "totalRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "balance": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  }
                                                },
                                                "billingPrivileges": {
                                                  "postingRestriction": true,
                                                  "preStayCharging": true,
                                                  "postStayCharging": true,
                                                  "folioCloseDate": "2020-08-26",
                                                  "scheduledCheckout": true,
                                                  "scheduledCheckoutTime": "2020-08-26",
                                                  "directBillAuthorized": true,
                                                  "videoCheckout": true,
                                                  "allowAutoCheckin": true,
                                                  "autoSettlement": true,
                                                  "autoSettlementType": "string",
                                                  "autoSettlementFreq": 0,
                                                  "creditLimitAutoPay": true
                                                },
                                                "taxType": {
                                                  "hotelId": "string",
                                                  "code": "string",
                                                  "description": "string",
                                                  "collectingAgentTax": true,
                                                  "printAutoAdjust": true,
                                                  "reportExemptDays": 0,
                                                  "reportTaxPercentage": 0,
                                                  "minimumLengthOfStay": 0,
                                                  "taxExemptNo": "string"
                                                },
                                                "bedTaxReporting": {
                                                  "taxRegistrationNo": 0,
                                                  "visaNumber": "string",
                                                  "visaIssueDate": "2020-08-26",
                                                  "visaExpiryDate": "2020-08-26",
                                                  "taxableDays": 0
                                                },
                                                "folioTexts": [
                                                  {
                                                    "text": "string",
                                                    "row": 0
                                                  }
                                                ],
                                                "periodicFolio": {
                                                  "lastSettlementDate": "2020-08-26",
                                                  "lastFolioDate": "2020-08-26",
                                                  "frequency": 0
                                                },
                                                "compAccounting": {
                                                  "compType": "string",
                                                  "authorizer": "string",
                                                  "compPostings": "string"
                                                },
                                                "reservationPreConfiguredRoutingInstruction": {
                                                  "authorizerInfo": {
                                                    "authorizerId": {
                                                      "id": "string",
                                                      "type": "string"
                                                    },
                                                    "authorizerUserName": "string",
                                                    "authorizerName": "string",
                                                    "authorizerRateCode": "string",
                                                    "inheritAuthorizerRateCode": true
                                                  },
                                                  "ratePlanCode": "string",
                                                  "profileType": "Company",
                                                  "promotionCode": "string"
                                                },
                                                "financiallyResponsible": true,
                                                "proratedBilling": true,
                                                "lastRoomAndTaxPostedDate": "2020-08-26",
                                                "reverseCheckInAllowed": true,
                                                "reverseAdvanceCheckInAllowed": true,
                                                "transactionsPosted": true
                                              },
                                              "taxType": {
                                                "hotelId": "string",
                                                "code": "string",
                                                "description": "string",
                                                "collectingAgentTax": true,
                                                "printAutoAdjust": true,
                                                "reportExemptDays": 0,
                                                "reportTaxPercentage": 0,
                                                "minimumLengthOfStay": 0
                                              },
                                              "deposit": {
                                                "amountRequired": 0,
                                                "amountPaid": 0,
                                                "amountOwed": 0,
                                                "dueDate": "2020-08-26",
                                                "postingDate": "2020-08-26",
                                                "hasPaid": true,
                                                "hasOutstanding": true
                                              },
                                              "allowedActions": [
                                                "Cancel"
                                              ],
                                              "revenuesAndBalances": {
                                                "totalFixedCharge": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "totalPayment": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "roomRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "foodAndBevRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "otherRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "nonRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "totalRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "balance": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                }
                                              },
                                              "hotelInterfaceStatusList": [
                                                {
                                                  "roomExtension": "string",
                                                  "hotelInterface": {
                                                    "interfaceId": {
                                                      "id": "string",
                                                      "type": "string"
                                                    },
                                                    "hotelId": "string",
                                                    "interfaceName": "string",
                                                    "interfaceType": "Bms",
                                                    "logo": "string",
                                                    "machineName": "string",
                                                    "status": "Stopped",
                                                    "activeFlag": true
                                                  },
                                                  "interfaceRights": [
                                                    {
                                                      "right": 0,
                                                      "statusCode": "string",
                                                      "description": "string",
                                                      "category": "string"
                                                    }
                                                  ]
                                                }
                                              ],
                                              "guestPreferredCurrency": "string",
                                              "turndownInfo": {
                                                "allowed": true,
                                                "status": "Required"
                                              },
                                              "mobileNotifications": {
                                                "roomReady": "Pending",
                                                "keyReady": "Pending",
                                                "checkoutMessageReceived": true,
                                                "requiresAction": true,
                                                "errorMessage": "string"
                                              },
                                              "reservationCommunication": {
                                                "telephones": {
                                                  "telephoneInfo": [
                                                    {
                                                      "telephone": {
                                                        "phoneTechType": "string",
                                                        "phoneUseType": "string",
                                                        "phoneUseTypeDescription": "string",
                                                        "phoneNumber": "string",
                                                        "extension": "string",
                                                        "primaryInd": true,
                                                        "orderSequence": 0,
                                                        "createDateTime": "2020-08-26T15:00:10.516Z",
                                                        "creatorId": "string",
                                                        "lastModifyDateTime": "2020-08-26T15:00:10.516Z",
                                                        "lastModifierId": "string",
                                                        "purgeDate": "2020-08-26"
                                                      },
                                                      "id": "string",
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "hasMore": true,
                                                  "totalResults": 0,
                                                  "count": 0
                                                },
                                                "emails": {
                                                  "emailInfo": [
                                                    {
                                                      "email": {
                                                        "emailAddress": "string",
                                                        "type": "string",
                                                        "typeDescription": "string",
                                                        "emailFormat": "Html",
                                                        "primaryInd": true,
                                                        "orderSequence": 0,
                                                        "createDateTime": "2020-08-26T15:00:10.516Z",
                                                        "creatorId": "string",
                                                        "lastModifyDateTime": "2020-08-26T15:00:10.516Z",
                                                        "lastModifierId": "string",
                                                        "purgeDate": "2020-08-26"
                                                      },
                                                      "id": "string",
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "hasMore": true,
                                                  "totalResults": 0,
                                                  "count": 0
                                                }
                                              },
                                              "advanceCheckIn": {
                                                "advanceCheckedIn": true,
                                                "expectedReturnTime": "2020-08-26T15:00:10.516Z",
                                                "eTRComments": "string"
                                              },
                                              "welcomeOffer": true,
                                              "cancellationInfo": {
                                                "description": "string",
                                                "code": "string",
                                                "date": "2020-08-26"
                                              },
                                              "keyCount": 0,
                                              "hotelId": "string",
                                              "hotelName": "string",
                                              "expectedServiceTime": "string",
                                              "roomStayReservation": true,
                                              "createDateTime": "2020-08-26T15:00:10.516Z",
                                              "creatorId": "string",
                                              "lastModifyDateTime": "2020-08-26T15:00:10.516Z",
                                              "lastModifierId": "string",
                                              "purgeDate": "2020-08-26",
                                              "reservationStatus": "Reserved",
                                              "computedReservationStatus": "Reserved",
                                              "walkInIndicator": true,
                                              "accessRestriction": "Change",
                                              "commissionPayoutTo": "TravelAgent",
                                              "paymentMethod": "string",
                                              "preRegistered": true,
                                              "openFolio": true,
                                              "allowMobileCheckout": true,
                                              "allowMobileViewFolio": true,
                                              "optedForCommunication": true
                                            }
                                          ],
                                          "hasMore": true,
                                          "totalResults": 0,
                                          "count": 0
                                        },
                                        "futureList": {
                                          "reservationInfo": [
                                            {
                                              "reservationIdList": [
                                                {
                                                  "id": "string",
                                                  "type": "string"
                                                }
                                              ],
                                              "roomStay": {
                                                "arrivalDate": "2020-08-26",
                                                "departureDate": "2020-08-26",
                                                "originalTimeSpan": {
                                                  "startDate": "2020-08-26",
                                                  "endDate": "2020-08-26",
                                                  "duration": "string"
                                                },
                                                "expectedTimes": {
                                                  "reservationExpectedArrivalTime": "2020-08-26T15:00:10.516Z",
                                                  "reservationExpectedDepartureTime": "2020-08-26T15:00:10.516Z"
                                                },
                                                "adultCount": 0,
                                                "childCount": 0,
                                                "roomClass": "string",
                                                "roomType": "string",
                                                "numberOfRooms": 0,
                                                "roomNumber": "string",
                                                "ratePlanCode": "string",
                                                "rateAmount": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "points": {
                                                  "awardsType": "string",
                                                  "points": 0
                                                },
                                                "rateSuppressed": true,
                                                "reservationBlock": {
                                                  "blockIdList": [
                                                    {
                                                      "id": "string",
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "blockName": "string",
                                                  "hotelId": "string"
                                                },
                                                "bookingChannelCode": "string",
                                                "partyCode": "string",
                                                "fixedRate": true,
                                                "totalAmount": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "guarantee": {
                                                  "guaranteeCode": "string",
                                                  "shortDescription": "string",
                                                  "onHold": true
                                                },
                                                "promotion": {
                                                  "promotionCode": "string",
                                                  "promotionName": "string",
                                                  "couponCode": "string"
                                                },
                                                "marketCode": "string",
                                                "sourceOfBusiness": "string",
                                                "sourceOfBusinessDescription": "string",
                                                "balance": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "compBalance": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "roomTypeCharged": "string",
                                                "depositPayments": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "guestServiceStatus": "DoNotDisturb",
                                                "scheduledCheckoutTime": "2020-08-26",
                                                "roomNumberLocked": true,
                                                "pseudoRoom": true
                                              },
                                              "reservationGuest": {
                                                "membership": {
                                                  "membershipId": 0,
                                                  "programCode": "string",
                                                  "bonusCode": "string",
                                                  "membershipTypeDesc": "string",
                                                  "membershipLevelDesc": "string",
                                                  "accountId": "string",
                                                  "membershipLevel": "string",
                                                  "playerRanking": 0
                                                },
                                                "namePrefix": "string",
                                                "givenName": "string",
                                                "alternateGivenName": "string",
                                                "middleName": "string",
                                                "surnamePrefix": "string",
                                                "surname": "string",
                                                "alternateSurname": "string",
                                                "nameSuffix": "string",
                                                "nameTitle": "string",
                                                "fullName": "string",
                                                "alternateFullName": "string",
                                                "phoneNumber": "string",
                                                "email": "string",
                                                "birthDate": "2020-08-26",
                                                "language": "string",
                                                "nationality": {
                                                  "value": "string",
                                                  "code": "string"
                                                },
                                                "vip": {
                                                  "vipCode": "string",
                                                  "vipDescription": "string"
                                                },
                                                "address": {
                                                  "cityName": "string",
                                                  "postalCode": "string",
                                                  "state": "string",
                                                  "country": {
                                                    "value": "string",
                                                    "code": "string"
                                                  },
                                                  "streetAddress": "string",
                                                  "excludeNoCity": true
                                                },
                                                "anonymization": {
                                                  "anonymizationStatus": "Requested",
                                                  "anonymizationDate": "2020-08-26T15:00:10.517Z"
                                                },
                                                "accompanyGuests": [
                                                  {
                                                    "firstName": "string",
                                                    "lastName": "string",
                                                    "fullName": "string",
                                                    "registrationCardNo": "string",
                                                    "profileIdList": [
                                                      {
                                                        "id": "string",
                                                        "type": "string"
                                                      }
                                                    ]
                                                  }
                                                ],
                                                "externalInfo": {
                                                  "givenName": "string",
                                                  "surname": "string"
                                                },
                                                "guestLastStayInfo": {
                                                  "lastStayDate": "2020-08-26",
                                                  "lastStayRoom": "string",
                                                  "lastStayRate": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "totalStay": 0
                                                },
                                                "guestRestrictedCode": "string",
                                                "guestRestrictedReasonDesc": "string",
                                                "guestRestricted": true,
                                                "registrationCardNo": "string",
                                                "nameType": "Guest",
                                                "id": "string",
                                                "type": "string"
                                              },
                                              "sharedGuests": [
                                                {
                                                  "profileId": {
                                                    "url": "string",
                                                    "type": "string",
                                                    "instance": "string",
                                                    "idContext": "string",
                                                    "id": "string",
                                                    "idExtension": 0
                                                  },
                                                  "firstName": "string",
                                                  "lastName": "string",
                                                  "fullName": "string"
                                                }
                                              ],
                                              "attachedProfiles": [
                                                {
                                                  "name": "string",
                                                  "profileIdList": [
                                                    {
                                                      "id": "string",
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "reservationProfileType": "Company"
                                                }
                                              ],
                                              "reservationPaymentMethod": {
                                                "paymentCard": {
                                                  "cardId": {
                                                    "id": "string",
                                                    "type": "string"
                                                  },
                                                  "currentAuthorizedAmount": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "approvalAmountNeeded": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "cardType": "Ab",
                                                  "userDefinedCardType": "string",
                                                  "cardNumber": "string",
                                                  "cardNumberMasked": "string",
                                                  "cardNumberLast4Digits": "string",
                                                  "expirationDate": "2020-08-26",
                                                  "expirationDateMasked": "string",
                                                  "expirationDateExpired": true,
                                                  "cardHolderName": "string",
                                                  "attachCreditCardToProfile": true,
                                                  "processing": "Eft",
                                                  "swiped": true,
                                                  "cardOrToken": "CardNumber"
                                                },
                                                "balance": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "authorizationRule": {
                                                  "code": 0,
                                                  "amount": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "percent": 0
                                                },
                                                "emailFolioInfo": {
                                                  "email": {
                                                    "emailAddress": "string",
                                                    "type": "string",
                                                    "typeDescription": "string",
                                                    "emailFormat": "Html",
                                                    "primaryInd": true,
                                                    "orderSequence": 0,
                                                    "createDateTime": "2020-08-26T15:00:10.517Z",
                                                    "creatorId": "string",
                                                    "lastModifyDateTime": "2020-08-26T15:00:10.517Z",
                                                    "lastModifierId": "string",
                                                    "purgeDate": "2020-08-26"
                                                  },
                                                  "emailFolio": true,
                                                  "id": "string",
                                                  "type": "string"
                                                },
                                                "paymentMethod": "string",
                                                "description": "string",
                                                "folioView": 0
                                              },
                                              "reservationFolioWindows": [
                                                {
                                                  "payeeInfo": {
                                                    "payeeId": {
                                                      "id": "string",
                                                      "type": "string"
                                                    },
                                                    "payeeName": "string",
                                                    "payeeAddress": {
                                                      "address": {
                                                        "addressLine": [
                                                          "string"
                                                        ],
                                                        "cityName": "string",
                                                        "postalCode": "string",
                                                        "cityExtension": "string",
                                                        "county": "string",
                                                        "state": "string",
                                                        "country": {
                                                          "value": "string",
                                                          "code": "string"
                                                        },
                                                        "language": "string",
                                                        "type": "string",
                                                        "typeDescription": "string",
                                                        "primaryInd": true,
                                                        "updateReservations": true,
                                                        "barCode": "string",
                                                        "createDateTime": "2020-08-26T15:00:10.517Z",
                                                        "creatorId": "string",
                                                        "lastModifyDateTime": "2020-08-26T15:00:10.517Z",
                                                        "lastModifierId": "string",
                                                        "purgeDate": "2020-08-26"
                                                      },
                                                      "id": "string",
                                                      "type": "string"
                                                    },
                                                    "payeeAddressCount": 0,
                                                    "payeeReferenceCurrency": "string",
                                                    "payeeAccountInfo": {
                                                      "accountName": "string",
                                                      "accountId": {
                                                        "id": "string",
                                                        "type": "string"
                                                      },
                                                      "accountNo": "string",
                                                      "status": {
                                                        "restriction": "string",
                                                        "description": "string",
                                                        "restricted": true
                                                      }
                                                    },
                                                    "payeeTaxNumber": "string"
                                                  },
                                                  "balance": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "paymentMethod": "string",
                                                  "folioWindowNo": 0
                                                }
                                              ],
                                              "specials": "string",
                                              "lastPrivacyPromptDate": "2020-08-26",
                                              "displayColor": "string",
                                              "reservationIndicators": [
                                                {
                                                  "indicatorName": "string",
                                                  "count": 0
                                                }
                                              ],
                                              "roomStatus": "Clean",
                                              "searchMatches": [
                                                {
                                                  "attribute": "string",
                                                  "value": "string"
                                                }
                                              ],
                                              "sourceOfSale": {
                                                "sourceType": "string",
                                                "sourceCode": "string"
                                              },
                                              "waitlist": {
                                                "reasonDescription": "string",
                                                "priorityDescription": "string",
                                                "description": "string",
                                                "reasonCode": "string",
                                                "priorityCode": "string",
                                                "telephone": "string"
                                              },
                                              "queue": {
                                                "timeSpan": {
                                                  "startDate": "2020-08-26",
                                                  "endDate": "2020-08-26",
                                                  "duration": "string",
                                                  "durationInSeconds": 0
                                                },
                                                "guestTextInfo": {
                                                  "sentTime": "2020-08-26T15:00:10.517Z",
                                                  "sentBy": "string"
                                                },
                                                "priority": 0,
                                                "averageQueueTimeToCheckIn": 0,
                                                "averageQueueTimeCurrentReservations": 0,
                                                "queueDate": "2020-08-26"
                                              },
                                              "housekeeping": {
                                                "instructions": "string",
                                                "facilityTaskInfo": {
                                                  "task": {
                                                    "description": "string",
                                                    "instructions": "string",
                                                    "facilityDepartureTask": true,
                                                    "linenChange": true,
                                                    "hotelId": "string",
                                                    "code": "string",
                                                    "sequence": 0
                                                  },
                                                  "supplies": [
                                                    {
                                                      "description": "string",
                                                      "quantity": 0,
                                                      "code": "string"
                                                    }
                                                  ],
                                                  "date": "2020-08-26"
                                                },
                                                "linenChange": true,
                                                "turndownRequested": true,
                                                "serviceTime": "2020-08-26",
                                                "expectedServiceTime": "string",
                                                "roomStatus": "Clean"
                                              },
                                              "cashiering": {
                                                "revenuesAndBalances": {
                                                  "totalFixedCharge": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "totalPayment": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "roomRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "foodAndBevRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "otherRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "nonRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "totalRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "balance": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  }
                                                },
                                                "billingPrivileges": {
                                                  "postingRestriction": true,
                                                  "preStayCharging": true,
                                                  "postStayCharging": true,
                                                  "folioCloseDate": "2020-08-26",
                                                  "scheduledCheckout": true,
                                                  "scheduledCheckoutTime": "2020-08-26",
                                                  "directBillAuthorized": true,
                                                  "videoCheckout": true,
                                                  "allowAutoCheckin": true,
                                                  "autoSettlement": true,
                                                  "autoSettlementType": "string",
                                                  "autoSettlementFreq": 0,
                                                  "creditLimitAutoPay": true
                                                },
                                                "taxType": {
                                                  "hotelId": "string",
                                                  "code": "string",
                                                  "description": "string",
                                                  "collectingAgentTax": true,
                                                  "printAutoAdjust": true,
                                                  "reportExemptDays": 0,
                                                  "reportTaxPercentage": 0,
                                                  "minimumLengthOfStay": 0,
                                                  "taxExemptNo": "string"
                                                },
                                                "bedTaxReporting": {
                                                  "taxRegistrationNo": 0,
                                                  "visaNumber": "string",
                                                  "visaIssueDate": "2020-08-26",
                                                  "visaExpiryDate": "2020-08-26",
                                                  "taxableDays": 0
                                                },
                                                "folioTexts": [
                                                  {
                                                    "text": "string",
                                                    "row": 0
                                                  }
                                                ],
                                                "periodicFolio": {
                                                  "lastSettlementDate": "2020-08-26",
                                                  "lastFolioDate": "2020-08-26",
                                                  "frequency": 0
                                                },
                                                "compAccounting": {
                                                  "compType": "string",
                                                  "authorizer": "string",
                                                  "compPostings": "string"
                                                },
                                                "reservationPreConfiguredRoutingInstruction": {
                                                  "authorizerInfo": {
                                                    "authorizerId": {
                                                      "id": "string",
                                                      "type": "string"
                                                    },
                                                    "authorizerUserName": "string",
                                                    "authorizerName": "string",
                                                    "authorizerRateCode": "string",
                                                    "inheritAuthorizerRateCode": true
                                                  },
                                                  "ratePlanCode": "string",
                                                  "profileType": "Company",
                                                  "promotionCode": "string"
                                                },
                                                "financiallyResponsible": true,
                                                "proratedBilling": true,
                                                "lastRoomAndTaxPostedDate": "2020-08-26",
                                                "reverseCheckInAllowed": true,
                                                "reverseAdvanceCheckInAllowed": true,
                                                "transactionsPosted": true
                                              },
                                              "taxType": {
                                                "hotelId": "string",
                                                "code": "string",
                                                "description": "string",
                                                "collectingAgentTax": true,
                                                "printAutoAdjust": true,
                                                "reportExemptDays": 0,
                                                "reportTaxPercentage": 0,
                                                "minimumLengthOfStay": 0
                                              },
                                              "deposit": {
                                                "amountRequired": 0,
                                                "amountPaid": 0,
                                                "amountOwed": 0,
                                                "dueDate": "2020-08-26",
                                                "postingDate": "2020-08-26",
                                                "hasPaid": true,
                                                "hasOutstanding": true
                                              },
                                              "allowedActions": [
                                                "Cancel"
                                              ],
                                              "revenuesAndBalances": {
                                                "totalFixedCharge": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "totalPayment": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "roomRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "foodAndBevRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "otherRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "nonRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "totalRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "balance": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                }
                                              },
                                              "hotelInterfaceStatusList": [
                                                {
                                                  "roomExtension": "string",
                                                  "hotelInterface": {
                                                    "interfaceId": {
                                                      "id": "string",
                                                      "type": "string"
                                                    },
                                                    "hotelId": "string",
                                                    "interfaceName": "string",
                                                    "interfaceType": "Bms",
                                                    "logo": "string",
                                                    "machineName": "string",
                                                    "status": "Stopped",
                                                    "activeFlag": true
                                                  },
                                                  "interfaceRights": [
                                                    {
                                                      "right": 0,
                                                      "statusCode": "string",
                                                      "description": "string",
                                                      "category": "string"
                                                    }
                                                  ]
                                                }
                                              ],
                                              "guestPreferredCurrency": "string",
                                              "turndownInfo": {
                                                "allowed": true,
                                                "status": "Required"
                                              },
                                              "mobileNotifications": {
                                                "roomReady": "Pending",
                                                "keyReady": "Pending",
                                                "checkoutMessageReceived": true,
                                                "requiresAction": true,
                                                "errorMessage": "string"
                                              },
                                              "reservationCommunication": {
                                                "telephones": {
                                                  "telephoneInfo": [
                                                    {
                                                      "telephone": {
                                                        "phoneTechType": "string",
                                                        "phoneUseType": "string",
                                                        "phoneUseTypeDescription": "string",
                                                        "phoneNumber": "string",
                                                        "extension": "string",
                                                        "primaryInd": true,
                                                        "orderSequence": 0,
                                                        "createDateTime": "2020-08-26T15:00:10.518Z",
                                                        "creatorId": "string",
                                                        "lastModifyDateTime": "2020-08-26T15:00:10.518Z",
                                                        "lastModifierId": "string",
                                                        "purgeDate": "2020-08-26"
                                                      },
                                                      "id": "string",
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "hasMore": true,
                                                  "totalResults": 0,
                                                  "count": 0
                                                },
                                                "emails": {
                                                  "emailInfo": [
                                                    {
                                                      "email": {
                                                        "emailAddress": "string",
                                                        "type": "string",
                                                        "typeDescription": "string",
                                                        "emailFormat": "Html",
                                                        "primaryInd": true,
                                                        "orderSequence": 0,
                                                        "createDateTime": "2020-08-26T15:00:10.518Z",
                                                        "creatorId": "string",
                                                        "lastModifyDateTime": "2020-08-26T15:00:10.518Z",
                                                        "lastModifierId": "string",
                                                        "purgeDate": "2020-08-26"
                                                      },
                                                      "id": "string",
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "hasMore": true,
                                                  "totalResults": 0,
                                                  "count": 0
                                                }
                                              },
                                              "advanceCheckIn": {
                                                "advanceCheckedIn": true,
                                                "expectedReturnTime": "2020-08-26T15:00:10.518Z",
                                                "eTRComments": "string"
                                              },
                                              "welcomeOffer": true,
                                              "cancellationInfo": {
                                                "description": "string",
                                                "code": "string",
                                                "date": "2020-08-26"
                                              },
                                              "keyCount": 0,
                                              "hotelId": "string",
                                              "hotelName": "string",
                                              "expectedServiceTime": "string",
                                              "roomStayReservation": true,
                                              "createDateTime": "2020-08-26T15:00:10.518Z",
                                              "creatorId": "string",
                                              "lastModifyDateTime": "2020-08-26T15:00:10.518Z",
                                              "lastModifierId": "string",
                                              "purgeDate": "2020-08-26",
                                              "reservationStatus": "Reserved",
                                              "computedReservationStatus": "Reserved",
                                              "walkInIndicator": true,
                                              "accessRestriction": "Change",
                                              "commissionPayoutTo": "TravelAgent",
                                              "paymentMethod": "string",
                                              "preRegistered": true,
                                              "openFolio": true,
                                              "allowMobileCheckout": true,
                                              "allowMobileViewFolio": true,
                                              "optedForCommunication": true
                                            }
                                          ],
                                          "hasMore": true,
                                          "totalResults": 0,
                                          "count": 0
                                        }
                                      },
                                      "lastStayInfo": {
                                        "lastVisit": "2020-08-26",
                                        "lastRoom": "string",
                                        "lastRate": {
                                          "amount": 0,
                                          "currencyCode": "string"
                                        },
                                        "totalStay": 0
                                      },
                                      "profileAccessType": {
                                        "chainCode": "string",
                                        "croCode": "string",
                                        "hotelId": "string",
                                        "sharedLevel": "Global"
                                      },
                                      "profileRestrictions": {
                                        "reason": "string",
                                        "reasonDescription": "string",
                                        "restricted": true
                                      },
                                      "mailingActions": {
                                        "mailingAction": [
                                          {
                                            "code": "string",
                                            "description": "string"
                                          }
                                        ],
                                        "active": true,
                                        "hasMore": true,
                                        "totalResults": 0,
                                        "count": 0
                                      },
                                      "privacyInfo": {
                                        "marketResearchParticipation": true,
                                        "lastPrivacyPromptDate": "2020-08-26",
                                        "infoFromThirdParty": true,
                                        "autoEnrollLoyaltyProgram": true,
                                        "allowPhone": true,
                                        "allowSMS": true,
                                        "allowEmail": true,
                                        "optInMailingList": true,
                                        "optInMarketResearch": true,
                                        "optInThirdParty": true,
                                        "optInAutoEnrollmentMember": true,
                                        "optInPhone": true,
                                        "optInSms": true,
                                        "optInEmail": true
                                      },
                                      "cashiering": {
                                        "directBillingList": [
                                          {
                                            "hotelId": "string",
                                            "aRNumber": "string"
                                          }
                                        ],
                                        "autoFolioSettlementType": "string",
                                        "paymentDueDays": 0,
                                        "taxPercent1": 0,
                                        "taxPercent2": 0,
                                        "taxPercent3": 0,
                                        "taxPercent4": 0,
                                        "taxPercent5": 0,
                                        "arNoCentral": "string",
                                        "referenceCurrency": "string",
                                        "vATOffsetYN": "string",
                                        "currencyCode": "string",
                                        "currencySymbol": "string",
                                        "decimalPlaces": 0
                                      },
                                      "commissionInfoList": [
                                        {
                                          "hotelId": "string",
                                          "commissionCode": "string",
                                          "bankAccount": "string",
                                          "paymentMethod": "Cent",
                                          "currencyCode": "string",
                                          "currencySymbol": "string",
                                          "decimalPlaces": 0
                                        }
                                      ],
                                      "userDefinedFields": {
                                        "characterUDFs": [
                                          {
                                            "name": "string",
                                            "value": "string",
                                            "alternateName": "string"
                                          }
                                        ],
                                        "numericUDFs": [
                                          {
                                            "name": "string",
                                            "value": 0,
                                            "alternateName": "string"
                                          }
                                        ],
                                        "dateUDFs": [
                                          {
                                            "name": "string",
                                            "value": "2020-08-26",
                                            "alternateName": "string"
                                          }
                                        ]
                                      },
                                      "webUserAccounts": [
                                        {
                                          "securityQuestion": {
                                            "code": "string",
                                            "description": "string"
                                          },
                                          "securityAnswer": "string",
                                          "comments": "string",
                                          "history": {
                                            "createDateTime": "2020-08-26T15:00:10.519Z",
                                            "creatorId": "string",
                                            "lastModifyDateTime": "2020-08-26T15:00:10.519Z",
                                            "lastModifierId": "string",
                                            "purgeDate": "2020-08-26",
                                            "lastLogin": "2020-08-26",
                                            "lastPasswordChange": "2020-08-26",
                                            "inactiveDate": "2020-08-26"
                                          },
                                          "newLoginName": "string",
                                          "newPassword": "string",
                                          "autoGeneratePassword": true,
                                          "loginName": "string",
                                          "domainCode": "string",
                                          "locked": true,
                                          "inactive": true
                                        }
                                      ],
                                      "taxInfo": {
                                        "tax1No": "string",
                                        "tax2No": "string",
                                        "taxCategory": "string",
                                        "taxOffice": "string",
                                        "taxType": "string",
                                        "businessId": "string",
                                        "businessRegistration": "string"
                                      },
                                      "salesInfo": {
                                        "scope": "string",
                                        "scopeCity": "string",
                                        "accountType": "string",
                                        "accountSource": "string",
                                        "industryCode": "string",
                                        "businessSegments": "string",
                                        "priority": "string",
                                        "roomsPotential": "string",
                                        "actionCode": "string",
                                        "competitionCode": "string",
                                        "influence": "string",
                                        "preferredRoom": "string",
                                        "hotelId": "string"
                                      },
                                      "eCertificates": [
                                        {
                                          "certificateId": 0,
                                          "voucherNo": "string",
                                          "certificateNo": "string",
                                          "eCertificateInfo": {
                                            "certificateType": "string",
                                            "membershipType": "string",
                                            "awardCode": "string",
                                            "promotionCode": "string",
                                            "voucherBenefitCode": "string",
                                            "hotels": {
                                              "code": [
                                                "string"
                                              ],
                                              "scope": "Global"
                                            },
                                            "description": "string",
                                            "longDescription": "string",
                                            "label": "string",
                                            "maxExtensionAllowed": 0,
                                            "usageCriteria": {
                                              "reservation": true,
                                              "web": true,
                                              "webAllowed": true,
                                              "benefit": true,
                                              "hotel": true,
                                              "verifyCertificateNo": true,
                                              "cancelAllowed": true,
                                              "generateInLieuCertificate": true
                                            },
                                            "value": {
                                              "amount": 0,
                                              "currencyCode": "string"
                                            },
                                            "cost": {
                                              "amount": 0,
                                              "currencyCode": "string"
                                            },
                                            "benefitSummary": "string"
                                          },
                                          "expiryDate": "2020-08-26",
                                          "newExpiryDate": "2020-08-26",
                                          "profileId": {
                                            "url": "string",
                                            "type": "string",
                                            "instance": "string",
                                            "idContext": "string",
                                            "id": "string",
                                            "idExtension": 0
                                          },
                                          "consumptionDetail": {
                                            "hotelId": "string",
                                            "source": "Central",
                                            "surname": "string",
                                            "firstName": "string",
                                            "middleName": "string",
                                            "email": "string",
                                            "date": "2020-08-26",
                                            "userName": "string",
                                            "userNotes": "string",
                                            "referenceId": {
                                              "id": "string",
                                              "type": "string"
                                            },
                                            "locationType": "string",
                                            "authorizationCode": "string",
                                            "serviceDate": "2020-08-26"
                                          },
                                          "status": "Cancelled",
                                          "printed": true,
                                          "inactiveDate": "2020-08-26",
                                          "awardId": {
                                            "url": "string",
                                            "type": "string",
                                            "instance": "string",
                                            "idContext": "string",
                                            "id": "string",
                                            "idExtension": 0
                                          },
                                          "databaseId": "string",
                                          "source": "Opera",
                                          "issueType": "Assigned",
                                          "issueDate": "2020-08-26",
                                          "awardPoints": 0,
                                          "generationDetail": {
                                            "ruleId": {
                                              "id": "string",
                                              "type": "string"
                                            },
                                            "generationDetail": "string",
                                            "referenceValue": "string"
                                          },
                                          "originalVoucherNo": "string",
                                          "originalCertificateNo": "string",
                                          "inLieuSequence": 0,
                                          "cancelRequestDate": "2020-08-26",
                                          "extensionCount": 0
                                        }
                                      ],
                                      "subscriptions": [
                                        {
                                          "profileId": {
                                            "url": "string",
                                            "type": "string",
                                            "instance": "string",
                                            "idContext": "string",
                                            "id": "string",
                                            "idExtension": 0
                                          },
                                          "externalProfileId": {
                                            "id": "string",
                                            "type": "string"
                                          },
                                          "profileInfo": {
                                            "name": "string",
                                            "fullName": "string",
                                            "namePrefix": "string",
                                            "givenName": "string",
                                            "middleName": "string",
                                            "nameSuffix": "string",
                                            "nameTitle": "string",
                                            "nameType": "Primary",
                                            "profileType": "Guest"
                                          },
                                          "distributed": true,
                                          "force": true,
                                          "subscriptionDate": "2020-08-26T15:00:10.519Z",
                                          "lastDistributionDate": "2020-08-26T15:00:10.519Z",
                                          "lastExternalUpdateDate": "2020-08-26T15:00:10.519Z",
                                          "inactive": true
                                        }
                                      ],
                                      "localizationGuestType": "string",
                                      "eligibleForFiscalFolio": "string",
                                      "profileType": "Guest",
                                      "statusCode": "Active",
                                      "registeredProperty": "string",
                                      "requestForHotel": "string",
                                      "protectedBy": "string",
                                      "createDateTime": "2020-08-26T15:00:10.519Z",
                                      "creatorId": "string",
                                      "lastModifyDateTime": "2020-08-26T15:00:10.519Z",
                                      "lastModifierId": "string",
                                      "purgeDate": "2020-08-26",
                                      "markAsRecentlyAccessed": true,
                                      "markForHistory": true,
                                      "hasCommission": true,
                                      "inheritedNegRates": true
                                    },
                                    "reservationProfileType": "Company"
                                  }
                                ],
                                "guestCounts": {
                                  "childAges": [
                                    {
                                      "age": 0
                                    }
                                  ],
                                  "childBuckets": {
                                    "bucket1Count": 0,
                                    "bucket2Count": 0,
                                    "bucket3Count": 0,
                                    "bucket4Count": 0,
                                    "bucket5Count": 0
                                  },
                                  "adults": 0,
                                  "children": 0
                                },
                                "taxFreeGuestCounts": {
                                  "childAges": [
                                    {
                                      "age": 0
                                    }
                                  ],
                                  "childBuckets": {
                                    "bucket1Count": 0,
                                    "bucket2Count": 0,
                                    "bucket3Count": 0,
                                    "bucket4Count": 0,
                                    "bucket5Count": 0
                                  },
                                  "adults": 0,
                                  "children": 0
                                },
                                "awards": {
                                  "membershipNo": {
                                    "id": "string",
                                    "type": "string"
                                  },
                                  "awardVouchers": [
                                    {
                                      "awardCode": "string",
                                      "voucherNo": "string"
                                    }
                                  ],
                                  "originalRoomType": "string",
                                  "upgradeRoomType": "string"
                                },
                                "foreignExchange": {
                                  "type": "string",
                                  "effectiveDate": "2020-08-26"
                                },
                                "reservationBlock": {
                                  "blockIdList": [
                                    {
                                      "id": "string",
                                      "type": "string"
                                    }
                                  ],
                                  "blockName": "string",
                                  "hotelId": "string"
                                },
                                "roomRateInfo": "string",
                                "mealPlans": [
                                  {
                                    "code": "string",
                                    "included": true,
                                    "breakfastIncluded": true,
                                    "lunchIncluded": true,
                                    "dinnerIncluded": true
                                  }
                                ],
                                "roomType": "string",
                                "ratePlanCode": "string",
                                "promotionCode": "string",
                                "start": "2020-08-26",
                                "end": "2020-08-26",
                                "availability": "Available",
                                "suppressRate": true,
                                "marketCode": "string",
                                "marketCodeDescription": "string",
                                "sourceCode": "string",
                                "sourceCodeDescription": "string",
                                "numberOfUnits": 0,
                                "roomId": "string",
                                "pseudoRoom": true,
                                "roomTypeCharged": "string",
                                "commissionCode": "string",
                                "commissionable": true,
                                "houseUseOnly": true,
                                "complimentary": true,
                                "inventoryLender": "string",
                                "fixedRate": true,
                                "barRanking": 0,
                                "rateGroup": "string",
                                "discountAllowed": true,
                                "bogoDiscount": true,
                                "rateLevel": "string",
                                "commissionPercentage": 0,
                                "commissionAmount": 0,
                                "credentialsRequired": true,
                                "taxIncluded": true,
                                "rateDescription": "string"
                              }
                            ],
                            "guestCounts": {
                              "childAges": [
                                {
                                  "age": 0
                                }
                              ],
                              "childBuckets": {
                                "bucket1Count": 0,
                                "bucket2Count": 0,
                                "bucket3Count": 0,
                                "bucket4Count": 0,
                                "bucket5Count": 0
                              },
                              "adults": 0,
                              "children": 0
                            },
                            "arrivalDate": "2020-08-26",
                            "departureDate": "2020-08-26",
                            "expectedTimes": {
                              "reservationExpectedArrivalTime": "2020-08-26T15:00:10.520Z",
                              "reservationExpectedDepartureTime": "2020-08-26T15:00:10.520Z"
                            },
                            "originalTimeSpan": {
                              "startDate": "2020-08-26",
                              "endDate": "2020-08-26",
                              "duration": "string"
                            },
                            "guarantee": {
                              "guaranteeCode": "string",
                              "shortDescription": "string",
                              "onHold": true
                            },
                            "promotion": {
                              "promotionCode": "string",
                              "promotionName": "string",
                              "couponCode": "string"
                            },
                            "suiteWith": "string",
                            "total": {
                              "taxes": {
                                "tax": [
                                  {
                                    "description": "string",
                                    "type": "Inclusive",
                                    "code": "string",
                                    "amount": 0,
                                    "currencyCode": "string"
                                  }
                                ],
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "fees": {
                                "fee": [
                                  {
                                    "description": "string",
                                    "type": "Inclusive",
                                    "code": "string",
                                    "amount": 0,
                                    "currencyCode": "string"
                                  }
                                ],
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "description": "string",
                              "amountBeforeTax": 0,
                              "amountAfterTax": 0,
                              "currencyCode": "string",
                              "currencySymbol": "string",
                              "decimalPlaces": 0,
                              "code": "string",
                              "rateOverride": true
                            },
                            "totalPoints": {
                              "awardsType": "string",
                              "points": 0
                            },
                            "multiValueAttrs": [
                              "string"
                            ],
                            "upsellInfo": {
                              "originalInfo": {
                                "rateCode": "string",
                                "totalAmount": {
                                  "amount": 0,
                                  "currencyCode": "string"
                                },
                                "roomType": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "nights": 0
                              },
                              "upsellInfo": {
                                "totalUpsellCharge": {
                                  "amount": 0,
                                  "currencyCode": "string"
                                },
                                "totalUpsellMoneyAmount": {
                                  "amount": 0,
                                  "currencyCode": "string"
                                },
                                "firstNightUpsellAmount": {
                                  "amount": 0,
                                  "currencyCode": "string"
                                },
                                "firstNightUpsellCharge": {
                                  "amount": 0,
                                  "currencyCode": "string"
                                },
                                "totalUpsellPoints": 0,
                                "totalActualRateAmount": {
                                  "amount": 0,
                                  "currencyCode": "string"
                                },
                                "roomType": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "roomLongDescription": "string",
                                "ruleId": 0,
                                "ruleCode": "string",
                                "ruleDescription": "string",
                                "percentageSavings": 0,
                                "upsellDate": "2020-08-26",
                                "upsellUser": "string"
                              }
                            },
                            "mobileNotifications": {
                              "roomReady": "Pending",
                              "keyReady": "Pending",
                              "checkoutMessageReceived": true,
                              "requiresAction": true,
                              "errorMessage": "string"
                            },
                            "roomNumberLocked": true,
                            "printRate": true,
                            "primaryShareType": "Primary",
                            "remoteCheckInAllowed": true,
                            "bookingMedium": "string",
                            "bookingMediumDescription": "string"
                          }
                        ]
                      },
                      "channelSummaryInfo": {
                        "bookingChannel": {
                          "channelCode": "string",
                          "channelName": "string",
                          "channelType": "string"
                        },
                        "messageId": "string",
                        "summaryOnly": true
                      },
                      "sellMessages": {
                        "sellMessage": [
                          {
                            "message": "string",
                            "croCode": "string",
                            "chainCode": "string",
                            "hotelId": "string",
                            "roomType": "string",
                            "ratePlanCode": "string",
                            "languageCode": "string",
                            "stickyFlagYn": "string",
                            "usedInModule": "Blocks",
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0
                          }
                        ],
                        "hasMore": true,
                        "totalResults": 0,
                        "count": 0
                      },
                      "currencyExchangeRates": [
                        {
                          "currencyCode": "string",
                          "currencySymbol": "string",
                          "decimalPlaces": 0,
                          "description": "string",
                          "exchangeRate": {
                            "amount": 0,
                            "currencyCode": "string"
                          }
                        }
                      ],
                      "chainCode": "string",
                      "hotelId": "string",
                      "hotelCityCode": "string",
                      "hotelName": "string",
                      "hotelCodeContext": "string",
                      "chainName": "string",
                      "hotelType": "string",
                      "negotiated": true,
                      "alternate": true,
                      "displayOrder": 0,
                      "inventoryRooms": 0,
                      "availableRooms": 0,
                      "comments": "string",
                      "direction": "string",
                      "reciprocalRelationship": true,
                      "alternateHotelCode": "string",
                      "newAlternateHotelCode": "string"
                    }
                  ],
                  "hotelContacts": [
                    {
                      "nameId": {
                        "id": "string",
                        "type": "string"
                      },
                      "hotelId": "string",
                      "name": "string",
                      "roles": [
                        "Lead"
                      ],
                      "ownerCode": "string",
                      "communicationMethod": "string",
                      "communicationAddress": "string",
                      "primary": true
                    }
                  ],
                  "hotelEventSpaces": {
                    "eventSpaceDetails": [
                      {
                        "code": "string",
                        "description": "string",
                        "maxCapacity": 0,
                        "maxOccupancies": [
                          0
                        ]
                      }
                    ],
                    "eventSpaceSummaries": [
                      {
                        "no": 0,
                        "spaceType": "string",
                        "maxCapacity": 0,
                        "maxOccupancies": [
                          0
                        ]
                      }
                    ],
                    "setupStyles": [
                      "string"
                    ]
                  },
                  "hotelNotes": [
                    {
                      "comment": {
                        "text": {
                          "value": "string",
                          "language": "string"
                        },
                        "image": "string",
                        "url": "string",
                        "commentTitle": "string",
                        "notificationLocation": "string",
                        "type": "string",
                        "typeDescription": "string",
                        "internal": true,
                        "confidential": true,
                        "overrideInternal": true,
                        "protectDescription": true,
                        "hotelId": "string",
                        "actionType": "string",
                        "actionDate": "2020-08-26",
                        "createDateTime": "2020-08-26T15:00:10.520Z",
                        "creatorId": "string",
                        "lastModifyDateTime": "2020-08-26T15:00:10.520Z",
                        "lastModifierId": "string",
                        "purgeDate": "2020-08-26"
                      },
                      "createDateTime": "2020-08-26T15:00:10.520Z",
                      "creatorId": "string",
                      "lastModifyDateTime": "2020-08-26T15:00:10.520Z",
                      "lastModifierId": "string",
                      "purgeDate": "2020-08-26",
                      "id": "string",
                      "type": "string"
                    }
                  ],
                  "hotelCorporateInformations": {
                    "brandCode": "string",
                    "hotelCategory": "string",
                    "businessUnit": [
                      {
                        "primary": true,
                        "codeDescription": {
                          "code": "string",
                          "description": "string"
                        }
                      }
                    ],
                    "departmentCode": [
                      {
                        "primary": true,
                        "codeDescription": {
                          "code": "string",
                          "description": "string"
                        }
                      }
                    ],
                    "division": [
                      {
                        "primary": true,
                        "codeDescription": {
                          "code": "string",
                          "description": "string"
                        }
                      }
                    ],
                    "opertingUnit": [
                      {
                        "primary": true,
                        "codeDescription": {
                          "code": "string",
                          "description": "string"
                        }
                      }
                    ]
                  },
                  "attractions": [
                    {
                      "name": {
                        "defaultText": "string",
                        "translatedTexts": [
                          {
                            "value": "string",
                            "language": "string"
                          }
                        ]
                      },
                      "type": "string",
                      "class": "string",
                      "generalDirections": "string",
                      "relativePosition": {
                        "distance": 0,
                        "distanceType": "string",
                        "drivingTime": "string"
                      },
                      "address": {
                        "addressLine": [
                          "string"
                        ],
                        "cityName": "string",
                        "postalCode": "string",
                        "cityExtension": "string",
                        "county": "string",
                        "state": "string",
                        "country": {
                          "value": "string",
                          "code": "string"
                        },
                        "language": "string",
                        "type": "string",
                        "typeDescription": "string",
                        "primaryInd": true,
                        "updateReservations": true,
                        "barCode": "string",
                        "createDateTime": "2020-08-26T15:00:10.520Z",
                        "creatorId": "string",
                        "lastModifyDateTime": "2020-08-26T15:00:10.520Z",
                        "lastModifierId": "string",
                        "purgeDate": "2020-08-26"
                      },
                      "website": {
                        "value": "string",
                        "type": "string",
                        "typeDescription": "string",
                        "primaryInd": true,
                        "orderSequence": 0
                      },
                      "priceRange": "string",
                      "operationHours": "string",
                      "displaySeq": 0,
                      "code": "string"
                    }
                  ],
                  "meetingRooms": [
                    {
                      "code": "string",
                      "charge": "string",
                      "description": "string"
                    }
                  ],
                  "chainCode": "string",
                  "hotelId": "string",
                  "hotelCityCode": "string",
                  "hotelName": "string",
                  "hotelCodeContext": "string",
                  "chainName": "string"
                },
                "masterInfoList": [
                  {
                    "codeInfo": [
                      {
                        "description": "string",
                        "addtionalCodeInfo": [
                          {
                            "name": "LongDescription",
                            "value": "string"
                          }
                        ],
                        "hotelId": "string",
                        "code": "string"
                      }
                    ],
                    "codeType": "Country"
                  }
                ],
                "links": [
                  {
                    "href": "string",
                    "rel": "string",
                    "templated": false,
                    "method": "GET",
                    "targetSchema": "string",
                    "operationId": "string",
                    "title": "string"
                  }
                ]
              }
            }
          },
          "204": {
            "description": "Hotel not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "put": {
        "summary": "Update hotel information",
        "description": "Use this API to update hotel configuration information. <p><strong>OperationId:</strong>putHotel</p>",
        "operationId": "putHotel",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Property general information.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/airports": {
      "get": {
        "summary": "Get resort airports",
        "description": "Use this API to get resort airports. <p><strong>OperationId:</strong>getAirports</p>",
        "operationId": "getAirports",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "airportCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Airport code identifying the airport.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching airports configured for hotels.",
            "schema": {
              "$ref": "#/definitions/airportsDetails"
            }
          },
          "204": {
            "description": "Airports not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create new resort airports",
        "description": "Use this API to create new resort airports. <p><strong>OperationId:</strong>postAirports</p>",
        "operationId": "postAirports",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "airportsCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating new airports for hotels.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/airportsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/airports/{airportCode}": {
      "put": {
        "summary": "Change resort airports",
        "description": "Use this API to update resort airports. <p><strong>OperationId:</strong>changeAirports</p>",
        "operationId": "changeAirports",
        "parameters": [
          {
            "name": "airportCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of airport."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "airportsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for modifying airports for hotels.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/airportsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete resort airports",
        "description": "Use this API to delete resort airports. <p><strong>OperationId:</strong>removeAirports</p>",
        "operationId": "removeAirports",
        "parameters": [
          {
            "name": "airportCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of airport."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/alternates": {
      "post": {
        "summary": "Create Alternate Hotels",
        "description": "This API Use this API to creates the hotels Alternate Hotel information. <p><strong>OperationId:</strong>postAlternateHotels</p>",
        "operationId": "postAlternateHotels",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "alternateHotelsCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating new Alternate Hotels for hotels.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/alternateHotelsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/alternates/{alternateHotelId}": {
      "put": {
        "summary": "Update Alternate Hotels",
        "description": "This API updated the hotel's Alternate Hotel information. <p><strong>OperationId:</strong>changeAlternateHotels</p>",
        "operationId": "changeAlternateHotels",
        "parameters": [
          {
            "name": "alternateHotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of alternate hotel."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "alternateHotelsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing hotel Alternate Hotels for hotels.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/alternateHotelsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete Alternate Hotels",
        "description": "This API Use this API to deletes the hotel's Alternate Hotel information. <p><strong>OperationId:</strong>removeAlternateHotels</p>",
        "operationId": "removeAlternateHotels",
        "parameters": [
          {
            "name": "alternateHotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of alternate hotel."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/amenities": {
      "get": {
        "summary": "Get amenities",
        "description": "Use this API to get amenities. <p><strong>OperationId:</strong>getAmenities</p>",
        "operationId": "getAmenities",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "general",
            "in": "query",
            "required": false,
            "description": "Is it a General amenity type.",
            "type": "boolean"
          },
          {
            "name": "meeting",
            "in": "query",
            "required": false,
            "description": "Is it a Meeting amenity type.",
            "type": "boolean"
          },
          {
            "name": "amenityCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching amenities at the property level.",
            "schema": {
              "$ref": "#/definitions/amenitiesDetails"
            }
          },
          "204": {
            "description": "Amenities not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create amenities",
        "description": "Use this API to create amenities. <p><strong>OperationId:</strong>postAmenities</p>",
        "operationId": "postAmenities",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "amenitiesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating amenities at the property level.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/amenitiesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/amenities/{featureCode}": {
      "put": {
        "summary": "Change amenities",
        "description": "Use this API to update amenities. <p><strong>OperationId:</strong>changeAmenities</p>",
        "operationId": "changeAmenities",
        "parameters": [
          {
            "name": "featureCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of feature."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "amenitiesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing amenities at the property level.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/amenitiesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete amenities",
        "description": "Use this API to delete amenities. <p><strong>OperationId:</strong>removeAmenities</p>",
        "operationId": "removeAmenities",
        "parameters": [
          {
            "name": "featureCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of feature."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "beginDate",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "The date the amenity is scheduled to become active.",
            "items": {
              "type": "string",
              "format": "date"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/attractions": {
      "get": {
        "summary": "Get Attractions",
        "description": "Use this API to get Attractions. <p><strong>OperationId:</strong>getAttractions</p>",
        "operationId": "getAttractions",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "attractionCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "classCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for information regarding attraction.",
            "schema": {
              "$ref": "#/definitions/attractionsDetails"
            }
          },
          "204": {
            "description": "Attractions not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create Attractions",
        "description": "This API can be used to Use this API to create a new attraction for a property. . <p><strong>OperationId:</strong>postAttractions</p>",
        "operationId": "postAttractions",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "attractionsCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating a new group of attractions.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/attractionsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/attractions/{attractionCode}": {
      "put": {
        "summary": "Update an Attraction",
        "description": "This API is used to Use this API to update an existing attraction. . <p><strong>OperationId:</strong>changeAttractions</p>",
        "operationId": "changeAttractions",
        "parameters": [
          {
            "name": "attractionCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of attraction."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "attractionsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for modifying an existing attraction.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/attractionsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete Attractions",
        "description": " Use this API to remove an existing attraction. <p><strong>OperationId:</strong>removeAttractions</p>",
        "operationId": "removeAttractions",
        "parameters": [
          {
            "name": "attractionCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of attraction."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "attractionCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/calendar": {
      "get": {
        "summary": "Get Hotel Calendar",
        "description": "Use this API to get detailed information of calendar entries for a date range. <p><strong>OperationId:</strong>getHotelCalendar</p>",
        "operationId": "getHotelCalendar",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "startDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Indicates entries for a day in calendar. Entries can vary between day types, events, etc.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "DayType",
                "Event"
              ]
            },
            "required": true
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching calendar entries for a hotel.",
            "schema": {
              "$ref": "#/definitions/hotelCalendarDetails"
            }
          },
          "204": {
            "description": "HotelCalendar not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/centralConfigs/{config}": {
      "get": {
        "summary": "Lists the configurations managed centrally",
        "description": "This API will get the configuration items added from central within the property for this Configuration. <p><strong>OperationId:</strong>getCentralConfig</p>",
        "operationId": "getCentralConfig",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "config",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Configuration to be checked for listing the centrally managed items."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "List of configurations added from central.",
            "schema": {
              "$ref": "#/definitions/centralConfigsResponse"
            }
          },
          "204": {
            "description": "Central Configs not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/centralConfigs/{config}/items/{code}": {
      "put": {
        "summary": "Change the status for Central Config to manage at Hotel/Enterprise Level.",
        "description": "This API will manage if config can be updated from Hotel. <p><strong>OperationId:</strong>changeCentralConfig</p>",
        "operationId": "changeCentralConfig",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "config",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "Configuration to be checked for listing the configs."
          },
          {
            "name": "centralConfig",
            "in": "body",
            "required": true,
            "description": "Central Configuration",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/centralConfigRequest"
                }
              ]
            }
          },
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 200,
            "description": "Configuration Item to be modified."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of updated resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/contacts": {
      "post": {
        "summary": "Create Hotel Contacts",
        "description": "Use this API to create Hotel Contacts. <p><strong>OperationId:</strong>postHotelContacts</p>",
        "operationId": "postHotelContacts",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelContactsCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating new Contacts for hotels.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelContactsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/contacts/{contactId}": {
      "put": {
        "summary": "Change Hotel Contact",
        "description": "Use this API to update Hotel Contact. <p><strong>OperationId:</strong>changeHotelContacts</p>",
        "operationId": "changeHotelContacts",
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of contact."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelContactsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing hotel Contacts for hotels.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelContactsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete Hotel contact",
        "description": "Use this API to delete Hotel contact. <p><strong>OperationId:</strong>removeHotelContacts</p>",
        "operationId": "removeHotelContacts",
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of contact."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "idExtension",
            "in": "query",
            "required": false,
            "description": "Additional identifying value assigned by the creating system.",
            "type": "integer"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/countries": {
      "get": {
        "summary": "Get Countries",
        "description": "Use this API to get Countries. <p><strong>OperationId:</strong>getCountries</p> <p>The maximum allowable limit for this API is <strong>20</strong>.</p>",
        "operationId": "getCountries",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "countriesCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "maxLength": 4000,
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Countries.",
            "schema": {
              "$ref": "#/definitions/countriesDetails"
            }
          },
          "204": {
            "description": "Countries not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/countries/{countryCode}": {
      "put": {
        "summary": "Update a Country Code",
        "description": "Update a Country Code. <p><strong>OperationId:</strong>changeCountries</p>",
        "operationId": "changeCountries",
        "parameters": [
          {
            "name": "countryCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of country."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "countriesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for modifying Countries for hotels.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/countriesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/creditcardTypes": {
      "get": {
        "summary": "Get Credit Card Types",
        "description": "Use this API to get Credit Card Types. <p><strong>OperationId:</strong>getCreditCardTypes</p>",
        "operationId": "getCreditCardTypes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Credit Card Types.",
            "schema": {
              "$ref": "#/definitions/creditCardTypesDetails"
            }
          },
          "204": {
            "description": "CreditCardTypes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete Credit Card Types",
        "description": "Use this API to delete Credit Card Types. <p><strong>OperationId:</strong>removeCreditCardTypes</p>",
        "operationId": "removeCreditCardTypes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "creditCardTypesCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "put": {
        "summary": "Change Credit Card Types",
        "description": "Use this API to update Credit Card Types. <p><strong>OperationId:</strong>changeCreditCardTypes</p>",
        "operationId": "changeCreditCardTypes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "creditCardTypesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Credit Card Types.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/creditCardTypesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create Credit Card Types",
        "description": "Use this API to create Credit Card Types. <p><strong>OperationId:</strong>postCreditCardTypes</p>",
        "operationId": "postCreditCardTypes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "creditCardTypesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Credit Card Types.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/creditCardTypesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/dayTypeCodes": {
      "get": {
        "summary": "Get Hotel Day Type Codes",
        "description": "Use this API to get Hotel Day Type Codes. <p><strong>OperationId:</strong>getHotelDayTypeCodes</p>",
        "operationId": "getHotelDayTypeCodes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "dayTypesCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching day type codes for a hotel.",
            "schema": {
              "$ref": "#/definitions/hotelDayTypeCodesDetails"
            }
          },
          "204": {
            "description": "HotelDayTypeCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "put": {
        "summary": "Change Hotel Day Type Codes",
        "description": "Use this API to update Hotel Day Type Codes. <p><strong>OperationId:</strong>changeHotelDayTypeCodes</p>",
        "operationId": "changeHotelDayTypeCodes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelDayTypeCodesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for modifying day type codes for a hotel.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelDayTypeCodesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create Hotel Day Type Codes",
        "description": "Use this API to create Hotel Day Type Codes. <p><strong>OperationId:</strong>postHotelDayTypeCodes</p>",
        "operationId": "postHotelDayTypeCodes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelDayTypeCodesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating new day type codes for a hotel.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelDayTypeCodesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete Hotel Day Type Codes",
        "description": "Use this API to delete Hotel Day Type Codes. <p><strong>OperationId:</strong>removeHotelDayTypeCodes</p>",
        "operationId": "removeHotelDayTypeCodes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/events": {
      "put": {
        "summary": "Set hotel events ",
        "description": "Set hotel events. <p><strong>OperationId:</strong>setHotelEvents</p>",
        "operationId": "setHotelEvents",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "setHotelEvents",
            "in": "body",
            "required": true,
            "description": "Request object for setting hotel events for specified date range.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/setHotelEvents"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/events/{eventId}": {
      "delete": {
        "summary": "Delete Hotel Events",
        "description": "Use this API to delete Hotel Events. <p><strong>OperationId:</strong>removeHotelEvents</p>",
        "operationId": "removeHotelEvents",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of event."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "friday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "monday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "saturday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sunday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "thursday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "tuesday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "wednesday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/flexFields/{flexFieldId}": {
      "get": {
        "summary": "Operation to fetch the flex field details.",
        "description": "API to fetch the flex field details.<br><p><strong></strong></p> <p><strong>OperationId:</strong>getFlexField</p>",
        "operationId": "getFlexField",
        "deprecated": false,
        "parameters": [
          {
            "name": "flexFieldId",
            "in": "path",
            "required": true,
            "type": "number",
            "description": "Flex Field ID"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 20,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching the configuration of flex fields.",
            "schema": {
              "$ref": "#/definitions/flexFieldCriteria"
            }
          },
          "204": {
            "description": "Flex field not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "put": {
        "summary": "Operation to update flex field.",
        "description": "Operation to update flex field. <p><strong>OperationId:</strong>updateFlexField</p>",
        "operationId": "updateFlexField",
        "parameters": [
          {
            "name": "flexFieldId",
            "in": "path",
            "required": true,
            "type": "number",
            "description": "Flex Field ID"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 20,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "name": "flexFieldDetail",
            "in": "body",
            "required": true,
            "description": "Request object for updating the configuration of flex fields.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/flexFieldCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Operation to delete a flex field.",
        "description": "Operation to delete a flex field. <p><strong>OperationId:</strong>deleteFlexField</p>",
        "operationId": "deleteFlexField",
        "parameters": [
          {
            "name": "flexFieldId",
            "in": "path",
            "required": true,
            "type": "number",
            "description": "Flex Field ID"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 20,
            "description": "Unique ID of the hotel in OPERA"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/hotels/{hotelId}/hotelBrochure": {
      "get": {
        "summary": "Get Hotel Brochure",
        "description": "This API Use this API to gets the hotel brochure information based on the search criteria. The Hotel code and a set of instructions can be sent as part of the request message. <p><strong>OperationId:</strong>getHotelBrochure</p>",
        "operationId": "getHotelBrochure",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple type for hotel fetch instruction.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "General",
                "Attraction",
                "Transportation",
                "Package",
                "Dining",
                "Feature",
                "Directions",
                "GeneralNotes",
                "Airports",
                "Alternatehotels",
                "Miscellaneous",
                "Raterange",
                "Contacts",
                "EventSpaces",
                "Notes",
                "Corporateinformation",
                "Meetingrooms"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Basic Property information.",
            "schema": {
              "$ref": "#/definitions/hotelBrochureDetails"
            },
            "examples": {
              "application/json": {
                "hotelBrochure": {
                  "primaryDetails": {
                    "legalOwner": "string"
                  },
                  "generalInformation": {
                    "hotelType": "string",
                    "roomCount": 0,
                    "bedCount": 0,
                    "floorCount": 0,
                    "checkInTime": "2020-08-26T15:05:08.986Z",
                    "checkOutTime": "2020-08-26T15:05:08.986Z",
                    "hotelInfoWebsite": {
                      "value": "string",
                      "type": "string",
                      "typeDescription": "string",
                      "primaryInd": true,
                      "orderSequence": 0
                    },
                    "longitude": 0,
                    "latitude": 0,
                    "baseLanguage": "string"
                  },
                  "accommodationDetails": {
                    "singleRooms": 0,
                    "doubleRooms": 0,
                    "twinRooms": 0,
                    "familyRooms": 0,
                    "connectingRooms": 0,
                    "accessibleRooms": 0,
                    "nonSmokingRooms": 0,
                    "maxAdultsInFamilyRoom": 0,
                    "maxChildrenInFamilyRoom": 0,
                    "guestRoomFloors": 0,
                    "guestRoomElevators": 0,
                    "suites": 0,
                    "executiveFloorNo": "string",
                    "roomAmenties": "string",
                    "shopDescription": "string"
                  },
                  "propertyControls": {
                    "sellControls": {
                      "startDate": "2020-08-26",
                      "endDate": "2020-08-26",
                      "hotelId": "string"
                    },
                    "currencyFormatting": {
                      "currencyCode": "string",
                      "currencyFormat": "string",
                      "currencySymbol": "string",
                      "decimalPositions": 0
                    },
                    "cateringCurrencyFormatting": {
                      "currencyCode": "string",
                      "currencyFormat": "string"
                    },
                    "dateTimeFormatting": {
                      "longDateFormat": "string",
                      "shortDateFormat": "string",
                      "timeFormat": "string",
                      "timeZoneRegion": "string"
                    },
                    "applicationMode": {
                      "configurationMode": "string",
                      "countryMode": "string",
                      "expHotelCode": "string",
                      "touristNumber": "string",
                      "mbsSupported": true
                    }
                  },
                  "communication": {
                    "phoneNumber": {
                      "phoneTechType": "string",
                      "phoneUseType": "string",
                      "phoneUseTypeDescription": "string",
                      "phoneNumber": "string",
                      "extension": "string",
                      "primaryInd": true,
                      "orderSequence": 0,
                      "createDateTime": "2020-08-26T15:05:08.986Z",
                      "creatorId": "string",
                      "lastModifyDateTime": "2020-08-26T15:05:08.986Z",
                      "lastModifierId": "string",
                      "purgeDate": "2020-08-26"
                    },
                    "tollFreeNumber": {
                      "phoneTechType": "string",
                      "phoneUseType": "string",
                      "phoneUseTypeDescription": "string",
                      "phoneNumber": "string",
                      "extension": "string",
                      "primaryInd": true,
                      "orderSequence": 0,
                      "createDateTime": "2020-08-26T15:05:08.986Z",
                      "creatorId": "string",
                      "lastModifyDateTime": "2020-08-26T15:05:08.986Z",
                      "lastModifierId": "string",
                      "purgeDate": "2020-08-26"
                    },
                    "faxNumber": {
                      "phoneTechType": "string",
                      "phoneUseType": "string",
                      "phoneUseTypeDescription": "string",
                      "phoneNumber": "string",
                      "extension": "string",
                      "primaryInd": true,
                      "orderSequence": 0,
                      "createDateTime": "2020-08-26T15:05:08.986Z",
                      "creatorId": "string",
                      "lastModifyDateTime": "2020-08-26T15:05:08.986Z",
                      "lastModifierId": "string",
                      "purgeDate": "2020-08-26"
                    },
                    "emailAddress": "string",
                    "webPage": {
                      "value": "string",
                      "type": "string",
                      "typeDescription": "string",
                      "primaryInd": true,
                      "orderSequence": 0
                    }
                  },
                  "address": {
                    "addressLine": [
                      "string"
                    ],
                    "cityName": "string",
                    "postalCode": "string",
                    "cityExtension": "string",
                    "county": "string",
                    "state": "string",
                    "country": {
                      "value": "string",
                      "code": "string"
                    },
                    "language": "string",
                    "type": "string",
                    "typeDescription": "string",
                    "primaryInd": true,
                    "updateReservations": true,
                    "barCode": "string",
                    "createDateTime": "2020-08-26T15:05:08.986Z",
                    "creatorId": "string",
                    "lastModifyDateTime": "2020-08-26T15:05:08.986Z",
                    "lastModifierId": "string",
                    "purgeDate": "2020-08-26",
                    "regionCode": "string"
                  },
                  "hotelRestaurants": [
                    {
                      "restaurantName": "string",
                      "restaurantType": "string",
                      "hours": "string",
                      "priceRange": "string",
                      "comments": "string",
                      "category": "Restaurant",
                      "timeSpan": {
                        "startDate": "2020-08-26",
                        "endDate": "2020-08-26",
                        "duration": "string"
                      },
                      "newRestaurantCode": "string",
                      "restaurantCode": "string",
                      "orderBy": 0,
                      "hotelId": "string"
                    }
                  ],
                  "hotelRateRanges": [
                    {
                      "timeSpan": {
                        "startDate": "2020-08-26",
                        "endDate": "2020-08-26",
                        "duration": "string"
                      },
                      "minRate": 0,
                      "maxRate": 0,
                      "currencyCode": "string",
                      "hotelId": "string"
                    }
                  ],
                  "alternateHotels": [
                    {
                      "address": {
                        "addressLine": [
                          "string"
                        ],
                        "cityName": "string",
                        "postalCode": "string",
                        "cityExtension": "string",
                        "county": "string",
                        "state": "string",
                        "country": {
                          "value": "string",
                          "code": "string"
                        },
                        "language": "string",
                        "type": "string",
                        "typeDescription": "string",
                        "primaryInd": true,
                        "updateReservations": true,
                        "barCode": "string",
                        "createDateTime": "2020-08-26T15:05:08.986Z",
                        "creatorId": "string",
                        "lastModifyDateTime": "2020-08-26T15:05:08.986Z",
                        "lastModifierId": "string",
                        "purgeDate": "2020-08-26"
                      },
                      "contactNumbers": [
                        {
                          "phoneTechType": "string",
                          "phoneUseType": "string",
                          "phoneUseTypeDescription": "string",
                          "phoneNumber": "string",
                          "extension": "string",
                          "primaryInd": true,
                          "orderSequence": 0,
                          "createDateTime": "2020-08-26T15:05:08.986Z",
                          "creatorId": "string",
                          "lastModifyDateTime": "2020-08-26T15:05:08.987Z",
                          "lastModifierId": "string",
                          "purgeDate": "2020-08-26"
                        }
                      ],
                      "minRate": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "maxRate": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "relativePosition": {
                        "distance": 0,
                        "distanceType": "string",
                        "drivingTime": "string"
                      },
                      "hotelAmenities": [
                        {
                          "description": "string",
                          "code": "string",
                          "type": "string",
                          "displayOrder": 0
                        }
                      ],
                      "event": true,
                      "rateRoomDetails": {
                        "memberships": [
                          {
                            "membershipId": "string",
                            "membershipLevel": [
                              "string"
                            ],
                            "membershipType": [
                              "string"
                            ],
                            "associatedReservationsOnly": true
                          }
                        ],
                        "restrictionType": "Closed",
                        "roomStays": [
                          {
                            "roomRates": [
                              {
                                "total": {
                                  "taxes": {
                                    "tax": [
                                      {
                                        "description": "string",
                                        "type": "Inclusive",
                                        "code": "string",
                                        "amount": 0,
                                        "currencyCode": "string"
                                      }
                                    ],
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "fees": {
                                    "fee": [
                                      {
                                        "description": "string",
                                        "type": "Inclusive",
                                        "code": "string",
                                        "amount": 0,
                                        "currencyCode": "string"
                                      }
                                    ],
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "description": "string",
                                  "amountBeforeTax": 0,
                                  "amountAfterTax": 0,
                                  "currencyCode": "string",
                                  "currencySymbol": "string",
                                  "decimalPlaces": 0,
                                  "code": "string",
                                  "rateOverride": true
                                },
                                "totalPoints": {
                                  "awardsType": "string",
                                  "points": 0
                                },
                                "rates": {
                                  "rate": [
                                    {
                                      "base": {
                                        "taxes": {
                                          "tax": [
                                            {
                                              "description": "string",
                                              "type": "Inclusive",
                                              "code": "string",
                                              "amount": 0,
                                              "currencyCode": "string"
                                            }
                                          ],
                                          "amount": 0,
                                          "currencyCode": "string"
                                        },
                                        "fees": {
                                          "fee": [
                                            {
                                              "description": "string",
                                              "type": "Inclusive",
                                              "code": "string",
                                              "amount": 0,
                                              "currencyCode": "string"
                                            }
                                          ],
                                          "amount": 0,
                                          "currencyCode": "string"
                                        },
                                        "description": "string",
                                        "amountBeforeTax": 0,
                                        "amountAfterTax": 0,
                                        "currencyCode": "string",
                                        "currencySymbol": "string",
                                        "decimalPlaces": 0,
                                        "code": "string",
                                        "rateOverride": true
                                      },
                                      "additionalGuestAmounts": [
                                        {
                                          "amount": {
                                            "taxes": {
                                              "tax": [
                                                {
                                                  "description": "string",
                                                  "type": "Inclusive",
                                                  "code": "string",
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                }
                                              ],
                                              "amount": 0,
                                              "currencyCode": "string"
                                            },
                                            "fees": {
                                              "fee": [
                                                {
                                                  "description": "string",
                                                  "type": "Inclusive",
                                                  "code": "string",
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                }
                                              ],
                                              "amount": 0,
                                              "currencyCode": "string"
                                            },
                                            "description": "string",
                                            "amountBeforeTax": 0,
                                            "amountAfterTax": 0,
                                            "currencyCode": "string",
                                            "currencySymbol": "string",
                                            "decimalPlaces": 0,
                                            "code": "string",
                                            "rateOverride": true
                                          },
                                          "ageQualifyingCode": "ADULT"
                                        }
                                      ],
                                      "discount": {
                                        "discountReason": "string",
                                        "percent": 0,
                                        "amount": 0,
                                        "currencyCode": "string",
                                        "discountCode": "string"
                                      },
                                      "shareRatePercentage": 0,
                                      "shareDistributionInstruction": "Full",
                                      "total": {
                                        "taxes": {
                                          "tax": [
                                            {
                                              "description": "string",
                                              "type": "Inclusive",
                                              "code": "string",
                                              "amount": 0,
                                              "currencyCode": "string"
                                            }
                                          ],
                                          "amount": 0,
                                          "currencyCode": "string"
                                        },
                                        "fees": {
                                          "fee": [
                                            {
                                              "description": "string",
                                              "type": "Inclusive",
                                              "code": "string",
                                              "amount": 0,
                                              "currencyCode": "string"
                                            }
                                          ],
                                          "amount": 0,
                                          "currencyCode": "string"
                                        },
                                        "description": "string",
                                        "amountBeforeTax": 0,
                                        "amountAfterTax": 0,
                                        "currencyCode": "string",
                                        "currencySymbol": "string",
                                        "decimalPlaces": 0,
                                        "code": "string",
                                        "rateOverride": true
                                      },
                                      "requiredPoints": {
                                        "awardsType": "string",
                                        "points": 0
                                      },
                                      "effectiveRate": {
                                        "taxes": {
                                          "tax": [
                                            {
                                              "description": "string",
                                              "type": "Inclusive",
                                              "code": "string",
                                              "amount": 0,
                                              "currencyCode": "string"
                                            }
                                          ],
                                          "amount": 0,
                                          "currencyCode": "string"
                                        },
                                        "fees": {
                                          "fee": [
                                            {
                                              "description": "string",
                                              "type": "Inclusive",
                                              "code": "string",
                                              "amount": 0,
                                              "currencyCode": "string"
                                            }
                                          ],
                                          "amount": 0,
                                          "currencyCode": "string"
                                        },
                                        "description": "string",
                                        "amountBeforeTax": 0,
                                        "amountAfterTax": 0,
                                        "currencyCode": "string",
                                        "currencySymbol": "string",
                                        "decimalPlaces": 0,
                                        "code": "string",
                                        "rateOverride": true
                                      },
                                      "start": "2020-08-26",
                                      "end": "2020-08-26"
                                    }
                                  ],
                                  "rateRange": [
                                    {
                                      "base": [
                                        {
                                          "taxes": {
                                            "tax": [
                                              {
                                                "description": "string",
                                                "type": "Inclusive",
                                                "code": "string",
                                                "amount": 0,
                                                "currencyCode": "string"
                                              }
                                            ],
                                            "amount": 0,
                                            "currencyCode": "string"
                                          },
                                          "fees": {
                                            "fee": [
                                              {
                                                "description": "string",
                                                "type": "Inclusive",
                                                "code": "string",
                                                "amount": 0,
                                                "currencyCode": "string"
                                              }
                                            ],
                                            "amount": 0,
                                            "currencyCode": "string"
                                          },
                                          "description": "string",
                                          "amountBeforeTax": 0,
                                          "amountAfterTax": 0,
                                          "currencyCode": "string",
                                          "currencySymbol": "string",
                                          "decimalPlaces": 0,
                                          "code": "string",
                                          "rateOverride": true
                                        }
                                      ],
                                      "rateChange": true
                                    }
                                  ]
                                },
                                "packages": [
                                  {
                                    "amount": {
                                      "amount": 0,
                                      "currencyCode": "string"
                                    },
                                    "allowance": {
                                      "amount": 0,
                                      "currencyCode": "string"
                                    },
                                    "description": [
                                      "string"
                                    ],
                                    "startDate": "2020-08-26",
                                    "endDate": "2020-08-26",
                                    "packageCode": "string",
                                    "calculationRule": "string",
                                    "postingRhythm": "string",
                                    "quantity": 0,
                                    "includedInRate": true,
                                    "addRateSeprateLine": true,
                                    "addRateCombinedLine": true,
                                    "startTime": "string",
                                    "endTime": "string",
                                    "sellSeparate": true
                                  }
                                ],
                                "stayProfiles": [
                                  {
                                    "profileIdList": [
                                      {
                                        "id": "string",
                                        "type": "string"
                                      }
                                    ],
                                    "profile": {
                                      "customer": {
                                        "personName": [
                                          {
                                            "namePrefix": "string",
                                            "givenName": "string",
                                            "middleName": "string",
                                            "surname": "string",
                                            "nameSuffix": "string",
                                            "nameTitle": "string",
                                            "nameTitleSuffix": 0,
                                            "envelopeGreeting": "string",
                                            "salutation": "string",
                                            "nameType": "Primary",
                                            "language": "string",
                                            "externalSystem": "string"
                                          }
                                        ],
                                        "anonymization": {
                                          "anonymizationStatus": "Requested",
                                          "anonymizationDate": "2020-08-26T15:05:08.987Z"
                                        },
                                        "citizenCountry": {
                                          "value": "string",
                                          "code": "string"
                                        },
                                        "identifications": {
                                          "identificationInfo": [
                                            {
                                              "identification": {
                                                "idType": "string",
                                                "idNumber": "string",
                                                "idNumberMasked": "string",
                                                "issuedCountry": "string",
                                                "issuedDate": "2020-08-26",
                                                "issuedPlace": "string",
                                                "expirationDate": "2020-08-26",
                                                "registeredProperty": "string",
                                                "primaryInd": true,
                                                "orderSequence": 0
                                              },
                                              "id": "string",
                                              "type": "string"
                                            }
                                          ],
                                          "hasMore": true,
                                          "totalResults": 0,
                                          "count": 0
                                        },
                                        "profession": "string",
                                        "alienInfo": {
                                          "alienRegistrationNo": "string",
                                          "immigrationStatus": "string",
                                          "visaValidityType": "string"
                                        },
                                        "birthCountry": {
                                          "value": "string",
                                          "code": "string"
                                        },
                                        "legalCompany": "string",
                                        "companyInfo": {
                                          "legalCompany": "string",
                                          "department": "string",
                                          "position": "string"
                                        },
                                        "businessTitle": "string",
                                        "gender": "Male",
                                        "birthDate": "2020-08-26",
                                        "birthDateMasked": "string",
                                        "currencyCode": "string",
                                        "currencySymbol": "string",
                                        "decimalPlaces": 0,
                                        "language": "string",
                                        "nationality": "string",
                                        "nationalityDescription": "string",
                                        "customerValue": "string",
                                        "creditRating": "string",
                                        "vipStatus": "string",
                                        "vipDescription": "string",
                                        "birthPlace": "string",
                                        "privateProfile": true,
                                        "blacklist": true
                                      },
                                      "company": {
                                        "companyName": "string",
                                        "companyName2": "string",
                                        "companyName3": "string",
                                        "alternateName": "string",
                                        "alternateLanguage": "string",
                                        "businessLocale": "string",
                                        "iATAInfo": {
                                          "iATACompany": "string",
                                          "iATAConsortia": "string",
                                          "iATAValidationResult": true
                                        },
                                        "businessTitle": "string",
                                        "currencyCode": "string",
                                        "currencySymbol": "string",
                                        "decimalPlaces": 0,
                                        "language": "string",
                                        "nationality": "string",
                                        "nationalityDescription": "string",
                                        "commissionCode": "string",
                                        "creditRating": "string",
                                        "corporateIdType": "string",
                                        "vipStatus": "string",
                                        "vipDescription": "string",
                                        "blacklist": true
                                      },
                                      "profileImage": {
                                        "language": "string",
                                        "imageSet": "string",
                                        "sequenceId": 0,
                                        "imageStyle": "Full",
                                        "imageType": "string",
                                        "hotelId": "string",
                                        "chainCode": "string",
                                        "imageURL": "string",
                                        "description": "string",
                                        "imageOrder": 0,
                                        "website": "string"
                                      },
                                      "addresses": {
                                        "addressInfo": [
                                          {
                                            "address": {
                                              "addressLine": [
                                                "string"
                                              ],
                                              "cityName": "string",
                                              "postalCode": "string",
                                              "cityExtension": "string",
                                              "county": "string",
                                              "state": "string",
                                              "country": {
                                                "value": "string",
                                                "code": "string"
                                              },
                                              "language": "string",
                                              "type": "string",
                                              "typeDescription": "string",
                                              "primaryInd": true,
                                              "updateReservations": true,
                                              "barCode": "string",
                                              "createDateTime": "2020-08-26T15:05:08.988Z",
                                              "creatorId": "string",
                                              "lastModifyDateTime": "2020-08-26T15:05:08.988Z",
                                              "lastModifierId": "string",
                                              "purgeDate": "2020-08-26"
                                            },
                                            "id": "string",
                                            "type": "string"
                                          }
                                        ],
                                        "hasMore": true,
                                        "totalResults": 0,
                                        "count": 0
                                      },
                                      "businessSegments": [
                                        "string"
                                      ],
                                      "territory": "string",
                                      "traceCode": "string",
                                      "ownerCode": "string",
                                      "influenceCode": "string",
                                      "telephones": {
                                        "telephoneInfo": [
                                          {
                                            "telephone": {
                                              "phoneTechType": "string",
                                              "phoneUseType": "string",
                                              "phoneUseTypeDescription": "string",
                                              "phoneNumber": "string",
                                              "extension": "string",
                                              "primaryInd": true,
                                              "orderSequence": 0,
                                              "createDateTime": "2020-08-26T15:05:08.988Z",
                                              "creatorId": "string",
                                              "lastModifyDateTime": "2020-08-26T15:05:08.988Z",
                                              "lastModifierId": "string",
                                              "purgeDate": "2020-08-26"
                                            },
                                            "id": "string",
                                            "type": "string"
                                          }
                                        ],
                                        "hasMore": true,
                                        "totalResults": 0,
                                        "count": 0
                                      },
                                      "emails": {
                                        "emailInfo": [
                                          {
                                            "email": {
                                              "emailAddress": "string",
                                              "type": "string",
                                              "typeDescription": "string",
                                              "emailFormat": "Html",
                                              "primaryInd": true,
                                              "orderSequence": 0,
                                              "createDateTime": "2020-08-26T15:05:08.988Z",
                                              "creatorId": "string",
                                              "lastModifyDateTime": "2020-08-26T15:05:08.988Z",
                                              "lastModifierId": "string",
                                              "purgeDate": "2020-08-26"
                                            },
                                            "id": "string",
                                            "type": "string"
                                          }
                                        ],
                                        "hasMore": true,
                                        "totalResults": 0,
                                        "count": 0
                                      },
                                      "uRLs": {
                                        "uRLInfo": [
                                          {
                                            "url": {
                                              "value": "string",
                                              "type": "string",
                                              "typeDescription": "string",
                                              "primaryInd": true,
                                              "orderSequence": 0
                                            },
                                            "id": "string",
                                            "type": "string"
                                          }
                                        ],
                                        "hasMore": true,
                                        "totalResults": 0,
                                        "count": 0
                                      },
                                      "comments": {
                                        "commentInfo": [
                                          {
                                            "comment": {
                                              "text": {
                                                "value": "string",
                                                "language": "string"
                                              },
                                              "image": "string",
                                              "url": "string",
                                              "commentTitle": "string",
                                              "notificationLocation": "string",
                                              "type": "string",
                                              "typeDescription": "string",
                                              "internal": true,
                                              "confidential": true,
                                              "overrideInternal": true,
                                              "protectDescription": true,
                                              "hotelId": "string",
                                              "actionType": "string",
                                              "actionDate": "2020-08-26",
                                              "createDateTime": "2020-08-26T15:05:08.989Z",
                                              "creatorId": "string",
                                              "lastModifyDateTime": "2020-08-26T15:05:08.989Z",
                                              "lastModifierId": "string",
                                              "purgeDate": "2020-08-26"
                                            },
                                            "createDateTime": "2020-08-26T15:05:08.989Z",
                                            "creatorId": "string",
                                            "lastModifyDateTime": "2020-08-26T15:05:08.989Z",
                                            "lastModifierId": "string",
                                            "purgeDate": "2020-08-26",
                                            "id": "string",
                                            "type": "string"
                                          }
                                        ],
                                        "hasMore": true,
                                        "totalResults": 0,
                                        "count": 0
                                      },
                                      "profileDeliveryMethods": {
                                        "profileDeliveryMethod": [
                                          {
                                            "deliveryId": {
                                              "id": "string",
                                              "type": "string"
                                            },
                                            "deliveryType": "string",
                                            "deliveryValue": "string",
                                            "hotelId": "string",
                                            "deliveryModule": "EfolioExport",
                                            "primaryInd": true,
                                            "orderSequence": 0
                                          }
                                        ],
                                        "hasMore": true,
                                        "totalResults": 0,
                                        "count": 0
                                      },
                                      "profileMemberships": {
                                        "profileMembership": [
                                          {
                                            "comment": {
                                              "text": {
                                                "value": "string",
                                                "language": "string"
                                              },
                                              "image": "string",
                                              "url": "string"
                                            },
                                            "newMembershipNumber": "string",
                                            "nameOnCard": "string",
                                            "programDescription": "string",
                                            "membershipLevel": "string",
                                            "membershipLevelDescription": "string",
                                            "membershipClass": "string",
                                            "earningPreference": "Points",
                                            "inactive": true,
                                            "benefits": [
                                              {
                                                "code": "string",
                                                "message": "string",
                                                "inactive": true
                                              }
                                            ],
                                            "tierAdministration": "Disabled",
                                            "downgrade": "Grace",
                                            "reIssueNewCard": "Pending",
                                            "excludeFromBatch": true,
                                            "upgradeDescription": "string",
                                            "downgradeDescription": "string",
                                            "rating": "string",
                                            "membershipEnrollmentCode": "string",
                                            "memberStatus": "string",
                                            "currentPoints": 0,
                                            "pointsLabel": "string",
                                            "enrollmentSource": "string",
                                            "enrollmentResort": "string",
                                            "preferredCard": true,
                                            "membershipId": "string",
                                            "membershipType": "string",
                                            "primaryMembershipYn": "string",
                                            "primaryMembership": true,
                                            "membershipIdNo": 0,
                                            "playerRanking": 0,
                                            "centralSetup": true,
                                            "signupDate": "2020-08-26",
                                            "effectiveDate": "2020-08-26",
                                            "expireDate": "2020-08-26",
                                            "expireDateExclusiveIndicator": true,
                                            "orderSequence": 0,
                                            "createDateTime": "2020-08-26T15:05:08.989Z",
                                            "creatorId": "string",
                                            "lastModifyDateTime": "2020-08-26T15:05:08.989Z",
                                            "lastModifierId": "string",
                                            "purgeDate": "2020-08-26"
                                          }
                                        ],
                                        "hasMore": true,
                                        "totalResults": 0,
                                        "count": 0
                                      },
                                      "preferenceCollection": {
                                        "preferenceType": [
                                          {
                                            "preference": [
                                              {
                                                "preferenceValue": "string",
                                                "description": "string",
                                                "global": true,
                                                "source": "string",
                                                "hotels": [
                                                  "string"
                                                ],
                                                "preferenceId": "string",
                                                "excludedPreferencesCount": 0
                                              }
                                            ],
                                            "preferenceType": "string",
                                            "preferenceTypeDescription": "string",
                                            "sequence": "string",
                                            "maxQuantity": 0,
                                            "availableQuantity": 0,
                                            "maxResortUsedQuantity": 0,
                                            "reservationPreference": true,
                                            "createDateTime": "2020-08-26T15:05:08.989Z",
                                            "creatorId": "string",
                                            "lastModifyDateTime": "2020-08-26T15:05:08.989Z",
                                            "lastModifierId": "string",
                                            "purgeDate": "2020-08-26"
                                          }
                                        ],
                                        "hasMore": true,
                                        "totalResults": 0,
                                        "count": 0
                                      },
                                      "keywords": {
                                        "keyword": [
                                          {
                                            "keywordDetail": {
                                              "newKeyword": "string"
                                            },
                                            "type": "string",
                                            "keyword": "string"
                                          }
                                        ],
                                        "hasMore": true,
                                        "totalResults": 0,
                                        "count": 0
                                      },
                                      "negotiatedRates": {
                                        "negotiatedRate": [
                                          {
                                            "negotiatedInfoList": [
                                              {
                                                "corporateAgreementId": "string",
                                                "comissionCode": "string",
                                                "order": 0,
                                                "inactive": true,
                                                "start": "2020-08-26",
                                                "end": "2020-08-26"
                                              }
                                            ],
                                            "hotelId": "string",
                                            "rateCode": "string"
                                          }
                                        ],
                                        "hasMore": true,
                                        "totalResults": 0,
                                        "count": 0
                                      },
                                      "gdsNegotiatedRates": {
                                        "gdsNegotiatedRate": [
                                          {
                                            "gdsNegotiatedInfoList": [
                                              {
                                                "accessCode": "string",
                                                "order": 0,
                                                "inactive": true,
                                                "start": "2020-08-26",
                                                "end": "2020-08-26"
                                              }
                                            ],
                                            "bookingChannelCode": "string",
                                            "hotelId": "string",
                                            "channelRatePlanCode": "string"
                                          }
                                        ],
                                        "hasMore": true,
                                        "totalResults": 0,
                                        "count": 0
                                      },
                                      "profileIndicators": [
                                        {
                                          "indicatorName": "string",
                                          "count": 0
                                        }
                                      ],
                                      "relationships": {
                                        "relationship": [
                                          {
                                            "changeRelationship": {
                                              "id": "string",
                                              "relation": "string",
                                              "relationDescription": "string",
                                              "targetRelation": "string",
                                              "targetRelationDescription": "string"
                                            },
                                            "relationshipProfile": {
                                              "customer": {
                                                "personName": [
                                                  {
                                                    "namePrefix": "string",
                                                    "givenName": "string",
                                                    "middleName": "string",
                                                    "surname": "string",
                                                    "nameSuffix": "string",
                                                    "nameTitle": "string",
                                                    "nameTitleSuffix": 0,
                                                    "envelopeGreeting": "string",
                                                    "salutation": "string",
                                                    "nameType": "Primary",
                                                    "language": "string",
                                                    "externalSystem": "string"
                                                  }
                                                ],
                                                "anonymization": {
                                                  "anonymizationStatus": "Requested",
                                                  "anonymizationDate": "2020-08-26T15:05:08.989Z"
                                                },
                                                "citizenCountry": {
                                                  "value": "string",
                                                  "code": "string"
                                                },
                                                "identifications": {
                                                  "identificationInfo": [
                                                    {
                                                      "identification": {
                                                        "idType": "string",
                                                        "idNumber": "string",
                                                        "idNumberMasked": "string",
                                                        "issuedCountry": "string",
                                                        "issuedDate": "2020-08-26",
                                                        "issuedPlace": "string",
                                                        "expirationDate": "2020-08-26",
                                                        "registeredProperty": "string",
                                                        "primaryInd": true,
                                                        "orderSequence": 0
                                                      },
                                                      "id": "string",
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "hasMore": true,
                                                  "totalResults": 0,
                                                  "count": 0
                                                },
                                                "profession": "string",
                                                "alienInfo": {
                                                  "alienRegistrationNo": "string",
                                                  "immigrationStatus": "string",
                                                  "visaValidityType": "string"
                                                },
                                                "birthCountry": {
                                                  "value": "string",
                                                  "code": "string"
                                                },
                                                "legalCompany": "string",
                                                "companyInfo": {
                                                  "legalCompany": "string",
                                                  "department": "string",
                                                  "position": "string"
                                                },
                                                "businessTitle": "string",
                                                "gender": "Male",
                                                "birthDate": "2020-08-26",
                                                "birthDateMasked": "string",
                                                "currencyCode": "string",
                                                "currencySymbol": "string",
                                                "decimalPlaces": 0,
                                                "language": "string",
                                                "nationality": "string",
                                                "nationalityDescription": "string",
                                                "customerValue": "string",
                                                "creditRating": "string",
                                                "vipStatus": "string",
                                                "vipDescription": "string",
                                                "birthPlace": "string",
                                                "privateProfile": true,
                                                "blacklist": true
                                              },
                                              "company": {
                                                "companyName": "string",
                                                "companyName2": "string",
                                                "companyName3": "string",
                                                "alternateName": "string",
                                                "alternateLanguage": "string",
                                                "businessLocale": "string",
                                                "iATAInfo": {
                                                  "iATACompany": "string",
                                                  "iATAConsortia": "string",
                                                  "iATAValidationResult": true
                                                },
                                                "businessTitle": "string",
                                                "currencyCode": "string",
                                                "currencySymbol": "string",
                                                "decimalPlaces": 0,
                                                "language": "string",
                                                "nationality": "string",
                                                "nationalityDescription": "string",
                                                "commissionCode": "string",
                                                "creditRating": "string",
                                                "corporateIdType": "string",
                                                "vipStatus": "string",
                                                "vipDescription": "string",
                                                "blacklist": true
                                              },
                                              "telephone": {
                                                "telephone": {
                                                  "phoneTechType": "string",
                                                  "phoneUseType": "string",
                                                  "phoneUseTypeDescription": "string",
                                                  "phoneNumber": "string",
                                                  "extension": "string",
                                                  "primaryInd": true,
                                                  "orderSequence": 0,
                                                  "createDateTime": "2020-08-26T15:05:08.989Z",
                                                  "creatorId": "string",
                                                  "lastModifyDateTime": "2020-08-26T15:05:08.989Z",
                                                  "lastModifierId": "string",
                                                  "purgeDate": "2020-08-26"
                                                },
                                                "id": "string",
                                                "type": "string"
                                              },
                                              "address": {
                                                "address": {
                                                  "addressLine": [
                                                    "string"
                                                  ],
                                                  "cityName": "string",
                                                  "postalCode": "string",
                                                  "cityExtension": "string",
                                                  "county": "string",
                                                  "state": "string",
                                                  "country": {
                                                    "value": "string",
                                                    "code": "string"
                                                  },
                                                  "language": "string",
                                                  "type": "string",
                                                  "typeDescription": "string",
                                                  "primaryInd": true,
                                                  "updateReservations": true,
                                                  "barCode": "string",
                                                  "createDateTime": "2020-08-26T15:05:08.989Z",
                                                  "creatorId": "string",
                                                  "lastModifyDateTime": "2020-08-26T15:05:08.989Z",
                                                  "lastModifierId": "string",
                                                  "purgeDate": "2020-08-26"
                                                },
                                                "id": "string",
                                                "type": "string"
                                              },
                                              "email": {
                                                "email": {
                                                  "emailAddress": "string",
                                                  "type": "string",
                                                  "typeDescription": "string",
                                                  "emailFormat": "Html",
                                                  "primaryInd": true,
                                                  "orderSequence": 0,
                                                  "createDateTime": "2020-08-26T15:05:08.989Z",
                                                  "creatorId": "string",
                                                  "lastModifyDateTime": "2020-08-26T15:05:08.989Z",
                                                  "lastModifierId": "string",
                                                  "purgeDate": "2020-08-26"
                                                },
                                                "id": "string",
                                                "type": "string"
                                              },
                                              "uRLs": {
                                                "url": {
                                                  "value": "string",
                                                  "type": "string",
                                                  "typeDescription": "string",
                                                  "primaryInd": true,
                                                  "orderSequence": 0
                                                },
                                                "id": "string",
                                                "type": "string"
                                              },
                                              "primaryOwner": {
                                                "hotel": {
                                                  "code": "string",
                                                  "description": "string"
                                                },
                                                "userId": {
                                                  "id": "string",
                                                  "type": "string"
                                                },
                                                "userName": "string",
                                                "ownerCode": "string",
                                                "profileId": {
                                                  "url": "string",
                                                  "type": "string",
                                                  "instance": "string",
                                                  "idContext": "string",
                                                  "id": "string",
                                                  "idExtension": 0
                                                },
                                                "name": {
                                                  "namePrefix": "string",
                                                  "givenName": "string",
                                                  "middleName": "string",
                                                  "surname": "string",
                                                  "nameSuffix": "string",
                                                  "nameTitle": "string",
                                                  "nameTitleSuffix": 0,
                                                  "envelopeGreeting": "string",
                                                  "salutation": "string",
                                                  "nameType": "Primary",
                                                  "language": "string",
                                                  "externalSystem": "string"
                                                },
                                                "department": {
                                                  "code": "string",
                                                  "description": "string"
                                                },
                                                "email": {
                                                  "email": {
                                                    "emailAddress": "string",
                                                    "type": "string",
                                                    "typeDescription": "string",
                                                    "emailFormat": "Html",
                                                    "primaryInd": true,
                                                    "orderSequence": 0,
                                                    "createDateTime": "2020-08-26T15:05:08.989Z",
                                                    "creatorId": "string",
                                                    "lastModifyDateTime": "2020-08-26T15:05:08.989Z",
                                                    "lastModifierId": "string",
                                                    "purgeDate": "2020-08-26"
                                                  },
                                                  "id": "string",
                                                  "type": "string"
                                                },
                                                "phone": {
                                                  "telephone": {
                                                    "phoneTechType": "string",
                                                    "phoneUseType": "string",
                                                    "phoneUseTypeDescription": "string",
                                                    "phoneNumber": "string",
                                                    "extension": "string",
                                                    "primaryInd": true,
                                                    "orderSequence": 0,
                                                    "createDateTime": "2020-08-26T15:05:08.989Z",
                                                    "creatorId": "string",
                                                    "lastModifyDateTime": "2020-08-26T15:05:08.989Z",
                                                    "lastModifierId": "string",
                                                    "purgeDate": "2020-08-26"
                                                  },
                                                  "id": "string",
                                                  "type": "string"
                                                },
                                                "relationship": {
                                                  "code": "string",
                                                  "description": "string"
                                                },
                                                "primary": true
                                              },
                                              "profileIdList": [
                                                {
                                                  "id": "string",
                                                  "type": "string"
                                                }
                                              ],
                                              "changeProfileIdList": [
                                                {
                                                  "id": "string",
                                                  "type": "string"
                                                }
                                              ],
                                              "primary": "string",
                                              "id": "string",
                                              "statusCode": "Active",
                                              "profileType": "Guest"
                                            },
                                            "masterAccountInfo": {
                                              "masterAccountId": {
                                                "id": "string",
                                                "type": "string"
                                              },
                                              "masterAccountName": "string"
                                            },
                                            "id": "string",
                                            "relation": "string",
                                            "relationDescription": "string",
                                            "targetRelation": "string",
                                            "targetRelationDescription": "string"
                                          }
                                        ],
                                        "hasMore": true,
                                        "totalResults": 0,
                                        "count": 0
                                      },
                                      "reservationInfoList": {
                                        "historyList": {
                                          "reservationInfo": [
                                            {
                                              "reservationIdList": [
                                                {
                                                  "id": "string",
                                                  "type": "string"
                                                }
                                              ],
                                              "roomStay": {
                                                "arrivalDate": "2020-08-26",
                                                "departureDate": "2020-08-26",
                                                "originalTimeSpan": {
                                                  "startDate": "2020-08-26",
                                                  "endDate": "2020-08-26",
                                                  "duration": "string"
                                                },
                                                "expectedTimes": {
                                                  "reservationExpectedArrivalTime": "2020-08-26T15:05:08.989Z",
                                                  "reservationExpectedDepartureTime": "2020-08-26T15:05:08.989Z"
                                                },
                                                "adultCount": 0,
                                                "childCount": 0,
                                                "roomClass": "string",
                                                "roomType": "string",
                                                "numberOfRooms": 0,
                                                "roomNumber": "string",
                                                "ratePlanCode": "string",
                                                "rateAmount": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "points": {
                                                  "awardsType": "string",
                                                  "points": 0
                                                },
                                                "rateSuppressed": true,
                                                "reservationBlock": {
                                                  "blockIdList": [
                                                    {
                                                      "id": "string",
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "blockName": "string",
                                                  "hotelId": "string"
                                                },
                                                "bookingChannelCode": "string",
                                                "partyCode": "string",
                                                "fixedRate": true,
                                                "totalAmount": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "guarantee": {
                                                  "guaranteeCode": "string",
                                                  "shortDescription": "string",
                                                  "onHold": true
                                                },
                                                "promotion": {
                                                  "promotionCode": "string",
                                                  "promotionName": "string",
                                                  "couponCode": "string"
                                                },
                                                "marketCode": "string",
                                                "sourceOfBusiness": "string",
                                                "sourceOfBusinessDescription": "string",
                                                "balance": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "compBalance": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "roomTypeCharged": "string",
                                                "depositPayments": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "guestServiceStatus": "DoNotDisturb",
                                                "scheduledCheckoutTime": "2020-08-26",
                                                "roomNumberLocked": true,
                                                "pseudoRoom": true
                                              },
                                              "reservationGuest": {
                                                "membership": {
                                                  "membershipId": 0,
                                                  "programCode": "string",
                                                  "bonusCode": "string",
                                                  "membershipTypeDesc": "string",
                                                  "membershipLevelDesc": "string",
                                                  "accountId": "string",
                                                  "membershipLevel": "string",
                                                  "playerRanking": 0
                                                },
                                                "namePrefix": "string",
                                                "givenName": "string",
                                                "alternateGivenName": "string",
                                                "middleName": "string",
                                                "surnamePrefix": "string",
                                                "surname": "string",
                                                "alternateSurname": "string",
                                                "nameSuffix": "string",
                                                "nameTitle": "string",
                                                "fullName": "string",
                                                "alternateFullName": "string",
                                                "phoneNumber": "string",
                                                "email": "string",
                                                "birthDate": "2020-08-26",
                                                "language": "string",
                                                "nationality": {
                                                  "value": "string",
                                                  "code": "string"
                                                },
                                                "vip": {
                                                  "vipCode": "string",
                                                  "vipDescription": "string"
                                                },
                                                "address": {
                                                  "cityName": "string",
                                                  "postalCode": "string",
                                                  "state": "string",
                                                  "country": {
                                                    "value": "string",
                                                    "code": "string"
                                                  },
                                                  "streetAddress": "string",
                                                  "excludeNoCity": true
                                                },
                                                "anonymization": {
                                                  "anonymizationStatus": "Requested",
                                                  "anonymizationDate": "2020-08-26T15:05:08.989Z"
                                                },
                                                "accompanyGuests": [
                                                  {
                                                    "firstName": "string",
                                                    "lastName": "string",
                                                    "fullName": "string",
                                                    "registrationCardNo": "string",
                                                    "profileIdList": [
                                                      {
                                                        "id": "string",
                                                        "type": "string"
                                                      }
                                                    ]
                                                  }
                                                ],
                                                "externalInfo": {
                                                  "givenName": "string",
                                                  "surname": "string"
                                                },
                                                "guestLastStayInfo": {
                                                  "lastStayDate": "2020-08-26",
                                                  "lastStayRoom": "string",
                                                  "lastStayRate": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "totalStay": 0
                                                },
                                                "guestRestrictedCode": "string",
                                                "guestRestrictedReasonDesc": "string",
                                                "guestRestricted": true,
                                                "registrationCardNo": "string",
                                                "nameType": "Guest",
                                                "id": "string",
                                                "type": "string"
                                              },
                                              "sharedGuests": [
                                                {
                                                  "profileId": {
                                                    "url": "string",
                                                    "type": "string",
                                                    "instance": "string",
                                                    "idContext": "string",
                                                    "id": "string",
                                                    "idExtension": 0
                                                  },
                                                  "firstName": "string",
                                                  "lastName": "string",
                                                  "fullName": "string"
                                                }
                                              ],
                                              "attachedProfiles": [
                                                {
                                                  "name": "string",
                                                  "profileIdList": [
                                                    {
                                                      "id": "string",
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "reservationProfileType": "Company"
                                                }
                                              ],
                                              "reservationPaymentMethod": {
                                                "paymentCard": {
                                                  "cardId": {
                                                    "id": "string",
                                                    "type": "string"
                                                  },
                                                  "currentAuthorizedAmount": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "approvalAmountNeeded": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "cardType": "Ab",
                                                  "userDefinedCardType": "string",
                                                  "cardNumber": "string",
                                                  "cardNumberMasked": "string",
                                                  "cardNumberLast4Digits": "string",
                                                  "expirationDate": "2020-08-26",
                                                  "expirationDateMasked": "string",
                                                  "expirationDateExpired": true,
                                                  "cardHolderName": "string",
                                                  "attachCreditCardToProfile": true,
                                                  "processing": "Eft",
                                                  "swiped": true,
                                                  "cardOrToken": "CardNumber"
                                                },
                                                "balance": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "authorizationRule": {
                                                  "code": 0,
                                                  "amount": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "percent": 0
                                                },
                                                "emailFolioInfo": {
                                                  "email": {
                                                    "emailAddress": "string",
                                                    "type": "string",
                                                    "typeDescription": "string",
                                                    "emailFormat": "Html",
                                                    "primaryInd": true,
                                                    "orderSequence": 0,
                                                    "createDateTime": "2020-08-26T15:05:08.990Z",
                                                    "creatorId": "string",
                                                    "lastModifyDateTime": "2020-08-26T15:05:08.990Z",
                                                    "lastModifierId": "string",
                                                    "purgeDate": "2020-08-26"
                                                  },
                                                  "emailFolio": true,
                                                  "id": "string",
                                                  "type": "string"
                                                },
                                                "paymentMethod": "string",
                                                "description": "string",
                                                "folioView": 0
                                              },
                                              "reservationFolioWindows": [
                                                {
                                                  "payeeInfo": {
                                                    "payeeId": {
                                                      "id": "string",
                                                      "type": "string"
                                                    },
                                                    "payeeName": "string",
                                                    "payeeAddress": {
                                                      "address": {
                                                        "addressLine": [
                                                          "string"
                                                        ],
                                                        "cityName": "string",
                                                        "postalCode": "string",
                                                        "cityExtension": "string",
                                                        "county": "string",
                                                        "state": "string",
                                                        "country": {
                                                          "value": "string",
                                                          "code": "string"
                                                        },
                                                        "language": "string",
                                                        "type": "string",
                                                        "typeDescription": "string",
                                                        "primaryInd": true,
                                                        "updateReservations": true,
                                                        "barCode": "string",
                                                        "createDateTime": "2020-08-26T15:05:08.990Z",
                                                        "creatorId": "string",
                                                        "lastModifyDateTime": "2020-08-26T15:05:08.990Z",
                                                        "lastModifierId": "string",
                                                        "purgeDate": "2020-08-26"
                                                      },
                                                      "id": "string",
                                                      "type": "string"
                                                    },
                                                    "payeeAddressCount": 0,
                                                    "payeeReferenceCurrency": "string",
                                                    "payeeAccountInfo": {
                                                      "accountName": "string",
                                                      "accountId": {
                                                        "id": "string",
                                                        "type": "string"
                                                      },
                                                      "accountNo": "string",
                                                      "status": {
                                                        "restriction": "string",
                                                        "description": "string",
                                                        "restricted": true
                                                      }
                                                    },
                                                    "payeeTaxNumber": "string"
                                                  },
                                                  "balance": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "paymentMethod": "string",
                                                  "folioWindowNo": 0
                                                }
                                              ],
                                              "specials": "string",
                                              "lastPrivacyPromptDate": "2020-08-26",
                                              "displayColor": "string",
                                              "reservationIndicators": [
                                                {
                                                  "indicatorName": "string",
                                                  "count": 0
                                                }
                                              ],
                                              "roomStatus": "Clean",
                                              "searchMatches": [
                                                {
                                                  "attribute": "string",
                                                  "value": "string"
                                                }
                                              ],
                                              "sourceOfSale": {
                                                "sourceType": "string",
                                                "sourceCode": "string"
                                              },
                                              "waitlist": {
                                                "reasonDescription": "string",
                                                "priorityDescription": "string",
                                                "description": "string",
                                                "reasonCode": "string",
                                                "priorityCode": "string",
                                                "telephone": "string"
                                              },
                                              "queue": {
                                                "timeSpan": {
                                                  "startDate": "2020-08-26",
                                                  "endDate": "2020-08-26",
                                                  "duration": "string",
                                                  "durationInSeconds": 0
                                                },
                                                "guestTextInfo": {
                                                  "sentTime": "2020-08-26T15:05:08.990Z",
                                                  "sentBy": "string"
                                                },
                                                "priority": 0,
                                                "averageQueueTimeToCheckIn": 0,
                                                "averageQueueTimeCurrentReservations": 0,
                                                "queueDate": "2020-08-26"
                                              },
                                              "housekeeping": {
                                                "instructions": "string",
                                                "facilityTaskInfo": {
                                                  "task": {
                                                    "description": "string",
                                                    "instructions": "string",
                                                    "facilityDepartureTask": true,
                                                    "linenChange": true,
                                                    "hotelId": "string",
                                                    "code": "string",
                                                    "sequence": 0
                                                  },
                                                  "supplies": [
                                                    {
                                                      "description": "string",
                                                      "quantity": 0,
                                                      "code": "string"
                                                    }
                                                  ],
                                                  "date": "2020-08-26"
                                                },
                                                "linenChange": true,
                                                "turndownRequested": true,
                                                "serviceTime": "2020-08-26",
                                                "expectedServiceTime": "string",
                                                "roomStatus": "Clean"
                                              },
                                              "cashiering": {
                                                "revenuesAndBalances": {
                                                  "totalFixedCharge": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "totalPayment": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "roomRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "foodAndBevRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "otherRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "nonRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "totalRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "balance": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  }
                                                },
                                                "billingPrivileges": {
                                                  "postingRestriction": true,
                                                  "preStayCharging": true,
                                                  "postStayCharging": true,
                                                  "folioCloseDate": "2020-08-26",
                                                  "scheduledCheckout": true,
                                                  "scheduledCheckoutTime": "2020-08-26",
                                                  "directBillAuthorized": true,
                                                  "videoCheckout": true,
                                                  "allowAutoCheckin": true,
                                                  "autoSettlement": true,
                                                  "autoSettlementType": "string",
                                                  "autoSettlementFreq": 0,
                                                  "creditLimitAutoPay": true
                                                },
                                                "taxType": {
                                                  "hotelId": "string",
                                                  "code": "string",
                                                  "description": "string",
                                                  "collectingAgentTax": true,
                                                  "printAutoAdjust": true,
                                                  "reportExemptDays": 0,
                                                  "reportTaxPercentage": 0,
                                                  "minimumLengthOfStay": 0,
                                                  "taxExemptNo": "string"
                                                },
                                                "bedTaxReporting": {
                                                  "taxRegistrationNo": 0,
                                                  "visaNumber": "string",
                                                  "visaIssueDate": "2020-08-26",
                                                  "visaExpiryDate": "2020-08-26",
                                                  "taxableDays": 0
                                                },
                                                "folioTexts": [
                                                  {
                                                    "text": "string",
                                                    "row": 0
                                                  }
                                                ],
                                                "periodicFolio": {
                                                  "lastSettlementDate": "2020-08-26",
                                                  "lastFolioDate": "2020-08-26",
                                                  "frequency": 0
                                                },
                                                "compAccounting": {
                                                  "compType": "string",
                                                  "authorizer": "string",
                                                  "compPostings": "string"
                                                },
                                                "reservationPreConfiguredRoutingInstruction": {
                                                  "authorizerInfo": {
                                                    "authorizerId": {
                                                      "id": "string",
                                                      "type": "string"
                                                    },
                                                    "authorizerUserName": "string",
                                                    "authorizerName": "string",
                                                    "authorizerRateCode": "string",
                                                    "inheritAuthorizerRateCode": true
                                                  },
                                                  "ratePlanCode": "string",
                                                  "profileType": "Company",
                                                  "promotionCode": "string"
                                                },
                                                "financiallyResponsible": true,
                                                "proratedBilling": true,
                                                "lastRoomAndTaxPostedDate": "2020-08-26",
                                                "reverseCheckInAllowed": true,
                                                "reverseAdvanceCheckInAllowed": true,
                                                "transactionsPosted": true
                                              },
                                              "taxType": {
                                                "hotelId": "string",
                                                "code": "string",
                                                "description": "string",
                                                "collectingAgentTax": true,
                                                "printAutoAdjust": true,
                                                "reportExemptDays": 0,
                                                "reportTaxPercentage": 0,
                                                "minimumLengthOfStay": 0
                                              },
                                              "deposit": {
                                                "amountRequired": 0,
                                                "amountPaid": 0,
                                                "amountOwed": 0,
                                                "dueDate": "2020-08-26",
                                                "postingDate": "2020-08-26",
                                                "hasPaid": true,
                                                "hasOutstanding": true
                                              },
                                              "allowedActions": [
                                                "Cancel"
                                              ],
                                              "revenuesAndBalances": {
                                                "totalFixedCharge": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "totalPayment": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "roomRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "foodAndBevRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "otherRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "nonRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "totalRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "balance": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                }
                                              },
                                              "hotelInterfaceStatusList": [
                                                {
                                                  "roomExtension": "string",
                                                  "hotelInterface": {
                                                    "interfaceId": {
                                                      "id": "string",
                                                      "type": "string"
                                                    },
                                                    "hotelId": "string",
                                                    "interfaceName": "string",
                                                    "interfaceType": "Bms",
                                                    "logo": "string",
                                                    "machineName": "string",
                                                    "status": "Stopped",
                                                    "activeFlag": true
                                                  },
                                                  "interfaceRights": [
                                                    {
                                                      "right": 0,
                                                      "statusCode": "string",
                                                      "description": "string",
                                                      "category": "string"
                                                    }
                                                  ]
                                                }
                                              ],
                                              "guestPreferredCurrency": "string",
                                              "turndownInfo": {
                                                "allowed": true,
                                                "status": "Required"
                                              },
                                              "mobileNotifications": {
                                                "roomReady": "Pending",
                                                "keyReady": "Pending",
                                                "checkoutMessageReceived": true,
                                                "requiresAction": true,
                                                "errorMessage": "string"
                                              },
                                              "reservationCommunication": {
                                                "telephones": {
                                                  "telephoneInfo": [
                                                    {
                                                      "telephone": {
                                                        "phoneTechType": "string",
                                                        "phoneUseType": "string",
                                                        "phoneUseTypeDescription": "string",
                                                        "phoneNumber": "string",
                                                        "extension": "string",
                                                        "primaryInd": true,
                                                        "orderSequence": 0,
                                                        "createDateTime": "2020-08-26T15:05:08.991Z",
                                                        "creatorId": "string",
                                                        "lastModifyDateTime": "2020-08-26T15:05:08.991Z",
                                                        "lastModifierId": "string",
                                                        "purgeDate": "2020-08-26"
                                                      },
                                                      "id": "string",
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "hasMore": true,
                                                  "totalResults": 0,
                                                  "count": 0
                                                },
                                                "emails": {
                                                  "emailInfo": [
                                                    {
                                                      "email": {
                                                        "emailAddress": "string",
                                                        "type": "string",
                                                        "typeDescription": "string",
                                                        "emailFormat": "Html",
                                                        "primaryInd": true,
                                                        "orderSequence": 0,
                                                        "createDateTime": "2020-08-26T15:05:08.991Z",
                                                        "creatorId": "string",
                                                        "lastModifyDateTime": "2020-08-26T15:05:08.991Z",
                                                        "lastModifierId": "string",
                                                        "purgeDate": "2020-08-26"
                                                      },
                                                      "id": "string",
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "hasMore": true,
                                                  "totalResults": 0,
                                                  "count": 0
                                                }
                                              },
                                              "advanceCheckIn": {
                                                "advanceCheckedIn": true,
                                                "expectedReturnTime": "2020-08-26T15:05:08.991Z",
                                                "eTRComments": "string"
                                              },
                                              "welcomeOffer": true,
                                              "cancellationInfo": {
                                                "description": "string",
                                                "code": "string",
                                                "date": "2020-08-26"
                                              },
                                              "keyCount": 0,
                                              "hotelId": "string",
                                              "hotelName": "string",
                                              "expectedServiceTime": "string",
                                              "roomStayReservation": true,
                                              "createDateTime": "2020-08-26T15:05:08.991Z",
                                              "creatorId": "string",
                                              "lastModifyDateTime": "2020-08-26T15:05:08.991Z",
                                              "lastModifierId": "string",
                                              "purgeDate": "2020-08-26",
                                              "reservationStatus": "Reserved",
                                              "computedReservationStatus": "Reserved",
                                              "walkInIndicator": true,
                                              "accessRestriction": "Change",
                                              "commissionPayoutTo": "TravelAgent",
                                              "paymentMethod": "string",
                                              "preRegistered": true,
                                              "openFolio": true,
                                              "allowMobileCheckout": true,
                                              "allowMobileViewFolio": true,
                                              "optedForCommunication": true
                                            }
                                          ],
                                          "hasMore": true,
                                          "totalResults": 0,
                                          "count": 0
                                        },
                                        "futureList": {
                                          "reservationInfo": [
                                            {
                                              "reservationIdList": [
                                                {
                                                  "id": "string",
                                                  "type": "string"
                                                }
                                              ],
                                              "roomStay": {
                                                "arrivalDate": "2020-08-26",
                                                "departureDate": "2020-08-26",
                                                "originalTimeSpan": {
                                                  "startDate": "2020-08-26",
                                                  "endDate": "2020-08-26",
                                                  "duration": "string"
                                                },
                                                "expectedTimes": {
                                                  "reservationExpectedArrivalTime": "2020-08-26T15:05:08.991Z",
                                                  "reservationExpectedDepartureTime": "2020-08-26T15:05:08.991Z"
                                                },
                                                "adultCount": 0,
                                                "childCount": 0,
                                                "roomClass": "string",
                                                "roomType": "string",
                                                "numberOfRooms": 0,
                                                "roomNumber": "string",
                                                "ratePlanCode": "string",
                                                "rateAmount": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "points": {
                                                  "awardsType": "string",
                                                  "points": 0
                                                },
                                                "rateSuppressed": true,
                                                "reservationBlock": {
                                                  "blockIdList": [
                                                    {
                                                      "id": "string",
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "blockName": "string",
                                                  "hotelId": "string"
                                                },
                                                "bookingChannelCode": "string",
                                                "partyCode": "string",
                                                "fixedRate": true,
                                                "totalAmount": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "guarantee": {
                                                  "guaranteeCode": "string",
                                                  "shortDescription": "string",
                                                  "onHold": true
                                                },
                                                "promotion": {
                                                  "promotionCode": "string",
                                                  "promotionName": "string",
                                                  "couponCode": "string"
                                                },
                                                "marketCode": "string",
                                                "sourceOfBusiness": "string",
                                                "sourceOfBusinessDescription": "string",
                                                "balance": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "compBalance": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "roomTypeCharged": "string",
                                                "depositPayments": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "guestServiceStatus": "DoNotDisturb",
                                                "scheduledCheckoutTime": "2020-08-26",
                                                "roomNumberLocked": true,
                                                "pseudoRoom": true
                                              },
                                              "reservationGuest": {
                                                "membership": {
                                                  "membershipId": 0,
                                                  "programCode": "string",
                                                  "bonusCode": "string",
                                                  "membershipTypeDesc": "string",
                                                  "membershipLevelDesc": "string",
                                                  "accountId": "string",
                                                  "membershipLevel": "string",
                                                  "playerRanking": 0
                                                },
                                                "namePrefix": "string",
                                                "givenName": "string",
                                                "alternateGivenName": "string",
                                                "middleName": "string",
                                                "surnamePrefix": "string",
                                                "surname": "string",
                                                "alternateSurname": "string",
                                                "nameSuffix": "string",
                                                "nameTitle": "string",
                                                "fullName": "string",
                                                "alternateFullName": "string",
                                                "phoneNumber": "string",
                                                "email": "string",
                                                "birthDate": "2020-08-26",
                                                "language": "string",
                                                "nationality": {
                                                  "value": "string",
                                                  "code": "string"
                                                },
                                                "vip": {
                                                  "vipCode": "string",
                                                  "vipDescription": "string"
                                                },
                                                "address": {
                                                  "cityName": "string",
                                                  "postalCode": "string",
                                                  "state": "string",
                                                  "country": {
                                                    "value": "string",
                                                    "code": "string"
                                                  },
                                                  "streetAddress": "string",
                                                  "excludeNoCity": true
                                                },
                                                "anonymization": {
                                                  "anonymizationStatus": "Requested",
                                                  "anonymizationDate": "2020-08-26T15:05:08.991Z"
                                                },
                                                "accompanyGuests": [
                                                  {
                                                    "firstName": "string",
                                                    "lastName": "string",
                                                    "fullName": "string",
                                                    "registrationCardNo": "string",
                                                    "profileIdList": [
                                                      {
                                                        "id": "string",
                                                        "type": "string"
                                                      }
                                                    ]
                                                  }
                                                ],
                                                "externalInfo": {
                                                  "givenName": "string",
                                                  "surname": "string"
                                                },
                                                "guestLastStayInfo": {
                                                  "lastStayDate": "2020-08-26",
                                                  "lastStayRoom": "string",
                                                  "lastStayRate": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "totalStay": 0
                                                },
                                                "guestRestrictedCode": "string",
                                                "guestRestrictedReasonDesc": "string",
                                                "guestRestricted": true,
                                                "registrationCardNo": "string",
                                                "nameType": "Guest",
                                                "id": "string",
                                                "type": "string"
                                              },
                                              "sharedGuests": [
                                                {
                                                  "profileId": {
                                                    "url": "string",
                                                    "type": "string",
                                                    "instance": "string",
                                                    "idContext": "string",
                                                    "id": "string",
                                                    "idExtension": 0
                                                  },
                                                  "firstName": "string",
                                                  "lastName": "string",
                                                  "fullName": "string"
                                                }
                                              ],
                                              "attachedProfiles": [
                                                {
                                                  "name": "string",
                                                  "profileIdList": [
                                                    {
                                                      "id": "string",
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "reservationProfileType": "Company"
                                                }
                                              ],
                                              "reservationPaymentMethod": {
                                                "paymentCard": {
                                                  "cardId": {
                                                    "id": "string",
                                                    "type": "string"
                                                  },
                                                  "currentAuthorizedAmount": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "approvalAmountNeeded": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "cardType": "Ab",
                                                  "userDefinedCardType": "string",
                                                  "cardNumber": "string",
                                                  "cardNumberMasked": "string",
                                                  "cardNumberLast4Digits": "string",
                                                  "expirationDate": "2020-08-26",
                                                  "expirationDateMasked": "string",
                                                  "expirationDateExpired": true,
                                                  "cardHolderName": "string",
                                                  "attachCreditCardToProfile": true,
                                                  "processing": "Eft",
                                                  "swiped": true,
                                                  "cardOrToken": "CardNumber"
                                                },
                                                "balance": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "authorizationRule": {
                                                  "code": 0,
                                                  "amount": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "percent": 0
                                                },
                                                "emailFolioInfo": {
                                                  "email": {
                                                    "emailAddress": "string",
                                                    "type": "string",
                                                    "typeDescription": "string",
                                                    "emailFormat": "Html",
                                                    "primaryInd": true,
                                                    "orderSequence": 0,
                                                    "createDateTime": "2020-08-26T15:05:08.991Z",
                                                    "creatorId": "string",
                                                    "lastModifyDateTime": "2020-08-26T15:05:08.991Z",
                                                    "lastModifierId": "string",
                                                    "purgeDate": "2020-08-26"
                                                  },
                                                  "emailFolio": true,
                                                  "id": "string",
                                                  "type": "string"
                                                },
                                                "paymentMethod": "string",
                                                "description": "string",
                                                "folioView": 0
                                              },
                                              "reservationFolioWindows": [
                                                {
                                                  "payeeInfo": {
                                                    "payeeId": {
                                                      "id": "string",
                                                      "type": "string"
                                                    },
                                                    "payeeName": "string",
                                                    "payeeAddress": {
                                                      "address": {
                                                        "addressLine": [
                                                          "string"
                                                        ],
                                                        "cityName": "string",
                                                        "postalCode": "string",
                                                        "cityExtension": "string",
                                                        "county": "string",
                                                        "state": "string",
                                                        "country": {
                                                          "value": "string",
                                                          "code": "string"
                                                        },
                                                        "language": "string",
                                                        "type": "string",
                                                        "typeDescription": "string",
                                                        "primaryInd": true,
                                                        "updateReservations": true,
                                                        "barCode": "string",
                                                        "createDateTime": "2020-08-26T15:05:08.991Z",
                                                        "creatorId": "string",
                                                        "lastModifyDateTime": "2020-08-26T15:05:08.991Z",
                                                        "lastModifierId": "string",
                                                        "purgeDate": "2020-08-26"
                                                      },
                                                      "id": "string",
                                                      "type": "string"
                                                    },
                                                    "payeeAddressCount": 0,
                                                    "payeeReferenceCurrency": "string",
                                                    "payeeAccountInfo": {
                                                      "accountName": "string",
                                                      "accountId": {
                                                        "id": "string",
                                                        "type": "string"
                                                      },
                                                      "accountNo": "string",
                                                      "status": {
                                                        "restriction": "string",
                                                        "description": "string",
                                                        "restricted": true
                                                      }
                                                    },
                                                    "payeeTaxNumber": "string"
                                                  },
                                                  "balance": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "paymentMethod": "string",
                                                  "folioWindowNo": 0
                                                }
                                              ],
                                              "specials": "string",
                                              "lastPrivacyPromptDate": "2020-08-26",
                                              "displayColor": "string",
                                              "reservationIndicators": [
                                                {
                                                  "indicatorName": "string",
                                                  "count": 0
                                                }
                                              ],
                                              "roomStatus": "Clean",
                                              "searchMatches": [
                                                {
                                                  "attribute": "string",
                                                  "value": "string"
                                                }
                                              ],
                                              "sourceOfSale": {
                                                "sourceType": "string",
                                                "sourceCode": "string"
                                              },
                                              "waitlist": {
                                                "reasonDescription": "string",
                                                "priorityDescription": "string",
                                                "description": "string",
                                                "reasonCode": "string",
                                                "priorityCode": "string",
                                                "telephone": "string"
                                              },
                                              "queue": {
                                                "timeSpan": {
                                                  "startDate": "2020-08-26",
                                                  "endDate": "2020-08-26",
                                                  "duration": "string",
                                                  "durationInSeconds": 0
                                                },
                                                "guestTextInfo": {
                                                  "sentTime": "2020-08-26T15:05:08.991Z",
                                                  "sentBy": "string"
                                                },
                                                "priority": 0,
                                                "averageQueueTimeToCheckIn": 0,
                                                "averageQueueTimeCurrentReservations": 0,
                                                "queueDate": "2020-08-26"
                                              },
                                              "housekeeping": {
                                                "instructions": "string",
                                                "facilityTaskInfo": {
                                                  "task": {
                                                    "description": "string",
                                                    "instructions": "string",
                                                    "facilityDepartureTask": true,
                                                    "linenChange": true,
                                                    "hotelId": "string",
                                                    "code": "string",
                                                    "sequence": 0
                                                  },
                                                  "supplies": [
                                                    {
                                                      "description": "string",
                                                      "quantity": 0,
                                                      "code": "string"
                                                    }
                                                  ],
                                                  "date": "2020-08-26"
                                                },
                                                "linenChange": true,
                                                "turndownRequested": true,
                                                "serviceTime": "2020-08-26",
                                                "expectedServiceTime": "string",
                                                "roomStatus": "Clean"
                                              },
                                              "cashiering": {
                                                "revenuesAndBalances": {
                                                  "totalFixedCharge": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "totalPayment": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "roomRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "foodAndBevRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "otherRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "nonRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "totalRevenue": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  },
                                                  "balance": {
                                                    "amount": 0,
                                                    "currencyCode": "string"
                                                  }
                                                },
                                                "billingPrivileges": {
                                                  "postingRestriction": true,
                                                  "preStayCharging": true,
                                                  "postStayCharging": true,
                                                  "folioCloseDate": "2020-08-26",
                                                  "scheduledCheckout": true,
                                                  "scheduledCheckoutTime": "2020-08-26",
                                                  "directBillAuthorized": true,
                                                  "videoCheckout": true,
                                                  "allowAutoCheckin": true,
                                                  "autoSettlement": true,
                                                  "autoSettlementType": "string",
                                                  "autoSettlementFreq": 0,
                                                  "creditLimitAutoPay": true
                                                },
                                                "taxType": {
                                                  "hotelId": "string",
                                                  "code": "string",
                                                  "description": "string",
                                                  "collectingAgentTax": true,
                                                  "printAutoAdjust": true,
                                                  "reportExemptDays": 0,
                                                  "reportTaxPercentage": 0,
                                                  "minimumLengthOfStay": 0,
                                                  "taxExemptNo": "string"
                                                },
                                                "bedTaxReporting": {
                                                  "taxRegistrationNo": 0,
                                                  "visaNumber": "string",
                                                  "visaIssueDate": "2020-08-26",
                                                  "visaExpiryDate": "2020-08-26",
                                                  "taxableDays": 0
                                                },
                                                "folioTexts": [
                                                  {
                                                    "text": "string",
                                                    "row": 0
                                                  }
                                                ],
                                                "periodicFolio": {
                                                  "lastSettlementDate": "2020-08-26",
                                                  "lastFolioDate": "2020-08-26",
                                                  "frequency": 0
                                                },
                                                "compAccounting": {
                                                  "compType": "string",
                                                  "authorizer": "string",
                                                  "compPostings": "string"
                                                },
                                                "reservationPreConfiguredRoutingInstruction": {
                                                  "authorizerInfo": {
                                                    "authorizerId": {
                                                      "id": "string",
                                                      "type": "string"
                                                    },
                                                    "authorizerUserName": "string",
                                                    "authorizerName": "string",
                                                    "authorizerRateCode": "string",
                                                    "inheritAuthorizerRateCode": true
                                                  },
                                                  "ratePlanCode": "string",
                                                  "profileType": "Company",
                                                  "promotionCode": "string"
                                                },
                                                "financiallyResponsible": true,
                                                "proratedBilling": true,
                                                "lastRoomAndTaxPostedDate": "2020-08-26",
                                                "reverseCheckInAllowed": true,
                                                "reverseAdvanceCheckInAllowed": true,
                                                "transactionsPosted": true
                                              },
                                              "taxType": {
                                                "hotelId": "string",
                                                "code": "string",
                                                "description": "string",
                                                "collectingAgentTax": true,
                                                "printAutoAdjust": true,
                                                "reportExemptDays": 0,
                                                "reportTaxPercentage": 0,
                                                "minimumLengthOfStay": 0
                                              },
                                              "deposit": {
                                                "amountRequired": 0,
                                                "amountPaid": 0,
                                                "amountOwed": 0,
                                                "dueDate": "2020-08-26",
                                                "postingDate": "2020-08-26",
                                                "hasPaid": true,
                                                "hasOutstanding": true
                                              },
                                              "allowedActions": [
                                                "Cancel"
                                              ],
                                              "revenuesAndBalances": {
                                                "totalFixedCharge": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "totalPayment": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "roomRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "foodAndBevRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "otherRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "nonRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "totalRevenue": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                },
                                                "balance": {
                                                  "amount": 0,
                                                  "currencyCode": "string"
                                                }
                                              },
                                              "hotelInterfaceStatusList": [
                                                {
                                                  "roomExtension": "string",
                                                  "hotelInterface": {
                                                    "interfaceId": {
                                                      "id": "string",
                                                      "type": "string"
                                                    },
                                                    "hotelId": "string",
                                                    "interfaceName": "string",
                                                    "interfaceType": "Bms",
                                                    "logo": "string",
                                                    "machineName": "string",
                                                    "status": "Stopped",
                                                    "activeFlag": true
                                                  },
                                                  "interfaceRights": [
                                                    {
                                                      "right": 0,
                                                      "statusCode": "string",
                                                      "description": "string",
                                                      "category": "string"
                                                    }
                                                  ]
                                                }
                                              ],
                                              "guestPreferredCurrency": "string",
                                              "turndownInfo": {
                                                "allowed": true,
                                                "status": "Required"
                                              },
                                              "mobileNotifications": {
                                                "roomReady": "Pending",
                                                "keyReady": "Pending",
                                                "checkoutMessageReceived": true,
                                                "requiresAction": true,
                                                "errorMessage": "string"
                                              },
                                              "reservationCommunication": {
                                                "telephones": {
                                                  "telephoneInfo": [
                                                    {
                                                      "telephone": {
                                                        "phoneTechType": "string",
                                                        "phoneUseType": "string",
                                                        "phoneUseTypeDescription": "string",
                                                        "phoneNumber": "string",
                                                        "extension": "string",
                                                        "primaryInd": true,
                                                        "orderSequence": 0,
                                                        "createDateTime": "2020-08-26T15:05:08.993Z",
                                                        "creatorId": "string",
                                                        "lastModifyDateTime": "2020-08-26T15:05:08.993Z",
                                                        "lastModifierId": "string",
                                                        "purgeDate": "2020-08-26"
                                                      },
                                                      "id": "string",
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "hasMore": true,
                                                  "totalResults": 0,
                                                  "count": 0
                                                },
                                                "emails": {
                                                  "emailInfo": [
                                                    {
                                                      "email": {
                                                        "emailAddress": "string",
                                                        "type": "string",
                                                        "typeDescription": "string",
                                                        "emailFormat": "Html",
                                                        "primaryInd": true,
                                                        "orderSequence": 0,
                                                        "createDateTime": "2020-08-26T15:05:08.993Z",
                                                        "creatorId": "string",
                                                        "lastModifyDateTime": "2020-08-26T15:05:08.993Z",
                                                        "lastModifierId": "string",
                                                        "purgeDate": "2020-08-26"
                                                      },
                                                      "id": "string",
                                                      "type": "string"
                                                    }
                                                  ],
                                                  "hasMore": true,
                                                  "totalResults": 0,
                                                  "count": 0
                                                }
                                              },
                                              "advanceCheckIn": {
                                                "advanceCheckedIn": true,
                                                "expectedReturnTime": "2020-08-26T15:05:08.993Z",
                                                "eTRComments": "string"
                                              },
                                              "welcomeOffer": true,
                                              "cancellationInfo": {
                                                "description": "string",
                                                "code": "string",
                                                "date": "2020-08-26"
                                              },
                                              "keyCount": 0,
                                              "hotelId": "string",
                                              "hotelName": "string",
                                              "expectedServiceTime": "string",
                                              "roomStayReservation": true,
                                              "createDateTime": "2020-08-26T15:05:08.993Z",
                                              "creatorId": "string",
                                              "lastModifyDateTime": "2020-08-26T15:05:08.993Z",
                                              "lastModifierId": "string",
                                              "purgeDate": "2020-08-26",
                                              "reservationStatus": "Reserved",
                                              "computedReservationStatus": "Reserved",
                                              "walkInIndicator": true,
                                              "accessRestriction": "Change",
                                              "commissionPayoutTo": "TravelAgent",
                                              "paymentMethod": "string",
                                              "preRegistered": true,
                                              "openFolio": true,
                                              "allowMobileCheckout": true,
                                              "allowMobileViewFolio": true,
                                              "optedForCommunication": true
                                            }
                                          ],
                                          "hasMore": true,
                                          "totalResults": 0,
                                          "count": 0
                                        }
                                      },
                                      "lastStayInfo": {
                                        "lastVisit": "2020-08-26",
                                        "lastRoom": "string",
                                        "lastRate": {
                                          "amount": 0,
                                          "currencyCode": "string"
                                        },
                                        "totalStay": 0
                                      },
                                      "profileAccessType": {
                                        "chainCode": "string",
                                        "croCode": "string",
                                        "hotelId": "string",
                                        "sharedLevel": "Global"
                                      },
                                      "profileRestrictions": {
                                        "reason": "string",
                                        "reasonDescription": "string",
                                        "restricted": true
                                      },
                                      "mailingActions": {
                                        "mailingAction": [
                                          {
                                            "code": "string",
                                            "description": "string"
                                          }
                                        ],
                                        "active": true,
                                        "hasMore": true,
                                        "totalResults": 0,
                                        "count": 0
                                      },
                                      "privacyInfo": {
                                        "marketResearchParticipation": true,
                                        "lastPrivacyPromptDate": "2020-08-26",
                                        "infoFromThirdParty": true,
                                        "autoEnrollLoyaltyProgram": true,
                                        "allowPhone": true,
                                        "allowSMS": true,
                                        "allowEmail": true,
                                        "optInMailingList": true,
                                        "optInMarketResearch": true,
                                        "optInThirdParty": true,
                                        "optInAutoEnrollmentMember": true,
                                        "optInPhone": true,
                                        "optInSms": true,
                                        "optInEmail": true
                                      },
                                      "cashiering": {
                                        "directBillingList": [
                                          {
                                            "hotelId": "string",
                                            "aRNumber": "string"
                                          }
                                        ],
                                        "autoFolioSettlementType": "string",
                                        "paymentDueDays": 0,
                                        "taxPercent1": 0,
                                        "taxPercent2": 0,
                                        "taxPercent3": 0,
                                        "taxPercent4": 0,
                                        "taxPercent5": 0,
                                        "arNoCentral": "string",
                                        "referenceCurrency": "string",
                                        "vATOffsetYN": "string",
                                        "currencyCode": "string",
                                        "currencySymbol": "string",
                                        "decimalPlaces": 0
                                      },
                                      "commissionInfoList": [
                                        {
                                          "hotelId": "string",
                                          "commissionCode": "string",
                                          "bankAccount": "string",
                                          "paymentMethod": "Cent",
                                          "currencyCode": "string",
                                          "currencySymbol": "string",
                                          "decimalPlaces": 0
                                        }
                                      ],
                                      "userDefinedFields": {
                                        "characterUDFs": [
                                          {
                                            "name": "string",
                                            "value": "string",
                                            "alternateName": "string"
                                          }
                                        ],
                                        "numericUDFs": [
                                          {
                                            "name": "string",
                                            "value": 0,
                                            "alternateName": "string"
                                          }
                                        ],
                                        "dateUDFs": [
                                          {
                                            "name": "string",
                                            "value": "2020-08-26",
                                            "alternateName": "string"
                                          }
                                        ]
                                      },
                                      "webUserAccounts": [
                                        {
                                          "securityQuestion": {
                                            "code": "string",
                                            "description": "string"
                                          },
                                          "securityAnswer": "string",
                                          "comments": "string",
                                          "history": {
                                            "createDateTime": "2020-08-26T15:05:08.993Z",
                                            "creatorId": "string",
                                            "lastModifyDateTime": "2020-08-26T15:05:08.993Z",
                                            "lastModifierId": "string",
                                            "purgeDate": "2020-08-26",
                                            "lastLogin": "2020-08-26",
                                            "lastPasswordChange": "2020-08-26",
                                            "inactiveDate": "2020-08-26"
                                          },
                                          "newLoginName": "string",
                                          "newPassword": "string",
                                          "autoGeneratePassword": true,
                                          "loginName": "string",
                                          "domainCode": "string",
                                          "locked": true,
                                          "inactive": true
                                        }
                                      ],
                                      "taxInfo": {
                                        "tax1No": "string",
                                        "tax2No": "string",
                                        "taxCategory": "string",
                                        "taxOffice": "string",
                                        "taxType": "string",
                                        "businessId": "string",
                                        "businessRegistration": "string"
                                      },
                                      "salesInfo": {
                                        "scope": "string",
                                        "scopeCity": "string",
                                        "accountType": "string",
                                        "accountSource": "string",
                                        "industryCode": "string",
                                        "businessSegments": "string",
                                        "priority": "string",
                                        "roomsPotential": "string",
                                        "actionCode": "string",
                                        "competitionCode": "string",
                                        "influence": "string",
                                        "preferredRoom": "string",
                                        "hotelId": "string"
                                      },
                                      "eCertificates": [
                                        {
                                          "certificateId": 0,
                                          "voucherNo": "string",
                                          "certificateNo": "string",
                                          "eCertificateInfo": {
                                            "certificateType": "string",
                                            "membershipType": "string",
                                            "awardCode": "string",
                                            "promotionCode": "string",
                                            "voucherBenefitCode": "string",
                                            "hotels": {
                                              "code": [
                                                "string"
                                              ],
                                              "scope": "Global"
                                            },
                                            "description": "string",
                                            "longDescription": "string",
                                            "label": "string",
                                            "maxExtensionAllowed": 0,
                                            "usageCriteria": {
                                              "reservation": true,
                                              "web": true,
                                              "webAllowed": true,
                                              "benefit": true,
                                              "hotel": true,
                                              "verifyCertificateNo": true,
                                              "cancelAllowed": true,
                                              "generateInLieuCertificate": true
                                            },
                                            "value": {
                                              "amount": 0,
                                              "currencyCode": "string"
                                            },
                                            "cost": {
                                              "amount": 0,
                                              "currencyCode": "string"
                                            },
                                            "benefitSummary": "string"
                                          },
                                          "expiryDate": "2020-08-26",
                                          "newExpiryDate": "2020-08-26",
                                          "profileId": {
                                            "url": "string",
                                            "type": "string",
                                            "instance": "string",
                                            "idContext": "string",
                                            "id": "string",
                                            "idExtension": 0
                                          },
                                          "consumptionDetail": {
                                            "hotelId": "string",
                                            "source": "Central",
                                            "surname": "string",
                                            "firstName": "string",
                                            "middleName": "string",
                                            "email": "string",
                                            "date": "2020-08-26",
                                            "userName": "string",
                                            "userNotes": "string",
                                            "referenceId": {
                                              "id": "string",
                                              "type": "string"
                                            },
                                            "locationType": "string",
                                            "authorizationCode": "string",
                                            "serviceDate": "2020-08-26"
                                          },
                                          "status": "Cancelled",
                                          "printed": true,
                                          "inactiveDate": "2020-08-26",
                                          "awardId": {
                                            "url": "string",
                                            "type": "string",
                                            "instance": "string",
                                            "idContext": "string",
                                            "id": "string",
                                            "idExtension": 0
                                          },
                                          "databaseId": "string",
                                          "source": "Opera",
                                          "issueType": "Assigned",
                                          "issueDate": "2020-08-26",
                                          "awardPoints": 0,
                                          "generationDetail": {
                                            "ruleId": {
                                              "id": "string",
                                              "type": "string"
                                            },
                                            "generationDetail": "string",
                                            "referenceValue": "string"
                                          },
                                          "originalVoucherNo": "string",
                                          "originalCertificateNo": "string",
                                          "inLieuSequence": 0,
                                          "cancelRequestDate": "2020-08-26",
                                          "extensionCount": 0
                                        }
                                      ],
                                      "subscriptions": [
                                        {
                                          "profileId": {
                                            "url": "string",
                                            "type": "string",
                                            "instance": "string",
                                            "idContext": "string",
                                            "id": "string",
                                            "idExtension": 0
                                          },
                                          "externalProfileId": {
                                            "id": "string",
                                            "type": "string"
                                          },
                                          "profileInfo": {
                                            "name": "string",
                                            "fullName": "string",
                                            "namePrefix": "string",
                                            "givenName": "string",
                                            "middleName": "string",
                                            "nameSuffix": "string",
                                            "nameTitle": "string",
                                            "nameType": "Primary",
                                            "profileType": "Guest"
                                          },
                                          "distributed": true,
                                          "force": true,
                                          "subscriptionDate": "2020-08-26T15:05:08.993Z",
                                          "lastDistributionDate": "2020-08-26T15:05:08.993Z",
                                          "lastExternalUpdateDate": "2020-08-26T15:05:08.993Z",
                                          "inactive": true
                                        }
                                      ],
                                      "localizationGuestType": "string",
                                      "eligibleForFiscalFolio": "string",
                                      "profileType": "Guest",
                                      "statusCode": "Active",
                                      "registeredProperty": "string",
                                      "requestForHotel": "string",
                                      "protectedBy": "string",
                                      "createDateTime": "2020-08-26T15:05:08.993Z",
                                      "creatorId": "string",
                                      "lastModifyDateTime": "2020-08-26T15:05:08.993Z",
                                      "lastModifierId": "string",
                                      "purgeDate": "2020-08-26",
                                      "markAsRecentlyAccessed": true,
                                      "markForHistory": true,
                                      "hasCommission": true,
                                      "inheritedNegRates": true
                                    },
                                    "reservationProfileType": "Company"
                                  }
                                ],
                                "guestCounts": {
                                  "childAges": [
                                    {
                                      "age": 0
                                    }
                                  ],
                                  "childBuckets": {
                                    "bucket1Count": 0,
                                    "bucket2Count": 0,
                                    "bucket3Count": 0,
                                    "bucket4Count": 0,
                                    "bucket5Count": 0
                                  },
                                  "adults": 0,
                                  "children": 0
                                },
                                "taxFreeGuestCounts": {
                                  "childAges": [
                                    {
                                      "age": 0
                                    }
                                  ],
                                  "childBuckets": {
                                    "bucket1Count": 0,
                                    "bucket2Count": 0,
                                    "bucket3Count": 0,
                                    "bucket4Count": 0,
                                    "bucket5Count": 0
                                  },
                                  "adults": 0,
                                  "children": 0
                                },
                                "awards": {
                                  "membershipNo": {
                                    "id": "string",
                                    "type": "string"
                                  },
                                  "awardVouchers": [
                                    {
                                      "awardCode": "string",
                                      "voucherNo": "string"
                                    }
                                  ],
                                  "originalRoomType": "string",
                                  "upgradeRoomType": "string"
                                },
                                "foreignExchange": {
                                  "type": "string",
                                  "effectiveDate": "2020-08-26"
                                },
                                "reservationBlock": {
                                  "blockIdList": [
                                    {
                                      "id": "string",
                                      "type": "string"
                                    }
                                  ],
                                  "blockName": "string",
                                  "hotelId": "string"
                                },
                                "roomRateInfo": "string",
                                "mealPlans": [
                                  {
                                    "code": "string",
                                    "included": true,
                                    "breakfastIncluded": true,
                                    "lunchIncluded": true,
                                    "dinnerIncluded": true
                                  }
                                ],
                                "roomType": "string",
                                "ratePlanCode": "string",
                                "promotionCode": "string",
                                "start": "2020-08-26",
                                "end": "2020-08-26",
                                "availability": "Available",
                                "suppressRate": true,
                                "marketCode": "string",
                                "marketCodeDescription": "string",
                                "sourceCode": "string",
                                "sourceCodeDescription": "string",
                                "numberOfUnits": 0,
                                "roomId": "string",
                                "pseudoRoom": true,
                                "roomTypeCharged": "string",
                                "commissionCode": "string",
                                "commissionable": true,
                                "houseUseOnly": true,
                                "complimentary": true,
                                "inventoryLender": "string",
                                "fixedRate": true,
                                "barRanking": 0,
                                "rateGroup": "string",
                                "discountAllowed": true,
                                "bogoDiscount": true,
                                "rateLevel": "string",
                                "commissionPercentage": 0,
                                "commissionAmount": 0,
                                "credentialsRequired": true,
                                "taxIncluded": true,
                                "rateDescription": "string"
                              }
                            ],
                            "guestCounts": {
                              "childAges": [
                                {
                                  "age": 0
                                }
                              ],
                              "childBuckets": {
                                "bucket1Count": 0,
                                "bucket2Count": 0,
                                "bucket3Count": 0,
                                "bucket4Count": 0,
                                "bucket5Count": 0
                              },
                              "adults": 0,
                              "children": 0
                            },
                            "arrivalDate": "2020-08-26",
                            "departureDate": "2020-08-26",
                            "expectedTimes": {
                              "reservationExpectedArrivalTime": "2020-08-26T15:05:08.994Z",
                              "reservationExpectedDepartureTime": "2020-08-26T15:05:08.994Z"
                            },
                            "originalTimeSpan": {
                              "startDate": "2020-08-26",
                              "endDate": "2020-08-26",
                              "duration": "string"
                            },
                            "guarantee": {
                              "guaranteeCode": "string",
                              "shortDescription": "string",
                              "onHold": true
                            },
                            "promotion": {
                              "promotionCode": "string",
                              "promotionName": "string",
                              "couponCode": "string"
                            },
                            "suiteWith": "string",
                            "total": {
                              "taxes": {
                                "tax": [
                                  {
                                    "description": "string",
                                    "type": "Inclusive",
                                    "code": "string",
                                    "amount": 0,
                                    "currencyCode": "string"
                                  }
                                ],
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "fees": {
                                "fee": [
                                  {
                                    "description": "string",
                                    "type": "Inclusive",
                                    "code": "string",
                                    "amount": 0,
                                    "currencyCode": "string"
                                  }
                                ],
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "description": "string",
                              "amountBeforeTax": 0,
                              "amountAfterTax": 0,
                              "currencyCode": "string",
                              "currencySymbol": "string",
                              "decimalPlaces": 0,
                              "code": "string",
                              "rateOverride": true
                            },
                            "totalPoints": {
                              "awardsType": "string",
                              "points": 0
                            },
                            "multiValueAttrs": [
                              "string"
                            ],
                            "upsellInfo": {
                              "originalInfo": {
                                "rateCode": "string",
                                "totalAmount": {
                                  "amount": 0,
                                  "currencyCode": "string"
                                },
                                "roomType": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "nights": 0
                              },
                              "upsellInfo": {
                                "totalUpsellCharge": {
                                  "amount": 0,
                                  "currencyCode": "string"
                                },
                                "totalUpsellMoneyAmount": {
                                  "amount": 0,
                                  "currencyCode": "string"
                                },
                                "firstNightUpsellAmount": {
                                  "amount": 0,
                                  "currencyCode": "string"
                                },
                                "firstNightUpsellCharge": {
                                  "amount": 0,
                                  "currencyCode": "string"
                                },
                                "totalUpsellPoints": 0,
                                "totalActualRateAmount": {
                                  "amount": 0,
                                  "currencyCode": "string"
                                },
                                "roomType": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "roomLongDescription": "string",
                                "ruleId": 0,
                                "ruleCode": "string",
                                "ruleDescription": "string",
                                "percentageSavings": 0,
                                "upsellDate": "2020-08-26",
                                "upsellUser": "string"
                              }
                            },
                            "mobileNotifications": {
                              "roomReady": "Pending",
                              "keyReady": "Pending",
                              "checkoutMessageReceived": true,
                              "requiresAction": true,
                              "errorMessage": "string"
                            },
                            "roomNumberLocked": true,
                            "printRate": true,
                            "primaryShareType": "Primary",
                            "remoteCheckInAllowed": true,
                            "bookingMedium": "string",
                            "bookingMediumDescription": "string"
                          }
                        ]
                      },
                      "channelSummaryInfo": {
                        "bookingChannel": {
                          "channelCode": "string",
                          "channelName": "string",
                          "channelType": "string"
                        },
                        "messageId": "string",
                        "summaryOnly": true
                      },
                      "sellMessages": {
                        "sellMessage": [
                          {
                            "message": "string",
                            "croCode": "string",
                            "chainCode": "string",
                            "hotelId": "string",
                            "roomType": "string",
                            "ratePlanCode": "string",
                            "languageCode": "string",
                            "stickyFlagYn": "string",
                            "usedInModule": "Blocks",
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0
                          }
                        ],
                        "hasMore": true,
                        "totalResults": 0,
                        "count": 0
                      },
                      "currencyExchangeRates": [
                        {
                          "currencyCode": "string",
                          "currencySymbol": "string",
                          "decimalPlaces": 0,
                          "description": "string",
                          "exchangeRate": {
                            "amount": 0,
                            "currencyCode": "string"
                          }
                        }
                      ],
                      "chainCode": "string",
                      "hotelId": "string",
                      "hotelCityCode": "string",
                      "hotelName": "string",
                      "hotelCodeContext": "string",
                      "chainName": "string",
                      "hotelType": "string",
                      "negotiated": true,
                      "alternate": true,
                      "displayOrder": 0,
                      "inventoryRooms": 0,
                      "availableRooms": 0,
                      "comments": "string",
                      "direction": "string",
                      "reciprocalRelationship": true,
                      "alternateHotelCode": "string",
                      "newAlternateHotelCode": "string"
                    }
                  ],
                  "hotelContacts": [
                    {
                      "nameId": {
                        "id": "string",
                        "type": "string"
                      },
                      "hotelId": "string",
                      "name": "string",
                      "roles": [
                        "Lead"
                      ],
                      "ownerCode": "string",
                      "communicationMethod": "string",
                      "communicationAddress": "string",
                      "primary": true
                    }
                  ],
                  "hotelEventSpaces": {
                    "eventSpaceDetails": [
                      {
                        "code": "string",
                        "description": "string",
                        "maxCapacity": 0,
                        "maxOccupancies": [
                          0
                        ]
                      }
                    ],
                    "eventSpaceSummaries": [
                      {
                        "no": 0,
                        "spaceType": "string",
                        "maxCapacity": 0,
                        "maxOccupancies": [
                          0
                        ]
                      }
                    ],
                    "setupStyles": [
                      "string"
                    ]
                  },
                  "hotelNotes": [
                    {
                      "comment": {
                        "text": {
                          "value": "string",
                          "language": "string"
                        },
                        "image": "string",
                        "url": "string",
                        "commentTitle": "string",
                        "notificationLocation": "string",
                        "type": "string",
                        "typeDescription": "string",
                        "internal": true,
                        "confidential": true,
                        "overrideInternal": true,
                        "protectDescription": true,
                        "hotelId": "string",
                        "actionType": "string",
                        "actionDate": "2020-08-26",
                        "createDateTime": "2020-08-26T15:05:08.994Z",
                        "creatorId": "string",
                        "lastModifyDateTime": "2020-08-26T15:05:08.994Z",
                        "lastModifierId": "string",
                        "purgeDate": "2020-08-26"
                      },
                      "createDateTime": "2020-08-26T15:05:08.994Z",
                      "creatorId": "string",
                      "lastModifyDateTime": "2020-08-26T15:05:08.994Z",
                      "lastModifierId": "string",
                      "purgeDate": "2020-08-26",
                      "id": "string",
                      "type": "string"
                    }
                  ],
                  "hotelCorporateInformations": {
                    "brandCode": "string",
                    "hotelCategory": "string",
                    "businessUnit": [
                      {
                        "primary": true,
                        "codeDescription": {
                          "code": "string",
                          "description": "string"
                        }
                      }
                    ],
                    "departmentCode": [
                      {
                        "primary": true,
                        "codeDescription": {
                          "code": "string",
                          "description": "string"
                        }
                      }
                    ],
                    "division": [
                      {
                        "primary": true,
                        "codeDescription": {
                          "code": "string",
                          "description": "string"
                        }
                      }
                    ],
                    "opertingUnit": [
                      {
                        "primary": true,
                        "codeDescription": {
                          "code": "string",
                          "description": "string"
                        }
                      }
                    ]
                  },
                  "attractions": [
                    {
                      "name": {
                        "defaultText": "string",
                        "translatedTexts": [
                          {
                            "value": "string",
                            "language": "string"
                          }
                        ]
                      },
                      "type": "string",
                      "class": "string",
                      "generalDirections": "string",
                      "relativePosition": {
                        "distance": 0,
                        "distanceType": "string",
                        "drivingTime": "string"
                      },
                      "address": {
                        "addressLine": [
                          "string"
                        ],
                        "cityName": "string",
                        "postalCode": "string",
                        "cityExtension": "string",
                        "county": "string",
                        "state": "string",
                        "country": {
                          "value": "string",
                          "code": "string"
                        },
                        "language": "string",
                        "type": "string",
                        "typeDescription": "string",
                        "primaryInd": true,
                        "updateReservations": true,
                        "barCode": "string",
                        "createDateTime": "2020-08-26T15:05:08.994Z",
                        "creatorId": "string",
                        "lastModifyDateTime": "2020-08-26T15:05:08.994Z",
                        "lastModifierId": "string",
                        "purgeDate": "2020-08-26"
                      },
                      "website": {
                        "value": "string",
                        "type": "string",
                        "typeDescription": "string",
                        "primaryInd": true,
                        "orderSequence": 0
                      },
                      "priceRange": "string",
                      "operationHours": "string",
                      "displaySeq": 0,
                      "code": "string"
                    }
                  ],
                  "meetingRooms": [
                    {
                      "code": "string",
                      "charge": "string",
                      "description": "string"
                    }
                  ],
                  "chainCode": "string",
                  "hotelId": "string",
                  "hotelCityCode": "string",
                  "hotelName": "string",
                  "hotelCodeContext": "string",
                  "chainName": "string",
                  "baseLanguage": "string",
                  "currentTime": "string",
                  "hotelAttractions": [
                    {
                      "name": {
                        "defaultText": "string",
                        "translatedTexts": [
                          {
                            "value": "string",
                            "language": "string"
                          }
                        ]
                      },
                      "type": "string",
                      "class": "string",
                      "generalDirections": "string",
                      "relativePosition": {
                        "distance": 0,
                        "distanceType": "string",
                        "drivingTime": "string"
                      },
                      "address": {
                        "addressLine": [
                          "string"
                        ],
                        "cityName": "string",
                        "postalCode": "string",
                        "cityExtension": "string",
                        "county": "string",
                        "state": "string",
                        "country": {
                          "value": "string",
                          "code": "string"
                        },
                        "language": "string",
                        "type": "string",
                        "typeDescription": "string",
                        "primaryInd": true,
                        "updateReservations": true,
                        "barCode": "string",
                        "createDateTime": "2020-08-26T15:05:08.995Z",
                        "creatorId": "string",
                        "lastModifyDateTime": "2020-08-26T15:05:08.995Z",
                        "lastModifierId": "string",
                        "purgeDate": "2020-08-26"
                      },
                      "website": {
                        "value": "string",
                        "type": "string",
                        "typeDescription": "string",
                        "primaryInd": true,
                        "orderSequence": 0
                      },
                      "priceRange": "string",
                      "operationHours": "string",
                      "displaySeq": 0,
                      "code": "string"
                    }
                  ],
                  "hotelPackages": [
                    {
                      "packageName": "string",
                      "beginDate": "2020-08-26",
                      "endDate": "2020-08-26",
                      "packagePrice": 0,
                      "rateCode": "string",
                      "pointsRequired": 0,
                      "packageCode": "string"
                    }
                  ],
                  "hotelTransportations": [
                    {
                      "phoneNumber": {
                        "phoneTechType": "string",
                        "phoneUseType": "string",
                        "phoneUseTypeDescription": "string",
                        "phoneNumber": "string",
                        "extension": "string",
                        "primaryInd": true,
                        "orderSequence": 0,
                        "createDateTime": "2020-08-26T15:05:08.995Z",
                        "creatorId": "string",
                        "lastModifyDateTime": "2020-08-26T15:05:08.995Z",
                        "lastModifierId": "string",
                        "purgeDate": "2020-08-26"
                      },
                      "relativePosition": {
                        "distance": 0,
                        "distanceType": "string",
                        "drivingTime": "string"
                      },
                      "description": "string",
                      "comments": "string",
                      "priceRange": "string",
                      "website": {
                        "value": "string",
                        "type": "string",
                        "typeDescription": "string",
                        "primaryInd": true,
                        "orderSequence": 0
                      },
                      "keyOptions": [
                        "string"
                      ],
                      "transportationCode": "string",
                      "label": "string",
                      "orderBy": 0
                    }
                  ],
                  "hotelConferenceFacilities": {
                    "hotelBanquetSpace": {
                      "banquetSeats": 0,
                      "meetingRooms": 0,
                      "banquetArea": "string",
                      "meetingArea": 0,
                      "unitOfMeasureCode": "string"
                    },
                    "hotelConferenceRooms": [
                      {
                        "roomName": "string",
                        "roomType": "string",
                        "roomCode": "string"
                      }
                    ]
                  },
                  "hotelFeatures": [
                    {
                      "description": "string",
                      "comments": "string",
                      "featureCode": "string",
                      "orderSequence": 0,
                      "hours": "string",
                      "priceRange": "string"
                    }
                  ],
                  "directions": [
                    {
                      "description": "string",
                      "title": "string"
                    }
                  ],
                  "generalNotes": [
                    {
                      "note": "string",
                      "title": "string"
                    }
                  ],
                  "hotelAirports": [
                    {
                      "description": "string",
                      "relativePosition": {
                        "distance": 0,
                        "distanceType": "string",
                        "drivingTime": "string"
                      },
                      "direction": "string",
                      "transportationList": [
                        {
                          "code": "string"
                        }
                      ],
                      "airportCode": "string",
                      "orderSequence": 0
                    }
                  ],
                  "hotelMiscellaneousInformation": [
                    {
                      "category": "string",
                      "infoType": "string",
                      "information": "string"
                    }
                  ]
                },
                "links": [
                  {
                    "href": "string",
                    "rel": "string",
                    "templated": false,
                    "method": "GET",
                    "targetSchema": "string",
                    "operationId": "string",
                    "title": "string"
                  }
                ]
              }
            }
          },
          "204": {
            "description": "HotelBrochure not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/hotelDetails": {
      "get": {
        "summary": "Get hotel details ",
        "description": "Use this API to get hotel details. <p><strong>OperationId:</strong>getHotelDetails</p>",
        "operationId": "getHotelDetails",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "hotelDetailCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "hotelDetailCategoriesCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching hotel details at the property level.",
            "schema": {
              "$ref": "#/definitions/hotelDetailsDetails"
            }
          },
          "204": {
            "description": "HotelDetails not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/jobTitles": {
      "get": {
        "summary": "Get resort job titles",
        "description": "Use this API to get resort job titles. <p><strong>OperationId:</strong>getJobTitles</p>",
        "operationId": "getJobTitles",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "jobTitleCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching job titles configured for hotels.",
            "schema": {
              "$ref": "#/definitions/jobTitlesDetails"
            }
          },
          "204": {
            "description": "JobTitles not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create new resort job titles",
        "description": "Use this API to create new resort job titles. <p><strong>OperationId:</strong>postJobTitles</p>",
        "operationId": "postJobTitles",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "jobTitlesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating new job titles for hotels.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/jobTitlesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/jobTitles/{jobTitleCode}": {
      "put": {
        "summary": "Change resort job titles",
        "description": "Use this API to update resort job titles. <p><strong>OperationId:</strong>changeJobTitles</p>",
        "operationId": "changeJobTitles",
        "parameters": [
          {
            "name": "jobTitleCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Code for Job Title."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "jobTitlesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for modifying job titles for hotels.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/jobTitlesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete resort job titles",
        "description": "Use this API to delete resort job titles. <p><strong>OperationId:</strong>removeJobTitles</p>",
        "operationId": "removeJobTitles",
        "parameters": [
          {
            "name": "jobTitleCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Code for Job Title."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/marketingCities": {
      "get": {
        "summary": "Get resort marketing cities",
        "description": "Use this API to get resort marketing cities. <p><strong>OperationId:</strong>getMarketingCities</p> <p>The maximum allowable limit for this API is <strong>20</strong>.</p>",
        "operationId": "getMarketingCities",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "Flag to indicate whether to include inactive marketing cities in the results or not.",
            "type": "boolean"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "marketingCitys",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "List of Marketing Cities.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "regionCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Marketing city description to search for.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching marketing cities configured for hotels.",
            "schema": {
              "$ref": "#/definitions/marketingCitiesDetails"
            }
          },
          "204": {
            "description": "MarketingCities not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create new resort marketing cities",
        "description": "Use this API to create new resort marketing cities. <p><strong>OperationId:</strong>postMarketingCities</p>",
        "operationId": "postMarketingCities",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "marketingCitiesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating new marketing cities for hotels.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/marketingCitiesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/marketingCities/{cityCode}": {
      "put": {
        "summary": "Change resort marketing cities",
        "description": "Use this API to update resort marketing cities. <p><strong>OperationId:</strong>changeMarketingCities</p>",
        "operationId": "changeMarketingCities",
        "parameters": [
          {
            "name": "cityCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of city."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "marketingCitiesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for modifying marketing cities for hotels.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/marketingCitiesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete resort marketing cities",
        "description": "Use this API to delete resort marketing cities. <p><strong>OperationId:</strong>removeMarketingCities</p>",
        "operationId": "removeMarketingCities",
        "parameters": [
          {
            "name": "cityCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of city."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "regionCode",
            "in": "query",
            "required": false,
            "description": "Region code the marketing city belongs to.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/notes": {
      "post": {
        "summary": "Create Note information",
        "description": "Use this API to create Note information. <p><strong>OperationId:</strong>postHotelNotes</p>",
        "operationId": "postHotelNotes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelNotesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating new Notes for the hotels",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelNotesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/notes/{noteCode}": {
      "put": {
        "summary": "Update Note information",
        "description": "Update Note information. <p><strong>OperationId:</strong>changeHotelNotes</p>",
        "operationId": "changeHotelNotes",
        "parameters": [
          {
            "name": "noteCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of note."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelNotesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing hotel Notes for hotels.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelNotesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/operaContext": {
      "get": {
        "summary": "Get Opera Hotel Context",
        "description": "This API will retrieve general contextual information for the specified hotel such as business date. <p><strong>OperationId:</strong>getOperaHotelContext</p>",
        "operationId": "getOperaHotelContext",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "The result element returned with general hotel contextual information.",
            "schema": {
              "$ref": "#/definitions/operaHotelContextDetails"
            }
          },
          "204": {
            "description": "OperaHotelContext not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/rateRanges": {
      "post": {
        "summary": "Create Rate Range information",
        "description": "Use this API to create Rate Range information. <p><strong>OperationId:</strong>postHotelRateRanges</p>",
        "operationId": "postHotelRateRanges",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelRateRangesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating new Rate Ranges for hotels.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelRateRangesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "put": {
        "summary": "Update Rate Range information",
        "description": "Update Rate Range information. <p><strong>OperationId:</strong>changeHotelRateRanges</p>",
        "operationId": "changeHotelRateRanges",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelRateRangesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing hotel Rate Ranges for hotels.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelRateRangesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete Rate Range information",
        "description": "Use this API to delete Rate Range information. <p><strong>OperationId:</strong>removeHotelRateRanges</p>",
        "operationId": "removeHotelRateRanges",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/restaurants": {
      "post": {
        "summary": "Create restaurant information",
        "description": "Use this API to create restaurant information. <p><strong>OperationId:</strong>postHotelRestaurants</p>",
        "operationId": "postHotelRestaurants",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelRestaurantsCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating new restaurants for hotels.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelRestaurantsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/restaurants/{restaurantCode}": {
      "put": {
        "summary": "Update the restaurant information",
        "description": "Update the restaurant information. <p><strong>OperationId:</strong>changeHotelRestaurants</p>",
        "operationId": "changeHotelRestaurants",
        "parameters": [
          {
            "name": "restaurantCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of restaurant."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelRestaurantsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing hotel restaurants for hotels.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelRestaurantsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete restaurant information",
        "description": "Use this API to delete restaurant information. <p><strong>OperationId:</strong>removeHotelRestaurants</p>",
        "operationId": "removeHotelRestaurants",
        "parameters": [
          {
            "name": "restaurantCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of restaurant."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/telephoneBookCategories": {
      "get": {
        "summary": "Get Telephone Book Category",
        "description": "Use this API to get Telephone Book Category. <p><strong>OperationId:</strong>getTelephoneBookCategories</p>",
        "operationId": "getTelephoneBookCategories",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetch Telephone Categories.",
            "schema": {
              "$ref": "#/definitions/telephoneBookCategoriesDetails"
            }
          },
          "204": {
            "description": "TelephoneBookCategories not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create Telephone Book Category",
        "description": "Use this API to create Telephone Book Category. <p><strong>OperationId:</strong>postTelephoneBookCategories</p>",
        "operationId": "postTelephoneBookCategories",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "telephoneBookCategoriesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for Telephone Book Category.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/telephoneBookCategoriesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/telephoneBookCategories/{categoryCode}": {
      "put": {
        "summary": "Change Telephone Book Category",
        "description": "Use this API to update Telephone Book Category. <p><strong>OperationId:</strong>changeTelephoneBookCategories</p>",
        "operationId": "changeTelephoneBookCategories",
        "parameters": [
          {
            "name": "categoryCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of category."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "telephoneBookCategoriesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for Telephone Book Category.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/telephoneBookCategoriesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete Telephone Book Category",
        "description": "Use this API to delete Telephone Book Category. <p><strong>OperationId:</strong>removeTelephoneBookCategories</p>",
        "operationId": "removeTelephoneBookCategories",
        "parameters": [
          {
            "name": "categoryCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of category."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "description",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "generic",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/telephoneBookEntries": {
      "get": {
        "summary": "Get Telephone Book Entries",
        "description": "Use this API to get Telephone Book Entries. <p><strong>OperationId:</strong>getTelephoneBookEntries</p>",
        "operationId": "getTelephoneBookEntries",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "description": "Category code that the telephone book entry belongs to.",
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the name of telephone book entry.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetch Telephone Book Entries.",
            "schema": {
              "$ref": "#/definitions/telephoneBookEntriesDetails"
            }
          },
          "204": {
            "description": "TelephoneBookEntries not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create Telephone Book Entries",
        "description": "Use this API to create Telephone Book Entries. <p><strong>OperationId:</strong>postTelephoneBookEntries</p>",
        "operationId": "postTelephoneBookEntries",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "telephoneBookEntriesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for Telephone Book Entries.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/telephoneBookEntriesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/telephoneBookEntries/{entryId}": {
      "put": {
        "summary": "Create Telephone Book Entries",
        "description": "Use this API to create Telephone Book Entries. <p><strong>OperationId:</strong>changeTelephoneBookEntries</p>",
        "operationId": "changeTelephoneBookEntries",
        "parameters": [
          {
            "name": "entryId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of entry."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "telephoneBookEntriesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for Telephone Book Entries.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/telephoneBookEntriesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete Telephone Book Entries",
        "description": "Use this API to delete Telephone Book Entries. <p><strong>OperationId:</strong>removeTelephoneBookEntries</p>",
        "operationId": "removeTelephoneBookEntries",
        "parameters": [
          {
            "name": "entryId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of entry."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "idContext",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/transportations": {
      "get": {
        "summary": "Get transportation",
        "description": "Use this API to get transportation. <p><strong>OperationId:</strong>getTransportation</p>",
        "operationId": "getTransportation",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "transportationCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for information regarding transportation.",
            "schema": {
              "$ref": "#/definitions/transportationDetails"
            }
          },
          "204": {
            "description": "Transportation not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create transportation",
        "description": "Use this API to create transportation. <p><strong>OperationId:</strong>postTransportation</p>",
        "operationId": "postTransportation",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "transportationCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating transportation.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transportationCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/transportations/{transportationCode}": {
      "put": {
        "summary": " modify transportation",
        "description": "You can use this API to modify Transportation for a property. <p><strong>OperationId:</strong>changeTransportation</p>",
        "operationId": "changeTransportation",
        "parameters": [
          {
            "name": "transportationCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of transportation."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "transportationToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for modifying transportation.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transportationToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete transportation",
        "description": "Use this API to delete transportation. <p><strong>OperationId:</strong>removeTransportation</p>",
        "operationId": "removeTransportation",
        "parameters": [
          {
            "name": "transportationCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of transportation."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "label",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "orderBy",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "createDateTime",
            "in": "query",
            "required": false,
            "description": "Time stamp of the creation.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "creatorId",
            "in": "query",
            "required": false,
            "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
            "type": "string"
          },
          {
            "name": "extension",
            "in": "query",
            "required": false,
            "description": "Extension to reach a specific party at the phone number.",
            "type": "string"
          },
          {
            "name": "lastModifierId",
            "in": "query",
            "required": false,
            "description": "Identifies the last software system or person to modify a record.",
            "type": "string"
          },
          {
            "name": "lastModifyDateTime",
            "in": "query",
            "required": false,
            "description": "Time stamp of last modification.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "phoneNumberOrderSequence",
            "in": "query",
            "required": false,
            "description": "Display Order sequence.",
            "type": "number"
          },
          {
            "name": "phoneNumber",
            "in": "query",
            "required": false,
            "description": "Telephone number assigned to a single location.",
            "type": "string"
          },
          {
            "name": "phoneTechType",
            "in": "query",
            "required": false,
            "description": "Indicates type of technology associated with this telephone number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc.",
            "type": "string"
          },
          {
            "name": "phoneUseType",
            "in": "query",
            "required": false,
            "description": "Describes the type of telephone number, in the context of its general use (e.g. Home, Business, Emergency Contact, Travel Arranger, Day, Evening).",
            "type": "string"
          },
          {
            "name": "phoneUseTypeDescription",
            "in": "query",
            "required": false,
            "description": "Description of the PhoneUseType code",
            "type": "string"
          },
          {
            "name": "phoneNumberPrimaryInd",
            "in": "query",
            "required": false,
            "description": "When true, indicates a primary information.",
            "type": "boolean"
          },
          {
            "name": "purgeDate",
            "in": "query",
            "required": false,
            "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
            "type": "string",
            "format": "date"
          },
          {
            "name": "distance",
            "in": "query",
            "required": false,
            "description": "Defines the distance between two points.",
            "type": "number"
          },
          {
            "name": "distanceType",
            "in": "query",
            "required": false,
            "description": "The unit of measure in a code format.",
            "type": "string"
          },
          {
            "name": "drivingTime",
            "in": "query",
            "required": false,
            "description": "The driving time in a free text format.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "The description of the transportation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "comments",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Comments about the transportation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "priceRange",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "The price range of the transportation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "websiteOrderSequence",
            "in": "query",
            "required": false,
            "description": "Display Order sequence.",
            "type": "number"
          },
          {
            "name": "websitePrimaryInd",
            "in": "query",
            "required": false,
            "description": "When true, indicates a primary information.",
            "type": "boolean"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "Defines the purpose of the URL address, such as personal, business, public, etc.",
            "type": "string"
          },
          {
            "name": "typeDescription",
            "in": "query",
            "required": false,
            "description": "Describes the Type code",
            "type": "string"
          },
          {
            "name": "keyOptionsCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/yieldAdjustmentCodes": {
      "get": {
        "summary": "Get Yield Adjustment Codes",
        "description": "Use this API to get Yield Adjustment Codes. <p><strong>OperationId:</strong>getYieldAdjustmentCodes</p>",
        "operationId": "getYieldAdjustmentCodes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "yieldAdjustmentCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Defines values for Yield Adjustment Types.",
            "uniqueItems": true,
            "enum": [
              "PerStay",
              "PerNight",
              "PerPersonPerNight",
              "PerPersonPerStay"
            ]
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Yield AdjustmentCodes configurations.",
            "schema": {
              "$ref": "#/definitions/yieldAdjustmentCodesDetails"
            }
          },
          "204": {
            "description": "YieldAdjustmentCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create Yield Adjustment Codes",
        "description": "Use this API to create Yield Adjustment Codes. <p><strong>OperationId:</strong>postYieldAdjustmentCodes</p>",
        "operationId": "postYieldAdjustmentCodes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "yieldAdjustmentCodesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating new Yield AdjustmentCodes Configurations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/yieldAdjustmentCodesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/yieldAdjustmentCodes/{yieldAdjustmentCode}": {
      "put": {
        "summary": "Change Yield Adjustment Codes",
        "description": "Use this API to update Yield Adjustment Codes. <p><strong>OperationId:</strong>changeYieldAdjustmentCodes</p>",
        "operationId": "changeYieldAdjustmentCodes",
        "parameters": [
          {
            "name": "yieldAdjustmentCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of yield adjustment."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "yieldAdjustmentCodesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing existing Yield AdjustmentCodes Configurations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/yieldAdjustmentCodesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete Yield Adjustment Codes",
        "description": "Use this API to delete Yield Adjustment Codes. <p><strong>OperationId:</strong>removeYieldAdjustmentCodes</p>",
        "operationId": "removeYieldAdjustmentCodes",
        "parameters": [
          {
            "name": "yieldAdjustmentCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of yield adjustment."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/yieldCategories": {
      "get": {
        "summary": "Get Yield Category",
        "description": "Use this API to get Yield Category. <p><strong>OperationId:</strong>getYieldCategories</p>",
        "operationId": "getYieldCategories",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "yieldCategoriesCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Yield Category configurations.",
            "schema": {
              "$ref": "#/definitions/yieldCategoriesDetails"
            }
          },
          "204": {
            "description": "YieldCategories not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create Yield Category",
        "description": "Use this API to create Yield Category. <p><strong>OperationId:</strong>postYieldCategories</p>",
        "operationId": "postYieldCategories",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "yieldCategoriesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating new Yield Category Configurations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/yieldCategoriesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/yieldCategories/{code}": {
      "put": {
        "summary": "Change Yield Category",
        "description": "Use this API to update Yield Category. <p><strong>OperationId:</strong>changeYieldCategories</p>",
        "operationId": "changeYieldCategories",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of yield category."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "yieldCategoriesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing existing Yield Category Configurations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/yieldCategoriesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete Yield Category",
        "description": "Use this API to delete Yield Category. <p><strong>OperationId:</strong>removeYieldCategories</p>",
        "operationId": "removeYieldCategories",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of yield category."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/yieldMarketTypes/{code}": {
      "delete": {
        "summary": "Delete Yield Market Types",
        "description": "Use this API to delete Yield Market Types. <p><strong>OperationId:</strong>removeYieldMarketTypes</p>",
        "operationId": "removeYieldMarketTypes",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Code of the YieldMarketType."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{sourceHotelId}/departments/copy": {
      "put": {
        "summary": " copy Departments",
        "description": "Copy Departments. <p><strong>OperationId:</strong>copyDepartments</p>",
        "operationId": "copyDepartments",
        "parameters": [
          {
            "name": "sourceHotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of source hotel."
          },
          {
            "name": "copyDepartments",
            "in": "body",
            "required": true,
            "description": "List of the departments to be copied.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/copyDepartments"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{sourceHotelId}/yieldAdjustmentCodes/copy": {
      "put": {
        "summary": " copy Yield Adjustment Codes",
        "description": "Copy Yield Adjustment Codes. <p><strong>OperationId:</strong>copyYieldAdjustmentCodes</p>",
        "operationId": "copyYieldAdjustmentCodes",
        "parameters": [
          {
            "name": "sourceHotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of source hotel."
          },
          {
            "name": "copyYieldAdjustmentCodes",
            "in": "body",
            "required": true,
            "description": "List of the Yield AdjustmentCodes to be copied.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/copyYieldAdjustmentCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{sourceHotelId}/yieldCategories/copy": {
      "put": {
        "summary": " copy Yield Category",
        "description": "Copy Yield Category. <p><strong>OperationId:</strong>copyYieldCategories</p>",
        "operationId": "copyYieldCategories",
        "parameters": [
          {
            "name": "sourceHotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of source hotel."
          },
          {
            "name": "copyYieldCategories",
            "in": "body",
            "required": true,
            "description": "List of the Yield Category to be copied.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/copyYieldCategories"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/jobTitles": {
      "get": {
        "summary": "Get template job titles",
        "description": "Use this API to get template job titles. <p><strong>OperationId:</strong>getTemplateJobTitles</p>",
        "operationId": "getTemplateJobTitles",
        "parameters": [
          {
            "name": "jobTitleCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching template job titles.",
            "schema": {
              "$ref": "#/definitions/templateJobTitlesDetails"
            }
          },
          "204": {
            "description": "TemplateJobTitles not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create new template job titles",
        "description": "Use this API to create new template job titles. <p><strong>OperationId:</strong>postTemplateJobTitles</p>",
        "operationId": "postTemplateJobTitles",
        "parameters": [
          {
            "name": "templateJobTitlesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating new template job titles.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateJobTitlesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/jobTitles/{jobTitleCode}": {
      "put": {
        "summary": "Change template job titles",
        "description": "Use this API to update template job titles. <p><strong>OperationId:</strong>changeTemplateJobTitles</p>",
        "operationId": "changeTemplateJobTitles",
        "parameters": [
          {
            "name": "jobTitleCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Code for Job Title template."
          },
          {
            "name": "templateJobTitlesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for modifying template job titles.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateJobTitlesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete template job titles",
        "description": "Use this API to delete template job titles. <p><strong>OperationId:</strong>removeTemplateJobTitles</p>",
        "operationId": "removeTemplateJobTitles",
        "parameters": [
          {
            "name": "jobTitleCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Code for Job Title template."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/languages": {
      "get": {
        "summary": "Get Languages",
        "description": "Use this API to get Languages. <p><strong>OperationId:</strong>getLanguages</p>",
        "operationId": "getLanguages",
        "parameters": [
          {
            "name": "languageCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Language description to be searched.",
            "type": "string"
          },
          {
            "name": "useAsAlternateLanguage",
            "in": "query",
            "required": false,
            "description": "This is a placeholder element for future use. Functionality may not be available for the current implementation.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching languages.",
            "schema": {
              "$ref": "#/definitions/languagesDetails"
            }
          },
          "204": {
            "description": "Languages not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create Languages",
        "description": "Use this API to create Languages. <p><strong>OperationId:</strong>postLanguages</p>",
        "operationId": "postLanguages",
        "parameters": [
          {
            "name": "languagesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating new language records.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/languagesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/languages/{languageCode}": {
      "put": {
        "summary": "Update a Language",
        "description": "Update a Language. <p><strong>OperationId:</strong>changeLanguages</p>",
        "operationId": "changeLanguages",
        "parameters": [
          {
            "name": "languageCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of language."
          },
          {
            "name": "languagesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing details of existing language records.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/languagesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete a Language",
        "description": "Use this API to delete a Language. <p><strong>OperationId:</strong>removeLanguages</p>",
        "operationId": "removeLanguages",
        "parameters": [
          {
            "name": "languageCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of language."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/marketingCities": {
      "get": {
        "summary": "Get template marketing cities",
        "description": "Use this API to get template marketing cities. <p><strong>OperationId:</strong>getTemplateMarketingCities</p>",
        "operationId": "getTemplateMarketingCities",
        "parameters": [
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "Flag to indicate whether to include inactive marketing cities in the results or not.",
            "type": "boolean"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "marketingCitys",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "List of Marketing Cities.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "regionCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Marketing city description to search for.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching template marketing cities.",
            "schema": {
              "$ref": "#/definitions/templateMarketingCitiesDetails"
            }
          },
          "204": {
            "description": "TemplateMarketingCities not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create new template marketing cities",
        "description": "Use this API to create new template marketing cities. <p><strong>OperationId:</strong>postTemplateMarketingCities</p>",
        "operationId": "postTemplateMarketingCities",
        "parameters": [
          {
            "name": "templateMarketingCitiesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating new template marketing cities.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateMarketingCitiesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/marketingCities/copy": {
      "put": {
        "summary": "Copy marketing cities to resorts",
        "description": "Copy marketing cities to resorts. <p><strong>OperationId:</strong>copyMarketingCities</p>",
        "operationId": "copyMarketingCities",
        "parameters": [
          {
            "name": "copyMarketingCities",
            "in": "body",
            "required": true,
            "description": "Request object for copying template marketing cities to hotel(s).",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/copyMarketingCities"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/marketingCities/{cityCode}": {
      "put": {
        "summary": "Change template marketing cities",
        "description": "Use this API to update template marketing cities. <p><strong>OperationId:</strong>changeTemplateMarketingCities</p>",
        "operationId": "changeTemplateMarketingCities",
        "parameters": [
          {
            "name": "cityCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of city."
          },
          {
            "name": "templateMarketingCitiesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for modifying template marketing cities.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateMarketingCitiesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete template marketing cities",
        "description": "Use this API to delete template marketing cities. <p><strong>OperationId:</strong>removeTemplateMarketingCities</p>",
        "operationId": "removeTemplateMarketingCities",
        "parameters": [
          {
            "name": "cityCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of city."
          },
          {
            "name": "regionCode",
            "in": "query",
            "required": false,
            "description": "Region code the marketing city belongs to.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/marketingCitiesByRegion": {
      "get": {
        "summary": "Get marketing cities by region",
        "description": "Use this API to get marketing cities by region. <p><strong>OperationId:</strong>getMarketingCitiesByRegion</p>",
        "operationId": "getMarketingCitiesByRegion",
        "parameters": [
          {
            "name": "regionCode",
            "in": "query",
            "required": false,
            "description": "Region Code",
            "type": "string"
          },
          {
            "name": "marketingCity",
            "in": "query",
            "required": false,
            "description": "Marketing City",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "",
            "schema": {
              "$ref": "#/definitions/marketingCitiesByRegionDetails"
            }
          },
          "204": {
            "description": "MarketingCitiesByRegion not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/marketingRegions": {
      "get": {
        "summary": "Get Marketing Regions",
        "description": "Use this API to get Marketing Regions. <p><strong>OperationId:</strong>getMarketingRegions</p>",
        "operationId": "getMarketingRegions",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Marketing Regions.",
            "schema": {
              "$ref": "#/definitions/marketingRegionsDetails"
            }
          },
          "204": {
            "description": "MarketingRegions not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create Marketing Regions",
        "description": "Use this API to create Marketing Regions. <p><strong>OperationId:</strong>postMarketingRegions</p>",
        "operationId": "postMarketingRegions",
        "parameters": [
          {
            "name": "marketingRegionsCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Marketing Regions.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/marketingRegionsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/marketingRegions/{marketingRegionCode}": {
      "put": {
        "summary": "Change Marketing Regions",
        "description": "Use this API to update Marketing Regions. <p><strong>OperationId:</strong>putMarketingRegions</p>",
        "operationId": "putMarketingRegions",
        "parameters": [
          {
            "name": "marketingRegionCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of Marketing Regions."
          },
          {
            "name": "marketingRegionsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Marketing Regions.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/marketingRegionsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete Marketing Regions",
        "description": "Use this API to delete Marketing Regions. <p><strong>OperationId:</strong>deleteMarketingRegions</p>",
        "operationId": "deleteMarketingRegions",
        "parameters": [
          {
            "name": "marketingRegionCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of Marketing Regions."
          },
          {
            "name": "marketingRegionsCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/noteTypes": {
      "get": {
        "summary": "Get Note Types",
        "description": "Use this API to get Note Types. <p><strong>OperationId:</strong>getNoteTypes</p>",
        "operationId": "getNoteTypes",
        "parameters": [
          {
            "name": "noteGroup",
            "in": "query",
            "required": false,
            "description": "Notes Group added to the search criteria.",
            "type": "string"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "If true this boolean will set the criteria to only return Inactive records.",
            "type": "boolean"
          },
          {
            "name": "includeDepartmentDetails",
            "in": "query",
            "required": false,
            "description": "Boolean flag to fetch note types with/without departments. 'True' indicates including departments information for corresponding note types.",
            "type": "boolean"
          },
          {
            "name": "noteCode",
            "in": "query",
            "required": false,
            "description": "Code of the Note Type.",
            "type": "string"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Note Types of specific Notes Group.",
            "schema": {
              "$ref": "#/definitions/noteTypesDetails"
            }
          },
          "204": {
            "description": "NoteTypes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create Note Types",
        "description": "Use this API to create Note Types. <p><strong>OperationId:</strong>postNoteTypes</p>",
        "operationId": "postNoteTypes",
        "parameters": [
          {
            "name": "noteTypesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating new Note Types.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/noteTypesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/noteTypes/{noteTypeCode}": {
      "put": {
        "summary": "Change Note Types",
        "description": "Use this API to update Note Types. <p><strong>OperationId:</strong>changeNoteTypes</p>",
        "operationId": "changeNoteTypes",
        "parameters": [
          {
            "name": "noteTypeCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of Note Types."
          },
          {
            "name": "noteTypesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing existing Note Types.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/noteTypesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete Note Types",
        "description": "Use this API to delete Note Types. <p><strong>OperationId:</strong>removeNoteTypes</p>",
        "operationId": "removeNoteTypes",
        "parameters": [
          {
            "name": "noteTypeCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of Note Types."
          },
          {
            "name": "noteGroup",
            "in": "query",
            "required": false,
            "description": "Notes Group of the Note Types code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/notes/{noteCode}": {
      "delete": {
        "summary": "Delete Note information",
        "description": "Use this API to delete Note information. <p><strong>OperationId:</strong>removeHotelNotes</p>",
        "operationId": "removeHotelNotes",
        "parameters": [
          {
            "name": "noteCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of note."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/operation": {
      "get": {
        "summary": "Fetch all operations",
        "description": "This API will fetch all the operations wrt a code. <p><strong>OperationId:</strong>getOperation</p>",
        "operationId": "getOperation",
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "required": false,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique code for a configuration."
          },
          {
            "name": "operation",
            "in": "query",
            "required": false,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Describing the type of operation a particular configuration supports"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "List of configurations added from central.",
            "schema": {
              "$ref": "#/definitions/operationResponse"
            }
          },
          "204": {
            "description": "Central Configs not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/parameters": {
      "get": {
        "summary": "Get OPERA Parameters",
        "description": "Use this API to get OPERA Parameters. <p><strong>OperationId:</strong>getOperaParameters</p>",
        "operationId": "getOperaParameters",
        "parameters": [
          {
            "name": "parameterName",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used for Character Strings, length 0 to 80.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "The result element containing a collection of the requested application parameters.",
            "schema": {
              "$ref": "#/definitions/operaParametersDetails"
            }
          },
          "204": {
            "description": "OperaParameters not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/propertyDetailsCategories": {
      "get": {
        "summary": "Get Property Detail Categories",
        "description": "Use this API to get Property Detail Categories. <p><strong>OperationId:</strong>getPropertyDetailCategories</p>",
        "operationId": "getPropertyDetailCategories",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Property Detail Categories.",
            "schema": {
              "$ref": "#/definitions/propertyDetailCategoriesDetails"
            }
          },
          "204": {
            "description": "PropertyDetailCategories not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create Property Detail Categories",
        "description": "Use this API to create Property Detail Categories. <p><strong>OperationId:</strong>postPropertyDetailCategories</p>",
        "operationId": "postPropertyDetailCategories",
        "parameters": [
          {
            "name": "propertyDetailCategoriesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Property Detail Categories.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/propertyDetailCategoriesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/propertyDetailsCategories/{categoryCode}": {
      "put": {
        "summary": "Change Property Detail Categories",
        "description": "Use this API to update Property Detail Categories. <p><strong>OperationId:</strong>changePropertyDetailCategories</p>",
        "operationId": "changePropertyDetailCategories",
        "parameters": [
          {
            "name": "categoryCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of Categories."
          },
          {
            "name": "propertyDetailCategoriesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Property Detail Categories.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/propertyDetailCategoriesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete Property Detail Categories",
        "description": "Use this API to delete Property Detail Categories. <p><strong>OperationId:</strong>removePropertyDetailCategories</p>",
        "operationId": "removePropertyDetailCategories",
        "parameters": [
          {
            "name": "categoryCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of Categories."
          },
          {
            "name": "propertyDetailCategoriesCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/propertyTypes": {
      "get": {
        "summary": "Get property types",
        "description": "Use this API to get Property Types based on search criteria such as codes, wildCard, description.  Property types are used for different hotel types i.e. Resort, Business, CityCenter, Motel, BedAndBreakfast.<p><strong>OperationId:</strong>getPropertyTypes</p>",
        "operationId": "getPropertyTypes",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Property Types.",
            "schema": {
              "$ref": "#/definitions/propertyTypesDetails"
            }
          },
          "204": {
            "description": "PropertyTypes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create Property Types",
        "description": "Use this API to create Property Types. <p><strong>OperationId:</strong>postPropertyTypes</p>",
        "operationId": "postPropertyTypes",
        "parameters": [
          {
            "name": "propertyTypesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Property Types.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/propertyTypesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/propertyTypes/{propertyTypeCode}": {
      "put": {
        "summary": "Change Property Types",
        "description": "Use this API to update Property Types. <p><strong>OperationId:</strong>putPropertyTypes</p>",
        "operationId": "putPropertyTypes",
        "parameters": [
          {
            "name": "propertyTypeCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of Property Types."
          },
          {
            "name": "propertyTypesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Property Types.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/propertyTypesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete Property Types",
        "description": "Use this API to delete Property Types. <p><strong>OperationId:</strong>deletePropertyTypes</p>",
        "operationId": "deletePropertyTypes",
        "parameters": [
          {
            "name": "propertyTypeCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of Property Types."
          },
          {
            "name": "propertyTypesCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/regionCode": {
      "get": {
        "summary": "Get Regions Code",
        "description": "Use this API to get Regions Code. <p><strong>OperationId:</strong>getRegionsCode</p>",
        "operationId": "getRegionsCode",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Regions Code.",
            "schema": {
              "$ref": "#/definitions/regionsCodeDetails"
            }
          },
          "204": {
            "description": "RegionsCode not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create Regions Code",
        "description": "Use this API to create Regions Code. <p><strong>OperationId:</strong>postRegionsCode</p>",
        "operationId": "postRegionsCode",
        "parameters": [
          {
            "name": "regionsCodeCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Regions Code.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/regionsCodeCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/regionCode/{regionCode}": {
      "put": {
        "summary": "Change Regions Code",
        "description": "Use this API to update Regions Code. <p><strong>OperationId:</strong>changeRegionsCode</p>",
        "operationId": "changeRegionsCode",
        "parameters": [
          {
            "name": "regionCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of Regions."
          },
          {
            "name": "regionsCodeToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Regions Code.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/regionsCodeToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete Regions Code",
        "description": "Use this API to delete Regions Code. <p><strong>OperationId:</strong>removeRegionsCode</p>",
        "operationId": "removeRegionsCode",
        "parameters": [
          {
            "name": "regionCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of Regions."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/roomAmenities": {
      "get": {
        "summary": "Get Room Amenities",
        "description": "Use this API to get Room Amenities. <p><strong>OperationId:</strong>getRoomAmenities</p>",
        "operationId": "getRoomAmenities",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Room Amenities.",
            "schema": {
              "$ref": "#/definitions/roomAmenitiesDetails"
            }
          },
          "204": {
            "description": "RoomAmenities not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create Room Amenities",
        "description": "Use this API to create Room Amenities. <p><strong>OperationId:</strong>postRoomAmenities</p>",
        "operationId": "postRoomAmenities",
        "parameters": [
          {
            "name": "roomAmenitiesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Room Amenities.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomAmenitiesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/roomAmenities/{roomAmenitiesId}": {
      "put": {
        "summary": "Change Room Amenities",
        "description": "Use this API to update Room Amenities. <p><strong>OperationId:</strong>putRoomAmenities</p>",
        "operationId": "putRoomAmenities",
        "parameters": [
          {
            "name": "roomAmenitiesId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of Room Amenities."
          },
          {
            "name": "roomAmenitiesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Room Amenities.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomAmenitiesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete Room Amenities",
        "description": "Use this API to delete Room Amenities. <p><strong>OperationId:</strong>deleteRoomAmenities</p>",
        "operationId": "deleteRoomAmenities",
        "parameters": [
          {
            "name": "roomAmenitiesId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of Room Amenities."
          },
          {
            "name": "roomAmenitiesCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/settings": {
      "get": {
        "summary": "Get OPERA controls",
        "description": "Use this API to return OPERA controls based on search criteria such as hotelId, cROCode, parameterNameWildCard.<p><strong>OperationId:</strong>getOperaSettings</p>",
        "operationId": "getOperaSettings",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Unique ID of hotel.",
            "maxLength": 2000,
            "type": "string"
          },
          {
            "name": "cROCode",
            "in": "query",
            "required": false,
            "description": "This is the Central Reservation office code.",
            "maxLength": 200,
            "type": "string"
          },
          {
            "name": "parameterNameWildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search parameter.",
            "maxLength": 4000,
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "The result element containing the requested application settings.",
            "schema": {
              "$ref": "#/definitions/operaSettingsDetails"
            }
          },
          "204": {
            "description": "OperaSettings not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/telephoneBookEntries/{entryId}": {
      "delete": {
        "summary": "Delete Telephone Book Entries",
        "description": "Use this API to delete Telephone Book Entries. <p><strong>OperationId:</strong>removeTelephoneBookEntriesWithoutHotelId</p>",
        "operationId": "removeTelephoneBookEntriesWithoutHotelId",
        "parameters": [
          {
            "name": "entryId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of entry."
          },
          {
            "name": "idContext",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/templateCodes": {
      "get": {
        "summary": " Get Template Codes",
        "description": " Use this API to get Template Codes. <p><strong>OperationId:</strong>getTemplateCodes</p>",
        "operationId": "getTemplateCodes",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Template Codes.",
            "schema": {
              "$ref": "#/definitions/templateCodesDetails"
            }
          },
          "204": {
            "description": "TemplateCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create Template Codes",
        "description": "Use this API to create Template Codes. <p><strong>OperationId:</strong>postTemplateCodes</p>",
        "operationId": "postTemplateCodes",
        "parameters": [
          {
            "name": "templateCodesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Template Codes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateCodesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/templateCodes/copy": {
      "put": {
        "summary": "Copy Template Codes",
        "description": "This API is used to Copy a Template Rate Category in order to create a new Template Rate Category. <p><strong>OperationId:</strong>copyTemplateCodes</p>",
        "operationId": "copyTemplateCodes",
        "parameters": [
          {
            "name": "copyTemplateCodes",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/copyTemplateCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/templateCodes/{code}": {
      "put": {
        "summary": "Change Template Codes",
        "description": "Use this API to update Template Codes. <p><strong>OperationId:</strong>changeTemplateCodes</p>",
        "operationId": "changeTemplateCodes",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of Template."
          },
          {
            "name": "templateCodesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Template Codes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateCodesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete Template Codes",
        "description": "Use this API to delete Template Codes. <p><strong>OperationId:</strong>removeTemplateCodes</p>",
        "operationId": "removeTemplateCodes",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of Template."
          },
          {
            "name": "templateCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/transportations": {
      "get": {
        "summary": "Get transportation templates",
        "description": "Use this API to get transportation templates. <p><strong>OperationId:</strong>getTransportationTemplates</p>",
        "operationId": "getTransportationTemplates",
        "parameters": [
          {
            "name": "transportationCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching transportation templates.",
            "schema": {
              "$ref": "#/definitions/transportationTemplatesDetails"
            }
          },
          "204": {
            "description": "TransportationTemplates not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create transportation templates",
        "description": "Use this API to create transportation templates. <p><strong>OperationId:</strong>postTransportationTemplates</p>",
        "operationId": "postTransportationTemplates",
        "parameters": [
          {
            "name": "transportationTemplatesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating transportation templates.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transportationTemplatesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/transportations/{transportationCode}": {
      "put": {
        "summary": "Change transportation templates",
        "description": "Use this API to update transportation templates. <p><strong>OperationId:</strong>changeTransportationTemplates</p>",
        "operationId": "changeTransportationTemplates",
        "parameters": [
          {
            "name": "transportationCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of transportation."
          },
          {
            "name": "transportationTemplatesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for modifying transportation templates.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transportationTemplatesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete transportation templates",
        "description": "Use this API to delete transportation templates. <p><strong>OperationId:</strong>removeTransportationTemplates</p>",
        "operationId": "removeTransportationTemplates",
        "parameters": [
          {
            "name": "transportationCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of transportation."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/userDefinedFieldGroups": {
      "get": {
        "summary": "Get User Defined Field Groups",
        "description": "Use this API to get User Defined Field Groups. <p><strong>OperationId:</strong>getUserDefinedFieldGroups</p>",
        "operationId": "getUserDefinedFieldGroups",
        "parameters": [
          {
            "name": "groupCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Identifier for the User Defined Field Group",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "descriptionWildCard",
            "in": "query",
            "required": false,
            "description": "Specifies the user defined field description to search.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching User Defined Field Groups.",
            "schema": {
              "$ref": "#/definitions/userDefinedFieldGroupsDetails"
            }
          },
          "204": {
            "description": "UserDefinedFieldGroups not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create User Defined Field Groups",
        "description": "Use this API to create User Defined Field Groups. <p><strong>OperationId:</strong>postUserDefinedFieldGroups</p>",
        "operationId": "postUserDefinedFieldGroups",
        "parameters": [
          {
            "name": "userDefinedFieldGroupsCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating User Defined Field Groups.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/userDefinedFieldGroupsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/userDefinedFieldGroups/{udfGroupCode}": {
      "put": {
        "summary": "Change User Defined Field Groups",
        "description": "Use this API to update User Defined Field Groups. <p><strong>OperationId:</strong>changeUserDefinedFieldGroups</p>",
        "operationId": "changeUserDefinedFieldGroups",
        "parameters": [
          {
            "name": "udfGroupCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of User Defined Field Groups."
          },
          {
            "name": "userDefinedFieldGroupsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing User Defined Field Groups.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/userDefinedFieldGroupsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete User Defined Field Groups",
        "description": "Use this API to delete User Defined Field Groups. <p><strong>OperationId:</strong>removeUserDefinedFieldGroups</p>",
        "operationId": "removeUserDefinedFieldGroups",
        "parameters": [
          {
            "name": "udfGroupCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of User Defined Field Groups."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/userDefinedFieldValues": {
      "get": {
        "summary": "Get user defined field (UDF) values",
        "description": "Use this API to return User Defined Field (UDF) Values based on search criteria such as groupCode, valueCode, descriptionWildCard.  The LOV Group and LOV Values functionality allows a property to create a custom group of values to be used in a specified user defined field (UDF). This functionality provides added flexibility in allowing a site to track information or details that are specific to their business and outside of the standard fields offered in OPERA Cloud.<p><strong>OperationId:</strong>getUserDefinedFieldValues</p>",
        "operationId": "getUserDefinedFieldValues",
        "parameters": [
          {
            "name": "groupCode",
            "in": "query",
            "required": false,
            "description": "The Group Code which the User Defined Field Value belongs to.",
            "type": "string"
          },
          {
            "name": "valueCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "descriptionWildCard",
            "in": "query",
            "required": false,
            "description": "Specifies the User Defined Field Value description to search.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching User Defined Field Values.",
            "schema": {
              "$ref": "#/definitions/userDefinedFieldValuesDetails"
            }
          },
          "204": {
            "description": "UserDefinedFieldValues not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create User Defined Field (UDF) Values",
        "description": "Use this API to create a new User Defined Field (UDF) Value. The LOV Group and LOV Values functionality allows a property create a custom group of values to be used in a specified user defined field (UDF).  This functionality provides added flexibility in allowing a site to track information or details that are specific to their business and outside of the standard fields offered in the OPERA Cloud. <p><strong>OperationId:</strong>postUserDefinedFieldValues</p>",
        "operationId": "postUserDefinedFieldValues",
        "parameters": [
          {
            "name": "userDefinedFieldValuesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating User Defined Field Values.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/userDefinedFieldValuesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/userDefinedFieldValues/{udfValue}": {
      "put": {
        "summary": "Change a User Defined Field Value ",
        "description": "Use this API to modify a User Defined Field Value. <p><strong>OperationId:</strong>changeUserDefinedFieldValues</p>",
        "operationId": "changeUserDefinedFieldValues",
        "parameters": [
          {
            "name": "udfValue",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Value of User Defined Field."
          },
          {
            "name": "userDefinedFieldValuesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing User Defined Field Values.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/userDefinedFieldValuesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete a User Defined Field Value ",
        "description": "Use this API to delete a User Defined Field Value. <p><strong>OperationId:</strong>removeUserDefinedFieldValues</p>",
        "operationId": "removeUserDefinedFieldValues",
        "parameters": [
          {
            "name": "udfValue",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Value of User Defined Field."
          },
          {
            "name": "groupCode",
            "in": "query",
            "required": false,
            "description": "The Group Code which the User Defined Field Value belongs to.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/yieldMarketTypes": {
      "get": {
        "summary": "Get Yield Market Types",
        "description": "Use this API to get Yield Market Types. <p><strong>OperationId:</strong>getYieldMarketTypes</p>",
        "operationId": "getYieldMarketTypes",
        "parameters": [
          {
            "name": "yieldMarketTypesCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Hotel Codes criteria for which the yield market type belong to.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Yield Market Types.",
            "schema": {
              "$ref": "#/definitions/yieldMarketTypesDetails"
            }
          },
          "204": {
            "description": "YieldMarketTypes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create Yield Market Types",
        "description": "Use this API to create Yield Market Types. <p><strong>OperationId:</strong>postYieldMarketTypes</p>",
        "operationId": "postYieldMarketTypes",
        "parameters": [
          {
            "name": "yieldMarketTypesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating new Yield Market Types.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/yieldMarketTypesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "put": {
        "summary": "Change Yield Market Types",
        "description": "Use this API to update Yield Market Types. <p><strong>OperationId:</strong>changeYieldMarketTypes</p>",
        "operationId": "changeYieldMarketTypes",
        "parameters": [
          {
            "name": "yieldMarketTypesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing existing Yield Market Types.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/yieldMarketTypesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    }
  },
  "parameters": {
    "authKey": {
      "name": "authorization",
      "description": "Bearer token that needs to be passed which is generated post user authentication",
      "type": "string",
      "in": "header",
      "required": true
    },
    "x-app-key": {
      "name": "x-app-key",
      "description": "Client or Partner's Application Key",
      "type": "string",
      "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
      "in": "header",
      "required": true
    },
    "x-hotelid": {
      "name": "x-hotelid",
      "type": "string",
      "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
      "in": "header",
      "required": true
    },
    "x-externalsystem": {
      "name": "x-externalsystem",
      "type": "string",
      "maxLength": 80,
      "description": "External system code.",
      "in": "header",
      "x-example": "EXTERNALSYSTEMCODE"
    },
    "Accept-Language": {
      "name": "Accept-Language",
      "type": "string",
      "description": "Language code",
      "in": "header"
    },
    "x-hubid": {
      "name": "x-hubid",
      "type": "string",
      "description": "x-hubid is a logical grouping of multiple properties that allows api consumers to manage data from a group of properties. This x-hubid is a valid list of hub codes configured in OPERA to which the user has access. Rest APIs without hotelId in the operation path can support hub level integration using x-hubid",
      "in": "header"
    }
  },
  "responses": {
    "400": {
      "description": "Bad Request",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "401": {
      "description": "Unauthorized"
    },
    "403": {
      "description": "Forbidden"
    },
    "404": {
      "description": "Resource not found",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "405": {
      "description": "Method not allowed"
    },
    "406": {
      "description": "Not acceptable."
    },
    "413": {
      "description": "Request Entity Too Large"
    },
    "414": {
      "description": "Request URI Too Large"
    },
    "415": {
      "description": "Unsupported Media Type"
    },
    "500": {
      "description": "System Error",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "502": {
      "description": "Bad Gateway"
    },
    "503": {
      "description": "Service Unavailable"
    }
  },
  "definitions": {
    "templateAirportsDetails": {
      "type": "object",
      "description": "Response object for fetching template airports.",
      "properties": {
        "templateAirports": {
          "description": "Collection of template airports.",
          "$ref": "#/definitions/templateAirportsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateAirportsType": {
      "type": "array",
      "description": "Template airport details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/templateAirportType"
      }
    },
    "templateAirportType": {
      "type": "object",
      "description": "Base details of the airport.",
      "properties": {
        "description": {
          "description": "Description of the airport.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "distance": {
          "description": "Distance from the hotel to the airport.",
          "type": "number"
        },
        "distanceType": {
          "description": "Unit of distance for the Distance measurement.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "drivingTime": {
          "description": "Driving time from the hotel to the airport.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "direction": {
          "description": "Direction of the airport in relation to the hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "website": {
          "description": "URL of the airport's website.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "transportationOptions": {
          "description": "Transportation option available for the airport.",
          "type": "array",
          "maxItems": 8,
          "items": {
            "$ref": "#/definitions/transportationInfoType"
          }
        },
        "sequence": {
          "description": "Sequence number for displaying the airport.",
          "type": "integer"
        },
        "code": {
          "description": "Airport code identifying the airport.",
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        }
      }
    },
    "transportationInfoType": {
      "type": "object",
      "description": "Information about the transportation type.",
      "properties": {
        "label": {
          "description": "Single character label for the transportation type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "description": {
          "description": "Description of the transportation type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1000
        },
        "code": {
          "description": "Code for the transportation type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "instanceLink": {
      "type": "object",
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      }
    },
    "warningsType": {
      "type": "array",
      "description": "Used in conjunction with the Success element to define a business error.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    },
    "warningType": {
      "type": "object",
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "minLength": 1,
          "maxLength": 8
        }
      }
    },
    "exceptionDetailType": {
      "title": "Error Detail",
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "errorInstance": {
      "title": "Error Instance Details",
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "templateAirportsCriteria": {
      "type": "object",
      "description": "Request object for creating new template airports.",
      "properties": {
        "templateAirports": {
          "description": "Collection of template airports to be created.",
          "$ref": "#/definitions/templateAirportsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "status": {
      "type": "object",
      "description": "Response Body.",
      "properties": {
        "warnings": {
          "$ref": "#/definitions/warningsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      }
    },
    "templateAirportsToBeChanged": {
      "type": "object",
      "description": "Request object for modifying template airports.",
      "properties": {
        "templateAirports": {
          "description": "Collection of template airports to be modified.",
          "$ref": "#/definitions/templateAirportsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateAmenitiesDetails": {
      "type": "object",
      "description": "Response object for fetching amenities at the template level.",
      "properties": {
        "templateAmenities": {
          "description": "Collection of amenities specified at the template level.",
          "$ref": "#/definitions/configTemplateAmenitiesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "configTemplateAmenitiesType": {
      "type": "array",
      "description": "This type holds a collection of amenities at the template level.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/configTemplateAmenityType"
      }
    },
    "configTemplateAmenityType": {
      "type": "object",
      "description": "Base details used for amenities.",
      "properties": {
        "description": {
          "description": "The description about amenity of the hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "comments": {
          "description": "The comments about amenity of the hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "featureCode": {
          "description": "Specifies the feature code (aka amenity code).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "amenityType": {
          "description": "The type of amenity (general or meeting) selected from the list of values.",
          "$ref": "#/definitions/amenityTypeType"
        },
        "beginDate": {
          "description": "The date the amenity is scheduled to become active.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "description": "The date the amenity is scheduled to become inactive.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "newChainCode": {
          "description": "The new chain code which is used in the change method.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "amenityTypeType": {
      "type": "string",
      "description": "Simple type for storing amenity type.",
      "enum": [
        "General",
        "Meeting"
      ]
    },
    "templateAmenitiesCriteria": {
      "type": "object",
      "description": "Request object for creating amenities at the template level.",
      "properties": {
        "templateAmenities": {
          "description": "Collection containing details of amenities specified at the template level.",
          "$ref": "#/definitions/configTemplateAmenitiesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateAmenitiesToBeChanged": {
      "type": "object",
      "description": "Request object for changing amenities at the template level.",
      "properties": {
        "templateAmenities": {
          "description": "Collection containing details of amenities specified at the template level.",
          "$ref": "#/definitions/configTemplateAmenitiesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "attractionClassesDetails": {
      "type": "object",
      "description": "Response object for fetching Attraction Classes.",
      "properties": {
        "attractionClasses": {
          "description": "Collection of Attraction Classes.",
          "$ref": "#/definitions/attractionClassesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "attractionClassesType": {
      "type": "array",
      "description": "List of Attraction Classes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/attractionClassType"
      }
    },
    "attractionClassType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "translationTextType2000": {
      "type": "object",
      "description": "Contains Multiple translated texts and language codes.",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 2000.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "translationsTextType": {
      "type": "array",
      "description": "Language code for the translation.",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Used for Character Strings, length 0 to 2000.",
            "minLength": 0,
            "maxLength": 2000
          },
          "language": {
            "description": "Language identification.",
            "type": "string",
            "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          }
        },
        "description": "Language code for the translation."
      }
    },
    "attractionClassesCriteria": {
      "type": "object",
      "description": "Request object for creating Attraction Classes.",
      "properties": {
        "attractionClasses": {
          "description": "Attraction Classesto be created.",
          "$ref": "#/definitions/attractionClassesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "attractionClassesToBeChanged": {
      "type": "object",
      "description": "Request object for changing Attraction Classes.",
      "properties": {
        "attractionClasses": {
          "description": "Attraction Classesto be changed.",
          "$ref": "#/definitions/attractionClassesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "attractionTemplatesDetails": {
      "type": "object",
      "description": "Response object for information regarding attraction templates.",
      "properties": {
        "attractionTemplates": {
          "description": "Collection of attraction templates and their information.",
          "$ref": "#/definitions/attractionTemplatesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "attractionTemplatesType": {
      "type": "array",
      "description": "Collection of attraction templates.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/attractionTemplateType"
      }
    },
    "attractionTemplateType": {
      "type": "object",
      "description": "Information about the attractions near the hotel.",
      "properties": {
        "name": {
          "description": "Attraction name for the hotel.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "type": {
          "description": "The type of the attraction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        },
        "class": {
          "description": "The class of the attraction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        },
        "generalDirections": {
          "description": "Directions to the attraction from the hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "relativePosition": {
          "$ref": "#/definitions/relativePositionType"
        },
        "address": {
          "description": "Address of the attraction.",
          "$ref": "#/definitions/addressType"
        },
        "website": {
          "description": "Website for the attraction.",
          "$ref": "#/definitions/uRLType"
        },
        "priceRange": {
          "description": "Price range for the attraction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "operationHours": {
          "description": "Price range for the attraction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "displaySeq": {
          "description": "Display sequence of the attraction.",
          "type": "integer"
        },
        "code": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "region": {
          "description": "The region in which this attraction is located.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "inactiveDate": {
          "description": "The date the record was marked as inactive.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "latitude": {
          "type": "number",
          "minimum": -90,
          "maximum": 90
        },
        "longitude": {
          "description": "The longitude of the location from which the organism or observation was collected, expressed in decimal degrees. Positive values are East of the Greenwich Meridian, negative values are West of the Greenwich Meridian.",
          "type": "number",
          "minimum": -180,
          "maximum": 180
        }
      }
    },
    "relativePositionType": {
      "type": "object",
      "description": "Defines the position of an entity in relation to another entity (e.g. from an airport to a hotel, the relationship is dependent on use).",
      "properties": {
        "distance": {
          "description": "Defines the distance between two points.",
          "type": "number"
        },
        "distanceType": {
          "description": "The unit of measure in a code format.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "drivingTime": {
          "description": "The driving time in a free text format.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "addressType": {
      "type": "object",
      "description": "Provides address information.",
      "properties": {
        "isValidated": {
          "description": "Indicator to define if the Address is validated by the Address Validation System.",
          "type": "boolean"
        },
        "addressLine": {
          "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "type": "array",
          "maxItems": 4,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 80
          }
        },
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "cityExtension": {
          "description": "Post Office City Extension Code number. City Extension mainly used for UK addresses.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "county": {
          "description": "County or District Name (e.g., Fairfax). This is read only.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "type": {
          "description": "Defines the type of address (e.g. home, business, other).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Describes the type code",
          "type": "string"
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "updateReservations": {
          "description": "Indicates whether to update the reservations or not. If true and the address is primary, then all associated active reservations will be updated with the new primary address.",
          "type": "boolean"
        },
        "barCode": {
          "description": "The postal barcode for the address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "countryNameType": {
      "type": "object",
      "description": "Code for a country or a nationality.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Used for Character Strings, length 0 to 200.",
          "minLength": 0,
          "maxLength": 200
        },
        "code": {
          "description": "Code for a country or a nationality.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "uRLType": {
      "type": "object",
      "description": "Web site address, in IETF(The Internet Engineering Task Force) specified format.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "type": {
          "description": "Defines the purpose of the URL address, such as personal, business, public, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Describes the Type code",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        }
      }
    },
    "attractionTemplatesCriteria": {
      "type": "object",
      "description": "Request object for creating a new attraction code template.",
      "properties": {
        "attractionTemplates": {
          "description": "Attraction template details to be created.",
          "$ref": "#/definitions/attractionTemplatesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "attractionTemplatesToBeChanged": {
      "type": "object",
      "description": "Request object for modifying the existing attraction attraction templates.",
      "properties": {
        "attractionTemplates": {
          "description": "Attraction template group details to be changed.",
          "$ref": "#/definitions/attractionTemplatesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "brandCodesDetails": {
      "type": "object",
      "description": "Response object for fetching Brand Codes.",
      "properties": {
        "brandCodes": {
          "description": "Collection of Brand Codes.",
          "$ref": "#/definitions/brandCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "brandCodesType": {
      "type": "array",
      "description": "List of Brand Codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/brandCodeType"
      }
    },
    "brandCodeType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "brandCodesCriteria": {
      "type": "object",
      "description": "Request object for creating Brand Codes.",
      "properties": {
        "brandCodes": {
          "description": "Brand Codes to be created.",
          "$ref": "#/definitions/brandCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "brandCodesToBeChanged": {
      "type": "object",
      "description": "Request object for changing Brand Codes.",
      "properties": {
        "brandCodes": {
          "description": "Brand Codes to be changed.",
          "$ref": "#/definitions/brandCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelCalendarDetails": {
      "type": "object",
      "description": "Response object for fetching calendar entries for a hotel.",
      "properties": {
        "hotelCalendar": {
          "description": "Collection of hotel level calendar entries.",
          "$ref": "#/definitions/hotelCalendarType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelCalendarType": {
      "type": "object",
      "description": "Represents the calendar with individual days having corresponding entries (day type, event, etc.) for a hotel.",
      "properties": {
        "calendarDay": {
          "description": "Entries for a specific calendar day.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/hotelCalendarDayType"
          }
        },
        "hotelId": {
          "description": "Indicates a specific hotel for which the calendar is being represented.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "hotelCalendarDayType": {
      "type": "object",
      "description": "Details of calendar entries for a specific day for a specific hotel.",
      "properties": {
        "dayType": {
          "description": "Details of Day Type of that calendar day.",
          "$ref": "#/definitions/hotelCalendarDayTypeType"
        },
        "events": {
          "description": "Details of an event on that calendar day.",
          "$ref": "#/definitions/hotelCalendarEventsType"
        },
        "date": {
          "description": "Indicates a specific hotel for which the calendar is being represented.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "hotelCalendarDayTypeType": {
      "type": "object",
      "description": "Details of Day Type.",
      "properties": {
        "code": {
          "description": "Code of the Day Type",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Day Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "color": {
          "description": "Associated color for the selected Day Type.",
          "$ref": "#/definitions/colorType"
        }
      }
    },
    "colorType": {
      "type": "string",
      "description": "Color configuration type. This color configuration provides a visual category of entities.",
      "enum": [
        "Red",
        "DarkRed",
        "Green",
        "DarkGreen",
        "LightGreen",
        "Orange",
        "White",
        "Yellow",
        "DarkYellow",
        "Purple",
        "Brown",
        "Gray",
        "Aqua",
        "Chocolate",
        "Blue",
        "LightBlue",
        "DarkBlue",
        "Cyan",
        "DarkCyan",
        "Magenta",
        "DarkMagenta",
        "Black"
      ]
    },
    "hotelCalendarEventsType": {
      "type": "array",
      "description": "Details of hotel events",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelCalendarEventType"
      }
    },
    "hotelCalendarEventType": {
      "type": "object",
      "description": "Details of event.",
      "properties": {
        "code": {
          "description": "Code for a specific event.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description for a specific event.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "chainDetails": {
      "type": "object",
      "description": "Response object for fetching Chain.",
      "properties": {
        "chains": {
          "description": "A collection of chain records including address of the chain.",
          "$ref": "#/definitions/chainConfigInfoType"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "chainConfigInfoType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/chainDetailInfoType"
      }
    },
    "chainDetailInfoType": {
      "type": "object",
      "properties": {
        "chainCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "chainName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "chainDesc": {
          "type": "string"
        },
        "shareProfilesYn": {
          "description": "Flag to check if chain allows share Profiles.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "aspYn": {
          "description": "Flag to check if chain has ASP.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "chainAddress": {
          "$ref": "#/definitions/addressType"
        },
        "phone": {
          "description": "The phone number of the chain.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "fax": {
          "description": "The fax number of the chain.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "email": {
          "description": "The email address of the chain.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "startDate": {
          "description": "This represents the begin date of Chain.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "description": "This represents the end date of chain.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "frequentFlierCardsAcceptYn": {
          "description": "Flag to check if chain accepts Frequent Flier Cards.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "bookingConditions": {
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "loyaltyProgram": {
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "marketingText": {
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        }
      }
    },
    "chainToBeChanged": {
      "type": "object",
      "description": "Request object for changing Chain.",
      "properties": {
        "chains": {
          "description": "A collection of chain records including address of the chain.",
          "$ref": "#/definitions/chainConfigInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "communicationMethodsEntDetailsDetails": {
      "type": "object",
      "description": "Response object for fetching Communication Methods Ent Details.",
      "properties": {
        "communicationMethodsEntDetails": {
          "description": "Collection of Communication Methods Ent Details.",
          "$ref": "#/definitions/communicationMethodsEntDetailsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "communicationMethodsEntDetailsType": {
      "type": "array",
      "description": "List of Communication Methods Ent Details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/communicationMethodsEntDetailType"
      }
    },
    "communicationMethodsEntDetailType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "communicationMethodsEntDetailsCriteria": {
      "type": "object",
      "description": "Request object for creating Communication Methods Ent Details.",
      "properties": {
        "communicationMethodsEntDetails": {
          "description": "Communication Methods Ent Detailsto be created.",
          "$ref": "#/definitions/communicationMethodsEntDetailsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "communicationMethodsEntDetailsToBeChanged": {
      "type": "object",
      "description": "Request object for changing Communication Methods Ent Details.",
      "properties": {
        "communicationMethodsEntDetails": {
          "description": "Communication Methods Ent Detailsto be changed.",
          "$ref": "#/definitions/communicationMethodsEntDetailsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "configActivityLogDetails": {
      "type": "object",
      "description": "Response object for fetching configuration activity log.",
      "properties": {
        "activityLog": {
          "description": "Contains list of the activity logs.",
          "$ref": "#/definitions/activityLogListType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "activityLogListType": {
      "type": "object",
      "properties": {
        "activityLog": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/activityLogType"
          }
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "activityLogType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "module": {
          "type": "string"
        },
        "logDate": {
          "type": "string",
          "format": "date-time"
        },
        "refActionId": {
          "type": "number"
        },
        "logUserId": {
          "type": "integer"
        },
        "logUserName": {
          "type": "string"
        },
        "machineStation": {
          "type": "string"
        },
        "croCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "actionType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "actionDescription": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "iPAddress": {
          "description": "The IP Address of the machine that performed the activity",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "deviceCode": {
          "description": "The selected device code",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "createConfigActivityLogCriteria": {
      "type": "object",
      "description": "Request object for creating Config Activity Logs.",
      "properties": {
        "configActivities": {
          "description": "Confic Activity Logs to be created.",
          "$ref": "#/definitions/configActivitiesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "configActivitiesType": {
      "type": "array",
      "description": "Changes log record to import/Export/Delete customization operations.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/configActivityType"
      }
    },
    "configActivityType": {
      "type": "object",
      "description": "Changes log record to import/Export/Delete customization operations.",
      "properties": {
        "actionType": {
          "description": "Action Type: MDS_IMP, MDS_EXP, MDS_DEL, MDS_EXP_UNENC, MDS_IMP_UNENC.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "actionDescription": {
          "description": "action, layer, org name, user name and screen name or file name or path.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "hotelId": {
          "description": "Code that uniquely identifies the hotel belonging to the organization.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "corporateBusinessUnitsDetails": {
      "type": "object",
      "description": "Response object for fetching Corporate Business Units.",
      "properties": {
        "corporateBusinessUnits": {
          "description": "Collection of Corporate Business Units.",
          "$ref": "#/definitions/corporateBusinessUnitsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "corporateBusinessUnitsType": {
      "type": "array",
      "description": "List of Corporate Business Units.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/corporateBusinessUnitType"
      }
    },
    "corporateBusinessUnitType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "corporateBusinessUnitsCriteria": {
      "type": "object",
      "description": "Request object for creating Corporate Business Units.",
      "properties": {
        "corporateBusinessUnits": {
          "description": "Corporate Business Units to be created.",
          "$ref": "#/definitions/corporateBusinessUnitsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "corporateBusinessUnitsToBeChanged": {
      "type": "object",
      "description": "Request object for changing Corporate Business Units.",
      "properties": {
        "corporateBusinessUnits": {
          "description": "Corporate Business Units to be changed.",
          "$ref": "#/definitions/corporateBusinessUnitsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "corporateDepartmentCodesDetails": {
      "type": "object",
      "description": "Response object for fetching Corporate Department Codes.",
      "properties": {
        "corporateDepartmentCodes": {
          "description": "Collection of Corporate Department Codes.",
          "$ref": "#/definitions/corporateDepartmentCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "corporateDepartmentCodesType": {
      "type": "array",
      "description": "List of Corporate Department Codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/corporateDepartmentCodeType"
      }
    },
    "corporateDepartmentCodeType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "corporateDepartmentCodesCriteria": {
      "type": "object",
      "description": "Request object for creating Corporate Department Codes.",
      "properties": {
        "corporateDepartmentCodes": {
          "description": "Corporate Department Codes to be created.",
          "$ref": "#/definitions/corporateDepartmentCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "corporateDepartmentCodesToBeChanged": {
      "type": "object",
      "description": "Request object for changing Corporate Department Codes.",
      "properties": {
        "corporateDepartmentCodes": {
          "description": "Corporate Department Codes to be changed.",
          "$ref": "#/definitions/corporateDepartmentCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "corporateDivisionsDetails": {
      "type": "object",
      "description": "Response object for fetching Corporate Divisions.",
      "properties": {
        "corporateDivisions": {
          "description": "Collection of Corporate Divisions.",
          "$ref": "#/definitions/corporateDivisionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "corporateDivisionsType": {
      "type": "array",
      "description": "List of Corporate Divisions.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/corporateDivisionType"
      }
    },
    "corporateDivisionType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "corporateDivisionsCriteria": {
      "type": "object",
      "description": "Request object for creating Corporate Divisions.",
      "properties": {
        "corporateDivisions": {
          "description": "Corporate Divisions to be created.",
          "$ref": "#/definitions/corporateDivisionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "corporateDivisionsToBeChanged": {
      "type": "object",
      "description": "Request object for changing Corporate Divisions.",
      "properties": {
        "corporateDivisions": {
          "description": "Corporate Divisions to be changed.",
          "$ref": "#/definitions/corporateDivisionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "corporateOperatingUnitsDetails": {
      "type": "object",
      "description": "Response object for fetching Corporate Operating Units.",
      "properties": {
        "corporateOperatingUnits": {
          "description": "Collection of Corporate Operating Units.",
          "$ref": "#/definitions/corporateOperatingUnitsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "corporateOperatingUnitsType": {
      "type": "array",
      "description": "List of Corporate Operating Units.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/corporateOperatingUnitType"
      }
    },
    "corporateOperatingUnitType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "corporateOperatingUnitsCriteria": {
      "type": "object",
      "description": "Request object for creating Corporate Operating Units.",
      "properties": {
        "corporateOperatingUnits": {
          "description": "Corporate Operating Units to be created.",
          "$ref": "#/definitions/corporateOperatingUnitsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "corporateOperatingUnitsToBeChanged": {
      "type": "object",
      "description": "Request object for changing Corporate Operating Units.",
      "properties": {
        "corporateOperatingUnits": {
          "description": "Corporate Operating Units to be changed.",
          "$ref": "#/definitions/corporateOperatingUnitsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateCountriesDetails": {
      "type": "object",
      "description": "Response object for fetching template Countries.",
      "properties": {
        "templateCountries": {
          "description": "Collection of template Countries.",
          "$ref": "#/definitions/templateCountriesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateCountriesType": {
      "type": "array",
      "description": "Template of country details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/templateCountryType"
      }
    },
    "templateCountryType": {
      "type": "object",
      "description": "Base details of the country",
      "properties": {
        "name": {
          "description": "Name for the country.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "statisticCode": {
          "description": "Statistic code for the country.",
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "guestAddressFormat": {
          "description": "Guest Address format Codes for confirmation letter.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "addressDoctorMode": {
          "description": "Defines the mode used to invoke address doctor service.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "mainGroup": {
          "description": "Main Group of Country. Used in statistic reports.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "regionCode": {
          "description": "Regin to which the Country belongs.",
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "isoCode": {
          "description": "ISO standard code for country.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "isoName": {
          "description": "ISO standard name for country.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "displaySequence": {
          "description": "Sequence number for displaying the countries.",
          "type": "number"
        },
        "printSequence": {
          "description": "Print Sequence number for report.",
          "type": "number"
        },
        "displayFlag": {
          "description": "Indicates if the country flag should be displayed.",
          "type": "boolean"
        },
        "countryCode": {
          "description": "Country code identifying the country.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "templateCountriesCriteria": {
      "type": "object",
      "description": "Request object for creating new template Countries.",
      "properties": {
        "templateCountries": {
          "description": "Collection of template of Countries to be created.",
          "$ref": "#/definitions/templateCountriesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "countryGuestTypesDetails": {
      "type": "object",
      "description": "Response object for fetching Philippines Country Guest Types.",
      "properties": {
        "countryGuestTypes": {
          "description": "Collection of Philippines Country Guest Types.",
          "$ref": "#/definitions/countryGuestTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "countryGuestTypesType": {
      "type": "array",
      "description": "List of Philippines Country specific Guest Types.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/countryGuestTypeType"
      }
    },
    "countryGuestTypeType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "countryGuestTypesCriteria": {
      "type": "object",
      "description": "Request object for creating Country Guest Types.",
      "properties": {
        "countryGuestTypes": {
          "description": "Philippines Country Guest Types to be created.",
          "$ref": "#/definitions/countryGuestTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "countryGuestTypesToBeChanged": {
      "type": "object",
      "description": "Request object for changing Philippines Country Guest Types.",
      "properties": {
        "countryGuestTypes": {
          "description": "Philippines Country Guest Types to be changed.",
          "$ref": "#/definitions/countryGuestTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateCountriesToBeChanged": {
      "type": "object",
      "description": "Request object for modifying template Countries.",
      "properties": {
        "templateCountries": {
          "description": "Collection of template of Countries to be modified.",
          "$ref": "#/definitions/templateCountriesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "countryMainGroupsDetails": {
      "type": "object",
      "description": "Response object for fetching Country Main Groups.",
      "properties": {
        "countryMainGroups": {
          "description": "Collection of Country Main Groups.",
          "$ref": "#/definitions/countryMainGroupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "countryMainGroupsType": {
      "type": "array",
      "description": "List of Country Main Groups.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/countryMainGroupType"
      }
    },
    "countryMainGroupType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "countryMainGroupsCriteria": {
      "type": "object",
      "description": "Request object for creating Country Main Groups.",
      "properties": {
        "countryMainGroups": {
          "description": "Country Main Groups to be created.",
          "$ref": "#/definitions/countryMainGroupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "countryMainGroupsToBeChanged": {
      "type": "object",
      "description": "Request object for changing Country Main Groups.",
      "properties": {
        "countryMainGroups": {
          "description": "Country Main Groups to be changed.",
          "$ref": "#/definitions/countryMainGroupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "currencyExchangeRatesDetails": {
      "type": "object",
      "description": "Response with the list of currency codes and their exchange rates for each property requested.",
      "properties": {
        "exchangeRates": {
          "description": "List of currency codes with their exchange rates.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "exchangeInfo": {
                "description": "Exchange Rate information for a currency code.",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/currencyExchangeRateType"
                }
              },
              "hotelId": {
                "$ref": "#/definitions/codeType"
              }
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "currencyExchangeRateType": {
      "type": "object",
      "description": "Currency code configuration.",
      "properties": {
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "description": {
          "description": "Description of the currency code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "exchangeRate": {
          "description": "Exchange Rate for the currency code. Exchange rate is based on the current business date of the property.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "currencyAmountType": {
      "type": "object",
      "description": "A monetary value expressed with a currency code.",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "codeType": {
      "type": "string",
      "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
      "minLength": 0,
      "maxLength": 20
    },
    "templateDayTypeCodesDetails": {
      "type": "object",
      "description": "Response object for fetching template day type codes.",
      "properties": {
        "templateDayTypeCodes": {
          "description": "Collection of template level day type codes.",
          "$ref": "#/definitions/templateDayTypeCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateDayTypeCodesType": {
      "type": "array",
      "description": "Details for day type code at template level.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/templateDayTypeCodeType"
      }
    },
    "templateDayTypeCodeType": {
      "type": "object",
      "description": "Base structure for Day Type Code at both template and hotel levels.",
      "properties": {
        "code": {
          "description": "Code of a Day Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of a Day Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "multiplier": {
          "description": "Value by which the rates will be multiplied on a day.",
          "type": "number"
        },
        "adder": {
          "description": "Value that will be added to rate on a day.",
          "type": "number"
        },
        "color": {
          "description": "Color used to represent Day Type.",
          "$ref": "#/definitions/colorType"
        },
        "sellSequence": {
          "description": "Sell sequence for a Day Type.",
          "type": "number"
        }
      }
    },
    "templateDayTypeCodesToBeChanged": {
      "type": "object",
      "description": "Request object for modifying template day type codes.",
      "properties": {
        "templateDayTypeCodes": {
          "description": "Collection of template day type codes to be changed.",
          "$ref": "#/definitions/templateDayTypeCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateDayTypeCodesCriteria": {
      "type": "object",
      "description": "Request object for creating new template day type codes.",
      "properties": {
        "templateDayTypeCodes": {
          "description": "Collection of template day type codes to be created.",
          "$ref": "#/definitions/templateDayTypeCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "setDayTypes": {
      "type": "object",
      "description": "Request object for setting day type for specified date range.",
      "properties": {
        "hotelDayTypes": {
          "description": "Collection of day type entries to be created for specified date range.",
          "$ref": "#/definitions/hotelDayTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelDayTypesType": {
      "type": "array",
      "description": "Collection of type details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelDayTypeType"
      }
    },
    "hotelDayTypeType": {
      "type": "object",
      "description": "Details of Day Type to be used to set day types for a hotel.",
      "properties": {
        "hotelId": {
          "description": "Day type code selected.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "dayTypeCode": {
          "description": "Day type code selected.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "dateRange": {
          "description": "Date Range with days of week where the range update has to be applied.",
          "$ref": "#/definitions/timeSpanDaysOfWeekType"
        }
      }
    },
    "timeSpanDaysOfWeekType": {
      "type": "object",
      "description": "Container for Time span with days of week.",
      "properties": {
        "timeSpan": {
          "$ref": "#/definitions/timeSpanType"
        },
        "sunday": {
          "type": "boolean"
        },
        "monday": {
          "type": "boolean"
        },
        "tuesday": {
          "type": "boolean"
        },
        "wednesday": {
          "type": "boolean"
        },
        "thursday": {
          "type": "boolean"
        },
        "friday": {
          "type": "boolean"
        },
        "saturday": {
          "type": "boolean"
        }
      }
    },
    "timeSpanType": {
      "type": "object",
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "duration": {
          "type": "string"
        }
      }
    },
    "defaultNoteDetails": {
      "type": "object",
      "description": "Response object for fetching Default Application Note text.",
      "properties": {
        "defaultNote": {
          "description": "Default Application Note text details.",
          "$ref": "#/definitions/defaultNoteTextDetailType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "defaultNoteTextDetailType": {
      "type": "object",
      "description": "Default Note Text Information Type.",
      "properties": {
        "hotelId": {
          "description": "Indicates the Property for which the Default Note Text is specified.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "defaultNoteText": {
          "description": "Default Note Text if Note Type has default note.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "departmentsDetails": {
      "type": "object",
      "description": "Response object for fetching departments.",
      "properties": {
        "departments": {
          "description": "Type contains departments.",
          "$ref": "#/definitions/departmentsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "departmentsType": {
      "type": "array",
      "description": "Collection of departments.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/departmentType"
      }
    },
    "departmentType": {
      "type": "object",
      "description": "Type provides department information.",
      "properties": {
        "hotelId": {
          "description": "Property Code where the department belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "departmentCode": {
          "description": "Department Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "departmentName": {
          "description": "Description of the department.",
          "$ref": "#/definitions/translationTextType30"
        },
        "displaySequence": {
          "description": "Display Sequence for the department.",
          "type": "integer"
        },
        "email": {
          "description": "Department email address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "translationTextType30": {
      "type": "object",
      "description": "Contains Multiple translated texts and language codes.",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 30.",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "departmentsCriteria": {
      "type": "object",
      "description": "Request object for creating new departments.",
      "properties": {
        "departments": {
          "description": "Departments to be created.",
          "$ref": "#/definitions/departmentsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "departmentsToBeChanged": {
      "type": "object",
      "description": "Request object for updating departments.",
      "properties": {
        "departments": {
          "description": "Departments to be modified.",
          "$ref": "#/definitions/departmentsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelCategoriesDetails": {
      "type": "object",
      "description": "Response object for fetching Hotel Categories.",
      "properties": {
        "hotelCategories": {
          "description": "Collection of Hotel Categories.",
          "$ref": "#/definitions/hotelCategoriesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelCategoriesType": {
      "type": "array",
      "description": "List of Hotel Categories.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelCategoryType"
      }
    },
    "hotelCategoryType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "hotelCategoriesCriteria": {
      "type": "object",
      "description": "Request object for creating Hotel Categories.",
      "properties": {
        "hotelCategories": {
          "description": "Hotel Categories to be created.",
          "$ref": "#/definitions/hotelCategoriesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelCategoriesToBeChanged": {
      "type": "object",
      "description": "Request object for changing Hotel Categories.",
      "properties": {
        "hotelCategories": {
          "description": "Hotel Categories to be changed.",
          "$ref": "#/definitions/hotelCategoriesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateHotelDetailsDetails": {
      "type": "object",
      "description": "Response object for fetching hotel details at the template level.",
      "properties": {
        "templateHotelDetails": {
          "description": "Collection of hotel details specified at the template level.",
          "$ref": "#/definitions/templateHotelDetailsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateHotelDetailsType": {
      "type": "array",
      "description": "Collection of template level hotel details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/templateHotelDetailType"
      }
    },
    "templateHotelDetailType": {
      "type": "object",
      "description": "Base details used for storing information about a hotel detail.",
      "properties": {
        "code": {
          "description": "Specifies the hotel detail code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Specifies the hotel detail description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "category": {
          "description": "Specifies the hotel detail category.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sequence": {
          "description": "Specifies the sorting sequence number for the hotel detail.",
          "type": "integer"
        },
        "templateHotelDetailValues": {
          "description": "Collection of values which are associated with the hotel detail.",
          "$ref": "#/definitions/templateHotelDetailValuesType"
        }
      }
    },
    "templateHotelDetailValuesType": {
      "type": "array",
      "description": "Collection of template level hotel detail values.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/templateHotelDetailValueType"
      }
    },
    "templateHotelDetailValueType": {
      "type": "object",
      "description": "This type holds the base information of the hotel detail value which will be associated with a hotel detail.",
      "properties": {
        "code": {
          "description": "Specifies the hotel detail value code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Specifies the description of the hotel detail value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "sequence": {
          "description": "Specifies the sorting sequence number for the hotel detail value.",
          "type": "integer"
        }
      }
    },
    "templateHotelDetailsCriteria": {
      "type": "object",
      "description": "Request object for creating hotel details at the template level.",
      "properties": {
        "templateHotelDetails": {
          "description": "Collection containing information of hotel details to be created at the template level.",
          "$ref": "#/definitions/templateHotelDetailsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateHotelDetailsToBeChanged": {
      "type": "object",
      "description": "Request object for changing hotel details at the template level.",
      "properties": {
        "templateHotelDetails": {
          "description": "Collection containing information of hotel details to be changed at the template level.",
          "$ref": "#/definitions/templateHotelDetailsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyHotelDetails": {
      "type": "object",
      "description": "Request object for copying template hotel details to hotel(s).",
      "properties": {
        "copyInstructions": {
          "description": "List of the template hotel details to be copied to hotel(s).",
          "$ref": "#/definitions/copyHotelDetailsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyHotelDetailsType": {
      "type": "object",
      "description": "Instructions for copying template hotel details to hotel(s).",
      "properties": {
        "hotels": {
          "description": "Hotel codes to copy the template hotel details to.",
          "$ref": "#/definitions/codeListType"
        },
        "templateHotelDetails": {
          "description": "Template hotel details to be copied to the hotel(s).",
          "$ref": "#/definitions/templateHotelDetailsIDType"
        }
      }
    },
    "codeListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "minLength": 0,
        "maxLength": 20
      }
    },
    "templateHotelDetailsIDType": {
      "type": "array",
      "description": "Collection of template level hotel detail identifiers.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/templateHotelDetailIDType"
      }
    },
    "templateHotelDetailIDType": {
      "type": "object",
      "description": "Base details used for uniquely identifying a hotel detail.",
      "properties": {
        "code": {
          "description": "Specifies the hotel detail code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "category": {
          "description": "Specifies the hotel detail category.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "hotelsDetails": {
      "type": "object",
      "description": "Response object for fetching lists of Property summary information.",
      "properties": {
        "hotelSummaryInfoList": {
          "$ref": "#/definitions/hotelsSummaryType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelsSummaryType": {
      "type": "array",
      "description": "Lists of Hotel summary information.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelSummaryType"
      }
    },
    "hotelSummaryType": {
      "type": "object",
      "description": "A brief summary of information about a hotel.",
      "properties": {
        "hotelId": {
          "description": "Code identifying the hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelName": {
          "description": "The name of the hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "activeDate": {
          "description": "Date when the hotel becomes valid for use.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "inactiveDate": {
          "description": "Date when the hotel becomes invalid for use.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "chainCode": {
          "description": "Hotels Chain Code. This attribute uniquely assign Hotel to a single chain.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "propertyType": {
          "description": "Property Type Description. The property type defined for the hotel",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "hotelDetails": {
      "type": "object",
      "description": "Response object for fetching Property configuration information.",
      "properties": {
        "hotelConfigInfo": {
          "description": "Hotel configuration information.",
          "$ref": "#/definitions/hotelInfoType"
        },
        "masterInfoList": {
          "description": "Refer to Generic common types document.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/masterInfoType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelInfoType": {
      "type": "object",
      "description": "Contains the basic configuration information about a Hotel.",
      "properties": {
        "primaryDetails": {
          "description": "Primary Information of the hotel.",
          "type": "object",
          "properties": {
            "legalOwner": {
              "description": "Legal owner of the hotel.",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            }
          }
        },
        "generalInformation": {
          "description": "General Information of the hotel.",
          "type": "object",
          "properties": {
            "hotelType": {
              "description": "The type of the Hotel.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "roomCount": {
              "description": "The total number of rooms in the Hotel.",
              "type": "integer"
            },
            "bedCount": {
              "description": "The total number of beds in the Hotel.",
              "type": "integer"
            },
            "floorCount": {
              "description": "The total number of floors of the Hotel.",
              "type": "integer"
            },
            "checkInTime": {
              "description": "The official check in time of the Hotel.",
              "type": "string",
              "format": "date-time"
            },
            "checkOutTime": {
              "description": "The official check out time of the Hotel.",
              "type": "string",
              "format": "date-time"
            },
            "hotelInfoWebsite": {
              "description": "URL where property information is located.",
              "$ref": "#/definitions/uRLType"
            },
            "longitude": {
              "description": "Longitude of the hotel.",
              "type": "number"
            },
            "latitude": {
              "description": "Latitude of the hotel.",
              "type": "number"
            },
            "baseLanguage": {
              "description": "The base language of the Hotel.",
              "$ref": "#/definitions/languageType"
            }
          }
        },
        "accommodationDetails": {
          "description": "Accommodation Details of the hotel.",
          "type": "object",
          "properties": {
            "singleRooms": {
              "description": "The number of Single Rooms of the Hotel.",
              "type": "integer"
            },
            "doubleRooms": {
              "description": "The number of Double Rooms of the Hotel.",
              "type": "integer"
            },
            "twinRooms": {
              "description": "The number of Twin Rooms of the Hotel.",
              "type": "integer"
            },
            "familyRooms": {
              "description": "The number of Family Rooms of the Hotel.",
              "type": "integer"
            },
            "connectingRooms": {
              "description": "The number of Connecting Rooms of the Hotel.",
              "type": "integer"
            },
            "accessibleRooms": {
              "description": "The number of Accessible Rooms of the Hotel.",
              "type": "integer"
            },
            "nonSmokingRooms": {
              "description": "The number of Non-Smoking Rooms of the Hotel.",
              "type": "integer"
            },
            "maxAdultsInFamilyRoom": {
              "description": "Maximum Adults for Family Room Type.",
              "type": "integer"
            },
            "maxChildrenInFamilyRoom": {
              "description": "Maximum Children for Family Room Type.",
              "type": "integer"
            },
            "guestRoomFloors": {
              "description": "The total number of the Guest Room Floors.",
              "type": "integer"
            },
            "guestRoomElevators": {
              "description": "The number of Guest Room Elevators.",
              "type": "integer"
            },
            "suites": {
              "description": "The number of Suites of the Hotel.",
              "type": "integer"
            },
            "executiveFloorNo": {
              "description": "The floor number of Executive Floors of the Hotel.",
              "type": "string",
              "minLength": 0,
              "maxLength": 1000
            },
            "roomAmenties": {
              "description": "The information about the Room Amenities.",
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "shopDescription": {
              "description": "The Description of the shops in the Hotel.",
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            }
          }
        },
        "propertyControls": {
          "description": "Property controls information configuration of the hotel.",
          "type": "object",
          "properties": {
            "sellControls": {
              "description": "The sell controls information configuration of the hotel.",
              "type": "object",
              "properties": {
                "startDate": {
                  "description": "Date when the hotel become valid for use.",
                  "type": "string",
                  "format": "date",
                  "maxLength": 8
                },
                "endDate": {
                  "description": "The end date of the hotel.",
                  "type": "string",
                  "format": "date",
                  "maxLength": 8
                },
                "hotelId": {
                  "description": "The hotel code.",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 80
                }
              }
            },
            "currencyFormatting": {
              "description": "Currency Formatting information configuration of the hotel.",
              "type": "object",
              "properties": {
                "currencyCode": {
                  "description": "The base currency code for this hotel..",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 20
                },
                "currencyFormat": {
                  "description": "Format for the local currency.",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 80
                },
                "currencySymbol": {
                  "description": "Symbol to designate the default currency of the hotel.",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 20
                },
                "decimalPositions": {
                  "description": "Number of decimal positions used for this currency type.",
                  "type": "integer"
                }
              }
            },
            "cateringCurrencyFormatting": {
              "description": "Catering Currency Formatting information configuration of the hotel.",
              "type": "object",
              "properties": {
                "currencyCode": {
                  "description": "The base currency code for this hotel..",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 20
                },
                "currencyFormat": {
                  "description": "Format for the local currency.",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 80
                }
              }
            },
            "dateTimeFormatting": {
              "description": "Date Time Formatting information configuration of the hotel",
              "type": "object",
              "properties": {
                "longDateFormat": {
                  "description": "Long date format of the hotel.",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 20
                },
                "shortDateFormat": {
                  "description": "Short date format of the hotel.",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 20
                },
                "timeFormat": {
                  "description": "Time format for the hotel.",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 20
                },
                "timeZoneRegion": {
                  "description": "Time zone region of the hotel.",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 80
                }
              }
            },
            "applicationMode": {
              "description": "Application Mode information configuration of the hotel.",
              "type": "object",
              "properties": {
                "configurationMode": {
                  "description": "The hotel's configuration mode if applicable.",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 20
                },
                "countryMode": {
                  "description": "The hotel's country code.",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 20
                },
                "expHotelCode": {
                  "description": "Hotel Code used for third party exports.",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 20
                },
                "touristNumber": {
                  "description": "The Tourist Number of the hotel.",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 20
                },
                "mbsSupported": {
                  "description": "Indicates if the hotel uses MBS (Marriott Business Services).",
                  "type": "boolean"
                }
              }
            }
          }
        },
        "communication": {
          "description": "Communication information of the hotel.",
          "type": "object",
          "properties": {
            "phoneNumber": {
              "description": "The direct dial phone number of the hotel.",
              "$ref": "#/definitions/telephoneType"
            },
            "tollFreeNumber": {
              "description": "Toll free phone number of the hotel.",
              "$ref": "#/definitions/telephoneType"
            },
            "faxNumber": {
              "description": "Fax phone number of the hotel.",
              "$ref": "#/definitions/telephoneType"
            },
            "emailAddress": {
              "description": "Email address of the hotel.",
              "$ref": "#/definitions/basicEmailType"
            },
            "webPage": {
              "description": "The web address of the hotel.",
              "$ref": "#/definitions/uRLType"
            }
          }
        },
        "address": {
          "description": "Provides address information.",
          "type": "object",
          "properties": {
            "isValidated": {
              "description": "Indicator to define if the Address is validated by the Address Validation System.",
              "type": "boolean"
            },
            "addressLine": {
              "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
              "type": "array",
              "maxItems": 4,
              "items": {
                "type": "string",
                "minLength": 0,
                "maxLength": 80
              }
            },
            "cityName": {
              "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            },
            "postalCode": {
              "description": "Post Office Code number.",
              "type": "string",
              "minLength": 0,
              "maxLength": 15
            },
            "cityExtension": {
              "description": "Post Office City Extension Code number. City Extension mainly used for UK addresses.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "county": {
              "description": "County or District Name (e.g., Fairfax). This is read only.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "state": {
              "description": "State or Province name (e.g., Texas).",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "country": {
              "description": "Country name (e.g., Ireland).",
              "$ref": "#/definitions/countryNameType"
            },
            "language": {
              "description": "Language identification.",
              "type": "string",
              "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
            },
            "type": {
              "description": "Defines the type of address (e.g. home, business, other).",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "typeDescription": {
              "description": "Describes the type code",
              "type": "string"
            },
            "primaryInd": {
              "description": "When true, indicates a primary information.",
              "type": "boolean"
            },
            "updateReservations": {
              "description": "Indicates whether to update the reservations or not. If true and the address is primary, then all associated active reservations will be updated with the new primary address.",
              "type": "boolean"
            },
            "barCode": {
              "description": "The postal barcode for the address.",
              "type": "string",
              "minLength": 0,
              "maxLength": 100
            },
            "createDateTime": {
              "description": "Time stamp of the creation.",
              "type": "string",
              "format": "date-time"
            },
            "creatorId": {
              "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
              "type": "string",
              "minLength": 0,
              "maxLength": 200
            },
            "lastModifyDateTime": {
              "description": "Time stamp of last modification.",
              "type": "string",
              "format": "date-time"
            },
            "lastModifierId": {
              "description": "Identifies the last software system or person to modify a record.",
              "type": "string",
              "minLength": 0,
              "maxLength": 200
            },
            "purgeDate": {
              "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "regionCode": {
              "description": "The region code of the hotel.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            }
          }
        },
        "hotelRestaurants": {
          "description": "Names of restaurants which can be found in the Hotel.",
          "$ref": "#/definitions/hotelRestaurantsType"
        },
        "hotelRateRanges": {
          "description": "The rate ranges which are offered by the hotels.",
          "$ref": "#/definitions/hotelRateRangesType"
        },
        "alternateHotels": {
          "description": "Informations about alternative hotels provided by the Hotel.",
          "$ref": "#/definitions/alternateHotelsType"
        },
        "hotelContacts": {
          "description": "The contacts information the hotels.",
          "$ref": "#/definitions/hotelContactsType"
        },
        "hotelEventSpaces": {
          "description": "Even Space information of the hotel.",
          "$ref": "#/definitions/hotelEventSpacesType"
        },
        "hotelNotes": {
          "description": "List of notes for the hotel.",
          "$ref": "#/definitions/hotelNotesType"
        },
        "hotelCorporateInformations": {
          "$ref": "#/definitions/hotelCorporateInformationsType"
        },
        "attractions": {
          "description": "List of Attractions for the hotel.",
          "$ref": "#/definitions/hotelAttractionsType"
        },
        "meetingRooms": {
          "description": "List of Meeting Rooms for the hotel.",
          "$ref": "#/definitions/meetingRoomsType"
        },
        "chainCode": {
          "description": "The code that identifies a hotel chain or management group. The hotel chain code is decided between vendors. This attribute is optional if the hotel is an independent property that can be identified by the HotelCode attribute.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "The code that uniquely identifies a single hotel property. The hotel code is decided between vendors.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelCityCode": {
          "description": "The IATA city code; for example DCA, ORD.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "hotelName": {
          "description": "A text field used to communicate the proper name of the hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "hotelCodeContext": {
          "description": "A text field used to communicate the context (or source of - ex Sabre, Galileo, Worldspan, Amadeus) the HotelReferenceGroup codes.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "chainName": {
          "description": "The name of the hotel chain (e.g., Hilton, Marriott, Hyatt).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "languageType": {
      "type": "string",
      "minLength": 0,
      "maxLength": 40
    },
    "telephoneType": {
      "type": "object",
      "description": "Information on a telephone number for the customer.",
      "properties": {
        "phoneTechType": {
          "description": "Indicates type of technology associated with this telephone number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "phoneUseType": {
          "description": "Describes the type of telephone number, in the context of its general use (e.g. Home, Business, Emergency Contact, Travel Arranger, Day, Evening).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "phoneUseTypeDescription": {
          "description": "Description of the PhoneUseType code",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "phoneNumber": {
          "description": "Telephone number assigned to a single location.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "extension": {
          "description": "Extension to reach a specific party at the phone number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "basicEmailType": {
      "type": "string",
      "description": "Email address",
      "minLength": 0,
      "maxLength": 2000
    },
    "hotelRestaurantsType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelRestaurantType"
      }
    },
    "hotelRestaurantType": {
      "type": "object",
      "description": "Information about the Restaurants in the hotel.",
      "properties": {
        "restaurantName": {
          "description": "The name of the Restaurant.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1000
        },
        "restaurantType": {
          "description": "The Type of Restaurant.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1000
        },
        "hours": {
          "description": "The Hours of Operation of the Restaurant.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1000
        },
        "priceRange": {
          "description": "The price range of the Restaurant.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "comments": {
          "description": "Comments about the Restaurant.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "category": {
          "description": "The category that the Restaurant belongs to.",
          "$ref": "#/definitions/restaurantCategoryType"
        },
        "timeSpan": {
          "description": "The Start Date and End Date of the Restaurant.",
          "$ref": "#/definitions/timeSpanType"
        },
        "newRestaurantCode": {
          "description": "The new Restaurant Code which is used in the change method.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "restaurantCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "orderBy": {
          "type": "integer"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "restaurantCategoryType": {
      "type": "string",
      "description": "Simple type for Hotel Restaurant.",
      "enum": [
        "Restaurant",
        "Retail"
      ]
    },
    "hotelRateRangesType": {
      "type": "array",
      "description": "Lists of rate ranges of the hotel.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelRateRangeType"
      }
    },
    "hotelRateRangeType": {
      "type": "object",
      "description": "The rate rage information of the hotel.",
      "properties": {
        "timeSpan": {
          "description": "The Start Date and End Date of the Hotel rate range.",
          "$ref": "#/definitions/timeSpanType"
        },
        "minRate": {
          "description": "Minimum Rate offered by the hotel.",
          "type": "number"
        },
        "maxRate": {
          "description": "Maximum Rate offered by the hotel.",
          "type": "number"
        },
        "currencyCode": {
          "description": "The base currency code for rate range(The currency code used by the hotel which the rate range belongs to).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "alternateHotelsType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/alternateHotelType"
      }
    },
    "alternateHotelType": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/addressType"
        },
        "contactNumbers": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/telephoneType"
          }
        },
        "minRate": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "maxRate": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "relativePosition": {
          "$ref": "#/definitions/relativePositionType"
        },
        "hotelAmenities": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/hotelAmenityType"
          }
        },
        "event": {
          "description": "True if the hotel has any scheduled events within the requested date range.",
          "type": "boolean"
        },
        "rateRoomDetails": {
          "description": "Any additional information like membership, restriction status, room stay information of the requested hotels etc.",
          "$ref": "#/definitions/rateRoomDetailsType"
        },
        "channelSummaryInfo": {
          "description": "Channel related information if availability request is send for a channel.",
          "$ref": "#/definitions/channelSummaryInfoType"
        },
        "sellMessages": {
          "description": "Sell messages retrieved based on the Time Span criteria for all Rate Codes and Room Types of the requested hotel.",
          "$ref": "#/definitions/sellMessagesType"
        },
        "currencyExchangeRates": {
          "description": "Exchange Rate information for currency codes of the requested hotel.",
          "$ref": "#/definitions/currencyExchangeRatesType"
        },
        "chainCode": {
          "description": "The code that identifies a hotel chain or management group. The hotel chain code is decided between vendors. This attribute is optional if the hotel is an independent property that can be identified by the HotelCode attribute.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "The code that uniquely identifies a single hotel property. The hotel code is decided between vendors.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelCityCode": {
          "description": "The IATA city code; for example DCA, ORD.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "hotelName": {
          "description": "A text field used to communicate the proper name of the hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "hotelCodeContext": {
          "description": "A text field used to communicate the context (or source of - ex Sabre, Galileo, Worldspan, Amadeus) the HotelReferenceGroup codes.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "chainName": {
          "description": "The name of the hotel chain (e.g., Hilton, Marriott, Hyatt).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "hotelType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "negotiated": {
          "type": "boolean"
        },
        "alternate": {
          "type": "boolean"
        },
        "displayOrder": {
          "type": "number"
        },
        "inventoryRooms": {
          "type": "integer"
        },
        "availableRooms": {
          "type": "integer"
        },
        "comments": {
          "description": "Comments of alternate Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "direction": {
          "description": "Compass direction to the attraction from the hotel (North/South, etc).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reciprocalRelationship": {
          "description": "whether the alternate relationship should be applied to the alternate hotel as well. If this flag is true, not only will the AlternateHotelCode hotel be an alternate for HotelCode hotel, but HotelCode hotel will also be an alternate for AlternateHotelCode hotel.",
          "type": "boolean"
        },
        "alternateHotelCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "newAlternateHotelCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "hotelAmenityType": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "code": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "type": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "displayOrder": {
          "type": "number"
        }
      }
    },
    "rateRoomDetailsType": {
      "type": "object",
      "properties": {
        "memberships": {
          "description": "Detail regarding customer loyalty program.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/membershipSearchType"
          }
        },
        "restrictionType": {
          "description": "Indicates the restriction types if hotel is not available.",
          "$ref": "#/definitions/masterRestrictionStatusesType"
        },
        "roomStays": {
          "description": "Room stay information.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomStayType"
          }
        }
      }
    },
    "membershipSearchType": {
      "type": "object",
      "description": "Identifies criteria for searching frequent customer reward program.",
      "properties": {
        "membershipId": {
          "description": "Membership ID criteria.",
          "type": "string"
        },
        "membershipLevel": {
          "description": "Membership Level criteria.",
          "$ref": "#/definitions/codeListType"
        },
        "membershipType": {
          "description": "Membership Type criteria.",
          "$ref": "#/definitions/codeListType"
        },
        "associatedReservationsOnly": {
          "description": "If this is true,the reservations which has membership information associated will be resulted .",
          "type": "boolean"
        }
      }
    },
    "masterRestrictionStatusesType": {
      "type": "string",
      "enum": [
        "Closed",
        "ClosedForArrival",
        "ClosedForDeparture",
        "MinimumStayThrough",
        "MaximumStayThrough",
        "MinimumLengthOfStay",
        "MaximumLengthOfStay",
        "LOSNotAvailable",
        "MinimumAdvanceBooking",
        "MaximumAdvanceBooking",
        "Open",
        "OpenForArrival",
        "OpenForDeparture",
        "Hurdle",
        "MinimumOccupancy",
        "MaximumOccupancy",
        "RateStrategy",
        "RateDetailsNotSet",
        "InventoryItemNotAvailable",
        "RankRestriction",
        "MaximumAuth",
        "InventoryNotAvailable",
        "RoomClassNotAvailable",
        "RoomTypeNotAvailable",
        "BlockSellLimit",
        "OnRequest"
      ]
    },
    "roomStayType": {
      "type": "object",
      "properties": {
        "registrationNumber": {
          "description": "Registration Number of the reservation for the current day.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "currentRoomInfo": {
          "description": "Room information of the reservation for the current day.",
          "$ref": "#/definitions/currentRoomInfoType"
        },
        "roomRates": {
          "description": "A collection of Room Rates associated with a particular Room Stay. Each Room Rate combination can have multiple rates. Example King room, Rack rate plan, Monday through Thursday, weekday amount, Friday and Saturday, weekend amount.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomRateType"
          }
        },
        "guestCounts": {
          "$ref": "#/definitions/guestCountsType"
        },
        "arrivalDate": {
          "type": "string",
          "format": "date"
        },
        "departureDate": {
          "type": "string",
          "format": "date"
        },
        "expectedTimes": {
          "description": "The Expected Arrival and Departure Times.",
          "$ref": "#/definitions/resExpectedTimesType"
        },
        "originalTimeSpan": {
          "description": "The Original Time Span(Arrival, Departure) which covers the Room Stay. In case of Rolling No Show TimeSpan's StratDate moves forward but OriginalTimeSpan's StratDate remains the same.",
          "$ref": "#/definitions/timeSpanType"
        },
        "guarantee": {
          "description": "The guarantee information associated to the Room Stay. A maximum of 5 occurances are available for use depending on the context.",
          "$ref": "#/definitions/resGuaranteeType"
        },
        "promotion": {
          "description": "Promotions applied to the reservation to get the promotional rate.",
          "$ref": "#/definitions/promotionType"
        },
        "suiteWith": {
          "description": "Connecting Rooms.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "total": {
          "description": "The total amount charged for the Room Stay.",
          "$ref": "#/definitions/totalType"
        },
        "totalPoints": {
          "description": "The total number of Points charged for the Room Stay.",
          "$ref": "#/definitions/pointsType"
        },
        "multiValueAttrs": {
          "description": "Informative indicators indicating different values of an attribute exists over the stay.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 2000
          }
        },
        "upsellInfo": {
          "description": "Indicates Upsell Information to be applied on Reservation.",
          "$ref": "#/definitions/upsellInfoType"
        },
        "mobileNotifications": {
          "description": "Denotes the status of Room Ready and Key Ready messages.",
          "$ref": "#/definitions/resMobileNotificationsType"
        },
        "roomNumberLocked": {
          "description": "When true, indicates a room number cannot be changed. When false, indicates a room number may be changed.",
          "type": "boolean"
        },
        "printRate": {
          "description": "This control whether rate info will be printed in confirmation letter.",
          "type": "boolean"
        },
        "ownerReservationType": {
          "description": "Indicates whether reservation is for Unit/Room Owner or Authorized User. If this attribute is not define it is a regular/rental reservation.",
          "$ref": "#/definitions/ownerResTypeType"
        },
        "primaryShareType": {
          "description": "This is populated in case of primary share scenario. This indicates whether this reservation is primary or non primary. Changes or postings to the 'non-primary' share reservation is not allowed.",
          "$ref": "#/definitions/primaryShareTypeType"
        },
        "remoteCheckInAllowed": {
          "description": "Indicates whether the reservation is pre-registered for internet check-in or not.",
          "type": "boolean"
        },
        "bookingMedium": {
          "description": "Classifies the medium(Channel field on reservation screen) through which the reservation is made.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bookingMediumDescription": {
          "description": "Description of the booking medium.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "availableUpsellOfferCount": {
          "description": "Number of Upsell Offers Available for this stay. This will only be populated if the Upsell Instruction is included in the Allowed Instruction request",
          "type": "integer"
        }
      }
    },
    "uniqueID_Type": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "currentRoomInfoType": {
      "type": "object",
      "description": "Room information of the reservation for the current day.",
      "properties": {
        "roomType": {
          "description": "Current room type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomId": {
          "description": "Current room number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "suggestedRoomNumbers": {
          "description": "Suggested room numbers.",
          "$ref": "#/definitions/codeListType"
        },
        "roomDescription": {
          "description": "Current room description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "roomViewCode": {
          "description": "Represents the room view code like City view, River view, Ocean view etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "assignedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        },
        "upgradedByAI": {
          "description": "Represents the room was upgraded by AI Room Assignment.",
          "type": "boolean"
        }
      }
    },
    "roomRateType": {
      "type": "object",
      "properties": {
        "total": {
          "$ref": "#/definitions/totalType"
        },
        "totalPoints": {
          "$ref": "#/definitions/pointsType"
        },
        "rates": {
          "$ref": "#/definitions/ratesType"
        },
        "packages": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/packageElementType"
          }
        },
        "stayProfiles": {
          "description": "Profile associated with the room Stay.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationProfileType"
          }
        },
        "guestCounts": {
          "description": "A collection of Guest Counts associated with the room rate.",
          "$ref": "#/definitions/guestCountsType"
        },
        "taxFreeGuestCounts": {
          "description": "A collection of Tax Free Guest Counts associated with the room rate. This list does not add to the guest count but just indicates number of tax free guests out of guest counts.",
          "$ref": "#/definitions/guestCountsType"
        },
        "awards": {
          "description": "Membership Awards code applied on the reservation.",
          "$ref": "#/definitions/resAwardsType"
        },
        "foreignExchange": {
          "description": "Exchange Type information for the postings.",
          "$ref": "#/definitions/foreignExchangeType"
        },
        "reservationBlock": {
          "description": "Key information about the block for this reservation.",
          "$ref": "#/definitions/reservationBlockType"
        },
        "roomRateInfo": {
          "description": "Information about the Room Rate Combination.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "mealPlans": {
          "description": "Meal plan codes for rate plan code.",
          "$ref": "#/definitions/mealPlansType"
        },
        "roomType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "promotionCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "availability": {
          "description": "Used to specify an availability status for the room rate. When available value could be either not specified or \"Available\".",
          "$ref": "#/definitions/roomRateAvailReasonType"
        },
        "suppressRate": {
          "type": "boolean"
        },
        "marketCode": {
          "description": "The code that relates to the market being sold to (e.g., the corporate market, packages).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "marketCodeDescription": {
          "description": "Description of the market code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "sourceCode": {
          "description": "To specify where the business came from e.g. radio, newspaper ad, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceCodeDescription": {
          "description": "Description of the source of business.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "numberOfUnits": {
          "description": "The number of rooms.",
          "type": "integer"
        },
        "roomId": {
          "description": "A string value representing the unique identification of a room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "pseudoRoom": {
          "description": "True indicates as pseudo room type. This is usually used for a posting master reservation.",
          "type": "boolean"
        },
        "roomTypeCharged": {
          "description": "Room Type used for the Rate calculation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "commissionCode": {
          "description": "Commission Code applicable for commission calculation for Travel Agent/Company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "commissionable": {
          "description": "Indicates Commission is applicable for commission calculation for Travel Agent/Company.",
          "type": "boolean"
        },
        "houseUseOnly": {
          "description": "Indicates this reservation is for House use.",
          "type": "boolean"
        },
        "complimentary": {
          "description": "Indicates this reservation rate is complimentary.",
          "type": "boolean"
        },
        "inventoryLender": {
          "description": "Indicates whether the room type inventory was taken from the allotment or House availability.",
          "type": "string"
        },
        "fixedRate": {
          "description": "Fixed Rate Indicator.",
          "type": "boolean"
        },
        "barRanking": {
          "description": "Best Available rates ranking.",
          "type": "integer"
        },
        "rateGroup": {
          "description": "For RatePlanSet equals BESTAVAILABLERATE, in case Rate Groups are enabled the element provides the rate group for the rate plan code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "discountAllowed": {
          "description": "Indicates if the Rate Code is discountable i.e discounts are allowed on the rate code.",
          "type": "boolean"
        },
        "bogoDiscount": {
          "description": "Indicates if the Rate Code has BOGO(Bye one Get one) indicator.",
          "type": "boolean"
        },
        "rateLevel": {
          "description": "Rate plan type like Corporate,Regular,Military,Weekend etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "commissionPercentage": {
          "description": "Indicates commission percentage used by the rate plan.",
          "type": "integer"
        },
        "commissionAmount": {
          "description": "Indicates commission amount used by the rate plan.",
          "type": "integer"
        },
        "credentialsRequired": {
          "description": "If true, indicates that credentials is required to sell the rate code.",
          "type": "boolean"
        },
        "taxIncluded": {
          "description": "If true, indicates if tax is included in the rate code.",
          "type": "boolean"
        },
        "rateDescription": {
          "description": "Rate code description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        }
      }
    },
    "totalType": {
      "type": "object",
      "description": "The total amount charged for the service including additional amounts and fees.",
      "properties": {
        "taxes": {
          "description": "A collection of taxes.",
          "$ref": "#/definitions/taxesType"
        },
        "fees": {
          "description": "A collection of fees or service charges.",
          "$ref": "#/definitions/feesType"
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "amountBeforeTax": {
          "description": "The total amount not including any associated tax (e.g., sales tax, VAT, GST or any associated tax).",
          "type": "number"
        },
        "amountAfterTax": {
          "description": "The total amount including all associated taxes (e.g., sales tax, VAT, GST or any associated tax).",
          "type": "number"
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "code": {
          "description": "Type of charge.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateOverride": {
          "description": "When true indicates that the rate amount has been overridden.",
          "type": "boolean"
        }
      }
    },
    "taxesType": {
      "type": "object",
      "description": "A collection of taxes.",
      "properties": {
        "tax": {
          "description": "An individual tax.",
          "type": "array",
          "maxItems": 99,
          "items": {
            "$ref": "#/definitions/taxType"
          }
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "taxType": {
      "type": "object",
      "description": "Applicable tax element. This element allows for both percentages and flat amounts. If one field is used, the other should be zero since logically, taxes should be calculated in only one of the two ways.",
      "properties": {
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "type": {
          "description": "Used to indicate if the amount is inclusive or exclusive of other charges, such as taxes, or is cumulative (amounts have been added to each other).",
          "$ref": "#/definitions/amountDeterminationType"
        },
        "code": {
          "description": "Code identifying the fee (e.g.,agency fee, municipality fee).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "amountDeterminationType": {
      "type": "string",
      "description": "Used to indicate if an amount is inclusive or exclusive of other charges, such as taxes.",
      "enum": [
        "Inclusive",
        "Exclusive"
      ]
    },
    "feesType": {
      "type": "object",
      "description": "A collection of fees or service charges.",
      "properties": {
        "fee": {
          "description": "An individual fee or service charge.",
          "type": "array",
          "maxItems": 99,
          "items": {
            "$ref": "#/definitions/feeType"
          }
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "feeType": {
      "type": "object",
      "description": "Applicable service charges or fees.",
      "properties": {
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "type": {
          "description": "Used to indicate if the amount is inclusive or exclusive of other charges, such as taxes, or is cumulative (amounts have been added to each other).",
          "$ref": "#/definitions/amountDeterminationType"
        },
        "code": {
          "description": "Code identifying the fee (e.g.,agency fee, municipality fee).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "pointsType": {
      "type": "object",
      "description": "The Redeem Points contains the number of points required to book a room type.",
      "properties": {
        "awardsType": {
          "description": "Awards type for the award type rate code.",
          "type": "string"
        },
        "points": {
          "description": "No of points required to book this Room Stay.",
          "type": "integer"
        }
      }
    },
    "ratesType": {
      "type": "object",
      "description": "Individual rate amount.",
      "properties": {
        "rate": {
          "description": "The Rate contains a collection of elements that define the amount of the rate, associated fees, additional occupant amounts. Taxes can be broken out or included within the various amounts. A currency can be associated to each amount.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/amountType"
          }
        },
        "rateRange": {
          "description": "Rate Range details like maximum rate amount and minimum rate amount in each available rate category.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/rateRangeType"
          }
        }
      }
    },
    "amountType": {
      "type": "object",
      "description": "Base charge and additional charges related to a room that includes such things as additional guest amounts, cancel fees, etc. Also includes Discount percentages, total amount, and the rate description.",
      "properties": {
        "base": {
          "description": "The base amount charged for the accommodation or service per unit of time (ex: Nightly, Weekly, etc). If TaxInclusive is set to True, then taxes are included in the base amount. Note that any additional charges should itemized in the other elements.",
          "$ref": "#/definitions/totalType"
        },
        "additionalGuestAmounts": {
          "description": "Collection of incremental charges per age qualifying code for additional guests. Amount charged for additional occupant is with respect to age group of the base guests.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/additionalGuestAmountType"
          }
        },
        "discount": {
          "description": "Discount percentage and/or Amount, code and textual reason for discount",
          "$ref": "#/definitions/discountType"
        },
        "shareRatePercentage": {
          "description": "Indicates the share rate percentage for the reservation if set to CUSTOMSPLIT.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "shareDistributionInstruction": {
          "description": "Last rate share distribution instruction applied on share reservation daily rate segment.",
          "$ref": "#/definitions/shareDistributionInstructionType"
        },
        "total": {
          "description": "The total amount charged for this rate including additional occupant amounts and fees.",
          "$ref": "#/definitions/totalType"
        },
        "requiredPoints": {
          "description": "The Points contains the number of points required to book a particular room type.",
          "$ref": "#/definitions/pointsType"
        },
        "effectiveRate": {
          "description": "The reservation effective amount charged for the accommodation or service (i.e. base amount + amount for Add to Rate Combine Line packages) per unit of time",
          "$ref": "#/definitions/totalType"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "additionalGuestAmountType": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/totalType"
        },
        "ageQualifyingCode": {
          "type": "string",
          "enum": [
            "ADULT",
            "CHILD",
            "OTHER",
            "CHILDBUCKET1",
            "CHILDBUCKET2",
            "CHILDBUCKET3",
            "CHILDBUCKET4",
            "CHILDBUCKET5"
          ]
        }
      }
    },
    "discountType": {
      "type": "object",
      "description": "Identifies and provides details about the discount. This allows for both percentages and flat amounts. If one field is used, the other should be zero/not specified since logically.",
      "properties": {
        "discountReason": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "percent": {
          "description": "Percentage discount.",
          "type": "number"
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        },
        "discountCode": {
          "description": "Specifies the type of discount (e.g., No condition, LOS, Deposit or Total amount spent).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "shareDistributionInstructionType": {
      "type": "string",
      "description": "The type of Rate Amount Change to be done on the Sharer reservation. This can be FULL -> Full Rate for each Sharer. SPLIT-> Split the Rate amount between Sharer Reservations. ENTIRE -> This Sharer will get the total amount of the rate code for all the Sharer Reservations.",
      "enum": [
        "Full",
        "Entire",
        "Split",
        "CustomSplit"
      ]
    },
    "rateRangeType": {
      "type": "object",
      "description": "Rate Range details like maximum rate amount and minimum rate amount in each available rate category.",
      "properties": {
        "base": {
          "description": "The base amount charged for the accommodation or service.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/totalType"
          }
        },
        "rateChange": {
          "description": "Rate Change Indicator.",
          "type": "boolean"
        }
      }
    },
    "packageElementType": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "allowance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "description": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 2000
          }
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "packageCode": {
          "type": "string"
        },
        "calculationRule": {
          "type": "string"
        },
        "postingRhythm": {
          "type": "string"
        },
        "quantity": {
          "type": "integer"
        },
        "includedInRate": {
          "type": "boolean"
        },
        "addRateSeprateLine": {
          "type": "boolean"
        },
        "addRateCombinedLine": {
          "type": "boolean"
        },
        "startTime": {
          "type": "string"
        },
        "endTime": {
          "type": "string"
        },
        "sellSeparate": {
          "type": "boolean"
        }
      }
    },
    "reservationProfileType": {
      "type": "object",
      "properties": {
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
          "$ref": "#/definitions/profileIdList"
        },
        "profile": {
          "description": "Provides detailed information regarding either a company or a customer profile.",
          "$ref": "#/definitions/profileType"
        },
        "reservationProfileType": {
          "$ref": "#/definitions/resProfileTypeType"
        }
      }
    },
    "profileIdList": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "profileType": {
      "type": "object",
      "description": "Type provides the detailed information about the profile and its children.",
      "properties": {
        "customer": {
          "description": "Detailed customer information for this profile.",
          "$ref": "#/definitions/customerType"
        },
        "company": {
          "description": "Detailed company information for this profile.",
          "$ref": "#/definitions/companyType"
        },
        "profileImage": {
          "description": "The profile image.",
          "$ref": "#/definitions/imageSetType"
        },
        "addresses": {
          "description": "List of customer addresses.",
          "type": "object",
          "properties": {
            "addressInfo": {
              "description": "Collection of Detailed information on an address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/addressInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "businessSegments": {
          "description": "Business/Market Segment associated to the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "territory": {
          "description": "Territory associated to the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "traceCode": {
          "description": "Trace Code associated to the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "ownerCode": {
          "description": "Owner Code associated to the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "influenceCode": {
          "description": "Influence Code associated to the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "uRLs": {
          "description": "List of Information on a URL for the customer.",
          "type": "object",
          "properties": {
            "uRLInfo": {
              "description": "Collection of Detailed information on web url/address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/uRLInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "comments": {
          "description": "List of Notes for the customer.",
          "type": "object",
          "properties": {
            "commentInfo": {
              "description": "Collection of Detailed information on comments for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/commentInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "profileDeliveryMethods": {
          "description": "List of Delivery methods configured against a Property for this Profile.",
          "type": "object",
          "properties": {
            "profileDeliveryMethod": {
              "description": "Collection of delivery methods for this Profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/profileDeliveryMethod"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "profileMemberships": {
          "description": "List of loyalty program(s) the profile is subscribed to.",
          "type": "object",
          "properties": {
            "profileMembership": {
              "description": "Collection of Detailed information on memberships for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/profileMembershipType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "preferenceCollection": {
          "description": "List of customer preferences.",
          "type": "object",
          "properties": {
            "preferenceType": {
              "description": "Collection of Detailed information on preferences of the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/preferenceTypeType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "keywords": {
          "description": "List of customer keywords.",
          "type": "object",
          "properties": {
            "keyword": {
              "description": "Collection of keywords attached to the profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/keywordType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "negotiatedRates": {
          "description": "List of profile negotiated rates.",
          "type": "object",
          "properties": {
            "negotiatedRate": {
              "description": "Collection of Detailed information on profile negotiated rates.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/negotiatedType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "gdsNegotiatedRates": {
          "description": "List of channel negotiated rates that this profile has been assigned to.",
          "type": "object",
          "properties": {
            "gdsNegotiatedRate": {
              "description": "Collection of Detailed information on channel negotiated rates for the profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/gdsNegotiatedType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "profileIndicators": {
          "description": "Indicators of additional information attached to the profile",
          "$ref": "#/definitions/indicatorsType"
        },
        "relationships": {
          "description": "Contains a collection of profiles that have a relationship with this profile.",
          "type": "object",
          "properties": {
            "relationship": {
              "description": "A collection of the profiles that have a relationship with this profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/relationshipInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "relationshipsSummary": {
          "description": "Contains a collection of profiles that have a relationship with this profile.",
          "type": "object",
          "properties": {
            "relationship": {
              "description": "A collection of the profiles summary that have a relationship with this profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/relationshipInfoSummaryType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "reservationInfoList": {
          "description": "Collection of Detailed information on history and future reservations associated with the profile.",
          "$ref": "#/definitions/reservationHistoryFutureInfoType"
        },
        "stayReservationInfoList": {
          "description": "Collection of Detailed information on history and future reservations associated with the profile.",
          "$ref": "#/definitions/reservationStayHistoryFutureInfoType"
        },
        "lastStayInfo": {
          "description": "Information on last stay of the profile.",
          "$ref": "#/definitions/lastStayInfoType"
        },
        "profileAccessType": {
          "description": "Detailed information on access type associated with the profile.",
          "$ref": "#/definitions/profileAccessType"
        },
        "profileRestrictions": {
          "description": "Detailed information on restrictions associated with the profile.",
          "$ref": "#/definitions/profileRestrictions"
        },
        "mailingActions": {
          "description": "Contains collection of mailing action list associated with the profile",
          "$ref": "#/definitions/mailingActionsType"
        },
        "privacyInfo": {
          "description": "Contains privacy related information associated with the profile",
          "$ref": "#/definitions/privacyInfoType"
        },
        "cashiering": {
          "description": "Contains cashiering related details for the profile",
          "$ref": "#/definitions/profileCashieringType"
        },
        "commissionInfoList": {
          "description": "Contains commission related details for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/profileCommissionType"
          }
        },
        "userDefinedFields": {
          "description": "Collections of user defined fields.",
          "$ref": "#/definitions/userDefinedFieldsType"
        },
        "webUserAccounts": {
          "description": "List of Web User Accounts of the profile.",
          "$ref": "#/definitions/webUserAccountsType"
        },
        "taxInfo": {
          "description": "Profile information about tax.",
          "$ref": "#/definitions/profileTaxInfoType"
        },
        "salesInfo": {
          "description": "Sales information of the profiles.",
          "$ref": "#/definitions/salesInfoType"
        },
        "eCertificates": {
          "description": "E-Certificate assosiated with the profile.",
          "$ref": "#/definitions/eCertificatesType"
        },
        "subscriptions": {
          "description": "List of profile subscriptions.",
          "$ref": "#/definitions/profileSubscriptionListType"
        },
        "localizationGuestType": {
          "description": "Localization Guest Type assocaited to the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "eligibleForFiscalFolio": {
          "description": "Eligible for Fiscal Folio/Payload generation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        },
        "statusCode": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "registeredProperty": {
          "description": "Hotel which this profile is registered with. This attribute is not used for configuration.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "requestForHotel": {
          "description": "Hotel which this profile is to be registered. This attribute is only used during creation of profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "protectedBy": {
          "description": "What level this profile is protected.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "markAsRecentlyAccessed": {
          "description": "Mark this profile as recently accessed.",
          "type": "boolean"
        },
        "markForHistory": {
          "description": "\"true\" setting marks the profile to be kept from being purged, once the profile is marked inactive.",
          "type": "boolean"
        },
        "hasCommission": {
          "description": "Populates true if the profile has commission configured false otherwise.",
          "type": "boolean"
        },
        "inheritedNegRates": {
          "description": "Flag to indicate if the negotiated rates are inherited from master profile. Flag is available only when the profile is linked to master profile and master profile has negotiated rate codes attached.",
          "type": "boolean"
        }
      }
    },
    "customerType": {
      "type": "object",
      "description": "Contains basic data on the customer's identity, location, relationships, finances, memberships, etc.",
      "properties": {
        "personName": {
          "description": "Detailed name information for the customer.",
          "type": "array",
          "maxItems": 5,
          "items": {
            "$ref": "#/definitions/personNameType"
          }
        },
        "anonymization": {
          "description": "Provides information about the guest's anonymization status",
          "$ref": "#/definitions/anonymizationType"
        },
        "citizenCountry": {
          "description": "Name of the (self-professed) country that is claimed for citizenship.",
          "$ref": "#/definitions/countryNameType"
        },
        "identifications": {
          "description": "List of identification of the customer.",
          "type": "object",
          "properties": {
            "identificationInfo": {
              "description": "Collection of detailed information on the identification of the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/identificationInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "profession": {
          "description": "Profession of a person.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "alienInfo": {
          "description": "Immigration/visa information of a foreign person.",
          "$ref": "#/definitions/alienInfoType"
        },
        "birthCountry": {
          "description": "Country of birth.",
          "$ref": "#/definitions/countryNameType"
        },
        "legalCompany": {
          "description": "Name Of the company the individual is associated with.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "companyInfo": {
          "description": "Company Information of the Profile.",
          "$ref": "#/definitions/companyInfoType"
        },
        "businessTitle": {
          "description": "Business Title.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "gender": {
          "description": "Identifies the profile gender code selected from Gender types List of values. Gender types LOV provides the values configured at gender configuration.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "birthDate": {
          "description": "Indicates the date of birth as indicated in the document, in ISO 8601 prescribed format.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "birthDateMasked": {
          "description": "Indicates the date of birth as masked.",
          "type": "string"
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nationality": {
          "description": "Nationality code identification",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "nationalityDescription": {
          "description": "Nationality code description",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "customerValue": {
          "description": "The supplier's ranking of the customer (e.g., VIP, numerical ranking).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "creditRating": {
          "description": "Credit Rating of the customer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vipStatus": {
          "description": "VIP status of the customer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vipDescription": {
          "description": "Description of the VIP status.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "birthPlace": {
          "description": "Place of birth.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "privateProfile": {
          "description": "This element tells profile is property exclusive or not.",
          "type": "boolean"
        },
        "blacklist": {
          "description": "This element tells if profile is blacklisted or not.",
          "type": "boolean"
        }
      }
    },
    "personNameType": {
      "type": "object",
      "description": "This provides name information for a person.",
      "properties": {
        "namePrefix": {
          "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "givenName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "middleName": {
          "description": "The middle name of the person name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "surname": {
          "description": "Family name, last name. May also be used for full name if the sending system does not have the ability to separate a full name into its parts, e.g. the surname element may be used to pass the full name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "nameTitleSuffix": {
          "description": "Title Suffix. Must be populated if ADVANCED_TITLE is on.",
          "type": "integer"
        },
        "envelopeGreeting": {
          "description": "Envelope Greeting of the profile",
          "type": "string"
        },
        "salutation": {
          "description": "Salutation of the profile",
          "type": "string"
        },
        "nameType": {
          "description": "Type of name of the individual, such as former, nickname, alternate or alias name.",
          "$ref": "#/definitions/personNameTypeType"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "externalSystem": {
          "description": "When name type is external, indicates the external system the name belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "personNameTypeType": {
      "type": "string",
      "description": "Person's name in an external system.",
      "enum": [
        "Primary",
        "Alternate",
        "Incognito",
        "External",
        "Phonetic"
      ]
    },
    "anonymizationType": {
      "type": "object",
      "description": "Provides information about guest's anonymization status.",
      "properties": {
        "anonymizationStatus": {
          "description": "Status of anonymization such as Requested or Anonymized.",
          "$ref": "#/definitions/anonymizationStatusType"
        },
        "anonymizationDate": {
          "description": "Date and Time when the guest was anonymized.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "anonymizationStatusType": {
      "type": "string",
      "description": "Guest has been anonymized.",
      "enum": [
        "Requested",
        "Anonymized"
      ]
    },
    "identificationInfoType": {
      "type": "object",
      "description": "Information on the identification of the customer.",
      "properties": {
        "identification": {
          "description": "Detailed information on the identification of the customer.",
          "$ref": "#/definitions/identificationType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "identificationType": {
      "type": "object",
      "description": "Identification information of the customer.",
      "properties": {
        "idType": {
          "description": "Identification Type. Eg Passport, Driving License etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "idNumber": {
          "description": "Identification Number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idNumberMasked": {
          "description": "Masked Identification Number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "issuedCountry": {
          "description": "The country where Identification was issued.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "issuedDate": {
          "description": "Issued date of Identification.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "issuedPlace": {
          "description": "The place where Identification was issued.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "expirationDate": {
          "description": "Expiration date of Identification.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "registeredProperty": {
          "description": "Property where the identification belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        }
      }
    },
    "alienInfoType": {
      "type": "object",
      "description": "immigration/visa information of a foreign person.",
      "properties": {
        "alienRegistrationNo": {
          "description": "Alien Registration Number.",
          "type": "string"
        },
        "immigrationStatus": {
          "description": "Immigration Status on an Alien.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "visaValidityType": {
          "description": "Visa Type of an Alien.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "companyInfoType": {
      "type": "object",
      "description": "Company Information of the Profile.",
      "properties": {
        "legalCompany": {
          "description": "Legal Company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "department": {
          "description": "Department of the Profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "position": {
          "description": "Business Title or Position of the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "companyType": {
      "type": "object",
      "properties": {
        "companyName": {
          "description": "Name of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "companyName2": {
          "description": "Second Name of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "companyName3": {
          "description": "Third Name of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "alternateName": {
          "description": "Alternate Name of the Company. Mainly, it's the name of the company written in the Alternate Language.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "alternateLanguage": {
          "description": "Alternate Language of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "businessLocale": {
          "description": "A jurisdiction(Territory) in which a company is authorized to do business.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "iATAInfo": {
          "description": "IATA Information of the profile.",
          "$ref": "#/definitions/iATAInfoType"
        },
        "businessTitle": {
          "description": "Business Title.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nationality": {
          "description": "Nationality code identification",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "nationalityDescription": {
          "description": "Nationality code description",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "commissionCode": {
          "description": "Commission code of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "creditRating": {
          "description": "Credit Rating of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "corporateIdType": {
          "description": "The type of corporate ID",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vipStatus": {
          "description": "VIP status of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vipDescription": {
          "description": "Description of the VIP status.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "blacklist": {
          "description": "This element tells if profile is blacklisted or not.",
          "type": "boolean"
        }
      }
    },
    "iATAInfoType": {
      "type": "object",
      "description": "IATA Information of the profile.",
      "properties": {
        "iATACompany": {
          "description": "IATA Company Detail.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "iATAConsortia": {
          "description": "IATA Consortia.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "iATAValidationResult": {
          "description": "IATA Validation Result.",
          "type": "boolean"
        }
      }
    },
    "imageSetType": {
      "type": "object",
      "description": "Represents on image set record.",
      "properties": {
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "imageSet": {
          "description": "The image set name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 800
        },
        "sequenceId": {
          "description": "The image set sequence ID.",
          "type": "integer"
        },
        "imageStyle": {
          "description": "The image set enumerated style.",
          "$ref": "#/definitions/imageStyleType"
        },
        "imageType": {
          "description": "The image set type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "hotelId": {
          "description": "The image set hotel code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "chainCode": {
          "description": "The image set chain code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "imageURL": {
          "description": "The image set URL.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "description": {
          "description": "The image set description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "imageOrder": {
          "description": "The image set order.",
          "type": "integer"
        },
        "website": {
          "description": "The image set website.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "imageStyleType": {
      "type": "string",
      "description": "An enumeration of image styles.",
      "enum": [
        "Full",
        "Thumbnail",
        "Icon",
        "Square",
        "Banner",
        "Button",
        "Lowres",
        "Highres"
      ]
    },
    "addressInfoType": {
      "type": "object",
      "description": "Provides address information.",
      "properties": {
        "address": {
          "description": "Address details for the profile.",
          "$ref": "#/definitions/addressType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "telephoneInfoType": {
      "type": "object",
      "description": "Information on a telephone number for the customer.",
      "properties": {
        "telephone": {
          "description": "Phone details for the profile.",
          "$ref": "#/definitions/telephoneType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "emailInfoType": {
      "type": "object",
      "description": "Information on an email for the customer.",
      "properties": {
        "email": {
          "description": "eMail deatils for the profile.",
          "$ref": "#/definitions/emailType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "emailType": {
      "type": "object",
      "description": "Information on an email for the customer.",
      "properties": {
        "emailAddress": {
          "description": "Defines the e-mail address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "type": {
          "description": "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Describes the Type code",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "emailFormat": {
          "description": "Supported Email format.",
          "type": "string",
          "enum": [
            "Html",
            "Text"
          ]
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "uRLInfoType": {
      "type": "object",
      "description": "Web site address.",
      "properties": {
        "url": {
          "description": "Provides URL information.",
          "$ref": "#/definitions/uRLType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "commentInfoType": {
      "type": "object",
      "description": "Comment related to the profile/reservation.",
      "properties": {
        "comment": {
          "description": "Comment details for the comment. It will be empty in case of delete comment.",
          "$ref": "#/definitions/commentType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "commentType": {
      "type": "object",
      "description": "An indication of a new paragraph for a sub-section of a formatted text message.",
      "properties": {
        "text": {
          "description": "Formatted text content.",
          "$ref": "#/definitions/formattedTextTextType"
        },
        "image": {
          "description": "An image for this paragraph.",
          "type": "string"
        },
        "url": {
          "description": "A URL for this paragraph.",
          "type": "string"
        },
        "commentTitle": {
          "description": "Specifies Comment's Title.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "notificationLocation": {
          "description": "Notification Location associated with the Note.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "type": {
          "description": "Specifies type of the comment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Comment type Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "internal": {
          "description": "When true, the comment may not be shown to the consumer. When false, the comment may be shown to the consumer.",
          "type": "boolean"
        },
        "confidential": {
          "description": "When true, the comment may be confidential.",
          "type": "boolean"
        },
        "overrideInternal": {
          "description": "When true, the note internal could be modified.",
          "type": "boolean"
        },
        "protectDescription": {
          "description": "When true, the note title will be populated from the note type description and couldn't be modified.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "If specified comment belongs to the Hotel, otherwise it is a global comment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "actionType": {
          "description": "Specifies type of action described in the comments.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "actionDate": {
          "description": "Indicates at which date an action described in the comment must be taken.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "formattedTextTextType": {
      "type": "object",
      "description": "Provides text and indicates whether it is formatted or not.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        }
      }
    },
    "profileDeliveryMethod": {
      "type": "object",
      "description": "Delivery Information type to the profile.",
      "properties": {
        "deliveryId": {
          "description": "Delivery ID. It will be empty in case of new delivery method.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "deliveryType": {
          "description": "Delivery type can have a value EMAIL, ELECTRONIC etc and it depends on the parameter set in OPERA Control.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "deliveryValue": {
          "description": "Delivery value holds the corresponding value of the delivery type..",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "hotelId": {
          "description": "Property that has delivery methods configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "deliveryModule": {
          "description": "Module where this delivery type will be used. Example : EFolio Export, EInvoice , Fiscal, etc..",
          "$ref": "#/definitions/profileDeliveryModuleType"
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        }
      }
    },
    "profileDeliveryModuleType": {
      "type": "string",
      "description": "Module where this delivery type will be used. Example : EFolio Export, EInvoice , Fiscal, etc..",
      "enum": [
        "EfolioExport"
      ]
    },
    "profileMembershipType": {
      "type": "object",
      "description": "Detailed information of the memberships.",
      "properties": {
        "comment": {
          "description": "Additional comments regarding to the membership.",
          "$ref": "#/definitions/paragraphType"
        },
        "newMembershipNumber": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "nameOnCard": {
          "description": "Name to be displayed on the membership card.",
          "type": "string"
        },
        "programDescription": {
          "description": "Description of the membership program.",
          "type": "string"
        },
        "membershipLevel": {
          "description": "Indicates the membership level.",
          "type": "string"
        },
        "membershipLevelDescription": {
          "description": "Indicates the membership level description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "membershipClass": {
          "description": "Indicates the membership class.",
          "type": "string"
        },
        "earningPreference": {
          "description": "Earning preference to the membership.",
          "$ref": "#/definitions/membershipEarningPreferenceType"
        },
        "inactive": {
          "description": "Indicates whether membership is active or inactive.",
          "type": "boolean"
        },
        "benefits": {
          "description": "benefits for the membership.",
          "$ref": "#/definitions/benefitsType"
        },
        "tierAdministration": {
          "description": "Defines the degree of participation for this membership in the tier management portion of the program.",
          "$ref": "#/definitions/tierAdministrationType"
        },
        "downgrade": {
          "description": "Defines how downgrading will be handled for this membership.",
          "$ref": "#/definitions/downgradeType"
        },
        "reIssueNewCard": {
          "description": "The status of issuing new membership card to the member.",
          "$ref": "#/definitions/cardReIssueType"
        },
        "excludeFromBatch": {
          "description": "True if you want to exclude the member from the Membership Fulfillment extract,the member's actions will not be included in the fulfillment extract until this value set to false.",
          "type": "boolean"
        },
        "upgradeDescription": {
          "description": "Indicates Upgrade information which includes member's next tier level, requirements for the next upgrade.",
          "type": "string",
          "minLength": 0,
          "maxLength": 32000
        },
        "downgradeDescription": {
          "description": "Indicates information regarding the member's possible downgrades.",
          "type": "string",
          "minLength": 0,
          "maxLength": 32000
        },
        "rating": {
          "description": "Value Rating Type Description for this membership.",
          "type": "string"
        },
        "membershipEnrollmentCode": {
          "description": "Indicates how the guest enrolled in the program.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "memberStatus": {
          "description": "Indicates where the guest is in the membership enrollment process.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currentPoints": {
          "description": "Profile MemberShip Points.",
          "type": "number"
        },
        "pointsLabel": {
          "description": "Label used to refer to points for this membership type",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "enrollmentSource": {
          "description": "Source from where the enrollment is done.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "enrollmentResort": {
          "description": "Resort/CRO where enrollment is done.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "preferredCard": {
          "description": "Preferred Card.",
          "type": "boolean"
        },
        "membershipId": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "membershipType": {
          "description": "Type of membership.",
          "type": "string"
        },
        "primaryMembershipYn": {
          "description": "Indicator if Membership is a Primary Membership.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "primaryMembership": {
          "description": "Boolean indicator set to True implies membership is a Primary Membership.",
          "type": "boolean"
        },
        "membershipIdNo": {
          "description": "Membership ID Number.",
          "type": "integer"
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        },
        "centralSetup": {
          "description": "Indicates how the award points for this membership type will be managed.",
          "type": "boolean"
        },
        "signupDate": {
          "description": "Indicates when the member signed up for the loyalty program.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "effectiveDate": {
          "description": "Indicates the starting date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDate": {
          "description": "Indicates the ending date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDateExclusiveIndicator": {
          "description": "When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15 the last date of the period is Oct 14).",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "paragraphType": {
      "type": "object",
      "description": "An indication of a new paragraph for a sub-section of a formatted text message.",
      "properties": {
        "text": {
          "description": "Formatted text content.",
          "$ref": "#/definitions/formattedTextTextType"
        },
        "image": {
          "description": "An image for this paragraph.",
          "type": "string"
        },
        "url": {
          "description": "A URL for this paragraph.",
          "type": "string"
        }
      }
    },
    "membershipEarningPreferenceType": {
      "type": "string",
      "description": "The earning preference of a membership, it depends on the type of property. eg. when the property is a airline it should be Miles, other than Points.",
      "enum": [
        "Points",
        "Miles"
      ]
    },
    "benefitsType": {
      "type": "array",
      "description": "Basic information about membership benefit.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/benefitType"
      }
    },
    "benefitType": {
      "type": "object",
      "description": "Basic information about membership benefit.",
      "properties": {
        "code": {
          "description": "Benefit code associated with a membership.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "message": {
          "description": "Processing message for membership benefit.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "inactive": {
          "description": "Indicates whether membership benefit is active or inactive.",
          "type": "boolean"
        }
      }
    },
    "tierAdministrationType": {
      "type": "string",
      "description": "Do not upgrade membership. The membership may be downgraded.",
      "enum": [
        "Disabled",
        "NoUpgrade"
      ]
    },
    "downgradeType": {
      "type": "string",
      "description": "Do not downgrade membership when the next downgrade process runs. When the downgrade process runs, the membership will be automatically set to Grace.",
      "enum": [
        "Grace",
        "Never",
        "Period"
      ]
    },
    "cardReIssueType": {
      "type": "string",
      "description": "Request to re issue a new card.",
      "enum": [
        "Pending",
        "NotApplicable",
        "Requested"
      ]
    },
    "preferenceTypeType": {
      "type": "object",
      "description": "Preference details for the profile.",
      "properties": {
        "preference": {
          "description": "Collection of Preferences for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/preferenceType"
          }
        },
        "preferenceType": {
          "description": "Preference group code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "preferenceTypeDescription": {
          "description": "Preference group description.",
          "type": "string"
        },
        "sequence": {
          "description": "Preference Sequence.",
          "type": "string"
        },
        "maxQuantity": {
          "description": "Maximum quantity of preferences allowed per preference group.",
          "type": "integer"
        },
        "availableQuantity": {
          "description": "Available quantity of preferences (maximum quantity - Existing preferences)per preference group.",
          "type": "integer"
        },
        "maxResortUsedQuantity": {
          "description": "Maximum quantity of preferences used by any resort per preference group.",
          "type": "integer"
        },
        "reservationPreference": {
          "description": "Whether this preference is reservation preference or not.",
          "type": "boolean"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "preferenceType": {
      "type": "object",
      "description": "Guest Preference details for the profile.",
      "properties": {
        "preferenceValue": {
          "description": "Preference value for display purposes.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "description": {
          "description": "Preference Description for display purposes.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "global": {
          "description": "Whether this preference is property specific or not.",
          "type": "boolean"
        },
        "source": {
          "description": "Source of the preference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "hotels": {
          "description": "If specified preference belongs to the Hotels listed, otherwise it is a global preference.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "preferenceId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "excludedPreferencesCount": {
          "description": "Specifies the count of preferences excluded for the attached reservation preference.",
          "type": "integer"
        }
      }
    },
    "keywordType": {
      "type": "object",
      "properties": {
        "keywordDetail": {
          "description": "The keyword new value, in case keyword value is modified.",
          "$ref": "#/definitions/keywordDetailType"
        },
        "type": {
          "description": "The type of keyword",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "keyword": {
          "description": "The keyword value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "keywordDetailType": {
      "type": "object",
      "properties": {
        "newKeyword": {
          "description": "The new keyword value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "negotiatedType": {
      "type": "object",
      "description": "This holds a list of NegotiatedInfoType.",
      "properties": {
        "negotiatedInfoList": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/negotiatedInfoType"
          }
        },
        "hotelId": {
          "description": "Hotel code for the negotiated rate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateCode": {
          "description": "Rate plan code for the negotiated rate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "negotiatedInfoType": {
      "type": "object",
      "description": "This provides information for a profile negotiated rate.",
      "properties": {
        "corporateAgreementId": {
          "description": "The master identifier for multiple offices/locations under the same company profile. This is optional",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "comissionCode": {
          "description": "Informational purposes only in numeric format.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "order": {
          "description": "The sell order.",
          "type": "integer"
        },
        "inactive": {
          "description": "Negotiated Rate is inactive or not",
          "type": "boolean"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "gdsNegotiatedType": {
      "type": "object",
      "description": "This holds a list of GdsNegotiatedInfoType.",
      "properties": {
        "gdsNegotiatedInfoList": {
          "description": "List of channel negotiated rates for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/gdsNegotiatedInfoType"
          }
        },
        "bookingChannelCode": {
          "description": "Booking Channel Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "channelRatePlanCode": {
          "description": "Channel Room Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "gdsNegotiatedInfoType": {
      "type": "object",
      "description": "This provides information for a channel negotiated rate.",
      "properties": {
        "accessCode": {
          "description": "The GDS negotiated rate code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "order": {
          "description": "The sell order.",
          "type": "integer"
        },
        "inactive": {
          "description": "The GDS Negotiated Rate is inactive or not",
          "type": "boolean"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "indicatorsType": {
      "type": "array",
      "description": "Collection of lamp indicators.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/indicatorType"
      }
    },
    "indicatorType": {
      "type": "object",
      "description": "Lamp indicator Type.",
      "properties": {
        "indicatorName": {
          "description": "Name of the indicator.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "count": {
          "description": "Indicates number of occurrences of the indicator.",
          "type": "integer"
        }
      }
    },
    "relationshipInfoType": {
      "type": "object",
      "description": "Relationship Type contains information about the associations between and among individuals, companies, travel agents, groups, sources, and contact profiles.",
      "properties": {
        "changeRelationship": {
          "description": "Information about the changes in relationship for the profile",
          "$ref": "#/definitions/changeRelationsType"
        },
        "relationshipProfile": {
          "description": "Refer to Relationship Profile type document.",
          "$ref": "#/definitions/relationshipProfileType"
        },
        "masterAccountInfo": {
          "description": "Refer to Master Profile type document.",
          "$ref": "#/definitions/masterAccountInfoType"
        },
        "id": {
          "description": "Relationship identifier.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "relation": {
          "description": "Indicates the type of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "relationDescription": {
          "description": "Displays the description of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "targetRelation": {
          "description": "Displays the type of relationship the Related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "targetRelationDescription": {
          "description": "Displays the description of the target relation(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "changeRelationsType": {
      "type": "object",
      "description": "Detailed information regarding the changes made to relationships for the profile.",
      "properties": {
        "id": {
          "description": "Relationship identifier.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "relation": {
          "description": "Indicates the type of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "relationDescription": {
          "description": "Displays the description of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "targetRelation": {
          "description": "Displays the type of relationship the Related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "targetRelationDescription": {
          "description": "Displays the description of the target relation(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "relationshipProfileType": {
      "type": "object",
      "properties": {
        "customer": {
          "description": "Detailed information of the customer",
          "$ref": "#/definitions/customerType"
        },
        "company": {
          "description": "Detailed information of the Company.",
          "$ref": "#/definitions/companyType"
        },
        "telephone": {
          "description": "Information on telephone details for the customer/company",
          "$ref": "#/definitions/telephoneInfoType"
        },
        "address": {
          "description": "Information on address details for the customer/company",
          "$ref": "#/definitions/addressInfoType"
        },
        "email": {
          "description": "Information on email address for the customer/company",
          "$ref": "#/definitions/emailInfoType"
        },
        "uRLs": {
          "description": "Information on web url/address for the customer/company",
          "$ref": "#/definitions/uRLInfoType"
        },
        "primaryOwner": {
          "description": "Primary Owner of the profile",
          "$ref": "#/definitions/ownerType"
        },
        "profileIdList": {
          "description": "Original profile details for which the relationships was created",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "changeProfileIdList": {
          "description": "Updated/changed profile details for the relationships created",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "primary": {
          "description": "Indicates if this relationship is the primary relationship.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "id": {
          "description": "Relationship identifier.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "statusCode": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        }
      }
    },
    "ownerType": {
      "type": "object",
      "description": "Generic type for information about an owner.",
      "properties": {
        "hotel": {
          "description": "Hotel to which the owner belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "userId": {
          "description": "Unique application user ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "userName": {
          "description": "Unique application user name of the owner.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "ownerCode": {
          "description": "Unique Code to identify the owner.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "profileId": {
          "description": "Unique owner profile information.",
          "$ref": "#/definitions/profileId"
        },
        "name": {
          "description": "Provides name information of the owner.",
          "$ref": "#/definitions/personNameType"
        },
        "department": {
          "description": "Department to which the owner belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "email": {
          "description": "Email information of the owner.",
          "$ref": "#/definitions/emailInfoType"
        },
        "phone": {
          "description": "Information on the telephone number of the owner.",
          "$ref": "#/definitions/telephoneInfoType"
        },
        "relationship": {
          "description": "Relationship of the owner within the profile or block.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "primary": {
          "description": "When true, this is a primary owner.",
          "type": "boolean"
        }
      }
    },
    "codeDescriptionType": {
      "type": "object",
      "description": "This contains a generic code and description information.",
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "profileId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "uniqueIDListType": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "profileStatusType": {
      "type": "string",
      "enum": [
        "Active",
        "Inactive"
      ]
    },
    "profileTypeType": {
      "type": "string",
      "description": "The types of Profile handled by the web service.",
      "enum": [
        "Guest",
        "Agent",
        "Company",
        "Group",
        "Source",
        "Employee",
        "Hotel",
        "Vendor",
        "Contact",
        "Purge",
        "BusinessHeader",
        "BillingAccount",
        "Activity",
        "Potential",
        "Account"
      ]
    },
    "masterAccountInfoType": {
      "type": "object",
      "properties": {
        "masterAccountId": {
          "description": "Unique ID of the Master account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "masterAccountName": {
          "description": "Name of the Master account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "relationshipInfoSummaryType": {
      "type": "object",
      "description": "RelationshipInfoSummaryType contains information about the associations between and among individuals, companies, travel agents, groups, sources, and contact profiles.",
      "properties": {
        "relationshipProfile": {
          "description": "Refer to Relationship Profile Summary type document.",
          "$ref": "#/definitions/relationshipProfileSummaryType"
        },
        "masterAccountDetails": {
          "description": "Refer to Master Profile type document.",
          "$ref": "#/definitions/masterAccountInfoType"
        },
        "relationshipID": {
          "description": "Relationship identifier.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "sourceRelation": {
          "description": "Indicates the type of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceRelationDescription": {
          "description": "Displays the description of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "targetRelation": {
          "description": "Displays the type of relationship the Related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "targetRelationDescription": {
          "description": "Displays the description of the target relation(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "relationshipProfileSummaryType": {
      "type": "object",
      "properties": {
        "customerName": {
          "description": "Name of the customer",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "companyName": {
          "description": "Name of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "telephoneNumber": {
          "description": "Telephone number assigned to a single location",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "address": {
          "description": "Information on address details for the customer/company",
          "$ref": "#/definitions/relationshipAddressType"
        },
        "emailAddress": {
          "description": "Defines the e-mail address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "ownerCode": {
          "description": "Unique Code to identify the owner.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "profileIdList": {
          "description": "Original profile details for which the relationships was created",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "primary": {
          "description": "Indicates if this relationship is the primary relationship.",
          "type": "boolean"
        },
        "profileStatus": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "primaryOwnerCode": {
          "description": "When true, this is a primary owner.",
          "type": "boolean"
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        }
      }
    },
    "relationshipAddressType": {
      "type": "object",
      "description": "Provides address information for a Relationship.",
      "properties": {
        "addressLine": {
          "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "type": "array",
          "maxItems": 4,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 80
          }
        },
        "city": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "reservationHistoryFutureInfoType": {
      "type": "object",
      "description": "Information of History and Future Reservation details attached to Profiles.",
      "properties": {
        "historyList": {
          "description": "Refer to History list type document.",
          "$ref": "#/definitions/historyListType"
        },
        "futureList": {
          "description": "Refer to Future list type document.",
          "$ref": "#/definitions/futureListType"
        }
      }
    },
    "historyListType": {
      "type": "object",
      "description": "A collection of reservation history details attached to Profiles.",
      "properties": {
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : History reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationInfoType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "reservationInfoType": {
      "type": "object",
      "description": "The Reservation class contains the current reservation being created or altered.",
      "properties": {
        "reservationIdList": {
          "description": "Unique identifiers for the reservation for both internal and external systems",
          "$ref": "#/definitions/reservationIdList"
        },
        "externalReferences": {
          "description": "External Reference information for Reservation.",
          "$ref": "#/definitions/externalReferencesType"
        },
        "roomStay": {
          "description": "Collection of room stays.",
          "$ref": "#/definitions/stayInfoType"
        },
        "reservationGuest": {
          "description": "Collection of guests associated with the reservation.",
          "$ref": "#/definitions/resGuestInfoType"
        },
        "sharedGuests": {
          "description": "Collection of guests who share this reservation.",
          "$ref": "#/definitions/resSharedGuestListType"
        },
        "attachedProfiles": {
          "description": "List of attached profiles",
          "$ref": "#/definitions/resAttachedProfileListType"
        },
        "reservationPaymentMethod": {
          "description": "Payment method used for this reservation",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "reservationFolioWindows": {
          "description": "Collection of reservation folio windows.",
          "$ref": "#/definitions/reservationFolioWindowsType"
        },
        "specials": {
          "description": "Set of reservation preferences which belongs to the Specials group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "lastPrivacyPromptDate": {
          "description": "Last Privacy Prompt Date",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "displayColor": {
          "description": "Color setting of the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationIndicators": {
          "description": "Indicators of additional information attached to the reservation",
          "$ref": "#/definitions/indicatorsType"
        },
        "roomStatus": {
          "description": "Current room status",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "searchMatches": {
          "description": "Super Search matching terms.",
          "$ref": "#/definitions/searchMatchesType"
        },
        "sourceOfSale": {
          "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
          "$ref": "#/definitions/sourceOfSaleType"
        },
        "waitlist": {
          "description": "Information regarding why reservation has been/was waitlisted. This could hold information as history even if reservation is not in Waitlist status anymore.",
          "$ref": "#/definitions/waitlistResType"
        },
        "queue": {
          "description": "Information about the time and duration this reservation was on Queue for Checkin.",
          "$ref": "#/definitions/reservationQueueInformationType"
        },
        "housekeeping": {
          "description": "Information regarding housekeeping for this reservation.",
          "$ref": "#/definitions/resHousekeepingType"
        },
        "cashiering": {
          "description": "Holds cashiering related information for the reservation.",
          "$ref": "#/definitions/resCashieringType"
        },
        "taxType": {
          "description": "This stores the code for the type of tax calculation especially with tax exemption, etc.",
          "$ref": "#/definitions/taxTypeType"
        },
        "deposit": {
          "description": "Holds reservation deposit information.",
          "$ref": "#/definitions/reservationDepositType"
        },
        "allowedActions": {
          "description": "Collection of reservation allowed actions.",
          "$ref": "#/definitions/reservationAllowedActionsType"
        },
        "revenuesAndBalances": {
          "description": "Revenues and Balances Amount summary for the reservation.",
          "$ref": "#/definitions/resRevenueBalanceType"
        },
        "hotelInterfaceStatusList": {
          "description": "Collection of Hotel Interfaces and rights, this is populated only when fetching interface status for rooms.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationInterfaceStatusType"
          }
        },
        "guestPreferredCurrency": {
          "description": "Currency code preferred by guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "turndownInfo": {
          "description": "Currency code preferred by guest.",
          "$ref": "#/definitions/reservationTurndownInfoType"
        },
        "mobileNotifications": {
          "description": "Denotes the status of Room Ready, Key Ready messages.",
          "$ref": "#/definitions/resMobileNotificationsType"
        },
        "reservationCommunication": {
          "description": "Collection of reservation communication details.",
          "$ref": "#/definitions/resCommunicationType"
        },
        "advanceCheckIn": {
          "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
          "$ref": "#/definitions/advanceCheckInType"
        },
        "welcomeOffer": {
          "description": "This flag will determine wheather the reservation is eligible for Welcome Offer or not.",
          "type": "boolean"
        },
        "cancellationInfo": {
          "description": "Information regarding why reservation has been/was cancelled.",
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "code": {
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "date": {
              "description": "Date when reservation was last cancelled.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            }
          }
        },
        "keyCount": {
          "description": "Number of keys created for the reservation.",
          "type": "integer"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "expectedServiceTime": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomStayReservation": {
          "description": "Boolean True if this reservation is reserving rooms. False if it is only reserving services.",
          "type": "boolean"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "computedReservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "walkInIndicator": {
          "description": "When true, indicates the reservation is for a guest that walks-in without a reservation. When false, the reservation is not a walk-in.",
          "type": "boolean"
        },
        "accessRestriction": {
          "description": "Indicates user restriction on the reservation based on the Access exclusion functionality such as Restriction on Changes, Cancellation or both.",
          "$ref": "#/definitions/resAccessRestrictionType"
        },
        "commissionPayoutTo": {
          "description": "If not null, reservation is considered to pay out commission to either Travel Agent, Source or both.",
          "$ref": "#/definitions/commissionPayoutToType"
        },
        "paymentMethod": {
          "description": "Payment Method.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "preRegistered": {
          "description": "Defines if the reservation is pre-registered or not.",
          "type": "boolean"
        },
        "openFolio": {
          "description": "Returns true when reservation has an open folio.",
          "type": "boolean"
        },
        "allowMobileCheckout": {
          "description": "Flag containing true or false value for reservation to be eligible for self-checkout by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile checkout yes / no. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "allowMobileViewFolio": {
          "description": "Attribute AllowMobileViewFolio is set to true when the reservation is eligible for viewing folio using mobile device.",
          "type": "boolean"
        },
        "optedForCommunication": {
          "description": "Attribute OptedForCommunication is set to true when the guest has opted for receiving communicationsl related to the reservation.",
          "type": "boolean"
        }
      }
    },
    "reservationIdList": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "externalReferencesType": {
      "type": "array",
      "description": "This type contains unique information of external reference.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/externalReferenceType"
      }
    },
    "externalReferenceType": {
      "type": "object",
      "description": "This type contains unique information of external reference.",
      "properties": {
        "id": {
          "description": "Unique ID of external reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "ID extension for external reference.",
          "type": "integer"
        },
        "idContext": {
          "description": "ID context for external reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "stayInfoType": {
      "type": "object",
      "description": "Details on the Room Stay including Guest Counts, Time Span of this Room Stay, pointers to Res Guests, guest Memberships, Comments and Special Requests pertaining to this particular Room Stay and finally financial information related to the Room Stay, including Guarantee, Deposit and Payment and Cancellation Penalties.",
      "properties": {
        "arrivalDate": {
          "type": "string",
          "format": "date"
        },
        "departureDate": {
          "type": "string",
          "format": "date"
        },
        "originalTimeSpan": {
          "description": "The Original Time Span covers the Room Stay dates of the original reservation.",
          "$ref": "#/definitions/timeSpanType"
        },
        "expectedTimes": {
          "description": "The expected arrival, return and departure times of the guest.",
          "$ref": "#/definitions/resExpectedTimesType"
        },
        "adultCount": {
          "description": "A collection of Guest Counts associated with Room Stay.",
          "type": "integer"
        },
        "childCount": {
          "description": "A collection of Child Counts associated with Room Stay.",
          "type": "integer"
        },
        "roomClass": {
          "description": "Room class code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "description": "Room type code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "componentRoomType": {
          "description": "True indicates room type is a component type.",
          "type": "boolean"
        },
        "numberOfRooms": {
          "description": "Room Id",
          "type": "integer"
        },
        "roomId": {
          "description": "Room Id",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCode": {
          "description": "Rate plan code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateAmount": {
          "description": "Rate amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "points": {
          "description": "The Points contains the number of points used to book a particular room type.",
          "$ref": "#/definitions/pointsType"
        },
        "rateSuppressed": {
          "description": "Whether this rate should be suppressed from view",
          "type": "boolean"
        },
        "reservationBlock": {
          "description": "Key information about the block for this reservation.",
          "$ref": "#/definitions/reservationBlockType"
        },
        "bookingChannelCode": {
          "description": "Booking channel code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "linkCode": {
          "description": "Party code",
          "type": "string",
          "maxLength": 2000
        },
        "fixedRate": {
          "description": "True if the rate is a fixed rate, otherwise false",
          "type": "boolean"
        },
        "totalAmount": {
          "description": "The total amount charged for the Room Stay including additional occupant amounts and fees. If TaxInclusive is set to True, then taxes are included in the total amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "guarantee": {
          "description": "The guarantee information associated to the Room Stay. A maximum of 5 occurances are available for use depending on the context.",
          "$ref": "#/definitions/resGuaranteeType"
        },
        "promotion": {
          "description": "Promotion Codes",
          "$ref": "#/definitions/promotionType"
        },
        "marketCode": {
          "description": "Market code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "marketDescription": {
          "description": "Description of Market code",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "sourceCode": {
          "description": "Source of business",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceCodeDescription": {
          "description": "Description of the source of business.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "balance": {
          "description": "Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "roomTypeCharged": {
          "description": "Room type code that was charged",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "depositPayments": {
          "description": "A collection of deposit and/or payments for the Room Stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "guestServiceStatus": {
          "description": "Service Status of In House guest like DND or MUP",
          "$ref": "#/definitions/guestHousekeepingServiceRequestType"
        },
        "scheduledCheckoutTime": {
          "description": "Indicates that this reservation is scheduled for automated check out.",
          "type": "string",
          "format": "date"
        },
        "roomNumberLocked": {
          "description": "When true, indicates a room number cannot be changed. When false, indicates a room number may be changed.",
          "type": "boolean"
        },
        "pseudoRoom": {
          "description": "True indicates as pseudo room type. This is usually used for a posting master reservation.",
          "type": "boolean"
        },
        "assignedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        },
        "upgradedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        }
      }
    },
    "resExpectedTimesType": {
      "type": "object",
      "description": "Holds the Arrival and Departure Time Information",
      "properties": {
        "reservationExpectedArrivalTime": {
          "description": "Arrival Time",
          "type": "string",
          "format": "date-time"
        },
        "reservationExpectedDepartureTime": {
          "description": "Departure Time",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "reservationBlockType": {
      "type": "object",
      "description": "Key information about the block for a reservation.",
      "properties": {
        "blockIdList": {
          "description": "Collection of unique block identifiers for the reservation.",
          "$ref": "#/definitions/blockIdList"
        },
        "blockName": {
          "description": "The Name of the block that is attached to the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "hotelId": {
          "description": "This is the HotelCode of the Block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "blockIdList": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "resGuaranteeType": {
      "type": "object",
      "description": "Validations type record returned after Validations are done.",
      "properties": {
        "guaranteeCode": {
          "description": "Guarantee Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "shortDescription": {
          "description": "Guarantee Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "onHold": {
          "description": "Guarantee Code.",
          "type": "boolean"
        }
      }
    },
    "promotionType": {
      "type": "object",
      "description": "Type to specify a rate promotion. Usually attached to a reservation to indicate a specific promotion is applied to the reservation.",
      "properties": {
        "promotionCode": {
          "description": "Promotion code associated with the rate plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "promotionName": {
          "description": "Promotion code Name associated with the rate plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "couponCode": {
          "description": "Promotion Coupon Code when promotion is setup to have a valid coupon code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "guestHousekeepingServiceRequestType": {
      "type": "string",
      "description": "Possible values for the Guest Service Status.",
      "enum": [
        "DoNotDisturb",
        "MakeUpRoom",
        "NoStatusSelected"
      ]
    },
    "resGuestInfoType": {
      "type": "object",
      "description": "Specifies Company or Travel Agent profile using IATA or Corp. No.",
      "properties": {
        "membership": {
          "description": "The Membership object identifying the frequent customer reward program.",
          "$ref": "#/definitions/membershipInfoType"
        },
        "namePrefix": {
          "description": "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)",
          "$ref": "#/definitions/namePrefixType"
        },
        "givenName": {
          "description": "Given name, first name or names",
          "$ref": "#/definitions/givenNameType"
        },
        "alternateGivenName": {
          "description": "Alternate given name, first name or names",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "middleName": {
          "description": "The middle name of the person name",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "surnamePrefix": {
          "description": "e.g \"van der\", \"von\", \"de\"",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "surname": {
          "description": "Family name, last name.",
          "$ref": "#/definitions/surnameType"
        },
        "alternateSurname": {
          "description": "Alternate family name, last name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "fullName": {
          "description": "Full display name",
          "type": "string"
        },
        "alternateFullName": {
          "description": "Altername full display name",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Phone number",
          "$ref": "#/definitions/phoneNumberType"
        },
        "email": {
          "description": "Email address",
          "$ref": "#/definitions/basicEmailType"
        },
        "birthDate": {
          "description": "Date of birth",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nationality": {
          "description": "Affiliation or ethnicity to a particular country.",
          "$ref": "#/definitions/countryNameType"
        },
        "vip": {
          "description": "The supplier's ranking of the customer (e.g., VIP, numerical ranking).",
          "$ref": "#/definitions/vIPType"
        },
        "address": {
          "description": "Address information that is attached to the reservation guest",
          "$ref": "#/definitions/addressSearchType"
        },
        "anonymization": {
          "description": "Provides information about the guest's anonymization status",
          "$ref": "#/definitions/anonymizationType"
        },
        "accompanyGuests": {
          "description": "List of guest names that are accompanying the reservation guest",
          "$ref": "#/definitions/resAccompanyGuestListType"
        },
        "externalInfo": {
          "description": "External information about the guest associated with the reservation.",
          "$ref": "#/definitions/resGuestExternalInfoType"
        },
        "guestLastStayInfo": {
          "description": "Contains information regarding the last stay of this guest.",
          "$ref": "#/definitions/guestLastStayInfoType"
        },
        "guestRestrictedCode": {
          "description": "Guest profile restricted reason code",
          "type": "string"
        },
        "guestRestrictedReasonDesc": {
          "description": "Guest profile restricted reason description",
          "type": "string"
        },
        "guestRestricted": {
          "description": "True indicates there are restrictions associated with the current profile.",
          "type": "boolean"
        },
        "registrationCardNo": {
          "description": "Unique identifier of the police registration card number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameType": {
          "$ref": "#/definitions/nameTypeType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "membershipInfoType": {
      "type": "object",
      "description": "The Membership object identifies the frequent customer reward program.",
      "properties": {
        "membershipId": {
          "description": "Membership ID (Unique ID from the memberships table).",
          "type": "number"
        },
        "programCode": {
          "description": "The code or name of the membership program ('Hertz', 'AAdvantage', etc.).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bonusCode": {
          "description": "The code or name of the bonus program. BonusCode can be used to indicate the level of membership (Gold Club, Platinum member, etc.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "membershipTypeDesc": {
          "description": "The description of the ProgramCode.(Delta Previlige for code DP)",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "membershipLevelDesc": {
          "description": "The description of the Bonus Code.(Platinum for code P)",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "accountId": {
          "description": "The account identification number for this particular member in this particular program.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "membershipLevel": {
          "description": "The code or name of the membership level and indicates the level of membership (Gold Club, Platinum member, etc.). This is same as the BonusCode.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        }
      }
    },
    "namePrefixType": {
      "type": "string",
      "description": "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)",
      "minLength": 0,
      "maxLength": 40
    },
    "givenNameType": {
      "type": "string",
      "description": "Given name, first name or names",
      "minLength": 0,
      "maxLength": 40
    },
    "surnameType": {
      "type": "string",
      "description": "Family name, last name.",
      "minLength": 0,
      "maxLength": 40
    },
    "phoneNumberType": {
      "type": "string",
      "description": "Phone number",
      "minLength": 0,
      "maxLength": 40
    },
    "vIPType": {
      "type": "object",
      "description": "The supplier's ranking of the customer.",
      "properties": {
        "vipCode": {
          "description": "VIP Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vipDescription": {
          "description": "VIP Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "addressSearchType": {
      "type": "object",
      "description": "Address Details such as city, state, country, postal code etc.",
      "properties": {
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "streetAddress": {
          "description": "First Line of Street Address. For profile search it matches the first Address line.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "excludeNoCity": {
          "description": "When true indicates that only profiles with city will be fetched.",
          "type": "boolean"
        }
      }
    },
    "resAccompanyGuestListType": {
      "type": "array",
      "description": "Collection of accompany guests",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAccompanyGuestInfoType"
      }
    },
    "resAccompanyGuestInfoType": {
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        },
        "registrationCardNo": {
          "description": "Unique identifier of the police registration card number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
          "$ref": "#/definitions/profileIdList"
        }
      }
    },
    "resGuestExternalInfoType": {
      "type": "object",
      "description": "Specifies Company or Travel Agent profile using IATA or Corp. No.",
      "properties": {
        "givenName": {
          "description": "Given name, first name or names",
          "$ref": "#/definitions/givenNameType"
        },
        "surname": {
          "description": "Family name, last name.",
          "$ref": "#/definitions/surnameType"
        }
      }
    },
    "guestLastStayInfoType": {
      "type": "object",
      "description": "Contains last stay related details of the guest.",
      "properties": {
        "lastStayDate": {
          "description": "Guest's last stay date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastStayRoom": {
          "description": "Room Number where the guest stayed.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "lastStayRate": {
          "description": "The Rate amount of the guest's last stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalStay": {
          "description": "The total number of previous stay of the guest.",
          "type": "integer"
        }
      }
    },
    "nameTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Agent",
        "Contact",
        "Source",
        "Group",
        "Employee",
        "Hotel",
        "Purge"
      ]
    },
    "resSharedGuestListType": {
      "type": "array",
      "description": "Collection of shared guest reservations.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resSharedGuestInfoType"
      }
    },
    "resSharedGuestInfoType": {
      "type": "object",
      "description": "Contains information regarding the share reservation.",
      "properties": {
        "profileId": {
          "$ref": "#/definitions/profileId"
        },
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        }
      }
    },
    "resAttachedProfileListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAttachedProfileType"
      }
    },
    "resAttachedProfileType": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Attached profile name",
          "type": "string"
        },
        "profileIdList": {
          "description": "Collection of unique profile identifiers",
          "$ref": "#/definitions/profileIdList"
        },
        "reservationProfileType": {
          "$ref": "#/definitions/resProfileTypeType"
        }
      }
    },
    "resProfileTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Group",
        "TravelAgent",
        "Source",
        "ReservationContact",
        "BillingContact",
        "Addressee"
      ]
    },
    "reservationPaymentMethodType": {
      "type": "object",
      "properties": {
        "paymentCard": {
          "$ref": "#/definitions/resPaymentCardType"
        },
        "balance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "authorizationRule": {
          "$ref": "#/definitions/authorizationRuleType"
        },
        "emailFolioInfo": {
          "description": "Information on an email for the customer.",
          "type": "object",
          "properties": {
            "email": {
              "description": "eMail deatils for the profile.",
              "$ref": "#/definitions/emailType"
            },
            "emailFolio": {
              "type": "boolean"
            },
            "id": {
              "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "type": {
              "description": "A reference to the type of object defined by the UniqueID element.",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            }
          }
        },
        "paymentMethod": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "folioView": {
          "type": "integer"
        }
      }
    },
    "resPaymentCardType": {
      "type": "object",
      "description": "Information on a credit card for the customer.",
      "properties": {
        "cardId": {
          "description": "credit card id",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "currentAuthorizedAmount": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "approvalAmountNeeded": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "cardType": {
          "description": "Indicates the type of credit card from a defined list",
          "$ref": "#/definitions/cardTypeType"
        },
        "userDefinedCardType": {
          "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
          "type": "string",
          "minLength": 0,
          "maxLength": 2
        },
        "cardNumber": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "cardNumberMasked": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "cardNumberLast4Digits": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "expirationDate": {
          "description": "Expiration date of the credit card",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expirationDateMasked": {
          "description": "Masked Expiration date of the credit card",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "expirationDateExpired": {
          "type": "boolean"
        },
        "cardHolderName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "attachCreditCardToProfile": {
          "description": "Attach the credit card to profile.",
          "type": "boolean"
        },
        "processing": {
          "description": "This contains information on whether EFT is enabled. A value of 'C' indicates EFT is enabled and 'M' indicates manual authorization is available for this payment card type.",
          "$ref": "#/definitions/cardProcessingType"
        },
        "swiped": {
          "type": "boolean"
        },
        "cardPresent": {
          "description": "Flag to determine if the credit card was swiped/manually entered , This element is only used when PAYMENT SERVICE DIRECTIVE(PSD) Opera Control is active.",
          "type": "boolean"
        },
        "cardOrToken": {
          "description": "This contains information on whether credit card is tokenized (token enabled). A value of 'Token' indicates credit card is token enabled and 'CardNumber' indicates non token environment for this payment card type.",
          "$ref": "#/definitions/cardNumberTypeType"
        },
        "citId": {
          "description": "Customer Initiated Transaction(CIT) Id for Credit Cards. This is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        }
      }
    },
    "cardTypeType": {
      "type": "string",
      "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
      "enum": [
        "Ab",
        "Am",
        "Ax",
        "Cb",
        "Dc",
        "Ds",
        "Dt",
        "Ec",
        "Er",
        "Jc",
        "Jl",
        "Mc",
        "Nb",
        "So",
        "St",
        "Sw",
        "Va",
        "Xy",
        "Zz",
        "Cp",
        "Cu"
      ]
    },
    "cardProcessingType": {
      "type": "string",
      "enum": [
        "Eft",
        "Manual"
      ]
    },
    "cardNumberTypeType": {
      "type": "string",
      "description": "Simple type for indicating if credit card number is tokenized.",
      "enum": [
        "CardNumber",
        "Token"
      ]
    },
    "authorizationRuleType": {
      "type": "object",
      "description": "Configured rule for computing the amount to authorize.",
      "properties": {
        "code": {
          "description": "The authorization rule code.",
          "type": "integer",
          "pattern": "[0-9]{1,9}"
        },
        "amount": {
          "description": "The amount applicable to the authorization rule.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "percent": {
          "description": "A percentage value if the authorization rule is percentage based.",
          "type": "number"
        }
      }
    },
    "reservationFolioWindowsType": {
      "type": "array",
      "description": "Collection of reservation folio windows.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationFolioWindowType"
      }
    },
    "reservationFolioWindowType": {
      "type": "object",
      "description": "Folio window view which holds the set of folios for a reservation.",
      "properties": {
        "payeeInfo": {
          "description": "The window's configured payee information.",
          "$ref": "#/definitions/payeeInfoType"
        },
        "balance": {
          "description": "Running balance of the window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "paymentMethod": {
          "description": "Payment Method Type",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioWindowNo": {
          "type": "integer"
        }
      }
    },
    "payeeInfoType": {
      "type": "object",
      "description": "Payee information.",
      "properties": {
        "payeeId": {
          "description": "Opera name id of the payee.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "payeeName": {
          "description": "Name of the payee.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "payeeAddress": {
          "description": "Address of the payee.",
          "$ref": "#/definitions/addressInfoType"
        },
        "payeeAddressCount": {
          "description": "Payee multiple address count.",
          "type": "integer"
        },
        "payeeReferenceCurrency": {
          "description": "Reference currency of the payee.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "payeeAccountInfo": {
          "description": "AR account short info of the payee.",
          "$ref": "#/definitions/aRAccountShortInfoType"
        },
        "payeeTaxNumber": {
          "description": "The tax number of the payee.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "aRAccountShortInfoType": {
      "type": "object",
      "description": "Accounts Receivabales Account details type charged for batched posting.",
      "properties": {
        "accountName": {
          "description": "Name of the AR Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "accountId": {
          "description": "The unique ID for the Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountNo": {
          "description": "The Account Number for the Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "status": {
          "description": "The status of the account.",
          "$ref": "#/definitions/aRAccountStatusType"
        }
      }
    },
    "aRAccountStatusType": {
      "type": "object",
      "description": "Type for the Account Status. Status can be restricted and a message/description added to the Account.",
      "properties": {
        "restriction": {
          "description": "The Restriction Code added on the Account. This is available when the functionality for adding restriction codes is ON.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "User defined status message on the Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "restricted": {
          "description": "Flag to indicate if the Account is restricted.",
          "type": "boolean"
        }
      }
    },
    "housekeepingRoomStatusType": {
      "type": "string",
      "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
      "enum": [
        "Clean",
        "Dirty",
        "Pickup",
        "Inspected",
        "OutOfOrder",
        "OutOfService"
      ]
    },
    "searchMatchesType": {
      "type": "array",
      "description": "List of Generic Name-Value-Pair Parameters used for super search matches.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/searchMatchType"
      }
    },
    "searchMatchType": {
      "type": "object",
      "description": "Search match indicating attribute and the matching value.",
      "properties": {
        "attribute": {
          "description": "Search match attribute.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "value": {
          "description": "Search match value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "sourceOfSaleType": {
      "type": "object",
      "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
      "properties": {
        "sourceType": {
          "description": "Type of entity/channel who made the reservation..",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "sourceCode": {
          "description": "The entity/channel who made the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "waitlistResType": {
      "type": "object",
      "description": "Information regarding why reservation is being /has been waitlisted.",
      "properties": {
        "reasonDescription": {
          "description": "Waitlist Reason Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "priorityDescription": {
          "description": "Waitlist priority Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "description": {
          "description": "Description why the reservation is being /has been waitlisted.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "reasonCode": {
          "description": "Waitlist Reason Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "priorityCode": {
          "description": "Waitlist Priority Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "telephone": {
          "description": "Guest telephone number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "reservationQueueInformationType": {
      "type": "object",
      "description": "Information regarding the Date, Duration and Priority of the reservation on Queue for Check in.",
      "properties": {
        "timeSpan": {
          "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
          "type": "object",
          "properties": {
            "startDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "endDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "duration": {
              "type": "string"
            },
            "durationInSeconds": {
              "description": "The total duration, in seconds, the reservation is on Queue.",
              "type": "integer"
            }
          }
        },
        "guestTextInfo": {
          "description": "Information for the message sent to the user",
          "$ref": "#/definitions/queueTextInfoType"
        },
        "priority": {
          "description": "The Queue Priority given to this reservation.",
          "type": "integer"
        },
        "averageQueueTimeToCheckIn": {
          "description": "The average time, in seconds, a reservation was on queue prior to Check-In.",
          "type": "integer"
        },
        "averageQueueTimeCurrentReservations": {
          "description": "The average time, in seconds, of the reservations currently in queue.",
          "type": "integer"
        },
        "queueDate": {
          "description": "The Business date on which the reservation was due to arrive and is currently placed on Queue for Check In.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "queueTextInfoType": {
      "type": "object",
      "description": "Information regarding the message sent to guest.",
      "properties": {
        "sentTime": {
          "description": "Time the text was last sent to the user.",
          "type": "string",
          "format": "date-time"
        },
        "sentBy": {
          "description": "User name of the user who sent message.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "resHousekeepingType": {
      "type": "object",
      "description": "Holds housekeeping turndown service information for the room.",
      "properties": {
        "instructions": {
          "description": "Turndown instructions for the room.",
          "type": "string"
        },
        "facilityTaskInfo": {
          "description": "The facility task applicable for the current day. This will be information only and not used for any updates.",
          "$ref": "#/definitions/facilityTaskType"
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "turndownRequested": {
          "description": "Indicates whether guest wants turndown facility or not.",
          "type": "boolean"
        },
        "serviceTime": {
          "description": "This is the Turndown room service time.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expectedServiceTime": {
          "description": "Expected Start Time for housekeeping task(s).",
          "type": "string"
        },
        "roomStatus": {
          "description": "Current room status. Current room status is populated only if room is assigned to the reservation and reservation is due in or in house.",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        }
      }
    },
    "facilityTaskType": {
      "type": "object",
      "description": "Information regarding facility task on a reservation.",
      "properties": {
        "task": {
          "description": "The Task Code.",
          "$ref": "#/definitions/housekeepingTaskCodeType"
        },
        "supplies": {
          "description": "Supplies associated with the task.",
          "$ref": "#/definitions/facilityCodesType"
        },
        "date": {
          "description": "The Date on which the task is applicable.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "housekeepingTaskCodeType": {
      "type": "object",
      "description": "Information related to a Task Code. Task Codes are used to generate task sheets in Rooms Management.",
      "properties": {
        "description": {
          "description": "Description of the Task Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "instructions": {
          "description": "Instructions for this Task Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "facilityDepartureTask": {
          "description": "Indicates if this task code is the default departure task for Facility Tasks. This requires",
          "type": "boolean"
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Property where this task code is configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "The Code for the task.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sequence": {
          "description": "Ordering sequence for display.",
          "type": "integer"
        }
      }
    },
    "facilityCodesType": {
      "type": "array",
      "description": "List of the facility codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/facilityCodeType"
      }
    },
    "facilityCodeType": {
      "type": "object",
      "description": "Facility Housekeeping Code, its description and quantity.",
      "properties": {
        "description": {
          "description": "Facility Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "quantity": {
          "description": "Signifies the quantity.",
          "type": "integer"
        },
        "code": {
          "description": "Facility code value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "resCashieringType": {
      "type": "object",
      "description": "Cashiering Information for the reservation.",
      "properties": {
        "revenuesAndBalances": {
          "description": "Revenues and Balances Amount summary for the reservation.",
          "$ref": "#/definitions/resRevenueBalanceType"
        },
        "billingPrivileges": {
          "description": "Billing privileges set on the reservation.",
          "$ref": "#/definitions/billingPrivilegesType"
        },
        "taxType": {
          "description": "This stores the code for the type of tax calculation especially with tax exemption, etc.",
          "$ref": "#/definitions/reservationTaxTypeInfo"
        },
        "bedTaxReporting": {
          "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
          "$ref": "#/definitions/bedTaxReportingType"
        },
        "folioTexts": {
          "description": "Additional text fields to display on the folio.",
          "$ref": "#/definitions/folioTextsType"
        },
        "periodicFolio": {
          "description": "Information regarding periodic folios set on the reservation.",
          "$ref": "#/definitions/resPeriodicFolioType"
        },
        "compAccounting": {
          "description": "Information regarding comp accounting on the reservation.",
          "$ref": "#/definitions/resCompAccountingType"
        },
        "reservationPreConfiguredRoutingInstruction": {
          "description": "Information regarding the selected preconfigured routing instruction on the reservation.",
          "$ref": "#/definitions/resPreConfiguredRoutingInstrType"
        },
        "financiallyResponsible": {
          "description": "The guest from whom payment has to be recovered (direct guest).",
          "type": "boolean"
        },
        "proratedBilling": {
          "description": "In case of Appartment style billing indicates whether a prorated amount should be used for an Apartment Style Billing rate.",
          "type": "boolean"
        },
        "lastRoomAndTaxPostedDate": {
          "description": "Date of the last Room And Tax posting. Used primarily to know the date in case of Advance Billing.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reverseCheckInAllowed": {
          "description": "This attribute is to verify if reverse check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "reverseAdvanceCheckInAllowed": {
          "description": "This attribute is to verify if reverse advance check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "transactionsPosted": {
          "description": "Specifies whether reservation has a financial transaction associated with it.",
          "type": "boolean"
        }
      }
    },
    "resRevenueBalanceType": {
      "type": "object",
      "description": "Revenue and Balance Amount summary for the reservation.",
      "properties": {
        "totalFixedCharge": {
          "description": "Total Fixed Charges on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalPayment": {
          "description": "Total payment received for the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "roomRevenue": {
          "description": "Room Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "foodAndBevRevenue": {
          "description": "Food and Beverage Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "otherRevenue": {
          "description": "Other Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "nonRevenue": {
          "description": "Total Non Revenue posted on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalRevenue": {
          "description": "Total Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Balance amount on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "billingPrivilegesType": {
      "type": "object",
      "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
      "properties": {
        "postingRestriction": {
          "description": "Flag used by interface program during check in.",
          "type": "boolean"
        },
        "preStayCharging": {
          "description": "Indicates if the reservation has charging privileges before arrival.",
          "type": "boolean"
        },
        "postStayCharging": {
          "description": "Indicates if the reservation has charging privileges after checkout.",
          "type": "boolean"
        },
        "folioCloseDate": {
          "description": "Date when folio was closed. This works with PostStayCharging flag.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "scheduledCheckout": {
          "description": "Indicates if the guest is scheduled for automatic check out.",
          "type": "boolean"
        },
        "scheduledCheckoutTime": {
          "description": "Time of automatic check out if guest is schedule for automatic check out.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "directBillAuthorized": {
          "description": "If Direct bill is authorized this will hold User ID who authorized it.",
          "type": "boolean"
        },
        "videoCheckout": {
          "description": "Indicates if the guest can do video checkout",
          "type": "boolean"
        },
        "allowAutoCheckin": {
          "description": "Indicated if a new reservation should be created and automatically checked in whenever the room is checked out. Available for pseudo room types only.",
          "type": "boolean"
        },
        "autoSettlement": {
          "description": "Indicates if the is a candidate for auto folio settlement.",
          "type": "boolean"
        },
        "autoSettlementType": {
          "description": "The folio settlement type for auto folio settlement.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "autoSettlementFreq": {
          "description": "The interval of days between each auto folio settlement.",
          "type": "integer"
        },
        "creditLimitAutoPay": {
          "description": "Indicates if the reservation will be included in the Automatic Credit Limit Overages process and also be listed in the Credit Limit Overages screen results.",
          "type": "boolean"
        }
      }
    },
    "reservationTaxTypeInfo": {
      "type": "object",
      "description": "Provides information about the Tax Type.",
      "properties": {
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Code of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "collectingAgentTax": {
          "description": "A boolean flag for Collecting Agent Tax",
          "type": "boolean"
        },
        "printAutoAdjust": {
          "description": "Print auto adjust information for this tax type on the tax exempt report.",
          "type": "boolean"
        },
        "reportExemptDays": {
          "description": "Number of days after which the guest will be tax exempt. Only used for tax exempt report.",
          "type": "integer"
        },
        "reportTaxPercentage": {
          "description": "Tax percentage. Only used for tax exempt report.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "minimumLengthOfStay": {
          "description": "Minimun Length of Stay.",
          "type": "integer"
        },
        "taxExemptNo": {
          "description": "Tax exempt number on the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "bedTaxReportingType": {
      "type": "object",
      "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
      "properties": {
        "taxRegistrationNo": {
          "description": "Tax Registration Number for Maldives Bed Tax Reporting.",
          "type": "number"
        },
        "visaNumber": {
          "description": "Visa number used for Maldives Bed Tax Reporting",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "visaIssueDate": {
          "description": "Visa Issue Date used for Maldives Bed Tax Reporting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaExpiryDate": {
          "description": "Visa Expiration Date used for Maldives Bed Tax Reporting",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "taxableDays": {
          "description": "Number of days for which the Maldives tax is applicable.",
          "type": "integer"
        }
      }
    },
    "folioTextsType": {
      "type": "array",
      "description": "This stores the description for the type of tax calculation especially with tax exemption, etc.",
      "maxItems": 2,
      "items": {
        "type": "object",
        "properties": {
          "text": {
            "description": "Additional text field to display on the folio.",
            "type": "string",
            "minLength": 0,
            "maxLength": 50
          },
          "row": {
            "description": "Row number of the additional text.",
            "type": "integer"
          }
        }
      }
    },
    "resPeriodicFolioType": {
      "type": "object",
      "description": "Information regarding periodic folios set on the reservation.",
      "properties": {
        "lastSettlementDate": {
          "description": "Latest date when a direct bill settlement was automatically done using the \"Direct Bill Batch Folios\" option.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastFolioDate": {
          "description": "Latest date when a folio was printed using the \"Periodic Batch Folios\" option",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "frequency": {
          "description": "Frequency in number of days when folios should be printed for this reservation.",
          "type": "integer"
        }
      }
    },
    "resCompAccountingType": {
      "type": "object",
      "description": "Information regarding comp accounting on the reservation.",
      "properties": {
        "compType": {
          "description": "Code used to identify the casino comp type and ranking of a guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "authorizer": {
          "description": "ID of the employee who will act as the host for this guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "compPostings": {
          "description": "Indicates if the Comp Billing/posting Exist",
          "type": "string",
          "minLength": 0,
          "maxLength": 5
        }
      }
    },
    "resPreConfiguredRoutingInstrType": {
      "type": "object",
      "description": "Instruction to attach Pre-Configured Routing Instructions to a Reservation.",
      "properties": {
        "authorizerInfo": {
          "description": "The authorizer information for Promotion Code with attached Complimentary Routing",
          "$ref": "#/definitions/authorizerInfoType"
        },
        "ratePlanCode": {
          "description": "Rate Code with attached Routing Instruction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "profileType": {
          "description": "Profile Type with attached Routing Instruction.",
          "$ref": "#/definitions/resProfileTypeType"
        },
        "promotionCode": {
          "description": "Promotion Code with attached Complimentary Routing.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "authorizerInfoType": {
      "type": "object",
      "description": "Authorizer Information",
      "properties": {
        "authorizerId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "authorizerUserName": {
          "description": "Application user name of the authorizer",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "authorizerName": {
          "description": "Full name of the authorizer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "authorizerRateCode": {
          "description": "Rate code of the authorizer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "inheritAuthorizerRateCode": {
          "description": "Indicates whether user has the choice to have reservation inherit rate code from the authorizer.",
          "type": "boolean"
        }
      }
    },
    "taxTypeType": {
      "type": "object",
      "description": "Provides information about the Tax Type.",
      "properties": {
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Code of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "collectingAgentTax": {
          "description": "A boolean flag for Collecting Agent Tax",
          "type": "boolean"
        },
        "printAutoAdjust": {
          "description": "Print auto adjust information for this tax type on the tax exempt report.",
          "type": "boolean"
        },
        "reportExemptDays": {
          "description": "Number of days after which the guest will be tax exempt. Only used for tax exempt report.",
          "type": "integer"
        },
        "reportTaxPercentage": {
          "description": "Tax percentage. Only used for tax exempt report.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "minimumLengthOfStay": {
          "description": "Minimun Length of Stay.",
          "type": "integer"
        }
      }
    },
    "reservationDepositType": {
      "type": "object",
      "description": "Reservation Deposit Type.",
      "properties": {
        "amountRequired": {
          "description": "Deposit Amount Required.",
          "type": "number"
        },
        "amountPaid": {
          "description": "Deposit Amount Paid.",
          "type": "number"
        },
        "amountOwed": {
          "description": "Deposit Amount Owed.",
          "type": "number"
        },
        "dueDate": {
          "description": "Deposit Due Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "postingDate": {
          "description": "Deposit Posting Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hasPaid": {
          "description": "Resolves whether reservation has paid deposit.",
          "type": "boolean"
        },
        "hasOutstanding": {
          "description": "Resolves whether reservation has outstanding deposit.",
          "type": "boolean"
        }
      }
    },
    "reservationAllowedActionsType": {
      "type": "array",
      "description": "Allowed action.",
      "maxItems": 11,
      "items": {
        "$ref": "#/definitions/reservationAllowedActionType"
      }
    },
    "reservationAllowedActionType": {
      "type": "string",
      "description": "Flag indicating whether the Enrollment is in progress or not for the Profile associated with this Reservation.",
      "enum": [
        "Cancel",
        "Move",
        "PreCharge",
        "PostCharge",
        "FacilitySchedule",
        "Upsell",
        "PreCheckIn",
        "PostToNoShowCancel",
        "NoShow",
        "NameChange",
        "Discount",
        "EnrollToPrimaryMembership",
        "EnrollInProgress"
      ]
    },
    "reservationInterfaceStatusType": {
      "type": "object",
      "description": "Hotel Interface Type for a reservation and status of the various services",
      "properties": {
        "roomExtension": {
          "description": "Identifier for the room extension",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelInterface": {
          "description": "Hotel interface information for the reservation",
          "$ref": "#/definitions/hotelInterfaceType"
        },
        "interfaceRights": {
          "description": "Contains a list of status/rights for the various services under this interface",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/interfaceRightsStatusType"
          }
        }
      }
    },
    "hotelInterfaceType": {
      "type": "object",
      "properties": {
        "interfaceId": {
          "description": "Unique DB internal number of a Hotel Interface record.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "Hotel Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "interfaceName": {
          "description": "Name of the Hotel Interface",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "interfaceType": {
          "description": "Three letter code for each interface that identifies the interface.",
          "$ref": "#/definitions/hotelInterfaceTypeType"
        },
        "logo": {
          "description": "Hotel Interface Logo. On the database, this is also referred as DBF Logo. This is a three letter code followed by an underscore(_). This tells us which DBF files and log files with the prefix that IFC7 is going to create.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "machineName": {
          "description": "Unique machine name of the running IFC.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "status": {
          "description": "The current status of the IFC.",
          "$ref": "#/definitions/hotelInterfaceStatusType"
        },
        "activeFlag": {
          "description": "Indicator if the Hotel Interface is active or not. This is different from the Interface Status, which is either STOPPED or RUNNING.",
          "type": "boolean"
        }
      }
    },
    "hotelInterfaceTypeType": {
      "type": "string",
      "enum": [
        "Bms",
        "Cas",
        "Ccw",
        "Dls",
        "Eft",
        "Exp",
        "Mak",
        "Mbs",
        "Msc",
        "Pbx",
        "Pos",
        "Svs",
        "Tik",
        "Vid",
        "Vms",
        "Www",
        "Xml"
      ],
      "description": "XML Posting Interface"
    },
    "hotelInterfaceStatusType": {
      "type": "string",
      "description": "Status of the Hotel Interface either STOPPED or RUNNING.",
      "enum": [
        "Stopped",
        "Running",
        "Waiting",
        "StopInitiated",
        "StartInitiated",
        "RebootInitiated",
        "Other"
      ]
    },
    "interfaceRightsStatusType": {
      "type": "object",
      "properties": {
        "right": {
          "description": "Internal code for each allowed right of a Hotel Interface record.",
          "type": "integer"
        },
        "statusCode": {
          "description": "User defined code for an Interface Right.",
          "type": "string",
          "minLength": 0,
          "maxLength": 5
        },
        "description": {
          "description": "User defined description for an Interface Right.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "category": {
          "description": "Category code of this interface right.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        }
      }
    },
    "reservationTurndownInfoType": {
      "type": "object",
      "description": "Turndown information for a reservation",
      "properties": {
        "allowed": {
          "description": "Indicates if turndown is allowed or not",
          "type": "boolean"
        },
        "status": {
          "description": "Indicates turndown status, values could be required, not required, completed",
          "$ref": "#/definitions/turndownStatusType"
        }
      }
    },
    "turndownStatusType": {
      "type": "string",
      "description": "Simple type for turndown status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Required, Not Required and Completed.",
      "enum": [
        "Required",
        "NotRequired",
        "Compeleted"
      ]
    },
    "resMobileNotificationsType": {
      "type": "object",
      "description": "Contains the status of Room Ready and Key Ready messages.",
      "properties": {
        "roomReady": {
          "description": "Denotes the status of Room Ready message. It can have one of the values:PENDING, COMPLETED or FAILED",
          "$ref": "#/definitions/communicationStatusType"
        },
        "keyReady": {
          "description": "Denotes the status of Key Ready message. It can have one of the values:PENDING, COMPLETED or FAILED",
          "$ref": "#/definitions/communicationStatusType"
        },
        "checkoutMessageReceived": {
          "description": "Indicates if the Mobile checkout message is received.",
          "type": "boolean"
        },
        "requiresAction": {
          "description": "Indicates if user action is required. The action could be for sending Room Ready or Key Ready Notification. It could also be for initiating Checkout",
          "type": "boolean"
        },
        "errorMessage": {
          "description": "Error message when Mobile Notification has failed.",
          "type": "string"
        }
      }
    },
    "communicationStatusType": {
      "type": "string",
      "description": "Enum to denote the Status of Readiness messages sent to Guest Devices.",
      "enum": [
        "Pending",
        "Completed",
        "Failed",
        "Sent",
        "Received",
        "Cancelled",
        "PendingAvailability"
      ]
    },
    "resCommunicationType": {
      "type": "object",
      "description": "Communication details for a reservation.",
      "properties": {
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        }
      }
    },
    "advanceCheckInType": {
      "type": "object",
      "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
      "properties": {
        "advanceCheckedIn": {
          "description": "Indicates if the reservation is marked as Advance Checked In",
          "type": "boolean"
        },
        "expectedReturnTime": {
          "description": "Expected Return Time",
          "type": "string",
          "format": "date-time"
        },
        "eTRComments": {
          "description": "ETR Comments",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "pMS_ResStatusType": {
      "type": "string",
      "description": "This reservation is in checked in status and the business date is past departure date. This could occur when ORS and PMS are in same environment.",
      "enum": [
        "Reserved",
        "Requested",
        "NoShow",
        "Cancelled",
        "InHouse",
        "CheckedOut",
        "Waitlisted",
        "DueIn",
        "DueOut",
        "Walkin",
        "PendingCheckout"
      ]
    },
    "resAccessRestrictionType": {
      "type": "string",
      "description": "Indicates any Updates/Changes on the reservation as well as Reservation Cancellation are not allowed.",
      "enum": [
        "Change",
        "Cancel",
        "ChangeOrCancel"
      ]
    },
    "commissionPayoutToType": {
      "type": "string",
      "enum": [
        "TravelAgent",
        "Source",
        "TravelAgentSource",
        "None"
      ]
    },
    "futureListType": {
      "type": "object",
      "description": "A collection of reservation history details attached to Profiles.",
      "properties": {
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : Future reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationInfoType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "reservationStayHistoryFutureInfoType": {
      "type": "object",
      "description": "Information of History and Future Reservation details attached to Profiles.",
      "properties": {
        "historyList": {
          "description": "Refer to History list type document.",
          "$ref": "#/definitions/stayHistoryListType"
        },
        "futureList": {
          "description": "Refer to Future list type document.",
          "$ref": "#/definitions/stayFutureListType"
        }
      }
    },
    "stayHistoryListType": {
      "type": "object",
      "description": "A collection of reservation history details attached to Profiles.",
      "properties": {
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : History reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/stayReservationInfoType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "stayReservationInfoType": {
      "type": "object",
      "description": "The Reservation class contains the current reservation being created or altered.",
      "properties": {
        "reservationIdList": {
          "description": "Unique identifiers for the reservation for both internal and external systems",
          "$ref": "#/definitions/reservationIdList"
        },
        "roomStay": {
          "description": "Collection of room stays.",
          "$ref": "#/definitions/stayInfoType"
        },
        "attachedProfiles": {
          "description": "List of attached profiles",
          "$ref": "#/definitions/resAttachedProfileListType"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "computedReservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        }
      }
    },
    "stayFutureListType": {
      "type": "object",
      "description": "A collection of reservation history details attached to Profiles.",
      "properties": {
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : Future reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/stayReservationInfoType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "lastStayInfoType": {
      "type": "object",
      "description": "Contains last stay related details for the profile",
      "properties": {
        "lastVisit": {
          "description": "Used to hold last stay information for the profile.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastRoom": {
          "description": "Used to hold last room information for the profile.",
          "type": "string"
        },
        "lastRate": {
          "description": "Used to hold last rate information for the profile.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalStay": {
          "description": "The total number of previous stay of the profile.",
          "type": "integer"
        }
      }
    },
    "profileAccessType": {
      "type": "object",
      "properties": {
        "chainCode": {
          "description": "Indicates the Chain code where the profile was created",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "croCode": {
          "description": "Indicates the CRO code where the profile was created",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "hotelId": {
          "description": "Indicates the Hotel code where the profile was created",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "sharedLevel": {
          "description": "Indicates whether the profile is shared at the following levels : global/property/CRO",
          "$ref": "#/definitions/profileSharedLevelType"
        }
      }
    },
    "profileSharedLevelType": {
      "type": "string",
      "description": "Simple types for Shared level.",
      "enum": [
        "Global",
        "Property",
        "Cro"
      ]
    },
    "profileRestrictions": {
      "type": "object",
      "properties": {
        "reason": {
          "description": "Restriction reason associated with the current profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reasonDescription": {
          "description": "Description of restriction reason.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "restricted": {
          "description": "True indicates there are restrictions associated with the current profile.",
          "type": "boolean"
        }
      }
    },
    "mailingActionsType": {
      "type": "object",
      "description": "Defines mailing action list for the profile.",
      "properties": {
        "mailingAction": {
          "description": "Defines mailing action code and description.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeDescriptionType"
          }
        },
        "active": {
          "description": "When true indicates that profile has subscribed to the mailing list.",
          "type": "boolean"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "privacyInfoType": {
      "type": "object",
      "description": "Defines Privacy related information for the profile.",
      "properties": {
        "marketResearchParticipation": {
          "description": "Indicates if the profile participates in market research.",
          "type": "boolean"
        },
        "lastPrivacyPromptDate": {
          "description": "Indicate the last privacy prompt date of the guest.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "infoFromThirdParty": {
          "description": "Indicates if the profile is ok getting info from third parties.",
          "type": "boolean"
        },
        "autoEnrollLoyaltyProgram": {
          "description": "Indicates if the profile wishes to be automatically enrolled in the property's loyalty program.",
          "type": "boolean"
        },
        "allowPhone": {
          "description": "Indicates if the profile wishes to allow phone calls.",
          "type": "boolean"
        },
        "allowSMS": {
          "description": "Indicates if the profile wishes to allow SMS.",
          "type": "boolean"
        },
        "allowEmail": {
          "description": "Indicates if the profile wishes to allow Email.",
          "type": "boolean"
        },
        "optInMailingList": {
          "description": "Indicates if the profile wishes to opt in for Mailing List.",
          "type": "boolean"
        },
        "optInMarketResearch": {
          "description": "Indicates if the profile wishes to opt in for Market Research.",
          "type": "boolean"
        },
        "optInThirdParty": {
          "description": "Indicates if the profile wishes to opt in for Third Party.",
          "type": "boolean"
        },
        "optInAutoEnrollmentMember": {
          "description": "Indicates if the profile wishes to opt in for Auto Enrolment Member.",
          "type": "boolean"
        },
        "optInPhone": {
          "description": "Indicates if the profile wishes to opt in for Phone.",
          "type": "boolean"
        },
        "optInSms": {
          "description": "Indicates if the profile wishes to opt in for SMS.",
          "type": "boolean"
        },
        "optInEmail": {
          "description": "Indicates if the profile wishes to opt in for Email.",
          "type": "boolean"
        }
      }
    },
    "profileCashieringType": {
      "type": "object",
      "description": "Contains cashiering related details for the profile",
      "properties": {
        "directBillingList": {
          "description": "Contains the direct billing related information for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/directBillingType"
          }
        },
        "autoFolioSettlementType": {
          "description": "Contains the auto folio settlement type for the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "paymentDueDays": {
          "description": "Ability to define on the account, the number of days after which the invoice should be paid.",
          "type": "integer"
        },
        "taxPercent1": {
          "description": "Tax1 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "taxPercent2": {
          "description": "Tax2 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "taxPercent3": {
          "description": "Tax3 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "taxPercent4": {
          "description": "Tax4 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "taxPercent5": {
          "description": "Tax5 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "arNoCentral": {
          "description": "Account Receivables Central Number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "referenceCurrency": {
          "description": "Reference Currency.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vATOffsetYN": {
          "description": "VAT Offset Flag.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        }
      }
    },
    "directBillingType": {
      "type": "object",
      "description": "This is the preconfigured routing instruction type.",
      "properties": {
        "hotelId": {
          "description": "Hotel Code for which the details of direct billing is provided for a profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "aRNumber": {
          "description": "Hotel Code for which the details of direct billing is provided for a profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "profileCommissionType": {
      "type": "object",
      "description": "This is the preconfigured routing instruction type.",
      "properties": {
        "hotelId": {
          "description": "Hotel Code for the commission being used for a profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "commissionCode": {
          "description": "commission Code for a profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bankAccount": {
          "description": "Bank account used for the commission for a profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "paymentMethod": {
          "description": "Type of payment associated with the bank account.",
          "$ref": "#/definitions/commissionPaymentMethods"
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        }
      }
    },
    "commissionPaymentMethods": {
      "type": "string",
      "description": "Check",
      "enum": [
        "Cent",
        "Eft",
        "Chk"
      ]
    },
    "userDefinedFieldsType": {
      "type": "object",
      "description": "A common type used to hold user defined fields(UDFs). This type should be used to handle UDFs on RReservation, Profiles, etc.",
      "properties": {
        "characterUDFs": {
          "description": "Collection of user defined fields of Character/String Type.",
          "$ref": "#/definitions/characterUDFsType"
        },
        "numericUDFs": {
          "description": "Collection of user defined fields of Numeric Type.",
          "$ref": "#/definitions/numericUDFsType"
        },
        "dateUDFs": {
          "description": "Collection of user defined fields of Date Type.",
          "$ref": "#/definitions/dateUDFsType"
        }
      }
    },
    "characterUDFsType": {
      "type": "array",
      "description": "Used to hold collection of user defined fields of Character/String Type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/characterUDFType"
      }
    },
    "characterUDFType": {
      "type": "object",
      "description": "Used to hold user defined field of Character/String Type.",
      "properties": {
        "name": {
          "description": "Used to hold user defined field of Character Type. It is highly recommended to use UDFC01, UDFC02,...UDFC40 (Total 40) as Character/String UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "numericUDFsType": {
      "type": "array",
      "description": "Used to hold collection of user defined fields of Numeric Type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/numericUDFType"
      }
    },
    "numericUDFType": {
      "type": "object",
      "description": "Used to hold user defined field of Numeric Type. It is highly recommended to use UDFN01, UDFN02,...UDFN40 (Total 40) as Numeric UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
      "properties": {
        "name": {
          "description": "Name of user defined field.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "number"
        },
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "dateUDFsType": {
      "type": "array",
      "description": "Used to hold collection of user defined fields of Date Type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/dateUDFType"
      }
    },
    "dateUDFType": {
      "type": "object",
      "description": "Used to hold user defined field of Date Type.",
      "properties": {
        "name": {
          "description": "Used to hold user defined field of Date Type. It is highly recommended to use UDFD01, UDFD02,...UDFN20 (Total 20) as Date UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "webUserAccountsType": {
      "type": "array",
      "description": "Web User Accounts List.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/webUserAccountType"
      }
    },
    "webUserAccountType": {
      "type": "object",
      "description": "Web User Account of the guest.",
      "properties": {
        "securityQuestion": {
          "description": "Security Question and its Code associated with the account to verify the user.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "securityAnswer": {
          "description": "Answer to the Security Question.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "comments": {
          "description": "Comments.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "history": {
          "description": "Web User Account History.",
          "$ref": "#/definitions/webUserHistoryType"
        },
        "newLoginName": {
          "description": "New Login Name of the guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "newPassword": {
          "description": "Login Password.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "autoGeneratePassword": {
          "description": "A flag which determines if the password is auto generated.",
          "type": "boolean"
        },
        "loginName": {
          "description": "Login Name of the guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "domainCode": {
          "description": "Domain code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "locked": {
          "description": "Boolean flag that indicates whether the web account is locked or not.",
          "type": "boolean"
        },
        "inactive": {
          "description": "Boolean flag that indicates whether the web account is inactive or not.",
          "type": "boolean"
        }
      }
    },
    "webUserHistoryType": {
      "type": "object",
      "description": "Creation date time, Creator Id, last modification date time and last Modifier Id.",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastLogin": {
          "description": "Last login date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastPasswordChange": {
          "description": "Last Password change date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "inactiveDate": {
          "description": "Inactive date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "profileTaxInfoType": {
      "type": "object",
      "description": "Profile information related to tax.",
      "properties": {
        "tax1No": {
          "description": "The tax id of this profile. Usually issued by a government agency. Used by 1099 printing.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "tax2No": {
          "description": "Tax 2 id of this profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "taxCategory": {
          "description": "Tax Category to be changed.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "taxOffice": {
          "description": "Tax Office to be changed.",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        },
        "taxType": {
          "description": "Tax type to be changed.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "businessId": {
          "description": "Business ID. The maximum length of this element should not exceed 120 characters.",
          "type": "string",
          "minLength": 0,
          "maxLength": 128
        },
        "businessRegistration": {
          "description": "Business Registration Code. The maximum length of this element should not exceed 120 characters.",
          "type": "string",
          "minLength": 0,
          "maxLength": 128
        }
      }
    },
    "salesInfoType": {
      "type": "object",
      "description": "Provides sales information about the profiles of type company, travel agent, source and contact.",
      "properties": {
        "scope": {
          "description": "Defines the scope.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "scopeCity": {
          "description": "Defines the scope city.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "accountType": {
          "description": "Defines the account type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "accountSource": {
          "description": "Defines the account source.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "industryCode": {
          "description": "Defines the industry code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "businessSegments": {
          "description": "Defines the Business segments.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "priority": {
          "description": "Defines the priority.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "roomsPotential": {
          "description": "Defines the rooms potential.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "actionCode": {
          "description": "Defines the action code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "competitionCode": {
          "description": "Defines the competition code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "influence": {
          "description": "Defines the influence for the contact profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "preferredRoom": {
          "description": "Defines the Preferred Room for profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel Code used to filter the sales information.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "eCertificatesType": {
      "type": "array",
      "description": "List of e-certificates for the profile.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/eCertificateType"
      }
    },
    "eCertificateType": {
      "type": "object",
      "description": "E-Certificates details.",
      "properties": {
        "certificateId": {
          "description": "System generated unique certificate id.",
          "type": "integer"
        },
        "voucherNo": {
          "description": "System generated unique voucher number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "certificateNo": {
          "description": "Printed certificate no. This has to be unique.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "eCertificateInfo": {
          "$ref": "#/definitions/eCertificateInfoType"
        },
        "expiryDate": {
          "description": "Date of expiry.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "newExpiryDate": {
          "description": "New Date of expiry to extend e-certificate.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "profileId": {
          "description": "NameId.",
          "$ref": "#/definitions/profileId"
        },
        "consumptionDetail": {
          "$ref": "#/definitions/eCertificateConsumptionType"
        },
        "status": {
          "description": "Status of the certificate.",
          "$ref": "#/definitions/eCertificateStatusType"
        },
        "printed": {
          "description": "Print status of the certificate.",
          "type": "boolean"
        },
        "inactiveDate": {
          "description": "Date the record was marked as inactive.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "awardId": {
          "description": "AwardID.",
          "$ref": "#/definitions/awardId"
        },
        "databaseId": {
          "description": "External reference from which the record is created.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "source": {
          "description": "Source of e-certificate.",
          "$ref": "#/definitions/eCertificateIssueSourceType"
        },
        "issueType": {
          "description": "Process action issued the certificate. valid values are assigned (a),opt in (o) and purchased (p).",
          "$ref": "#/definitions/eCertificateIssueType"
        },
        "issueDate": {
          "description": "Date when certificate was issued.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "awardPoints": {
          "description": "Award points if any in case of certificate use membership award.",
          "type": "integer"
        },
        "generationDetail": {
          "$ref": "#/definitions/eCertificateGenerationType"
        },
        "originalVoucherNo": {
          "description": "In case of in lieu of certificate this will contain the original voucher no.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "originalCertificateNo": {
          "description": "In case of in lieu of certificate this will contain the original certificate no.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "inLieuSequence": {
          "description": "Seq of the in lieu of certificate. 1..n. original certificate will be treated as null = 0.",
          "type": "integer"
        },
        "cancelRequestDate": {
          "description": "Date on which the cancellation was requested.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "extensionCount": {
          "description": "Number of times e-certificate is already extended.",
          "type": "integer"
        }
      }
    },
    "eCertificateInfoType": {
      "type": "object",
      "description": "E-Certificates details.",
      "properties": {
        "certificateType": {
          "description": "User defined certificate code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "membershipType": {
          "description": "Membership type to which the certificate is linked to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "awardCode": {
          "description": "Award type to which the certificate is linked to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "promotionCode": {
          "description": "Promotion code to which certificate is attached to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "voucherBenefitCode": {
          "description": "Voucher benefit code attached to the certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "hotels": {
          "description": "Hotel to which certificate is attached to.",
          "type": "object",
          "properties": {
            "code": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "type": "string",
                "minLength": 0,
                "maxLength": 20
              }
            },
            "scope": {
              "description": "Scope of e-cert: global,single property or multi property.",
              "$ref": "#/definitions/eCertificateScopeType"
            }
          }
        },
        "description": {
          "description": "Description about the certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "longDescription": {
          "description": "Detail description about the certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "label": {
          "description": "Label for the certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "maxExtensionAllowed": {
          "description": "Number of times e-certificate can be extended.",
          "type": "integer"
        },
        "usageCriteria": {
          "$ref": "#/definitions/eCertificateUsageCriteriaType"
        },
        "value": {
          "description": "Value of the certificate for the guest.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "cost": {
          "description": "Cost of certificate.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "benefitSummary": {
          "description": "Summary of Benefits attached to this ECertificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        }
      }
    },
    "eCertificateScopeType": {
      "type": "string",
      "description": "Indicates that OPERA E-Certificate is available for a specific list of hotels.",
      "enum": [
        "Global",
        "Hotel",
        "MultiHotel"
      ]
    },
    "eCertificateUsageCriteriaType": {
      "type": "object",
      "description": "E-Certificates details.",
      "properties": {
        "reservation": {
          "description": "Indicates if certificate is to be used against reservation or not.",
          "type": "boolean"
        },
        "web": {
          "description": "Indicates if web certificate can be consumed in OWS.",
          "type": "boolean"
        },
        "webAllowed": {
          "description": "Indicates if certificate consumption allowable on the web.",
          "type": "boolean"
        },
        "benefit": {
          "description": "Indicates to attach a rate code to the e-certificate as a benefit.",
          "type": "boolean"
        },
        "hotel": {
          "description": "Indicates if web certificate can be consumed in hotel.",
          "type": "boolean"
        },
        "verifyCertificateNo": {
          "description": "Specify if the certificate number verification is required at time of consumption or not.",
          "type": "boolean"
        },
        "cancelAllowed": {
          "description": "Identify if cancel is allowed or not.",
          "type": "boolean"
        },
        "generateInLieuCertificate": {
          "description": "Identify if in lieu of certificate can be generated or not.",
          "type": "boolean"
        }
      }
    },
    "eCertificateConsumptionType": {
      "type": "object",
      "description": "E-Certificates details.",
      "properties": {
        "hotelId": {
          "description": "Property where certificate was consumed for.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "source": {
          "description": "Source of consumption.",
          "$ref": "#/definitions/eCertificateConsumeSourceType"
        },
        "surname": {
          "description": "Last name of the person who consumed the certificate..",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "firstName": {
          "description": "First name of the person who consumed the certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "middleName": {
          "description": "Middle name of the person who consumed the certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "email": {
          "description": "Email of the person who consumed the certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "date": {
          "description": "Date the certificate was consumed.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "userName": {
          "description": "Application user who created the consumption.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "userNotes": {
          "description": "Any notes on the certificate entered at time of consumption.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "referenceId": {
          "description": "Any reference like reservation no etc against which the certificate was consumed.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "locationType": {
          "description": "Consumption location type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "authorizationCode": {
          "description": "Authorization code for consumption.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "serviceDate": {
          "description": "Date on which the service is due (arrival date in case of reservation).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "eCertificateConsumeSourceType": {
      "type": "string",
      "description": "Indicates that OPERA E-Certificate is consumed by hotelPMS.",
      "enum": [
        "Central",
        "Web",
        "Hotel"
      ]
    },
    "eCertificateStatusType": {
      "type": "string",
      "description": "Indicates that OPERA E-Certificate is reserved.",
      "enum": [
        "Cancelled",
        "Consumed",
        "Deleted",
        "Expired",
        "Issued",
        "Reserved"
      ]
    },
    "awardId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "eCertificateIssueSourceType": {
      "type": "string",
      "description": "Indicates that OPERA E-Certificate is issued by external system.",
      "enum": [
        "Opera",
        "Web",
        "Interface"
      ]
    },
    "eCertificateIssueType": {
      "type": "string",
      "description": "Indicates that guest purchased OPERA E-Certificate.",
      "enum": [
        "Assigned",
        "OptedIn",
        "Purchased"
      ]
    },
    "eCertificateGenerationType": {
      "type": "object",
      "description": "E-Certificates details.",
      "properties": {
        "ruleId": {
          "description": "Key to identify the generation rule id.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "generationDetail": {
          "description": "Reason for which e-certificate was generated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "referenceValue": {
          "description": "Type of value that is in the certificate.valid values are membership_level.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "profileSubscriptionListType": {
      "type": "array",
      "description": "Details of the OPERA Profile subscription to external system",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/profileSubscriptionType"
      }
    },
    "profileSubscriptionType": {
      "type": "object",
      "description": "Contains details of the profile subscription. The subscription represents the link between the OPERA profile and the external profile within a particular external system",
      "properties": {
        "profileId": {
          "description": "OPERA Profile ID that this subscription record corresponds to.",
          "$ref": "#/definitions/profileId"
        },
        "externalProfileId": {
          "description": "Profile ID within the external system.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "profileInfo": {
          "description": "This provides name information for a person.",
          "type": "object",
          "properties": {
            "name": {
              "description": "Family name, last name or Company Name.",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            },
            "fullName": {
              "description": "Full display Name.",
              "type": "string",
              "minLength": 0,
              "maxLength": 200
            },
            "namePrefix": {
              "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            },
            "givenName": {
              "description": "Given name, first name or names.",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            },
            "middleName": {
              "description": "The middle name of the person name.",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            },
            "nameSuffix": {
              "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            },
            "nameTitle": {
              "description": "Degree or honors (e.g., Ph.D., M.D.)",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "nameType": {
              "description": "Type of name of the individual, such as former, nickname, alternate or alias name.",
              "$ref": "#/definitions/personNameTypeType"
            },
            "profileType": {
              "description": "OPERA profile type such as Individual or Company",
              "$ref": "#/definitions/profileTypeType"
            }
          }
        },
        "distributed": {
          "description": "Indicates if the profile was distributed to the external system.",
          "type": "boolean"
        },
        "force": {
          "description": "Indicates if the profile information should be overwritten by the external system.",
          "type": "boolean"
        },
        "subscriptionDate": {
          "description": "Timestamp when the profile was subscribed to.",
          "type": "string",
          "format": "date-time"
        },
        "lastDistributionDate": {
          "description": "Timestamp of the most recent distribution of this profile to the external system.",
          "type": "string",
          "format": "date-time"
        },
        "lastExternalUpdateDate": {
          "description": "Timestamp of the most recent update of the subscription information by the external system.",
          "type": "string",
          "format": "date-time"
        },
        "inactive": {
          "description": "Indicates whether this subscription is active or inactive.",
          "type": "boolean"
        },
        "systemCode": {
          "description": "Code of system where profile is subscribed to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "systemType": {
          "description": "Type of system where profile is subscribed to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "guestCountsType": {
      "type": "object",
      "description": "A collection of GuestCount by age group.",
      "properties": {
        "childAges": {
          "description": "Defines Children's Ages. Number of children ages mentioned may mot match with children counts.",
          "$ref": "#/definitions/childAgesType"
        },
        "childBuckets": {
          "description": "Defines children counts with Age Qualifying Group(Child Bucket#1) classification.",
          "$ref": "#/definitions/childBucketsType"
        },
        "adults": {
          "description": "Defines the number of Adults.",
          "type": "integer"
        },
        "children": {
          "description": "Defines the number of Children.",
          "type": "integer"
        }
      }
    },
    "childAgesType": {
      "type": "array",
      "description": "Age of a child in years.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/childAgeType"
      }
    },
    "childAgeType": {
      "type": "object",
      "description": "Defines Child's Age.",
      "properties": {
        "age": {
          "description": "Age of a child in years.",
          "type": "integer"
        }
      }
    },
    "childBucketsType": {
      "type": "object",
      "description": "Defines children counts with Age Qualifying Group(Child Bucket) classification.",
      "properties": {
        "bucket1Count": {
          "description": "Number of children classified under the first Age Qualifying Group(Child Bucket#1).",
          "type": "integer"
        },
        "bucket2Count": {
          "description": "Number of children classified under the second Age Qualifying Group(Child Bucket#2).",
          "type": "integer"
        },
        "bucket3Count": {
          "description": "Number of children classified under the third Age Qualifying Group(Child Bucket#3).",
          "type": "integer"
        },
        "bucket4Count": {
          "description": "Number of children classified under the fourth Age Qualifying Group(Child Bucket#4).",
          "type": "integer"
        },
        "bucket5Count": {
          "description": "Number of children classified under the fifth Age Qualifying Group(Child Bucket#5).",
          "type": "integer"
        }
      }
    },
    "resAwardsType": {
      "type": "object",
      "description": "Membership Awards code applied on the reservation.",
      "properties": {
        "membershipNo": {
          "description": "Membership program under which the award is applied.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "awardVouchers": {
          "$ref": "#/definitions/awardVouchersType"
        },
        "originalRoomType": {
          "description": "Room Type before the Upgrade Award.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "upgradeRoomType": {
          "description": "Room Type after the Upgrade Award.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "awardVouchersType": {
      "type": "array",
      "description": "This stores the Membership Awards code applied on the reservation.",
      "maxItems": 5,
      "items": {
        "type": "object",
        "properties": {
          "awardCode": {
            "description": "Membership Award code applied on the reservation.",
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          },
          "voucherNo": {
            "description": "Membership Award number.",
            "type": "string",
            "minLength": 0,
            "maxLength": 80
          }
        }
      }
    },
    "foreignExchangeType": {
      "type": "object",
      "description": "Foreign Exchange info.",
      "properties": {
        "type": {
          "description": "Exchange Type for the postings.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "effectiveDate": {
          "description": "Effective Exchange date for the foreign currency posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "mealPlansType": {
      "type": "array",
      "description": "Meal plan codes associated with the rate codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/mealPlanCodeType"
      }
    },
    "mealPlanCodeType": {
      "type": "object",
      "description": "Meal plan codes associated with the rate codes.",
      "properties": {
        "code": {
          "description": "Meal plan code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "included": {
          "description": "Represents if the meal plan code is included in rate code or not.",
          "type": "boolean"
        },
        "breakfastIncluded": {
          "description": "Represents if the meal plan code is available for breakfast or not.",
          "type": "boolean"
        },
        "lunchIncluded": {
          "description": "Represents if the meal plan code is available for lunch or not.",
          "type": "boolean"
        },
        "dinnerIncluded": {
          "description": "Represents if the meal plan code is available for dinner or not.",
          "type": "boolean"
        }
      }
    },
    "roomRateAvailReasonType": {
      "type": "string",
      "description": "Indicates the Room Rate is not available due to unavailability of enough items for the rate code.",
      "enum": [
        "Available",
        "Restricted",
        "RestrictedDueToInventory",
        "RestrictedDueToOccupancy",
        "RestrictedDueToItemInventory"
      ]
    },
    "upsellInfoType": {
      "type": "object",
      "description": "Information regarding upsell for a reservation.",
      "properties": {
        "originalInfo": {
          "description": "Original Values of the reservation prior to upgrade.",
          "type": "object",
          "properties": {
            "rateCode": {
              "description": "The Rate Code of the Reservation before it was upgraded",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "totalAmount": {
              "description": "Total Amount of the reservation before it was upgraded.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "roomType": {
              "description": "Original Reservation Room Type before being upgraded.",
              "$ref": "#/definitions/codeDescriptionType"
            },
            "nights": {
              "description": "The number of nights of the reservation before being upgraded.",
              "type": "integer"
            }
          }
        },
        "upsellInfo": {
          "description": "Information of a reservation during the process of upgrade.",
          "type": "object",
          "properties": {
            "totalUpsellCharge": {
              "description": "Amount that was charged for the upsell.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "totalUpsellMoneyAmount": {
              "description": "Total Amount that was charged including upsell.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "firstNightUpsellAmount": {
              "description": "First Night Total Amount including Upsell.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "firstNightUpsellCharge": {
              "description": "First Night Upsell Charges.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "totalUpsellPoints": {
              "description": "Total Upsell Points.",
              "type": "integer"
            },
            "totalActualRateAmount": {
              "description": "Actual Total Room Rate for the Target Upsell Room Type.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "roomType": {
              "description": "Reservation Room Type for Upsell.",
              "$ref": "#/definitions/codeDescriptionType"
            },
            "roomLongDescription": {
              "description": "Detail description of the Room Type.",
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "ruleId": {
              "description": "Upsell Rule Id.",
              "type": "integer"
            },
            "ruleCode": {
              "description": "Upsell rule code",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "ruleDescription": {
              "description": "Upsell rule description",
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "percentageSavings": {
              "description": "Percentage savings resulting from accepting upsell offer. This will be calculated as the ratio of the amount saved by accepting the upsell offer to the actual room rate (i.e. room rate when upsell is not offered)",
              "type": "number",
              "minimum": 0,
              "maximum": 100
            },
            "upsellDate": {
              "description": "The date on which reservation is upgraded.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "upsellUser": {
              "description": "User who upgraded the reservation.",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            }
          }
        }
      }
    },
    "ownerResTypeType": {
      "type": "string",
      "enum": [
        "Owner",
        "AuthorizedUser"
      ]
    },
    "primaryShareTypeType": {
      "type": "string",
      "enum": [
        "Primary",
        "NonPrimary"
      ]
    },
    "channelSummaryInfoType": {
      "type": "object",
      "description": "Depicts channel information such as the type and code.",
      "properties": {
        "bookingChannel": {
          "$ref": "#/definitions/bookingChannelType"
        },
        "messageId": {
          "description": "Indicates the transaction identifier.",
          "type": "string"
        },
        "summaryOnly": {
          "description": "Used to indicate whether to return summarized or detailed rate room information.",
          "type": "boolean"
        }
      }
    },
    "bookingChannelType": {
      "type": "object",
      "properties": {
        "channelCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "channelName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "channelType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 240
        }
      }
    },
    "sellMessagesType": {
      "type": "object",
      "description": "The SellMessagesType is the list of message and attributes returned by web service.",
      "properties": {
        "sellMessage": {
          "description": "This is the message text.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/sellMessageType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "sellMessageType": {
      "type": "object",
      "description": "The SellMessagesType defines the standard attributes that will be retrieved with the sell message.",
      "properties": {
        "message": {
          "description": "This is the message text.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "croCode": {
          "description": "This is the Central Reservation office code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "chainCode": {
          "description": "This is the chain code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "This is the hotel code or resort.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "description": "This represents the room type code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCode": {
          "description": "This represents the rate plan code of the room type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "languageCode": {
          "description": "This is the language code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "stickyFlagYn": {
          "description": "Flag which tells if this message is Sticky (Y/N).",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "usedInModule": {
          "description": "This represents the correct moduletype which should be used for fetching SellMessages.",
          "$ref": "#/definitions/usedInModuleType"
        },
        "beginDate": {
          "description": "This is the Begin date for the configured SellMessage.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "usedInModuleType": {
      "type": "string",
      "description": "Simple type for indicating the module for which user wants to create the SellMessage. Valid module types are Look To Book Sales,Reservations,Blocks,Function Diary and Group Rooms Control.",
      "enum": [
        "Blocks",
        "Reservations",
        "FunctionDiary",
        "LookToBookSales",
        "GroupRoomsControl"
      ]
    },
    "currencyExchangeRatesType": {
      "type": "array",
      "description": "Exchange Rate information for a currency code.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/currencyExchangeRateType"
      }
    },
    "hotelContactsType": {
      "type": "array",
      "description": "Lists of contacts of the hotel.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelContactType"
      }
    },
    "hotelContactType": {
      "type": "object",
      "description": "Contact identification details.",
      "properties": {
        "nameId": {
          "description": "Contact or employee identifier..",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "The code of the hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "name": {
          "description": "Name of the hotel contact.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "roles": {
          "description": "List of HotelContactType.",
          "$ref": "#/definitions/hotelContactRolesType"
        },
        "ownerCode": {
          "description": "The contact's code in the hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "communicationMethod": {
          "description": "The preferred method of communication for the contact.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "communicationAddress": {
          "description": "Details about the preferred communication method. Example: email address, fax number, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "primary": {
          "description": "Primary flag.",
          "type": "boolean"
        }
      }
    },
    "hotelContactRolesType": {
      "type": "array",
      "description": "Lists of HotelContactRoles of the hotel.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelContactRoleType"
      }
    },
    "hotelContactRoleType": {
      "type": "string",
      "description": "The contact's role in the hotel. Possible values are Lead, General, and Contract.",
      "enum": [
        "Lead",
        "General",
        "Contract"
      ]
    },
    "hotelEventSpacesType": {
      "type": "object",
      "description": "The Detail and Summary info of event space about the hotel",
      "properties": {
        "eventSpaceDetails": {
          "description": "Even Space Detail information of the hotel.",
          "$ref": "#/definitions/hotelEventSpaceDetailsType"
        },
        "eventSpaceSummaries": {
          "description": "Event Space Summary information of the hotel.",
          "$ref": "#/definitions/hotelEventSpaceSummariesType"
        },
        "setupStyles": {
          "description": "List of hotel setup style codes of the hotel.",
          "$ref": "#/definitions/hotelSetupStylesType"
        }
      }
    },
    "hotelEventSpaceDetailsType": {
      "type": "array",
      "description": "List of detail info of hotel event space",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelEventSpaceDetailType"
      }
    },
    "hotelEventSpaceDetailType": {
      "type": "object",
      "description": "The detail info of hotel event space",
      "properties": {
        "code": {
          "description": "The code of hotel event space.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Th description of the hotel event space",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "maxCapacity": {
          "description": "Th max capacity of the hotel event space",
          "type": "integer"
        },
        "maxOccupancies": {
          "description": "List of max occupancies of the event space based on the setup code.",
          "$ref": "#/definitions/eventSpaceMaxOccupanciesType"
        }
      }
    },
    "eventSpaceMaxOccupanciesType": {
      "type": "array",
      "description": "List of event space max occupancy.",
      "maxItems": 5,
      "items": {
        "type": "integer"
      }
    },
    "hotelEventSpaceSummariesType": {
      "type": "array",
      "description": "List of summary info of hotel event space",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelEventSpaceSummaryType"
      }
    },
    "hotelEventSpaceSummaryType": {
      "type": "object",
      "description": "The summary info of hotel event space",
      "properties": {
        "no": {
          "description": "The total event space number which has the same space type, max capacity and setup style.",
          "type": "integer"
        },
        "spaceType": {
          "description": "The type of the event space",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "maxCapacity": {
          "description": "The max capacity of this event space group",
          "type": "integer"
        },
        "maxOccupancies": {
          "description": "List of max occupancies of the event space based on the setup code.",
          "$ref": "#/definitions/eventSpaceMaxOccupanciesType"
        }
      }
    },
    "hotelSetupStylesType": {
      "type": "array",
      "description": "List of event space setup style codes.",
      "maxItems": 5,
      "items": {
        "type": "string",
        "minLength": 0,
        "maxLength": 20
      }
    },
    "hotelNotesType": {
      "type": "array",
      "description": "List of Notes of the hotel.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/commentInfoType"
      }
    },
    "hotelCorporateInformationsType": {
      "type": "object",
      "description": "Corporate information details of the property",
      "properties": {
        "brandCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelCategory": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "businessUnit": {
          "$ref": "#/definitions/primaryCodesType"
        },
        "departmentCode": {
          "$ref": "#/definitions/primaryCodesType"
        },
        "division": {
          "$ref": "#/definitions/primaryCodesType"
        },
        "opertingUnit": {
          "$ref": "#/definitions/primaryCodesType"
        }
      }
    },
    "primaryCodesType": {
      "type": "array",
      "description": "List of codes with primary flag",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/primaryCodeType"
      }
    },
    "primaryCodeType": {
      "type": "object",
      "description": "Primary flag with code and description.",
      "properties": {
        "primary": {
          "type": "boolean"
        },
        "codeDescription": {
          "$ref": "#/definitions/codeDescriptionType"
        }
      }
    },
    "hotelAttractionsType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelAttractionType"
      }
    },
    "hotelAttractionType": {
      "type": "object",
      "description": "Information about the attractions near the hotel.",
      "properties": {
        "name": {
          "description": "Attraction name for the hotel.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "type": {
          "description": "The type of the attraction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        },
        "class": {
          "description": "The class of the attraction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        },
        "generalDirections": {
          "description": "Directions to the attraction from the hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "relativePosition": {
          "$ref": "#/definitions/relativePositionType"
        },
        "address": {
          "description": "Address of the attraction.",
          "$ref": "#/definitions/addressType"
        },
        "website": {
          "description": "Website for the attraction.",
          "$ref": "#/definitions/uRLType"
        },
        "priceRange": {
          "description": "Price range for the attraction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "operationHours": {
          "description": "Price range for the attraction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "displaySeq": {
          "description": "Display sequence of the attraction.",
          "type": "integer"
        },
        "code": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "meetingRoomsType": {
      "type": "array",
      "description": "List of meeting rooms of the hotel.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/meetingRoomType"
      }
    },
    "meetingRoomType": {
      "type": "object",
      "description": "Information about the meeting rooms of the hotel.",
      "properties": {
        "code": {
          "description": "the code of the meeting room",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "charge": {
          "description": "The charge for the meeting room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "A description of the meeting room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "masterInfoType": {
      "type": "object",
      "properties": {
        "codeInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeInfoType"
          }
        },
        "codeType": {
          "$ref": "#/definitions/masterType"
        }
      }
    },
    "codeInfoType": {
      "type": "object",
      "description": "",
      "properties": {
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "addtionalCodeInfo": {
          "$ref": "#/definitions/addtionalCodeInfoType"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "addtionalCodeInfoType": {
      "type": "array",
      "description": "Holds name of additional code information",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Holds name of additional code information",
            "$ref": "#/definitions/masterInfoCodeDetailType"
          },
          "value": {
            "description": "Holds value of additional code information",
            "type": "string",
            "minLength": 0,
            "maxLength": 2000
          }
        }
      }
    },
    "masterInfoCodeDetailType": {
      "type": "string",
      "enum": [
        "LongDescription",
        "ShortDescription"
      ]
    },
    "masterType": {
      "type": "string",
      "enum": [
        "Country",
        "State",
        "AddressType",
        "PhoneType",
        "RateCategory",
        "CalculationRule",
        "PostingRythym",
        "BillingInstruction",
        "TransactionCode",
        "DisplaySet",
        "MailingActions",
        "DistanceType",
        "District",
        "Territory",
        "FiscalRegion",
        "InventoryItem",
        "Package",
        "RoomFeaturePreference",
        "SpecialPreference",
        "Promotion",
        "Department",
        "ReservationPreference",
        "FacilityTask",
        "RoomType",
        "RateCode",
        "OutOfOrderReason",
        "Block"
      ]
    },
    "airportsDetails": {
      "type": "object",
      "description": "Response object for fetching airports configured for hotels.",
      "properties": {
        "airports": {
          "description": "Collection of airports.",
          "$ref": "#/definitions/airportsType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "airportsType": {
      "type": "array",
      "description": "Airport details for a hotel.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/airportType"
      }
    },
    "airportType": {
      "type": "object",
      "description": "Base details of the airport.",
      "properties": {
        "description": {
          "description": "Description of the airport.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "distance": {
          "description": "Distance from the hotel to the airport.",
          "type": "number"
        },
        "distanceType": {
          "description": "Unit of distance for the Distance measurement.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "drivingTime": {
          "description": "Driving time from the hotel to the airport.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "direction": {
          "description": "Direction of the airport in relation to the hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "website": {
          "description": "URL of the airport's website.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "transportationOptions": {
          "description": "Transportation option available for the airport.",
          "type": "array",
          "maxItems": 8,
          "items": {
            "$ref": "#/definitions/transportationInfoType"
          }
        },
        "sequence": {
          "description": "Sequence number for displaying the airport.",
          "type": "integer"
        },
        "code": {
          "description": "Airport code identifying the airport.",
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "hotelId": {
          "description": "Hotel code that the airport belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "airportsCriteria": {
      "type": "object",
      "description": "Request object for creating new airports for hotels.",
      "properties": {
        "airports": {
          "description": "Collection of airports to be created.",
          "$ref": "#/definitions/airportsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "airportsToBeChanged": {
      "type": "object",
      "description": "Request object for modifying airports for hotels.",
      "properties": {
        "airports": {
          "description": "Collection of airports to be modified.",
          "$ref": "#/definitions/airportsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "alternateHotelsCriteria": {
      "type": "object",
      "description": "Request object for creating new Alternate Hotels for hotels.",
      "properties": {
        "alternateHotels": {
          "description": "Collection of Alternate Hotels to be created.",
          "$ref": "#/definitions/alternateHotelsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "alternateHotelsToBeChanged": {
      "type": "object",
      "description": "Request object for changing hotel Alternate Hotels for hotels.",
      "properties": {
        "alternateHotels": {
          "description": "Collection of Alternate Hotels to be modified.",
          "$ref": "#/definitions/alternateHotelsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "amenitiesDetails": {
      "type": "object",
      "description": "Response object for fetching amenities at the property level.",
      "properties": {
        "hotelAmenities": {
          "description": "Collection of amenities specified at the property level.",
          "$ref": "#/definitions/configHotelAmenitiesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "configHotelAmenitiesType": {
      "type": "array",
      "description": "This type holds a collection of amenities at the property level.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/configHotelAmenityType"
      }
    },
    "configHotelAmenityType": {
      "type": "object",
      "description": "Base details used for amenities.",
      "properties": {
        "description": {
          "description": "The description about amenity of the hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "comments": {
          "description": "The comments about amenity of the hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "featureCode": {
          "description": "Specifies the feature code (aka amenity code).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "amenityType": {
          "description": "The type of amenity (general or meeting) selected from the list of values.",
          "$ref": "#/definitions/amenityTypeType"
        },
        "beginDate": {
          "description": "The date the amenity is scheduled to become active.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "description": "The date the amenity is scheduled to become inactive.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "newAmenityCode": {
          "description": "The new amenity code which is used in the change method.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "newBeginDate": {
          "description": "The new date the amenity is scheduled to become active.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hours": {
          "description": "The hours of operation of the amenity in the hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1000
        },
        "priceRange": {
          "description": "The price range of the amenity in the hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "hotelId": {
          "description": "Specifies the hotel code for which the amenity is specified.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "amenitiesCriteria": {
      "type": "object",
      "description": "Request object for creating amenities at the property level.",
      "properties": {
        "hotelAmenities": {
          "description": "Collection containing details of amenities specified at the property level.",
          "$ref": "#/definitions/configHotelAmenitiesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "amenitiesToBeChanged": {
      "type": "object",
      "description": "Request object for changing amenities at the property level.",
      "properties": {
        "hotelAmenities": {
          "description": "Collection containing details of amenities specified at the property level.",
          "$ref": "#/definitions/configHotelAmenitiesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "attractionsDetails": {
      "type": "object",
      "description": "Response object for information regarding attraction.",
      "properties": {
        "attractions": {
          "description": "Collection of attractions and their information.",
          "$ref": "#/definitions/attractionCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "attractionCodesType": {
      "type": "array",
      "description": "Collection of hotel level alert codes with attached alert types.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/attractionCodeType"
      }
    },
    "attractionCodeType": {
      "type": "object",
      "description": "Information about the attractions near the hotel.",
      "properties": {
        "name": {
          "description": "Attraction name for the hotel.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "type": {
          "description": "The type of the attraction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        },
        "class": {
          "description": "The class of the attraction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        },
        "generalDirections": {
          "description": "Directions to the attraction from the hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "relativePosition": {
          "$ref": "#/definitions/relativePositionType"
        },
        "address": {
          "description": "Address of the attraction.",
          "$ref": "#/definitions/addressType"
        },
        "website": {
          "description": "Website for the attraction.",
          "$ref": "#/definitions/uRLType"
        },
        "priceRange": {
          "description": "Price range for the attraction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "operationHours": {
          "description": "Price range for the attraction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "displaySeq": {
          "description": "Display sequence of the attraction.",
          "type": "integer"
        },
        "code": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "region": {
          "description": "The region in which this attraction is located.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "inactiveDate": {
          "description": "The date the record was marked as inactive.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "latitude": {
          "type": "number",
          "minimum": -90,
          "maximum": 90
        },
        "longitude": {
          "description": "The longitude of the location from which the organism or observation was collected, expressed in decimal degrees. Positive values are East of the Greenwich Meridian, negative values are West of the Greenwich Meridian.",
          "type": "number",
          "minimum": -180,
          "maximum": 180
        },
        "hotelId": {
          "description": "Hotel Code for attraction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "attractionsCriteria": {
      "type": "object",
      "description": "Request object for creating a new group of attractions.",
      "properties": {
        "attractions": {
          "description": "Group of attractions to be created.",
          "$ref": "#/definitions/attractionCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "attractionsToBeChanged": {
      "type": "object",
      "description": "Request object for modifying an existing attraction.",
      "properties": {
        "attractions": {
          "description": "Attraction group to be changed.",
          "$ref": "#/definitions/attractionCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelContactsCriteria": {
      "type": "object",
      "description": "Request object for creating new Contacts for hotels.",
      "properties": {
        "hotelContacts": {
          "description": "Collection of hotel contacts to be created.",
          "$ref": "#/definitions/hotelContactsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelContactsToBeChanged": {
      "type": "object",
      "description": "Request object for changing hotel Contacts for hotels.",
      "properties": {
        "hotelContacts": {
          "description": "Collection of Contacts to be modified.",
          "$ref": "#/definitions/hotelContactsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "countriesDetails": {
      "type": "object",
      "description": "Response object for fetching Countries.",
      "properties": {
        "countries": {
          "description": "Collection of Countries.",
          "$ref": "#/definitions/countriesType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "countriesType": {
      "type": "array",
      "description": "Country details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/countryType"
      }
    },
    "countryType": {
      "type": "object",
      "description": "Base details of the country.",
      "properties": {
        "name": {
          "description": "Name for the country.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "statisticCode": {
          "description": "Statistic code for the country.",
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "guestAddressFormat": {
          "description": "Guest Address format Codes for confirmation letter.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "addressDoctorMode": {
          "description": "Defines the mode used to invoke address doctor service.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "mainGroup": {
          "description": "Main Group of Country. Used in statistic reports.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "regionCode": {
          "description": "Regin to which the Country belongs.",
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "isoCode": {
          "description": "ISO standard code for country.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "isoName": {
          "description": "ISO standard name for country.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "displaySequence": {
          "description": "Sequence number for displaying the countries.",
          "type": "number"
        },
        "printSequence": {
          "description": "Print Sequence number for report.",
          "type": "number"
        },
        "displayFlag": {
          "description": "Indicates if the country flag should be displayed.",
          "type": "boolean"
        },
        "countryCode": {
          "description": "Country code identifying the country.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel code the country belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "countriesToBeChanged": {
      "type": "object",
      "description": "Request object for modifying Countries for hotels.",
      "properties": {
        "countries": {
          "description": "Collection of Countries to be modified.",
          "$ref": "#/definitions/countriesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "creditCardTypesDetails": {
      "type": "object",
      "description": "Response object for fetching Credit Card Types.",
      "properties": {
        "creditCardTypes": {
          "description": "Collection of Credit Card Types.",
          "$ref": "#/definitions/creditCardTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "creditCardTypesType": {
      "type": "array",
      "description": "List of Credit Card Types.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/creditCardTypeType"
      }
    },
    "creditCardTypeType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "hotelId": {
          "description": "Hotel of the record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "creditCardTypesToBeChanged": {
      "type": "object",
      "description": "Request object for changing Credit Card Types.",
      "properties": {
        "creditCardTypes": {
          "description": "Credit Card Types to be changed.",
          "$ref": "#/definitions/creditCardTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "creditCardTypesCriteria": {
      "type": "object",
      "description": "Request object for creating Credit Card Types.",
      "properties": {
        "creditCardTypes": {
          "description": "Credit Card Types to be created.",
          "$ref": "#/definitions/creditCardTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelDayTypeCodesDetails": {
      "type": "object",
      "description": "Response object for fetching day type codes for a hotel.",
      "properties": {
        "hotelDayTypeCodes": {
          "description": "Collection of hotel level day type codes.",
          "$ref": "#/definitions/hotelDayTypeCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelDayTypeCodesType": {
      "type": "array",
      "description": "Details for day type code at hotel level.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelDayTypeCodeType"
      }
    },
    "hotelDayTypeCodeType": {
      "type": "object",
      "description": "Base structure for Day Type Code at both template and hotel levels.",
      "properties": {
        "code": {
          "description": "Code of a Day Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of a Day Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "multiplier": {
          "description": "Value by which the rates will be multiplied on a day.",
          "type": "number"
        },
        "adder": {
          "description": "Value that will be added to rate on a day.",
          "type": "number"
        },
        "color": {
          "description": "Color used to represent Day Type.",
          "$ref": "#/definitions/colorType"
        },
        "sellSequence": {
          "description": "Sell sequence for a Day Type.",
          "type": "number"
        },
        "hotel": {
          "description": "Hotel code to which the Day Type is associated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "hotelDayTypeCodesToBeChanged": {
      "type": "object",
      "description": "Request object for modifying day type codes for a hotel.",
      "properties": {
        "hotelDayTypeCodes": {
          "description": "Collection of hotel day type codes to be changed.",
          "$ref": "#/definitions/hotelDayTypeCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelDayTypeCodesCriteria": {
      "type": "object",
      "description": "Request object for creating new day type codes for a hotel.",
      "properties": {
        "hotelDayTypeCodes": {
          "description": "Collection of hotel day type codes to be created.",
          "$ref": "#/definitions/hotelDayTypeCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "setHotelEvents": {
      "type": "object",
      "description": "Request object for setting hotel events for specified date range.",
      "properties": {
        "hotelEvents": {
          "description": "Collection of hotel calendar event entries to be created.",
          "$ref": "#/definitions/hotelEventCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelEventCodesType": {
      "type": "array",
      "description": "Collection of hotel events.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelEventCodeType"
      }
    },
    "hotelEventCodeType": {
      "type": "object",
      "description": "Details of Event to be used to set events for a hotel.",
      "properties": {
        "hotelId": {
          "description": "Code of the hotel for which the events are being set.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "eventCode": {
          "description": "Event code selected.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "dateRange": {
          "description": "Date Range with days of week where the range update has to be applied.",
          "$ref": "#/definitions/timeSpanDaysOfWeekType"
        }
      }
    },
    "hotelBrochureDetails": {
      "type": "object",
      "description": "Response object for fetching Basic Property information.",
      "properties": {
        "hotelBrochure": {
          "$ref": "#/definitions/hotelBrochureType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelBrochureType": {
      "type": "object",
      "description": "Contains the basic configuration information about a Hotel.",
      "properties": {
        "primaryDetails": {
          "description": "Primary Information of the hotel.",
          "type": "object",
          "properties": {
            "legalOwner": {
              "description": "Legal owner of the hotel.",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            }
          }
        },
        "generalInformation": {
          "description": "General Information of the hotel.",
          "type": "object",
          "properties": {
            "hotelType": {
              "description": "The type of the Hotel.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "roomCount": {
              "description": "The total number of rooms in the Hotel.",
              "type": "integer"
            },
            "bedCount": {
              "description": "The total number of beds in the Hotel.",
              "type": "integer"
            },
            "floorCount": {
              "description": "The total number of floors of the Hotel.",
              "type": "integer"
            },
            "checkInTime": {
              "description": "The official check in time of the Hotel.",
              "type": "string",
              "format": "date-time"
            },
            "checkOutTime": {
              "description": "The official check out time of the Hotel.",
              "type": "string",
              "format": "date-time"
            },
            "hotelInfoWebsite": {
              "description": "URL where property information is located.",
              "$ref": "#/definitions/uRLType"
            },
            "longitude": {
              "description": "Longitude of the hotel.",
              "type": "number"
            },
            "latitude": {
              "description": "Latitude of the hotel.",
              "type": "number"
            },
            "baseLanguage": {
              "description": "The base language of the Hotel.",
              "$ref": "#/definitions/languageType"
            }
          }
        },
        "accommodationDetails": {
          "description": "Accommodation Details of the hotel.",
          "type": "object",
          "properties": {
            "singleRooms": {
              "description": "The number of Single Rooms of the Hotel.",
              "type": "integer"
            },
            "doubleRooms": {
              "description": "The number of Double Rooms of the Hotel.",
              "type": "integer"
            },
            "twinRooms": {
              "description": "The number of Twin Rooms of the Hotel.",
              "type": "integer"
            },
            "familyRooms": {
              "description": "The number of Family Rooms of the Hotel.",
              "type": "integer"
            },
            "connectingRooms": {
              "description": "The number of Connecting Rooms of the Hotel.",
              "type": "integer"
            },
            "accessibleRooms": {
              "description": "The number of Accessible Rooms of the Hotel.",
              "type": "integer"
            },
            "nonSmokingRooms": {
              "description": "The number of Non-Smoking Rooms of the Hotel.",
              "type": "integer"
            },
            "maxAdultsInFamilyRoom": {
              "description": "Maximum Adults for Family Room Type.",
              "type": "integer"
            },
            "maxChildrenInFamilyRoom": {
              "description": "Maximum Children for Family Room Type.",
              "type": "integer"
            },
            "guestRoomFloors": {
              "description": "The total number of the Guest Room Floors.",
              "type": "integer"
            },
            "guestRoomElevators": {
              "description": "The number of Guest Room Elevators.",
              "type": "integer"
            },
            "suites": {
              "description": "The number of Suites of the Hotel.",
              "type": "integer"
            },
            "executiveFloorNo": {
              "description": "The floor number of Executive Floors of the Hotel.",
              "type": "string",
              "minLength": 0,
              "maxLength": 1000
            },
            "roomAmenties": {
              "description": "The information about the Room Amenities.",
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "shopDescription": {
              "description": "The Description of the shops in the Hotel.",
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            }
          }
        },
        "propertyControls": {
          "description": "Property controls information configuration of the hotel.",
          "type": "object",
          "properties": {
            "sellControls": {
              "description": "The sell controls information configuration of the hotel.",
              "type": "object",
              "properties": {
                "startDate": {
                  "description": "Date when the hotel become valid for use.",
                  "type": "string",
                  "format": "date",
                  "maxLength": 8
                },
                "endDate": {
                  "description": "The end date of the hotel.",
                  "type": "string",
                  "format": "date",
                  "maxLength": 8
                },
                "hotelId": {
                  "description": "The hotel code.",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 80
                }
              }
            },
            "currencyFormatting": {
              "description": "Currency Formatting information configuration of the hotel.",
              "type": "object",
              "properties": {
                "currencyCode": {
                  "description": "The base currency code for this hotel..",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 20
                },
                "currencyFormat": {
                  "description": "Format for the local currency.",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 80
                },
                "currencySymbol": {
                  "description": "Symbol to designate the default currency of the hotel.",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 20
                },
                "decimalPositions": {
                  "description": "Number of decimal positions used for this currency type.",
                  "type": "integer"
                }
              }
            },
            "cateringCurrencyFormatting": {
              "description": "Catering Currency Formatting information configuration of the hotel.",
              "type": "object",
              "properties": {
                "currencyCode": {
                  "description": "The base currency code for this hotel..",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 20
                },
                "currencyFormat": {
                  "description": "Format for the local currency.",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 80
                }
              }
            },
            "dateTimeFormatting": {
              "description": "Date Time Formatting information configuration of the hotel",
              "type": "object",
              "properties": {
                "longDateFormat": {
                  "description": "Long date format of the hotel.",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 20
                },
                "shortDateFormat": {
                  "description": "Short date format of the hotel.",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 20
                },
                "timeFormat": {
                  "description": "Time format for the hotel.",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 20
                },
                "timeZoneRegion": {
                  "description": "Time zone region of the hotel.",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 80
                }
              }
            },
            "applicationMode": {
              "description": "Application Mode information configuration of the hotel.",
              "type": "object",
              "properties": {
                "configurationMode": {
                  "description": "The hotel's configuration mode if applicable.",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 20
                },
                "countryMode": {
                  "description": "The hotel's country code.",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 20
                },
                "expHotelCode": {
                  "description": "Hotel Code used for third party exports.",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 20
                },
                "touristNumber": {
                  "description": "The Tourist Number of the hotel.",
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 20
                },
                "mbsSupported": {
                  "description": "Indicates if the hotel uses MBS (Marriott Business Services).",
                  "type": "boolean"
                }
              }
            }
          }
        },
        "communication": {
          "description": "Communication information of the hotel.",
          "type": "object",
          "properties": {
            "phoneNumber": {
              "description": "The direct dial phone number of the hotel.",
              "$ref": "#/definitions/telephoneType"
            },
            "tollFreeNumber": {
              "description": "Toll free phone number of the hotel.",
              "$ref": "#/definitions/telephoneType"
            },
            "faxNumber": {
              "description": "Fax phone number of the hotel.",
              "$ref": "#/definitions/telephoneType"
            },
            "emailAddress": {
              "description": "Email address of the hotel.",
              "$ref": "#/definitions/basicEmailType"
            },
            "webPage": {
              "description": "The web address of the hotel.",
              "$ref": "#/definitions/uRLType"
            }
          }
        },
        "address": {
          "description": "Provides address information.",
          "type": "object",
          "properties": {
            "isValidated": {
              "description": "Indicator to define if the Address is validated by the Address Validation System.",
              "type": "boolean"
            },
            "addressLine": {
              "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
              "type": "array",
              "maxItems": 4,
              "items": {
                "type": "string",
                "minLength": 0,
                "maxLength": 80
              }
            },
            "cityName": {
              "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            },
            "postalCode": {
              "description": "Post Office Code number.",
              "type": "string",
              "minLength": 0,
              "maxLength": 15
            },
            "cityExtension": {
              "description": "Post Office City Extension Code number. City Extension mainly used for UK addresses.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "county": {
              "description": "County or District Name (e.g., Fairfax). This is read only.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "state": {
              "description": "State or Province name (e.g., Texas).",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "country": {
              "description": "Country name (e.g., Ireland).",
              "$ref": "#/definitions/countryNameType"
            },
            "language": {
              "description": "Language identification.",
              "type": "string",
              "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
            },
            "type": {
              "description": "Defines the type of address (e.g. home, business, other).",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "typeDescription": {
              "description": "Describes the type code",
              "type": "string"
            },
            "primaryInd": {
              "description": "When true, indicates a primary information.",
              "type": "boolean"
            },
            "updateReservations": {
              "description": "Indicates whether to update the reservations or not. If true and the address is primary, then all associated active reservations will be updated with the new primary address.",
              "type": "boolean"
            },
            "barCode": {
              "description": "The postal barcode for the address.",
              "type": "string",
              "minLength": 0,
              "maxLength": 100
            },
            "createDateTime": {
              "description": "Time stamp of the creation.",
              "type": "string",
              "format": "date-time"
            },
            "creatorId": {
              "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
              "type": "string",
              "minLength": 0,
              "maxLength": 200
            },
            "lastModifyDateTime": {
              "description": "Time stamp of last modification.",
              "type": "string",
              "format": "date-time"
            },
            "lastModifierId": {
              "description": "Identifies the last software system or person to modify a record.",
              "type": "string",
              "minLength": 0,
              "maxLength": 200
            },
            "purgeDate": {
              "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "regionCode": {
              "description": "The region code of the hotel.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            }
          }
        },
        "hotelRestaurants": {
          "description": "Names of restaurants which can be found in the Hotel.",
          "$ref": "#/definitions/hotelRestaurantsType"
        },
        "hotelRateRanges": {
          "description": "The rate ranges which are offered by the hotels.",
          "$ref": "#/definitions/hotelRateRangesType"
        },
        "alternateHotels": {
          "description": "Informations about alternative hotels provided by the Hotel.",
          "$ref": "#/definitions/alternateHotelsType"
        },
        "hotelContacts": {
          "description": "The contacts information the hotels.",
          "$ref": "#/definitions/hotelContactsType"
        },
        "hotelEventSpaces": {
          "description": "Even Space information of the hotel.",
          "$ref": "#/definitions/hotelEventSpacesType"
        },
        "hotelNotes": {
          "description": "List of notes for the hotel.",
          "$ref": "#/definitions/hotelNotesType"
        },
        "hotelCorporateInformations": {
          "$ref": "#/definitions/hotelCorporateInformationsType"
        },
        "attractions": {
          "description": "List of Attractions for the hotel.",
          "$ref": "#/definitions/hotelAttractionsType"
        },
        "meetingRooms": {
          "description": "List of Meeting Rooms for the hotel.",
          "$ref": "#/definitions/meetingRoomsType"
        },
        "chainCode": {
          "description": "The code that identifies a hotel chain or management group. The hotel chain code is decided between vendors. This attribute is optional if the hotel is an independent property that can be identified by the HotelCode attribute.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "The code that uniquely identifies a single hotel property. The hotel code is decided between vendors.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelCityCode": {
          "description": "The IATA city code; for example DCA, ORD.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "hotelName": {
          "description": "A text field used to communicate the proper name of the hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "hotelCodeContext": {
          "description": "A text field used to communicate the context (or source of - ex Sabre, Galileo, Worldspan, Amadeus) the HotelReferenceGroup codes.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "chainName": {
          "description": "The name of the hotel chain (e.g., Hilton, Marriott, Hyatt).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "baseLanguage": {
          "description": "The base language of the Hotel.",
          "$ref": "#/definitions/languageType"
        },
        "currentTime": {
          "description": "The time when login hotel brochure.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "hotelAttractions": {
          "description": "Information about attractive places that can be found around the Hotel.",
          "$ref": "#/definitions/hotelAttractionsType"
        },
        "hotelPackages": {
          "description": "Packages and offers offered by the Hotel.",
          "$ref": "#/definitions/hotelPackagesType"
        },
        "hotelTransportations": {
          "description": "List of different transportation companies around the Hotel.",
          "$ref": "#/definitions/hotelTransportationsType"
        },
        "hotelConferenceFacilities": {
          "description": "Information about the conference rooms in the Hotel.",
          "$ref": "#/definitions/hotelConferenceFacilitiesType"
        },
        "hotelFeatures": {
          "description": "Lists of features provided by the Hotel",
          "$ref": "#/definitions/hotelFeaturesType"
        },
        "directions": {
          "description": "Instructions and direction to help reaching the Hotel.",
          "$ref": "#/definitions/directionsType"
        },
        "generalNotes": {
          "description": "General Notes provided about the Hotel.",
          "$ref": "#/definitions/generalNotesType"
        },
        "hotelAirports": {
          "description": "Informations about different airports near by.",
          "$ref": "#/definitions/hotelAirportsType"
        },
        "hotelMiscellaneousInformation": {
          "description": "General user defined information provided about the Hotel.",
          "$ref": "#/definitions/hotelUserDefinedFieldsType"
        }
      }
    },
    "hotelPackagesType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelPackageType"
      }
    },
    "hotelPackageType": {
      "type": "object",
      "description": "Information about the packages of the hotel.",
      "properties": {
        "packageName": {
          "description": "The name of the package.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "beginDate": {
          "description": "The begin date of the package.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "description": "The end date of the package.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "packagePrice": {
          "description": "The price of the package.",
          "type": "number"
        },
        "rateCode": {
          "description": "Indicates the rate code for the package.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "pointsRequired": {
          "description": "Indicates the required membership points for the package.",
          "type": "number"
        },
        "packageCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "hotelTransportationsType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelTransportationType"
      }
    },
    "hotelTransportationType": {
      "type": "object",
      "description": "Information about the transportations of the hotel.",
      "properties": {
        "phoneNumber": {
          "description": "The name of the package.",
          "$ref": "#/definitions/telephoneType"
        },
        "relativePosition": {
          "$ref": "#/definitions/relativePositionType"
        },
        "description": {
          "description": "The description of the transportation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1000
        },
        "comments": {
          "description": "Comments about the transportation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "priceRange": {
          "description": "The price range of the transportation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "website": {
          "description": "Web address associated with transportation.",
          "$ref": "#/definitions/uRLType"
        },
        "keyOptions": {
          "description": "This is a placeholder element for future use. Functionality may not be available for the current implementation.",
          "$ref": "#/definitions/codeListType"
        },
        "transportationCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "label": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "orderBy": {
          "type": "integer"
        }
      }
    },
    "hotelConferenceFacilitiesType": {
      "type": "object",
      "properties": {
        "hotelBanquetSpace": {
          "description": "Banquet Space of the hotel.",
          "$ref": "#/definitions/hotelBanquetSpaceType"
        },
        "hotelConferenceRooms": {
          "description": "Conference Rooms of the Hotel.",
          "$ref": "#/definitions/hotelConferenceRoomsType"
        }
      }
    },
    "hotelBanquetSpaceType": {
      "type": "object",
      "description": "Defines the Banquet and Meeting Area of the Hotel",
      "properties": {
        "banquetSeats": {
          "type": "integer"
        },
        "meetingRooms": {
          "type": "integer"
        },
        "banquetArea": {
          "description": "Defines the BanquetArea of the Hotel",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "meetingArea": {
          "description": "Defines the Meeting Area of the hotel",
          "type": "number"
        },
        "unitOfMeasureCode": {
          "description": "The unit of measure in a code format.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "hotelConferenceRoomsType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelConferenceRoomType"
      }
    },
    "hotelConferenceRoomType": {
      "type": "object",
      "description": "Information about the Conference rooms in the hotel.",
      "properties": {
        "roomName": {
          "description": "The name of the Restaurant.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1000
        },
        "roomType": {
          "description": "The Type of Restaurant.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1000
        },
        "roomCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "hotelFeaturesType": {
      "type": "array",
      "description": "Collection of Features in the Hotel",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelFeatureType"
      }
    },
    "hotelFeatureType": {
      "type": "object",
      "description": "Base details used for amenities.",
      "properties": {
        "description": {
          "description": "The description about amenity of the hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "comments": {
          "description": "The comments about amenity of the hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "featureCode": {
          "description": "Specifies the feature code (aka amenity code).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "hours": {
          "description": "The hours of operation of the amenity in the hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1000
        },
        "priceRange": {
          "description": "The price range of the amenity in the hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "directionsType": {
      "type": "array",
      "description": "Collection of direction details to get into Hotel.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/directionType"
      }
    },
    "directionType": {
      "type": "object",
      "description": "Direction details to get into Hotel.",
      "properties": {
        "description": {
          "description": "Description about the Hotel direction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "title": {
          "description": "Title of Hotel direction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "generalNotesType": {
      "type": "array",
      "description": "Collection of general notes about the Hotel.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/generalNoteType"
      }
    },
    "generalNoteType": {
      "type": "object",
      "description": "General note/information about the Hotel.",
      "properties": {
        "note": {
          "description": "The body of the note.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "title": {
          "description": "The note's title.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "hotelAirportsType": {
      "type": "array",
      "description": "Collection of Airport details of the Hotel",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelAirportType"
      }
    },
    "hotelAirportType": {
      "type": "object",
      "description": "Airport details of the Hotel",
      "properties": {
        "description": {
          "description": "Description of the airport",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "relativePosition": {
          "$ref": "#/definitions/relativePositionType"
        },
        "direction": {
          "description": "Directions from the airport to the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transportationList": {
          "description": "List of Transportation available from Airport to Hotel.",
          "$ref": "#/definitions/transportationCodeListType"
        },
        "airportCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        }
      }
    },
    "transportationCodeListType": {
      "type": "array",
      "description": "List of available transportations from airport to get into Hotel.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/transportationCodeType"
      }
    },
    "transportationCodeType": {
      "type": "object",
      "description": "Transportation Code available from Airport to the Hotel.",
      "properties": {
        "code": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "hotelUserDefinedFieldsType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelUserDefinedFieldType"
      }
    },
    "hotelUserDefinedFieldType": {
      "type": "object",
      "description": "User defined information(UDF) for the hotel.",
      "properties": {
        "category": {
          "description": "The UDF Category for this information.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "infoType": {
          "description": "The UDF Type for this information.",
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        },
        "information": {
          "description": "The UDF attribute for this information.",
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        }
      }
    },
    "hotelDetailsDetails": {
      "type": "object",
      "description": "Response object for fetching hotel details at the property level.",
      "properties": {
        "hotelDetails": {
          "description": "Collection of hotel details specified at the property level.",
          "$ref": "#/definitions/hotelDetailsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelDetailsType": {
      "type": "array",
      "description": "Collection of property level hotel details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelDetailType"
      }
    },
    "hotelDetailType": {
      "type": "object",
      "description": "Base details used for storing information about a hotel detail.",
      "properties": {
        "code": {
          "description": "Specifies the hotel detail code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Specifies the hotel detail description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "category": {
          "description": "Specifies the hotel detail category.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sequence": {
          "description": "Specifies the sorting sequence number for the hotel detail.",
          "type": "integer"
        },
        "hotelId": {
          "description": "Specifies the hotel code of the hotel detail.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelDetailValues": {
          "description": "Collection of values which are associated with the hotel detail.",
          "$ref": "#/definitions/hotelDetailValuesType"
        }
      }
    },
    "hotelDetailValuesType": {
      "type": "array",
      "description": "Collection of property level hotel detail values.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelDetailValueType"
      }
    },
    "hotelDetailValueType": {
      "type": "object",
      "description": "This type holds the base information of the hotel detail value which will be associated with a hotel detail.",
      "properties": {
        "code": {
          "description": "Specifies the hotel detail value code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Specifies the description of the hotel detail value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "sequence": {
          "description": "Specifies the sorting sequence number for the hotel detail value.",
          "type": "integer"
        },
        "newCode": {
          "description": "Specifies the new hotel detail value code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "jobTitlesDetails": {
      "type": "object",
      "description": "Response object for fetching job titles configured for hotels.",
      "properties": {
        "jobTitles": {
          "description": "Collection of job titles.",
          "$ref": "#/definitions/jobTitlesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "jobTitlesType": {
      "type": "array",
      "description": "Job Title details for a hotel.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/jobTitleType"
      }
    },
    "jobTitleType": {
      "type": "object",
      "description": "Base details common between both template and hotel job titles.",
      "properties": {
        "code": {
          "description": "Job Title Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the job title.",
          "$ref": "#/definitions/translationTextType80"
        },
        "displayClosingScript": {
          "description": "Flag to indicate if display reservation closing script.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Property Code where the job title belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "translationTextType80": {
      "type": "object",
      "description": "Contains Multiple translated texts and language codes.",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 80.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "jobTitlesCriteria": {
      "type": "object",
      "description": "Request object for creating new job titles for hotels.",
      "properties": {
        "jobTitles": {
          "description": "Collection of job titles to be created.",
          "$ref": "#/definitions/jobTitlesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "jobTitlesToBeChanged": {
      "type": "object",
      "description": "Request object for modifying job titles for hotels.",
      "properties": {
        "jobTitles": {
          "description": "Collection of job titles to be modified.",
          "$ref": "#/definitions/jobTitlesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "marketingCitiesDetails": {
      "type": "object",
      "description": "Response object for fetching marketing cities configured for hotels.",
      "properties": {
        "marketingCities": {
          "description": "Collection of marketing cities.",
          "$ref": "#/definitions/marketingCitiesType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "marketingCitiesType": {
      "type": "array",
      "description": "Marketing city details for a hotel.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/marketingCityConfigType"
      }
    },
    "marketingCityConfigType": {
      "type": "object",
      "description": "Base details of the marketing city.",
      "properties": {
        "description": {
          "description": "Description of the marketing city.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "distance": {
          "description": "Distance from the hotel to the marketing city.",
          "type": "number"
        },
        "distanceType": {
          "description": "Unit of distance for the Distance measurement.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "drivingTime": {
          "description": "Driving time from the hotel to the marketing city.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "direction": {
          "description": "Direction of the marketing city in relation to the hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sequence": {
          "description": "Sequence number for displaying the marketing city.",
          "type": "integer"
        },
        "inactive": {
          "description": "Flag to indicate whether the marketing city is inactive or not.",
          "type": "boolean"
        },
        "marketingCity": {
          "description": "Marketing city code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "regionCode": {
          "description": "Region that the marketing city belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel the marketing city belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "marketingCitiesCriteria": {
      "type": "object",
      "description": "Request object for creating new marketing cities for hotels.",
      "properties": {
        "marketingCities": {
          "description": "Collection of marketing cities to be created.",
          "$ref": "#/definitions/marketingCitiesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "marketingCitiesToBeChanged": {
      "type": "object",
      "description": "Request object for modifying marketing cities for hotels.",
      "properties": {
        "marketingCities": {
          "description": "Collection of marketing cities to be modified.",
          "$ref": "#/definitions/marketingCitiesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelNotesCriteria": {
      "type": "object",
      "description": "Request object for creating new Notes for the hotels",
      "properties": {
        "hotelNotes": {
          "description": "Collection of hotel notes to be created.",
          "$ref": "#/definitions/hotelNotesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelNotesToBeChanged": {
      "type": "object",
      "description": "Request object for changing hotel Notes for hotels.",
      "properties": {
        "hotelNotes": {
          "description": "Collection of Hotel Notes to be modified.",
          "$ref": "#/definitions/hotelNotesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "operaHotelContextDetails": {
      "type": "object",
      "description": "The result element returned with general hotel contextual information.",
      "properties": {
        "hotelContext": {
          "description": "A record containing hotel contextual information, stored as attributes.",
          "type": "object",
          "properties": {
            "hotelId": {
              "description": "The hotel code.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "hotelName": {
              "description": "The hotel name.",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "businessDate": {
              "description": "The hotel's business date.",
              "type": "string",
              "format": "date"
            },
            "configurationMode": {
              "description": "The hotel's configuration mode if applicable.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "countryMode": {
              "description": "The hotel's country code.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "languageCode": {
              "description": "The hotel's language code.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "currencyCode": {
              "description": "Provides the hotel's currency code.",
              "type": "string",
              "minLength": 3,
              "maxLength": 3
            },
            "cateringCurrencyCode": {
              "description": "Catering Currency Code, used when Catering Currency differs from base currency.",
              "type": "string",
              "minLength": 3,
              "maxLength": 3
            },
            "checkInTime": {
              "description": "The hotel's check-in time.",
              "type": "string",
              "format": "date"
            },
            "checkOutTime": {
              "description": "The hotel's check-out time.",
              "type": "string",
              "format": "date"
            },
            "timezone": {
              "description": "The hotel's timezone.",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "loginUserId": {
              "description": "The login user.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "chainCode": {
              "description": "The hotel's chain code.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelRateRangesCriteria": {
      "type": "object",
      "description": "Request object for creating new Rate Ranges for hotels.",
      "properties": {
        "hotelRateRanges": {
          "description": "Collection of Rate Range to be created.",
          "$ref": "#/definitions/hotelRateRangesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelRateRangesToBeChanged": {
      "type": "object",
      "description": "Request object for changing hotel Rate Ranges for hotels.",
      "properties": {
        "hotelRateRanges": {
          "description": "Collection of Rate Ranges to be modified.",
          "$ref": "#/definitions/hotelRateRangesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelRestaurantsCriteria": {
      "type": "object",
      "description": "Request object for creating new restaurants for hotels.",
      "properties": {
        "hotelRestaurants": {
          "description": "Collection of restaurants to be created.",
          "$ref": "#/definitions/hotelRestaurantsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelRestaurantsToBeChanged": {
      "type": "object",
      "description": "Request object for changing hotel restaurants for hotels.",
      "properties": {
        "hotelRestaurants": {
          "description": "Collection of restaurants to be modified.",
          "$ref": "#/definitions/hotelRestaurantsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "telephoneBookCategoriesDetails": {
      "type": "object",
      "description": "Response object for fetch Telephone Categories.",
      "properties": {
        "telephoneCategories": {
          "description": "Collection of telephone categories.",
          "$ref": "#/definitions/telephoneCategoriesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "telephoneCategoriesType": {
      "type": "array",
      "description": "This type holds collection of Telephone Categories with complete information.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/telephoneCategoryType"
      }
    },
    "telephoneCategoryType": {
      "type": "object",
      "description": "This type definition of Telephone Category Type.",
      "properties": {
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "orderBy": {
          "type": "integer"
        },
        "generic": {
          "type": "boolean"
        }
      }
    },
    "telephoneBookCategoriesCriteria": {
      "type": "object",
      "description": "Request object for Telephone Book Category.",
      "properties": {
        "telephoneCategories": {
          "description": "Collection of telephone categories to create.",
          "$ref": "#/definitions/telephoneCategoriesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "telephoneBookCategoriesToBeChanged": {
      "type": "object",
      "description": "Request object for Telephone Book Category.",
      "properties": {
        "telephoneCategories": {
          "description": "Collection of telephone categories to change.",
          "$ref": "#/definitions/telephoneCategoriesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "telephoneBookEntriesDetails": {
      "type": "object",
      "description": "Response object for fetch Telephone Book Entries.",
      "properties": {
        "telephoneBookEntries": {
          "description": "Collection of telephone book entries.",
          "$ref": "#/definitions/telephoneBookEntriesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "telephoneBookEntriesType": {
      "type": "array",
      "description": "This type holds collection of Telephone Book Entries with complete information.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/telephoneBookEntryType"
      }
    },
    "telephoneBookEntryType": {
      "type": "object",
      "description": "This type definition of Telephone Book Entry Type.",
      "properties": {
        "id": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "category": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "categorySequence": {
          "type": "integer"
        },
        "categoryDescription": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "telephone": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "url": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1000
        },
        "remarks": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "telephoneBookEntriesCriteria": {
      "type": "object",
      "description": "Request object for Telephone Book Entries.",
      "properties": {
        "telephoneBookEntries": {
          "description": "Telephone Book Entries to be created.",
          "$ref": "#/definitions/telephoneBookEntriesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "telephoneBookEntriesToBeChanged": {
      "type": "object",
      "description": "Request object for Telephone Book Entries.",
      "properties": {
        "telephoneBookEntries": {
          "description": "Telephone Book Entries to be changed.",
          "$ref": "#/definitions/telephoneBookEntriesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transportationDetails": {
      "type": "object",
      "description": "Response object for information regarding transportation.",
      "properties": {
        "transportationList": {
          "$ref": "#/definitions/transportationListType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transportationListType": {
      "type": "array",
      "description": "Collection of hotel level transportation.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/transportationType"
      }
    },
    "transportationType": {
      "type": "object",
      "description": "Information about the transportations of the hotel.",
      "properties": {
        "phoneNumber": {
          "description": "The name of the package.",
          "$ref": "#/definitions/telephoneType"
        },
        "relativePosition": {
          "$ref": "#/definitions/relativePositionType"
        },
        "description": {
          "description": "The description of the transportation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1000
        },
        "comments": {
          "description": "Comments about the transportation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "priceRange": {
          "description": "The price range of the transportation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "website": {
          "description": "Web address associated with transportation.",
          "$ref": "#/definitions/uRLType"
        },
        "keyOptions": {
          "description": "This is a placeholder element for future use. Functionality may not be available for the current implementation.",
          "$ref": "#/definitions/codeListType"
        },
        "transportationCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "label": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "orderBy": {
          "type": "integer"
        },
        "hotelId": {
          "description": "Hotel code for the transportation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "transportationCriteria": {
      "type": "object",
      "description": "Request object for creating transportation.",
      "properties": {
        "transportationList": {
          "$ref": "#/definitions/transportationListType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transportationToBeChanged": {
      "type": "object",
      "description": "Request object for modifying transportation.",
      "properties": {
        "transportationList": {
          "$ref": "#/definitions/transportationListType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "yieldAdjustmentCodesDetails": {
      "type": "object",
      "description": "Response object for fetching Yield AdjustmentCodes configurations.",
      "properties": {
        "yieldAdjustmentCodes": {
          "description": "Collection of Yield AdjustmentCodes configurations.",
          "$ref": "#/definitions/yieldAdjustmentCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "yieldAdjustmentCodesType": {
      "type": "array",
      "description": "Holds Yield AdjustmentCodes details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/yieldAdjustmentCodeType"
      }
    },
    "yieldAdjustmentCodeType": {
      "type": "object",
      "description": "Provides information about the Adjustment Codes.",
      "properties": {
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Code of the Adjustment Codes.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Adjustment Codes.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "type": {
          "description": "Yield Adjustment Type. e.g. Per Stay for ST",
          "$ref": "#/definitions/yieldAdjustmentTypeType"
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "yieldAdjustmentTypeType": {
      "type": "string",
      "description": "Defines values for Yield Adjustment Types.",
      "enum": [
        "PerStay",
        "PerNight",
        "PerPersonPerNight",
        "PerPersonPerStay"
      ]
    },
    "yieldAdjustmentCodesCriteria": {
      "type": "object",
      "description": "Request object for creating new Yield AdjustmentCodes Configurations.",
      "properties": {
        "yieldAdjustmentCodes": {
          "description": "Yield AdjustmentCodes Configurations to be created.",
          "$ref": "#/definitions/yieldAdjustmentCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "yieldAdjustmentCodesToBeChanged": {
      "type": "object",
      "description": "Request object for changing existing Yield AdjustmentCodes Configurations.",
      "properties": {
        "yieldAdjustmentCodes": {
          "description": "Yield AdjustmentCodes Configurations to be changed.",
          "$ref": "#/definitions/yieldAdjustmentCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "yieldCategoriesDetails": {
      "type": "object",
      "description": "Response object for fetching Yield Category configurations.",
      "properties": {
        "yieldCategories": {
          "description": "Collection of Yield Category configurations.",
          "$ref": "#/definitions/yieldCategoriesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "yieldCategoriesType": {
      "type": "array",
      "description": "Holds Yield Category details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/yieldCategoryType"
      }
    },
    "yieldCategoryType": {
      "type": "object",
      "description": "Provides information about the Yield Category.",
      "properties": {
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Code of the Yield Category.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Yield Category.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "yieldCategoriesCriteria": {
      "type": "object",
      "description": "Request object for creating new Yield Category Configurations.",
      "properties": {
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Code of the Yield Category.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Yield Category.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "yieldCategoriesToBeChanged": {
      "type": "object",
      "description": "Request object for changing existing Yield Category Configurations.",
      "properties": {
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Code of the Yield Category.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Yield Category.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyDepartments": {
      "type": "object",
      "properties": {
        "departments": {
          "type": "array",
          "description": "List of the departments to be copied.",
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyConfigurationCodeType": {
      "type": "object",
      "description": "Information needed to copy configuration code from one property to the other.",
      "properties": {
        "targetHotelCode": {
          "description": "Property to which configuration code type to be copied to.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "sourceHotelCode": {
          "description": "Code that is to be copied.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Source hotel code from which code is to be copied from.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "copyYieldAdjustmentCodes": {
      "type": "object",
      "properties": {
        "yieldAdjustmentCodes": {
          "type": "array",
          "description": "List of the Yield AdjustmentCodes to be copied.",
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyYieldCategories": {
      "type": "object",
      "properties": {
        "yieldCategories": {
          "type": "array",
          "description": "List of the Yield Category to be copied.",
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateJobTitlesDetails": {
      "type": "object",
      "description": "Response object for fetching template job titles.",
      "properties": {
        "templateJobTitles": {
          "description": "Collection of template job titles.",
          "$ref": "#/definitions/templateJobTitlesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateJobTitlesType": {
      "type": "array",
      "description": "Template job title details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/templateJobTitleType"
      }
    },
    "templateJobTitleType": {
      "type": "object",
      "description": "Base details common between both template and hotel job titles.",
      "properties": {
        "code": {
          "description": "Job Title Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the job title.",
          "$ref": "#/definitions/translationTextType80"
        },
        "displayClosingScript": {
          "description": "Flag to indicate if display reservation closing script.",
          "type": "boolean"
        }
      }
    },
    "templateJobTitlesCriteria": {
      "type": "object",
      "description": "Request object for creating new template job titles.",
      "properties": {
        "templateJobTitles": {
          "description": "Collection of template job titles to be created.",
          "$ref": "#/definitions/templateJobTitlesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateJobTitlesToBeChanged": {
      "type": "object",
      "description": "Request object for modifying template job titles.",
      "properties": {
        "templateJobTitles": {
          "description": "Collection of template job titles to be modified.",
          "$ref": "#/definitions/templateJobTitlesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "languagesDetails": {
      "type": "object",
      "description": "Response object for fetching languages.",
      "properties": {
        "languages": {
          "description": "Collection of languages.",
          "$ref": "#/definitions/configLanguagesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "configLanguagesType": {
      "type": "array",
      "description": "This type holds a collection of languages.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/configLanguageType"
      }
    },
    "configLanguageType": {
      "type": "object",
      "description": "This gives detailed information about a language.",
      "properties": {
        "description": {
          "description": "Description gives the full text language name associated with the code.",
          "$ref": "#/definitions/translationTextType50"
        },
        "translationLanguageCode": {
          "description": "Translation Language Code is required for the Translation Studio program to display language into which object has been translated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reportDateLanguage": {
          "description": "Report Date Language if filled will represent correctly in the report language date elements that might be spelled out, like the day-of-week or the month.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "useAsAlternateLanguage": {
          "description": "This is a placeholder element for future use. Functionality may not be available for the current implementation.",
          "type": "boolean"
        },
        "locale": {
          "description": "Geographic, political or cultural region.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "localeDescription": {
          "description": "Description for the locale.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "languageCode": {
          "description": "Language Code is a user definable code that identifies a language.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "translationTextType50": {
      "type": "object",
      "description": "Contains Multiple translated texts and language codes.",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 50.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "languagesCriteria": {
      "type": "object",
      "description": "Request object for creating new language records.",
      "properties": {
        "languages": {
          "description": "Collection containing details of languages to be created.",
          "$ref": "#/definitions/configLanguagesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "languagesToBeChanged": {
      "type": "object",
      "description": "Request object for changing details of existing language records.",
      "properties": {
        "languages": {
          "description": "Collection containing details of languages to be changed.",
          "$ref": "#/definitions/configLanguagesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateMarketingCitiesDetails": {
      "type": "object",
      "description": "Response object for fetching template marketing cities.",
      "properties": {
        "templateMarketingCities": {
          "description": "Collection of template marketing cities.",
          "$ref": "#/definitions/templateMarketingCitiesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateMarketingCitiesType": {
      "type": "array",
      "description": "Template marketing city details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/templateMarketingCityConfigType"
      }
    },
    "templateMarketingCityConfigType": {
      "type": "object",
      "description": "Base details of the marketing city.",
      "properties": {
        "description": {
          "description": "Description of the marketing city.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "distance": {
          "description": "Distance from the hotel to the marketing city.",
          "type": "number"
        },
        "distanceType": {
          "description": "Unit of distance for the Distance measurement.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "drivingTime": {
          "description": "Driving time from the hotel to the marketing city.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "direction": {
          "description": "Direction of the marketing city in relation to the hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sequence": {
          "description": "Sequence number for displaying the marketing city.",
          "type": "integer"
        },
        "inactive": {
          "description": "Flag to indicate whether the marketing city is inactive or not.",
          "type": "boolean"
        },
        "marketingCity": {
          "description": "Marketing city code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "regionCode": {
          "description": "Region that the marketing city belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "newRegionCode": {
          "description": "New region code to change the marketing city to. Template marketing cities allow editing of the region code. Because this is a key field we need to retain the original region code to locate the appropriate record to update. The original region code element is located in MarketingCityBaseType.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "templateMarketingCitiesCriteria": {
      "type": "object",
      "description": "Request object for creating new template marketing cities.",
      "properties": {
        "templateMarketingCities": {
          "description": "Collection of template marketing cities to be created.",
          "$ref": "#/definitions/templateMarketingCitiesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyMarketingCities": {
      "type": "object",
      "description": "Request object for copying template marketing cities to hotel(s).",
      "properties": {
        "copyInstructions": {
          "description": "List of the template marketing city(s) to be copied to hotel(s).",
          "$ref": "#/definitions/copyMarketingCitiesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyMarketingCitiesType": {
      "type": "object",
      "description": "Copy instructions for template marketing cities to hotel(s).",
      "properties": {
        "hotelCodes": {
          "description": "Hotel codes to copy the marketing city templates to.",
          "$ref": "#/definitions/codeListType"
        },
        "templateMarketingCities": {
          "description": "Marketing city template to be copied to the hotel(s).",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/templateMarketingCityInfoType"
          }
        }
      }
    },
    "templateMarketingCityInfoType": {
      "type": "object",
      "description": "Template marketing city details.",
      "properties": {
        "marketingCity": {
          "description": "Marketing city code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "regionCode": {
          "description": "Region code the marketing city belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "templateMarketingCitiesToBeChanged": {
      "type": "object",
      "description": "Request object for modifying template marketing cities.",
      "properties": {
        "templateMarketingCities": {
          "description": "Collection of template marketing cities to be modified.",
          "$ref": "#/definitions/templateMarketingCitiesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "marketingCitiesByRegionDetails": {
      "type": "object",
      "properties": {
        "marketingCities": {
          "$ref": "#/definitions/regionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "regionsType": {
      "type": "array",
      "description": "List of Regions.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/regionType"
      }
    },
    "regionType": {
      "type": "object",
      "properties": {
        "marketingCities": {
          "description": "Marketing Cities under this Region.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/marketingCityType"
          }
        },
        "regionCode": {
          "description": "Code of this Region.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Region",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "marketingCityType": {
      "type": "object",
      "properties": {
        "cityHotels": {
          "description": "Hotels under this Marketing City.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/cityHotelInfoType"
          }
        },
        "marketingCity": {
          "description": "Hotels under this Marketing City.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Marketing City",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "cityHotelInfoType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotels under this Marketing City.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "name": {
          "description": "Hotel Name for the Hotel Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "marketingRegionsDetails": {
      "type": "object",
      "description": "Response object for fetching Marketing Regions.",
      "properties": {
        "marketingRegions": {
          "description": "Collection of Marketing Regions.",
          "$ref": "#/definitions/marketingRegionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "marketingRegionsType": {
      "type": "array",
      "description": "List of Marketing Regions.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/marketingRegionType"
      }
    },
    "marketingRegionType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "marketingRegionsCriteria": {
      "type": "object",
      "description": "Request object for creating Marketing Regions.",
      "properties": {
        "marketingRegions": {
          "description": "Marketing Regionsto be created.",
          "$ref": "#/definitions/marketingRegionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "marketingRegionsToBeChanged": {
      "type": "object",
      "description": "Request object for changing Marketing Regions.",
      "properties": {
        "marketingRegions": {
          "description": "Marketing Regionsto be changed.",
          "$ref": "#/definitions/marketingRegionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "noteTypesDetails": {
      "type": "object",
      "description": "Response object for fetching Note Types of specific Notes Group.",
      "properties": {
        "noteTypes": {
          "description": "Collection of Note Types.",
          "$ref": "#/definitions/noteTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "noteTypesType": {
      "type": "array",
      "description": "Note Types Collection element.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/noteTypeType"
      }
    },
    "noteTypeType": {
      "type": "object",
      "properties": {
        "noteGroup": {
          "description": "Notes Group of the Note Types code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Code of the Note Types.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Note Types Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "notificationAreas": {
          "description": "Display Sequence.",
          "$ref": "#/definitions/codeListType"
        },
        "displaySequence": {
          "description": "Display Sequence.",
          "type": "number"
        },
        "inactive": {
          "description": "Indicates if the Note Types Code is inactive.",
          "type": "boolean"
        },
        "internal": {
          "description": "Indicates if the Note Types Code is internal.",
          "type": "boolean"
        },
        "overrideInternal": {
          "description": "Indicates if the Note Types Code is override internal.",
          "type": "boolean"
        },
        "defaultNoteType": {
          "description": "Indicates if the Note Types Code is default.",
          "type": "boolean"
        },
        "departmentNotes": {
          "description": "Indicates if the Note Types Code has department notes.",
          "type": "boolean"
        },
        "globalAllowed": {
          "description": "Indicates if the Note Types Code is globally allowed.",
          "type": "boolean"
        },
        "departments": {
          "description": "Departments that can see Department Notes of the Note Types Code.",
          "$ref": "#/definitions/genericHotelCodeCodeListType"
        },
        "defaultText": {
          "description": "Indicates if the Note Types Code has at least one default text defined.",
          "type": "boolean"
        },
        "defaultNoteText": {
          "description": "Default Note Text if Note Type has default note.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "propertyDefaultNoteTexts": {
          "description": "Collection of multiple Default Note Text for different Properties/Global for specific Note Type/Node Code.",
          "$ref": "#/definitions/defaultNoteTextsDetailType"
        }
      },
      "description": "Note Types Information Type."
    },
    "genericHotelCodeCodeListType": {
      "type": "array",
      "description": "List of HotelCode and Code combinations.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/genericHotelCodeCodeType"
      }
    },
    "genericHotelCodeCodeType": {
      "type": "object",
      "description": "Generic Type to specify unique/primary id for the code. mostly used for Hotel level configuration codes removal request.",
      "properties": {
        "hotelId": {
          "description": "Hotel where the code is configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Configuration code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "defaultNoteTextsDetailType": {
      "type": "array",
      "description": "Collection of individual Default Note Text details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/defaultNoteTextDetailType"
      }
    },
    "noteTypesCriteria": {
      "type": "object",
      "description": "Request object for creating new Note Types.",
      "properties": {
        "noteTypes": {
          "description": "Note Types to be created.",
          "$ref": "#/definitions/noteTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "noteTypesToBeChanged": {
      "type": "object",
      "description": "Request object for changing existing Note Types.",
      "properties": {
        "noteTypes": {
          "description": "Note Types to be changed.",
          "$ref": "#/definitions/noteTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "operaParametersDetails": {
      "type": "object",
      "description": "The result element containing a collection of the requested application parameters.",
      "properties": {
        "parameters": {
          "description": "Represents a single application parameter and its value.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationSettingSimpleType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "applicationSettingSimpleType": {
      "type": "object",
      "description": "Internal settings that is mainly used to get a quick information on the type.",
      "properties": {
        "configurations": {
          "description": "This element is used for additional items (Key-Value-Pair) that has relevance to the operation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/applicationSettingSimpleType"
          }
        },
        "name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "levelType": {
          "$ref": "#/definitions/applicationSettingLevelType"
        },
        "levelCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "value": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "applicationSettingLevelType": {
      "type": "string",
      "enum": [
        "Global",
        "Hotel",
        "Cro"
      ]
    },
    "propertyDetailCategoriesDetails": {
      "type": "object",
      "description": "Response object for fetching Property Detail Categories.",
      "properties": {
        "propertyDetailCategories": {
          "description": "Collection of Property Detail Categories.",
          "$ref": "#/definitions/propertyDetailCategoriesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "propertyDetailCategoriesType": {
      "type": "array",
      "description": "List of Property Detail Categories.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/propertyDetailCategoryType"
      }
    },
    "propertyDetailCategoryType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "propertyDetailCategoriesCriteria": {
      "type": "object",
      "description": "Request object for creating Property Detail Categories.",
      "properties": {
        "propertyDetailCategories": {
          "description": "Property Detail Categories to be created.",
          "$ref": "#/definitions/propertyDetailCategoriesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "propertyDetailCategoriesToBeChanged": {
      "type": "object",
      "description": "Request object for changing Property Detail Categories.",
      "properties": {
        "propertyDetailCategories": {
          "description": "Property Detail Categories to be changed.",
          "$ref": "#/definitions/propertyDetailCategoriesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "propertyTypesDetails": {
      "type": "object",
      "description": "Response object for fetching Property Types.",
      "properties": {
        "propertyTypes": {
          "description": "Collection of Property Types.",
          "$ref": "#/definitions/propertyTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "propertyTypesType": {
      "type": "array",
      "description": "List of Property Types.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/propertyTypeType"
      }
    },
    "propertyTypeType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "propertyTypesCriteria": {
      "type": "object",
      "description": "Request object for creating Property Types.",
      "properties": {
        "propertyTypes": {
          "description": "Property Typesto be created.",
          "$ref": "#/definitions/propertyTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "propertyTypesToBeChanged": {
      "type": "object",
      "description": "Request object for changing Property Types.",
      "properties": {
        "propertyTypes": {
          "description": "Property Typesto be changed.",
          "$ref": "#/definitions/propertyTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "regionsCodeDetails": {
      "type": "object",
      "description": "Response object for fetching Regions Code.",
      "properties": {
        "regionsCode": {
          "description": "Collection of Regions Code.",
          "$ref": "#/definitions/regionsCodeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "regionsCodeType": {
      "type": "array",
      "description": "List of Regions Code.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/regionCodeType"
      }
    },
    "regionCodeType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "regionsCodeCriteria": {
      "type": "object",
      "description": "Request object for creating Regions Code.",
      "properties": {
        "regionsCode": {
          "description": "Regions Code to be created.",
          "$ref": "#/definitions/regionsCodeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "regionsCodeToBeChanged": {
      "type": "object",
      "description": "Request object for changing Regions Code.",
      "properties": {
        "regionsCode": {
          "description": "Regions Code to be changed.",
          "$ref": "#/definitions/regionsCodeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomAmenitiesDetails": {
      "type": "object",
      "description": "Response object for fetching Room Amenities.",
      "properties": {
        "roomAmenities": {
          "description": "Collection of Room Amenities.",
          "$ref": "#/definitions/roomAmenitiesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomAmenitiesType": {
      "type": "array",
      "description": "List of Room Amenities.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomAmenityType"
      }
    },
    "roomAmenityType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "roomAmenitiesCriteria": {
      "type": "object",
      "description": "Request object for creating Room Amenities.",
      "properties": {
        "roomAmenities": {
          "description": "Room Amenitiesto be created.",
          "$ref": "#/definitions/roomAmenitiesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomAmenitiesToBeChanged": {
      "type": "object",
      "description": "Request object for changing Room Amenities.",
      "properties": {
        "roomAmenities": {
          "description": "Room Amenitiesto be changed.",
          "$ref": "#/definitions/roomAmenitiesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "operaSettingsDetails": {
      "type": "object",
      "description": "The result element containing the requested application settings.",
      "properties": {
        "activeFunctions": {
          "description": "Count of active property services functions.",
          "type": "integer"
        },
        "groups": {
          "description": "Contains a collection of application settings for a particular group.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/applicationSettingGroupType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "applicationSettingGroupType": {
      "type": "object",
      "description": "This element simply groups the different Application Functions.",
      "properties": {
        "appSettings": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/applicationSettingType"
          }
        },
        "groupName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "groupDisplayName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "applicationSettingType": {
      "type": "object",
      "description": "Internal settings that can be of a certain valueType.",
      "properties": {
        "shortDescription": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "wildCardMatch": {
          "description": "A flag which indicate whether a wild card search should be made.",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "displayName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "$ref": "#/definitions/applicationSettingTypeType"
        },
        "hotelId": {
          "description": "Each configuration item will come with a HotelCode which will help the configuration to specify what context the update has to be. Eg. _Global,ORS,'CRO', etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sequence": {
          "type": "number"
        },
        "editAllowed": {
          "type": "boolean"
        },
        "value": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "scope": {
          "type": "string",
          "enum": [
            "P",
            "G",
            "Ch",
            "C"
          ]
        },
        "valueType": {
          "type": "string",
          "enum": [
            "Yn",
            "Integer",
            "String",
            "SingleSelectLov",
            "MultiSelectLov",
            "ShuttleLov",
            "Custom",
            "Double",
            "Secure"
          ]
        },
        "conversionType": {
          "description": "Represents whether the value is OXI Parameter or Conversion code default.",
          "$ref": "#/definitions/applicationSettingConversionType"
        },
        "settings": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/baseApplicationSettingType"
          }
        },
        "levelType": {
          "$ref": "#/definitions/applicationSettingLevelType"
        },
        "levelCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "subscriptionCountEligible": {
          "description": "Indicates if this OPERA Setting is part of subscription count.",
          "type": "boolean"
        }
      }
    },
    "applicationSettingTypeType": {
      "type": "string",
      "enum": [
        "Function",
        "Parameter",
        "Setting"
      ]
    },
    "applicationSettingConversionType": {
      "type": "string",
      "enum": [
        "Default",
        "Parameter"
      ]
    },
    "baseApplicationSettingType": {
      "type": "object",
      "description": "Internal settings that can be of a certain valueType.",
      "properties": {
        "shortDescription": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "wildCardMatch": {
          "description": "A flag which indicate whether a wild card search should be made.",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "displayName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "$ref": "#/definitions/applicationSettingTypeType"
        },
        "hotelId": {
          "description": "Each configuration item will come with a HotelCode which will help the configuration to specify what context the update has to be. Eg. _Global,ORS,'CRO', etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sequence": {
          "type": "number"
        },
        "editAllowed": {
          "type": "boolean"
        },
        "value": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "scope": {
          "type": "string",
          "enum": [
            "P",
            "G",
            "Ch",
            "C"
          ]
        },
        "valueType": {
          "type": "string",
          "enum": [
            "Yn",
            "Integer",
            "String",
            "SingleSelectLov",
            "MultiSelectLov",
            "ShuttleLov",
            "Custom",
            "Double",
            "Secure"
          ]
        },
        "conversionType": {
          "description": "Represents whether the value is OXI Parameter or Conversion code default.",
          "$ref": "#/definitions/applicationSettingConversionType"
        },
        "subscriptionCountEligible": {
          "description": "Indicator if the function does not count against the OPERA Control function count limit or not.",
          "type": "boolean"
        }
      }
    },
    "templateCodesDetails": {
      "type": "object",
      "description": "Response object for fetching Template Codes.",
      "properties": {
        "templateCodes": {
          "description": "Collection of Template Codes.",
          "$ref": "#/definitions/templateCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateCodesType": {
      "type": "array",
      "description": "List of Template Codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/templateCodeType"
      }
    },
    "templateCodeType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "inactive": {
          "description": "Determines whether this code is inactive or not.",
          "type": "boolean"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "templateCodesCriteria": {
      "type": "object",
      "description": "Request object for creating Template Codes.",
      "properties": {
        "templateCodes": {
          "description": "Template Codes to be created.",
          "$ref": "#/definitions/templateCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyTemplateCodes": {
      "type": "object",
      "properties": {
        "templateName": {
          "description": "Template name to be copied.",
          "$ref": "#/definitions/copyTemplateType"
        },
        "codes": {
          "description": "List of template codes to be copied.",
          "$ref": "#/definitions/codeListType"
        },
        "hotelCodes": {
          "description": "List of hotel codes for which the template needs to be copied.",
          "$ref": "#/definitions/hotelCodeListType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyTemplateType": {
      "type": "string",
      "description": "Template name for template copy operation. Eg: RateCategory",
      "enum": [
        "RateCategory",
        "PromotionCode",
        "RateClass",
        "DepositPolicy",
        "CancellationPolicy",
        "GuaranteeCode",
        "MarketCode",
        "MarketGroup",
        "SourceCode",
        "SourceGroup",
        "RoomType",
        "RoomClass",
        "CustomNumbers",
        "AlertCode",
        "AttractionCode",
        "Transportation",
        "RoomCondition",
        "RateSeason",
        "Amenity",
        "TransactionCode",
        "CompTransactionCode",
        "PkgForecastGroup",
        "RoomMaintenance",
        "DayTypeCode",
        "TurnawayCodes",
        "EventCode",
        "MessageCode",
        "Airport",
        "OutOfService",
        "Floor",
        "TransactionGroup",
        "LocatorCode",
        "RoomFeatures",
        "JobTitle",
        "DeviceLocations",
        "ShiftDropLocations",
        "HousekeepingTasks",
        "HousekeepingRoomSchedules"
      ]
    },
    "hotelCodeListType": {
      "type": "array",
      "description": "Hotel code.",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "minLength": 0,
        "maxLength": 20
      }
    },
    "templateCodesToBeChanged": {
      "type": "object",
      "description": "Request object for changing Template Codes.",
      "properties": {
        "templateCodes": {
          "description": "Template Codes to be changed.",
          "$ref": "#/definitions/templateCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transportationTemplatesDetails": {
      "type": "object",
      "description": "Response object for fetching transportation templates.",
      "properties": {
        "transportationTemplates": {
          "$ref": "#/definitions/transportationTemplatesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transportationTemplatesType": {
      "type": "array",
      "description": "Collection of transportation templates.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelTransportationType"
      }
    },
    "transportationTemplatesCriteria": {
      "type": "object",
      "description": "Request object for creating transportation templates.",
      "properties": {
        "transportationTemplates": {
          "$ref": "#/definitions/transportationTemplatesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transportationTemplatesToBeChanged": {
      "type": "object",
      "description": "Request object for modifying transportation templates.",
      "properties": {
        "transportationTemplates": {
          "$ref": "#/definitions/transportationTemplatesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "userDefinedFieldGroupsDetails": {
      "type": "object",
      "description": "Response object for fetching User Defined Field Groups.",
      "properties": {
        "userDefinedFieldGroups": {
          "description": "Collection of User Defined Field Groups.",
          "$ref": "#/definitions/userDefinedFieldGroupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "userDefinedFieldGroupsType": {
      "type": "array",
      "description": "A recurring element that identifies the User Defined Field Group.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/userDefinedFieldGroupType"
      }
    },
    "userDefinedFieldGroupType": {
      "type": "object",
      "description": "Information representation of User Defined Field Group.",
      "properties": {
        "groupCode": {
          "description": "The Code of User Defined Field Group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "The Description of User Defined Field Group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "dataType": {
          "description": "The Data Type of User Defined Field Group(eg. Integer, Char and null).",
          "$ref": "#/definitions/userDefinedFieldGroupDataType"
        },
        "dataLength": {
          "description": "Length of field values of User Defined Field Group.",
          "type": "number"
        },
        "protected": {
          "description": "Indicates that if the group could be deleted. This is a readonly element an it is only used in the fetch operation.",
          "type": "boolean"
        }
      }
    },
    "userDefinedFieldGroupDataType": {
      "type": "string",
      "description": "Simple type used for User Defined Field Group Data Type.",
      "enum": [
        "Integer",
        "Char"
      ]
    },
    "userDefinedFieldGroupsCriteria": {
      "type": "object",
      "description": "Request object for creating User Defined Field Groups.",
      "properties": {
        "userDefinedFieldGroups": {
          "description": "User Defined Field Groups to be created.",
          "$ref": "#/definitions/userDefinedFieldGroupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "userDefinedFieldGroupsToBeChanged": {
      "type": "object",
      "description": "Request object for changing User Defined Field Groups.",
      "properties": {
        "userDefinedFieldGroups": {
          "description": "User Defined Field Groups to be changed.",
          "$ref": "#/definitions/userDefinedFieldGroupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "userDefinedFieldValuesDetails": {
      "type": "object",
      "description": "Response object for fetching User Defined Field Values.",
      "properties": {
        "userDefinedFieldValues": {
          "description": "Collection of User Defined Field Values.",
          "$ref": "#/definitions/userDefinedFieldValuesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "userDefinedFieldValuesType": {
      "type": "array",
      "description": "A recurring element that identifies the User Defined Field Value.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/userDefinedFieldValueType"
      }
    },
    "userDefinedFieldValueType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "groupCode": {
          "description": "The group which the User Defined Field Value belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "userDefinedFieldValuesCriteria": {
      "type": "object",
      "description": "Request object for creating User Defined Field Values.",
      "properties": {
        "userDefinedFieldValues": {
          "description": "User Defined Field Value to be created.",
          "$ref": "#/definitions/userDefinedFieldValuesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "userDefinedFieldValuesToBeChanged": {
      "type": "object",
      "description": "Request object for changing User Defined Field Values.",
      "properties": {
        "userDefinedFieldValues": {
          "description": "User Defined Field Values to be changed.",
          "$ref": "#/definitions/userDefinedFieldValuesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "yieldMarketTypesDetails": {
      "type": "object",
      "description": "Response object for fetching Yield Market Types.",
      "properties": {
        "yieldMarketTypes": {
          "description": "Collection of Yield Market Types.",
          "$ref": "#/definitions/yieldMarketTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "yieldMarketTypesType": {
      "type": "array",
      "description": "List of Yield Market Type to be configured or fetched",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/yieldMarketTypeType"
      }
    },
    "yieldMarketTypeType": {
      "type": "object",
      "description": "Details for Yield Market Type.",
      "properties": {
        "code": {
          "description": "Yield Market Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel code for which the yield market type belong to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description for the yield market code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "alternativeCode": {
          "description": "If the yield market code does not return a result, this alternative yield market code is used instead.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "default": {
          "description": "Indicates the default yield market type.",
          "type": "boolean"
        }
      }
    },
    "yieldMarketTypesCriteria": {
      "type": "object",
      "description": "Request object for creating new Yield Market Types.",
      "properties": {
        "code": {
          "description": "Yield Market Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel code for which the yield market type belong to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description for the yield market code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "alternativeCode": {
          "description": "If the yield market code does not return a result, this alternative yield market code is used instead.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "default": {
          "description": "Indicates the default yield market type.",
          "type": "boolean"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "yieldMarketTypesToBeChanged": {
      "type": "object",
      "description": "Request object for changing existing Yield Market Types.",
      "properties": {
        "code": {
          "description": "Yield Market Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel code for which the yield market type belong to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description for the yield market code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "alternativeCode": {
          "description": "If the yield market code does not return a result, this alternative yield market code is used instead.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "default": {
          "description": "Indicates the default yield market type.",
          "type": "boolean"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "flexFieldCriteria": {
      "type": "object",
      "description": "Request object for flex fields.",
      "properties": {
        "flexFieldCriteriaType": {
          "description": "Provides information about flex fields",
          "$ref": "#/definitions/flexFieldType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "flexFieldsResponse": {
      "type": "object",
      "description": "Response object for flex fields.",
      "properties": {
        "flexFields": {
          "description": "List of flex fields.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/flexFieldType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "flexFieldType": {
      "type": "object",
      "description": "Provides the details of a flex field",
      "properties": {
        "module": {
          "description": "Module to which the flex field belongs",
          "$ref": "#/definitions/flexFieldModuleType",
          "minLength": 0,
          "maxLength": 40
        },
        "code": {
          "description": "Flex field code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "flexFieldId": {
          "description": "Unique ID of the flex field",
          "type": "number"
        },
        "description": {
          "description": "Description of the flex field",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "sequence": {
          "description": "Sequence of the flex field",
          "type": "number"
        },
        "lovName": {
          "description": "Name of the flex field LOV",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "isMandatory": {
          "description": "Indicates whether the flex field is mandatory or not",
          "type": "boolean"
        },
        "isLov": {
          "description": "Indicates whether the flex field is a LOV or not",
          "type": "boolean"
        },
        "isMultiSelectLov": {
          "description": "Indicates whether the flex field is multi-select or not",
          "type": "boolean"
        },
        "isInactive": {
          "description": "Indicates whether the flex field is active or not",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel Code",
          "type": "string",
          "minLength": 1,
          "maxLength": 20
        },
        "profileType": {
          "description": "Profile Type",
          "type": "string",
          "minLength": 1,
          "maxLength": 200
        }
      }
    },
    "flexFieldModuleType": {
      "type": "string",
      "description": "Flex field module type.",
      "enum": [
        "Profile",
        "Reservation"
      ]
    },
    "hotelToBeChanged": {
      "type": "object",
      "description": "Request object for changing Property general information.",
      "properties": {
        "hotelInfo": {
          "description": "The basic configuration information about a Hotel.",
          "$ref": "#/definitions/hotelInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "centralConfigsResponse": {
      "type": "object",
      "properties": {
        "configs": {
          "type": "array",
          "description": "Collection of Central Config Details",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/centralConfig"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "centralConfigRequest": {
      "type": "object",
      "properties": {
        "configuration": {
          "$ref": "#/definitions/centralConfig"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "centralConfig": {
      "type": "object",
      "description": "Type that holds Central Config",
      "properties": {
        "config": {
          "description": "Configuarion Classification",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "code": {
          "description": "Unique identifier of Configuation Item",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "status": {
          "type": "string",
          "description": "Status of the Configuation Item."
        }
      }
    },
    "operationResponse": {
      "type": "object",
      "properties": {
        "configs": {
          "type": "array",
          "description": "Collection of Operation Details",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/operation"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "operation": {
      "type": "object",
      "description": "Type that holds Operation values",
      "properties": {
        "operation": {
          "description": "Operations",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "code": {
          "description": "Unique identifier of Configuation Item",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "managedByOptions": {
      "description": "Describes of the Configuration is Managed by Enterprise or Property.",
      "type": "string",
      "enum": [
        "EnterpriseManaged",
        "PropertyManaged",
        "EnterpriseEnforced",
        "PropertyOverridden"
      ]
    }
  },
  "tags": [
    {
      "name": "ChainConfig",
      "description": "The ChainConfigService Web Service offers capability of creating, managing, and retrieving of chain configuration."
    },
    {
      "name": "HotelConfig",
      "description": "The Hotel Config Service Web Service offers capability to configure Master Data needed for Hotel Configuration such as managing Room Classes, Room Types, Rooms, etc."
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}
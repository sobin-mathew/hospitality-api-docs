{
  "swagger": "2.0",
  "info": {
    "title": "OPERA Cloud Content Service",
    "description": "Opera Content Service offers capability to manage large content such as images and files.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>",
    "version": "24.4",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality_apis_ww_grp@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "schemes": [
    "https"
  ],
  "basePath": "/med/config/v1",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/customizedLetter/{letterId}": {
      "get": {
        "summary": "Return customized letter",
        "description": "Use this API to return a customized letter based on search criteria such as letterId, letterIdContext, letterIdtype. <p><strong>OperationId:</strong>getCustomizedLetter</p>",
        "operationId": "getCustomizedLetter",
        "parameters": [
          {
            "name": "letterId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "letterIdContext",
            "maxLength": 80,
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "letterIdtype",
            "in": "query",
            "required": false,
            "maxLength": 80,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for retrieving customized letter.",
            "schema": {
              "$ref": "#/definitions/customizedLetter"
            }
          },
          "204": {
            "description": "CustomizedLetter not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaContent"
        ]
      }
    },
    "/emailFile/{emailId}": {
      "get": {
        "summary": "Return email blob file",
        "description": "Use this API to return email blob file stored in file storage schema based on the search criteria emailId. It's used in profiles to return email and open in an end user's mail client. <p><strong>OperationId:</strong>getEmailFile</p>",
        "operationId": "getEmailFile",
        "parameters": [
          {
            "name": "emailId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA Email ID which is used to find an Email BLOB File from OPERA. This ID is a primary identification of an email file in OPERA."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response to fetch an email file",
            "schema": {
              "$ref": "#/definitions/emailFile"
            }
          },
          "204": {
            "description": "EmailFile not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaContent"
        ]
      }
    },
    "/fileAttachments": {
      "get": {
        "summary": "Return file attachment",
        "description": "Use this API to return file attachments based on search criteria such as id, idContext, idType. <p><strong>OperationId:</strong>getFileAttachment</p>",
        "operationId": "getFileAttachment",
        "parameters": [
          {
            "name": "id",
            "maxLength": 80,
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "idContext",
            "maxLength": 80,
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "idType",
            "maxLength": 80,
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response to fetch file attachment",
            "schema": {
              "$ref": "#/definitions/file"
            }
          },
          "204": {
            "description": "FileAttachment not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaContent"
        ]
      },
      "post": {
        "summary": "Upload a file attachment",
        "description": "Use this API to upload a file attachment. <p><strong>OperationId:</strong>uploadFileAttachment</p>",
        "operationId": "uploadFileAttachment",
        "parameters": [
          {
            "name": "fileToUpload",
            "in": "body",
            "required": true,
            "description": "Request to upload a file attachment.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/fileToUpload"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaContent"
        ]
      }
    },
    "/folioReports/email": {
      "post": {
        "summary": "Create email folio report",
        "description": "Use this APU to email folio report. <p><strong>OperationId:</strong>emailFolioReport</p>",
        "operationId": "emailFolioReport",
        "parameters": [
          {
            "name": "folioReportToEmail",
            "in": "body",
            "required": true,
            "description": "Request to generate and email a folio report.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/folioReportToEmail"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaContent"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/customizedLetter": {
      "put": {
        "summary": "Update customized letter",
        "description": "Use this API to update a customized letter for a reservation for a specific property based on the hotelId, reservationId, customizedLetter. <p><strong>OperationId:</strong>setCustomizedLetter</p>",
        "operationId": "setCustomizedLetter",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "customizedLetter",
            "in": "body",
            "required": true,
            "description": "Request to save customized letter.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/customizedLetter"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/customizedLetterStatus"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaContent"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/folioReports": {
      "get": {
        "summary": "Return folio report",
        "description": "This API will get a folio report for a reservation. <p><strong>OperationId:</strong>getFolioReport</p>",
        "operationId": "getFolioReport",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "reservationIdContext",
            "maxLength": 80,
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "reservationIdType",
            "maxLength": 80,
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "folioWindowNo",
            "in": "query",
            "required": false,
            "description": "Folio window number to generate (defaults to view 1).",
            "type": "integer"
          },
          {
            "name": "billNumber",
            "in": "query",
            "required": false,
            "description": "Optional bill number to generate.",
            "type": "number"
          },
          {
            "name": "folioType",
            "maxLength": 80,
            "in": "query",
            "required": false,
            "description": "Optional folio type.",
            "type": "string"
          },
          {
            "name": "folioDate",
            "in": "query",
            "required": false,
            "description": "Optional folio generation date - defaults to hotel business date.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "referenceCurrency",
            "maxLength": 20,
            "in": "query",
            "required": false,
            "description": "Folio currency code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for folio report.",
            "schema": {
              "$ref": "#/definitions/folioReport"
            }
          },
          "204": {
            "description": "FolioReport not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaContent"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/registrationCard": {
      "get": {
        "summary": "Return registration card",
        "description": "Use this API to return a registration card for a reservation based on search criteria such as reservationId, hotelId, reservationIdContext, reservationIdType, regenerate, signedOnly, language, template.  <p><strong>OperationId:</strong>getRegistrationCard</p>",
        "operationId": "getRegistrationCard",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "reservationIdContext",
            "maxLength": 80,
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "reservationIdType",
            "maxLength": 80,
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "regenerate",
            "in": "query",
            "required": false,
            "description": "Flag indicating whether a new registration card should be generated even if a signed card already exists.",
            "type": "boolean"
          },
          {
            "name": "signedOnly",
            "in": "query",
            "required": false,
            "description": "Flag indicating whether return only the signed registrationCard if present.",
            "type": "boolean"
          },
          {
            "name": "language",
            "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
            "in": "query",
            "required": false,
            "description": "Optional language code to use for registration card generation. Default guest language will be applied if not specified.",
            "type": "string"
          },
          {
            "name": "template",
            "maxLength": 80,
            "in": "query",
            "required": false,
            "description": "Optional registration card template code to use for registration card generation. Default template will be applied if not specified.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for registration card.",
            "schema": {
              "$ref": "#/definitions/registrationCard"
            }
          },
          "204": {
            "description": "RegistrationCard not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaContent"
        ]
      }
    },
    "/images": {
      "post": {
        "summary": "Upload image",
        "description": "You can use this API to upload an image for imageCodeType RoomMaintIssue. <p><strong>OperationId:</strong>uploadImage</p>",
        "operationId": "uploadImage",
        "parameters": [
          {
            "name": "imageToUpload",
            "in": "body",
            "required": true,
            "description": "Request to upload an image.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/imageToUpload"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaContent"
        ]
      },
      "delete": {
        "summary": "Delete image",
        "description": "Use this API to delete an image based on parameters such as imageCode, imageSet, imageId, imageIdContext, imageIdType. <p><strong>OperationId:</strong>removeImage</p>",
        "operationId": "removeImage",
        "parameters": [
          {
            "name": "imageCode",
            "in": "query",
            "required": false,
            "description": "An enumeration of image codes such as Logo, RoomType, InvItem",
            "type": "string",
            "uniqueItems": true,
            "enum": [
              "LogoChain",
              "Logo",
              "Profile",
              "Nationality",
              "User",
              "ToolbarItemCode",
              "Chain",
              "MembershipType",
              "MembershipLevel",
              "Resort",
              "RoomTypeChain",
              "RoomType",
              "RoomNumber",
              "OooReasonChain",
              "OooReason",
              "RoomMaintChain",
              "RoomMaintenance",
              "RoomMaintIssue",
              "FloorPlan",
              "SiteLayout",
              "Attraction",
              "PropertyMap",
              "InvItemChain",
              "InvItem",
              "PackageChain",
              "Package",
              "Pool",
              "RoomConditionChain",
              "RoomCondition",
              "FunctionSpace",
              "FunctionSetupStyle",
              "TrackItTypeChain",
              "TrackItType",
              "Height",
              "Width"
            ]
          },
          {
            "name": "imageSet",
            "maxLength": 800,
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Used for Character Strings, length 0 to 800."
          },
          {
            "name": "imageId",
            "maxLength": 2000,
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "imageIdContext",
            "maxLength": 80,
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "imageIdType",
            "maxLength": 80,
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaContent"
        ]
      },
      "get": {
        "summary": "Return image",
        "description": "Use this API to return an image based on search criteria such as linkId, linkIdContext, linkIdType, imageCode, imageParameterCode, imageParameterValue, languageCode, imageStyle, imageId, imageIdContext, imageIdType, base64.  <p><strong>OperationId:</strong>getImage</p>",
        "operationId": "getImage",
        "parameters": [
          {
            "name": "linkId",
            "maxLength": 2000,
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "linkIdContext",
            "maxLength": 80,
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "linkIdType",
            "maxLength": 80,
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "imageCode",
            "description": "An enumeration of image codes such as Logo, RoomType, InvItem",
            "in": "query",
            "required": false,
            "type": "string",
            "uniqueItems": true,
            "enum": [
              "LogoChain",
              "Logo",
              "Profile",
              "Nationality",
              "User",
              "ToolbarItemCode",
              "Chain",
              "MembershipType",
              "MembershipLevel",
              "Resort",
              "RoomTypeChain",
              "RoomType",
              "RoomNumber",
              "OooReasonChain",
              "OooReason",
              "RoomMaintChain",
              "RoomMaintenance",
              "RoomMaintIssue",
              "FloorPlan",
              "SiteLayout",
              "Attraction",
              "PropertyMap",
              "InvItemChain",
              "InvItem",
              "PackageChain",
              "Package",
              "Pool",
              "RoomConditionChain",
              "RoomCondition",
              "FunctionSpace",
              "FunctionSetupStyle",
              "TrackItTypeChain",
              "TrackItType",
              "Height",
              "Width"
            ]
          },
          {
            "name": "imageParameterCode",
            "description": "An enumeration of image parameter codes such as Logo, RoomType, InvItem",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "LogoChain",
                "Logo",
                "Profile",
                "Nationality",
                "User",
                "ToolbarItemCode",
                "Chain",
                "MembershipType",
                "MembershipLevel",
                "Resort",
                "RoomTypeChain",
                "RoomType",
                "RoomNumber",
                "OooReasonChain",
                "OooReason",
                "RoomMaintChain",
                "RoomMaintenance",
                "RoomMaintIssue",
                "FloorPlan",
                "SiteLayout",
                "Attraction",
                "PropertyMap",
                "InvItemChain",
                "InvItem",
                "PackageChain",
                "Package",
                "Pool",
                "RoomConditionChain",
                "RoomCondition",
                "FunctionSpace",
                "FunctionSetupStyle",
                "TrackItTypeChain",
                "TrackItType",
                "Height",
                "Width"
              ]
            },
            "required": false
          },
          {
            "name": "imageParameterValue",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Image parameter value.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "languageCode",
            "maxLength": 20,
            "description": "Unique Code of language.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "imageStyle",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "An enumeration of image styles.",
            "uniqueItems": true,
            "enum": [
              "Full",
              "Thumbnail",
              "Icon",
              "Square",
              "Banner",
              "Button",
              "Lowres",
              "Highres"
            ]
          },
          {
            "name": "imageId",
            "maxLength": 2000,
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "imageIdContext",
            "maxLength": 80,
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "imageIdType",
            "maxLength": 80,
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "base64",
            "in": "query",
            "required": false,
            "description": "True if the image to be returned as a base64String else if the image to be returned as the binary in MTOM attachment then false .",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response to fetch image(s)",
            "schema": {
              "$ref": "#/definitions/image"
            }
          },
          "204": {
            "description": "Image not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "OperaContent"
        ]
      }
    }
  },
  "parameters": {
    "authKey": {
      "name": "authorization",
      "description": "Bearer token that needs to be passed which is generated post user authentication",
      "type": "string",
      "in": "header",
      "required": true
    },
    "x-app-key": {
      "name": "x-app-key",
      "description": "Client or Partner's Application Key",
      "type": "string",
      "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
      "in": "header",
      "required": true
    },
    "x-hotelid": {
      "name": "x-hotelid",
      "maxLength": 2000,
      "type": "string",
      "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
      "in": "header",
      "required": true
    },
    "x-externalsystem": {
      "name": "x-externalsystem",
      "type": "string",
      "maxLength": 80,
      "description": "External system code.",
      "in": "header",
      "x-example": "EXTERNALSYSTEMCODE"
    },
    "Accept-Language": {
      "name": "Accept-Language",
      "type": "string",
      "description": "Language code",
      "in": "header"
    },
    "x-hubid": {
      "name": "x-hubid",
      "type": "string",
      "description": "x-hubid is a logical grouping of multiple properties that allows api consumers to manage data from a group of properties. This x-hubid is a valid list of hub codes configured in OPERA to which the user has access. Rest APIs without hotelId in the operation path can support hub level integration using x-hubid",
      "in": "header"
    }
  },
  "responses": {
    "400": {
      "description": "Bad Request",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "401": {
      "description": "Unauthorized"
    },
    "403": {
      "description": "Forbidden"
    },
    "404": {
      "description": "Resource not found",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "405": {
      "description": "Method not allowed"
    },
    "406": {
      "description": "Not acceptable."
    },
    "413": {
      "description": "Request Entity Too Large"
    },
    "414": {
      "description": "Request URI Too Large"
    },
    "415": {
      "description": "Unsupported Media Type"
    },
    "500": {
      "description": "System Error",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "502": {
      "description": "Bad Gateway"
    },
    "503": {
      "description": "Service Unavailable"
    }
  },
  "definitions": {
    "customizedLetter": {
      "type": "object",
      "description": "Response object for retrieving customized letter.",
      "properties": {
        "customizedLetterDetails": {
          "description": "Customized letter in HTML or RTF format.",
          "$ref": "#/definitions/customizedLetterType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "customizedLetterType": {
      "type": "object",
      "description": "Details about customized letter.",
      "properties": {
        "hotelId": {
          "description": "Hotel code that the customized letter belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "Reservation ID that the customized letter belongs to.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "customizedLetter": {
          "description": "Customized letter in HTML or RTF format.",
          "type": "string",
          "format": "byte"
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "uniqueID_Type": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "instanceLink": {
      "type": "object",
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      }
    },
    "warningsType": {
      "type": "array",
      "description": "Used in conjunction with the Success element to define a business error.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    },
    "warningType": {
      "type": "object",
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "minLength": 1,
          "maxLength": 8
        }
      }
    },
    "exceptionDetailType": {
      "title": "Error Detail",
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "errorInstance": {
      "title": "Error Instance Details",
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "emailFile": {
      "type": "object",
      "description": "Response object for Fetch Email Blob File Operation.",
      "properties": {
        "file": {
          "description": "Email File Blob Details based on email Id Number",
          "$ref": "#/definitions/emailFileType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "emailFileType": {
      "type": "object",
      "description": "ID that uniquely defines an email object",
      "properties": {
        "emailID": {
          "description": "Unique ID that represents an email.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "emailFile": {
          "description": "File attachment in base64 binary format",
          "type": "string",
          "format": "byte"
        },
        "emailFileName": {
          "description": "Name of the attachment",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        }
      }
    },
    "file": {
      "type": "object",
      "description": "Response to fetch file attachment",
      "properties": {
        "fileDetails": {
          "description": "File Attachement details",
          "$ref": "#/definitions/fileAttachmentType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fileAttachmentType": {
      "type": "object",
      "description": "ID that uniquely determines file attachment",
      "properties": {
        "attachmentId": {
          "description": "Unique ID that represents file attachment",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "fileAttachment": {
          "description": "File attachment in base64 binary format",
          "type": "string",
          "format": "byte"
        },
        "fileName": {
          "description": "Name of the attachment",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        }
      }
    },
    "fileToUpload": {
      "type": "object",
      "description": "Request to upload a file attachment.",
      "properties": {
        "linkId": {
          "description": "Link Id of the attachment.",
          "$ref": "#/definitions/stringLength200"
        },
        "linkType": {
          "description": "Link Type of the attachment.",
          "$ref": "#/definitions/stringLength200"
        },
        "fileName": {
          "description": "Name of the attachment.",
          "$ref": "#/definitions/stringLength1000"
        },
        "description": {
          "description": "Description of the attachment file.",
          "$ref": "#/definitions/stringLength2000"
        },
        "userName": {
          "description": "User (name) related to the attachment file.",
          "$ref": "#/definitions/stringLength200"
        },
        "hotelId": {
          "description": "Resort related to the attachment file.",
          "$ref": "#/definitions/stringLength200"
        },
        "globalYN": {
          "description": "Global Yes (Y) or No (N) flag related to the attachment file.",
          "$ref": "#/definitions/stringLength10"
        },
        "fileAttachment": {
          "description": "Attachment file in base64 binary format.",
          "type": "string",
          "format": "byte"
        },
        "overwriteExistingFileYN": {
          "description": "Overwrite Yes (Y) or No (N) flag related to the attachment file.",
          "$ref": "#/definitions/stringLength10"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "stringLength200": {
      "type": "string",
      "description": "Used for Character Strings, length 0 to 200.",
      "maxLength": 200,
      "minLength": 0
    },
    "stringLength1000": {
      "type": "string",
      "description": "Used for Character Strings, length 0 to 1000.",
      "maxLength": 1000,
      "minLength": 0
    },
    "stringLength2000": {
      "type": "string",
      "description": "Used for Character Strings, length 0 to 2000.",
      "maxLength": 2000,
      "minLength": 0
    },
    "stringLength10": {
      "type": "string",
      "description": "Used for Character Strings, length 0 to 10.",
      "maxLength": 10,
      "minLength": 0
    },
    "status": {
      "type": "object",
      "description": "Response Body.",
      "properties": {
        "warnings": {
          "$ref": "#/definitions/warningsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      }
    },
    "folioReportToEmail": {
      "type": "object",
      "description": "Request to generate and email a folio report.",
      "properties": {
        "folioInfo": {
          "description": "Identifies folio to be generated.",
          "$ref": "#/definitions/folioReportCriteriaType"
        },
        "emailRecipients": {
          "description": "List of email recipients for the report.",
          "$ref": "#/definitions/emailRecipientsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioReportCriteriaType": {
      "type": "object",
      "description": "Criteria required to generate or retrieve a folio for a reservation.",
      "properties": {
        "hotelId": {
          "description": "Hotel code for the folio.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "Reservation ID to generate a folio for.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "folioWindowNo": {
          "description": "Folio window number to generate (defaults to view 1).",
          "type": "integer"
        },
        "billNumber": {
          "description": "Optional bill number to generate.",
          "type": "number"
        },
        "folioType": {
          "description": "Optional folio type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "folioDate": {
          "description": "Optional folio generation date - defaults to hotel business date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "referenceCurrency": {
          "description": "Folio currency code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "emailRecipientsType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/emailRecipientType"
      }
    },
    "emailRecipientType": {
      "type": "object",
      "properties": {
        "emailAddress": {
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "customizedLetterStatus": {
      "type": "object",
      "description": "Response Body.",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioReport": {
      "type": "object",
      "description": "Response object for folio report.",
      "properties": {
        "folio": {
          "description": "Folio report.",
          "$ref": "#/definitions/folioReportResultType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioReportResultType": {
      "type": "object",
      "description": "Folio card details, including PDF report.",
      "properties": {
        "hotelId": {
          "description": "Hotel code for the folio.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "Reservation ID identifying the folio.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "folio": {
          "description": "Folio PDF report.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "registrationCard": {
      "type": "object",
      "description": "Response object for registration card.",
      "properties": {
        "registrationCard": {
          "description": "Registration card PDF.",
          "$ref": "#/definitions/registrationCardType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "registrationCardType": {
      "type": "object",
      "description": "Registration card details, including PDF report.",
      "properties": {
        "hotelId": {
          "description": "Hotel code for the registration card.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "Reservation ID identifying the reservation for the registration card.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "registrationCard": {
          "description": "Registration card PDF.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "imageToUpload": {
      "type": "object",
      "description": "Request to upload an image.",
      "properties": {
        "images": {
          "description": "Image upload details including image to upload.",
          "$ref": "#/definitions/imageUploadInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "imageUploadInfoType": {
      "type": "array",
      "description": "List of Image details to upload including image to upload.",
      "maxItems": 10,
      "items": {
        "$ref": "#/definitions/imageUploadType"
      }
    },
    "imageUploadType": {
      "type": "object",
      "description": "Image upload details",
      "properties": {
        "imageCode": {
          "description": "Image code to upload",
          "$ref": "#/definitions/imageCodeType"
        },
        "fileExtension": {
          "description": "File extension of the Image, e.g. JPG, PNG, BMP, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "imageParameters": {
          "description": "Zero or more image parameters - code / value pairs which define the image path. These are dependent on the image code type.",
          "$ref": "#/definitions/imageParametersType"
        },
        "languageCode": {
          "description": "Language code for the image.",
          "$ref": "#/definitions/languageType"
        },
        "imageStyle": {
          "description": "Style of the image.",
          "$ref": "#/definitions/imageStyleType"
        },
        "linkId": {
          "description": "Link ID to reference table.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "description": {
          "description": "Description of the image.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "image": {
          "description": "Image file to upload.",
          "type": "string",
          "format": "byte"
        },
        "imageId": {
          "description": "Image Id of the image to be replaced.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "imageCodeType": {
      "type": "string",
      "enum": [
        "LogoChain",
        "Logo",
        "Profile",
        "Nationality",
        "User",
        "ToolbarItemCode",
        "Chain",
        "MembershipType",
        "MembershipLevel",
        "Resort",
        "RoomTypeChain",
        "RoomType",
        "RoomNumber",
        "OooReasonChain",
        "OooReason",
        "RoomMaintChain",
        "RoomMaintenance",
        "RoomMaintIssue",
        "FloorPlan",
        "SiteLayout",
        "Attraction",
        "PropertyMap",
        "InvItemChain",
        "InvItem",
        "PackageChain",
        "Package",
        "Pool",
        "RoomConditionChain",
        "RoomCondition",
        "FunctionSpace",
        "FunctionSetupStyle",
        "TrackItTypeChain",
        "TrackItType",
        "Height",
        "Width"
      ]
    },
    "imageParametersType": {
      "type": "array",
      "description": "Collection of image parameters code / value pairs.",
      "maxItems": 500,
      "items": {
        "$ref": "#/definitions/imageParameterType"
      }
    },
    "imageParameterType": {
      "type": "object",
      "description": "Image parameter code/value pair",
      "properties": {
        "imageParameterCode": {
          "description": "Image parameter code.",
          "$ref": "#/definitions/imageCodeType"
        },
        "imageParameterValue": {
          "description": "Image parameter value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "languageType": {
      "type": "string",
      "minLength": 0,
      "maxLength": 40
    },
    "imageStyleType": {
      "type": "string",
      "description": "An enumeration of image styles.",
      "enum": [
        "Full",
        "Thumbnail",
        "Icon",
        "Square",
        "Banner",
        "Button",
        "Lowres",
        "Highres"
      ]
    },
    "image": {
      "type": "object",
      "description": "Response to fetch image(s)",
      "properties": {
        "images": {
          "description": "Collection of images",
          "$ref": "#/definitions/imageResultsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "imageResultsType": {
      "type": "array",
      "description": "Collection of image results.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/imageResultType"
      }
    },
    "imageResultType": {
      "type": "object",
      "properties": {
        "imageSet": {
          "description": "Image set describing path of image.",
          "type": "string",
          "minLength": 0,
          "maxLength": 800
        },
        "mimeType": {
          "description": "Mime type of the Image.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "image": {
          "description": "Image file to upload.",
          "type": "string",
          "format": "byte"
        },
        "imageId": {
          "description": "ImageId file.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "linkId": {
          "description": "LinkID of the file.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "imageLinkId": {
          "description": "Image link id file.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "base64Image": {
          "description": "Base64Image image content of the file.",
          "type": "string"
        }
      }
    }
  },
  "tags": [
    {
      "name": "OperaContent",
      "description": "Opera Content Service offers capability to manage big content using MTOM"
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}
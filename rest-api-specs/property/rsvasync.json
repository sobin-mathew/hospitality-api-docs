{
  "swagger": "2.0",
  "info": {
    "title": "OPERA Cloud Reservation Asynchronous API",
    "description": "APIs to cater for Reservation Asynchronous functionality in OPERA Cloud. This includes viewing reservation data along with its revenue. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>",
    "version": "24.4",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality_apis_ww_grp@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "schemes": [
    "https"
  ],
  "basePath": "/rsv/async/v1",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/externalSystems/{extSystemCode}/hotels/{hotelId}/reservations/dailySummary": {
      "post": {
        "summary": "Fetch past, present and future Reservations Daily Summary",
        "description": "Use this API to get a reservation daily summary for a property within a given date range. Maximum limit of date range is 94 days, but the recommendation is to use a date range proportionate to the size of the hotel. Returns a header parameter Location that can be used in the getReservationsProcessStatus operation.  Use event driven APIs (see https://docs.oracle.com/cd/F29336_01/doc.201/f27480/c_business_events.htm#OHIPU-BusinessEvents-F0AC1F1C) to get real time reservation updates.  <p><strong>OperationId:</strong>startReservationsDailySummaryProcess</p>",
        "operationId": "startReservationsDailySummaryProcess",
        "x-interaction": [
          "async-polling"
        ],
        "responses": {
          "202": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of process status resource"
              }
            },
            "description": "Location of process status resource"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "parameters": [
          {
            "name": "extSystemCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          {
            "name": "criteria",
            "in": "body",
            "required": true,
            "description": "Request object for fetching future reservations asynchronously.",
            "schema": {
              "$ref": "#/definitions/criteria"
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ReservationAsync"
        ]
      }
    },
    "/externalSystems/{extSystemCode}/hotels/{hotelId}/reservations/dailySummary/{summaryId}": {
      "head": {
        "summary": "Check status of Reservation Daily Summary process",
        "description": "Use this to check whether the process to generate reservations daily summaries is complete. You can get value of summaryId from the Location header returned by the startReservationsDailySummaryProcess operation. <p><strong>OperationId:</strong>getReservationsProcessStatus</p>",
        "operationId": "getReservationsProcessStatus",
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Status": {
                "type": "string",
                "description": "Status of the requested process.",
                "enum": [
                  "Processing",
                  "Invalid"
                ]
              },
              "Cache-Control": {
                "type": "string",
                "description": "number of seconds to wait before polling again.",
                "x-example": "max-age=10"
              }
            },
            "description": "Response for status of scheduled asynchronous process."
          },
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Status": {
                "type": "string",
                "description": "Status of the requested process.",
                "enum": [
                  "Completed"
                ]
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource once the status of process run is Complete."
              }
            },
            "description": "Response for status of scheduled asynchronous process."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "parameters": [
          {
            "name": "summaryId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          {
            "name": "extSystemCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ReservationAsync"
        ]
      },
      "get": {
        "summary": "Get results of Reservations Daily Summary",
        "description": "Use this API to retrieve a property&apos;s reservation daily summary within the dates given in the startReservationsDailySummaryProcess API request. You can get the value of the summaryId from the Location header returned by the getReservationsProcessStatus operation after the process is completed.  <p><strong>OperationId:</strong>getReservationsDailySummary</p>",
        "operationId": "getReservationsDailySummary",
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for fetched future reservations.",
            "schema": {
              "$ref": "#/definitions/reservationsDailySummaryDetails"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "parameters": [
          {
            "name": "summaryId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          {
            "name": "extSystemCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ReservationAsync"
        ]
      }
    },
    "/hotels/{hotelId}/reservationDetailsMassUpdate": {
      "post": {
        "summary": "Updates reservation details of a given list of reservations.",
        "description": "This API allows you to update reservation details of a given list of reservations. A user is allowed to submit only one mass update request per hotel at a time. <p><strong>OperationId:</strong>startReservationDetailsMassUpdateProcess</p>",
        "operationId": "startReservationDetailsMassUpdateProcess",
        "x-interaction": [
          "async-polling"
        ],
        "responses": {
          "202": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of process status resource"
              }
            },
            "description": "Location of process status resource"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a Hotel",
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          {
            "name": "criteria",
            "in": "body",
            "required": true,
            "description": "Request object for submitting mass update of reservation details.",
            "schema": {
              "$ref": "#/definitions/reservationDetailsMassUpdateCriteria"
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ReservationAsync"
        ]
      }
    },
    "/hotels/{hotelId}/tracesMassUpdate": {
      "post": {
        "summary": "Updates reservation traces of a given list of reservations.",
        "description": "This API allows you to update reservation traces of a given list of reservations. A user is allowed to submit only one mass update request per hotel at a time. <p><strong>OperationId:</strong>startTracesMassUpdateProcess</p>",
        "operationId": "startTracesMassUpdateProcess",
        "x-interaction": [
          "async-polling"
        ],
        "responses": {
          "202": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of process status resource"
              }
            },
            "description": "Location of process status resource"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a Hotel",
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          {
            "name": "criteria",
            "in": "body",
            "required": true,
            "description": "Request object for submitting mass update of reservation traces.",
            "schema": {
              "$ref": "#/definitions/tracesMassUpdateCriteria"
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ReservationAsync"
        ]
      }
    },
    "/hotels/{hotelId}/preferencesMassUpdate": {
      "post": {
        "summary": "Updates reservation preferences of a given list of reservations.",
        "description": "This API allows you to create reservation preferences of a given list of reservations. A user is allowed to submit only one mass update request per hotel at a time. <p><strong>OperationId:</strong>startPreferencesMassUpdateProcess</p>",
        "operationId": "startPreferencesMassUpdateProcess",
        "x-interaction": [
          "async-polling"
        ],
        "responses": {
          "202": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of process status resource"
              }
            },
            "description": "Location of process status resource"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a Hotel",
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          {
            "name": "criteria",
            "in": "body",
            "required": true,
            "description": "Request object for submitting mass update of reservation preferences.",
            "schema": {
              "$ref": "#/definitions/preferencesMassUpdateCriteria"
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ReservationAsync"
        ]
      }
    },
    "/hotels/{hotelId}/routingInstructionsMassUpdate": {
      "post": {
        "summary": "Updates reservation routing instructions of a given list of reservations.",
        "description": "This API allows you to update reservation routing instructions of a given list of reservations. A user is allowed to submit only one mass update request per hotel at a time. <p><strong>OperationId:</strong>startRoutingInstructionsMassUpdateProcess</p>",
        "operationId": "startRoutingInstructionsMassUpdateProcess",
        "x-interaction": [
          "async-polling"
        ],
        "responses": {
          "202": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of process status resource"
              }
            },
            "description": "Location of process status resource"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a Hotel",
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          {
            "name": "criteria",
            "in": "body",
            "required": true,
            "description": "Request object for submitting mass update of reservation routing instructions.",
            "schema": {
              "$ref": "#/definitions/routingInstructionsMassUpdateCriteria"
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ReservationAsync"
        ]
      }
    },
    "/hotels/{hotelId}/housekeepingMassUpdate": {
      "post": {
        "summary": "Updates reservation housekeeping options and/or schedules of a given list of reservations.",
        "description": "This API allows you to update reservation housekeeping options and/or schedules of a given list of reservations. A user is allowed to submit only one mass update reservations request per hotel at a time. <p><strong>OperationId:</strong>startHousekeepingMassUpdateProcess</p>",
        "operationId": "startHousekeepingMassUpdateProcess",
        "x-interaction": [
          "async-polling"
        ],
        "responses": {
          "202": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of process status resource"
              }
            },
            "description": "Location of process status resource"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a Hotel",
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          {
            "name": "criteria",
            "in": "body",
            "required": true,
            "description": "Request object for submitting mass update of housekeeping options and schedule.",
            "schema": {
              "$ref": "#/definitions/housekeepingMassUpdateCriteria"
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ReservationAsync"
        ]
      }
    },
    "/hotels/{hotelId}/massUpdate/{massUpdateId}": {
      "head": {
        "summary": "Check status of Mass Update process.",
        "description": "Use this to check whether the mass update process has been completed. You can get the value of massUpdateId from the process API response (under header location). <p><strong>OperationId:</strong>headMassUpdateProcessStatus</p>",
        "operationId": "headMassUpdateProcessStatus",
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Status": {
                "type": "string",
                "description": "Status of the requested process.",
                "enum": [
                  "Processing",
                  "Invalid"
                ]
              },
              "Cache-Control": {
                "type": "string",
                "description": "number of seconds to wait before polling again.",
                "x-example": "max-age=10"
              }
            },
            "description": "Response for status of scheduled asynchronous process."
          },
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Status": {
                "type": "string",
                "description": "Status of the requested process.",
                "enum": [
                  "Completed"
                ]
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource once the status of process run is Complete."
              }
            },
            "description": "Response for status of scheduled asynchronous process."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "parameters": [
          {
            "name": "massUpdateId",
            "in": "path",
            "required": true,
            "description": "Unique ID of mass update process",
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a Hotel",
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ReservationAsync"
        ]
      },
      "get": {
        "summary": "Get results of a Mass Update process",
        "description": "This API returns a summary of the reservations included in the mass update process. You can get the value of massUpdateId from the process API response (under header location). <p><strong>OperationId:</strong>getMassUpdateProcessSummary</p>",
        "operationId": "getMassUpdateProcessSummary",
        "parameters": [
          {
            "name": "massUpdateId",
            "in": "path",
            "required": true,
            "description": "Unique ID of mass update process",
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a Hotel",
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Request object for mass update process summary",
            "schema": {
              "$ref": "#/definitions/massUpdateSummaryType"
            },
            "examples": {
              "application/json": {}
            }
          },
          "204": {
            "description": "Mass Update Process Summary not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ReservationAsync"
        ]
      }
    },
    "/hotels/{hotelId}/notesMassUpdate": {
      "post": {
        "summary": "Updates reservation notes of a given list of reservations.",
        "description": "This API allows you to update reservation notes of a given list of reservations. A user is allowed to submit only one mass update request per hotel at a time. <p><strong>OperationId:</strong>startNotesMassUpdateProcess</p>",
        "operationId": "startNotesMassUpdateProcess",
        "x-interaction": [
          "async-polling"
        ],
        "responses": {
          "202": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of process status resource"
              }
            },
            "description": "Location of process status resource"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a Hotel",
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          {
            "name": "criteria",
            "in": "body",
            "required": true,
            "description": "Request object for submitting mass update of reservation notes.",
            "schema": {
              "$ref": "#/definitions/notesMassUpdateCriteria"
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ReservationAsync"
        ]
      }
    },
    "/hotels/{hotelId}/transportationsMassUpdate": {
      "post": {
        "summary": "Updates reservation transportations of a given list of reservations.",
        "description": "This API allows you to create reservation transportations of a given list of reservations. A user is allowed to submit only one mass update request per hotel at a time. <p><strong>OperationId:</strong>startTransportationsMassUpdateProcess</p>",
        "operationId": "startTransportationsMassUpdateProcess",
        "x-interaction": [
          "async-polling"
        ],
        "responses": {
          "202": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of process status resource"
              }
            },
            "description": "Location of process status resource"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a Hotel",
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          {
            "name": "criteria",
            "in": "body",
            "required": true,
            "description": "Request object for submitting mass update of reservation transportations.",
            "schema": {
              "$ref": "#/definitions/transportationsMassUpdateCriteria"
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ReservationAsync"
        ]
      }
    },
    "/hotels/{hotelId}/blocks/{blockId}/roominglistvalidation": {
      "post": {
        "summary": "Validate Rooming List Reservations",
        "description": "Use this API to validate Reservations Rooming List. <p><strong>OperationId:</strong>startRoomingListValidationProcess</p>",
        "operationId": "startRoomingListValidationProcess",
        "x-interaction": [
          "async-polling"
        ],
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a Hotel",
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          {
            "name": "blockId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Block Id"
          },
          {
            "name": "roomingList",
            "in": "body",
            "required": true,
            "description": "Request object for validate rooming list reservations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomingList"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "202": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of process status resource"
              }
            },
            "description": "Location of process status resource"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ReservationAsync"
        ]
      }
    },
    "/hotels/{hotelId}/roominglistvalidation/{requestId}": {
      "head": {
        "summary": "Check status of Rooming List validation process.",
        "description": "Use this to check whether the validate rooming list process status is Processing, Invalid, Failed or Success. You can get the value of requestId from the process API response under header location. <p><strong>OperationId: </strong>getRoomingListValidationProcessStatus</p>",
        "operationId": "getRoomingListValidationProcessStatus",
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Status": {
                "type": "string",
                "description": "Status of the requested process.",
                "enum": [
                  "Processing",
                  "Invalid"
                ]
              },
              "Cache-Control": {
                "type": "string",
                "description": "number of seconds to wait before polling again.",
                "x-example": "max-age=10"
              }
            },
            "description": "Response for status of scheduled asynchronous process."
          },
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Status": {
                "type": "string",
                "description": "Status of the requested process.",
                "enum": [
                  "Completed"
                ]
              },
              "Location": {
                "type": "string",
                "description": "Location of validated rooming list reservations once the status of process run is Complete."
              }
            },
            "description": "Response for status of scheduled asynchronous process."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "description": "Unique ID for rooming list validation process",
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a Hotel",
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ReservationAsync"
        ]
      },
      "get": {
        "summary": "Get results of Rooming List validation process",
        "description": "This API returns a summary of the status from rooming list validation process. You can get the value of requestId from the process API response (under header location). <p><strong>OperationId:</strong>getRoomingListValidationProcessResults</p>",
        "operationId": "getRoomingListValidationProcessResults",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "description": "Unique ID for rooming list validation process",
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a Hotel",
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for validation of block rooming list. This object contains the details with unique identifiers for the validate block reservations. Also Success,Warnings and Errors related to this operation.",
            "schema": {
              "$ref": "#/definitions/validateRoomingListType"
            },
            "examples": {
              "application/json": {}
            }
          },
          "204": {
            "description": "Rooming List Process Summary not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ReservationAsync"
        ]
      }
    },
    "/hotels/{hotelId}/paymentInstructionsMassUpdate": {
      "post": {
        "summary": "Updates reservation payment instructions of a given list of reservations.",
        "description": "This API allows you to update reservation payment instructions of a given list of reservations. A user is allowed to submit only one mass update request per hotel at a time. <p><strong>OperationId:</strong>startPaymentInsructionsMassUpdateProcess</p>",
        "operationId": "startPaymentInstructionsMassUpdateProcess",
        "x-interaction": [
          "async-polling"
        ],
        "responses": {
          "202": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of process status resource"
              }
            },
            "description": "Location of process status resource"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a Hotel",
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          },
          {
            "name": "criteria",
            "in": "body",
            "required": true,
            "description": "Request object for submitting mass update of reservation payment instructions.",
            "schema": {
              "$ref": "#/definitions/paymentInstructionsMassUpdateCriteria"
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ReservationAsync"
        ]
      }
    },
    "/hotels/{hotelId}/blocks/{blockId}/roominglistcreation": {
      "post": {
        "summary": "Create Rooming List Reservations",
        "description": "Use this API to create Reservations Rooming List. <p><strong>OperationId:</strong>startRoomingListCreationProcess</p>",
        "operationId": "startRoomingListCreationProcess",
        "x-interaction": [
          "async-polling"
        ],
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a Hotel",
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          {
            "name": "blockId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Block Id"
          },
          {
            "name": "roomingList",
            "in": "body",
            "required": true,
            "description": "Request object for create rooming list reservations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomingList"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "202": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of process status resource"
              }
            },
            "description": "Location of process status resource"
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ReservationAsync"
        ]
      }
    },
    "/hotels/{hotelId}/roominglistcreation/{requestId}": {
      "head": {
        "summary": "Check status of Rooming List creation process.",
        "description": "Use this to check whether the create rooming list process status is Processing, Invalid, Failed or Success. You can get the value of requestId from the process API response under header location. <p><strong>OperationId: </strong>getRoomingListCreationProcessStatus</p>",
        "operationId": "getRoomingListCreationProcessStatus",
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Status": {
                "type": "string",
                "description": "Status of the requested process.",
                "enum": [
                  "Processing",
                  "Invalid"
                ]
              },
              "Cache-Control": {
                "type": "string",
                "description": "number of seconds to wait before polling again.",
                "x-example": "max-age=10"
              }
            },
            "description": "Response for status of scheduled asynchronous process."
          },
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Status": {
                "type": "string",
                "description": "Status of the requested process.",
                "enum": [
                  "Completed"
                ]
              },
              "Location": {
                "type": "string",
                "description": "Location of created rooming list reservations once the status of process run is Complete."
              }
            },
            "description": "Response for status of scheduled asynchronous process."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "description": "Unique ID for rooming list creation process",
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a Hotel",
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ReservationAsync"
        ]
      },
      "get": {
        "summary": "Get results of Rooming List Creation process",
        "description": "This API returns a summary of the status from rooming list creation process. You can get the value of requestId from the process API response (under header location). <p><strong>OperationId:</strong>getRoomingListCreationProcessResults</p>",
        "operationId": "getRoomingListCreationProcessResults",
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "description": "Unique ID for rooming list creation process",
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "description": "Unique ID of a Hotel",
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for creation of block rooming list reservations. This object contains the details with unique identifiers for the create block reservations. Also Success,Warnings and Errors related to this operation.",
            "schema": {
              "$ref": "#/definitions/createRoomingListType"
            },
            "examples": {
              "application/json": {}
            }
          },
          "204": {
            "description": "No content returned for Rooming List Creation Process Summary."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ReservationAsync"
        ]
      }
    }
  },
  "parameters": {
    "authKey": {
      "name": "authorization",
      "description": "Bearer token that needs to be passed which is generated post user authentication",
      "type": "string",
      "in": "header",
      "required": true
    },
    "x-app-key": {
      "name": "x-app-key",
      "description": "Client or Partner's Application Key",
      "type": "string",
      "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
      "in": "header",
      "required": true
    },
    "x-hotelid": {
      "name": "x-hotelid",
      "type": "string",
      "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
      "in": "header",
      "required": true
    },
    "x-externalsystem": {
      "name": "x-externalsystem",
      "type": "string",
      "maxLength": 80,
      "description": "External system code.",
      "in": "header",
      "x-example": "EXTERNALSYSTEMCODE"
    },
    "Accept-Language": {
      "name": "Accept-Language",
      "type": "string",
      "description": "Language code",
      "in": "header"
    }
  },
  "responses": {
    "400": {
      "description": "Bad Request",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "401": {
      "description": "Unauthorized"
    },
    "403": {
      "description": "Forbidden"
    },
    "404": {
      "description": "Resource not found",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "405": {
      "description": "Method not allowed"
    },
    "406": {
      "description": "Not acceptable."
    },
    "413": {
      "description": "Request Entity Too Large"
    },
    "414": {
      "description": "Request URI Too Large"
    },
    "415": {
      "description": "Unsupported Media Type"
    },
    "500": {
      "description": "System Error",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "502": {
      "description": "Bad Gateway"
    },
    "503": {
      "description": "Service Unavailable"
    }
  },
  "definitions": {
    "exceptionDetailType": {
      "title": "Error Detail",
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      }
    },
    "errorInstance": {
      "title": "Error Instance Details",
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        }
      }
    },
    "instanceLink": {
      "type": "object",
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      }
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "reservationsDailySummarySearchType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "The Hotel Code for which the reservation search will be performed.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "timeSpan": {
          "description": "The start date and time span for the search to be performed.",
          "$ref": "#/definitions/timeSpanType"
        },
        "lastModifiedDate": {
          "description": "Start and End Modified Dates of Reservations after which the results are to be fetched",
          "$ref": "#/definitions/lastModifiedDateType"
        }
      }
    },
    "timeSpanType": {
      "type": "object",
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, whild Duration provides a measure of time to add to the StartDate to yield end date.",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        },
        "duration": {
          "type": "string"
        }
      }
    },
    "massUpdateTimeSpanType": {
      "type": "object",
      "description": "Allows for a choice in description of the amount of time spanned by this type.",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "lastModifiedDateType": {
      "type": "object",
      "description": "Start and End Modified Dates of Reservations after which the results are to be fetched",
      "properties": {
        "startLastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "endLastModifiedDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "reservationDailySummaryType": {
      "type": "object",
      "description": "Daily summary information related to a reservation.",
      "properties": {
        "reservationIdList": {
          "description": "Collection of reservation identifiers like Reservation Name ID, Confirmation Number, etc.",
          "$ref": "#/definitions/reservationIdList"
        },
        "externalReferences": {
          "description": "External Reference information for Reservation.",
          "$ref": "#/definitions/externalReferencesType"
        },
        "resvStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/database_ResStatusType"
        },
        "sharedYn": {
          "description": "Indicates whether the reservation has any sharers. Y indicates true and N indicates false.",
          "type": "string"
        },
        "sharersList": {
          "description": "Collection of Confirmation Numbers of Sharers.",
          "type": "string"
        },
        "sharersResvIdList": {
          "description": "The unique identifier reservationId List of the shared reservations.",
          "type": "string"
        },
        "arrival": {
          "type": "string",
          "format": "date-time"
        },
        "departure": {
          "type": "string",
          "format": "date-time"
        },
        "checkedOutDate": {
          "description": "The date the reservation was checked out.",
          "type": "string",
          "format": "date-time"
        },
        "cancellationDate": {
          "description": "The date the reservation was canceled.",
          "type": "string",
          "format": "date-time"
        },
        "bookingDate": {
          "type": "string",
          "format": "date-time"
        },
        "nationality": {
          "description": "Affiliation or ethnicity to a particular country.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "resvType": {
          "description": "Type of the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "noOfRooms": {
          "description": "Number of rooms of the reservation.",
          "type": "integer"
        },
        "blockCode": {
          "description": "Block code of the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "guestCountry": {
          "description": "Country code for guest's primary address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "travelAgentId": {
          "description": "ID of the travel agent for the reservation.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "travelAgentName": {
          "description": "Name of the travel agent for the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "iataCode": {
          "description": "IATA Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "companyId": {
          "description": "ID of the company for the reservation.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "companyName": {
          "description": "Name of the company for the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "groupId": {
          "description": "ID of the group for the reservation.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "groupName": {
          "description": "Name of the group for the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "sourceId": {
          "description": "ID of the source for the reservation.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "sourceName": {
          "description": "Name of the source for the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "resvContactId": {
          "description": "ID of the contact for the reservation.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "resvContactName": {
          "description": "Name of the contact for the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "createDateTime": {
          "description": "Business Date when the reservation was created.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDateTime": {
          "description": "Business Date when the reservation was modified.Either lastModifiedDateTime or lastModifiedDate will be returned.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "description": "Business Date when the reservation was modified.Either lastModifiedDateTime or lastModifiedDate will be returned.",
          "type": "string",
          "format": "date-time"
        },
        "membershipId": {
          "description": "Card Number of the membership.Either membershipId or membershipNumber will be returned.",
          "type": "string"
        },
        "membershipNumber": {
          "description": "Card Number of the membership.Either membershipId or membershipNumber will be returned.",
          "type": "string"
        },
        "membershipType": {
          "description": "Type of membership.",
          "type": "string"
        },
        "membershipLevel": {
          "description": "Indicates the membership level.",
          "type": "string"
        },
        "adults": {
          "description": "Number of adults.",
          "type": "integer"
        },
        "children1": {
          "description": "Number of children classified under the first Age Qualifying Group.",
          "type": "integer"
        },
        "children2": {
          "description": "Number of children classified under the second Age Qualifying Group.",
          "type": "integer"
        },
        "children3": {
          "description": "Number of children classified under the third Age Qualifying Group.",
          "type": "integer"
        },
        "cancellationReasonCode": {
          "type": "string"
        },
        "bookingMedium": {
          "description": "Classifies the medium(Channel field on reservation screen) through which the reservation is made. Either bookingMedium or origin_of_booking will be present in the response.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "origin_of_booking": {
          "description": "Classifies the medium(Channel field on reservation screen) through which the reservation is made.Either bookingMedium or origin_of_booking will be present in the response.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "dailySummary": {
          "description": "Collection of daily summary for the reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/dailySummaryType"
          }
        },
        "createdHotelDateTime": {
          "description": "Business Date in property timezone when the reservation was created.",
          "type": "string",
          "format": "date-time"
        },
        "modifiedHotelDateTime": {
          "description": "Business Date in property timezone when the reservation was modified.Either lastModifiedDateTime or lastModifiedDate will be returned.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "uniqueIDListType": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "uniqueID_Type": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "preferencesTypeType": {
      "type": "object",
      "description": "Preference details for the profile.",
      "properties": {
        "preference": {
          "description": "Collection of Preferences for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/preferencesType"
          }
        },
        "preferenceType": {
          "description": "Preference group code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "preferenceTypeDescription": {
          "description": "Preference group description.",
          "type": "string"
        }
      }
    },
    "preferencesType": {
      "type": "object",
      "description": "Guest Preference details for the profile.",
      "properties": {
        "preferenceValue": {
          "description": "Preference value for display purposes.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "reservationIdList": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "dailySummaryType": {
      "type": "object",
      "description": "Statistic information related to a specific reservation stay date.",
      "properties": {
        "rateCode": {
          "description": "The rate plan code of the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateAmount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "rateAmountCurrency": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        },
        "marketCode": {
          "description": "Holds the code that relates to the market being sold (e.g., the corporate market, packages).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "description": "Room type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bookedRoomType": {
          "description": "Booked room type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "room": {
          "description": "Room number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "netRateAmount": {
          "description": "Net Amount generated by the reservation.",
          "type": "number"
        },
        "netRateAmountCurrency": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        },
        "roomRevenue": {
          "description": "Room Revenue generated by the reservation.",
          "type": "number"
        },
        "roomRevenueCurrency": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        },
        "fbRevenue": {
          "description": "Food and Beverage Revenue generated by the reservation.",
          "type": "number"
        },
        "fbRevenueCurrency": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        },
        "otherRevenue": {
          "description": "Other Revenue generated by the reservation.",
          "type": "number"
        },
        "otherRevenueCurrency": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        },
        "totalRevenue": {
          "description": "Total Revenue generated by the reservation.",
          "type": "number"
        },
        "totalRevenueCurrency": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        },
        "packageRevenue": {
          "description": "Package Revenue generated by the reservation.",
          "type": "number"
        },
        "packageRevenueCurrency": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        },
        "tax": {
          "description": "Tax Revenue generated by the reservation.",
          "type": "number"
        },
        "taxCurrency": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        },
        "roomTypeCharged": {
          "description": "Room type charged for the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "trxDate": {
          "description": "Reservation stay date for which the daily statistics are projected.",
          "type": "string",
          "format": "date-time"
        },
        "sourceCode": {
          "description": "The entity/channel who made the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "channel": {
          "description": "Classifies the Channel field on reservation screen through which the reservation is made.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "adults": {
          "description": "Number of adults of the reservation.",
          "type": "integer"
        },
        "children": {
          "description": "Number of children of the reservation.",
          "type": "integer"
        }
      }
    },
    "database_ResStatusType": {
      "type": "string",
      "description": "This reservation is in checked in status and the business date is past departure date. This could occur when ORS and PMS are in same environment.",
      "enum": [
        "RESERVED",
        "REQUESTED",
        "NO SHOW",
        "CANCELLED",
        "IN HOUSE",
        "CHECKED IN",
        "CHECKED OUT",
        "WAITLIST",
        "DUE IN",
        "DUE OUT",
        "WALKIN",
        "PENDING CHECKOUT",
        "PROSPECT"
      ]
    },
    "criteria": {
      "type": "object",
      "description": "Request object for fetching future reservations asynchronously.",
      "properties": {
        "criteria": {
          "$ref": "#/definitions/reservationsDailySummarySearchType"
        }
      }
    },
    "reservationsDailySummaryDetails": {
      "type": "object",
      "description": "Reservation Daily Summary Details.",
      "properties": {
        "reservations": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationDailySummaryType"
          }
        }
      }
    },
    "reservationDetailsMassUpdateCriteria": {
      "type": "object",
      "description": "Reservation Details Mass Update criteria.",
      "properties": {
        "reservationIds": {
          "description": "Unique ID of reservations to be updated.",
          "type": "array",
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/uniqueID_Type"
          }
        },
        "expectedTimes": {
          "description": "The Expected Arrival and Departure Times.",
          "$ref": "#/definitions/resExpectedTimesType"
        },
        "marketCode": {
          "description": "Market code of the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceCode": {
          "description": "Source code of the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bookingMedium": {
          "description": "Classifies the medium(Channel field on reservation screen) through which the reservation is made.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "advanceCheckIn": {
          "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
          "$ref": "#/definitions/advanceCheckInType"
        },
        "userDefinedFields": {
          "description": "A common type used to hold user defined fields(UDFs). ",
          "$ref": "#/definitions/userDefinedFieldsType"
        }
      }
    },
    "tracesMassUpdateCriteria": {
      "type": "object",
      "description": "Reservation Traces Mass Update criteria.",
      "properties": {
        "reservationIds": {
          "description": "Unique ID of reservations to be updated.",
          "type": "array",
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/uniqueID_Type"
          }
        },
        "timeInfo": {
          "description": "Date of the trace.",
          "$ref": "#/definitions/traceTimeType"
        },
        "departmentIds": {
          "description": "Indicates the Department code.",
          "type": "array",
          "maxItems": 100,
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 20
          }
        },
        "traceText": {
          "description": "The information this trace contains.",
          "type": "string",
          "minLength": 1,
          "maxLength": 2000
        },
        "frequency": {
          "description": "Time information of the trace.",
          "$ref": "#/definitions/massUpdateTracesFrequencyType"
        }
      }
    },
    "preferencesMassUpdateCriteria": {
      "type": "object",
      "description": "Reservation Preferences Mass Update criteria.",
      "properties": {
        "reservationIds": {
          "description": "Unique ID of reservations to be updated.",
          "type": "array",
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/uniqueID_Type"
          }
        },
        "preferenceCollection": {
          "description": "Collection of reservation preferences.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/preferencesTypeType"
          }
        },
        "copyToProfile": {
          "description": "Specifies whether to copy the reservation preference to the profile or not.",
          "type": "boolean"
        }
      }
    },
    "routingInstructionsMassUpdateCriteria": {
      "type": "object",
      "description": "A routing info object can either be of type Folio OR of type Room with its corresponding object.",
      "properties": {
        "reservationIds": {
          "description": "Unique ID of reservations to be updated.",
          "type": "array",
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/uniqueID_Type"
          }
        },
        "folio": {
          "description": "Folio routing type.",
          "type": "object",
          "properties": {
            "payeeInfo": {
              "$ref": "#/definitions/massUpdatePayeeInfoType"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/massUpdateRoutingInstructionType"
              }
            },
            "folioWindowNo": {
              "type": "integer"
            }
          }
        },
        "room": {
          "description": "Room routing type.",
          "type": "object",
          "properties": {
            "reservationNameId": {
              "description": "Reservation name id to which the instruction will be routed.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/massUpdateRoutingInstructionType"
              }
            }
          }
        },
        "refreshFolio": {
          "description": "On a successful update, the transactions that are already posted in the guest's folio will be re-organized based on the configured instructions.",
          "type": "boolean"
        }
      }
    },
    "transportationsMassUpdateCriteria": {
      "type": "object",
      "description": "Reservation Transportations Mass Update criteria.",
      "properties": {
        "reservationIds": {
          "description": "Unique ID of reservations to be updated.",
          "type": "array",
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/uniqueID_Type"
          }
        },
        "arrivalTransport": {
          "$ref": "#/definitions/massTransportInfoType"
        },
        "departureTransport": {
          "$ref": "#/definitions/massTransportInfoType"
        }
      }
    },
    "traceTimeType": {
      "type": "object",
      "properties": {
        "dateTimeSpan": {
          "description": "Time span for the trace.",
          "$ref": "#/definitions/dateTimeSpanType"
        },
        "traceTime": {
          "description": "Time of the trace in 24 hour time.",
          "type": "string",
          "minLength": 0,
          "maxLength": 8,
          "pattern": "([0-1]?[0-9]|2[0-3]):[0-5][0-9]"
        }
      }
    },
    "dateTimeSpanType": {
      "type": "object",
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.Maximum duration allowed is 30 days.",
      "properties": {
        "startDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "endDateTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "massUpdateTracesFrequencyType": {
      "type": "string",
      "description": "Simple type to mention the trace date range when mass updating the reservation traces.",
      "enum": [
        "DateRange",
        "ArrivalDayOnly",
        "DepartureDayOnly",
        "StayDates"
      ]
    },
    "resExpectedTimesType": {
      "type": "object",
      "description": "Holds the Arrival and Departure Time Information",
      "properties": {
        "reservationExpectedArrivalTime": {
          "description": "Arrival Time",
          "type": "string",
          "format": "date-time"
        },
        "reservationExpectedDepartureTime": {
          "description": "Departure Time",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "advanceCheckInType": {
      "type": "object",
      "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
      "properties": {
        "expectedReturnTime": {
          "description": "Expected Return Time",
          "type": "string",
          "format": "date-time"
        },
        "eTRComments": {
          "description": "ETR Comments",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "massUpdateHousekeepingInstructions": {
      "type": "object",
      "description": "Mass update housekeeping instructions criteria.",
      "properties": {
        "expectedServiceTime": {
          "description": "Expected start time for housekeeping task(s) in 24 hour format.",
          "type": "string",
          "minLength": 0,
          "maxLength": 8,
          "pattern": "([0-1]?[0-9]|2[0-3]):[0-5][0-9]"
        },
        "clearCurrentExpectedServiceTime": {
          "description": "Indicates if the current expected service time is to be removed for selected reservations.",
          "type": "boolean",
          "default": false
        },
        "cleaningPriority": {
          "description": "Indicates whether cleaning priority is to be given to the reservation room.",
          "type": "boolean"
        },
        "turndownRequested": {
          "description": "Indicates whether guest wants turndown facility or not.",
          "type": "boolean"
        },
        "instructions": {
          "description": "Housekeeping instructions for the room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "massUpdateHousekeepingTaskStayPeriod": {
      "type": "string",
      "description": "Date period type the housekeeping task is to be performed.",
      "enum": [
        "EntireStay",
        "SpecificDates"
      ]
    },
    "massUpdateFacilityCodes": {
      "type": "array",
      "description": "List of the facility codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/massUpdateFacilityCode"
      }
    },
    "massUpdateFacilityCode": {
      "type": "object",
      "description": "Housekeeping facility code, and its quantity.",
      "properties": {
        "quantity": {
          "description": "Signifies the quantity.",
          "type": "integer"
        },
        "code": {
          "description": "Housekeeping facility code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "massUpdateFacilityHousekeepingTask": {
      "type": "object",
      "description": "Information about housekeeping facility task.",
      "properties": {
        "facilityTask": {
          "description": "Code of facility task.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "taskStartDate": {
          "description": "Date on which the task needs to start being performed.",
          "type": "string",
          "format": "date"
        },
        "taskEndDate": {
          "description": "Date on which task will stop being performed.",
          "type": "string",
          "format": "date"
        },
        "stayPeriod": {
          "description": "Specifies whether task is performed for the entire stay or for specific dates.",
          "$ref": "#/definitions/massUpdateHousekeepingTaskStayPeriod"
        },
        "frequency": {
          "description": "Signifies frequency(i.e. every 2 days) with which task is to be performed.",
          "type": "integer"
        },
        "cycleStartDay": {
          "description": "Signifies offset(in days) i.e. start on 3rd day from arrival.",
          "type": "integer"
        },
        "replaceExistingTasks": {
          "description": "Remove existing task(s) scheduled for the selected date(s) for the selected reservations before adding new one.",
          "type": "boolean",
          "default": false
        },
        "facilityCodes": {
          "description": "Housekeeping facility codes",
          "$ref": "#/definitions/massUpdateFacilityCodes"
        }
      }
    },
    "massUpdateHousekeepingSchedule": {
      "type": "object",
      "description": "Mass update housekeeping schedule criteria.",
      "properties": {
        "facilityHousekeepingTask": {
          "description": "Facility tasks to be performed for the reservation.",
          "$ref": "#/definitions/massUpdateFacilityHousekeepingTask"
        }
      }
    },
    "housekeepingMassUpdateCriteria": {
      "type": "object",
      "description": "Mass update housekeeping criteria.",
      "properties": {
        "reservationIds": {
          "description": "Unique ID of reservations to be updated.",
          "type": "array",
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/uniqueID_Type"
          }
        },
        "housekeepingInstructions": {
          "description": "Housekeeping instructions criteria",
          "$ref": "#/definitions/massUpdateHousekeepingInstructions"
        },
        "housekeepingSchedule": {
          "description": "Housekeeping schedule criteria",
          "$ref": "#/definitions/massUpdateHousekeepingSchedule"
        }
      }
    },
    "notesMassUpdateCriteria": {
      "type": "object",
      "description": "Notes Mass Update criteria.",
      "properties": {
        "reservationIds": {
          "description": "Unique ID of reservations to be updated.",
          "type": "array",
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/uniqueID_Type"
          }
        },
        "reservationComment": {
          "description": "Comment details for the reservation comment.",
          "$ref": "#/definitions/reservationCommentType"
        }
      }
    },
    "reservationCommentType": {
      "type": "object",
      "description": "Reservation Comment Type.",
      "properties": {
        "text": {
          "description": "Specifies Comment's Text",
          "type": "string",
          "minLength": 1,
          "maxLength": 4000
        },
        "commentTitle": {
          "description": "Specifies Comment's Title.",
          "type": "string",
          "minLength": 1,
          "maxLength": 200
        },
        "notificationLocation": {
          "description": "Notification Location associated with the Note.",
          "type": "string",
          "enum": [
            "CASHIER",
            "GENERAL",
            "IN HOUSE",
            "RESERVATION"
          ]
        },
        "type": {
          "description": "Specifies type of the comment.",
          "type": "string",
          "minLength": 1,
          "maxLength": 20
        },
        "internal": {
          "description": "When true, the comment may not be shown to the consumer. When false, the comment may be shown to the consumer.",
          "type": "boolean",
          "default": false
        }
      }
    },
    "userDefinedFieldsType": {
      "type": "object",
      "description": "A common type used to hold user defined fields(UDFs). This type should be used to handle UDFs on RReservation, Profiles, etc.",
      "properties": {
        "characterUDFs": {
          "description": "Collection of user defined fields of Character/String Type.",
          "$ref": "#/definitions/characterUDFsType"
        },
        "numericUDFs": {
          "description": "Collection of user defined fields of Numeric Type.",
          "$ref": "#/definitions/numericUDFsType"
        },
        "dateUDFs": {
          "description": "Collection of user defined fields of Date Type.",
          "$ref": "#/definitions/dateUDFsType"
        }
      }
    },
    "dateUDFsType": {
      "type": "array",
      "description": "Used to hold collection of user defined fields of Date Type.",
      "maxItems": 20,
      "items": {
        "$ref": "#/definitions/dateUDFType"
      }
    },
    "dateUDFType": {
      "type": "object",
      "description": "Used to hold user defined field of Date Type.",
      "properties": {
        "name": {
          "description": "Used to hold user defined field of Date Type. It is highly recommended to use UDFD01, UDFD02,...UDFN20 (Total 20) as Date UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "characterUDFsType": {
      "type": "array",
      "description": "Used to hold collection of user defined fields of Character/String Type.",
      "maxItems": 40,
      "items": {
        "$ref": "#/definitions/characterUDFType"
      }
    },
    "characterUDFType": {
      "type": "object",
      "description": "Used to hold user defined field of Character/String Type.",
      "properties": {
        "name": {
          "description": "Used to hold user defined field of Character Type. It is highly recommended to use UDFC01, UDFC02,...UDFC40 (Total 40) as Character/String UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "numericUDFsType": {
      "type": "array",
      "description": "Used to hold collection of user defined fields of Numeric Type.",
      "maxItems": 40,
      "items": {
        "$ref": "#/definitions/numericUDFType"
      }
    },
    "numericUDFType": {
      "type": "object",
      "description": "Used to hold user defined field of Numeric Type. It is highly recommended to use UDFN01, UDFN02,...UDFN40 (Total 40) as Numeric UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
      "properties": {
        "name": {
          "description": "Name of user defined field.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "number"
        },
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "massUpdateSummaryType": {
      "type": "object",
      "description": "Response object for mass update process summary.",
      "properties": {
        "massUpdateOutcomes": {
          "$ref": "#/definitions/massUpdateOutcomesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "massUpdateOutcomesType": {
      "type": "array",
      "description": "Collection of outcome of mass update to reservations.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/massUpdateOutcomeType"
      }
    },
    "massUpdateOutcomeType": {
      "type": "object",
      "description": "Response object for outcome of mass update to reservations.",
      "properties": {
        "reservationId": {
          "description": "Unique Reservation Id",
          "type": "number",
          "minLength": 0,
          "maxLength": 40
        },
        "guestFullName": {
          "description": "Guest's Full display name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "confirmationNo": {
          "description": "Confirmation number of the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "arrivalDate": {
          "description": "Display the arrival date of the guest.",
          "type": "string",
          "format": "date-time"
        },
        "departureDate": {
          "description": "Display the departure date of the guest.",
          "type": "string",
          "format": "date-time"
        },
        "roomId": {
          "description": "Display room number if it has been assigned.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "updateStatus": {
          "type": "string",
          "description": "Update Status.",
          "enum": [
            "Success",
            "Fail"
          ]
        },
        "outcomeMessages": {
          "description": "Status of the update",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/outcomeMessageType"
          }
        }
      }
    },
    "outcomeMessageType": {
      "type": "object",
      "description": "Object for update messages.",
      "properties": {
        "messageCode": {
          "type": "string",
          "description": "Update Message Code.",
          "minLength": 0,
          "maxLength": 2000
        },
        "messageText": {
          "description": "Update Message Text",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        }
      }
    },
    "warningsType": {
      "type": "array",
      "description": "Used in conjunction with the Success element to define a business error.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    },
    "warningType": {
      "type": "object",
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "minLength": 1,
          "maxLength": 8
        }
      }
    },
    "roomingListBlockInfoType": {
      "type": "object",
      "description": "Block Information for create rooming list operation.",
      "properties": {
        "hotelId": {
          "description": "Hotel code for the block",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "blockIdList": {
          "description": "Collection of unique block identifiers",
          "$ref": "#/definitions/blockIdList"
        }
      }
    },
    "blockIdList": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "externalReferencesType": {
      "type": "array",
      "description": "This type contains unique information of external reference.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/externalReferenceType"
      }
    },
    "externalReferenceType": {
      "type": "object",
      "description": "This type contains unique information of external reference.",
      "properties": {
        "id": {
          "description": "Unique ID of external reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "ID extension for external reference.",
          "type": "integer"
        },
        "idContext": {
          "description": "ID context for external reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "associatedResType": {
      "type": "object",
      "description": "Information regarding associated reservations to the reservation.",
      "properties": {
        "parentReservation": {
          "description": "Stores Unique ID of the parent reservation.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "originalMultiRoomRes": {
          "description": "Stores Unique ID of the original multi room reservation from which this reservation is split off.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "sourceOfSaleType": {
      "type": "object",
      "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
      "properties": {
        "sourceType": {
          "description": "Type of entity/channel who made the reservation..",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "sourceCode": {
          "description": "The entity/channel who made the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "codeListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "minLength": 0,
        "maxLength": 20
      }
    },
    "ownerType": {
      "type": "object",
      "description": "Generic type for information about an owner.",
      "properties": {
        "hotel": {
          "description": "Hotel to which the owner belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "userId": {
          "description": "Unique application user ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "userName": {
          "description": "Unique application user name of the owner.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "ownerCode": {
          "description": "Unique Code to identify the owner.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "profileId": {
          "description": "Unique owner profile information.",
          "$ref": "#/definitions/profileId"
        },
        "name": {
          "description": "Provides name information of the owner.",
          "$ref": "#/definitions/personNameType"
        },
        "department": {
          "description": "Department to which the owner belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "email": {
          "description": "Email information of the owner.",
          "$ref": "#/definitions/emailInfoType"
        },
        "phone": {
          "description": "Information on the telephone number of the owner.",
          "$ref": "#/definitions/telephoneInfoType"
        },
        "relationship": {
          "description": "Relationship of the owner within the profile or block.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "primary": {
          "description": "When true, this is a primary owner.",
          "type": "boolean"
        }
      }
    },
    "masterAccountInfoType": {
      "type": "object",
      "properties": {
        "masterAccountId": {
          "description": "Unique ID of the Master account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "masterAccountName": {
          "description": "Name of the Master account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "currentRoomInfoType": {
      "type": "object",
      "description": "Room information of the reservation for the current day.",
      "properties": {
        "roomType": {
          "description": "Current room type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomId": {
          "description": "Current room number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "suggestedRoomNumbers": {
          "description": "Suggested room numbers.",
          "$ref": "#/definitions/codeListType"
        },
        "roomDescription": {
          "description": "Current room description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "roomViewCode": {
          "description": "Represents the room view code like City view, River view, Ocean view etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "assignedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        },
        "upgradedByAI": {
          "description": "Represents the room was upgraded by AI Room Assignment.",
          "type": "boolean"
        }
      }
    },
    "taxType": {
      "type": "object",
      "description": "Applicable tax element. This element allows for both percentages and flat amounts. If one field is used, the other should be zero since logically, taxes should be calculated in only one of the two ways.",
      "properties": {
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "type": {
          "description": "Used to indicate if the amount is inclusive or exclusive of other charges, such as taxes, or is cumulative (amounts have been added to each other).",
          "$ref": "#/definitions/amountDeterminationType"
        },
        "code": {
          "description": "Code identifying the fee (e.g.,agency fee, municipality fee).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "amountDeterminationType": {
      "type": "string",
      "description": "Used to indicate if an amount is inclusive or exclusive of other charges, such as taxes.",
      "enum": [
        "Inclusive",
        "Exclusive"
      ]
    },
    "taxesType": {
      "type": "object",
      "description": "A collection of taxes.",
      "properties": {
        "tax": {
          "description": "An individual tax.",
          "type": "array",
          "maxItems": 99,
          "items": {
            "$ref": "#/definitions/taxType"
          }
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "feesType": {
      "type": "object",
      "description": "A collection of fees or service charges.",
      "properties": {
        "fee": {
          "description": "An individual fee or service charge.",
          "type": "array",
          "maxItems": 99,
          "items": {
            "$ref": "#/definitions/feeType"
          }
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "feeType": {
      "type": "object",
      "description": "Applicable service charges or fees.",
      "properties": {
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "type": {
          "description": "Used to indicate if the amount is inclusive or exclusive of other charges, such as taxes, or is cumulative (amounts have been added to each other).",
          "$ref": "#/definitions/amountDeterminationType"
        },
        "code": {
          "description": "Code identifying the fee (e.g.,agency fee, municipality fee).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "totalType": {
      "type": "object",
      "description": "The total amount charged for the service including additional amounts and fees.",
      "properties": {
        "taxes": {
          "description": "A collection of taxes.",
          "$ref": "#/definitions/taxesType"
        },
        "fees": {
          "description": "A collection of fees or service charges.",
          "$ref": "#/definitions/feesType"
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "amountBeforeTax": {
          "description": "The total amount not including any associated tax (e.g., sales tax, VAT, GST or any associated tax).",
          "type": "number"
        },
        "amountAfterTax": {
          "description": "The total amount including all associated taxes (e.g., sales tax, VAT, GST or any associated tax).",
          "type": "number"
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "code": {
          "description": "Type of charge.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateOverride": {
          "description": "When true indicates that the rate amount has been overridden.",
          "type": "boolean"
        }
      }
    },
    "pointsType": {
      "type": "object",
      "description": "The Redeem Points contains the number of points required to book a room type.",
      "properties": {
        "awardsType": {
          "description": "Awards type for the award type rate code.",
          "type": "string"
        },
        "points": {
          "description": "No of points required to book this Room Stay.",
          "type": "integer"
        }
      }
    },
    "additionalGuestAmountType": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/totalType"
        },
        "ageQualifyingCode": {
          "type": "string",
          "enum": [
            "ADULT",
            "CHILD",
            "OTHER",
            "CHILDBUCKET1",
            "CHILDBUCKET2",
            "CHILDBUCKET3",
            "CHILDBUCKET4",
            "CHILDBUCKET5"
          ]
        }
      }
    },
    "discountType": {
      "type": "object",
      "description": "Identifies and provides details about the discount. This allows for both percentages and flat amounts. If one field is used, the other should be zero/not specified since logically.",
      "properties": {
        "discountReason": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "percent": {
          "description": "Percentage discount.",
          "type": "number"
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        },
        "discountCode": {
          "description": "Specifies the type of discount (e.g., No condition, LOS, Deposit or Total amount spent).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "shareDistributionInstructionType": {
      "type": "string",
      "description": "The type of Rate Amount Change to be done on the Sharer reservation. This can be FULL -> Full Rate for each Sharer. SPLIT-> Split the Rate amount between Sharer Reservations. ENTIRE -> This Sharer will get the total amount of the rate code for all the Sharer Reservations.",
      "enum": [
        "Full",
        "Entire",
        "Split",
        "CustomSplit"
      ]
    },
    "amountType": {
      "type": "object",
      "description": "Base charge and additional charges related to a room that includes such things as additional guest amounts, cancel fees, etc. Also includes Discount percentages, total amount, and the rate description.",
      "properties": {
        "base": {
          "description": "The base amount charged for the accommodation or service per unit of time (ex: Nightly, Weekly, etc). If TaxInclusive is set to True, then taxes are included in the base amount. Note that any additional charges should itemized in the other elements.",
          "$ref": "#/definitions/totalType"
        },
        "additionalGuestAmounts": {
          "description": "Collection of incremental charges per age qualifying code for additional guests. Amount charged for additional occupant is with respect to age group of the base guests.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/additionalGuestAmountType"
          }
        },
        "discount": {
          "description": "Discount percentage and/or Amount, code and textual reason for discount",
          "$ref": "#/definitions/discountType"
        },
        "shareRatePercentage": {
          "description": "Indicates the share rate percentage for the reservation if set to CUSTOMSPLIT.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "shareDistributionInstruction": {
          "description": "Last rate share distribution instruction applied on share reservation daily rate segment.",
          "$ref": "#/definitions/shareDistributionInstructionType"
        },
        "total": {
          "description": "The total amount charged for this rate including additional occupant amounts and fees.",
          "$ref": "#/definitions/totalType"
        },
        "requiredPoints": {
          "description": "The Points contains the number of points required to book a particular room type.",
          "$ref": "#/definitions/pointsType"
        },
        "effectiveRate": {
          "description": "The reservation effective amount charged for the accommodation or service (i.e. base amount + amount for Add to Rate Combine Line packages) per unit of time",
          "$ref": "#/definitions/totalType"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "rateRangeType": {
      "type": "object",
      "description": "Rate Range details like maximum rate amount and minimum rate amount in each available rate category.",
      "properties": {
        "base": {
          "description": "The base amount charged for the accommodation or service.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/totalType"
          }
        },
        "rateChange": {
          "description": "Rate Change Indicator.",
          "type": "boolean"
        }
      }
    },
    "ratesType": {
      "type": "object",
      "description": "Individual rate amount.",
      "properties": {
        "rate": {
          "description": "The Rate contains a collection of elements that define the amount of the rate, associated fees, additional occupant amounts. Taxes can be broken out or included within the various amounts. A currency can be associated to each amount.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/amountType"
          }
        },
        "rateRange": {
          "description": "Rate Range details like maximum rate amount and minimum rate amount in each available rate category.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/rateRangeType"
          }
        }
      }
    },
    "currencyAmountType": {
      "type": "object",
      "description": "A monetary value expressed with a currency code.",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "packageElementType": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "allowance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "description": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 2000
          }
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "packageCode": {
          "type": "string"
        },
        "calculationRule": {
          "type": "string"
        },
        "postingRhythm": {
          "type": "string"
        },
        "quantity": {
          "type": "integer"
        },
        "includedInRate": {
          "type": "boolean"
        },
        "addRateSeprateLine": {
          "type": "boolean"
        },
        "addRateCombinedLine": {
          "type": "boolean"
        },
        "startTime": {
          "type": "string"
        },
        "endTime": {
          "type": "string"
        },
        "sellSeparate": {
          "type": "boolean"
        }
      }
    },
    "profileIdList": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "resProfileTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Group",
        "TravelAgent",
        "Source",
        "ReservationContact",
        "BillingContact",
        "Addressee"
      ]
    },
    "personNameTypeType": {
      "type": "string",
      "description": "Person's name in an external system.",
      "enum": [
        "Primary",
        "Alternate",
        "Incognito",
        "External",
        "Phonetic"
      ]
    },
    "personNameType": {
      "type": "object",
      "description": "This provides name information for a person.",
      "properties": {
        "namePrefix": {
          "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "givenName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "middleName": {
          "description": "The middle name of the person name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "surname": {
          "description": "Family name, last name. May also be used for full name if the sending system does not have the ability to separate a full name into its parts, e.g. the surname element may be used to pass the full name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "nameTitleSuffix": {
          "description": "Title Suffix. Must be populated if ADVANCED_TITLE is on.",
          "type": "integer"
        },
        "envelopeGreeting": {
          "description": "Envelope Greeting of the profile",
          "type": "string"
        },
        "salutation": {
          "description": "Salutation of the profile",
          "type": "string"
        },
        "nameType": {
          "description": "Type of name of the individual, such as former, nickname, alternate or alias name.",
          "$ref": "#/definitions/personNameTypeType"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "externalSystem": {
          "description": "When name type is external, indicates the external system the name belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "anonymizationType": {
      "type": "object",
      "description": "Provides information about guest's anonymization status.",
      "properties": {
        "anonymizationStatus": {
          "description": "Status of anonymization such as Requested or Anonymized.",
          "$ref": "#/definitions/anonymizationStatusType"
        },
        "anonymizationDate": {
          "description": "Date and Time when the guest was anonymized.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "anonymizationStatusType": {
      "type": "string",
      "description": "Guest has been anonymized.",
      "enum": [
        "Requested",
        "Anonymized"
      ]
    },
    "identificationInfoType": {
      "type": "object",
      "description": "Information on the identification of the customer.",
      "properties": {
        "identification": {
          "description": "Detailed information on the identification of the customer.",
          "$ref": "#/definitions/identificationType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "identificationType": {
      "type": "object",
      "description": "Identification information of the customer.",
      "properties": {
        "idType": {
          "description": "Identification Type. Eg Passport, Driving License etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "idNumber": {
          "description": "Identification Number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idNumberMasked": {
          "description": "Masked Identification Number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "issuedCountry": {
          "description": "The country where Identification was issued.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "issuedDate": {
          "description": "Issued date of Identification.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "issuedPlace": {
          "description": "The place where Identification was issued.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "expirationDate": {
          "description": "Expiration date of Identification.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "registeredProperty": {
          "description": "Property where the identification belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        }
      }
    },
    "companyInfoType": {
      "type": "object",
      "description": "Company Information of the Profile.",
      "properties": {
        "legalCompany": {
          "description": "Legal Company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "department": {
          "description": "Department of the Profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "position": {
          "description": "Business Title or Position of the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "countryNameType": {
      "type": "object",
      "description": "Code for a country or a nationality.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Used for Character Strings, length 0 to 200.",
          "minLength": 0,
          "maxLength": 200
        },
        "code": {
          "description": "Code for a country or a nationality.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "profileMembershipType": {
      "type": "object",
      "description": "Detailed information of the memberships.",
      "properties": {
        "comment": {
          "description": "Additional comments regarding to the membership.",
          "$ref": "#/definitions/paragraphType"
        },
        "newMembershipNumber": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "nameOnCard": {
          "description": "Name to be displayed on the membership card.",
          "type": "string"
        },
        "programDescription": {
          "description": "Description of the membership program.",
          "type": "string"
        },
        "membershipLevel": {
          "description": "Indicates the membership level.",
          "type": "string"
        },
        "membershipLevelDescription": {
          "description": "Indicates the membership level description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "membershipClass": {
          "description": "Indicates the membership class.",
          "type": "string"
        },
        "earningPreference": {
          "description": "Earning preference to the membership.",
          "$ref": "#/definitions/membershipEarningPreferenceType"
        },
        "inactive": {
          "description": "Indicates whether membership is active or inactive.",
          "type": "boolean"
        },
        "benefits": {
          "description": "benefits for the membership.",
          "$ref": "#/definitions/benefitsType"
        },
        "tierAdministration": {
          "description": "Defines the degree of participation for this membership in the tier management portion of the program.",
          "$ref": "#/definitions/tierAdministrationType"
        },
        "downgrade": {
          "description": "Defines how downgrading will be handled for this membership.",
          "$ref": "#/definitions/downgradeType"
        },
        "reIssueNewCard": {
          "description": "The status of issuing new membership card to the member.",
          "$ref": "#/definitions/cardReIssueType"
        },
        "excludeFromBatch": {
          "description": "True if you want to exclude the member from the Membership Fulfillment extract,the member's actions will not be included in the fulfillment extract until this value set to false.",
          "type": "boolean"
        },
        "upgradeDescription": {
          "description": "Indicates Upgrade information which includes member's next tier level, requirements for the next upgrade.",
          "type": "string",
          "minLength": 0,
          "maxLength": 32000
        },
        "downgradeDescription": {
          "description": "Indicates information regarding the member's possible downgrades.",
          "type": "string",
          "minLength": 0,
          "maxLength": 32000
        },
        "rating": {
          "description": "Value Rating Type Description for this membership.",
          "type": "string"
        },
        "membershipEnrollmentCode": {
          "description": "Indicates how the guest enrolled in the program.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "memberStatus": {
          "description": "Indicates where the guest is in the membership enrollment process.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currentPoints": {
          "description": "Profile MemberShip Points.",
          "type": "number"
        },
        "pointsLabel": {
          "description": "Label used to refer to points for this membership type",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "enrollmentSource": {
          "description": "Source from where the enrollment is done.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "enrollmentResort": {
          "description": "Resort/CRO where enrollment is done.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "preferredCard": {
          "description": "Preferred Card.",
          "type": "boolean"
        },
        "membershipId": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "membershipType": {
          "description": "Type of membership.",
          "type": "string"
        },
        "primaryMembershipYn": {
          "description": "Indicator if Membership is a Primary Membership.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "primaryMembership": {
          "description": "Boolean indicator set to True implies membership is a Primary Membership.",
          "type": "boolean"
        },
        "membershipIdNo": {
          "description": "Membership ID Number.",
          "type": "integer"
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        },
        "centralSetup": {
          "description": "Indicates how the award points for this membership type will be managed.",
          "type": "boolean"
        },
        "signupDate": {
          "description": "Indicates when the member signed up for the loyalty program.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "effectiveDate": {
          "description": "Indicates the starting date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDate": {
          "description": "Indicates the ending date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDateExclusiveIndicator": {
          "description": "When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15 the last date of the period is Oct 14).",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "customerType": {
      "type": "object",
      "description": "Contains basic data on the customer's identity, location, relationships, finances, memberships, etc.",
      "properties": {
        "personName": {
          "description": "Detailed name information for the customer.",
          "type": "array",
          "maxItems": 5,
          "items": {
            "$ref": "#/definitions/personNameType"
          }
        },
        "identifications": {
          "description": "List of identification of the customer.",
          "type": "object",
          "properties": {
            "identificationInfo": {
              "description": "Collection of detailed information on the identification of the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/identificationInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "gender": {
          "description": "Identifies the profile gender code selected from Gender types List of values. Gender types LOV provides the values configured at gender configuration.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "birthDate": {
          "description": "Indicates the date of birth as indicated in the document, in ISO 8601 prescribed format.",
          "type": "string",
          "format": "date"
        },
        "language": {
          "description": "Indicates the language code selected from Languages List of Values.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nationality": {
          "description": "Indicates the nationality code selected from Nationalities List of Values",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vipStatus": {
          "description": "Code of the VIP level associated with the guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "companyType": {
      "type": "object",
      "properties": {
        "companyName": {
          "description": "Name of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "alternateName": {
          "description": "Alternate Name of the Company. Mainly, it's the name of the company written in the Alternate Language.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nationality": {
          "description": "Nationality code identification",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "commissionCode": {
          "description": "Commission code of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vipStatus": {
          "description": "VIP status of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vipDescription": {
          "description": "Description of the VIP status.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "addressInfoType": {
      "type": "object",
      "description": "Provides address information.",
      "properties": {
        "address": {
          "description": "Address details for the profile.",
          "$ref": "#/definitions/addressType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "massUpdateAddressInfoType": {
      "type": "object",
      "description": "Provides address information.",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "addressType": {
      "type": "object",
      "description": "Provides address information.",
      "properties": {
        "isValidated": {
          "description": "Indicator to define if the Address is validated by the Address Validation System.",
          "type": "boolean"
        },
        "addressLine": {
          "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "type": "array",
          "maxItems": 4,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 80
          }
        },
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "cityExtension": {
          "description": "Post Office City Extension Code number. City Extension mainly used for UK addresses.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "county": {
          "description": "County or District Name (e.g., Fairfax). This is read only.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "type": {
          "description": "Defines the type of address (e.g. home, business, other).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Describes the type code",
          "type": "string"
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "updateReservations": {
          "description": "Indicates whether to update the reservations or not. If true and the address is primary, then all associated active reservations will be updated with the new primary address.",
          "type": "boolean"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "telephoneInfoType": {
      "type": "object",
      "description": "Information on a telephone number for the customer.",
      "properties": {
        "telephone": {
          "description": "Phone details for the profile.",
          "$ref": "#/definitions/telephoneType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "telephoneType": {
      "type": "object",
      "description": "Information on a telephone number for the customer.",
      "properties": {
        "phoneTechType": {
          "description": "Indicates type of technology associated with this telephone number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "phoneUseType": {
          "description": "Describes the type of telephone number, in the context of its general use (e.g. Home, Business, Emergency Contact, Travel Arranger, Day, Evening).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "phoneUseTypeDescription": {
          "description": "Description of the PhoneUseType code",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "phoneNumber": {
          "description": "Telephone number assigned to a single location.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "extension": {
          "description": "Extension to reach a specific party at the phone number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "status": {
      "type": "object",
      "description": "Response Body.",
      "properties": {
        "warnings": {
          "$ref": "#/definitions/warningsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      }
    },
    "emailInfoType": {
      "type": "object",
      "description": "Information on an email for the customer.",
      "properties": {
        "email": {
          "description": "eMail deatils for the profile.",
          "$ref": "#/definitions/emailType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "emailType": {
      "type": "object",
      "description": "Information on an email for the customer.",
      "properties": {
        "emailAddress": {
          "description": "Defines the e-mail address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "type": {
          "description": "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Describes the Type code",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "emailFormat": {
          "description": "Supported Email format.",
          "type": "string",
          "enum": [
            "Html",
            "Text"
          ]
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "uRLInfoType": {
      "type": "object",
      "description": "Web site address.",
      "properties": {
        "url": {
          "description": "Provides URL information.",
          "$ref": "#/definitions/uRLType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "uRLType": {
      "type": "object",
      "description": "Web site address, in IETF(The Internet Engineering Task Force) specified format.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "type": {
          "description": "Defines the purpose of the URL address, such as personal, business, public, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Describes the Type code",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        }
      }
    },
    "commentInfoType": {
      "type": "object",
      "description": "Comment related to the profile/reservation.",
      "properties": {
        "comment": {
          "description": "Comment details for the comment. It will be empty in case of delete comment.",
          "$ref": "#/definitions/commentType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commentType": {
      "type": "object",
      "description": "An indication of a new paragraph for a sub-section of a formatted text message.",
      "properties": {
        "text": {
          "description": "Formatted text content.",
          "$ref": "#/definitions/formattedTextTextType"
        },
        "image": {
          "description": "An image for this paragraph.",
          "type": "string"
        },
        "url": {
          "description": "A URL for this paragraph.",
          "type": "string"
        },
        "commentTitle": {
          "description": "Specifies Comment's Title.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "notificationLocation": {
          "description": "Notification Location associated with the Note.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "type": {
          "description": "Specifies type of the comment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Comment type Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "internal": {
          "description": "When true, the comment may not be shown to the consumer. When false, the comment may be shown to the consumer.",
          "type": "boolean"
        },
        "confidential": {
          "description": "When true, the comment may be confidential.",
          "type": "boolean"
        },
        "overrideInternal": {
          "description": "When true, the note internal could be modified.",
          "type": "boolean"
        },
        "protectDescription": {
          "description": "When true, the note title will be populated from the note type description and couldn't be modified.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "If specified comment belongs to the Hotel, otherwise it is a global comment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "actionType": {
          "description": "Specifies type of action described in the comments.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "actionDate": {
          "description": "Indicates at which date an action described in the comment must be taken.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "formattedTextTextType": {
      "type": "object",
      "description": "Provides text and indicates whether it is formatted or not.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        }
      }
    },
    "preferenceTypeType": {
      "type": "object",
      "description": "Preference details for the profile.",
      "properties": {
        "preference": {
          "description": "Collection of Preferences for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/preferenceType"
          }
        },
        "preferenceType": {
          "description": "Preference group code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "preferenceTypeDescription": {
          "description": "Preference group description.",
          "type": "string"
        },
        "sequence": {
          "description": "Preference Sequence.",
          "type": "string"
        },
        "maxQuantity": {
          "description": "Maximum quantity of preferences allowed per preference group.",
          "type": "integer"
        },
        "availableQuantity": {
          "description": "Available quantity of preferences (maximum quantity - Existing preferences)per preference group.",
          "type": "integer"
        },
        "maxResortUsedQuantity": {
          "description": "Maximum quantity of preferences used by any resort per preference group.",
          "type": "integer"
        },
        "reservationPreference": {
          "description": "Whether this preference is reservation preference or not.",
          "type": "boolean"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "preferenceType": {
      "type": "object",
      "description": "Guest Preference details for the profile.",
      "properties": {
        "preferenceValue": {
          "description": "Preference value for display purposes.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "description": {
          "description": "Preference Description for display purposes.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "global": {
          "description": "Whether this preference is property specific or not.",
          "type": "boolean"
        },
        "source": {
          "description": "Source of the preference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "hotels": {
          "description": "If specified preference belongs to the Hotels listed, otherwise it is a global preference.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "preferenceCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "excludedPreferencesCount": {
          "description": "Specifies the count of preferences excluded for the attached reservation preference.",
          "type": "integer"
        },
        "copyToProfile": {
          "description": "Specifies whether to copy the reservation preference to the profile or not.",
          "type": "boolean"
        }
      }
    },
    "profileType": {
      "type": "object",
      "description": "Type provides the detailed information about the profile and its children.",
      "properties": {
        "customer": {
          "description": "Detailed customer information for this profile.",
          "$ref": "#/definitions/customerType"
        },
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            }
          }
        },
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            }
          }
        },
        "addresses": {
          "description": "List of customer addresses.",
          "type": "object",
          "properties": {
            "addressInfo": {
              "description": "Collection of Detailed information on an address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/addressInfoType"
              }
            }
          }
        },
        "profileMemberships": {
          "description": "List of loyalty program(s) the profile is subscribed to.",
          "type": "object",
          "properties": {
            "profileMembership": {
              "description": "Collection of Detailed information on memberships for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/profileMembershipType"
              }
            }
          }
        }
      }
    },
    "profileCommissionType": {
      "type": "object",
      "description": "This is the preconfigured routing instruction type.",
      "properties": {
        "hotelId": {
          "description": "Hotel Code for the commission being used for a profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "commissionCode": {
          "description": "commission Code for a profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bankAccount": {
          "description": "Bank account used for the commission for a profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "paymentMethod": {
          "description": "Type of payment associated with the bank account.",
          "$ref": "#/definitions/commissionPaymentMethods"
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        }
      }
    },
    "commissionPaymentMethods": {
      "type": "string",
      "description": "Check",
      "enum": [
        "Cent",
        "Eft",
        "Chk"
      ]
    },
    "profileCashieringType": {
      "type": "object",
      "description": "Contains cashiering related details for the profile",
      "properties": {
        "directBillingList": {
          "description": "Contains the direct billing related information for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/directBillingType"
          }
        },
        "autoFolioSettlementType": {
          "description": "Contains the auto folio settlement type for the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "paymentDueDays": {
          "description": "Ability to define on the account, the number of days after which the invoice should be paid.",
          "type": "integer"
        },
        "taxPercent1": {
          "description": "Tax1 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "taxPercent2": {
          "description": "Tax2 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "taxPercent3": {
          "description": "Tax3 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "taxPercent4": {
          "description": "Tax4 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "taxPercent5": {
          "description": "Tax5 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "arNoCentral": {
          "description": "Account Receivables Central Number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "referenceCurrency": {
          "description": "Reference Currency.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vATOffsetYN": {
          "description": "VAT Offset Flag.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        }
      }
    },
    "directBillingType": {
      "type": "object",
      "description": "This is the preconfigured routing instruction type.",
      "properties": {
        "hotelId": {
          "description": "Hotel Code for which the details of direct billing is provided for a profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "aRNumber": {
          "description": "Hotel Code for which the details of direct billing is provided for a profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "eCertificatesType": {
      "type": "array",
      "description": "List of e-certificates for the profile.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/eCertificateType"
      }
    },
    "eCertificateType": {
      "type": "object",
      "description": "E-Certificates details.",
      "properties": {
        "certificateId": {
          "description": "System generated unique certificate id.",
          "type": "integer"
        },
        "voucherNo": {
          "description": "System generated unique voucher number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "certificateNo": {
          "description": "Printed certificate no. This has to be unique.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "eCertificateInfo": {
          "$ref": "#/definitions/eCertificateInfoType"
        },
        "expiryDate": {
          "description": "Date of expiry.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "newExpiryDate": {
          "description": "New Date of expiry to extend e-certificate.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "profileId": {
          "description": "NameId.",
          "$ref": "#/definitions/profileId"
        },
        "consumptionDetail": {
          "$ref": "#/definitions/eCertificateConsumptionType"
        },
        "status": {
          "description": "Status of the certificate.",
          "$ref": "#/definitions/eCertificateStatusType"
        },
        "printed": {
          "description": "Print status of the certificate.",
          "type": "boolean"
        },
        "inactiveDate": {
          "description": "Date the record was marked as inactive.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "awardId": {
          "description": "AwardID.",
          "$ref": "#/definitions/awardId"
        },
        "databaseId": {
          "description": "External reference from which the record is created.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "source": {
          "description": "Source of e-certificate.",
          "$ref": "#/definitions/eCertificateIssueSourceType"
        },
        "issueType": {
          "description": "Process action issued the certificate. valid values are assigned (a),opt in (o) and purchased (p).",
          "$ref": "#/definitions/eCertificateIssueType"
        },
        "issueDate": {
          "description": "Date when certificate was issued.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "awardPoints": {
          "description": "Award points if any in case of certificate use membership award.",
          "type": "integer"
        },
        "generationDetail": {
          "$ref": "#/definitions/eCertificateGenerationType"
        },
        "originalVoucherNo": {
          "description": "In case of in lieu of certificate this will contain the original voucher no.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "originalCertificateNo": {
          "description": "In case of in lieu of certificate this will contain the original certificate no.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "inLieuSequence": {
          "description": "Seq of the in lieu of certificate. 1..n. original certificate will be treated as null = 0.",
          "type": "integer"
        },
        "cancelRequestDate": {
          "description": "Date on which the cancellation was requested.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "extensionCount": {
          "description": "Number of times e-certificate is already extended.",
          "type": "integer"
        }
      }
    },
    "awardId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "eCertificateStatusType": {
      "type": "string",
      "description": "Indicates that OPERA E-Certificate is reserved.",
      "enum": [
        "Cancelled",
        "Consumed",
        "Deleted",
        "Expired",
        "Issued",
        "Reserved"
      ]
    },
    "eCertificateIssueType": {
      "type": "string",
      "description": "Indicates that guest purchased OPERA E-Certificate.",
      "enum": [
        "Assigned",
        "OptedIn",
        "Purchased"
      ]
    },
    "eCertificateConsumptionType": {
      "type": "object",
      "description": "E-Certificates details.",
      "properties": {
        "hotelId": {
          "description": "Property where certificate was consumed for.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "source": {
          "description": "Source of consumption.",
          "$ref": "#/definitions/eCertificateConsumeSourceType"
        },
        "surname": {
          "description": "Last name of the person who consumed the certificate..",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "firstName": {
          "description": "First name of the person who consumed the certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "middleName": {
          "description": "Middle name of the person who consumed the certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "email": {
          "description": "Email of the person who consumed the certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "date": {
          "description": "Date the certificate was consumed.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "userName": {
          "description": "Application user who created the consumption.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "userNotes": {
          "description": "Any notes on the certificate entered at time of consumption.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "referenceId": {
          "description": "Any reference like reservation no etc against which the certificate was consumed.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "locationType": {
          "description": "Consumption location type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "authorizationCode": {
          "description": "Authorization code for consumption.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "serviceDate": {
          "description": "Date on which the service is due (arrival date in case of reservation).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "eCertificateConsumeSourceType": {
      "type": "string",
      "description": "Indicates that OPERA E-Certificate is consumed by hotelPMS.",
      "enum": [
        "Central",
        "Web",
        "Hotel"
      ]
    },
    "eCertificateIssueSourceType": {
      "type": "string",
      "description": "Indicates that OPERA E-Certificate is issued by external system.",
      "enum": [
        "Opera",
        "Web",
        "Interface"
      ]
    },
    "eCertificateInfoType": {
      "type": "object",
      "description": "E-Certificates details.",
      "properties": {
        "certificateType": {
          "description": "User defined certificate code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "membershipType": {
          "description": "Membership type to which the certificate is linked to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "awardCode": {
          "description": "Award type to which the certificate is linked to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "promotionCode": {
          "description": "Promotion code to which certificate is attached to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "voucherBenefitCode": {
          "description": "Voucher benefit code attached to the certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "hotels": {
          "description": "Hotel to which certificate is attached to.",
          "type": "object",
          "properties": {
            "code": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "type": "string",
                "minLength": 0,
                "maxLength": 20
              }
            },
            "scope": {
              "description": "Scope of e-cert: global,single property or multi property.",
              "$ref": "#/definitions/eCertificateScopeType"
            }
          }
        },
        "description": {
          "description": "Description about the certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "longDescription": {
          "description": "Detail description about the certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "label": {
          "description": "Label for the certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "maxExtensionAllowed": {
          "description": "Number of times e-certificate can be extended.",
          "type": "integer"
        },
        "usageCriteria": {
          "$ref": "#/definitions/eCertificateUsageCriteriaType"
        },
        "value": {
          "description": "Value of the certificate for the guest.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "cost": {
          "description": "Cost of certificate.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "benefitSummary": {
          "description": "Summary of Benefits attached to this ECertificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        }
      }
    },
    "eCertificateScopeType": {
      "type": "string",
      "description": "Indicates that OPERA E-Certificate is available for a specific list of hotels.",
      "enum": [
        "Global",
        "Hotel",
        "MultiHotel"
      ]
    },
    "eCertificateUsageCriteriaType": {
      "type": "object",
      "description": "E-Certificates details.",
      "properties": {
        "reservation": {
          "description": "Indicates if certificate is to be used against reservation or not.",
          "type": "boolean"
        },
        "web": {
          "description": "Indicates if web certificate can be consumed in OWS.",
          "type": "boolean"
        },
        "webAllowed": {
          "description": "Indicates if certificate consumption allowable on the web.",
          "type": "boolean"
        },
        "benefit": {
          "description": "Indicates to attach a rate code to the e-certificate as a benefit.",
          "type": "boolean"
        },
        "hotel": {
          "description": "Indicates if web certificate can be consumed in hotel.",
          "type": "boolean"
        },
        "verifyCertificateNo": {
          "description": "Specify if the certificate number verification is required at time of consumption or not.",
          "type": "boolean"
        },
        "cancelAllowed": {
          "description": "Identify if cancel is allowed or not.",
          "type": "boolean"
        },
        "generateInLieuCertificate": {
          "description": "Identify if in lieu of certificate can be generated or not.",
          "type": "boolean"
        }
      }
    },
    "eCertificateGenerationType": {
      "type": "object",
      "description": "E-Certificates details.",
      "properties": {
        "ruleId": {
          "description": "Key to identify the generation rule id.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "generationDetail": {
          "description": "Reason for which e-certificate was generated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "referenceValue": {
          "description": "Type of value that is in the certificate.valid values are membership_level.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "privacyInfoType": {
      "type": "object",
      "description": "Defines Privacy related information for the profile.",
      "properties": {
        "marketResearchParticipation": {
          "description": "Indicates if the profile participates in market research.",
          "type": "boolean"
        },
        "lastPrivacyPromptDate": {
          "description": "Indicate the last privacy prompt date of the guest.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "infoFromThirdParty": {
          "description": "Indicates if the profile is ok getting info from third parties.",
          "type": "boolean"
        },
        "autoEnrollLoyaltyProgram": {
          "description": "Indicates if the profile wishes to be automatically enrolled in the property's loyalty program.",
          "type": "boolean"
        },
        "allowPhone": {
          "description": "Indicates if the profile wishes to allow phone calls.",
          "type": "boolean"
        },
        "allowSMS": {
          "description": "Indicates if the profile wishes to allow SMS.",
          "type": "boolean"
        },
        "allowEmail": {
          "description": "Indicates if the profile wishes to allow Email.",
          "type": "boolean"
        },
        "optInMailingList": {
          "description": "Indicates if the profile wishes to opt in for Mailing List.",
          "type": "boolean"
        },
        "optInMarketResearch": {
          "description": "Indicates if the profile wishes to opt in for Market Research.",
          "type": "boolean"
        },
        "optInThirdParty": {
          "description": "Indicates if the profile wishes to opt in for Third Party.",
          "type": "boolean"
        },
        "optInAutoEnrollmentMember": {
          "description": "Indicates if the profile wishes to opt in for Auto Enrolment Member.",
          "type": "boolean"
        },
        "optInPhone": {
          "description": "Indicates if the profile wishes to opt in for Phone.",
          "type": "boolean"
        },
        "optInSms": {
          "description": "Indicates if the profile wishes to opt in for SMS.",
          "type": "boolean"
        },
        "optInEmail": {
          "description": "Indicates if the profile wishes to opt in for Email.",
          "type": "boolean"
        }
      }
    },
    "profileTaxInfoType": {
      "type": "object",
      "description": "Profile information related to tax.",
      "properties": {
        "tax1No": {
          "description": "The tax id of this profile. Usually issued by a government agency. Used by 1099 printing.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "tax2No": {
          "description": "Tax 2 id of this profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "taxCategory": {
          "description": "Tax Category to be changed.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "taxOffice": {
          "description": "Tax Office to be changed.",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        },
        "taxType": {
          "description": "Tax type to be changed.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "businessId": {
          "description": "Business ID. The maximum length of this element should not exceed 120 characters.",
          "type": "string",
          "minLength": 0,
          "maxLength": 128
        },
        "businessRegistration": {
          "description": "Business Registration Code. The maximum length of this element should not exceed 120 characters.",
          "type": "string",
          "minLength": 0,
          "maxLength": 128
        }
      }
    },
    "profileRestrictions": {
      "type": "object",
      "properties": {
        "reason": {
          "description": "Restriction reason associated with the current profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reasonDescription": {
          "description": "Description of restriction reason.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "restricted": {
          "description": "True indicates there are restrictions associated with the current profile.",
          "type": "boolean"
        }
      }
    },
    "lastStayInfoType": {
      "type": "object",
      "description": "Contains last stay related details for the profile",
      "properties": {
        "lastVisit": {
          "description": "Used to hold last stay information for the profile.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastRoom": {
          "description": "Used to hold last room information for the profile.",
          "type": "string"
        },
        "lastRate": {
          "description": "Used to hold last rate information for the profile.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalStay": {
          "description": "The total number of previous stay of the profile.",
          "type": "integer"
        }
      }
    },
    "reservationStayHistoryFutureInfoType": {
      "type": "object",
      "description": "Information of History and Future Reservation details attached to Profiles.",
      "properties": {
        "historyList": {
          "description": "Refer to History list type document.",
          "$ref": "#/definitions/stayHistoryListType"
        },
        "futureList": {
          "description": "Refer to Future list type document.",
          "$ref": "#/definitions/stayFutureListType"
        }
      }
    },
    "stayHistoryListType": {
      "type": "object",
      "description": "A collection of reservation history details attached to Profiles.",
      "properties": {
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : History reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/stayReservationInfoType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "stayReservationInfoType": {
      "type": "object",
      "description": "The Reservation class contains the current reservation being created or altered.",
      "properties": {
        "reservationIdList": {
          "description": "Unique identifiers for the reservation for both internal and external systems",
          "$ref": "#/definitions/reservationIdList"
        },
        "roomStay": {
          "description": "Collection of room stays.",
          "$ref": "#/definitions/stayInfoType"
        },
        "attachedProfiles": {
          "description": "List of attached profiles",
          "$ref": "#/definitions/resAttachedProfileListType"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "computedReservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        }
      }
    },
    "stayFutureListType": {
      "type": "object",
      "description": "A collection of reservation history details attached to Profiles.",
      "properties": {
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : Future reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/stayReservationInfoType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "reservationProfileType": {
      "type": "object",
      "properties": {
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
          "$ref": "#/definitions/profileIdList"
        },
        "profile": {
          "description": "Provides detailed information regarding either a company or a customer profile.",
          "$ref": "#/definitions/profileType"
        },
        "reservationProfileType": {
          "$ref": "#/definitions/resProfileTypeType"
        }
      }
    },
    "childAgesType": {
      "type": "array",
      "description": "Age of a child in years.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/childAgeType"
      }
    },
    "childAgeType": {
      "type": "object",
      "description": "Defines Child's Age.",
      "properties": {
        "age": {
          "description": "Age of a child in years.",
          "type": "integer"
        }
      }
    },
    "childBucketsType": {
      "type": "object",
      "description": "Defines children counts with Age Qualifying Group(Child Bucket) classification.",
      "properties": {
        "bucket1Count": {
          "description": "Number of children classified under the first Age Qualifying Group(Child Bucket#1).",
          "type": "integer"
        },
        "bucket2Count": {
          "description": "Number of children classified under the second Age Qualifying Group(Child Bucket#2).",
          "type": "integer"
        },
        "bucket3Count": {
          "description": "Number of children classified under the third Age Qualifying Group(Child Bucket#3).",
          "type": "integer"
        },
        "bucket4Count": {
          "description": "Number of children classified under the fourth Age Qualifying Group(Child Bucket#4).",
          "type": "integer"
        },
        "bucket5Count": {
          "description": "Number of children classified under the fifth Age Qualifying Group(Child Bucket#5).",
          "type": "integer"
        }
      }
    },
    "guestCountsType": {
      "type": "object",
      "description": "A collection of GuestCount by age group.",
      "properties": {
        "childAges": {
          "description": "Defines Children's Ages. Number of children ages mentioned may mot match with children counts.",
          "$ref": "#/definitions/childAgesType"
        },
        "childBuckets": {
          "description": "Defines children counts with Age Qualifying Group(Child Bucket#1) classification.",
          "$ref": "#/definitions/childBucketsType"
        },
        "adults": {
          "description": "Defines the number of Adults.",
          "type": "integer"
        },
        "children": {
          "description": "Defines the number of Children.",
          "type": "integer"
        }
      }
    },
    "resAwardsType": {
      "type": "object",
      "description": "Membership Awards code applied on the reservation.",
      "properties": {
        "membershipNo": {
          "description": "Membership program under which the award is applied.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "awardVouchers": {
          "$ref": "#/definitions/awardVouchersType"
        },
        "originalRoomType": {
          "description": "Room Type before the Upgrade Award.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "upgradeRoomType": {
          "description": "Room Type after the Upgrade Award.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "awardVouchersType": {
      "type": "array",
      "description": "This stores the Membership Awards code applied on the reservation.",
      "maxItems": 5,
      "items": {
        "type": "object",
        "properties": {
          "awardCode": {
            "description": "Membership Award code applied on the reservation.",
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          },
          "voucherNo": {
            "description": "Membership Award number.",
            "type": "string",
            "minLength": 0,
            "maxLength": 80
          }
        }
      }
    },
    "foreignExchangeType": {
      "type": "object",
      "description": "Foreign Exchange info.",
      "properties": {
        "type": {
          "description": "Exchange Type for the postings.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "effectiveDate": {
          "description": "Effective Exchange date for the foreign currency posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "reservationBlockType": {
      "type": "object",
      "description": "Key information about the block for a reservation.",
      "properties": {
        "blockIdList": {
          "description": "Collection of unique block identifiers for the reservation.",
          "$ref": "#/definitions/blockIdList"
        },
        "blockName": {
          "description": "The Name of the block that is attached to the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "hotelId": {
          "description": "This is the HotelCode of the Block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "mealPlansType": {
      "type": "array",
      "description": "Meal plan codes associated with the rate codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/mealPlanCodeType"
      }
    },
    "mealPlanCodeType": {
      "type": "object",
      "description": "Meal plan codes associated with the rate codes.",
      "properties": {
        "code": {
          "description": "Meal plan code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "included": {
          "description": "Represents if the meal plan code is included in rate code or not.",
          "type": "boolean"
        },
        "breakfastIncluded": {
          "description": "Represents if the meal plan code is available for breakfast or not.",
          "type": "boolean"
        },
        "lunchIncluded": {
          "description": "Represents if the meal plan code is available for lunch or not.",
          "type": "boolean"
        },
        "dinnerIncluded": {
          "description": "Represents if the meal plan code is available for dinner or not.",
          "type": "boolean"
        }
      }
    },
    "roomRateAvailReasonType": {
      "type": "string",
      "description": "Indicates the Room Rate is not available due to unavailability of enough items for the rate code.",
      "enum": [
        "Available",
        "Restricted",
        "RestrictedDueToInventory",
        "RestrictedDueToOccupancy",
        "RestrictedDueToItemInventory"
      ]
    },
    "roomRateType": {
      "type": "object",
      "properties": {
        "total": {
          "$ref": "#/definitions/totalType"
        },
        "totalPoints": {
          "$ref": "#/definitions/pointsType"
        },
        "rates": {
          "$ref": "#/definitions/ratesType"
        },
        "packages": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/packageElementType"
          }
        },
        "stayProfiles": {
          "description": "Profile associated with the room Stay.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationProfileType"
          }
        },
        "guestCounts": {
          "description": "A collection of Guest Counts associated with the room rate.",
          "$ref": "#/definitions/guestCountsType"
        },
        "taxFreeGuestCounts": {
          "description": "A collection of Tax Free Guest Counts associated with the room rate. This list does not add to the guest count but just indicates number of tax free guests out of guest counts.",
          "$ref": "#/definitions/guestCountsType"
        },
        "awards": {
          "description": "Membership Awards code applied on the reservation.",
          "$ref": "#/definitions/resAwardsType"
        },
        "foreignExchange": {
          "description": "Exchange Type information for the postings.",
          "$ref": "#/definitions/foreignExchangeType"
        },
        "reservationBlock": {
          "description": "Key information about the block for this reservation.",
          "$ref": "#/definitions/reservationBlockType"
        },
        "roomRateInfo": {
          "description": "Information about the Room Rate Combination.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "mealPlans": {
          "description": "Meal plan codes for rate plan code.",
          "$ref": "#/definitions/mealPlansType"
        },
        "roomType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "promotionCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "availability": {
          "description": "Used to specify an availability status for the room rate. When available value could be either not specified or \"Available\".",
          "$ref": "#/definitions/roomRateAvailReasonType"
        },
        "suppressRate": {
          "type": "boolean"
        },
        "marketCode": {
          "description": "The code that relates to the market being sold to (e.g., the corporate market, packages).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "marketCodeDescription": {
          "description": "Description of the market code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "sourceCode": {
          "description": "To specify where the business came from e.g. radio, newspaper ad, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceCodeDescription": {
          "description": "Description of the source of business.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "numberOfUnits": {
          "description": "The number of rooms.",
          "type": "integer"
        },
        "roomId": {
          "description": "A string value representing the unique identification of a room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "pseudoRoom": {
          "description": "True indicates as pseudo room type. This is usually used for a posting master reservation.",
          "type": "boolean"
        },
        "roomTypeCharged": {
          "description": "Room Type used for the Rate calculation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "commissionCode": {
          "description": "Commission Code applicable for commission calculation for Travel Agent/Company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "commissionable": {
          "description": "Indicates Commission is applicable for commission calculation for Travel Agent/Company.",
          "type": "boolean"
        },
        "houseUseOnly": {
          "description": "Indicates this reservation is for House use.",
          "type": "boolean"
        },
        "complimentary": {
          "description": "Indicates this reservation rate is complimentary.",
          "type": "boolean"
        },
        "inventoryLender": {
          "description": "Indicates whether the room type inventory was taken from the allotment or House availability.",
          "type": "string"
        },
        "fixedRate": {
          "description": "Fixed Rate Indicator.",
          "type": "boolean"
        },
        "barRanking": {
          "description": "Best Available rates ranking.",
          "type": "integer"
        },
        "rateGroup": {
          "description": "For RatePlanSet equals BESTAVAILABLERATE, in case Rate Groups are enabled the element provides the rate group for the rate plan code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "discountAllowed": {
          "description": "Indicates if the Rate Code is discountable i.e discounts are allowed on the rate code.",
          "type": "boolean"
        },
        "bogoDiscount": {
          "description": "Indicates if the Rate Code has BOGO(Bye one Get one) indicator.",
          "type": "boolean"
        },
        "rateLevel": {
          "description": "Rate plan type like Corporate,Regular,Military,Weekend etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "commissionPercentage": {
          "description": "Indicates commission percentage used by the rate plan.",
          "type": "integer"
        },
        "commissionAmount": {
          "description": "Indicates commission amount used by the rate plan.",
          "type": "integer"
        },
        "credentialsRequired": {
          "description": "If true, indicates that credentials is required to sell the rate code.",
          "type": "boolean"
        },
        "taxIncluded": {
          "description": "If true, indicates if tax is included in the rate code.",
          "type": "boolean"
        },
        "rateDescription": {
          "description": "Rate code description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        }
      }
    },
    "resGuaranteeType": {
      "type": "object",
      "description": "Validations type record returned after Validations are done.",
      "properties": {
        "guaranteeCode": {
          "description": "Guarantee Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "shortDescription": {
          "description": "Guarantee Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "onHold": {
          "description": "Guarantee Code.",
          "type": "boolean"
        }
      }
    },
    "promotionType": {
      "type": "object",
      "description": "Type to specify a rate promotion. Usually attached to a reservation to indicate a specific promotion is applied to the reservation.",
      "properties": {
        "promotionCode": {
          "description": "Promotion code associated with the rate plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "promotionName": {
          "description": "Promotion code Name associated with the rate plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "couponCode": {
          "description": "Promotion Coupon Code when promotion is setup to have a valid coupon code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "roomStayType": {
      "type": "object",
      "properties": {
        "registrationNumber": {
          "description": "Registration Number of the reservation for the current day.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "currentRoomInfo": {
          "description": "Room information of the reservation for the current day.",
          "$ref": "#/definitions/currentRoomInfoType"
        },
        "roomRates": {
          "description": "A collection of Room Rates associated with a particular Room Stay. Each Room Rate combination can have multiple rates. Example King room, Rack rate plan, Monday through Thursday, weekday amount, Friday and Saturday, weekend amount.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomRateType"
          }
        },
        "guestCounts": {
          "$ref": "#/definitions/guestCountsType"
        },
        "arrivalDate": {
          "type": "string",
          "format": "date"
        },
        "departureDate": {
          "type": "string",
          "format": "date"
        },
        "expectedTimes": {
          "description": "The Expected Arrival and Departure Times.",
          "$ref": "#/definitions/resExpectedTimesType"
        },
        "originalTimeSpan": {
          "description": "The Original Time Span(Arrival, Departure) which covers the Room Stay. In case of Rolling No Show TimeSpan's StratDate moves forward but OriginalTimeSpan's StratDate remains the same.",
          "$ref": "#/definitions/timeSpanType"
        },
        "guarantee": {
          "description": "The guarantee information associated to the Room Stay. A maximum of 5 occurances are available for use depending on the context.",
          "$ref": "#/definitions/resGuaranteeType"
        },
        "promotion": {
          "description": "Promotions applied to the reservation to get the promotional rate.",
          "$ref": "#/definitions/promotionType"
        },
        "suiteWith": {
          "description": "Connecting Rooms.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "total": {
          "description": "The total amount charged for the Room Stay.",
          "$ref": "#/definitions/totalType"
        },
        "totalPoints": {
          "description": "The total number of Points charged for the Room Stay.",
          "$ref": "#/definitions/pointsType"
        },
        "multiValueAttrs": {
          "description": "Informative indicators indicating different values of an attribute exists over the stay.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 2000
          }
        },
        "upsellInfo": {
          "description": "Indicates Upsell Information to be applied on Reservation.",
          "$ref": "#/definitions/upsellInfoType"
        },
        "mobileNotifications": {
          "description": "Denotes the status of Room Ready and Key Ready messages.",
          "$ref": "#/definitions/resMobileNotificationsType"
        },
        "roomNumberLocked": {
          "description": "When true, indicates a room number cannot be changed. When false, indicates a room number may be changed.",
          "type": "boolean"
        },
        "printRate": {
          "description": "This control whether rate info will be printed in confirmation letter.",
          "type": "boolean"
        },
        "ownerReservationType": {
          "description": "Indicates whether reservation is for Unit/Room Owner or Authorized User. If this attribute is not define it is a regular/rental reservation.",
          "$ref": "#/definitions/ownerResTypeType"
        },
        "primaryShareType": {
          "description": "This is populated in case of primary share scenario. This indicates whether this reservation is primary or non primary. Changes or postings to the 'non-primary' share reservation is not allowed.",
          "$ref": "#/definitions/primaryShareTypeType"
        },
        "remoteCheckInAllowed": {
          "description": "Indicates whether the reservation is pre-registered for internet check-in or not.",
          "type": "boolean"
        },
        "bookingMedium": {
          "description": "Classifies the medium(Channel field on reservation screen) through which the reservation is made.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bookingMediumDescription": {
          "description": "Description of the booking medium.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "availableUpsellOfferCount": {
          "description": "Number of Upsell Offers Available for this stay. This will only be populated if the Upsell Instruction is included in the Allowed Instruction request",
          "type": "integer"
        }
      }
    },
    "primaryShareTypeType": {
      "type": "string",
      "enum": [
        "Primary",
        "NonPrimary"
      ]
    },
    "ownerResTypeType": {
      "type": "string",
      "enum": [
        "Owner",
        "AuthorizedUser"
      ]
    },
    "resMobileNotificationsType": {
      "type": "object",
      "description": "Contains the status of Room Ready and Key Ready messages.",
      "properties": {
        "roomReady": {
          "description": "Denotes the status of Room Ready message. It can have one of the values:PENDING, COMPLETED or FAILED",
          "$ref": "#/definitions/communicationStatusType"
        },
        "keyReady": {
          "description": "Denotes the status of Key Ready message. It can have one of the values:PENDING, COMPLETED or FAILED",
          "$ref": "#/definitions/communicationStatusType"
        },
        "checkoutMessageReceived": {
          "description": "Indicates if the Mobile checkout message is received.",
          "type": "boolean"
        },
        "requiresAction": {
          "description": "Indicates if user action is required. The action could be for sending Room Ready or Key Ready Notification. It could also be for initiating Checkout",
          "type": "boolean"
        },
        "errorMessage": {
          "description": "Error message when Mobile Notification has failed.",
          "type": "string"
        }
      }
    },
    "communicationStatusType": {
      "type": "string",
      "description": "Enum to denote the Status of Readiness messages sent to Guest Devices.",
      "enum": [
        "Pending",
        "Completed",
        "Failed",
        "Sent",
        "Received",
        "Cancelled",
        "PendingAvailability"
      ]
    },
    "upsellInfoType": {
      "type": "object",
      "description": "Information regarding upsell for a reservation.",
      "properties": {
        "originalInfo": {
          "description": "Original Values of the reservation prior to upgrade.",
          "type": "object",
          "properties": {
            "rateCode": {
              "description": "The Rate Code of the Reservation before it was upgraded",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "totalAmount": {
              "description": "Total Amount of the reservation before it was upgraded.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "roomType": {
              "description": "Original Reservation Room Type before being upgraded.",
              "$ref": "#/definitions/codeDescriptionType"
            },
            "nights": {
              "description": "The number of nights of the reservation before being upgraded.",
              "type": "integer"
            }
          }
        },
        "upsellInfo": {
          "description": "Information of a reservation during the process of upgrade.",
          "type": "object",
          "properties": {
            "totalUpsellCharge": {
              "description": "Amount that was charged for the upsell.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "totalUpsellMoneyAmount": {
              "description": "Total Amount that was charged including upsell.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "firstNightUpsellAmount": {
              "description": "First Night Total Amount including Upsell.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "firstNightUpsellCharge": {
              "description": "First Night Upsell Charges.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "totalUpsellPoints": {
              "description": "Total Upsell Points.",
              "type": "integer"
            },
            "totalActualRateAmount": {
              "description": "Actual Total Room Rate for the Target Upsell Room Type.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "roomType": {
              "description": "Reservation Room Type for Upsell.",
              "$ref": "#/definitions/codeDescriptionType"
            },
            "roomLongDescription": {
              "description": "Detail description of the Room Type.",
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "ruleId": {
              "description": "Upsell Rule Id.",
              "type": "integer"
            },
            "ruleCode": {
              "description": "Upsell rule code",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "ruleDescription": {
              "description": "Upsell rule description",
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "percentageSavings": {
              "description": "Percentage savings resulting from accepting upsell offer. This will be calculated as the ratio of the amount saved by accepting the upsell offer to the actual room rate (i.e. room rate when upsell is not offered)",
              "type": "number",
              "minimum": 0,
              "maximum": 100
            },
            "upsellDate": {
              "description": "The date on which reservation is upgraded.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "upsellUser": {
              "description": "User who upgraded the reservation.",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            }
          }
        }
      }
    },
    "codeDescriptionType": {
      "type": "object",
      "description": "This contains a generic code and description information.",
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "reservationHistoryFutureInfoType": {
      "type": "object",
      "description": "Information of History and Future Reservation details attached to Profiles.",
      "properties": {
        "historyList": {
          "description": "Refer to History list type document.",
          "$ref": "#/definitions/historyListType"
        },
        "futureList": {
          "description": "Refer to Future list type document.",
          "$ref": "#/definitions/futureListType"
        }
      }
    },
    "historyListType": {
      "type": "object",
      "description": "A collection of reservation history details attached to Profiles.",
      "properties": {
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : History reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationInfoType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "futureListType": {
      "type": "object",
      "description": "A collection of reservation history details attached to Profiles.",
      "properties": {
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : Future reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationInfoType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "reservationTurndownInfoType": {
      "type": "object",
      "description": "Turndown information for a reservation",
      "properties": {
        "allowed": {
          "description": "Indicates if turndown is allowed or not",
          "type": "boolean"
        },
        "status": {
          "description": "Indicates turndown status, values could be required, not required, completed",
          "$ref": "#/definitions/turndownStatusType"
        }
      }
    },
    "turndownStatusType": {
      "type": "string",
      "description": "Simple type for turndown status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Required, Not Required and Completed.",
      "enum": [
        "Required",
        "NotRequired",
        "Compeleted"
      ]
    },
    "guestHousekeepingServiceRequestType": {
      "type": "string",
      "description": "Possible values for the Guest Service Status.",
      "enum": [
        "DoNotDisturb",
        "MakeUpRoom",
        "NoStatusSelected"
      ]
    },
    "stayInfoType": {
      "type": "object",
      "description": "Details on the Room Stay including Guest Counts, Time Span of this Room Stay, pointers to Res Guests, guest Memberships, Comments and Special Requests pertaining to this particular Room Stay and finally financial information related to the Room Stay, including Guarantee, Deposit and Payment and Cancellation Penalties.",
      "properties": {
        "arrivalDate": {
          "type": "string",
          "format": "date"
        },
        "departureDate": {
          "type": "string",
          "format": "date"
        },
        "originalTimeSpan": {
          "description": "The Original Time Span covers the Room Stay dates of the original reservation.",
          "$ref": "#/definitions/timeSpanType"
        },
        "expectedTimes": {
          "description": "The expected arrival, return and departure times of the guest.",
          "$ref": "#/definitions/resExpectedTimesType"
        },
        "adultCount": {
          "description": "A collection of Guest Counts associated with Room Stay.",
          "type": "integer"
        },
        "childCount": {
          "description": "A collection of Child Counts associated with Room Stay.",
          "type": "integer"
        },
        "roomClass": {
          "description": "Room class code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "description": "Room type code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "componentRoomType": {
          "description": "True indicates room type is a component type.",
          "type": "boolean"
        },
        "numberOfRooms": {
          "description": "Room Id",
          "type": "integer"
        },
        "roomId": {
          "description": "Room Id",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCode": {
          "description": "Rate plan code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateAmount": {
          "description": "Rate amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "points": {
          "description": "The Points contains the number of points used to book a particular room type.",
          "$ref": "#/definitions/pointsType"
        },
        "rateSuppressed": {
          "description": "Whether this rate should be suppressed from view",
          "type": "boolean"
        },
        "reservationBlock": {
          "description": "Key information about the block for this reservation.",
          "$ref": "#/definitions/reservationBlockType"
        },
        "bookingChannelCode": {
          "description": "Booking channel code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "linkCode": {
          "description": "Party code",
          "type": "string",
          "maxLength": 2000
        },
        "fixedRate": {
          "description": "True if the rate is a fixed rate, otherwise false",
          "type": "boolean"
        },
        "totalAmount": {
          "description": "The total amount charged for the Room Stay including additional occupant amounts and fees. If TaxInclusive is set to True, then taxes are included in the total amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "guarantee": {
          "description": "The guarantee information associated to the Room Stay. A maximum of 5 occurances are available for use depending on the context.",
          "$ref": "#/definitions/resGuaranteeType"
        },
        "promotion": {
          "description": "Promotion Codes",
          "$ref": "#/definitions/promotionType"
        },
        "marketCode": {
          "description": "Market code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "marketDescription": {
          "description": "Description of Market code",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "sourceCode": {
          "description": "Source of business",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceCodeDescription": {
          "description": "Description of the source of business.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "balance": {
          "description": "Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "roomTypeCharged": {
          "description": "Room type code that was charged",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "depositPayments": {
          "description": "A collection of deposit and/or payments for the Room Stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "guestServiceStatus": {
          "description": "Service Status of In House guest like DND or MUP",
          "$ref": "#/definitions/guestHousekeepingServiceRequestType"
        },
        "scheduledCheckoutTime": {
          "description": "Indicates that this reservation is scheduled for automated check out.",
          "type": "string",
          "format": "date"
        },
        "roomNumberLocked": {
          "description": "When true, indicates a room number cannot be changed. When false, indicates a room number may be changed.",
          "type": "boolean"
        },
        "pseudoRoom": {
          "description": "True indicates as pseudo room type. This is usually used for a posting master reservation.",
          "type": "boolean"
        },
        "assignedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        },
        "upgradedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        }
      }
    },
    "aRAccountShortInfoType": {
      "type": "object",
      "description": "Accounts Receivabales Account details type charged for batched posting.",
      "properties": {
        "accountName": {
          "description": "Name of the AR Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "accountId": {
          "description": "The unique ID for the Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountNo": {
          "description": "The Account Number for the Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "status": {
          "description": "The status of the account.",
          "$ref": "#/definitions/aRAccountStatusType"
        }
      }
    },
    "aRAccountStatusType": {
      "type": "object",
      "description": "Type for the Account Status. Status can be restricted and a message/description added to the Account.",
      "properties": {
        "restriction": {
          "description": "The Restriction Code added on the Account. This is available when the functionality for adding restriction codes is ON.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "User defined status message on the Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "restricted": {
          "description": "Flag to indicate if the Account is restricted.",
          "type": "boolean"
        }
      }
    },
    "resAttachedProfileListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAttachedProfileType"
      }
    },
    "resAttachedProfileType": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Attached profile name",
          "type": "string"
        },
        "profileIdList": {
          "description": "Collection of unique profile identifiers",
          "$ref": "#/definitions/profileIdList"
        },
        "reservationProfileType": {
          "$ref": "#/definitions/resProfileTypeType"
        }
      }
    },
    "payeeInfoType": {
      "type": "object",
      "description": "Payee information.",
      "properties": {
        "payeeId": {
          "description": "Opera name id of the payee.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "payeeName": {
          "description": "Name of the payee.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "payeeAddress": {
          "description": "Address of the payee.",
          "$ref": "#/definitions/addressInfoType"
        },
        "payeeAddressCount": {
          "description": "Payee multiple address count.",
          "type": "integer"
        },
        "payeeReferenceCurrency": {
          "description": "Reference currency of the payee.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "payeeAccountInfo": {
          "description": "AR account short info of the payee.",
          "$ref": "#/definitions/aRAccountShortInfoType"
        },
        "payeeTaxNumber": {
          "description": "The tax number of the payee.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "massUpdatePayeeInfoType": {
      "type": "object",
      "description": "Payee information.",
      "properties": {
        "payeeId": {
          "description": "Opera name id of the payee.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "payeeAddress": {
          "description": "Address of the payee.",
          "$ref": "#/definitions/massUpdateAddressInfoType"
        }
      }
    },
    "reservationFolioWindowsType": {
      "type": "array",
      "description": "Collection of reservation folio windows.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationFolioWindowType"
      }
    },
    "reservationFolioWindowType": {
      "type": "object",
      "description": "Folio window view which holds the set of folios for a reservation.",
      "properties": {
        "payeeInfo": {
          "description": "The window's configured payee information.",
          "$ref": "#/definitions/payeeInfoType"
        },
        "balance": {
          "description": "Running balance of the window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "paymentMethod": {
          "description": "Payment Method Type",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioWindowNo": {
          "type": "integer"
        }
      }
    },
    "searchMatchesType": {
      "type": "array",
      "description": "List of Generic Name-Value-Pair Parameters used for super search matches.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/searchMatchType"
      }
    },
    "searchMatchType": {
      "type": "object",
      "description": "Search match indicating attribute and the matching value.",
      "properties": {
        "attribute": {
          "description": "Search match attribute.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "value": {
          "description": "Search match value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "taxTypeType": {
      "type": "object",
      "description": "Provides information about the Tax Type.",
      "properties": {
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Code of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "collectingAgentTax": {
          "description": "A boolean flag for Collecting Agent Tax",
          "type": "boolean"
        },
        "printAutoAdjust": {
          "description": "Print auto adjust information for this tax type on the tax exempt report.",
          "type": "boolean"
        },
        "reportExemptDays": {
          "description": "Number of days after which the guest will be tax exempt. Only used for tax exempt report.",
          "type": "integer"
        },
        "reportTaxPercentage": {
          "description": "Tax percentage. Only used for tax exempt report.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "minimumLengthOfStay": {
          "description": "Minimun Length of Stay.",
          "type": "integer"
        }
      }
    },
    "reservationDepositType": {
      "type": "object",
      "description": "Reservation Deposit Type.",
      "properties": {
        "amountRequired": {
          "description": "Deposit Amount Required.",
          "type": "number"
        },
        "amountPaid": {
          "description": "Deposit Amount Paid.",
          "type": "number"
        },
        "amountOwed": {
          "description": "Deposit Amount Owed.",
          "type": "number"
        },
        "dueDate": {
          "description": "Deposit Due Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "postingDate": {
          "description": "Deposit Posting Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hasPaid": {
          "description": "Resolves whether reservation has paid deposit.",
          "type": "boolean"
        },
        "hasOutstanding": {
          "description": "Resolves whether reservation has outstanding deposit.",
          "type": "boolean"
        }
      }
    },
    "reservationInterfaceStatusType": {
      "type": "object",
      "description": "Hotel Interface Type for a reservation and status of the various services",
      "properties": {
        "roomExtension": {
          "description": "Identifier for the room extension",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelInterface": {
          "description": "Hotel interface information for the reservation",
          "$ref": "#/definitions/hotelInterfaceType"
        },
        "interfaceRights": {
          "description": "Contains a list of status/rights for the various services under this interface",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/interfaceRightsStatusType"
          }
        }
      }
    },
    "interfaceRightsStatusType": {
      "type": "object",
      "properties": {
        "right": {
          "description": "Internal code for each allowed right of a Hotel Interface record.",
          "type": "integer"
        },
        "statusCode": {
          "description": "User defined code for an Interface Right.",
          "type": "string",
          "minLength": 0,
          "maxLength": 5
        },
        "description": {
          "description": "User defined description for an Interface Right.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "category": {
          "description": "Category code of this interface right.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        }
      }
    },
    "hotelInterfaceType": {
      "type": "object",
      "properties": {
        "interfaceId": {
          "description": "Unique DB internal number of a Hotel Interface record.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "Hotel Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "interfaceName": {
          "description": "Name of the Hotel Interface",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "interfaceType": {
          "description": "Three letter code for each interface that identifies the interface.",
          "$ref": "#/definitions/hotelInterfaceTypeType"
        },
        "logo": {
          "description": "Hotel Interface Logo. On the database, this is also referred as DBF Logo. This is a three letter code followed by an underscore(_). This tells us which DBF files and log files with the prefix that IFC7 is going to create.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "machineName": {
          "description": "Unique machine name of the running IFC.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "status": {
          "description": "The current status of the IFC.",
          "$ref": "#/definitions/hotelInterfaceStatusType"
        },
        "activeFlag": {
          "description": "Indicator if the Hotel Interface is active or not. This is different from the Interface Status, which is either STOPPED or RUNNING.",
          "type": "boolean"
        }
      }
    },
    "hotelInterfaceTypeType": {
      "type": "string",
      "enum": [
        "Bms",
        "Cas",
        "Ccw",
        "Dls",
        "Eft",
        "Exp",
        "Mak",
        "Mbs",
        "Msc",
        "Pbx",
        "Pos",
        "Svs",
        "Tik",
        "Vid",
        "Vms",
        "Www",
        "Xml"
      ],
      "description": "XML Posting Interface"
    },
    "hotelInterfaceStatusType": {
      "type": "string",
      "description": "Status of the Hotel Interface either STOPPED or RUNNING.",
      "enum": [
        "Stopped",
        "Running",
        "Waiting",
        "StopInitiated",
        "StartInitiated",
        "RebootInitiated",
        "Other"
      ]
    },
    "reservationInfoType": {
      "type": "object",
      "description": "The Reservation class contains the current reservation being created or altered.",
      "properties": {
        "reservationIdList": {
          "description": "Unique identifiers for the reservation for both internal and external systems",
          "$ref": "#/definitions/reservationIdList"
        },
        "externalReferences": {
          "description": "External Reference information for Reservation.",
          "$ref": "#/definitions/externalReferencesType"
        },
        "roomStay": {
          "description": "Collection of room stays.",
          "$ref": "#/definitions/stayInfoType"
        },
        "reservationGuest": {
          "description": "Collection of guests associated with the reservation.",
          "$ref": "#/definitions/resGuestInfoType"
        },
        "sharedGuests": {
          "description": "Collection of guests who share this reservation.",
          "$ref": "#/definitions/resSharedGuestListType"
        },
        "attachedProfiles": {
          "description": "List of attached profiles",
          "$ref": "#/definitions/resAttachedProfileListType"
        },
        "reservationPaymentMethod": {
          "description": "Payment method used for this reservation",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "reservationFolioWindows": {
          "description": "Collection of reservation folio windows.",
          "$ref": "#/definitions/reservationFolioWindowsType"
        },
        "specials": {
          "description": "Set of reservation preferences which belongs to the Specials group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "lastPrivacyPromptDate": {
          "description": "Last Privacy Prompt Date",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "displayColor": {
          "description": "Color setting of the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationIndicators": {
          "description": "Indicators of additional information attached to the reservation",
          "$ref": "#/definitions/indicatorsType"
        },
        "roomStatus": {
          "description": "Current room status",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "searchMatches": {
          "description": "Super Search matching terms.",
          "$ref": "#/definitions/searchMatchesType"
        },
        "sourceOfSale": {
          "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
          "$ref": "#/definitions/sourceOfSaleType"
        },
        "waitlist": {
          "description": "Information regarding why reservation has been/was waitlisted. This could hold information as history even if reservation is not in Waitlist status anymore.",
          "$ref": "#/definitions/waitlistResType"
        },
        "queue": {
          "description": "Information about the time and duration this reservation was on Queue for Checkin.",
          "$ref": "#/definitions/reservationQueueInformationType"
        },
        "housekeeping": {
          "description": "Information regarding housekeeping for this reservation.",
          "$ref": "#/definitions/resHousekeepingType"
        },
        "cashiering": {
          "description": "Holds cashiering related information for the reservation.",
          "$ref": "#/definitions/resCashieringType"
        },
        "taxType": {
          "description": "This stores the code for the type of tax calculation especially with tax exemption, etc.",
          "$ref": "#/definitions/taxTypeType"
        },
        "deposit": {
          "description": "Holds reservation deposit information.",
          "$ref": "#/definitions/reservationDepositType"
        },
        "allowedActions": {
          "description": "Collection of reservation allowed actions.",
          "$ref": "#/definitions/reservationAllowedActionsType"
        },
        "revenuesAndBalances": {
          "description": "Revenues and Balances Amount summary for the reservation.",
          "$ref": "#/definitions/resRevenueBalanceType"
        },
        "hotelInterfaceStatusList": {
          "description": "Collection of Hotel Interfaces and rights, this is populated only when fetching interface status for rooms.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationInterfaceStatusType"
          }
        },
        "guestPreferredCurrency": {
          "description": "Currency code preferred by guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "turndownInfo": {
          "description": "Currency code preferred by guest.",
          "$ref": "#/definitions/reservationTurndownInfoType"
        },
        "mobileNotifications": {
          "description": "Denotes the status of Room Ready, Key Ready messages.",
          "$ref": "#/definitions/resMobileNotificationsType"
        },
        "reservationCommunication": {
          "description": "Collection of reservation communication details.",
          "$ref": "#/definitions/resCommunicationType"
        },
        "advanceCheckIn": {
          "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
          "$ref": "#/definitions/advanceCheckInType"
        },
        "welcomeOffer": {
          "description": "This flag will determine wheather the reservation is eligible for Welcome Offer or not.",
          "type": "boolean"
        },
        "cancellationInfo": {
          "description": "Information regarding why reservation has been/was cancelled.",
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "code": {
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "date": {
              "description": "Date when reservation was last cancelled.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            }
          }
        },
        "keyCount": {
          "description": "Number of keys created for the reservation.",
          "type": "integer"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "expectedServiceTime": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomStayReservation": {
          "description": "Boolean True if this reservation is reserving rooms. False if it is only reserving services.",
          "type": "boolean"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "computedReservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "walkInIndicator": {
          "description": "When true, indicates the reservation is for a guest that walks-in without a reservation. When false, the reservation is not a walk-in.",
          "type": "boolean"
        },
        "accessRestriction": {
          "description": "Indicates user restriction on the reservation based on the Access exclusion functionality such as Restriction on Changes, Cancellation or both.",
          "$ref": "#/definitions/resAccessRestrictionType"
        },
        "commissionPayoutTo": {
          "description": "If not null, reservation is considered to pay out commission to either Travel Agent, Source or both.",
          "$ref": "#/definitions/commissionPayoutToType"
        },
        "paymentMethod": {
          "description": "Payment Method.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "preRegistered": {
          "description": "Defines if the reservation is pre-registered or not.",
          "type": "boolean"
        },
        "openFolio": {
          "description": "Returns true when reservation has an open folio.",
          "type": "boolean"
        },
        "allowMobileCheckout": {
          "description": "Flag containing true or false value for reservation to be eligible for self-checkout by guest using mobile device . Pass the ?true? or ?false? values when creating / modifying reservation to indicate whether a reservation is eligible for mobile checkout yes / no. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "allowMobileViewFolio": {
          "description": "Attribute AllowMobileViewFolio is set to true when the reservation is eligible for viewing folio using mobile device.",
          "type": "boolean"
        },
        "optedForCommunication": {
          "description": "Attribute OptedForCommunication is set to true when the guest has opted for receiving communicationsl related to the reservation.",
          "type": "boolean"
        }
      }
    },
    "queueTextInfoType": {
      "type": "object",
      "description": "Information regarding the message sent to guest.",
      "properties": {
        "sentTime": {
          "description": "Time the text was last sent to the user.",
          "type": "string",
          "format": "date-time"
        },
        "sentBy": {
          "description": "User name of the user who sent message.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "reservationQueueInformationType": {
      "type": "object",
      "description": "Information regarding the Date, Duration and Priority of the reservation on Queue for Check in.",
      "properties": {
        "timeSpan": {
          "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
          "type": "object",
          "properties": {
            "startDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "endDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "duration": {
              "type": "string"
            },
            "durationInSeconds": {
              "description": "The total duration, in seconds, the reservation is on Queue.",
              "type": "integer"
            }
          }
        },
        "guestTextInfo": {
          "description": "Information for the message sent to the user",
          "$ref": "#/definitions/queueTextInfoType"
        },
        "priority": {
          "description": "The Queue Priority given to this reservation.",
          "type": "integer"
        },
        "averageQueueTimeToCheckIn": {
          "description": "The average time, in seconds, a reservation was on queue prior to Check-In.",
          "type": "integer"
        },
        "averageQueueTimeCurrentReservations": {
          "description": "The average time, in seconds, of the reservations currently in queue.",
          "type": "integer"
        },
        "queueDate": {
          "description": "The Business date on which the reservation was due to arrive and is currently placed on Queue for Check In.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "compAuthorizerInfoType": {
      "type": "object",
      "description": "Authorizer Information",
      "properties": {
        "authorizerId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "authorizerUserName": {
          "description": "Application user name of the authorizer",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "authorizerName": {
          "description": "Full name of the authorizer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        }
      }
    },
    "trxCodesInfoType": {
      "type": "array",
      "description": "List of Transaction codes info.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trxInfoType"
      }
    },
    "articlePostItType": {
      "type": "object",
      "description": "Post it information of an article.",
      "properties": {
        "availableForPostIt": {
          "description": "Indicates whether the article is available for post it.",
          "type": "boolean"
        },
        "color": {
          "description": "Color indicator which is only configurable if article is available for post it.",
          "$ref": "#/definitions/colorType"
        }
      }
    },
    "colorType": {
      "type": "string",
      "description": "Color configuration type. This color configuration provides a visual category of entities.",
      "enum": [
        "Red",
        "DarkRed",
        "Green",
        "DarkGreen",
        "LightGreen",
        "Orange",
        "White",
        "Yellow",
        "DarkYellow",
        "Purple",
        "Brown",
        "Gray",
        "Aqua",
        "Chocolate",
        "Blue",
        "LightBlue",
        "DarkBlue",
        "Cyan",
        "DarkCyan",
        "Magenta",
        "DarkMagenta",
        "Black"
      ]
    },
    "articleInfoType": {
      "type": "object",
      "description": "Information regarding an article.",
      "properties": {
        "description": {
          "description": "Description of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionCode": {
          "description": "Transaction code to which the article belongs.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "price": {
          "description": "Default price of the article.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postIt": {
          "description": "Post it information of the article.",
          "$ref": "#/definitions/articlePostItType"
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel code to which the article belongs.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "articleCode": {
          "description": "Unique code of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "inactive": {
          "description": "Indicates whether the article is inactive or not.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        }
      }
    },
    "trxInfoType": {
      "type": "object",
      "description": "Transaction codes info.",
      "properties": {
        "description": {
          "description": "Transaction codes info.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionGroup": {
          "description": "Category of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionSubGroup": {
          "description": "Sub category of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "routingInstructionsId": {
          "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
          "type": "number"
        },
        "articles": {
          "description": "The List of Articles defined for this transaction code, when using the Articles functionality.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/articleInfoType"
          }
        },
        "trxServiceType": {
          "description": "Contains service type for transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionCode": {
          "description": "Unique identifier for the Transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel context of the Transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "printTrxReceipt": {
          "description": "Print receipt flag that tells whether the transaction receipt is to be printed or not. This is based on the transaction code.",
          "type": "boolean"
        }
      }
    },
    "massUpdateTrxInfoType": {
      "type": "object",
      "description": "Transaction codes info.",
      "properties": {
        "transactionCode": {
          "description": "Unique identifier for the Transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "billingInstructionsType": {
      "type": "array",
      "description": "Set of Billing Instruction codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/billingInstructionType"
      }
    },
    "billingInstructionType": {
      "type": "object",
      "description": "Configured Billing Instruction which represents a set of Transaction Codes.",
      "properties": {
        "desc": {
          "description": "Billing Instruction code description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "routingInstructionsId": {
          "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
          "type": "number"
        },
        "billingCode": {
          "description": "Unique identifier for the Billing Instruction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel context of the Billing Instruction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "massUpdateBillingInstructionType": {
      "type": "object",
      "description": "Configured Billing Instruction which represents a set of Transaction Codes.",
      "properties": {
        "billingCode": {
          "description": "Unique identifier for the Billing Instruction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "profileRoutingInstructionsType": {
      "type": "object",
      "description": "The type contains routing instructions for the profile.",
      "properties": {
        "transactionCodes": {
          "description": "Set of preconfigured transaction codes.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "billingInstructions": {
          "description": "Set of preconfigured Billing Instruction results.",
          "$ref": "#/definitions/billingInstructionsType"
        },
        "autoPopulateRouting": {
          "description": "A flag which determines whether the instructions has to be automatically populated for this profile or not.",
          "type": "boolean"
        }
      }
    },
    "profileCashieringDetailType": {
      "type": "object",
      "description": "The type contains routing instructions for the profile.",
      "properties": {
        "paymentMethod": {
          "description": "Payment Method Details.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "eCommerceId": {
          "description": "E-Commerce ID of the Profile",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "routingInstructions": {
          "description": "Set of preconfigured transaction codes.",
          "$ref": "#/definitions/profileRoutingInstructionsType"
        },
        "taxType": {
          "description": "Tax type code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "fiscalGuestType": {
          "description": "Guest type code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel Code for which the routing instructions are provided for a profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "transportInfoType": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "type": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transportCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "carrierCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "stationCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "dateTime": {
          "type": "string",
          "format": "date-time"
        },
        "transportationReqd": {
          "type": "boolean"
        }
      }
    },
    "massTransportInfoType": {
      "type": "object",
      "properties": {
        "comments": {
          "description": "Comments about the transport info",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "type": {
          "description": "Identifier for transport type transport info of a reservation",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transportCode": {
          "description": "Identifier for transport transport code transport info of a reservation",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "carrierCode": {
          "description": "Identifier for carrier code in transport info of a reservation",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "stationCode": {
          "description": "Identifier for station code in transport info of a reservation",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "dateTime": {
          "description": "Date time for arrival and departure transportation",
          "type": "string",
          "format": "date-time"
        },
        "transportationReqd": {
          "description": "Identifier to check if transport is required",
          "type": "boolean"
        }
      }
    },
    "visaInfoType": {
      "type": "object",
      "properties": {
        "visaIssueDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaExpiryDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaNumber": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "resGuestType": {
      "type": "object",
      "description": "A collection of ResGuest objects, identifying the guests associated with this reservation. Which guests are in which room is determined by each RoomStays ResGuestRPHs collection.",
      "properties": {
        "profileInfo": {
          "description": "A collection of Profiles or Unique IDs of Profiles.",
          "type": "object",
          "properties": {
            "profileIdList": {
              "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
              "$ref": "#/definitions/profileIdList"
            },
            "profile": {
              "description": "Provides detailed information regarding either a company or a customer profile.",
              "$ref": "#/definitions/profileType"
            },
            "profileCashieringDetail": {
              "description": "Cashiering details for the profile.",
              "$ref": "#/definitions/profileCashieringDetailType"
            },
            "registrationCardNo": {
              "description": "Unique identifier of the police registration card number.",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            }
          }
        },
        "arrivalTransport": {
          "$ref": "#/definitions/transportInfoType"
        },
        "departureTransport": {
          "$ref": "#/definitions/transportInfoType"
        },
        "visaInfo": {
          "$ref": "#/definitions/visaInfoType"
        },
        "reservationGuestRPH": {
          "description": "This is a reference placeholder, used as an index for this guest in this reservation. In the ResGuest object it is used like all other RPH attributes to send the delta of a reservation. It is used by the RoomStay and Service objects to indicate which guests are associated with that room stay or service.",
          "type": "string",
          "minLength": 1,
          "maxLength": 8
        },
        "primary": {
          "description": "When true indicates this is the primary guest.",
          "type": "boolean"
        }
      }
    },
    "profileId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "resSharedGuestListType": {
      "type": "array",
      "description": "Collection of shared guest reservations.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resSharedGuestInfoType"
      }
    },
    "resSharedGuestInfoType": {
      "type": "object",
      "description": "Contains information regarding the share reservation.",
      "properties": {
        "profileId": {
          "$ref": "#/definitions/profileId"
        },
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        }
      }
    },
    "guestLastStayInfoType": {
      "type": "object",
      "description": "Contains last stay related details of the guest.",
      "properties": {
        "lastStayDate": {
          "description": "Guest's last stay date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastStayRoom": {
          "description": "Room Number where the guest stayed.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "lastStayRate": {
          "description": "The Rate amount of the guest's last stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalStay": {
          "description": "The total number of previous stay of the guest.",
          "type": "integer"
        }
      }
    },
    "resGuestAdditionalInfoType": {
      "type": "object",
      "properties": {
        "portOfEntry": {
          "description": "Entry point into the country. (Croatian Requirements).",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "dateOfEntry": {
          "description": "Entry Date into the country. (Croatian Requirements).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "nextDestination": {
          "description": "Entry Date into the country. (Croatian Requirements).",
          "type": "string"
        },
        "preferredRoomType": {
          "description": "Preferred Room Type of the guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "lastStay": {
          "description": "Last Stay information of the guest.",
          "$ref": "#/definitions/guestLastStayInfoType"
        },
        "purposeOfStay": {
          "description": "Purpose of stay.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "guestClassification": {
          "description": "Guest Classification for the data export.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "guestStatus": {
          "description": "Guest Status for the data export.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "commissionPayoutToType": {
      "type": "string",
      "enum": [
        "TravelAgent",
        "Source",
        "TravelAgentSource",
        "None"
      ]
    },
    "resCommunicationType": {
      "type": "object",
      "description": "Communication details for a reservation.",
      "properties": {
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        }
      }
    },
    "awardKindType": {
      "type": "string",
      "description": "Indicates that this is electronic certificate.",
      "enum": [
        "Paper",
        "ECertificate"
      ]
    },
    "awardStatusType": {
      "type": "string",
      "description": "Indicates that certificate is in use.",
      "enum": [
        "Available",
        "NotAvailable",
        "InUse"
      ]
    },
    "reservationCertificateType": {
      "type": "string",
      "description": "Certificate is incentive.",
      "enum": [
        "Reward",
        "Incentive"
      ]
    },
    "rewardCertificateType": {
      "type": "string",
      "description": "Point Saver reward.",
      "enum": [
        "Regular",
        "StayAnytime",
        "PointSaver"
      ]
    },
    "awardsType": {
      "type": "array",
      "description": "List of awards.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/awardType"
      }
    },
    "fBAInfoType": {
      "type": "object",
      "description": "FBA ( Flexible Benefits Awards ) related fields.",
      "properties": {
        "status": {
          "description": "Possible FBA statuses.",
          "$ref": "#/definitions/fBAStatusType"
        },
        "monetaryValue": {
          "description": "Award's FBA monetary values.",
          "type": "number"
        },
        "amount": {
          "description": "Award's FBA amount.",
          "type": "number"
        },
        "postedAmount": {
          "description": "Award's FBA posted amount.",
          "type": "number"
        },
        "reimbursedAmount": {
          "description": "Award's FBA reimbursed amount.",
          "type": "number"
        },
        "postingDateTime": {
          "description": "Date and time of the FBA posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "postingBusinessDate": {
          "description": "Business date of the FBA posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "settlementDateTime": {
          "description": "Date and time of the FBA settlement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "settlementBusinessDate": {
          "description": "Business date of the FBA settlement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reimbursementDateTime": {
          "description": "Date and time of the FBA reimbursement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reimbursementBusinessDate": {
          "description": "Business date of the FBA reimbursement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "fbaBillGenDate": {
          "description": "Business date of the FBA bill generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "flexibleBenefitAward": {
          "description": "Indicates if this certificate is a Flexible Benefit Award certificate.",
          "type": "boolean"
        },
        "posted": {
          "description": "Indicates whether FBA has been posted.",
          "type": "boolean"
        },
        "settled": {
          "description": "Indicates whether FBA has been settled.",
          "type": "boolean"
        },
        "reimbursed": {
          "description": "Indicates whether FBA has been reimbursed.",
          "type": "boolean"
        },
        "resettleAllowed": {
          "description": "Marks if the certificate is eligible for resettlement",
          "type": "boolean"
        },
        "reimburseAllowed": {
          "description": "Marks if the certificate is eligible for reimbursement.",
          "type": "boolean"
        },
        "orphanCertificate": {
          "description": "Indicates whether the certificate is Orphan or not.",
          "type": "boolean"
        }
      }
    },
    "fBAStatusType": {
      "type": "string",
      "description": "Flexible benefit award has been reimbursed.",
      "enum": [
        "Ordered",
        "Attached",
        "Posted",
        "Settled",
        "Reimbursed"
      ]
    },
    "reservationId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "awardType": {
      "type": "object",
      "description": "Detailed information of the awards.",
      "properties": {
        "awardCode": {
          "description": "Award category.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "awardType": {
          "description": "Can be P (Paper) or E (E-Certificate).",
          "$ref": "#/definitions/awardKindType"
        },
        "description": {
          "description": "Description of the award/certificate.",
          "type": "string"
        },
        "certificateNo": {
          "description": "Certificate No.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "masterCertificiateNo": {
          "description": "Master Certificate No.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "membershipNo": {
          "description": "Membership No.",
          "type": "string"
        },
        "hotelId": {
          "description": "Hotel Code for which the routing instructions are provided for a profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelCategory": {
          "description": "Indicates the lowest hotel category for which the certificate is valid.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "externalHotelCode": {
          "description": "Hotel Code of the CRS application that this certificate belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "externalConfirmationNo": {
          "description": "Confirmation Number given by a CRS application for this reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "categoryValid": {
          "description": "Indicates whether the category of certificate is valid or not for this resort.",
          "type": "boolean"
        },
        "reservationCertificateType": {
          "description": "[R]=Reward, [I]=Incentive.",
          "$ref": "#/definitions/reservationCertificateType"
        },
        "rewardCertificateType": {
          "description": "[RE]=Regular Certificate, [SA]=Stay Anytime Certificate, [PS]=Point Saver Certificate.",
          "$ref": "#/definitions/rewardCertificateType"
        },
        "status": {
          "description": "Status of the award aka available.",
          "$ref": "#/definitions/awardStatusType"
        },
        "expirationDate": {
          "description": "Expiration Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "gift": {
          "description": "Signifies whether award is gift or not.",
          "type": "boolean"
        },
        "upgrade": {
          "description": "Signifies whether upgrade award or not.",
          "type": "boolean"
        },
        "package": {
          "description": "Signifies whether upgrade is package or not.",
          "type": "boolean"
        },
        "instantlyRedeemable": {
          "description": "Indicates if the award is an Instant Redemption award.",
          "type": "boolean"
        },
        "paidUpgrade": {
          "description": "Indicates if this certificate was ordered using the \"Paid Upgrade\" option in the E-Certs screen.",
          "type": "boolean"
        },
        "detailedCertificate": {
          "description": "Indicates if this certificate is detailed or not.",
          "type": "boolean"
        },
        "nights": {
          "description": "Award Nights.",
          "type": "integer"
        },
        "sourceType": {
          "description": "MRW : From MRW MAN:Entered manually.",
          "type": "string"
        },
        "points": {
          "description": "No. of points used to order this award.",
          "type": "number"
        },
        "fBAInfo": {
          "description": "FBA related fields.",
          "$ref": "#/definitions/fBAInfoType"
        },
        "reservationId": {
          "description": "Reservation IDs will be empty if award is not attached.",
          "$ref": "#/definitions/reservationId"
        },
        "profileId": {
          "description": "Unique profile identifier requested to be fetched.",
          "$ref": "#/definitions/profileId"
        },
        "quantity": {
          "description": "Quantity of such awards needed to be ordered.",
          "type": "integer"
        },
        "displaySequence": {
          "description": "Indicates the order in which the certificates received from MRW.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "employeeInfoType": {
      "type": "object",
      "properties": {
        "personName": {
          "$ref": "#/definitions/personNameType"
        },
        "profileId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "addressInfo": {
          "$ref": "#/definitions/addressInfoType"
        },
        "emailInfo": {
          "$ref": "#/definitions/emailInfoType"
        },
        "phoneInfo": {
          "$ref": "#/definitions/telephoneInfoType"
        },
        "department": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "gender": {
          "description": "Identifies the profile gender code selected from Gender types List of values. Gender types LOV provides the values configured at gender configuration.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "birthDate": {
          "description": "Indicates the date of birth as indicated in the document, in ISO 8601 prescribed format.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "birthDateMasked": {
          "description": "Indicates the date of birth as masked.",
          "type": "string"
        }
      }
    },
    "userSessionDefaultsType": {
      "type": "object",
      "properties": {
        "dbDateFormat": {
          "type": "string"
        },
        "oracleDateFormat": {
          "type": "string"
        },
        "oracleTimeFormat": {
          "type": "string"
        },
        "javaDateFormat": {
          "type": "string"
        },
        "javaTimeFormat": {
          "type": "string"
        },
        "currencyCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencyFormat": {
          "type": "string"
        },
        "defaultLanguage": {
          "type": "string"
        },
        "baseLanguage": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "parametersType": {
      "type": "array",
      "description": "Collection of generic Name-Value-Pair parameters.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/parameterType"
      }
    },
    "parameterType": {
      "type": "object",
      "description": "Name value pair type that will hold generic parameter information. Only use this type when the parameters being passed are too dynamic to be defined.",
      "properties": {
        "parameterName": {
          "description": "Name of the parameter.",
          "type": "string"
        },
        "parameterValue": {
          "description": "Value of the parameter.",
          "type": "string"
        }
      }
    },
    "userSessionInfoType": {
      "type": "object",
      "properties": {
        "businessDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "systemDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "terminal": {
          "type": "string"
        },
        "runningApp": {
          "type": "string"
        },
        "shareProfiles": {
          "type": "boolean"
        },
        "hotel": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "cro": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "chain": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cROCountryCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sessionDefaults": {
          "$ref": "#/definitions/userSessionDefaultsType"
        },
        "parameters": {
          "$ref": "#/definitions/parametersType"
        }
      }
    },
    "attendantType": {
      "type": "object",
      "properties": {
        "attendantId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "applicationUserType": {
      "type": "object",
      "properties": {
        "hotel": {
          "description": "Hotel where user belongs.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "appUser": {
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        },
        "lDAPUser": {
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        },
        "actAs": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "actAt": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "userDefaultLanguage": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "appUserId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "cashierId": {
          "type": "integer"
        },
        "cashierTitle": {
          "description": "Cashier title.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "department": {
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        },
        "departmentLocation": {
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        },
        "salesRepCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "expiryDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "disabledUntil": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "passwordChangeDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "userInfo": {
          "$ref": "#/definitions/employeeInfoType"
        },
        "userSessionInfo": {
          "description": "This is only used during log-in.",
          "$ref": "#/definitions/userSessionInfoType"
        },
        "attendantInfo": {
          "$ref": "#/definitions/attendantType"
        }
      }
    },
    "trackItId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "trackItGroup": {
      "type": "string",
      "description": "Group to which the Track It items belong.",
      "enum": [
        "Parcel",
        "Valet",
        "Baggage",
        "Lost"
      ]
    },
    "resGuestInfoType": {
      "type": "object",
      "description": "Specifies Company or Travel Agent profile using IATA or Corp. No.",
      "properties": {
        "membership": {
          "description": "The Membership object identifying the frequent customer reward program.",
          "$ref": "#/definitions/membershipInfoType"
        },
        "namePrefix": {
          "description": "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)",
          "$ref": "#/definitions/namePrefixType"
        },
        "givenName": {
          "description": "Given name, first name or names",
          "$ref": "#/definitions/givenNameType"
        },
        "alternateGivenName": {
          "description": "Alternate given name, first name or names",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "middleName": {
          "description": "The middle name of the person name",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "surnamePrefix": {
          "description": "e.g \"van der\", \"von\", \"de\"",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "surname": {
          "description": "Family name, last name.",
          "$ref": "#/definitions/surnameType"
        },
        "alternateSurname": {
          "description": "Alternate family name, last name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "fullName": {
          "description": "Full display name",
          "type": "string"
        },
        "alternateFullName": {
          "description": "Altername full display name",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Phone number",
          "$ref": "#/definitions/phoneNumberType"
        },
        "email": {
          "description": "Email address",
          "$ref": "#/definitions/basicEmailType"
        },
        "birthDate": {
          "description": "Date of birth",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nationality": {
          "description": "Affiliation or ethnicity to a particular country.",
          "$ref": "#/definitions/countryNameType"
        },
        "vip": {
          "description": "The supplier's ranking of the customer (e.g., VIP, numerical ranking).",
          "$ref": "#/definitions/vIPType"
        },
        "address": {
          "description": "Address information that is attached to the reservation guest",
          "$ref": "#/definitions/addressSearchType"
        },
        "anonymization": {
          "description": "Provides information about the guest's anonymization status",
          "$ref": "#/definitions/anonymizationType"
        },
        "accompanyGuests": {
          "description": "List of guest names that are accompanying the reservation guest",
          "$ref": "#/definitions/resAccompanyGuestListType"
        },
        "externalInfo": {
          "description": "External information about the guest associated with the reservation.",
          "$ref": "#/definitions/resGuestExternalInfoType"
        },
        "guestLastStayInfo": {
          "description": "Contains information regarding the last stay of this guest.",
          "$ref": "#/definitions/guestLastStayInfoType"
        },
        "guestRestrictedCode": {
          "description": "Guest profile restricted reason code",
          "type": "string"
        },
        "guestRestrictedReasonDesc": {
          "description": "Guest profile restricted reason description",
          "type": "string"
        },
        "guestRestricted": {
          "description": "True indicates there are restrictions associated with the current profile.",
          "type": "boolean"
        },
        "registrationCardNo": {
          "description": "Unique identifier of the police registration card number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameType": {
          "$ref": "#/definitions/nameTypeType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "resGuestExternalInfoType": {
      "type": "object",
      "description": "Specifies Company or Travel Agent profile using IATA or Corp. No.",
      "properties": {
        "givenName": {
          "description": "Given name, first name or names",
          "$ref": "#/definitions/givenNameType"
        },
        "surname": {
          "description": "Family name, last name.",
          "$ref": "#/definitions/surnameType"
        }
      }
    },
    "resAccompanyGuestListType": {
      "type": "array",
      "description": "Collection of accompany guests",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAccompanyGuestInfoType"
      }
    },
    "resAccompanyGuestInfoType": {
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        },
        "registrationCardNo": {
          "description": "Unique identifier of the police registration card number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
          "$ref": "#/definitions/profileIdList"
        }
      }
    },
    "givenNameType": {
      "type": "string",
      "description": "Given name, first name or names",
      "minLength": 0,
      "maxLength": 40
    },
    "namePrefixType": {
      "type": "string",
      "description": "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)",
      "minLength": 0,
      "maxLength": 40
    },
    "nameTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Agent",
        "Contact",
        "Source",
        "Group",
        "Employee",
        "Hotel",
        "Purge"
      ]
    },
    "surnameType": {
      "type": "string",
      "description": "Family name, last name.",
      "minLength": 0,
      "maxLength": 40
    },
    "languageType": {
      "type": "string",
      "minLength": 0,
      "maxLength": 40
    },
    "membershipInfoType": {
      "type": "object",
      "description": "The Membership object identifies the frequent customer reward program.",
      "properties": {
        "membershipId": {
          "description": "Membership ID (Unique ID from the memberships table).",
          "type": "number"
        },
        "programCode": {
          "description": "The code or name of the membership program ('Hertz', 'AAdvantage', etc.).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bonusCode": {
          "description": "The code or name of the bonus program. BonusCode can be used to indicate the level of membership (Gold Club, Platinum member, etc.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "membershipTypeDesc": {
          "description": "The description of the ProgramCode.(Delta Previlige for code DP)",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "membershipLevelDesc": {
          "description": "The description of the Bonus Code.(Platinum for code P)",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "accountId": {
          "description": "The account identification number for this particular member in this particular program.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "membershipLevel": {
          "description": "The code or name of the membership level and indicates the level of membership (Gold Club, Platinum member, etc.). This is same as the BonusCode.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        }
      }
    },
    "addressSearchType": {
      "type": "object",
      "description": "Address Details such as city, state, country, postal code etc.",
      "properties": {
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "streetAddress": {
          "description": "First Line of Street Address. For profile search it matches the first Address line.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "excludeNoCity": {
          "description": "When true indicates that only profiles with city will be fetched.",
          "type": "boolean"
        }
      }
    },
    "phoneNumberType": {
      "type": "string",
      "description": "Phone number",
      "minLength": 0,
      "maxLength": 40
    },
    "basicEmailType": {
      "type": "string",
      "description": "Email address",
      "minLength": 0,
      "maxLength": 2000
    },
    "vIPType": {
      "type": "object",
      "description": "The supplier's ranking of the customer.",
      "properties": {
        "vipCode": {
          "description": "VIP Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vipDescription": {
          "description": "VIP Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "trackItReservationInfoType": {
      "type": "object",
      "description": "Reservation info associated with a Track It item.",
      "properties": {
        "reservationIdList": {
          "$ref": "#/definitions/reservationIdList"
        },
        "timeSpan": {
          "$ref": "#/definitions/timeSpanType"
        },
        "guestInfo": {
          "$ref": "#/definitions/resGuestInfoType"
        },
        "roomType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomStatus": {
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "guarantee": {
          "$ref": "#/definitions/resGuaranteeType"
        },
        "reservationStatus": {
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "computedReservationStatus": {
          "$ref": "#/definitions/pMS_ResStatusType"
        }
      }
    },
    "pMS_ResStatusType": {
      "type": "string",
      "description": "This reservation is in checked in status and the business date is past departure date. This could occur when ORS and PMS are in same environment.",
      "enum": [
        "Reserved",
        "Requested",
        "NoShow",
        "Cancelled",
        "InHouse",
        "CheckedOut",
        "Waitlisted",
        "DueIn",
        "DueOut",
        "Walkin",
        "PendingCheckout"
      ]
    },
    "trackItLogListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trackItLogType"
      }
    },
    "trackItLogType": {
      "type": "object",
      "description": "Individual activity log related to the Track It ticket.",
      "properties": {
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "trackItLogId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "trackItId": {
          "$ref": "#/definitions/trackItId"
        },
        "type": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "businessDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "logUserId": {
          "type": "integer"
        },
        "logUserName": {
          "type": "string"
        },
        "logDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "trackItActionType": {
      "type": "object",
      "description": "Identifies the response expected from staff or other parties relative to a Track It ticket.",
      "properties": {
        "trackItAction": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "status": {
          "$ref": "#/definitions/actionStatusType"
        }
      }
    },
    "actionStatusType": {
      "type": "string",
      "description": "Action status of the Track It item(Open, Closed).",
      "enum": [
        "Open",
        "Closed"
      ]
    },
    "trackItType": {
      "type": "object",
      "description": "Identifies the kind of Parcel, Baggage, or Lost items or Valet-managed vehicles or services.",
      "properties": {
        "type": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "url": {
          "$ref": "#/definitions/uRLType"
        }
      }
    },
    "hotelReservationsType": {
      "type": "object",
      "description": "A collection of Reservation objects and Unique IDs of Reservation.",
      "properties": {
        "reservation": {
          "description": "A collection of Reservations.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/hotelReservationType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "dateRangeType": {
      "type": "object",
      "description": "Date Range with Start and End dates.",
      "properties": {
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "activityList": {
      "type": "array",
      "description": "A collection of Activity objects.",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "activityIds": {
            "description": "A collection of reference ID values that identify this uniquely scheduled activity instance. May contain one ID per external system plus an internal identifier.",
            "$ref": "#/definitions/uniqueIDListType"
          },
          "type": {
            "description": "The Type of the activity. Eg: SPA, Golf etc.",
            "type": "string"
          },
          "location": {
            "description": "The Location where the activity takes place. Eg: Salon",
            "type": "string"
          },
          "name": {
            "description": "Name of the people for whom the activity is scheduled. Can be more than one but should be equal to the number of persons",
            "type": "array",
            "maxItems": 4000,
            "items": {
              "type": "string",
              "minLength": 0,
              "maxLength": 200
            }
          },
          "numberOfPersons": {
            "description": "The total number of the people for whom the activity is scheduled. Can be more than one but should be equal to the number of persons",
            "type": "integer"
          },
          "timeSpan": {
            "description": "The time with-in which an activity falls (Starts/Ends/Spans)",
            "$ref": "#/definitions/dateTimeSpanType"
          },
          "duration": {
            "description": "The time span of the activity falls",
            "$ref": "#/definitions/dateTimeSpanType"
          },
          "description": {
            "description": "Description of the activity",
            "type": "array",
            "maxItems": 4000,
            "items": {
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            }
          },
          "note": {
            "description": "Any additional notes or comments regarding the scheduled activity.",
            "type": "array",
            "maxItems": 4000,
            "items": {
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            }
          },
          "groupCode": {
            "description": "Any Block code associated with the activity if its a Group booking.",
            "type": "string"
          },
          "amount": {
            "description": "The amount charged for the activity.",
            "$ref": "#/definitions/currencyAmountType"
          },
          "deposit": {
            "description": "A monetary value expressed with a currency code.",
            "type": "object",
            "properties": {
              "amount": {
                "description": "A monetary amount.",
                "type": "number"
              },
              "currencyCode": {
                "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
                "type": "string",
                "minLength": 3,
                "maxLength": 3
              },
              "collectedBy": {
                "type": "string",
                "enum": [
                  "Vendor",
                  "Agent",
                  "Other"
                ]
              }
            }
          },
          "inactiveDate": {
            "description": "The Date by which the activity is deemed Cancelled/Deleted.",
            "type": "string",
            "format": "date-time"
          },
          "participants": {
            "description": "The names of the participants.",
            "type": "array",
            "maxItems": 4000,
            "items": {
              "$ref": "#/definitions/personNameType"
            }
          },
          "uRLLink": {
            "description": "The URL link to launch the Activity Reservation System to view or edit full details of this activity.",
            "type": "string"
          },
          "extensions": {
            "description": "Vendor extensions to the activity record.",
            "type": "array",
            "maxItems": 4000,
            "items": {
              "type": "string"
            }
          },
          "status": {
            "description": "Activity reservation status. Typical examples are RESERVED, BOOKED, CANCELLED, and TENTATIVE.",
            "type": "string"
          },
          "statusDescription": {
            "description": "Activity reservation status description. Typical examples are RESERVED, BOOKED, CANCELLED, and TENTATIVE.",
            "type": "string"
          },
          "link": {
            "description": "When true indicates that activity link only needs to be inserted or deleted for this record.",
            "type": "boolean"
          }
        },
        "description": "Represents a single instance of a scheduled activity."
      }
    },
    "packageCodeHeaderType": {
      "type": "object",
      "properties": {
        "primaryDetails": {
          "description": "Package code header primary details.",
          "$ref": "#/definitions/configPackagePrimaryDetailsType"
        },
        "transactionDetails": {
          "description": "Package code header transaction information.",
          "$ref": "#/definitions/configPackageTransactionType"
        },
        "postingAttributes": {
          "description": "Package code posting attributes.",
          "$ref": "#/definitions/configPostingAttributesType"
        },
        "usageDetails": {
          "description": "Package code usage information.",
          "$ref": "#/definitions/configPackageUsageDetailType"
        }
      }
    },
    "configPostingAttributesType": {
      "type": "object",
      "description": "A config Package posting attributes type.",
      "properties": {
        "addToRate": {
          "description": "The package price is added to the room rate.",
          "type": "boolean"
        },
        "printSeparateLine": {
          "description": "The package price is printed on separate line of the folio.",
          "type": "boolean"
        },
        "sellSeparate": {
          "description": "Can the package be sold separate from rate plan code?",
          "type": "boolean"
        },
        "postNextDay": {
          "description": "package charges will be posted next business day.",
          "type": "boolean"
        },
        "forecastNextDay": {
          "description": "Package will be forecasted for consumption the next business day.",
          "type": "boolean"
        },
        "deliveryTimeRequired": {
          "description": "Indicates whether a delivery time is required for the package.",
          "type": "boolean"
        },
        "webBookable": {
          "description": "Can package be sold via Web channel.",
          "type": "boolean"
        },
        "formula": {
          "description": "The custom formula used for this package, if any.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "formulaFunctionName": {
          "description": "The custom formula function name used for this package, if any.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "formulaFunctionArguments": {
          "description": "The function argument name-value combination accepted by the custom formula used for this package.",
          "$ref": "#/definitions/functionArgumentsType"
        },
        "startTime": {
          "description": "Start time the package is valid.",
          "type": "string"
        },
        "endTime": {
          "description": "End time the package is valid.",
          "type": "string"
        },
        "catering": {
          "description": "Is package used for catering?",
          "type": "boolean"
        },
        "postingRhythm": {
          "description": "The posting rhythm for this package.",
          "$ref": "#/definitions/packagePostingRhythmType"
        },
        "priceCalculationRule": {
          "description": "The price calculation rule for this package.",
          "$ref": "#/definitions/packageCalculationRuleType"
        },
        "ticket": {
          "description": "Indicates whether a package is configured as a ticket or not.",
          "type": "boolean"
        },
        "inventoryItems": {
          "description": "Package Code Inventory Items type.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/pkgInventoryItemType"
          }
        },
        "calculatedPrice": {
          "description": "Calculated Package Price based from Number of Adults, Children and Calculation Rule.",
          "type": "number"
        }
      }
    },
    "functionArgumentsType": {
      "type": "array",
      "description": "Collection of function arguments and their corresponding values.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/functionArgumentType"
      }
    },
    "functionArgumentType": {
      "type": "object",
      "description": "This type provided details of a function argument and the value it holds.",
      "properties": {
        "name": {
          "description": "Specifies the name of the function argument.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "value": {
          "description": "Specifies the value held by the function argument.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "position": {
          "description": "Specifies the position of the function argument in the argument list.",
          "type": "integer"
        },
        "dataType": {
          "description": "Specifies the datatype of the function argument.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "required": {
          "description": "Argument of the function mandatory or not.",
          "type": "boolean"
        }
      }
    },
    "packagePostingRhythmType": {
      "type": "object",
      "description": "Package Posting rhythm type.",
      "properties": {
        "everyXNightsStartingNightY": {
          "description": "Post the package every X nights Staring from Night Y.",
          "type": "object",
          "properties": {
            "startOnNightY": {
              "description": "Starting night for consumption and posting prices.",
              "type": "integer"
            },
            "postEveryXNights": {
              "description": "Occurance of nights when the package needs to be posted and consumed.",
              "type": "integer"
            }
          }
        },
        "certainNightsOfTheWeek": {
          "description": "Post the package on certain nights of the week.",
          "type": "object",
          "properties": {
            "sunday": {
              "type": "boolean"
            },
            "monday": {
              "type": "boolean"
            },
            "tuesday": {
              "type": "boolean"
            },
            "wednesday": {
              "type": "boolean"
            },
            "thursday": {
              "type": "boolean"
            },
            "friday": {
              "type": "boolean"
            },
            "saturday": {
              "type": "boolean"
            }
          }
        },
        "customStaySchedule": {
          "description": "This user defined schedule lets you enter a posting rhythm over a 14-day period, starting with the arrival date, by assigning the day (number) within a guest stay for posting this package price.",
          "type": "object",
          "properties": {
            "night1": {
              "description": "Night 1 indicator.",
              "type": "boolean"
            },
            "night2": {
              "description": "Night 2 indicator.",
              "type": "boolean"
            },
            "night3": {
              "description": "Night 3 indicator.",
              "type": "boolean"
            },
            "night4": {
              "description": "Night 4 indicator.",
              "type": "boolean"
            },
            "night5": {
              "description": "Night 5 indicator.",
              "type": "boolean"
            },
            "night6": {
              "description": "Night 6 indicator.",
              "type": "boolean"
            },
            "night7": {
              "description": "Night 7 indicator.",
              "type": "boolean"
            },
            "night8": {
              "description": "Night 8 indicator.",
              "type": "boolean"
            },
            "night9": {
              "description": "Night 9 indicator.",
              "type": "boolean"
            },
            "night10": {
              "description": "Night 10 indicator.",
              "type": "boolean"
            },
            "night11": {
              "description": "Night 11 indicator.",
              "type": "boolean"
            },
            "night12": {
              "description": "Night 12 indicator.",
              "type": "boolean"
            },
            "night13": {
              "description": "Night 13 indicator.",
              "type": "boolean"
            },
            "night14": {
              "description": "Night 14 indicator.",
              "type": "boolean"
            }
          }
        },
        "customNightSchedule": {
          "description": "The start and end of the posting period is determined as follows: If the package is attached to a rate code: The period starts with the date when the rate code to which the package is attached becomes effective for the stay. The period ends with the date of the last night for that rate code (or the last night of the stay if the rate code remains in effect until the departure date). If the package is attached separately to the reservation: The Begin Date specified on the reservation when the package was attached is the start date for the period. The End Date specified on the reservation when the package was attached is the end date for the period. If no Begin Date and/or End Date are specified when the package is attached to the reservation, the Begin Date is assumed to be the arrival date and the End Date is assumed to be the departure date of the reservation, irrespective of when the package is attached to the reservation.",
          "type": "object",
          "properties": {
            "night1": {
              "description": "Night 1 indicator.",
              "type": "boolean"
            },
            "night2": {
              "description": "Night 2 indicator.",
              "type": "boolean"
            },
            "night3": {
              "description": "Night 3 indicator.",
              "type": "boolean"
            },
            "night4": {
              "description": "Night 4 indicator.",
              "type": "boolean"
            },
            "night5": {
              "description": "Night 5 indicator.",
              "type": "boolean"
            },
            "night6": {
              "description": "Night 6 indicator.",
              "type": "boolean"
            },
            "night7": {
              "description": "Night 7 indicator.",
              "type": "boolean"
            },
            "night8": {
              "description": "Night 8 indicator.",
              "type": "boolean"
            },
            "night9": {
              "description": "Night 9 indicator.",
              "type": "boolean"
            },
            "night10": {
              "description": "Night 10 indicator.",
              "type": "boolean"
            },
            "night11": {
              "description": "Night 11 indicator.",
              "type": "boolean"
            },
            "night12": {
              "description": "Night 12 indicator.",
              "type": "boolean"
            },
            "night13": {
              "description": "Night 13 indicator.",
              "type": "boolean"
            },
            "night14": {
              "description": "Night 14 indicator.",
              "type": "boolean"
            }
          }
        },
        "type": {
          "description": "Posting Rhythm for the package.",
          "$ref": "#/definitions/postingRhythmType"
        }
      }
    },
    "postingRhythmType": {
      "type": "string",
      "description": "Simple type for posting Rhythm types.",
      "enum": [
        "EveryNight",
        "ArrivalNight",
        "EveryXNightsStartingNightY",
        "CertainNightsOfTheWeek",
        "LastNight",
        "EveryNightExceptArrivalNight",
        "EveryNightExceptLast",
        "EveryNightExceptFirstAndLast",
        "CustomStaySchedule",
        "CustomNightSchedule",
        "FloatingAllowancePerStay",
        "TicketPosting"
      ]
    },
    "packageCalculationRuleType": {
      "type": "string",
      "description": "Simple type for package caluculation rules.",
      "enum": [
        "FlatRate",
        "PerPerson",
        "PerAdult",
        "PerChild",
        "PerRoom"
      ]
    },
    "pkgInventoryItemType": {
      "type": "object",
      "properties": {
        "articleNumber": {
          "description": "Article Number of the inventory item.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the inventory item.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "quantity": {
          "description": "Quantity of the inventory item allocated to the package.",
          "type": "integer"
        },
        "itemId": {
          "description": "Identifier for the inventory item.",
          "type": "integer"
        }
      }
    },
    "configPackageUsageDetailType": {
      "type": "object",
      "description": "A Config Package Usage Detail type.",
      "properties": {
        "source": {
          "description": "Indicates if the source of the product is Rate header, Rate Detail or Reservation.",
          "$ref": "#/definitions/productSourceType"
        },
        "usedInReservations": {
          "description": "Indicates if the package is used in, reserved or prospect reservations.",
          "type": "boolean"
        },
        "usedInRates": {
          "description": "Indicates if the package is used in any rate code.",
          "type": "boolean"
        },
        "usedInHouseReservations": {
          "description": "Indicates if any checked in reservations are using this product.",
          "type": "boolean"
        }
      }
    },
    "productSourceType": {
      "type": "string",
      "description": "Sources of Products",
      "enum": [
        "Reservation",
        "RateHeader",
        "RateDetail"
      ]
    },
    "configPackageTransactionType": {
      "type": "object",
      "description": "A HotelPackageTransaction type.",
      "properties": {
        "allowance": {
          "description": "Package is marked as an allowance, in case charge is expected back to the guest account from external interface eg. POS. which need to be offset against a consumption allowance.",
          "type": "boolean"
        },
        "currency": {
          "description": "The currency code for this package.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "postingType": {
          "description": "The posting frequency for this package, e.g., daily, arrival, departure, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "calculationRule": {
          "description": "The price calculation rule for this package.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "packagePostingRules": {
          "description": "The package posting rule details.",
          "$ref": "#/definitions/packagePostingRulesType"
        }
      }
    },
    "packagePostingRulesType": {
      "type": "object",
      "properties": {
        "transactionCode": {
          "description": "The Transaction code used to post the package price.",
          "$ref": "#/definitions/packageTransactionCodeType"
        },
        "overageCode": {
          "description": "The overage code to record over consumed allowance.",
          "$ref": "#/definitions/packageTransactionCodeType"
        },
        "profitCode": {
          "description": "The transaction code to record package profit, if any, from un-consumed allowance.",
          "$ref": "#/definitions/packageTransactionCodeType"
        },
        "lossCode": {
          "description": "The transaction code to record package Loss, if any, from un-consumed allowance.",
          "$ref": "#/definitions/packageTransactionCodeType"
        },
        "alternateCodesList": {
          "description": "The alternate transaction code that can be consumed by the guest in place of the transaction code.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/packageTransactionCodeType"
          }
        }
      }
    },
    "packageTransactionCodeType": {
      "type": "object",
      "properties": {
        "description": {
          "description": "The description of the code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "code": {
          "description": "Posting / transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "type": {
          "description": "Code is inclusive or exclusive of other chanrges such as taxes.",
          "$ref": "#/definitions/amountDeterminationType"
        }
      }
    },
    "configPackagePrimaryDetailsType": {
      "type": "object",
      "description": "A Config Package Info type.",
      "properties": {
        "description": {
          "description": "The description of the package.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "shortDescription": {
          "description": "The short description of the package.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "forecastGroup": {
          "description": "The Forecast group package belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "arrangementCode": {
          "description": "Arrangement Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "beginSellDate": {
          "description": "Indicates the begin sell date of the package.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endSellDate": {
          "description": "Indicates the end sell date of the package.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "packageConsumptionType": {
      "type": "object",
      "description": "Package Consumption Information. Includes information on quantity of the package used, allowance consumption etc.",
      "properties": {
        "defaultQuantity": {
          "description": "The default quantity attached in the package.",
          "type": "integer"
        },
        "excludedQuantity": {
          "description": "The quantity which has been excluded in the package.",
          "type": "integer"
        },
        "totalQuantity": {
          "description": "The total quantity of the package, calculated based on the calculation rule as defined in the PackageHeaderType.",
          "type": "integer"
        },
        "allowanceConsumed": {
          "description": "Indicates if Allowance(for POS packages) has been consumed/posted for today.",
          "type": "boolean"
        }
      }
    },
    "reservationPackageType": {
      "type": "object",
      "description": "A ReservationPackageType class.",
      "properties": {
        "packageHeaderType": {
          "description": "Package information from configuration.",
          "$ref": "#/definitions/packageCodeHeaderType"
        },
        "scheduleList": {
          "description": "A HotelPackageSchedule type.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationPackageScheduleType"
          }
        },
        "newTimeSpan": {
          "description": "The changed dates(Start and End dates) for this product.",
          "$ref": "#/definitions/timeSpanType"
        },
        "consumptionDetails": {
          "description": "Package consumption details. Includes information for quantity , allowance etc.",
          "$ref": "#/definitions/packageConsumptionType"
        },
        "packageCode": {
          "description": "Package code. This is the unique code used for the package and is a required element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "internalID": {
          "description": "Reservation Package Opera Internal Unique Id. This is the unique Id used for this reservation package.",
          "type": "number"
        },
        "ratePlanCode": {
          "description": "The rate code which contains this package. If the package is not part of a rate code, this will be empty. Required element and part of the key to fetch the correct package record on the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "startDate": {
          "description": "Required value when changing a reservation package. If the original start date was null, then null is required.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "description": "Required value when changing a reservation package. If the original end date was null, then null is required.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "packageGroup": {
          "description": "Package group code. If this package is part of a package group, the group code is indicated here. This is a required element and is part of the key to fetch the correct package record .",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "source": {
          "description": "Indicates if the source of the product is Rate header, Rate Detail or Reservation. For new development this field is to be used for passing the product scource",
          "$ref": "#/definitions/productSourceType"
        },
        "awardCode": {
          "description": "This is the Award code used to redeem the package if the package is a redemption package.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "points": {
          "description": "Indicates the points used to redeem the redemption package.",
          "type": "integer"
        }
      }
    },
    "reservationPackageScheduleType": {
      "type": "object",
      "description": "A HotelPackageSchedule type.",
      "properties": {
        "consumptionDate": {
          "description": "The date the package was used or can be used.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "unitPrice": {
          "description": "The price per unit of the package.",
          "type": "number"
        },
        "totalQuantity": {
          "description": "The total quantity of the package for this date, calculated based on the calculation rule as defined in the PackageHeaderType",
          "type": "integer"
        },
        "computedResvPrice": {
          "description": "Computed Reservation Price of the package. Calculation Will Be Performed Based On Other Parameters.",
          "type": "number"
        },
        "unitAllowance": {
          "description": "The allowance per unit of the package.",
          "type": "number"
        },
        "reservationDate": {
          "description": "The date of the Reservation when this package is applicable. This can be different from the date the package will be consumed. Example are next day packages. Reservation date is when the package is applied to the guest and Consumption date is when the guest can consume the package.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "originalUnitPrice": {
          "description": "The original price per unit of the package if it has been changed.",
          "type": "number"
        },
        "originalUnitAllowance": {
          "description": "The original allowance per unit of the package if it has been changed.",
          "type": "number"
        }
      }
    },
    "itemInfoType": {
      "type": "object",
      "description": "Basic information regarding an Item.",
      "properties": {
        "description": {
          "description": "Detail description of an item.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "availabilityPeriod": {
          "description": "Defines a Time period when the item is available.",
          "$ref": "#/definitions/timeWindowType"
        },
        "timeSpan": {
          "description": "Date Range to get the inventories of the items.",
          "$ref": "#/definitions/timeSpanType"
        },
        "quantity": {
          "description": "Quantity of hold Item",
          "type": "integer"
        },
        "itemHoldId": {
          "description": "ID reference for the hold Item",
          "type": "number"
        },
        "code": {
          "description": "Item Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "name": {
          "description": "Name of an item.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "itemPool": {
          "description": "Indicates if it is an item pool. Not applicable for Item within the Item Pool.",
          "type": "boolean"
        },
        "sellSeparate": {
          "description": "If true indicates that item is allowed to sell separately.",
          "type": "boolean"
        },
        "sellInReservation": {
          "description": "If true indicates that item can be sold in reservation.",
          "type": "boolean"
        },
        "sellInEvent": {
          "description": "If true indicates that item can be sold in event.",
          "type": "boolean"
        },
        "requiredForBooking": {
          "description": "If true indicates that item is required for the reservation.",
          "type": "boolean"
        },
        "fixedCharge": {
          "description": "If true indicates that item has fixed charge when it is attached to a reservation.",
          "type": "boolean"
        },
        "outsideStay": {
          "description": "If true indicates that item could be held outside of the reservation stay days.",
          "type": "boolean"
        },
        "defaultDuration": {
          "description": "Define the default duration in days when booking the item.",
          "type": "integer"
        }
      }
    },
    "timeWindowType": {
      "type": "object",
      "description": "Defines a Time period with start time and an end time.",
      "properties": {
        "startTime": {
          "description": "Start Time of the Time window.",
          "type": "string"
        },
        "endTime": {
          "description": "End Time of the Time window.",
          "type": "string"
        }
      }
    },
    "blockId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "paragraphType": {
      "type": "object",
      "description": "An indication of a new paragraph for a sub-section of a formatted text message.",
      "properties": {
        "text": {
          "description": "Formatted text content.",
          "$ref": "#/definitions/formattedTextTextType"
        },
        "image": {
          "description": "An image for this paragraph.",
          "type": "string"
        },
        "url": {
          "description": "A URL for this paragraph.",
          "type": "string"
        }
      }
    },
    "membershipEarningPreferenceType": {
      "type": "string",
      "description": "The earning preference of a membership, it depends on the type of property. eg. when the property is a airline it should be Miles, other than Points.",
      "enum": [
        "Points",
        "Miles"
      ]
    },
    "benefits": {
      "description": "benefits for the membership.",
      "$ref": "#/definitions/benefitsType"
    },
    "benefitsType": {
      "type": "array",
      "description": "Basic information about membership benefit.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/benefitType"
      }
    },
    "benefitType": {
      "type": "object",
      "description": "Basic information about membership benefit.",
      "properties": {
        "code": {
          "description": "Benefit code associated with a membership.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "message": {
          "description": "Processing message for membership benefit.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "inactive": {
          "description": "Indicates whether membership benefit is active or inactive.",
          "type": "boolean"
        }
      }
    },
    "tierAdministrationType": {
      "type": "string",
      "description": "Do not upgrade membership. The membership may be downgraded.",
      "enum": [
        "Disabled",
        "NoUpgrade"
      ]
    },
    "downgradeType": {
      "type": "string",
      "description": "Do not downgrade membership when the next downgrade process runs. When the downgrade process runs, the membership will be automatically set to Grace.",
      "enum": [
        "Grace",
        "Never",
        "Period"
      ]
    },
    "cardReIssueType": {
      "type": "string",
      "description": "Request to re issue a new card.",
      "enum": [
        "Pending",
        "NotApplicable",
        "Requested"
      ]
    },
    "membershipType": {
      "type": "object",
      "description": "Detailed information of the memberships.",
      "properties": {
        "comment": {
          "description": "Additional comments regarding to the membership.",
          "$ref": "#/definitions/paragraphType"
        },
        "newMembershipNumber": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "nameOnCard": {
          "description": "Name to be displayed on the membership card.",
          "type": "string"
        },
        "programDescription": {
          "description": "Description of the membership program.",
          "type": "string"
        },
        "membershipLevel": {
          "description": "Indicates the membership level.",
          "type": "string"
        },
        "membershipLevelDescription": {
          "description": "Indicates the membership level description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "membershipClass": {
          "description": "Indicates the membership class.",
          "type": "string"
        },
        "earningPreference": {
          "description": "Earning preference to the membership.",
          "$ref": "#/definitions/membershipEarningPreferenceType"
        },
        "inactive": {
          "description": "Indicates whether membership is active or inactive.",
          "type": "boolean"
        },
        "benefits": {
          "description": "benefits for the membership.",
          "$ref": "#/definitions/benefitsType"
        },
        "tierAdministration": {
          "description": "Defines the degree of participation for this membership in the tier management portion of the program.",
          "$ref": "#/definitions/tierAdministrationType"
        },
        "downgrade": {
          "description": "Defines how downgrading will be handled for this membership.",
          "$ref": "#/definitions/downgradeType"
        },
        "reIssueNewCard": {
          "description": "The status of issuing new membership card to the member.",
          "$ref": "#/definitions/cardReIssueType"
        },
        "excludeFromBatch": {
          "description": "True if you want to exclude the member from the Membership Fulfillment extract,the member's actions will not be included in the fulfillment extract until this value set to false.",
          "type": "boolean"
        },
        "upgradeDescription": {
          "description": "Indicates Upgrade information which includes member's next tier level, requirements for the next upgrade.",
          "type": "string",
          "minLength": 0,
          "maxLength": 32000
        },
        "downgradeDescription": {
          "description": "Indicates information regarding the member's possible downgrades.",
          "type": "string",
          "minLength": 0,
          "maxLength": 32000
        },
        "rating": {
          "description": "Value Rating Type Description for this membership.",
          "type": "string"
        },
        "membershipEnrollmentCode": {
          "description": "Indicates how the guest enrolled in the program.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "memberStatus": {
          "description": "Indicates where the guest is in the membership enrollment process.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currentPoints": {
          "description": "Profile MemberShip Points.",
          "type": "number"
        },
        "pointsLabel": {
          "description": "Label used to refer to points for this membership type",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "enrollmentSource": {
          "description": "Source from where the enrollment is done.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "enrollmentResort": {
          "description": "Resort/CRO where enrollment is done.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "preferredCard": {
          "description": "Preferred Card.",
          "type": "boolean"
        },
        "membershipId": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "membershipType": {
          "description": "Type of membership.",
          "type": "string"
        },
        "primaryMembershipYn": {
          "description": "Indicator if Membership is a Primary Membership.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "primaryMembership": {
          "description": "Boolean indicator set to True implies membership is a Primary Membership.",
          "type": "boolean"
        },
        "membershipIdNo": {
          "description": "Membership ID Number.",
          "type": "integer"
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        },
        "centralSetup": {
          "description": "Indicates how the award points for this membership type will be managed.",
          "type": "boolean"
        },
        "signupDate": {
          "description": "Indicates when the member signed up for the loyalty program.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "effectiveDate": {
          "description": "Indicates the starting date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDate": {
          "description": "Indicates the ending date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDateExclusiveIndicator": {
          "description": "When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15 the last date of the period is Oct 14).",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "resPaymentCardType": {
      "type": "object",
      "description": "Information on a credit card for the customer.",
      "properties": {
        "cardId": {
          "description": "credit card id",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "currentAuthorizedAmount": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "approvalAmountNeeded": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "approvalCode": {
          "description": "Approval code sent by the credit card company on a successful authorization.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cardType": {
          "description": "Indicates the type of credit card from a defined list",
          "$ref": "#/definitions/cardTypeType"
        },
        "userDefinedCardType": {
          "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
          "type": "string",
          "minLength": 0,
          "maxLength": 2
        },
        "cardNumber": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "cardNumberMasked": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "cardNumberLast4Digits": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "expirationDate": {
          "description": "Expiration date of the credit card",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expirationDateMasked": {
          "description": "Masked Expiration date of the credit card",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "expirationDateExpired": {
          "type": "boolean"
        },
        "cardHolderName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "attachCreditCardToProfile": {
          "description": "Attach the credit card to profile.",
          "type": "boolean"
        },
        "processing": {
          "description": "This contains information on whether EFT is enabled. A value of 'C' indicates EFT is enabled and 'M' indicates manual authorization is available for this payment card type.",
          "$ref": "#/definitions/cardProcessingType"
        },
        "swiped": {
          "type": "boolean"
        },
        "cardPresent": {
          "description": "Flag to determine if the credit card was swiped/manually entered , This element is only used when PAYMENT SERVICE DIRECTIVE(PSD) Opera Control is active.",
          "type": "boolean"
        },
        "cardOrToken": {
          "description": "This contains information on whether credit card is tokenized (token enabled). A value of 'Token' indicates credit card is token enabled and 'CardNumber' indicates non token environment for this payment card type.",
          "$ref": "#/definitions/cardNumberTypeType"
        },
        "citId": {
          "description": "Customer Initiated Transaction(CIT) Id for Credit Cards. This is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        }
      }
    },
    "cardNumberTypeType": {
      "type": "string",
      "description": "Simple type for indicating if credit card number is tokenized.",
      "enum": [
        "CardNumber",
        "Token"
      ]
    },
    "cardProcessingType": {
      "type": "string",
      "enum": [
        "Eft",
        "Manual"
      ]
    },
    "cardTypeType": {
      "type": "string",
      "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
      "enum": [
        "Ab",
        "Am",
        "Ax",
        "Cb",
        "Dc",
        "Ds",
        "Dt",
        "Ec",
        "Er",
        "Jc",
        "Jl",
        "Mc",
        "Nb",
        "So",
        "St",
        "Sw",
        "Va",
        "Xy",
        "Zz",
        "Cp",
        "Cu"
      ]
    },
    "authorizationRuleType": {
      "type": "object",
      "description": "Configured rule for computing the amount to authorize.",
      "properties": {
        "code": {
          "description": "The authorization rule code.",
          "type": "integer",
          "pattern": "[0-9]{1,9}"
        },
        "amount": {
          "description": "The amount applicable to the authorization rule.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "percent": {
          "description": "A percentage value if the authorization rule is percentage based.",
          "type": "number"
        }
      }
    },
    "reservationPaymentMethodType": {
      "type": "object",
      "properties": {
        "paymentCard": {
          "$ref": "#/definitions/resPaymentCardType"
        },
        "balance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "authorizationRule": {
          "$ref": "#/definitions/authorizationRuleType"
        },
        "emailFolioInfo": {
          "description": "Information on an email for the customer.",
          "type": "object",
          "properties": {
            "email": {
              "description": "eMail deatils for the profile.",
              "$ref": "#/definitions/emailType"
            },
            "emailFolio": {
              "type": "boolean"
            },
            "id": {
              "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "type": {
              "description": "A reference to the type of object defined by the UniqueID element.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "idContext": {
              "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "warnings": {
              "$ref": "#/definitions/warningsType"
            }
          }
        },
        "paymentMethod": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "folioView": {
          "type": "integer"
        }
      }
    },
    "reservationPaymentMethodsType": {
      "type": "array",
      "description": "Defines reservation payment methods.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationPaymentMethodType"
      }
    },
    "routingInfoListType": {
      "type": "array",
      "description": "A routing info object can either be of type Folio OR of type Room with its corresponding instructions.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/routingInfoType"
      }
    },
    "routingInfoType": {
      "type": "object",
      "description": "A routing info object can either be of type Folio OR of type Room with its corresponding object.",
      "properties": {
        "folio": {
          "description": "Folio routing type.",
          "type": "object",
          "properties": {
            "guestInfo": {
              "description": "Guest details",
              "type": "object",
              "properties": {
                "profileIdList": {
                  "description": "Unique identifiers for the Profile for both internal and external systems.",
                  "$ref": "#/definitions/profileIdList"
                }
              }
            },
            "payeeInfo": {
              "$ref": "#/definitions/payeeInfoType"
            },
            "aRNumber": {
              "description": "Accounts Receivable.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            },
            "folioWindowNo": {
              "type": "integer"
            },
            "paymentMethod": {
              "type": "string",
              "maxLength": 2000
            }
          }
        },
        "room": {
          "description": "Room routing type.",
          "type": "object",
          "properties": {
            "roomId": {
              "description": "Room number to route the instructions.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "guestNameId": {
              "description": "Guest unique identifier to which the instruction will be routed.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "guestDisplayName": {
              "description": "Display Name for the guest.",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "reservationNameId": {
              "description": "Reservation name id to which the instruction will be routed.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            }
          }
        },
        "comp": {
          "description": "Comp Accounting Routing Info",
          "type": "object",
          "properties": {
            "compRequestInfo": {
              "$ref": "#/definitions/compRoutingRequestType"
            },
            "payeeInfo": {
              "$ref": "#/definitions/payeeInfoType"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            },
            "folioWindowNo": {
              "type": "integer"
            }
          }
        },
        "request": {
          "description": "Comp Accounting Request routing",
          "type": "object",
          "properties": {
            "compRequestInfo": {
              "$ref": "#/definitions/compRoutingRequestType"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            }
          }
        },
        "refreshFolio": {
          "description": "On a successful update, the transactions that are already posted in the guest's folio will be re-organized based on the configured instructions.",
          "type": "boolean"
        }
      }
    },
    "routingInstructionType": {
      "type": "object",
      "description": "Routing limit can be one of the three: Credit Limit, Percetage Limit, Covers Limit",
      "properties": {
        "duration": {
          "description": "Duration of this instruction.",
          "type": "object",
          "properties": {
            "timeSpan": {
              "$ref": "#/definitions/timeSpanType"
            },
            "sunday": {
              "type": "boolean"
            },
            "monday": {
              "type": "boolean"
            },
            "tuesday": {
              "type": "boolean"
            },
            "wednesday": {
              "type": "boolean"
            },
            "thursday": {
              "type": "boolean"
            },
            "friday": {
              "type": "boolean"
            },
            "saturday": {
              "type": "boolean"
            },
            "daily": {
              "description": "Flag to indicate if the routing instruction is a daily instruction.",
              "type": "boolean"
            }
          }
        },
        "transactionCodes": {
          "description": "Set of Transaction Codes configured in this time span.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "billingInstructions": {
          "description": "Set of Billing Instructions configured in this time span.",
          "$ref": "#/definitions/billingInstructionsType"
        },
        "creditLimit": {
          "description": "Allowable credit amount for this routing instruction. Null value means no limit, 0 equals zero.",
          "type": "number"
        },
        "percentageLimit": {
          "description": "The routing limit percentage allowed for this routing instruction.",
          "type": "number"
        },
        "covers": {
          "description": "Number of covers for this routing instruction.",
          "type": "number"
        },
        "limitUsed": {
          "description": "Amount of Credit used for this routing instruction.",
          "type": "number"
        },
        "routingLinkId": {
          "description": "Internal Routing Link Id identifier to which limit group the instruction belongs.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "massUpdateRoutingInstructionType": {
      "type": "object",
      "description": "Routing limit can be one of the three: Credit Limit, Percetage Limit, Covers Limit",
      "properties": {
        "duration": {
          "description": "Duration of this instruction.",
          "type": "object",
          "properties": {
            "timeSpan": {
              "$ref": "#/definitions/massUpdateTimeSpanType"
            },
            "sunday": {
              "type": "boolean"
            },
            "monday": {
              "type": "boolean"
            },
            "tuesday": {
              "type": "boolean"
            },
            "wednesday": {
              "type": "boolean"
            },
            "thursday": {
              "type": "boolean"
            },
            "friday": {
              "type": "boolean"
            },
            "saturday": {
              "type": "boolean"
            },
            "daily": {
              "description": "Flag to indicate if the routing instruction is a daily instruction.",
              "type": "boolean"
            }
          }
        },
        "transactionCodes": {
          "type": "array",
          "description": "Set of Transaction Codes configured in this time span.",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/massUpdateTrxInfoType"
          }
        },
        "billingInstructions": {
          "description": "Set of Billing Instructions configured in this time span.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/massUpdateBillingInstructionType"
          }
        },
        "creditLimit": {
          "description": "Allowable credit amount for this routing instruction. Null value means no limit, 0 equals zero.",
          "type": "number"
        },
        "percentageLimit": {
          "description": "The routing limit percentage allowed for this routing instruction.",
          "type": "number"
        },
        "covers": {
          "description": "Number of covers for this routing instruction.",
          "type": "number"
        },
        "limitUsed": {
          "description": "Amount of Credit used for this routing instruction.",
          "type": "number"
        }
      }
    },
    "compRoutingRequestType": {
      "type": "object",
      "description": "Type for the details of a Comp Routing Request",
      "properties": {
        "requestedBy": {
          "description": "User who requested the Comp Routing",
          "$ref": "#/definitions/userInfoType"
        },
        "comments": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "declinedBy": {
          "description": "User information of user who declined comp routing request",
          "$ref": "#/definitions/userInfoType"
        },
        "status": {
          "description": "Comp routing status",
          "$ref": "#/definitions/compRoutingStatusType"
        }
      }
    },
    "compRoutingStatusType": {
      "type": "string",
      "description": "Status which indicates that the Request of Comp Routing was declined",
      "enum": [
        "Request",
        "Comp",
        "Declined"
      ]
    },
    "userInfoType": {
      "type": "object",
      "description": "Opera User Information",
      "properties": {
        "userId": {
          "description": "User Id of the Opera User",
          "type": "integer"
        },
        "userName": {
          "description": "Name of the Opera User",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "policyAmountPercentType": {
      "type": "object",
      "description": "Defines the percentage basis for calculating the fee amount or the amount.",
      "properties": {
        "basisType": {
          "description": "Provides the basis for how the amount of the guarantee is calculated.",
          "$ref": "#/definitions/policyBasisTypeType"
        },
        "nights": {
          "description": "The number of nights of the hotel stay that are used to calculate the fee amount.",
          "type": "integer"
        },
        "percent": {
          "description": "The percentage used to calculate the amount.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "policyBasisTypeType": {
      "type": "string",
      "description": "Full Amount.",
      "enum": [
        "FlatAmount",
        "Percentage",
        "Nights",
        "NightPercentage",
        "FullAmount"
      ]
    },
    "depositCancelRevenueType": {
      "type": "string",
      "description": "The type to indicate what revenue is to be used for calculating deposit/cancellation amounts.",
      "enum": [
        "Rooms",
        "Catering",
        "All"
      ]
    },
    "depositPolicyType": {
      "type": "object",
      "description": "Used to define the deposit policy, guarantees policy, and/or accepted forms of payment.",
      "properties": {
        "amountPercent": {
          "description": "Payment expressed as a fixed amount, or a percentage of/or room nights.",
          "$ref": "#/definitions/policyAmountPercentType"
        },
        "deadline": {
          "description": "Payment deadline, absolute or relative.",
          "$ref": "#/definitions/policyDeadlineType"
        },
        "description": {
          "description": "Text description of the Payment in a given language.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "depositReceiptNo": {
          "description": "Receipt number associated with the deposit policy",
          "type": "integer"
        },
        "transactionDate": {
          "description": "Transaction Date associated with the deposit policy",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "depositReqReversed": {
          "description": "Flag to indicate if deposit policy is reversed",
          "type": "boolean"
        },
        "formattedRule": {
          "description": "Formatted Text Rule of the deposit policy.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "typeOfCharges": {
          "description": "Defines if the deposit amount is calculated based on Room Charges, Catering Charges or both",
          "$ref": "#/definitions/depositCancelRevenueType"
        },
        "policyCode": {
          "description": "Deposit Policy Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "manual": {
          "description": "Flag to indicate if the deposit policy is manual.",
          "type": "boolean"
        },
        "effective": {
          "description": "Indicator if deposit policy is currently applicable or not.",
          "type": "boolean"
        },
        "estimatedAmount": {
          "description": "Estimated Amount for the deposit policy.",
          "type": "number"
        }
      }
    },
    "resDepositPoliciesType": {
      "type": "array",
      "description": "A list of deposit policies attached with the reservation.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resDepositPolicyType"
      }
    },
    "resDepositPolicyType": {
      "type": "object",
      "description": "A deposit policy attached with the reservation.",
      "properties": {
        "revenueType": {
          "description": "Type of reservation.",
          "$ref": "#/definitions/depositCancelRevenueType"
        },
        "policy": {
          "description": "Reservation deposit policy details.",
          "$ref": "#/definitions/depositPolicyType"
        },
        "comments": {
          "description": "Comments attached with a deposit.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "amountPaid": {
          "description": "Total amount paid against the reservation deposit.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "amountDue": {
          "description": "Total amount due against the reservation deposit.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "policyId": {
          "description": "Unique ID of the Reservation Policy.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "reservationPoliciesType": {
      "type": "object",
      "description": "A collection of reservation deposit and cancellation policies.",
      "properties": {
        "cancellationPolicies": {
          "description": "A collection of reservation cancellation policies..",
          "$ref": "#/definitions/resCancellationPoliciesType"
        },
        "depositPolicies": {
          "description": "A collection of reservation deposit policies.",
          "$ref": "#/definitions/resDepositPoliciesType"
        },
        "reservationIdList": {
          "description": "A list of Ids for reservation.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "name": {
          "description": "Name identifier for the reservation.",
          "type": "string"
        }
      }
    },
    "resCancellationPoliciesType": {
      "type": "array",
      "description": "A list of reservation cancellation policies.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resCancellationPolicyType"
      }
    },
    "resCancellationPolicyType": {
      "type": "object",
      "description": "A cancellation policy attached with the reservation.",
      "properties": {
        "revenueType": {
          "description": "Type of reservation.",
          "$ref": "#/definitions/depositCancelRevenueType"
        },
        "policy": {
          "description": "Cancellation policy details.",
          "$ref": "#/definitions/resCancelPenaltyType"
        },
        "percentageDue": {
          "description": "The percentage amount due for reservation cancellation.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "comments": {
          "description": "Comments attached with the reservation cancellation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "policyId": {
          "description": "Unique ID of the Reservation Policy.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "resCancelPenaltyType": {
      "type": "object",
      "description": "The CancelPenalty class defines the cancellation policy of the hotel facility.",
      "properties": {
        "deadline": {
          "description": "Cancellation deadline, absolute or relative.",
          "$ref": "#/definitions/policyDeadlineType"
        },
        "amountPercent": {
          "description": "Cancellation fee expressed as a fixed amount, or percentage of/or room nights.",
          "$ref": "#/definitions/policyAmountPercentType"
        },
        "penaltyDescription": {
          "description": "Text description of the Penalty in a given language.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "offsetUnit": {
          "$ref": "#/definitions/offsetUnitType"
        },
        "formattedRule": {
          "description": "Formatted Text Rule of the Cancellation Penalty.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "policyCode": {
          "description": "Policy Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "manual": {
          "description": "Flag to indicate if the cancellation policy is manual.",
          "type": "boolean"
        },
        "nonRefundable": {
          "description": "Indicates if the amount is refundable if booking is canceled.",
          "type": "boolean"
        },
        "effective": {
          "description": "Indicator if Cancellation Penalty is currently applicable or not.",
          "type": "boolean"
        }
      }
    },
    "offsetUnitType": {
      "type": "string",
      "description": "Indicates deadline offset unit type.",
      "enum": [
        "Year",
        "Month",
        "Day",
        "Hour"
      ]
    },
    "policyDeadlineType": {
      "type": "object",
      "description": "Cancellation deadline, absolute or relative.",
      "properties": {
        "absoluteDeadline": {
          "description": "Defines the absolute deadline. Either this or the offset attributes may be used.",
          "type": "string",
          "format": "date-time"
        },
        "offsetFromArrival": {
          "description": "The number of days before arrival that allows cancellation without penalties.",
          "type": "integer"
        },
        "offsetDropTime": {
          "description": "Time on offset day the cancellation penalties applies.",
          "type": "string",
          "format": "date-time"
        },
        "offsetFromBookingDate": {
          "description": "The number of days after booking deposit must be paid.",
          "type": "integer"
        }
      }
    },
    "resRevenueBalanceType": {
      "type": "object",
      "description": "Revenue and Balance Amount summary for the reservation.",
      "properties": {
        "totalFixedCharge": {
          "description": "Total Fixed Charges on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalPayment": {
          "description": "Total payment received for the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "roomRevenue": {
          "description": "Room Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "foodAndBevRevenue": {
          "description": "Food and Beverage Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "otherRevenue": {
          "description": "Other Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "nonRevenue": {
          "description": "Total Non Revenue posted on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalRevenue": {
          "description": "Total Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Balance amount on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "resPeriodicFolioType": {
      "type": "object",
      "description": "Information regarding periodic folios set on the reservation.",
      "properties": {
        "lastSettlementDate": {
          "description": "Latest date when a direct bill settlement was automatically done using the \"Direct Bill Batch Folios\" option.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastFolioDate": {
          "description": "Latest date when a folio was printed using the \"Periodic Batch Folios\" option",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "frequency": {
          "description": "Frequency in number of days when folios should be printed for this reservation.",
          "type": "integer"
        }
      }
    },
    "resCompAccountingType": {
      "type": "object",
      "description": "Information regarding comp accounting on the reservation.",
      "properties": {
        "compType": {
          "description": "Code used to identify the casino comp type and ranking of a guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "authorizer": {
          "description": "ID of the employee who will act as the host for this guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "compPostings": {
          "description": "Indicates if the Comp Billing/posting Exist",
          "type": "string",
          "minLength": 0,
          "maxLength": 5
        }
      }
    },
    "billingPrivilegesType": {
      "type": "object",
      "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
      "properties": {
        "postingRestriction": {
          "description": "Flag used by interface program during check in.",
          "type": "boolean"
        },
        "preStayCharging": {
          "description": "Indicates if the reservation has charging privileges before arrival.",
          "type": "boolean"
        },
        "postStayCharging": {
          "description": "Indicates if the reservation has charging privileges after checkout.",
          "type": "boolean"
        },
        "folioCloseDate": {
          "description": "Date when folio was closed. This works with PostStayCharging flag.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "scheduledCheckout": {
          "description": "Indicates if the guest is scheduled for automatic check out.",
          "type": "boolean"
        },
        "scheduledCheckoutTime": {
          "description": "Time of automatic check out if guest is schedule for automatic check out.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "directBillAuthorized": {
          "description": "If Direct bill is authorized this will hold User ID who authorized it.",
          "type": "boolean"
        },
        "videoCheckout": {
          "description": "Indicates if the guest can do video checkout",
          "type": "boolean"
        },
        "allowAutoCheckin": {
          "description": "Indicated if a new reservation should be created and automatically checked in whenever the room is checked out. Available for pseudo room types only.",
          "type": "boolean"
        },
        "autoSettlement": {
          "description": "Indicates if the is a candidate for auto folio settlement.",
          "type": "boolean"
        },
        "autoSettlementType": {
          "description": "The folio settlement type for auto folio settlement.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "autoSettlementFreq": {
          "description": "The interval of days between each auto folio settlement.",
          "type": "integer"
        },
        "creditLimitAutoPay": {
          "description": "Indicates if the reservation will be included in the Automatic Credit Limit Overages process and also be listed in the Credit Limit Overages screen results.",
          "type": "boolean"
        }
      }
    },
    "reservationTaxTypeInfo": {
      "type": "object",
      "description": "Provides information about the Tax Type.",
      "properties": {
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Code of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "collectingAgentTax": {
          "description": "A boolean flag for Collecting Agent Tax",
          "type": "boolean"
        },
        "printAutoAdjust": {
          "description": "Print auto adjust information for this tax type on the tax exempt report.",
          "type": "boolean"
        },
        "reportExemptDays": {
          "description": "Number of days after which the guest will be tax exempt. Only used for tax exempt report.",
          "type": "integer"
        },
        "reportTaxPercentage": {
          "description": "Tax percentage. Only used for tax exempt report.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "minimumLengthOfStay": {
          "description": "Minimun Length of Stay.",
          "type": "integer"
        },
        "taxExemptNo": {
          "description": "Tax exempt number on the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "bedTaxReportingType": {
      "type": "object",
      "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
      "properties": {
        "taxRegistrationNo": {
          "description": "Tax Registration Number for Maldives Bed Tax Reporting.",
          "type": "number"
        },
        "visaNumber": {
          "description": "Visa number used for Maldives Bed Tax Reporting",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "visaIssueDate": {
          "description": "Visa Issue Date used for Maldives Bed Tax Reporting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaExpiryDate": {
          "description": "Visa Expiration Date used for Maldives Bed Tax Reporting",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "taxableDays": {
          "description": "Number of days for which the Maldives tax is applicable.",
          "type": "integer"
        }
      }
    },
    "folioTextsType": {
      "type": "array",
      "description": "This stores the description for the type of tax calculation especially with tax exemption, etc.",
      "maxItems": 2,
      "items": {
        "type": "object",
        "properties": {
          "text": {
            "description": "Additional text field to display on the folio.",
            "type": "string",
            "minLength": 0,
            "maxLength": 50
          },
          "row": {
            "description": "Row number of the additional text.",
            "type": "integer"
          }
        }
      }
    },
    "resPreConfiguredRoutingInstrType": {
      "type": "object",
      "description": "Instruction to attach Pre-Configured Routing Instructions to a Reservation.",
      "properties": {
        "authorizerInfo": {
          "description": "The authorizer information for Promotion Code with attached Complimentary Routing",
          "$ref": "#/definitions/authorizerInfoType"
        },
        "ratePlanCode": {
          "description": "Rate Code with attached Routing Instruction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "profileType": {
          "description": "Profile Type with attached Routing Instruction.",
          "$ref": "#/definitions/resProfileTypeType"
        },
        "promotionCode": {
          "description": "Promotion Code with attached Complimentary Routing.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "authorizerInfoType": {
      "type": "object",
      "description": "Authorizer Information",
      "properties": {
        "authorizerId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "authorizerUserName": {
          "description": "Application user name of the authorizer",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "authorizerName": {
          "description": "Full name of the authorizer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "authorizerRateCode": {
          "description": "Rate code of the authorizer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "inheritAuthorizerRateCode": {
          "description": "Indicates whether user has the choice to have reservation inherit rate code from the authorizer.",
          "type": "boolean"
        }
      }
    },
    "resCashieringType": {
      "type": "object",
      "description": "Cashiering Information for the reservation.",
      "properties": {
        "revenuesAndBalances": {
          "description": "Revenues and Balances Amount summary for the reservation.",
          "$ref": "#/definitions/resRevenueBalanceType"
        },
        "billingPrivileges": {
          "description": "Billing privileges set on the reservation.",
          "$ref": "#/definitions/billingPrivilegesType"
        },
        "taxType": {
          "description": "This stores the code for the type of tax calculation especially with tax exemption, etc.",
          "$ref": "#/definitions/reservationTaxTypeInfo"
        },
        "bedTaxReporting": {
          "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
          "$ref": "#/definitions/bedTaxReportingType"
        },
        "folioTexts": {
          "description": "Additional text fields to display on the folio.",
          "$ref": "#/definitions/folioTextsType"
        },
        "periodicFolio": {
          "description": "Information regarding periodic folios set on the reservation.",
          "$ref": "#/definitions/resPeriodicFolioType"
        },
        "compAccounting": {
          "description": "Information regarding comp accounting on the reservation.",
          "$ref": "#/definitions/resCompAccountingType"
        },
        "reservationPreConfiguredRoutingInstruction": {
          "description": "Information regarding the selected preconfigured routing instruction on the reservation.",
          "$ref": "#/definitions/resPreConfiguredRoutingInstrType"
        },
        "financiallyResponsible": {
          "description": "The guest from whom payment has to be recovered (direct guest).",
          "type": "boolean"
        },
        "proratedBilling": {
          "description": "In case of Appartment style billing indicates whether a prorated amount should be used for an Apartment Style Billing rate.",
          "type": "boolean"
        },
        "lastRoomAndTaxPostedDate": {
          "description": "Date of the last Room And Tax posting. Used primarily to know the date in case of Advance Billing.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reverseCheckInAllowed": {
          "description": "This attribute is to verify if reverse check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "reverseAdvanceCheckInAllowed": {
          "description": "This attribute is to verify if reverse advance check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "transactionsPosted": {
          "description": "Specifies whether reservation has a financial transaction associated with it.",
          "type": "boolean"
        }
      }
    },
    "housekeepingRoomStatusType": {
      "type": "string",
      "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
      "enum": [
        "Clean",
        "Dirty",
        "Pickup",
        "Inspected",
        "OutOfOrder",
        "OutOfService"
      ]
    },
    "resHousekeepingType": {
      "type": "object",
      "description": "Holds housekeeping turndown service information for the room.",
      "properties": {
        "instructions": {
          "description": "Turndown instructions for the room.",
          "type": "string"
        },
        "facilityTaskInfo": {
          "description": "The facility task applicable for the current day. This will be information only and not used for any updates.",
          "$ref": "#/definitions/facilityTaskType"
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "turndownRequested": {
          "description": "Indicates whether guest wants turndown facility or not.",
          "type": "boolean"
        },
        "serviceTime": {
          "description": "This is the Turndown room service time.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expectedServiceTime": {
          "description": "Expected Start Time for housekeeping task(s).",
          "type": "string"
        },
        "roomStatus": {
          "description": "Current room status. Current room status is populated only if room is assigned to the reservation and reservation is due in or in house.",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        }
      }
    },
    "facilityTaskType": {
      "type": "object",
      "description": "Information regarding facility task on a reservation.",
      "properties": {
        "task": {
          "description": "The Task Code.",
          "$ref": "#/definitions/housekeepingTaskCodeType"
        },
        "supplies": {
          "description": "Supplies associated with the task.",
          "$ref": "#/definitions/facilityCodesType"
        },
        "date": {
          "description": "The Date on which the task is applicable.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "facilityCodesType": {
      "type": "array",
      "description": "List of the facility codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/facilityCodeType"
      }
    },
    "facilityCodeType": {
      "type": "object",
      "description": "Facility Housekeeping Code, its description and quantity.",
      "properties": {
        "description": {
          "description": "Facility Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "quantity": {
          "description": "Signifies the quantity.",
          "type": "integer"
        },
        "code": {
          "description": "Facility code value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "housekeepingTaskCodeType": {
      "type": "object",
      "description": "Information related to a Task Code. Task Codes are used to generate task sheets in Rooms Management.",
      "properties": {
        "description": {
          "description": "Description of the Task Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "instructions": {
          "description": "Instructions for this Task Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "facilityDepartureTask": {
          "description": "Indicates if this task code is the default departure task for Facility Tasks. This requires",
          "type": "boolean"
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Property where this task code is configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "The Code for the task.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sequence": {
          "description": "Ordering sequence for display.",
          "type": "integer"
        }
      }
    },
    "reservationAllowedActionsType": {
      "type": "array",
      "description": "Allowed action.",
      "maxItems": 11,
      "items": {
        "$ref": "#/definitions/reservationAllowedActionType"
      }
    },
    "reservationAllowedActionType": {
      "type": "string",
      "description": "Flag indicating whether the Enrollment is in progress or not for the Profile associated with this Reservation.",
      "enum": [
        "Cancel",
        "Move",
        "PreCharge",
        "PostCharge",
        "FacilitySchedule",
        "Upsell",
        "PreCheckIn",
        "PostToNoShowCancel",
        "NoShow",
        "NameChange",
        "Discount",
        "EnrollToPrimaryMembership",
        "EnrollInProgress"
      ]
    },
    "cateringResInfoType": {
      "type": "object",
      "description": "Information regarding catering event and catering revenue type associated to the reservation.",
      "properties": {
        "eventId": {
          "description": "Unique ID on a catering event associated to the reservation.",
          "$ref": "#/definitions/eventId"
        },
        "revenueType": {
          "description": "Catering revenue type associated to the reservation.",
          "type": "string"
        }
      }
    },
    "eventId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "indicatorsType": {
      "type": "array",
      "description": "Collection of lamp indicators.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/indicatorType"
      }
    },
    "indicatorType": {
      "type": "object",
      "description": "Lamp indicator Type.",
      "properties": {
        "indicatorName": {
          "description": "Name of the indicator.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "count": {
          "description": "Indicates number of occurrences of the indicator.",
          "type": "integer"
        }
      }
    },
    "waitlistResType": {
      "type": "object",
      "description": "Information regarding why reservation is being /has been waitlisted.",
      "properties": {
        "reasonDescription": {
          "description": "Waitlist Reason Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "priorityDescription": {
          "description": "Waitlist priority Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "description": {
          "description": "Description why the reservation is being /has been waitlisted.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "reasonCode": {
          "description": "Waitlist Reason Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "priorityCode": {
          "description": "Waitlist Priority Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "telephone": {
          "description": "Guest telephone number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "reservationPaymentMethods": {
      "description": "A collection of Payment Method objects.",
      "$ref": "#/definitions/reservationPaymentMethodsType"
    },
    "routingInstructions": {
      "description": "Set of Routing Instructions.",
      "$ref": "#/definitions/routingInfoListType"
    },
    "reservationPolicies": {
      "description": "A collection of Cancellation Penalties objects.",
      "$ref": "#/definitions/reservationPoliciesType"
    },
    "cashiering": {
      "description": "Holds cashiering related information for the reservation.",
      "$ref": "#/definitions/resCashieringType"
    },
    "housekeeping": {
      "description": "Holds rooms housekeeping information.",
      "$ref": "#/definitions/resHousekeepingType"
    },
    "extSystemSync": {
      "type": "boolean"
    },
    "userDefinedFields": {
      "description": "Collections of user defined fields.",
      "$ref": "#/definitions/userDefinedFieldsType"
    },
    "reservationIndicators": {
      "description": "Indicators of additional information attached to the reservation",
      "$ref": "#/definitions/indicatorsType"
    },
    "waitlist": {
      "description": "Information regarding why reservation has been/was waitlisted. This could hold information as history even if reservation is no more in Waitlist status.",
      "$ref": "#/definitions/waitlistResType"
    },
    "cancellation": {
      "description": "Information regarding why reservation has been/was cancelled. This could hold information as history even if reservation is no more in in Cancelled status.",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "code": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cancellationNo": {
          "description": "Cancellation Number given when reservation was last cancelled.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "date": {
          "description": "Date when reservation was last cancelled.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "catering": {
      "description": "Catering event information if reservation is associated with the catering event.",
      "$ref": "#/definitions/cateringResInfoType"
    },
    "vIPStatusType": {
      "type": "object",
      "description": "VIP status of the customer.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Used for Character Strings, length 0 to 2000.",
          "minLength": 0,
          "maxLength": 2000
        },
        "code": {
          "description": "VIP status of the customer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "profileTypeType": {
      "type": "string",
      "description": "The types of Profile handled by the web service.",
      "enum": [
        "Guest",
        "Agent",
        "Company",
        "Group",
        "Source",
        "Employee",
        "Hotel",
        "Vendor",
        "Contact",
        "Purge",
        "BusinessHeader",
        "BillingAccount",
        "Activity",
        "Potential",
        "Account"
      ]
    },
    "profileNameType": {
      "type": "object",
      "description": "This provides name information for a person.",
      "properties": {
        "name": {
          "description": "Family name, last name or Company Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "fullName": {
          "description": "Full display Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "namePrefix": {
          "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "givenName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "middleName": {
          "description": "The middle name of the person name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "nameType": {
          "description": "Type of name of the individual, such as former, nickname, alternate or alias name.",
          "$ref": "#/definitions/personNameTypeType"
        }
      }
    },
    "fixedChargesType": {
      "type": "array",
      "description": "Holds fixed charge detail.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fixedChargeType"
      }
    },
    "fixedChargeType": {
      "type": "object",
      "description": "Holds fixed charge information.",
      "properties": {
        "schedule": {
          "description": "Holds schedule of fixed charge.",
          "$ref": "#/definitions/fixedChargeScheduleType"
        },
        "charge": {
          "description": "Holds specific details of fixed charge.",
          "$ref": "#/definitions/fixedChargeDetailType"
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "fixedChargeScheduleType": {
      "type": "object",
      "description": "Holds schedule of fixed charge.",
      "properties": {
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "frequency": {
          "description": "Frequency of a fixed charge.",
          "$ref": "#/definitions/fixedChargeFrequencyType"
        },
        "dayToExecute": {
          "description": "Day of when to execute fixed charge. Applicable when frequency is Daily or Weekly.",
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "dateToExecute": {
          "description": "Date of when to execute yearly fixed charge. Applicable when frequency is Yearly.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "fixedChargeFrequencyType": {
      "type": "string",
      "description": "Yearly.",
      "enum": [
        "O",
        "D",
        "W",
        "M",
        "Q",
        "Y"
      ]
    },
    "fixedChargeDetailType": {
      "type": "object",
      "description": "Fixed charge amount could be specified by flat fee or be a percentage of the rate amount.",
      "properties": {
        "transaction": {
          "description": "Transaction code and description of a fixed charge.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "quantity": {
          "description": "Quantity of the product.",
          "type": "integer"
        },
        "chargeAmount": {
          "description": "Price of the product.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "percent": {
          "description": "Percentage of the rate amount.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "supplement": {
          "description": "Additional information regarding the fixed charge.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "article": {
          "description": "Holds related article code and description.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "roomNights": {
          "description": "Holds number of comp or cash room night to allocate.",
          "type": "integer"
        }
      }
    },
    "hotelReservationType": {
      "type": "object",
      "description": "The Reservation class contains the current reservation being validated.",
      "properties": {
        "reservationIdList": {
          "description": "Used to provide PMS and/or CRS identifiers.",
          "$ref": "#/definitions/reservationIdList"
        },
        "externalReferences": {
          "description": "External Reference information for Reservation.",
          "$ref": "#/definitions/externalReferencesType"
        },
        "shares": {
          "description": "Collection of share reservation available for that reservation",
          "$ref": "#/definitions/hotelReservationsType"
        },
        "comments": {
          "description": "List of Notes for the Guest related to the reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/commentInfoType"
          }
        },
        "guestComments": {
          "description": "List of Notes for the Guest related to the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/commentInfoType"
          }
        },
        "sharedGuests": {
          "description": "Collection of guests who share this reservation.",
          "$ref": "#/definitions/resSharedGuestListType"
        },
        "roomStay": {
          "description": "Room stays information.",
          "$ref": "#/definitions/roomStayType"
        },
        "reservationGuests": {
          "description": "Collection of guests associated with the reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/resGuestType"
          }
        },
        "reservationPackages": {
          "description": "A Service object represents a non-room product provided to guests. Service products may have associated inventory and charges.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationPackageType"
          }
        },
        "preferenceCollection": {
          "description": "Collection of reservation preferences.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/preferenceTypeType"
          }
        },
        "reservationProfiles": {
          "description": "Collection of guests associated with the reservation.",
          "type": "object",
          "properties": {
            "reservationProfile": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/reservationProfileType"
              }
            },
            "commissionPayoutTo": {
              "description": "If not null, reservation is considered to pay out commission to either Travel Agent, Source or both.",
              "$ref": "#/definitions/commissionPayoutToType"
            }
          }
        },
        "reservationPaymentMethods": {
          "description": "A collection of Payment Method objects.",
          "$ref": "#/definitions/reservationPaymentMethodsType"
        },
        "cashiering": {
          "description": "Holds cashiering related information for the reservation.",
          "$ref": "#/definitions/resCashieringType"
        },
        "extSystemSync": {
          "type": "boolean"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationStatus": {
          "description": "Indicates the Actual status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "overrideBlockRestriction": {
          "type": "boolean"
        },
        "additionalGuestInfo": {
          "description": "Entry Date into the country. (Croatian Requirements).",
          "$ref": "#/definitions/resGuestAdditionalInfoType"
        },
        "overrideExternalChecks": {
          "description": "Forcefully override the create/update action on the Reservation. For real-time CRS interfaces, this element is used as force selling indicator in case of Create or Update Reservation",
          "type": "boolean"
        },
        "userDefinedFields": {
          "description": "Collections of user defined fields.",
          "$ref": "#/definitions/userDefinedFieldsType"
        },
        "fixedCharges": {
          "description": "List of reservation fixed charges.",
          "$ref": "#/definitions/fixedChargesType"
        }
      }
    },
    "resAccessRestrictionType": {
      "type": "string",
      "description": "Indicates any Updates/Changes on the reservation as well as Reservation Cancellation are not allowed.",
      "enum": [
        "Change",
        "Cancel",
        "ChangeOrCancel"
      ]
    },
    "roomingListReservationType": {
      "type": "object",
      "description": "Reservation details for a block reservation.",
      "properties": {
        "hotelReservation": {
          "description": "Contains detailed information about the snapshot reservation",
          "$ref": "#/definitions/hotelReservationType"
        },
        "routingInstructions": {
          "description": "Contains the routing instructions of the reservation.",
          "$ref": "#/definitions/routingInfoListType"
        },
        "roomingListSequence": {
          "description": "Unique identifier that identifies the sequence of an individual rooming list reservation. The sequence will be maintained across every request and response.",
          "type": "integer"
        }
      }
    },
    "errorsType": {
      "type": "array",
      "description": "An error that occurred during the processing of a message.",
      "maxItems": 99,
      "items": {
        "$ref": "#/definitions/errorType"
      }
    },
    "errorType": {
      "type": "object",
      "description": "Standard way to indicate that an error occurred during the processing of an message. If the message successfully processes, but there are business errors, those errors should be passed in the warning element.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string"
        },
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string"
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string"
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string"
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string"
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nodeList": {
          "description": "An XPath expression that selects all the nodes whose data caused this error. Further, this expression should have an additional contraint which contains the data of the node. This will provide the offending data back to systems that cannot maintain the original message.",
          "type": "string"
        }
      }
    },
    "roomingListReservationsType": {
      "type": "object",
      "description": "A collection of Block Rooming List Reservations.",
      "properties": {
        "reservation": {
          "description": "A collection of Block Rooming List Reservations.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomingListReservationType"
          }
        }
      }
    },
    "roomingList": {
      "type": "object",
      "description": "Request object for creating rooming list reservations. The standard optional Opera Context element is also included.",
      "properties": {
        "blockInfo": {
          "description": "Information of the block for which rooming list reservations are being created.",
          "$ref": "#/definitions/roomingListBlockInfoType"
        },
        "reservations": {
          "description": "The collection of one or more block reservations to be created.",
          "$ref": "#/definitions/roomingListReservationsType"
        },
        "shares": {
          "description": "Contains a collection of groups of a reservations that are shared with each other. This contains the list of reservations that are to be created as part of this request.",
          "$ref": "#/definitions/roomingListSharesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "validateRoomingListType": {
      "type": "object",
      "description": "Response object to validate block rooming list. This object contains the datils of validated rooming list records.",
      "properties": {
        "reservations": {
          "description": "Collection of block reservations that were validate successfully with unique identifiers.",
          "$ref": "#/definitions/validateRoomingListOutcomesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "validateRoomingListOutcomesType": {
      "type": "array",
      "description": "Collection of outcome of validations of rooming list.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/validateRoomingListOutcomeType"
      }
    },
    "validateRoomingListOutcomeType": {
      "type": "object",
      "description": "Response object for outcome of validate rooming list reservations with Success or Fail status and Errors related to this operation.",
      "properties": {
        "reservationId": {
          "description": "Unique Reservation Id",
          "type": "number",
          "minLength": 0,
          "maxLength": 40
        },
        "reservationSeqNo": {
          "description": "Sequencial number of an individual reservation in rooming list.",
          "type": "integer"
        },
        "guestFullName": {
          "description": "Guest's Full display name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "roomType": {
          "description": "",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "arrivalDate": {
          "description": "Display the arrival date of the guest.",
          "type": "string",
          "format": "date"
        },
        "departureDate": {
          "description": "Display the departure date of the guest.",
          "type": "string",
          "format": "date"
        },
        "validateStatus": {
          "type": "string",
          "description": "Validate Status.",
          "enum": [
            "Success",
            "Fail"
          ]
        },
        "outcomeMessages": {
          "description": "Status messages of validate rooming list",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/outcomeMessageType"
          }
        }
      }
    },
    "roomingListSharesType": {
      "type": "array",
      "description": "Contains a set of rooming list reservations that need to be shared.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomingListShareType"
      }
    },
    "roomingListShareType": {
      "type": "object",
      "description": "Specifies a group of two or more rooming list reservations that need to be created as shared reservations.",
      "properties": {
        "reservation": {
          "description": "Contains information about the rooming list reservation that is to be shared and specifies the type of share that is to be created.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomingListShareReservationType"
          }
        },
        "effectiveRates": {
          "description": "Instruction to apply new effective rates to the reservations.",
          "$ref": "#/definitions/effectiveRatesType"
        },
        "timeSpan": {
          "description": "The Time Span(Arrival, Departure) for the reservation share set.",
          "$ref": "#/definitions/timeSpanType"
        }
      }
    },
    "roomingListShareReservationType": {
      "type": "object",
      "description": "Contains the rooming list reservation that is to be shared and the information about the share type of this reservation.",
      "properties": {
        "reservationId": {
          "description": "Indicates the unique Reservation Id.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "typeOfRateAmount": {
          "description": "Type of rate division for the sharer reservation. Valid types are Full, Entire and Split.",
          "$ref": "#/definitions/shareDistributionInstructionType"
        },
        "primaryShare": {
          "description": "Indicates if this reservation is a primary sharer.",
          "type": "boolean"
        },
        "timeSpan": {
          "description": "The Time Span(Arrival, Departure) for the reservation",
          "$ref": "#/definitions/timeSpanType"
        }
      }
    },
    "effectiveRatesType": {
      "type": "array",
      "description": "Collection of effective rate amount per guest on specific dates.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/effectiveRateType"
      }
    },
    "effectiveRateType": {
      "type": "object",
      "description": "Effective rate amount per guest on specific dates.",
      "properties": {
        "onePersonRate": {
          "description": "Rate amount for one person.",
          "type": "number"
        },
        "twoPersonRate": {
          "description": "Rate amount for two persons.",
          "type": "number"
        },
        "threePersonRate": {
          "description": "Rate amount for three persons.",
          "type": "number"
        },
        "fourPersonRate": {
          "description": "Rate amount for four persons.",
          "type": "number"
        },
        "fivePersonRate": {
          "description": "Rate amount for five persons.",
          "type": "number"
        },
        "extraPersonRate": {
          "description": "Rate amount for each extra person.",
          "type": "number"
        },
        "extraChildRate": {
          "description": "Rate amount for each extra Child.",
          "type": "number"
        },
        "oneChildRate": {
          "description": "Rate amount for one Child.",
          "type": "number"
        },
        "twoChildrenRate": {
          "description": "Rate amount for two Children.",
          "type": "number"
        },
        "threeChildrenRate": {
          "description": "Rate amount for three Children.",
          "type": "number"
        },
        "fourChildrenRate": {
          "description": "Rate amount for four Children.",
          "type": "number"
        },
        "rateByAgeBuckets": {
          "description": "Collection of rate amount by age bracket.",
          "$ref": "#/definitions/rateByAgeBucketsType"
        },
        "minimumChildrenForFreeStay": {
          "description": "Minimum number of children needed to get free stay.",
          "type": "integer"
        },
        "pointsRequired": {
          "description": "The number of award points required for applying this rate plan schedule.",
          "type": "number"
        },
        "overrideFloorAmount": {
          "description": "true if floor amount needs to be override",
          "type": "boolean"
        },
        "hotelId": {
          "description": "",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCode": {
          "description": "",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "description": "",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "numberOfRooms": {
          "description": "",
          "type": "integer"
        },
        "amountBeforeTax": {
          "description": "Rate amount Before Tax.",
          "type": "number"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "rateByAgeBucketsType": {
      "type": "array",
      "description": "Rate amount by age bucket.",
      "maxItems": 3,
      "items": {
        "$ref": "#/definitions/rateByAgeBucketType"
      }
    },
    "rateByAgeBucketType": {
      "type": "object",
      "description": "Rate amount by age bucket.",
      "properties": {
        "rateAmount": {
          "description": "Rate amount by age bucket.",
          "type": "number"
        },
        "minimumAge": {
          "description": "Minimum age for age bucket.",
          "type": "integer"
        },
        "maximumAge": {
          "description": "Maximum age for age bucket.",
          "type": "integer"
        }
      }
    },
    "paymentInstructionsMassUpdateCriteria": {
      "type": "object",
      "description": "Payment Instructions Mass Update criteria.",
      "properties": {
        "reservationIds": {
          "description": "Unique ID of reservations to be updated.",
          "type": "array",
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/uniqueID_Type"
          }
        },
        "massUpdateFolioWindowTypes": {
          "type": "array",
          "description": "Collection of reservation folio windows.",
          "maxItems": 8,
          "items": {
            "$ref": "#/definitions/massUpdateFolioWindowType"
          }
        },
        "updatePostingRestriction": {
          "description": "Flag to indicate if postingRestriction is to be updated.",
          "type": "boolean",
          "default": false
        },
        "postingRestriction": {
          "description": "Indicates if the reservation has posting restriction.",
          "type": "boolean",
          "default": false
        },
        "updatePreStayCharging": {
          "description": "Flag to indicate if preStayCharging is to be updated.",
          "type": "boolean",
          "default": false
        },
        "preStayCharging": {
          "description": "Indicates if the reservation has charging privileges before arrival.",
          "type": "boolean",
          "default": false
        },
        "updatePostStayCharging": {
          "description": "Flag to indicate if postStayCharging is to be updated.",
          "type": "boolean",
          "default": false
        },
        "postStayCharging": {
          "description": "Indicates if the reservation has charging privileges after checkout.",
          "type": "boolean",
          "default": false
        }
      }
    },
    "massUpdateFolioWindowType": {
      "type": "object",
      "description": "Folio window view which holds the set of folios for a reservation.",
      "properties": {
        "paymentMethod": {
          "description": "Payment Method Type",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioWindowNo": {
          "type": "integer"
        }
      }
    },
    "createRoomingListType": {
      "type": "object",
      "description": "Response object to create block rooming list. This object contains the details of created rooming list records.",
      "properties": {
        "reservations": {
          "description": "Collection of block reservations that were create successfully with unique identifiers.",
          "$ref": "#/definitions/createRoomingListOutcomesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "createRoomingListOutcomesType": {
      "type": "array",
      "description": "Collection of outcome of creation of rooming list reservations.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/createRoomingListOutcomeType"
      }
    },
    "createRoomingListOutcomeType": {
      "type": "object",
      "description": "Response object for outcome of create rooming list reservations with Success or Fail status and Errors related to this operation.",
      "properties": {
        "reservationId": {
          "description": "Unique Reservation Id",
          "type": "number",
          "minLength": 0,
          "maxLength": 40
        },
        "reservationSeqNo": {
          "description": "Sequential number of an individual reservation in rooming list.",
          "type": "integer"
        },
        "guestFullName": {
          "description": "Guest's Full display name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "roomType": {
          "description": "",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "arrivalDate": {
          "description": "Display the Arrival date of the guest.",
          "type": "string",
          "format": "date"
        },
        "departureDate": {
          "description": "Display the Departure date of the guest.",
          "type": "string",
          "format": "date"
        },
        "createStatus": {
          "type": "string",
          "description": "Create Status.",
          "enum": [
            "Success",
            "Fail"
          ]
        },
        "confirmationNo": {
          "description": "Unique Confirmation number",
          "type": "number",
          "minLength": 0,
          "maxLength": 40
        },
        "profileNameId": {
          "description": "Unique profile Id",
          "type": "number",
          "minLength": 0,
          "maxLength": 40
        },
        "outcomeMessages": {
          "description": "Status messages of create rooming list",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/outcomeMessageType"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "ReservationAsync",
      "description": "The Reservation Asynchronous module provides capability for an external system to retrieve reservation related data using an asynchronous approach."
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}
{
  "swagger": "2.0",
  "info": {
    "title": "OPERA Cloud Front Desk Operations Service",
    "description": "APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>",
    "version": "24.4",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality_apis_ww_grp@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "schemes": [
    "https"
  ],
  "basePath": "/fof/v1",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/hotels/{hotelId}/authorizationReservations": {
      "get": {
        "summary": "Get resrvation for batch CCAuth",
        "description": "This API is used to get reservations for batch CC Authorization. <p><strong>OperationId:</strong>getResvForBatchCCAuth</p>",
        "operationId": "getResvForBatchCCAuth",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "guestName",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Used for Character Strings, length 0 to 80."
          },
          {
            "name": "room",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          },
          {
            "name": "cardType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Ab",
                "Am",
                "Ax",
                "Cb",
                "Dc",
                "Ds",
                "Dt",
                "Ec",
                "Er",
                "Jc",
                "Jl",
                "Mc",
                "Nb",
                "So",
                "St",
                "Sw",
                "Va",
                "Xy",
                "Zz",
                "Cp",
                "Cu"
              ]
            },
            "required": false
          },
          {
            "name": "userDefinedCardType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Listing of user defined credit card types.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response which contains a listing of reservations, and associated payment methods, that require credit card authorization.",
            "schema": {
              "$ref": "#/definitions/resvForBatchCCAut"
            }
          },
          "204": {
            "description": "ResvForBatchCCAuth not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/bankAccounts": {
      "get": {
        "summary": "Operation to fetch bank accounts.",
        "description": " <p><strong>OperationId:</strong>getBankAccounts</p>",
        "operationId": "getBankAccounts",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Property of the bank accounts."
          },
          {
            "name": "bankName",
            "in": "query",
            "required": false,
            "description": "Either full or first part of the bank name.",
            "type": "string"
          },
          {
            "name": "bankAccountNo",
            "in": "query",
            "required": false,
            "description": "Either full or first part of the bank account number.",
            "type": "string"
          },
          {
            "name": "currency",
            "in": "query",
            "required": false,
            "description": "Currency used by the bank account.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Returns bank accounts that match the request criteria.",
            "schema": {
              "$ref": "#/definitions/bankAccountsDetails"
            }
          },
          "204": {
            "description": "BankAccounts not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ]
      }
    },
    "/hotels/{hotelId}/bankAccounts/{bankAccountId}/agents/{agentId}/reservationsForCommissions": {
      "get": {
        "summary": "Operation to fetch Reservations for Commissions associated to a Travel Agent",
        "description": " <p><strong>OperationId:</strong>getReservationsForCommissions</p> <p>The maximum allowable limit for this API is <strong>50</strong>.</p>",
        "operationId": "getReservationsForCommissions",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Reservations for commissions."
          },
          {
            "name": "bankAccountId",
            "in": "path",
            "required": true,
            "description": "A unique identifying value(ID) to represent the Bank.",
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          {
            "name": "agentId",
            "in": "path",
            "required": true,
            "description": "A unique identifying value(ID) to represent the Travel Agent associated with the commission.",
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "guestName",
            "in": "query",
            "required": false,
            "description": "Indicates the guest name of the reservation that is to be returned ",
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          {
            "name": "confirmationNo",
            "in": "query",
            "required": false,
            "description": "Indicates the confirmation number of the reservation that is to be returned ",
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          {
            "name": "reservationStatus",
            "in": "query",
            "required": false,
            "description": "Indicates the status of the reservations that is to be returned ",
            "type": "array",
            "collectionFormat": "multi",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Cancelled",
                "CheckedOut",
                "NoShow"
              ]
            }
          },
          {
            "name": "accountReceivableOffset",
            "in": "query",
            "required": false,
            "description": "When set to true only reservations flagged for account receivables are returned",
            "type": "boolean",
            "default": false
          },
          {
            "name": "onHold",
            "in": "query",
            "required": false,
            "description": "When set to true only reservations having a commission hold code are returned",
            "type": "boolean",
            "default": false
          },
          {
            "name": "commissionPaid",
            "in": "query",
            "required": false,
            "description": "When set to true only reservations having paid the commissions are returned",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Commissions for the requested account or agent id.",
            "schema": {
              "$ref": "#/definitions/commissionsDetails"
            }
          },
          "204": {
            "description": "Commissions not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ]
      }
    },
    "/hotels/{hotelId}/bankAccounts/{bankAccountId}/commissionChecks": {
      "put": {
        "summary": "Operation to change commission check.",
        "description": " <p><strong>OperationId:</strong>changeCommissionCheck</p>",
        "operationId": "changeCommissionCheck",
        "parameters": [
          {
            "name": "bankAccountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique id of bank account."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Property of the commission record."
          },
          {
            "name": "commissionCheckToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request type for updating commission check.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/commissionCheckToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/commissionCheckStatus"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ]
      }
    },
    "/hotels/{hotelId}/bankAccounts/{bankAccountId}/commissionPayments": {
      "get": {
        "summary": "Operation to fetch commission payments activity.",
        "description": " <p><strong>OperationId:</strong>getCommissionPaymentsActivity</p>",
        "operationId": "getCommissionPaymentsActivity",
        "parameters": [
          {
            "name": "bankAccountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique id of bank account."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Property of the commission record."
          },
          {
            "name": "idExtension",
            "in": "query",
            "required": false,
            "description": "Additional identifying value assigned by the creating system.",
            "type": "integer"
          },
          {
            "name": "idContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "batchId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "batchIdIdExtension",
            "in": "query",
            "required": false,
            "description": "Additional identifying value assigned by the creating system.",
            "type": "integer"
          },
          {
            "name": "batchIdIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "batchIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "fileName",
            "in": "query",
            "required": false,
            "description": "File name if payment method is EFT.",
            "type": "string"
          },
          {
            "name": "payee",
            "in": "query",
            "required": false,
            "description": "File name if payment method is EFT.",
            "type": "string"
          },
          {
            "name": "checkNo",
            "in": "query",
            "required": false,
            "description": "Check no of payment.",
            "type": "number"
          },
          {
            "name": "status",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple type for payment activity status type. Valid values are Outstanding, Reconciled, Unpresented and Void.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Outstanding",
                "Reconciled",
                "Unpresented",
                "Void",
                "Failed"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response type for commission payments activity.",
            "schema": {
              "$ref": "#/definitions/commissionPaymentsActivityDetails"
            }
          },
          "204": {
            "description": "CommissionPaymentsActivity not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ]
      },
      "put": {
        "summary": "Operation to change commission payment activity by range.",
        "description": " <p><strong>OperationId:</strong>changeCommissionPaymentActivityByRange</p>",
        "operationId": "changeCommissionPaymentActivityByRange",
        "parameters": [
          {
            "name": "bankAccountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique id of bank account."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Property of the commission record."
          },
          {
            "name": "commissionPaymentActivityByRangeToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request type for updating a range of payments activity.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/commissionPaymentActivityByRangeToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/commissionPaymentActivityByRangeStatus"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ]
      }
    },
    "/hotels/{hotelId}/bankAccounts/{bankAccountId}/reprintCommission": {
      "put": {
        "summary": "Operation to reprint commission check by range.",
        "description": " <p><strong>OperationId:</strong>reprintCommissionCheckByRange</p>",
        "operationId": "reprintCommissionCheckByRange",
        "parameters": [
          {
            "name": "bankAccountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique id of bank account"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Property of the commission record."
          },
          {
            "name": "reprintCommissionCheckByRange",
            "in": "body",
            "required": true,
            "description": "Request type for reprinting a range of check payments.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reprintCommissionCheckByRange"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response type for reprinting a range of check payments.",
            "schema": {
              "$ref": "#/definitions/reprintCommissionCheckByRangeStatus"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ]
      }
    },
    "/hotels/{hotelId}/bankAccounts/{bankAccountId}/travelAgentsForCommissions": {
      "get": {
        "summary": "Operation to fetch Travel Agents associated with commissions for the given bank Account.",
        "description": " <p><strong>OperationId:</strong>getTravelAgentsForCommissions</p>",
        "operationId": "getTravelAgentsForCommissions",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Property of the Travel Agent records."
          },
          {
            "name": "bankAccountId",
            "in": "path",
            "required": true,
            "description": "A unique identifying value(ID) to represent the Bank",
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Travel Agents for the requested Bank ID.",
            "schema": {
              "$ref": "#/definitions/commissionsDetails"
            }
          },
          "204": {
            "description": "Travel Agents not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ]
      }
    },
    "/hotels/{hotelId}/batchReservationAuthorizations": {
      "put": {
        "summary": "Process batch CC Auth",
        "description": "This API is used to process batch CC Authorization. <p><strong>OperationId:</strong>processBatchCCAuth</p>",
        "operationId": "processBatchCCAuth",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "batchCCAuth",
            "in": "body",
            "required": true,
            "description": "Request to start a batch job that will process a list of reservation, and their associated payment methods, that require credit card authorizations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/batchCCAuth"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response for starting a credit card authorization batch job, which contains the batch ID upon success.",
            "schema": {
              "$ref": "#/definitions/batchCCAuthToProcess"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/billingReservations": {
      "get": {
        "summary": "Get Reservations for billing",
        "description": "You can use this API to fetch the reservations for billing. <p><strong>OperationId:</strong>getReservationsForBilling</p> <p>This API allows a time span of <strong>50</strong> days.</p>",
        "operationId": "getReservationsForBilling",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "searchType",
            "in": "query",
            "required": false,
            "type": "string",
            "uniqueItems": true,
            "enum": [
              "Any",
              "DayUse",
              "Arrival",
              "Arrived",
              "Departure",
              "WaitList",
              "Cancellation",
              "CheckedOut",
              "NoShow",
              "Complimentary",
              "InHouse",
              "PostStayPendingBalance",
              "PreRegistered",
              "PostToRoom",
              "OpenFolio",
              "ScheduledCheckOut",
              "Queued",
              "MobileCheckout",
              "RegisteredAndInHouse",
              "ResvBlockTraces",
              "GuestMessages",
              "MassCancellation",
              "Operator",
              "Turndown",
              "WalkIn",
              "AdvanceCheckedIn",
              "OpenBalance",
              "AutoFolioSettlement",
              "Routing",
              "PlayerSnapshot"
            ],
            "description": "Represents Reservation search type Player Snapshot."
          },
          {
            "name": "multipleHotelsSearchList",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "superSearch",
            "in": "query",
            "required": false,
            "description": "Free form text field for searching all reservation fields",
            "type": "string"
          },
          {
            "name": "reservationId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "reservationIdContext",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "reservationIdType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "nights",
            "in": "query",
            "required": false,
            "description": "The number of nights on a reservation.",
            "type": "integer"
          },
          {
            "name": "arrivalEnd",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "arrivalStart",
            "in": "query",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "departureEnd",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "departureStart",
            "in": "query",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "reservationProfileType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Guest",
                "Company",
                "Group",
                "TravelAgent",
                "Source",
                "ReservationContact",
                "BillingContact",
                "Addressee"
              ]
            },
            "required": false
          },
          {
            "name": "attachedProfileName",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Attached profile name",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "attachedProfileId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "attachedProfileIdContext",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "attachedProfileIdType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "resGuestId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "resGuestIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "resGuestIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "membershipId",
            "in": "query",
            "required": false,
            "description": "Membership ID criteria.",
            "type": "string"
          },
          {
            "name": "membershipLevelCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "membershipTypeCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "surname",
            "in": "query",
            "required": false,
            "description": "Family name, last name.",
            "type": "string"
          },
          {
            "name": "givenName",
            "in": "query",
            "required": false,
            "description": "Given name, first name or names",
            "type": "string"
          },
          {
            "name": "cityName",
            "in": "query",
            "required": false,
            "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
            "type": "string"
          },
          {
            "name": "postalCode",
            "in": "query",
            "required": false,
            "description": "Post Office Code number.",
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "description": "State or Province name (e.g., Texas).",
            "type": "string"
          },
          {
            "name": "countryCode",
            "in": "query",
            "required": false,
            "description": "Code for a country or a nationality.",
            "type": "string"
          },
          {
            "name": "streetAddress",
            "in": "query",
            "required": false,
            "description": "First Line of Street Address. For profile search it matches the first Address line.",
            "type": "string"
          },
          {
            "name": "bookingChannelCode",
            "in": "query",
            "required": false,
            "description": "Booking Channel Code",
            "type": "string"
          },
          {
            "name": "blockHotelId",
            "in": "query",
            "required": false,
            "description": "The Hotel Code of the Block.",
            "type": "string"
          },
          {
            "name": "blockId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "blockIdContext",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "blockIdType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "recordLocator",
            "in": "query",
            "required": false,
            "description": "GDS Record Locator for reservation.",
            "type": "string"
          },
          {
            "name": "orderByAttributeName",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "orderType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Asc",
                "Desc"
              ]
            },
            "required": false
          },
          {
            "name": "roomId",
            "in": "query",
            "required": false,
            "description": "Room number of the reservation to search by.",
            "type": "string"
          },
          {
            "name": "roomType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Room Type.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Instruction to fetch whether the room was assigned/upgraded by AI. This will also include Reservation instruction.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Reservation",
                "ReservationID",
                "Indicators",
                "Deposits",
                "RevenuesAndBalances",
                "GuestServiceStatus",
                "MasterInfo",
                "CancellationInfo",
                "BlockReservations",
                "TaxType",
                "GuestDeviceNotification",
                "RoomAssignedByAI"
              ]
            },
            "required": false
          },
          {
            "name": "excludeNoPost",
            "in": "query",
            "required": false,
            "description": "Indicates that reservations with No Post flag should not be expected from the result.",
            "type": "boolean"
          },
          {
            "name": "excludePMRooms",
            "in": "query",
            "required": false,
            "description": "Indicates that reservations with PM room type should not be expected from the result.",
            "type": "boolean"
          },
          {
            "name": "hasOpenFolio",
            "in": "query",
            "required": false,
            "description": "Indicates that only reservations with open folio should be expected from the result.",
            "type": "boolean"
          },
          {
            "name": "excludedReservationIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "excludedReservationIdsContext",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "excludedReservationIdsType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "advanceCheckedIn",
            "in": "query",
            "required": false,
            "description": "Indicates to exclude Advance Checked In Reservations from search result.",
            "type": "boolean"
          },
          {
            "name": "searchTypesSearchType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "uniqueItems": true,
            "description": "Represents Reservation search type Player Snapshot.",
            "items": {
              "type": "string",
              "enum": [
                "Any",
                "DayUse",
                "Arrival",
                "Arrived",
                "Departure",
                "WaitList",
                "Cancellation",
                "CheckedOut",
                "NoShow",
                "Complimentary",
                "InHouse",
                "PostStayPendingBalance",
                "PreRegistered",
                "PostToRoom",
                "OpenFolio",
                "ScheduledCheckOut",
                "Queued",
                "MobileCheckout",
                "RegisteredAndInHouse",
                "ResvBlockTraces",
                "GuestMessages",
                "MassCancellation",
                "Operator",
                "Turndown",
                "WalkIn",
                "AdvanceCheckedIn",
                "OpenBalance",
                "AutoFolioSettlement",
                "Routing",
                "PlayerSnapshot"
              ]
            },
            "required": false
          },
          {
            "name": "reservationStatus",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Reservation status type for reservations search.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Cancelled",
                "CheckedOut",
                "CheckedIn",
                "DueIn",
                "DueOut",
                "InHouse",
                "NoShow",
                "WaitList"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object to the Fetch Reservation Request operation. Based on the criteria, reservation information is returned.",
            "schema": {
              "$ref": "#/definitions/reservationsInfo"
            },
            "examples": {
              "application/json": {
                "reservationInfoList": {
                  "reservationInfo": [
                    {
                      "reservationIdList": [
                        {
                          "id": "string",
                          "type": "string"
                        }
                      ],
                      "roomStay": {
                        "arrivalDate": "2020-07-14",
                        "departureDate": "2020-07-14",
                        "originalTimeSpan": {
                          "startDate": "2020-07-14",
                          "endDate": "2020-07-14",
                          "duration": "string"
                        },
                        "expectedTimes": {
                          "reservationExpectedArrivalTime": "2020-07-14T09:58:05.723Z",
                          "reservationExpectedDepartureTime": "2020-07-14T09:58:05.723Z"
                        },
                        "adultCount": 0,
                        "childCount": 0,
                        "roomClass": "string",
                        "roomType": "string",
                        "numberOfRooms": 0,
                        "roomNumber": "string",
                        "ratePlanCode": "string",
                        "rateAmount": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "points": {
                          "awardsType": "string",
                          "points": 0
                        },
                        "rateSuppressed": true,
                        "reservationBlock": {
                          "blockIdList": [
                            {
                              "id": "string",
                              "type": "string"
                            }
                          ],
                          "blockName": "string",
                          "hotelId": "string"
                        },
                        "bookingChannelCode": "string",
                        "partyCode": "string",
                        "fixedRate": true,
                        "totalAmount": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "guarantee": {
                          "guaranteeCode": "string",
                          "shortDescription": "string",
                          "onHold": true
                        },
                        "promotion": {
                          "promotionCode": "string",
                          "promotionName": "string",
                          "couponCode": "string"
                        },
                        "marketCode": "string",
                        "sourceOfBusiness": "string",
                        "sourceOfBusinessDescription": "string",
                        "balance": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "compBalance": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "roomTypeCharged": "string",
                        "depositPayments": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "guestServiceStatus": "DoNotDisturb",
                        "scheduledCheckoutTime": "2020-07-14",
                        "roomNumberLocked": true,
                        "pseudoRoom": true
                      },
                      "reservationGuest": {
                        "membership": {
                          "membershipId": 0,
                          "programCode": "string",
                          "bonusCode": "string",
                          "membershipTypeDesc": "string",
                          "membershipLevelDesc": "string",
                          "accountId": "string",
                          "membershipLevel": "string",
                          "playerRanking": 0
                        },
                        "namePrefix": "string",
                        "givenName": "string",
                        "alternateGivenName": "string",
                        "middleName": "string",
                        "surnamePrefix": "string",
                        "surname": "string",
                        "alternateSurname": "string",
                        "nameSuffix": "string",
                        "nameTitle": "string",
                        "fullName": "string",
                        "alternateFullName": "string",
                        "phoneNumber": "string",
                        "email": "string",
                        "birthDate": "2020-07-14",
                        "language": "string",
                        "nationality": {
                          "value": "string",
                          "code": "string"
                        },
                        "vip": {
                          "vipCode": "string",
                          "vipDescription": "string"
                        },
                        "address": {
                          "cityName": "string",
                          "postalCode": "string",
                          "state": "string",
                          "country": {
                            "value": "string",
                            "code": "string"
                          },
                          "streetAddress": "string",
                          "excludeNoCity": true
                        },
                        "anonymization": {
                          "anonymizationStatus": "Requested",
                          "anonymizationDate": "2020-07-14T09:58:05.724Z"
                        },
                        "accompanyGuests": [
                          {
                            "firstName": "string",
                            "lastName": "string",
                            "fullName": "string",
                            "registrationCardNo": "string",
                            "profileIdList": [
                              {
                                "id": "string",
                                "type": "string"
                              }
                            ]
                          }
                        ],
                        "externalInfo": {
                          "givenName": "string",
                          "surname": "string"
                        },
                        "guestLastStayInfo": {
                          "lastStayDate": "2020-07-14",
                          "lastStayRoom": "string",
                          "lastStayRate": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "totalStay": 0
                        },
                        "guestRestrictedCode": "string",
                        "guestRestrictedReasonDesc": "string",
                        "guestRestricted": true,
                        "registrationCardNo": "string",
                        "nameType": "Guest",
                        "id": "string",
                        "type": "string"
                      },
                      "sharedGuests": [
                        {
                          "profileId": {
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0
                          },
                          "firstName": "string",
                          "lastName": "string",
                          "fullName": "string"
                        }
                      ],
                      "attachedProfiles": [
                        {
                          "name": "string",
                          "profileIdList": [
                            {
                              "id": "string",
                              "type": "string"
                            }
                          ],
                          "reservationProfileType": "Company"
                        }
                      ],
                      "reservationPaymentMethod": {
                        "paymentCard": {
                          "cardId": {
                            "id": "string",
                            "type": "string"
                          },
                          "currentAuthorizedAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "approvalAmountNeeded": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "cardType": "Ab",
                          "userDefinedCardType": "string",
                          "cardNumber": "string",
                          "cardNumberMasked": "string",
                          "cardNumberLast4Digits": "string",
                          "expirationDate": "2020-07-14",
                          "expirationDateMasked": "string",
                          "expirationDateExpired": true,
                          "cardHolderName": "string",
                          "attachCreditCardToProfile": true,
                          "processing": "Eft",
                          "swiped": true,
                          "cardOrToken": "CardNumber"
                        },
                        "balance": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "authorizationRule": {
                          "code": 0,
                          "amount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "percent": 0
                        },
                        "emailFolioInfo": {
                          "email": {
                            "emailAddress": "string",
                            "type": "string",
                            "typeDescription": "string",
                            "emailFormat": "Html",
                            "primaryInd": true,
                            "orderSequence": 0,
                            "createDateTime": "2020-07-14T09:58:05.724Z",
                            "creatorId": "string",
                            "lastModifyDateTime": "2020-07-14T09:58:05.724Z",
                            "lastModifierId": "string",
                            "purgeDate": "2020-07-14"
                          },
                          "emailFolio": true,
                          "id": "string",
                          "type": "string"
                        },
                        "paymentMethod": "string",
                        "description": "string",
                        "folioView": 0
                      },
                      "reservationFolioWindows": [
                        {
                          "payeeInfo": {
                            "payeeId": {
                              "id": "string",
                              "type": "string"
                            },
                            "payeeName": "string",
                            "payeeAddress": {
                              "address": {
                                "addressLine": [
                                  "string"
                                ],
                                "cityName": "string",
                                "postalCode": "string",
                                "cityExtension": "string",
                                "county": "string",
                                "state": "string",
                                "country": {
                                  "value": "string",
                                  "code": "string"
                                },
                                "language": "string",
                                "type": "string",
                                "typeDescription": "string",
                                "primaryInd": true,
                                "updateReservations": true,
                                "barCode": "string",
                                "createDateTime": "2020-07-14T09:58:05.724Z",
                                "creatorId": "string",
                                "lastModifyDateTime": "2020-07-14T09:58:05.724Z",
                                "lastModifierId": "string",
                                "purgeDate": "2020-07-14"
                              },
                              "id": "string",
                              "type": "string"
                            },
                            "payeeAddressCount": 0,
                            "payeeReferenceCurrency": "string",
                            "payeeAccountInfo": {
                              "accountName": "string",
                              "accountId": {
                                "id": "string",
                                "type": "string"
                              },
                              "accountNo": "string",
                              "status": {
                                "restriction": "string",
                                "description": "string",
                                "restricted": true
                              }
                            },
                            "payeeTaxNumber": "string"
                          },
                          "balance": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "paymentMethod": "string",
                          "folioWindowNo": 0
                        }
                      ],
                      "specials": "string",
                      "lastPrivacyPromptDate": "2020-07-14",
                      "displayColor": "string",
                      "reservationIndicators": [
                        {
                          "indicatorName": "string",
                          "count": 0
                        }
                      ],
                      "roomStatus": "Clean",
                      "searchMatches": [
                        {
                          "attribute": "string",
                          "value": "string"
                        }
                      ],
                      "sourceOfSale": {
                        "sourceType": "string",
                        "sourceCode": "string"
                      },
                      "waitlist": {
                        "reasonDescription": "string",
                        "priorityDescription": "string",
                        "description": "string",
                        "reasonCode": "string",
                        "priorityCode": "string",
                        "telephone": "string"
                      },
                      "queue": {
                        "timeSpan": {
                          "startDate": "2020-07-14",
                          "endDate": "2020-07-14",
                          "duration": "string",
                          "durationInSeconds": 0
                        },
                        "guestTextInfo": {
                          "sentTime": "2020-07-14T09:58:05.724Z",
                          "sentBy": "string"
                        },
                        "priority": 0,
                        "averageQueueTimeToCheckIn": 0,
                        "averageQueueTimeCurrentReservations": 0,
                        "queueDate": "2020-07-14"
                      },
                      "housekeeping": {
                        "instructions": "string",
                        "facilityTaskInfo": {
                          "task": {
                            "description": "string",
                            "instructions": "string",
                            "facilityDepartureTask": true,
                            "linenChange": true,
                            "hotelId": "string",
                            "code": "string",
                            "sequence": 0
                          },
                          "supplies": [
                            {
                              "description": "string",
                              "quantity": 0,
                              "code": "string"
                            }
                          ],
                          "date": "2020-07-14"
                        },
                        "linenChange": true,
                        "turndownRequested": true,
                        "serviceTime": "2020-07-14",
                        "expectedServiceTime": "string",
                        "roomStatus": "Clean"
                      },
                      "cashiering": {
                        "revenuesAndBalances": {
                          "totalFixedCharge": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "totalPayment": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "roomRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "foodAndBevRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "otherRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "nonRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "totalRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "balance": {
                            "amount": 0,
                            "currencyCode": "string"
                          }
                        },
                        "billingPrivileges": {
                          "postingRestriction": true,
                          "preStayCharging": true,
                          "postStayCharging": true,
                          "folioCloseDate": "2020-07-14",
                          "scheduledCheckout": true,
                          "scheduledCheckoutTime": "2020-07-14",
                          "directBillAuthorized": true,
                          "videoCheckout": true,
                          "allowAutoCheckin": true,
                          "autoSettlement": true,
                          "autoSettlementType": "string",
                          "autoSettlementFreq": 0,
                          "creditLimitAutoPay": true
                        },
                        "taxType": {
                          "hotelId": "string",
                          "code": "string",
                          "description": "string",
                          "collectingAgentTax": true,
                          "printAutoAdjust": true,
                          "reportExemptDays": 0,
                          "reportTaxPercentage": 0,
                          "minimumLengthOfStay": 0,
                          "taxExemptNo": "string"
                        },
                        "bedTaxReporting": {
                          "taxRegistrationNo": 0,
                          "visaNumber": "string",
                          "visaIssueDate": "2020-07-14",
                          "visaExpiryDate": "2020-07-14",
                          "taxableDays": 0
                        },
                        "folioTexts": {
                          "folioText": [
                            {
                              "text": "string",
                              "row": 0
                            }
                          ]
                        },
                        "periodicFolio": {
                          "lastSettlementDate": "2020-07-14",
                          "lastFolioDate": "2020-07-14",
                          "frequency": 0
                        },
                        "compAccounting": {
                          "compType": "string",
                          "authorizer": "string"
                        },
                        "reservationPreConfiguredRoutingInstruction": {
                          "authorizerInfo": {
                            "authorizerId": {
                              "id": "string",
                              "type": "string"
                            },
                            "authorizerUserName": "string",
                            "authorizerName": "string",
                            "authorizerRateCode": "string",
                            "inheritAuthorizerRateCode": true
                          },
                          "ratePlanCode": "string",
                          "profileType": "Company",
                          "promotionCode": "string"
                        },
                        "financiallyResponsible": true,
                        "proratedBilling": true,
                        "lastRoomAndTaxPostedDate": "2020-07-14",
                        "reverseCheckInAllowed": true,
                        "reverseAdvanceCheckInAllowed": true,
                        "transactionsPosted": true
                      },
                      "taxType": {
                        "hotelId": "string",
                        "code": "string",
                        "description": "string",
                        "collectingAgentTax": true,
                        "printAutoAdjust": true,
                        "reportExemptDays": 0,
                        "reportTaxPercentage": 0,
                        "minimumLengthOfStay": 0
                      },
                      "deposit": {
                        "amountRequired": 0,
                        "amountPaid": 0,
                        "amountOwed": 0,
                        "dueDate": "2020-07-14",
                        "postingDate": "2020-07-14",
                        "hasPaid": true,
                        "hasOutstanding": true
                      },
                      "allowedActions": [
                        "Cancel"
                      ],
                      "revenuesAndBalances": {
                        "totalFixedCharge": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "totalPayment": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "roomRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "foodAndBevRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "otherRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "nonRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "totalRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "balance": {
                          "amount": 0,
                          "currencyCode": "string"
                        }
                      },
                      "hotelInterfaceStatusList": [
                        {
                          "roomExtension": "string",
                          "hotelInterface": {
                            "interfaceId": {
                              "id": "string",
                              "type": "string"
                            },
                            "hotelId": "string",
                            "interfaceName": "string",
                            "interfaceType": "Bms",
                            "logo": "string",
                            "machineName": "string",
                            "status": "Stopped",
                            "activeFlag": true
                          },
                          "interfaceRights": [
                            {
                              "right": 0,
                              "statusCode": "string",
                              "description": "string",
                              "category": "string"
                            }
                          ]
                        }
                      ],
                      "guestPreferredCurrency": "string",
                      "turndownInfo": {
                        "allowed": true,
                        "status": "Required"
                      },
                      "mobileNotifications": {
                        "roomReady": "Pending",
                        "keyReady": "Pending",
                        "checkoutMessageReceived": true,
                        "requiresAction": true,
                        "errorMessage": "string"
                      },
                      "reservationCommunication": {
                        "telephones": {
                          "telephoneInfo": [
                            {
                              "telephone": {
                                "phoneTechType": "string",
                                "phoneUseType": "string",
                                "phoneUseTypeDescription": "string",
                                "phoneNumber": "string",
                                "extension": "string",
                                "primaryInd": true,
                                "orderSequence": 0,
                                "createDateTime": "2020-07-14T09:58:05.725Z",
                                "creatorId": "string",
                                "lastModifyDateTime": "2020-07-14T09:58:05.725Z",
                                "lastModifierId": "string",
                                "purgeDate": "2020-07-14"
                              },
                              "id": "string",
                              "type": "string"
                            }
                          ],
                          "hasMore": true,
                          "totalResults": 0,
                          "count": 0
                        },
                        "emails": {
                          "emailInfo": [
                            {
                              "email": {
                                "emailAddress": "string",
                                "type": "string",
                                "typeDescription": "string",
                                "emailFormat": "Html",
                                "primaryInd": true,
                                "orderSequence": 0,
                                "createDateTime": "2020-07-14T09:58:05.725Z",
                                "creatorId": "string",
                                "lastModifyDateTime": "2020-07-14T09:58:05.725Z",
                                "lastModifierId": "string",
                                "purgeDate": "2020-07-14"
                              },
                              "id": "string",
                              "type": "string"
                            }
                          ],
                          "hasMore": true,
                          "totalResults": 0,
                          "count": 0
                        }
                      },
                      "advanceCheckIn": {
                        "advanceCheckedIn": true,
                        "expectedReturnTime": "2020-07-14T09:58:05.725Z",
                        "eTRComments": "string"
                      },
                      "welcomeOffer": true,
                      "cancellationInfo": {
                        "description": "string",
                        "code": "string",
                        "date": "2020-07-14"
                      },
                      "keyCount": 0,
                      "hotelId": "string",
                      "hotelName": "string",
                      "expectedServiceTime": "string",
                      "roomStayReservation": true,
                      "createDateTime": "2020-07-14T09:58:05.725Z",
                      "creatorId": "string",
                      "lastModifyDateTime": "2020-07-14T09:58:05.725Z",
                      "lastModifierId": "string",
                      "purgeDate": "2020-07-14",
                      "reservationStatus": "Reserved",
                      "computedReservationStatus": "Reserved",
                      "walkInIndicator": true,
                      "accessRestriction": "Change",
                      "commissionPayoutTo": "TravelAgent",
                      "paymentMethod": "string",
                      "preRegistered": true,
                      "openFolio": true,
                      "allowMobileCheckout": true,
                      "allowMobileViewFolio": true,
                      "optedForCommunication": true
                    }
                  ]
                },
                "masterInfoList": [
                  {
                    "codeInfo": [
                      {
                        "description": "string",
                        "addtionalCodeInfo": {
                          "code": [
                            {
                              "name": "LongDescription",
                              "value": "string"
                            }
                          ]
                        },
                        "hotelId": "string",
                        "code": "string"
                      }
                    ],
                    "codeType": "Country"
                  }
                ],
                "links": [
                  {
                    "href": "string",
                    "rel": "string",
                    "templated": false,
                    "method": "GET",
                    "targetSchema": "string",
                    "operationId": "string",
                    "title": "string"
                  }
                ]
              }
            }
          },
          "204": {
            "description": "ReservationsForBilling not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/commissionAgent/{commissionAgentId}/commissions": {
      "put": {
        "summary": "Operation to associate commission agent to reservations.",
        "description": " <p><strong>OperationId:</strong>associateCommissionAgentToReservations</p>",
        "operationId": "associateCommissionAgentToReservations",
        "parameters": [
          {
            "name": "commissionAgentId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Id of the Commission Agent."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "All reservation ids in the list must belong to this property."
          },
          {
            "name": "associateCommissionAgentToReservations",
            "in": "body",
            "required": true,
            "description": "Request type for associating reservations to Travel Agent or Source Profile.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/associateCommissionAgentToReservations"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response type for associating reservations to Travel Agent or Source Profile.",
            "schema": {
              "$ref": "#/definitions/associateCommissionAgentToReservationsStatus"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ]
      },
      "delete": {
        "summary": "Operation to remove commission agent from reservations.",
        "description": " <p><strong>OperationId:</strong>removeCommissionAgentFromReservations</p>",
        "operationId": "removeCommissionAgentFromReservations",
        "parameters": [
          {
            "name": "commissionAgentId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Id of the Commission Agent."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "All reservation ids in the list must belong to this property."
          },
          {
            "name": "commissionAgentType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Simple type for commission agent type. Valid values are Agent and Source.",
            "uniqueItems": true,
            "enum": [
              "Agent",
              "Source"
            ]
          },
          {
            "name": "idExtension",
            "in": "query",
            "required": false,
            "description": "Additional identifying value assigned by the creating system.",
            "type": "integer"
          },
          {
            "name": "idContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "reservationId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "reservationIdIdExtension",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Additional identifying value assigned by the creating system.",
            "items": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "reservationIdIdContext",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "reservationIdType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ]
      }
    },
    "/hotels/{hotelId}/commissionChecks": {
      "delete": {
        "summary": "Operation to discard commission checks.",
        "description": " <p><strong>OperationId:</strong>discardCommissionChecks</p>",
        "operationId": "discardCommissionChecks",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Property of the commission record."
          },
          {
            "name": "bankAccountId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "idExtension",
            "in": "query",
            "required": false,
            "description": "Additional identifying value assigned by the creating system.",
            "type": "integer"
          },
          {
            "name": "idContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "BatchId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "batchIdIdExtension",
            "in": "query",
            "required": false,
            "description": "Additional identifying value assigned by the creating system.",
            "type": "integer"
          },
          {
            "name": "batchIdIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "batchIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "fromCheck",
            "in": "query",
            "required": false,
            "description": "The range start value of checks to be discarded.",
            "type": "number"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ]
      }
    },
    "/hotels/{hotelId}/commissionPayments": {
      "put": {
        "summary": "Operation to process commission payments.",
        "description": " <p><strong>OperationId:</strong>processCommissionPayments</p>",
        "operationId": "processCommissionPayments",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Property of the commission record."
          },
          {
            "name": "processCommissionPayments",
            "in": "body",
            "required": true,
            "description": "Request type for processing commission payments.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/processCommissionPayments"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response type for processing commission payments.",
            "schema": {
              "$ref": "#/definitions/processCommissionPaymentsStatus"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ]
      }
    },
    "/hotels/{hotelId}/commissions": {
      "get": {
        "summary": "Operation to fetch commissions.",
        "description": " <p><strong>OperationId:</strong>getCommissions</p>",
        "operationId": "getCommissions",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Property of the commission record."
          },
          {
            "name": "bankAccountId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "idExtension",
            "in": "query",
            "required": false,
            "description": "Additional identifying value assigned by the creating system.",
            "type": "integer"
          },
          {
            "name": "idContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "agentId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "agentIdIdExtension",
            "in": "query",
            "required": false,
            "description": "Additional identifying value assigned by the creating system.",
            "type": "integer"
          },
          {
            "name": "agentIdIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "agentIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "resvNameId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "resvNameIdIdExtension",
            "in": "query",
            "required": false,
            "description": "Additional identifying value assigned by the creating system.",
            "type": "integer"
          },
          {
            "name": "resvNameIdIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "resvNameIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "commissionId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "commissionIdIdExtension",
            "in": "query",
            "required": false,
            "description": "Additional identifying value assigned by the creating system.",
            "type": "integer"
          },
          {
            "name": "commissionIdIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "commissionIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "batchId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "batchIdIdExtension",
            "in": "query",
            "required": false,
            "description": "Additional identifying value assigned by the creating system.",
            "type": "integer"
          },
          {
            "name": "batchIdIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "batchIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Commissions for the requested account or agent id.",
            "schema": {
              "$ref": "#/definitions/commissionsDetails"
            }
          },
          "204": {
            "description": "Commissions not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ]
      },
      "put": {
        "summary": "Operation to calculate commissions.",
        "description": " <p><strong>OperationId:</strong>calculateCommissions</p>",
        "operationId": "calculateCommissions",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Property of the commissions to be calculated."
          },
          {
            "name": "calculateCommissions",
            "in": "body",
            "required": true,
            "description": "Request type for calculation of commission for all Travel Agent and/or Source.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/calculateCommissions"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/calculateCommissionsStatus"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ]
      }
    },
    "/hotels/{hotelId}/commissions/instructions": {
      "post": {
        "summary": "Operation to set processing instructions.",
        "description": " <p><strong>OperationId:</strong>setProcessingInstructions</p>",
        "operationId": "setProcessingInstructions",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Property from which the agent will be on hold for commission."
          },
          {
            "name": "setProcessingInstructions",
            "in": "body",
            "required": true,
            "description": "Request Type for setting instructions for commission processing on Agent or Reservation level.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/setProcessingInstructions"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ]
      }
    },
    "/hotels/{hotelId}/commissions/{commissionId}": {
      "get": {
        "summary": "Operation to fetch commission.",
        "description": " <p><strong>OperationId:</strong>getCommission</p>",
        "operationId": "getCommission",
        "parameters": [
          {
            "name": "commissionId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique id of the commission."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Property of the commission record."
          },
          {
            "name": "idExtension",
            "in": "query",
            "required": false,
            "description": "Additional identifying value assigned by the creating system.",
            "type": "integer"
          },
          {
            "name": "idContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response type for fetch commission detail.",
            "schema": {
              "$ref": "#/definitions/commissionDetails"
            }
          },
          "204": {
            "description": "Commission not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ]
      },
      "put": {
        "summary": "Operation to change commission.",
        "description": " <p><strong>OperationId:</strong>changeCommission</p>",
        "operationId": "changeCommission",
        "parameters": [
          {
            "name": "commissionId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique id of the commission."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Property of the commission record."
          },
          {
            "name": "commissionToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request type for update of commission detail.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/commissionToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/commissionStatus"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ]
      },
      "delete": {
        "summary": "Operation to remove commission.",
        "description": " <p><strong>OperationId:</strong>removeCommission</p>",
        "operationId": "removeCommission",
        "parameters": [
          {
            "name": "commissionId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique id of the commission."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Property of the commission record."
          },
          {
            "name": "idExtension",
            "in": "query",
            "required": false,
            "description": "Additional identifying value assigned by the creating system.",
            "type": "integer"
          },
          {
            "name": "idContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "detachDescription",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Used for Character Strings, length 0 to 2000."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ]
      }
    },
    "/hotels/{hotelId}/commissions/{commissionId}/commissionCodes/{commissionCode}/recalculate": {
      "put": {
        "summary": "Operation to recalculate commission on code change.",
        "description": " <p><strong>OperationId:</strong>recalculateCommissionOnCodeChange</p>",
        "operationId": "recalculateCommissionOnCodeChange",
        "parameters": [
          {
            "name": "commissionCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "New commission code."
          },
          {
            "name": "commissionId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique id of the commission."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Property of the commission record."
          },
          {
            "name": "recalculateCommissionOnCodeChange",
            "in": "body",
            "required": true,
            "description": "Request type for recalculating commission amount when commission code of unpaid commission is changed.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/recalculateCommissionOnCodeChange"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response type for recalculating commission amount when commission code of unpaid commission is changed",
            "schema": {
              "$ref": "#/definitions/recalculateCommissionOnCodeChangeStatus"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ]
      }
    },
    "/hotels/{hotelId}/dailyDocket": {
      "get": {
        "summary": "Get Daily Docket",
        "description": "Use this API to fetch Daily Dockets. <p><strong>OperationId:</strong>getDailyDocket</p>",
        "operationId": "getDailyDocket",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "docketDate",
            "in": "query",
            "required": false,
            "description": "log book date.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "department",
            "in": "query",
            "required": false,
            "description": "Department code the log book entries belong to.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching log book entries.",
            "schema": {
              "$ref": "#/definitions/dailyDocket"
            }
          },
          "204": {
            "description": "DailyDocket not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      },
      "put": {
        "summary": "Change Daily Docket ",
        "description": "Use this API to change Daily Docket. <p><strong>OperationId:</strong>putDailyDocket</p>",
        "operationId": "putDailyDocket",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "dailyDocket",
            "in": "body",
            "required": true,
            "description": "Change log book entries.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/dailyDocket"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      },
      "post": {
        "summary": "Create Daily Docket ",
        "description": "Use this API to create a Daily Docket. <p><strong>OperationId:</strong>postDailyDocket</p>",
        "operationId": "postDailyDocket",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "dailyDocket",
            "in": "body",
            "required": true,
            "description": "Add log book entries.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/dailyDocket"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/dailyDocket/{docketId}": {
      "delete": {
        "summary": "Delete Daily Docket ",
        "description": "Use this API to delete a Daily Docket. <p><strong>OperationId:</strong>deleteDailyDocket</p>",
        "operationId": "deleteDailyDocket",
        "parameters": [
          {
            "name": "docketId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/externalRoomKeys": {
      "post": {
        "summary": "Requests room key(s)",
        "description": "API that manages requests for Door Lock Room Keys. This operation is used by OPERA Cloud PMS connected to external Door Lock Systems systems via Outbound Systems configuration: \n\n<strong>OPERA Cloud utilizes this operation </strong>\n\n- to request new or additional room keys - e.g. when guest checks in, or additional keys post check in.\n\n- to request to activate new keys after check on e.g. when a room key has been lost for a room.\n\n- to request a room key which is not related to a guest reservation but valid for a defined time - (for show rooms, repair) - One Shot Key.\n\n- to request to re-encode a key whereby other keys for this room remain active.\n\n- to request to read a key data from a room key and display it to the user in the PMS.\n\n- to request to modify existing key data - upon room move or change of departure date. (online key systems only!!)\n\n- to request to remove / delete a room key from a room on. Usually sent with check out of a reservation.\n\nUse this API to post a room key action to the active Door Lock System.\n\n<strong>Notes on keyType values:</strong>\n\n<strong>keyType = New\n\nkeyType = Lost </strong>\n\nIt is expected that all previous active keys for the room will become invalid.\n\nIt is expected that partner system handles multiple keys being active in case numberOfKeys is >1.\n\n<strong>keyType = Duplicate\n\nkeyType = ReEncode</strong>\n\nIt is expected that existing active keys for this room remain active.\n\n<strong>keyType = OneShot</strong>\n\nIt is expected that the room key is only valid for a room for specific time (for maintenance or Show room).\n\nIt is never related to a reservation.\n\n<strong>keyType = Read</strong> A request to the Key Card system to read Key Card information from requested Key Encoder/reader.\n\nThe Key Read functionality is of pure informational purpose. None of the received information is stored or processed in the PMS, and it is only for display to the user.\n\n<strong>keyType = Remove</strong>\n\nIt is expected that with this request all active keys for a room or reservation will become inactive or invalid so they will not be able to open the room after defined validityEnd time.\n\n<strong>Additional KeyType actions used by Online Door Lock Systems:</strong>\n\n<strong>Online Key card Systems</strong> are systems which do not write guest data to the room key directly but do store guest data internally and send the information to the related door lock.\n\n<strong>keyType = ModifyStay</strong>\n\nFor Online Door Lock Systems - Request to adjust Room key data when guest changes length of stay (validityEnd)\n\n<strong>keyType = RoomMove</strong>\n\nFor Online Door Lock Systems - adjust Room key data when guest performs room move. \n\n<p><strong>OperationId:</strong> postExternalRoomKeys</p>",
        "operationId": "postExternalRoomKeys",
        "deprecated": true,
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "roomKey",
            "in": "body",
            "required": true,
            "description": "Request for generation of room key.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomKeyExternal"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response from the active Door Locking System Property Interface to the post request.<p><strong>Note on Response messages:</strong>\n\nIt is necessary to specify both the PMS 'encoderTerminal' and the Key Service system's coder (encoderId) in cases where more than one PMS workstation may be addressing one key coder. ORACLE PMS will NOT send another Request command automatically should a negative response be received. The user sees the response and decides if another try should be made.<p>",
            "schema": {
              "$ref": "#/definitions/roomKeyExternalDetails"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/floorPlans": {
      "get": {
        "summary": "Get floor plans",
        "description": "Use this API to get Floor Plans for a property. Floor Plans provide a graphical layout of floors, rooms, and other physical features such as stairways, HVAC closets, elevators, and more <p><strong>OperationId:</strong>getFloorPlans</p>",
        "operationId": "getFloorPlans",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "room",
            "in": "query",
            "required": false,
            "description": "Room filter.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "List of suggested rooms for room assignment.",
            "schema": {
              "$ref": "#/definitions/floorPlans"
            },
            "examples": {
              "application/json": {
                "floorPlansDetails": [
                  {
                    "rooms": [
                      {
                        "roomType": {
                          "pseudo": true,
                          "suite": true,
                          "roomClass": "string",
                          "shortDescription": "string",
                          "houseKeeping": true,
                          "smokingPreference": "string",
                          "building": "string",
                          "roomAssignmentRating": "MostImportant",
                          "minimumOccupancy": 0,
                          "maximumOccupancy": 0,
                          "roomFeatures": [
                            {
                              "code": "string",
                              "description": "string",
                              "orderSequence": 0,
                              "quantity": 0
                            }
                          ],
                          "accessible": true,
                          "roomType": "string",
                          "meetingRoom": true
                        },
                        "floor": "string",
                        "floorDescription": "string",
                        "roomFeatures": [
                          {
                            "code": "string",
                            "description": "string",
                            "orderSequence": 0,
                            "quantity": 0
                          }
                        ],
                        "roomDescription": "string",
                        "description": {
                          "defaultText": "string",
                          "translatedTexts": {
                            "text": [
                              {
                                "value": "string",
                                "language": "string"
                              }
                            ]
                          }
                        },
                        "smokingPreference": "string",
                        "smokingPreferenceDescription": "string",
                        "building": "string",
                        "roomAssignmentRating": "MostImportant",
                        "accessible": true,
                        "roomId": "string",
                        "meetingRoom": true,
                        "roomSection": {
                          "daySectionCode": "string",
                          "eveningSectionCode": "string"
                        },
                        "housekeeping": {
                          "roomStatus": {
                            "reservationStatusList": [
                              "Arrival"
                            ],
                            "roomStatus": "Clean",
                            "frontOfficeStatus": "Vacant",
                            "housekeepingStatus": "Vacant"
                          },
                          "roomPersons": {
                            "frontOfficePersons": 0,
                            "houseKeepingPersons": 0
                          },
                          "guestServiceRequest": "DoNotDisturb",
                          "cleaningPriority": {
                            "prioritySequence": 0
                          },
                          "roomCondition": {
                            "roomCondition": {
                              "code": "string",
                              "description": "string"
                            },
                            "assignmentType": "Available",
                            "remarks": "string"
                          },
                          "linenChange": true,
                          "facilityTaskCode": [
                            "string"
                          ]
                        },
                        "outOfOrder": [
                          {
                            "repairRemarks": "string",
                            "returnStatus": "Clean",
                            "reasonCode": "string",
                            "reasonDesc": "string",
                            "newDateRange": {
                              "start": "2020-07-14",
                              "end": "2020-07-14"
                            },
                            "roomStatus": "Clean",
                            "start": "2020-07-14",
                            "end": "2020-07-14"
                          }
                        ],
                        "discrepancy": [
                          "Sleep"
                        ],
                        "sitePlanSection": {
                          "sectionCode": "string",
                          "sectionType": "string",
                          "linkCode": "string",
                          "coordinates": "string",
                          "description": "string"
                        },
                        "componentRoomNumber": "string",
                        "connectingRooms": [
                          {
                            "roomType": {
                              "pseudo": true,
                              "suite": true,
                              "roomClass": "string",
                              "shortDescription": "string",
                              "houseKeeping": true,
                              "smokingPreference": "string",
                              "building": "string",
                              "roomAssignmentRating": "MostImportant",
                              "minimumOccupancy": 0,
                              "maximumOccupancy": 0,
                              "roomFeatures": [
                                {
                                  "code": "string",
                                  "description": "string",
                                  "orderSequence": 0,
                                  "quantity": 0
                                }
                              ],
                              "accessible": true,
                              "roomType": "string",
                              "meetingRoom": true
                            },
                            "floor": "string",
                            "floorDescription": "string",
                            "roomFeatures": [
                              {
                                "code": "string",
                                "description": "string",
                                "orderSequence": 0,
                                "quantity": 0
                              }
                            ],
                            "roomDescription": "string",
                            "description": {
                              "defaultText": "string",
                              "translatedTexts": {
                                "text": [
                                  {
                                    "value": "string",
                                    "language": "string"
                                  }
                                ]
                              }
                            },
                            "smokingPreference": "string",
                            "smokingPreferenceDescription": "string",
                            "building": "string",
                            "roomAssignmentRating": "MostImportant",
                            "accessible": true,
                            "roomId": "string",
                            "meetingRoom": true,
                            "roomCondition": {
                              "code": "string",
                              "description": "string"
                            }
                          }
                        ],
                        "componentRooms": [
                          {
                            "roomType": {
                              "pseudo": true,
                              "suite": true,
                              "roomClass": "string",
                              "shortDescription": "string",
                              "houseKeeping": true,
                              "smokingPreference": "string",
                              "building": "string",
                              "roomAssignmentRating": "MostImportant",
                              "minimumOccupancy": 0,
                              "maximumOccupancy": 0,
                              "roomFeatures": [
                                {
                                  "code": "string",
                                  "description": "string",
                                  "orderSequence": 0,
                                  "quantity": 0
                                }
                              ],
                              "accessible": true,
                              "roomType": "string",
                              "meetingRoom": true
                            },
                            "floor": "string",
                            "floorDescription": "string",
                            "roomFeatures": [
                              {
                                "code": "string",
                                "description": "string",
                                "orderSequence": 0,
                                "quantity": 0
                              }
                            ],
                            "roomDescription": "string",
                            "description": {
                              "defaultText": "string",
                              "translatedTexts": {
                                "text": [
                                  {
                                    "value": "string",
                                    "language": "string"
                                  }
                                ]
                              }
                            },
                            "smokingPreference": "string",
                            "smokingPreferenceDescription": "string",
                            "building": "string",
                            "roomAssignmentRating": "MostImportant",
                            "accessible": true,
                            "roomId": "string",
                            "meetingRoom": true,
                            "roomCondition": {
                              "code": "string",
                              "description": "string"
                            }
                          }
                        ],
                        "attendant": [
                          {
                            "section": {
                              "hotelId": "string",
                              "code": "string",
                              "description": "string",
                              "sectionGroup": "string",
                              "targetCredits": 0,
                              "rooms": 0,
                              "roomCredits": 0,
                              "sequence": 0,
                              "inactive": true
                            },
                            "floor": "string",
                            "attendantId": "string",
                            "attendantName": "string",
                            "hotelId": "string",
                            "activeFlag": "string",
                            "sunday": true,
                            "monday": true,
                            "tuesday": true,
                            "wednesday": true,
                            "thursday": true,
                            "friday": true,
                            "saturday": true,
                            "appUser": {
                              "hotel": {
                                "code": "string",
                                "description": "string"
                              },
                              "appUser": "string",
                              "lDAPUser": "string",
                              "actAs": "string",
                              "actAt": "string",
                              "userDefaultLanguage": "string",
                              "appUserId": {
                                "id": "string",
                                "type": "string"
                              },
                              "cashierId": 0,
                              "cashierTitle": "string",
                              "department": "string",
                              "departmentLocation": "string",
                              "salesRepCode": "string",
                              "expiryDate": "2020-07-14",
                              "disabledUntil": "2020-07-14",
                              "passwordChangeDate": "2020-07-14",
                              "userInfo": {
                                "personName": {
                                  "namePrefix": "string",
                                  "givenName": "string",
                                  "middleName": "string",
                                  "surname": "string",
                                  "nameSuffix": "string",
                                  "nameTitle": "string",
                                  "nameTitleSuffix": 0,
                                  "envelopeGreeting": "string",
                                  "salutation": "string",
                                  "nameType": "Primary",
                                  "language": "string",
                                  "externalSystem": "string"
                                },
                                "profileId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "addressInfo": {
                                  "address": {
                                    "addressLine": [
                                      "string"
                                    ],
                                    "cityName": "string",
                                    "postalCode": "string",
                                    "cityExtension": "string",
                                    "county": "string",
                                    "state": "string",
                                    "country": {
                                      "value": "string",
                                      "code": "string"
                                    },
                                    "language": "string",
                                    "type": "string",
                                    "typeDescription": "string",
                                    "primaryInd": true,
                                    "updateReservations": true,
                                    "barCode": "string",
                                    "createDateTime": "2020-07-14T09:57:07.589Z",
                                    "creatorId": "string",
                                    "lastModifyDateTime": "2020-07-14T09:57:07.589Z",
                                    "lastModifierId": "string",
                                    "purgeDate": "2020-07-14"
                                  },
                                  "id": "string",
                                  "type": "string"
                                },
                                "emailInfo": {
                                  "email": {
                                    "emailAddress": "string",
                                    "type": "string",
                                    "typeDescription": "string",
                                    "emailFormat": "Html",
                                    "primaryInd": true,
                                    "orderSequence": 0,
                                    "createDateTime": "2020-07-14T09:57:07.589Z",
                                    "creatorId": "string",
                                    "lastModifyDateTime": "2020-07-14T09:57:07.589Z",
                                    "lastModifierId": "string",
                                    "purgeDate": "2020-07-14"
                                  },
                                  "id": "string",
                                  "type": "string"
                                },
                                "phoneInfo": {
                                  "telephone": {
                                    "phoneTechType": "string",
                                    "phoneUseType": "string",
                                    "phoneUseTypeDescription": "string",
                                    "phoneNumber": "string",
                                    "extension": "string",
                                    "primaryInd": true,
                                    "orderSequence": 0,
                                    "createDateTime": "2020-07-14T09:57:07.589Z",
                                    "creatorId": "string",
                                    "lastModifyDateTime": "2020-07-14T09:57:07.589Z",
                                    "lastModifierId": "string",
                                    "purgeDate": "2020-07-14"
                                  },
                                  "id": "string",
                                  "type": "string"
                                },
                                "department": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "gender": "Male",
                                "birthDate": "2020-07-14",
                                "birthDateMasked": "string"
                              },
                              "userSessionInfo": {
                                "businessDate": "2020-07-14",
                                "systemDate": "2020-07-14",
                                "terminal": "string",
                                "runningApp": "string",
                                "shareProfiles": true,
                                "hotel": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "cro": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "chain": "string",
                                "cROCountryCode": "string",
                                "sessionDefaults": {
                                  "dbDateFormat": "string",
                                  "oracleDateFormat": "string",
                                  "oracleTimeFormat": "string",
                                  "javaDateFormat": "string",
                                  "javaTimeFormat": "string",
                                  "currencyCode": "string",
                                  "currencyFormat": "string",
                                  "defaultLanguage": "string",
                                  "baseLanguage": "string"
                                },
                                "parameters": [
                                  {
                                    "parameterName": "string",
                                    "parameterValue": "string"
                                  }
                                ]
                              },
                              "attendantInfo": {
                                "attendantId": "string",
                                "hotelId": "string"
                              }
                            },
                            "startTime": "2020-07-14T09:57:07.589Z",
                            "status": "Standby"
                          }
                        ],
                        "hold": {
                          "holdUntil": "2020-07-14T09:57:07.589Z",
                          "holdUser": "string",
                          "comments": "string"
                        },
                        "turndownInfo": {
                          "turndownStatusInfo": "Required"
                        },
                        "resvInfo": [
                          {
                            "guestName": "string",
                            "reservationId": {
                              "url": "string",
                              "type": "string",
                              "instance": "string",
                              "idContext": "string",
                              "id": "string",
                              "idExtension": 0
                            },
                            "reservationStatusInfo": "Arrival",
                            "stayDateInfo": {
                              "timeSpan": {
                                "startDate": "2020-07-14",
                                "endDate": "2020-07-14",
                                "duration": "string"
                              },
                              "expectedTimes": {
                                "reservationExpectedArrivalTime": "2020-07-14T09:57:07.590Z",
                                "reservationExpectedDepartureTime": "2020-07-14T09:57:07.590Z"
                              }
                            },
                            "vipStatus": {
                              "value": "string",
                              "code": "string"
                            },
                            "profileId": {
                              "id": "string",
                              "type": "string"
                            }
                          }
                        ],
                        "componentRoomNumbers": {
                          "roomId": [
                            "string"
                          ]
                        },
                        "guests": [
                          {
                            "lastName": "string",
                            "firstName": "string",
                            "arrival": "2020-07-14",
                            "departure": "2020-07-14",
                            "shareID": "string",
                            "confirmationNo": "string"
                          }
                        ]
                      }
                    ],
                    "hotelId": "string",
                    "siteCode": "string",
                    "siteDescription": "string",
                    "links": [
                      {
                        "href": "string",
                        "rel": "string",
                        "templated": false,
                        "method": "GET",
                        "targetSchema": "string",
                        "operationId": "string",
                        "title": "string"
                      }
                    ]
                  }
                ],
                "links": [
                  {
                    "href": "string",
                    "rel": "string",
                    "templated": false,
                    "method": "GET",
                    "targetSchema": "string",
                    "operationId": "string",
                    "title": "string"
                  }
                ]
              }
            }
          },
          "204": {
            "description": "FloorPlans not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/frontOfficeStatistics/{statisticsCode}": {
      "get": {
        "summary": "Get front office statistics",
        "description": "Use this API to return front office statistics for a specific hotel based on search criteria such as statisticsCode, hotelId, date, parameterNames, parameterValues, room Classes.<p><strong>OperationId:</strong>getFrontOfficeStatistics</p>",
        "operationId": "getFrontOfficeStatistics",
        "parameters": [
          {
            "name": "statisticsCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Below are the Statistics Code mapping for valid metric code.<p><strong>AdvanceCheckIn:</strong></p>IndividualAdvanceCheckedInCurrent,BlockAdvanceCheckedInInhouse,BlockAdvanceCheckedInTotal,IndividualAdvanceCheckedInInhouse,IndividualAdvanceCheckedInTotal,BlockAdvanceCheckedInCurrent;<p><strong>AIRoomAssignment:</strong></p>MaxPercentageOccupiedTonightRooms,ArrivalResvs,ArrivalVIPResvs,ArrivalMemberResvs,ArrivalUnallocResvs,ArrivalManualAssgnResvs,ArrivalAIAssgnResvs,ArrivalAIUpgResvs,ArrivalAIAssgnVIPResvs,ArrivalAIAssgnMemberResvs,ArrivalAIAssgnOverridden;<p><strong>AvailableRooms:</strong></p>MinAvailableTonightRooms;<p><strong>CheckIns:</strong></p>ArrivalsTotal,CheckedInsTotal,ExpectedCheckInsTotal,QueueRooms;CheckOuts:DeparturesTotal,CheckedOutsTotal,AdultsDeparted,ChildrenDeparted,ExpectedCheckOutsTotal,AdultsExpectedCheckedOut,ChildrenExpectedCheckedOut,ScheduledCheckOutsTotal;<p><strong>ComplimentaryOrHouseUse:</strong></p>ComplimentaryArrivalRooms,ComplimentaryArrivalPersons,ComplimentaryArrivalVIP,ComplimentaryStayoverRooms,ComplimentaryStayoverPersons,ComplimentaryStayoverVIP,ComplimentaryDepartureRooms,ComplimentaryDeparturePersons,ComplimentaryDepartureVIP,HouseUseArrivalRooms,HouseUseArrivalPersons,HouseUseArrivalVIP,HouseUseStayoverRooms,HouseUseStayoverPersons,HouseUseStayoverVIP,HouseUseDepartureRooms,HouseUseDeparturePersons,HouseUseDepartureVIP;<p><strong>DailyProjection:</strong></p>IndividualRooms,IndividualPersons,IndividualVIP,GroupAndBlockRooms,GroupAndBlockPersons,GroupAndBlockVIP,MaxOccupiedTonightRooms,MaxOccupiedTonightPersons,MaxOccupiedTonightVIP,BlocksNotPickedUp,MaxPercentageOccupiedTonightRooms,MinAvailableTonightRooms,RoomRevenue,TotalRevenue,AverageRoomRevenue,RevPar;<p><strong>HouseSummary:</strong></p>TotalPhysicalRooms,TotalOutOfOrder,TotalOutOfService,TotalRoomsToSell,MaxOccupiedTonightRooms,PercentRoomsOccupied,RoomRevenue,TotalRevenue,RevPar,AverageRoomRevenue;<p><strong>HouseSummaryMonthToDate:</strong></p>TotalPhysicalRooms,TotalOutOfOrder,TotalOutOfService,TotalRoomsToSell,MaxOccupiedTonightRooms,PercentRoomsOccupied,RoomRevenue,RevPar,TotalRevenue,AverageRoomRevenue;<p><strong>HouseSummaryYearToDate:</strong></p>TotalPhysicalRooms,TotalOutOfOrder,TotalOutOfService,TotalRoomsToSell,MaxOccupiedTonightRooms,PercentRoomsOccupied,RoomRevenue,RevPar,TotalRevenue,AverageRoomRevenue;<p><strong>InHouse:</strong></p>AdultsInHouse,ChildrenInHouse,InHouseRooms,InHouse;<p><strong>LastHourStatus:</strong></p>ArrivalsInLastHour,DeparturesInLastHour,InspectedRooms,CleanedRooms;<p><strong>ReservationActivity:</strong></p>StayoverRooms,StayoverPersons,StayoverVIP,DeparturesExpectedRooms,DeparturesExpectedPersons,DeparturesExpectedVIP,DeparturesActualRooms,DeparturesActualPersons,DeparturesActualVIP,ArrivalsExpectedRooms,ArrivalsExpectedPersons,ArrivalsExpectedVIP,ArrivalsActualRooms,ArrivalsActualPersons,ArrivalsActualVIP,ArrivalsExpectedRoomsMadeToday,ArrivalsExpectedPersonsMadeToday,ArrivalsExpectedVIPMadeToday,ExtendedStaysRooms,ExtendedStaysPersons,ExtendedStaysVIP,EarlyDeparturesRooms,EarlyDeparturesPersons,EarlyDeparturesVIP,DayUseRooms,DayUsePersons,DayUseVIP,WalkInRooms,WalkInPersons,WalkInVIP,CanceledOnArrivalRooms,CanceledOnArrivalPersons,CanceledOnArrivalVIP,AverageCheckInTime;<p><strong>ReservationActivityDaily:</strong></p>AdultsInHouse,ChildrenInHouse,ArrivalsTotal,TurndownRequired,DeparturesTotal,MaxOccupancyPercentage,Stayover,TotalRoomsReserved;<p><strong>ReservationActivityMonthToDate:</strong></p>ArrivalsActualRooms,ArrivalsActualPersons,DeparturesActualRooms,DeparturesActualPersons,ExtendedStaysRooms,ExtendedStaysPersons,EarlyDeparturesRooms,EarlyDeparturesPersons,DayUseRooms,DayUsePersons;<p><strong>ReservationActivityYearToDate:</strong></p>ArrivalsActualRooms,ArrivalsActualPersons,DeparturesActualRooms,DeparturesActualPersons,ExtendedStaysRooms,ExtendedStaysPersons,EarlyDeparturesRooms,EarlyDeparturesPersons,DayUseRooms,DayUsePersons;<p><strong>ReservationsCancellationsToday:</strong></p>CancellationsTotal,NewReservationsTotal;<p><strong>ReservationStatistics:</strong></p>PreRegisteredTotal,VIPPreRegisteredTotal,TurndownTotal,VIPTurndownTotal,OpenFolioTotal,ExpectedCheckOutsTotal;<p><strong>RoomMaintenance:</strong></p>RoomMaintenanceResolvedTotal,RoomMaintenanceUnResolvedTotal;<p><strong>RoomStatus:</strong></p>InspectedVacant,InspectedAssigned,InspectedOccupied,CleanVacant,CleanAssigned,CleanOccupied,DirtyVacant,DirtyAssigned,DirtyOccupied,PickupVacant,PickupAssigned,PickupOccupied,OutOfOrderVacant,OutOfOrderAssigned,OutOfOrderOccupied,OutOfServiceVacant,OutOfServiceAssigned,OutOfServiceOccupied,TotalOutOfOrder,TotalOutOfService,QueueRooms,CurrentAveWaitTime,SkipRooms,SleepRooms;<p><strong>Turndown:</strong></p>TurndownRequired,TurndownNotRequired,TurndownCompletedRequired;<p><strong>VIPGuests:</strong></p>VIPGuestsArriving,VIPGuestsDeparting;",
            "enum": [
              "AdvanceCheckIn",
              "AIRoomAssignment",
              "AvailableRooms",
              "CheckIns",
              "CheckOuts",
              "ComplimentaryOrHouseUse",
              "DailyProjection",
              "HouseSummary",
              "HouseSummaryMonthToDate",
              "HouseSummaryYearToDate",
              "InHouse",
              "LastHourStatus",
              "ReservationActivity",
              "ReservationActivityDaily",
              "ReservationActivityMonthToDate",
              "ReservationActivityYearToDate",
              "ReservationsCancellationsToday",
              "ReservationStatistics",
              "RoomMaintenance",
              "RoomStatus",
              "Turndown",
              "VIPGuests",
              "CompRouting",
              "RoomMoveStatistics"
            ]
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "description": "Start date of the report.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "metric",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Supported housekeeping statistical codes.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "AdultsDeparted",
                "AdultsExpectedCheckedOut",
                "AdultsInHouse",
                "ArrivalAIAssgnMemberResvs",
                "ArrivalAIAssgnOverridden",
                "ArrivalAIAssgnResvs",
                "ArrivalAIAssgnVIPResvs",
                "ArrivalAIUpgResvs",
                "ArrivalManualAssgnResvs",
                "ArrivalMemberResvs",
                "ArrivalResvs",
                "ArrivalsActualPersons",
                "ArrivalsActualRooms",
                "ArrivalsActualVIP",
                "ArrivalsExpectedPersons",
                "ArrivalsExpectedPersonsMadeToday",
                "ArrivalsExpectedRooms",
                "ArrivalsExpectedRoomsMadeToday",
                "ArrivalsExpectedVIP",
                "ArrivalsExpectedVIPMadeToday",
                "ArrivalsInLastHour",
                "ArrivalsTotal",
                "ArrivalUnallocResvs",
                "ArrivalVIPResvs",
                "AverageCheckInTime",
                "AverageRoomRevenue",
                "BlockAdvanceCheckedInCurrent",
                "BlockAdvanceCheckedInInhouse",
                "BlockAdvanceCheckedInTotal",
                "BlocksNotPickedUp",
                "CanceledOnArrivalPersons",
                "CanceledOnArrivalRooms",
                "CanceledOnArrivalVIP",
                "CancellationsTotal",
                "CheckedInsTotal",
                "CheckedOutsTotal",
                "ChildrenDeparted",
                "ChildrenExpectedCheckedOut",
                "ChildrenInHouse",
                "CleanAssigned",
                "CleanedRooms",
                "CleanOccupied",
                "CleanVacant",
                "ComplimentaryArrivalPersons",
                "ComplimentaryArrivalRooms",
                "ComplimentaryArrivalVIP",
                "ComplimentaryDeparturePersons",
                "ComplimentaryDepartureRooms",
                "ComplimentaryDepartureVIP",
                "ComplimentaryStayoverPersons",
                "ComplimentaryStayoverRooms",
                "ComplimentaryStayoverVIP",
                "CurrentAveWaitTime",
                "DayUsePersons",
                "DayUseRooms",
                "DayUseVIP",
                "DeparturesActualPersons",
                "DeparturesActualRooms",
                "DeparturesActualVIP",
                "DeparturesExpectedPersons",
                "DeparturesExpectedRooms",
                "DeparturesExpectedVIP",
                "DeparturesInLastHour",
                "DeparturesTotal",
                "DirtyAssigned",
                "DirtyOccupied",
                "DirtyVacant",
                "EarlyDeparturesPersons",
                "EarlyDeparturesRooms",
                "EarlyDeparturesVIP",
                "ExpectedCheckInsTotal",
                "ExpectedCheckOutsTotal",
                "ExtendedStaysPersons",
                "ExtendedStaysRooms",
                "ExtendedStaysVIP",
                "GroupAndBlockPersons",
                "GroupAndBlockRooms",
                "GroupAndBlockVIP",
                "HouseUseArrivalPersons",
                "HouseUseArrivalRooms",
                "HouseUseArrivalVIP",
                "HouseUseDeparturePersons",
                "HouseUseDepartureRooms",
                "HouseUseDepartureVIP",
                "HouseUseStayoverPersons",
                "HouseUseStayoverRooms",
                "HouseUseStayoverVIP",
                "IndividualAdvanceCheckedInCurrent",
                "IndividualAdvanceCheckedInInhouse",
                "IndividualAdvanceCheckedInTotal",
                "IndividualPersons",
                "IndividualRooms",
                "IndividualVIP",
                "InHouse",
                "InHouseBlocksTotal",
                "InHouseRooms",
                "InspectedAssigned",
                "InspectedOccupied",
                "InspectedRooms",
                "InspectedVacant",
                "MaxOccupancyPercentage",
                "MaxOccupiedTonightPersons",
                "MaxOccupiedTonightRooms",
                "MaxOccupiedTonightVIP",
                "MaxPercentageOccupiedTonightRooms",
                "MinAvailableTonightRooms",
                "NewReservationsTotal",
                "OpenFolioTotal",
                "OutOfOrderAssigned",
                "OutOfOrderOccupied",
                "OutOfOrderVacant",
                "OutOfServiceAssigned",
                "OutOfServiceOccupied",
                "OutOfServiceVacant",
                "PercentRoomsOccupied",
                "PickupAssigned",
                "PickupOccupied",
                "PickupVacant",
                "PreRegisteredTotal",
                "QueueRooms",
                "RevPar",
                "RoomMaintenanceResolvedTotal",
                "RoomMaintenanceUnResolvedTotal",
                "RoomRevenue",
                "ScheduledCheckOutsTotal",
                "SkipRooms",
                "SleepRooms",
                "Stayover",
                "StayoverPersons",
                "StayoverRooms",
                "StayoverVIP",
                "TotalOutOfOrder",
                "TotalOutOfService",
                "TotalPhysicalRooms",
                "TotalRevenue",
                "TotalRoomsReserved",
                "TotalRoomsToSell",
                "TurndownCompletedRequired",
                "TurndownNotRequired",
                "TurndownRequired",
                "TurndownTotal",
                "VIPGuestsArriving",
                "VIPGuestsDeparting",
                "VIPGuestsTotal",
                "VIPPreRegisteredTotal",
                "VIPTurndownTotal",
                "WalkInPersons",
                "WalkInRooms",
                "ApprovedCompPostings",
                "StagedCompPostings",
                "DeclinedCompPostings",
                "CompRoutingInstructionsRequests",
                "WalkInVIP",
                "CompletedRoomMoves",
                "PendingRoomMoves",
                "AdultsArrivals",
                "ChildrenArrivals",
                "Children1Arrivals",
                "Children2Arrivals",
                "Children3Arrivals",
                "Children1InHouse",
                "Children2InHouse",
                "Children3InHouse"
              ]
            },
            "required": false
          },
          {
            "name": "parameterNames",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Required when statisticsCode is ReservationsCancellationsToday",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "parameterValues",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Required when statisticsCode is ReservationsCancellationsToday",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "roomClasses",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Room Class of the Room.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response element for housekeeping statistics.",
            "schema": {
              "$ref": "#/definitions/statistics"
            },
            "examples": {
              "application/json": {
                "statisticsCode": "CheckIns",
                "calendarDate": "2020-05-25",
                "metricSet": [
                  {
                    "metrics": [
                      {
                        "value": "10",
                        "category": "Numeric",
                        "code": "ArrivalsTotal"
                      },
                      {
                        "value": "0",
                        "category": "Numeric",
                        "code": "QueueRooms"
                      },
                      {
                        "value": "5",
                        "category": "Numeric",
                        "code": "CheckedInsTotal"
                      },
                      {
                        "value": "10",
                        "category": "Numeric",
                        "code": "ExpectedCheckInsTotal"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "204": {
            "description": "FrontOfficeStatistics not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FOFStats"
        ]
      }
    },
    "/hotels/{hotelId}/frontOfficeStatisticsRange/{statisticsCode}": {
      "get": {
        "summary": "Get front office Statistics",
        "description": "This API is useful to retrieve statistics regarding front office operations <p><strong>OperationId:</strong>getFrontOfficeStatisticsWithDateRange</p> <p>This API allows a time span of <strong>7</strong> days.</p>",
        "operationId": "getFrontOfficeStatisticsWithDateRange",
        "parameters": [
          {
            "name": "statisticsCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Below are the Statistics Code mapping for valid metric code.<p><strong>ReservationActivityDaily:</strong></p>AdultsInHouse,ChildrenInHouse,ArrivalsTotal,TurndownRequired,DeparturesTotal,MaxOccupancyPercentage,Stayover,TotalRoomsReserved,PendingRoomMoves;",
            "enum": [
              "ReservationActivityDaily"
            ]
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "description": "End date of the report.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "description": "Start date of the report.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "metric",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Supported housekeeping statistical codes.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "AdultsDeparted",
                "AdultsExpectedCheckedOut",
                "AdultsInHouse",
                "ArrivalAIAssgnMemberResvs",
                "ArrivalAIAssgnOverridden",
                "ArrivalAIAssgnResvs",
                "ArrivalAIAssgnVIPResvs",
                "ArrivalAIUpgResvs",
                "ArrivalManualAssgnResvs",
                "ArrivalMemberResvs",
                "ArrivalResvs",
                "ArrivalsActualPersons",
                "ArrivalsActualRooms",
                "ArrivalsActualVIP",
                "ArrivalsExpectedPersons",
                "ArrivalsExpectedPersonsMadeToday",
                "ArrivalsExpectedRooms",
                "ArrivalsExpectedRoomsMadeToday",
                "ArrivalsExpectedVIP",
                "ArrivalsExpectedVIPMadeToday",
                "ArrivalsInLastHour",
                "ArrivalsTotal",
                "ArrivalUnallocResvs",
                "ArrivalVIPResvs",
                "AverageCheckInTime",
                "AverageRoomRevenue",
                "BlockAdvanceCheckedInCurrent",
                "BlockAdvanceCheckedInInhouse",
                "BlockAdvanceCheckedInTotal",
                "BlocksNotPickedUp",
                "CanceledOnArrivalPersons",
                "CanceledOnArrivalRooms",
                "CanceledOnArrivalVIP",
                "CancellationsTotal",
                "CheckedInsTotal",
                "CheckedOutsTotal",
                "ChildrenDeparted",
                "ChildrenExpectedCheckedOut",
                "ChildrenInHouse",
                "CleanAssigned",
                "CleanedRooms",
                "CleanOccupied",
                "CleanVacant",
                "ComplimentaryArrivalPersons",
                "ComplimentaryArrivalRooms",
                "ComplimentaryArrivalVIP",
                "ComplimentaryDeparturePersons",
                "ComplimentaryDepartureRooms",
                "ComplimentaryDepartureVIP",
                "ComplimentaryStayoverPersons",
                "ComplimentaryStayoverRooms",
                "ComplimentaryStayoverVIP",
                "CurrentAveWaitTime",
                "DayUsePersons",
                "DayUseRooms",
                "DayUseVIP",
                "DeparturesActualPersons",
                "DeparturesActualRooms",
                "DeparturesActualVIP",
                "DeparturesExpectedPersons",
                "DeparturesExpectedRooms",
                "DeparturesExpectedVIP",
                "DeparturesInLastHour",
                "DeparturesTotal",
                "DirtyAssigned",
                "DirtyOccupied",
                "DirtyVacant",
                "EarlyDeparturesPersons",
                "EarlyDeparturesRooms",
                "EarlyDeparturesVIP",
                "ExpectedCheckInsTotal",
                "ExpectedCheckOutsTotal",
                "ExtendedStaysPersons",
                "ExtendedStaysRooms",
                "ExtendedStaysVIP",
                "GroupAndBlockPersons",
                "GroupAndBlockRooms",
                "GroupAndBlockVIP",
                "HouseUseArrivalPersons",
                "HouseUseArrivalRooms",
                "HouseUseArrivalVIP",
                "HouseUseDeparturePersons",
                "HouseUseDepartureRooms",
                "HouseUseDepartureVIP",
                "HouseUseStayoverPersons",
                "HouseUseStayoverRooms",
                "HouseUseStayoverVIP",
                "IndividualAdvanceCheckedInCurrent",
                "IndividualAdvanceCheckedInInhouse",
                "IndividualAdvanceCheckedInTotal",
                "IndividualPersons",
                "IndividualRooms",
                "IndividualVIP",
                "InHouse",
                "InHouseBlocksTotal",
                "InHouseRooms",
                "InspectedAssigned",
                "InspectedOccupied",
                "InspectedRooms",
                "InspectedVacant",
                "MaxOccupancyPercentage",
                "MaxOccupiedTonightPersons",
                "MaxOccupiedTonightRooms",
                "MaxOccupiedTonightVIP",
                "MaxPercentageOccupiedTonightRooms",
                "MinAvailableTonightRooms",
                "NewReservationsTotal",
                "OpenFolioTotal",
                "OutOfOrderAssigned",
                "OutOfOrderOccupied",
                "OutOfOrderVacant",
                "OutOfServiceAssigned",
                "OutOfServiceOccupied",
                "OutOfServiceVacant",
                "PercentRoomsOccupied",
                "PickupAssigned",
                "PickupOccupied",
                "PickupVacant",
                "PreRegisteredTotal",
                "QueueRooms",
                "RevPar",
                "RoomMaintenanceResolvedTotal",
                "RoomMaintenanceUnResolvedTotal",
                "RoomRevenue",
                "ScheduledCheckOutsTotal",
                "SkipRooms",
                "SleepRooms",
                "Stayover",
                "StayoverPersons",
                "StayoverRooms",
                "StayoverVIP",
                "TotalOutOfOrder",
                "TotalOutOfService",
                "TotalPhysicalRooms",
                "TotalRevenue",
                "TotalRoomsReserved",
                "TotalRoomsToSell",
                "TurndownCompletedRequired",
                "TurndownNotRequired",
                "TurndownRequired",
                "TurndownTotal",
                "VIPGuestsArriving",
                "VIPGuestsDeparting",
                "VIPGuestsTotal",
                "VIPPreRegisteredTotal",
                "VIPTurndownTotal",
                "WalkInPersons",
                "WalkInRooms",
                "ApprovedCompPostings",
                "StagedCompPostings",
                "DeclinedCompPostings",
                "CompRoutingInstructionsRequests",
                "WalkInVIP",
                "PendingRoomMoves"
              ]
            },
            "required": false
          },
          {
            "name": "parameterNames",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Required when statisticsCode is ReservationsCancellationsToday",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "parameterValues",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Required when statisticsCode is ReservationsCancellationsToday",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "roomClasses",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Room Class of the Room.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response element for housekeeping statistics.",
            "schema": {
              "$ref": "#/definitions/statistics"
            }
          },
          "204": {
            "description": "FrontOfficeStatisticsWithDateRange not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FOFStats"
        ]
      }
    },
    "/hotels/{hotelId}/fulfillmentActivityLogs": {
      "get": {
        "summary": "Get the fullfillment activity log",
        "description": "You can use this API to get the fullfillment activity log. <p><strong>OperationId:</strong>getFulfillmentActivityLog</p> <p>This API allows a time span of <strong>180</strong> days.</p>",
        "operationId": "getFulfillmentActivityLog",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "module",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Activity module.",
            "uniqueItems": true,
            "enum": [
              "Reservation",
              "Contract",
              "Allotment",
              "Outlookview",
              "Profile",
              "Accountreceivables",
              "GdsConvRateCodes",
              "RateCode",
              "Billing",
              "Activity"
            ]
          },
          {
            "name": "parameterName",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Name of the parameter.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "parameterValue",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Value of the parameter.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "activityGroup",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "activityType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": false,
            "description": "Search from date for the user activity log.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "toDate",
            "in": "query",
            "required": false,
            "description": "Search to date for the user activity log.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "searchText",
            "in": "query",
            "required": false,
            "description": "Search text for the user activity log.",
            "type": "string"
          },
          {
            "name": "userByIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "integer",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "userForIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "integer",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Fulfillment activity log response.",
            "schema": {
              "$ref": "#/definitions/activityLog"
            }
          },
          "204": {
            "description": "FulfillmentActivityLog not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/houseKeepingStatistics": {
      "get": {
        "summary": "Get housekeeping statistics",
        "description": "This Api will get the housekeeping statistics for your property. <p><strong>OperationId:</strong>getTaskSheetStatistics</p>",
        "operationId": "getTaskSheetStatistics",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "includeAllAssignedTasks",
            "in": "query",
            "default": true,
            "required": false,
            "description": "This flag, if true, enables fetching statistics for all the housekeeping tasks assigned.",
            "type": "boolean"
          },
          {
            "name": "includeTaskSheetsDetails",
            "in": "query",
            "default": false,
            "required": false,
            "type": "boolean"
          },
          {
            "name": "taskCode",
            "in": "query",
            "required": false,
            "description": "Task code of the task sheet.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response element for housekeeping statistics.",
            "schema": {
              "$ref": "#/definitions/taskSheetStatistics"
            }
          },
          "204": {
            "description": "TaskSheetStatistics not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FOFStats"
        ]
      }
    },
    "/hotels/{hotelId}/interfaces/{interfaceId}/roomStatuses": {
      "get": {
        "summary": "Get room interface status",
        "description": "This Api will getch the room interface status. <p><strong>OperationId:</strong>getRoomInterfaceStatus</p> <p>This API allows a time span of <strong>90</strong> days.</p>",
        "operationId": "getRoomInterfaceStatus",
        "parameters": [
          {
            "name": "interfaceId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "interfaceName",
            "in": "query",
            "required": false,
            "description": "Name of the Hotel Interface",
            "type": "string"
          },
          {
            "name": "interfaceType",
            "in": "query",
            "required": false,
            "type": "string",
            "uniqueItems": true,
            "enum": [
              "Bms",
              "Cas",
              "Ccw",
              "Dls",
              "Eft",
              "Exp",
              "Mak",
              "Mbs",
              "Msc",
              "Pbx",
              "Pos",
              "Svs",
              "Tik",
              "Vid",
              "Vms",
              "Www",
              "Xml"
            ],
            "description": "XML Posting Interface"
          },
          {
            "name": "logo",
            "in": "query",
            "required": false,
            "description": "Hotel Interface Logo. On the database, this is also referred as DBF Logo. This is a three letter code followed by an underscore(_). This tells us which DBF files and log files with the prefix that IFC7 is going to create.",
            "type": "string"
          },
          {
            "name": "machineName",
            "in": "query",
            "required": false,
            "description": "Unique machine name of the running IFC.",
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Status of the Hotel Interface either STOPPED or RUNNING.",
            "uniqueItems": true,
            "enum": [
              "Stopped",
              "Running",
              "Waiting",
              "StopInitiated",
              "StartInitiated",
              "RebootInitiated",
              "Other"
            ]
          },
          {
            "name": "activeFlag",
            "in": "query",
            "required": false,
            "description": "Indicator if the Hotel Interface is active or not. This is different from the Interface Status, which is either STOPPED or RUNNING.",
            "type": "boolean"
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "blockId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "blockIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "blockIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "roomId",
            "in": "query",
            "required": false,
            "description": "Wild card search value for Room number",
            "type": "string"
          },
          {
            "name": "lastName",
            "in": "query",
            "required": false,
            "description": "Wild card search value to lookup reservations with this last name",
            "type": "string"
          },
          {
            "name": "firstName",
            "in": "query",
            "required": false,
            "description": "Wild card search value to lookup reservations with this first name",
            "type": "string"
          },
          {
            "name": "reservationIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "reservationIdsContext",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "reservationIdsType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "arrivalEnd",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "arrivalStart",
            "in": "query",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "expectedArrivalEndTime",
            "in": "query",
            "required": false,
            "description": "The ending value of the time span.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "expectedArrivalStartTime",
            "in": "query",
            "required": false,
            "description": "The starting value of the time span.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "specialCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "floorCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "roomFeatureCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "roomClassCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "roomStatus",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Clean",
                "Dirty",
                "Pickup",
                "Inspected",
                "OutOfOrder",
                "OutOfService"
              ]
            },
            "required": false
          },
          {
            "name": "guaranteeCode",
            "in": "query",
            "required": false,
            "description": "Include reservations that have Guarantee Code(Reservation Type) only.",
            "type": "string"
          },
          {
            "name": "reservationStatus",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Reservation status type for reservations search.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Cancelled",
                "CheckedOut",
                "CheckedIn",
                "DueIn",
                "DueOut",
                "InHouse",
                "NoShow",
                "WaitList"
              ]
            },
            "required": false
          },
          {
            "name": "includeLinkedReservations",
            "in": "query",
            "required": false,
            "description": "Include linked reservations.",
            "type": "boolean"
          },
          {
            "name": "includeBlocks",
            "in": "query",
            "required": false,
            "description": "Include reservations attached to a block.",
            "type": "boolean"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A collection of supported sorting for Room Interface Status search results.",
            "uniqueItems": true,
            "enum": [
              "RoomNo",
              "Name",
              "ArrivalDateETR",
              "ArrivalDate"
            ]
          },
          {
            "name": "orderType",
            "in": "query",
            "required": false,
            "type": "string",
            "uniqueItems": true,
            "enum": [
              "Asc",
              "Desc"
            ]
          },
          {
            "name": "expectedReturnEndTime",
            "in": "query",
            "required": false,
            "description": "The ending value of the time span.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "expectedReturnStartTime",
            "in": "query",
            "required": false,
            "description": "The starting value of the time span.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "advanceCheckedIn",
            "in": "query",
            "required": false,
            "description": "Shows whether reservation is in Advance CheckIn state.",
            "type": "boolean"
          },
          {
            "name": "guaranteeCodes",
            "in": "query",
            "required": false,
            "description": "Fetches the reservation having Guarantee Codes(Reservation Type) supplied here. Example guaranteeCodes=6PM",
            "type": "array",
            "collectionFormat": "multi",
            "maxItems": 100,
            "items": {
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching room interface status",
            "schema": {
              "$ref": "#/definitions/roomInterfaceStatus"
            },
            "examples": {
              "application/json": {
                "roomInterfaceStatusList": [
                  {
                    "reservationIdList": [
                      {
                        "id": "string",
                        "type": "string"
                      }
                    ],
                    "roomStay": {
                      "arrivalDate": "2020-07-14",
                      "departureDate": "2020-07-14",
                      "originalTimeSpan": {
                        "startDate": "2020-07-14",
                        "endDate": "2020-07-14",
                        "duration": "string"
                      },
                      "expectedTimes": {
                        "reservationExpectedArrivalTime": "2020-07-14T09:52:51.964Z",
                        "reservationExpectedDepartureTime": "2020-07-14T09:52:51.964Z"
                      },
                      "adultCount": 0,
                      "childCount": 0,
                      "roomClass": "string",
                      "roomType": "string",
                      "numberOfRooms": 0,
                      "roomNumber": "string",
                      "ratePlanCode": "string",
                      "rateAmount": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "points": {
                        "awardsType": "string",
                        "points": 0
                      },
                      "rateSuppressed": true,
                      "reservationBlock": {
                        "blockIdList": [
                          {
                            "id": "string",
                            "type": "string"
                          }
                        ],
                        "blockName": "string",
                        "hotelId": "string"
                      },
                      "bookingChannelCode": "string",
                      "partyCode": "string",
                      "fixedRate": true,
                      "totalAmount": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "guarantee": {
                        "guaranteeCode": "string",
                        "shortDescription": "string",
                        "onHold": true
                      },
                      "promotion": {
                        "promotionCode": "string",
                        "promotionName": "string",
                        "couponCode": "string"
                      },
                      "marketCode": "string",
                      "sourceOfBusiness": "string",
                      "sourceOfBusinessDescription": "string",
                      "balance": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "compBalance": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "roomTypeCharged": "string",
                      "depositPayments": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "guestServiceStatus": "DoNotDisturb",
                      "scheduledCheckoutTime": "2020-07-14",
                      "roomNumberLocked": true,
                      "pseudoRoom": true
                    },
                    "reservationGuest": {
                      "membership": {
                        "membershipId": 0,
                        "programCode": "string",
                        "bonusCode": "string",
                        "membershipTypeDesc": "string",
                        "membershipLevelDesc": "string",
                        "accountId": "string",
                        "membershipLevel": "string",
                        "playerRanking": 0
                      },
                      "namePrefix": "string",
                      "givenName": "string",
                      "alternateGivenName": "string",
                      "middleName": "string",
                      "surnamePrefix": "string",
                      "surname": "string",
                      "alternateSurname": "string",
                      "nameSuffix": "string",
                      "nameTitle": "string",
                      "fullName": "string",
                      "alternateFullName": "string",
                      "phoneNumber": "string",
                      "email": "string",
                      "birthDate": "2020-07-14",
                      "language": "string",
                      "nationality": {
                        "value": "string",
                        "code": "string"
                      },
                      "vip": {
                        "vipCode": "string",
                        "vipDescription": "string"
                      },
                      "address": {
                        "cityName": "string",
                        "postalCode": "string",
                        "state": "string",
                        "country": {
                          "value": "string",
                          "code": "string"
                        },
                        "streetAddress": "string",
                        "excludeNoCity": true
                      },
                      "anonymization": {
                        "anonymizationStatus": "Requested",
                        "anonymizationDate": "2020-07-14T09:52:51.964Z"
                      },
                      "accompanyGuests": [
                        {
                          "firstName": "string",
                          "lastName": "string",
                          "fullName": "string",
                          "registrationCardNo": "string",
                          "profileIdList": [
                            {
                              "id": "string",
                              "type": "string"
                            }
                          ]
                        }
                      ],
                      "externalInfo": {
                        "givenName": "string",
                        "surname": "string"
                      },
                      "guestLastStayInfo": {
                        "lastStayDate": "2020-07-14",
                        "lastStayRoom": "string",
                        "lastStayRate": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "totalStay": 0
                      },
                      "guestRestrictedCode": "string",
                      "guestRestrictedReasonDesc": "string",
                      "guestRestricted": true,
                      "registrationCardNo": "string",
                      "nameType": "Guest",
                      "id": "string",
                      "type": "string"
                    },
                    "sharedGuests": [
                      {
                        "profileId": {
                          "url": "string",
                          "type": "string",
                          "instance": "string",
                          "idContext": "string",
                          "id": "string",
                          "idExtension": 0
                        },
                        "firstName": "string",
                        "lastName": "string",
                        "fullName": "string"
                      }
                    ],
                    "attachedProfiles": [
                      {
                        "name": "string",
                        "profileIdList": [
                          {
                            "id": "string",
                            "type": "string"
                          }
                        ],
                        "reservationProfileType": "Company"
                      }
                    ],
                    "reservationPaymentMethod": {
                      "paymentCard": {
                        "cardId": {
                          "id": "string",
                          "type": "string"
                        },
                        "currentAuthorizedAmount": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "approvalAmountNeeded": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "cardType": "Ab",
                        "userDefinedCardType": "string",
                        "cardNumber": "string",
                        "cardNumberMasked": "string",
                        "cardNumberLast4Digits": "string",
                        "expirationDate": "2020-07-14",
                        "expirationDateMasked": "string",
                        "expirationDateExpired": true,
                        "cardHolderName": "string",
                        "attachCreditCardToProfile": true,
                        "processing": "Eft",
                        "swiped": true,
                        "cardOrToken": "CardNumber"
                      },
                      "balance": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "authorizationRule": {
                        "code": 0,
                        "amount": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "percent": 0
                      },
                      "emailFolioInfo": {
                        "email": {
                          "emailAddress": "string",
                          "type": "string",
                          "typeDescription": "string",
                          "emailFormat": "Html",
                          "primaryInd": true,
                          "orderSequence": 0,
                          "createDateTime": "2020-07-14T09:52:51.965Z",
                          "creatorId": "string",
                          "lastModifyDateTime": "2020-07-14T09:52:51.965Z",
                          "lastModifierId": "string",
                          "purgeDate": "2020-07-14"
                        },
                        "emailFolio": true,
                        "id": "string",
                        "type": "string"
                      },
                      "paymentMethod": "string",
                      "description": "string",
                      "folioView": 0
                    },
                    "reservationFolioWindows": [
                      {
                        "payeeInfo": {
                          "payeeId": {
                            "id": "string",
                            "type": "string"
                          },
                          "payeeName": "string",
                          "payeeAddress": {
                            "address": {
                              "addressLine": [
                                "string"
                              ],
                              "cityName": "string",
                              "postalCode": "string",
                              "cityExtension": "string",
                              "county": "string",
                              "state": "string",
                              "country": {
                                "value": "string",
                                "code": "string"
                              },
                              "language": "string",
                              "type": "string",
                              "typeDescription": "string",
                              "primaryInd": true,
                              "updateReservations": true,
                              "barCode": "string",
                              "createDateTime": "2020-07-14T09:52:51.965Z",
                              "creatorId": "string",
                              "lastModifyDateTime": "2020-07-14T09:52:51.965Z",
                              "lastModifierId": "string",
                              "purgeDate": "2020-07-14"
                            },
                            "id": "string",
                            "type": "string"
                          },
                          "payeeAddressCount": 0,
                          "payeeReferenceCurrency": "string",
                          "payeeAccountInfo": {
                            "accountName": "string",
                            "accountId": {
                              "id": "string",
                              "type": "string"
                            },
                            "accountNo": "string",
                            "status": {
                              "restriction": "string",
                              "description": "string",
                              "restricted": true
                            }
                          },
                          "payeeTaxNumber": "string"
                        },
                        "balance": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "paymentMethod": "string",
                        "folioWindowNo": 0
                      }
                    ],
                    "specials": "string",
                    "lastPrivacyPromptDate": "2020-07-14",
                    "displayColor": "string",
                    "reservationIndicators": [
                      {
                        "indicatorName": "string",
                        "count": 0
                      }
                    ],
                    "roomStatus": "Clean",
                    "searchMatches": [
                      {
                        "attribute": "string",
                        "value": "string"
                      }
                    ],
                    "sourceOfSale": {
                      "sourceType": "string",
                      "sourceCode": "string"
                    },
                    "waitlist": {
                      "reasonDescription": "string",
                      "priorityDescription": "string",
                      "description": "string",
                      "reasonCode": "string",
                      "priorityCode": "string",
                      "telephone": "string"
                    },
                    "queue": {
                      "timeSpan": {
                        "startDate": "2020-07-14",
                        "endDate": "2020-07-14",
                        "duration": "string",
                        "durationInSeconds": 0
                      },
                      "guestTextInfo": {
                        "sentTime": "2020-07-14T09:52:51.965Z",
                        "sentBy": "string"
                      },
                      "priority": 0,
                      "averageQueueTimeToCheckIn": 0,
                      "averageQueueTimeCurrentReservations": 0,
                      "queueDate": "2020-07-14"
                    },
                    "housekeeping": {
                      "instructions": "string",
                      "facilityTaskInfo": {
                        "task": {
                          "description": "string",
                          "instructions": "string",
                          "facilityDepartureTask": true,
                          "linenChange": true,
                          "hotelId": "string",
                          "code": "string",
                          "sequence": 0
                        },
                        "supplies": [
                          {
                            "description": "string",
                            "quantity": 0,
                            "code": "string"
                          }
                        ],
                        "date": "2020-07-14"
                      },
                      "linenChange": true,
                      "turndownRequested": true,
                      "serviceTime": "2020-07-14",
                      "expectedServiceTime": "string",
                      "roomStatus": "Clean"
                    },
                    "cashiering": {
                      "revenuesAndBalances": {
                        "totalFixedCharge": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "totalPayment": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "roomRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "foodAndBevRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "otherRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "nonRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "totalRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "balance": {
                          "amount": 0,
                          "currencyCode": "string"
                        }
                      },
                      "billingPrivileges": {
                        "postingRestriction": true,
                        "preStayCharging": true,
                        "postStayCharging": true,
                        "folioCloseDate": "2020-07-14",
                        "scheduledCheckout": true,
                        "scheduledCheckoutTime": "2020-07-14",
                        "directBillAuthorized": true,
                        "videoCheckout": true,
                        "allowAutoCheckin": true,
                        "autoSettlement": true,
                        "autoSettlementType": "string",
                        "autoSettlementFreq": 0,
                        "creditLimitAutoPay": true
                      },
                      "taxType": {
                        "hotelId": "string",
                        "code": "string",
                        "description": "string",
                        "collectingAgentTax": true,
                        "printAutoAdjust": true,
                        "reportExemptDays": 0,
                        "reportTaxPercentage": 0,
                        "minimumLengthOfStay": 0,
                        "taxExemptNo": "string"
                      },
                      "bedTaxReporting": {
                        "taxRegistrationNo": 0,
                        "visaNumber": "string",
                        "visaIssueDate": "2020-07-14",
                        "visaExpiryDate": "2020-07-14",
                        "taxableDays": 0
                      },
                      "folioTexts": {
                        "folioText": [
                          {
                            "text": "string",
                            "row": 0
                          }
                        ]
                      },
                      "periodicFolio": {
                        "lastSettlementDate": "2020-07-14",
                        "lastFolioDate": "2020-07-14",
                        "frequency": 0
                      },
                      "compAccounting": {
                        "compType": "string",
                        "authorizer": "string"
                      },
                      "reservationPreConfiguredRoutingInstruction": {
                        "authorizerInfo": {
                          "authorizerId": {
                            "id": "string",
                            "type": "string"
                          },
                          "authorizerUserName": "string",
                          "authorizerName": "string",
                          "authorizerRateCode": "string",
                          "inheritAuthorizerRateCode": true
                        },
                        "ratePlanCode": "string",
                        "profileType": "Company",
                        "promotionCode": "string"
                      },
                      "financiallyResponsible": true,
                      "proratedBilling": true,
                      "lastRoomAndTaxPostedDate": "2020-07-14",
                      "reverseCheckInAllowed": true,
                      "reverseAdvanceCheckInAllowed": true,
                      "transactionsPosted": true
                    },
                    "taxType": {
                      "hotelId": "string",
                      "code": "string",
                      "description": "string",
                      "collectingAgentTax": true,
                      "printAutoAdjust": true,
                      "reportExemptDays": 0,
                      "reportTaxPercentage": 0,
                      "minimumLengthOfStay": 0
                    },
                    "deposit": {
                      "amountRequired": 0,
                      "amountPaid": 0,
                      "amountOwed": 0,
                      "dueDate": "2020-07-14",
                      "postingDate": "2020-07-14",
                      "hasPaid": true,
                      "hasOutstanding": true
                    },
                    "allowedActions": [
                      "Cancel"
                    ],
                    "revenuesAndBalances": {
                      "totalFixedCharge": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "totalPayment": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "roomRevenue": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "foodAndBevRevenue": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "otherRevenue": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "nonRevenue": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "totalRevenue": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "balance": {
                        "amount": 0,
                        "currencyCode": "string"
                      }
                    },
                    "hotelInterfaceStatusList": [
                      {
                        "roomExtension": "string",
                        "hotelInterface": {
                          "interfaceId": {
                            "id": "string",
                            "type": "string"
                          },
                          "hotelId": "string",
                          "interfaceName": "string",
                          "interfaceType": "Bms",
                          "logo": "string",
                          "machineName": "string",
                          "status": "Stopped",
                          "activeFlag": true
                        },
                        "interfaceRights": [
                          {
                            "right": 0,
                            "statusCode": "string",
                            "description": "string",
                            "category": "string"
                          }
                        ]
                      }
                    ],
                    "guestPreferredCurrency": "string",
                    "turndownInfo": {
                      "allowed": true,
                      "status": "Required"
                    },
                    "mobileNotifications": {
                      "roomReady": "Pending",
                      "keyReady": "Pending",
                      "checkoutMessageReceived": true,
                      "requiresAction": true,
                      "errorMessage": "string"
                    },
                    "reservationCommunication": {
                      "telephones": {
                        "telephoneInfo": [
                          {
                            "telephone": {
                              "phoneTechType": "string",
                              "phoneUseType": "string",
                              "phoneUseTypeDescription": "string",
                              "phoneNumber": "string",
                              "extension": "string",
                              "primaryInd": true,
                              "orderSequence": 0,
                              "createDateTime": "2020-07-14T09:52:51.965Z",
                              "creatorId": "string",
                              "lastModifyDateTime": "2020-07-14T09:52:51.965Z",
                              "lastModifierId": "string",
                              "purgeDate": "2020-07-14"
                            },
                            "id": "string",
                            "type": "string"
                          }
                        ],
                        "hasMore": true,
                        "totalResults": 0,
                        "count": 0
                      },
                      "emails": {
                        "emailInfo": [
                          {
                            "email": {
                              "emailAddress": "string",
                              "type": "string",
                              "typeDescription": "string",
                              "emailFormat": "Html",
                              "primaryInd": true,
                              "orderSequence": 0,
                              "createDateTime": "2020-07-14T09:52:51.965Z",
                              "creatorId": "string",
                              "lastModifyDateTime": "2020-07-14T09:52:51.965Z",
                              "lastModifierId": "string",
                              "purgeDate": "2020-07-14"
                            },
                            "id": "string",
                            "type": "string"
                          }
                        ],
                        "hasMore": true,
                        "totalResults": 0,
                        "count": 0
                      }
                    },
                    "advanceCheckIn": {
                      "advanceCheckedIn": true,
                      "expectedReturnTime": "2020-07-14T09:52:51.965Z",
                      "eTRComments": "string"
                    },
                    "welcomeOffer": true,
                    "cancellationInfo": {
                      "description": "string",
                      "code": "string",
                      "date": "2020-07-14"
                    },
                    "keyCount": 0,
                    "hotelId": "string",
                    "hotelName": "string",
                    "expectedServiceTime": "string",
                    "roomStayReservation": true,
                    "createDateTime": "2020-07-14T09:52:51.965Z",
                    "creatorId": "string",
                    "lastModifyDateTime": "2020-07-14T09:52:51.965Z",
                    "lastModifierId": "string",
                    "purgeDate": "2020-07-14",
                    "reservationStatus": "Reserved",
                    "computedReservationStatus": "Reserved",
                    "walkInIndicator": true,
                    "accessRestriction": "Change",
                    "commissionPayoutTo": "TravelAgent",
                    "paymentMethod": "string",
                    "preRegistered": true,
                    "openFolio": true,
                    "allowMobileCheckout": true,
                    "allowMobileViewFolio": true,
                    "optedForCommunication": true
                  }
                ],
                "links": [
                  {
                    "href": "string",
                    "rel": "string",
                    "templated": false,
                    "method": "GET",
                    "targetSchema": "string",
                    "operationId": "string",
                    "title": "string"
                  }
                ]
              }
            }
          },
          "204": {
            "description": "RoomInterfaceStatus not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      },
      "put": {
        "summary": "Change room interface status",
        "description": "You can use this API to change room interface status. <p><strong>OperationId:</strong>putRoomInterfaceStatus</p>",
        "operationId": "putRoomInterfaceStatus",
        "parameters": [
          {
            "name": "interfaceId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "reservationInterface",
            "in": "body",
            "required": true,
            "description": "Request to change the interface status for a reservation.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservationInterface"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/keyInterfaces": {
      "get": {
        "summary": "Get key encoder interface configuration details",
        "description": "You can use thie API to get key encoder interface configuration details. <p><strong>OperationId:</strong>getRoomKeyInterfaceDetails</p>",
        "operationId": "getRoomKeyInterfaceDetails",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "roomNumbersCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "interfaceId",
            "in": "query",
            "required": false,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique DB internal number of a Hotel Interface record."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response with the configuration details of active room key interfaces including the available key encoders.",
            "schema": {
              "$ref": "#/definitions/roomKeyInterfaceDetails"
            }
          },
          "204": {
            "description": "RoomKeyInterfaceDetails not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/queueReservationsStatistics": {
      "get": {
        "summary": "Get hotel reservation queue statistics",
        "description": "Use this API to return reservation queue statistics for a specific property.<p><strong>OperationId:</strong>getReservationQueueStatistics</p>",
        "operationId": "getReservationQueueStatistics",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for the fetch of current Reservations In Queue statistics. Contains the statistic information.",
            "schema": {
              "$ref": "#/definitions/reservationQueueStatistics"
            }
          },
          "204": {
            "description": "ReservationQueueStatistics not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FOFStats"
        ]
      }
    },
    "/hotels/{hotelId}/queuedReservations": {
      "get": {
        "summary": "Get the reservation in queue",
        "description": "Fetch all current reservations that are Queued Reservations.  These reservations are guests that have arrived at the hotel, but their room isn't ready, so they're sitting in a queue.  <p><strong>OperationId:</strong>getReservationsInQueue</p>",
        "operationId": "getReservationsInQueue",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "roomClassCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "roomTypeCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "roomNumberWildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search of reservations in queue by Room Number.",
            "type": "string"
          },
          {
            "name": "guestNameWildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search of reservations in queue by Guest Name.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for the operation to fetch Reservations in Queue",
            "schema": {
              "$ref": "#/definitions/reservationsInQueue"
            },
            "examples": {
              "application/json": {
                "reservations": {
                  "reservationInfo": [
                    {
                      "reservationIdList": [
                        {
                          "id": "string",
                          "type": "string"
                        }
                      ],
                      "roomStay": {
                        "arrivalDate": "2020-07-14",
                        "departureDate": "2020-07-14",
                        "originalTimeSpan": {
                          "startDate": "2020-07-14",
                          "endDate": "2020-07-14",
                          "duration": "string"
                        },
                        "expectedTimes": {
                          "reservationExpectedArrivalTime": "2020-07-14T10:05:39.352Z",
                          "reservationExpectedDepartureTime": "2020-07-14T10:05:39.352Z"
                        },
                        "adultCount": 0,
                        "childCount": 0,
                        "roomClass": "string",
                        "roomType": "string",
                        "numberOfRooms": 0,
                        "roomNumber": "string",
                        "ratePlanCode": "string",
                        "rateAmount": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "points": {
                          "awardsType": "string",
                          "points": 0
                        },
                        "rateSuppressed": true,
                        "reservationBlock": {
                          "blockIdList": [
                            {
                              "id": "string",
                              "type": "string"
                            }
                          ],
                          "blockName": "string",
                          "hotelId": "string"
                        },
                        "bookingChannelCode": "string",
                        "partyCode": "string",
                        "fixedRate": true,
                        "totalAmount": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "guarantee": {
                          "guaranteeCode": "string",
                          "shortDescription": "string",
                          "onHold": true
                        },
                        "promotion": {
                          "promotionCode": "string",
                          "promotionName": "string",
                          "couponCode": "string"
                        },
                        "marketCode": "string",
                        "sourceOfBusiness": "string",
                        "sourceOfBusinessDescription": "string",
                        "balance": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "compBalance": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "roomTypeCharged": "string",
                        "depositPayments": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "guestServiceStatus": "DoNotDisturb",
                        "scheduledCheckoutTime": "2020-07-14",
                        "roomNumberLocked": true,
                        "pseudoRoom": true
                      },
                      "reservationGuest": {
                        "membership": {
                          "membershipId": 0,
                          "programCode": "string",
                          "bonusCode": "string",
                          "membershipTypeDesc": "string",
                          "membershipLevelDesc": "string",
                          "accountId": "string",
                          "membershipLevel": "string",
                          "playerRanking": 0
                        },
                        "namePrefix": "string",
                        "givenName": "string",
                        "alternateGivenName": "string",
                        "middleName": "string",
                        "surnamePrefix": "string",
                        "surname": "string",
                        "alternateSurname": "string",
                        "nameSuffix": "string",
                        "nameTitle": "string",
                        "fullName": "string",
                        "alternateFullName": "string",
                        "phoneNumber": "string",
                        "email": "string",
                        "birthDate": "2020-07-14",
                        "language": "string",
                        "nationality": {
                          "value": "string",
                          "code": "string"
                        },
                        "vip": {
                          "vipCode": "string",
                          "vipDescription": "string"
                        },
                        "address": {
                          "cityName": "string",
                          "postalCode": "string",
                          "state": "string",
                          "country": {
                            "value": "string",
                            "code": "string"
                          },
                          "streetAddress": "string",
                          "excludeNoCity": true
                        },
                        "anonymization": {
                          "anonymizationStatus": "Requested",
                          "anonymizationDate": "2020-07-14T10:05:39.352Z"
                        },
                        "accompanyGuests": [
                          {
                            "firstName": "string",
                            "lastName": "string",
                            "fullName": "string",
                            "registrationCardNo": "string",
                            "profileIdList": [
                              {
                                "id": "string",
                                "type": "string"
                              }
                            ]
                          }
                        ],
                        "externalInfo": {
                          "givenName": "string",
                          "surname": "string"
                        },
                        "guestLastStayInfo": {
                          "lastStayDate": "2020-07-14",
                          "lastStayRoom": "string",
                          "lastStayRate": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "totalStay": 0
                        },
                        "guestRestrictedCode": "string",
                        "guestRestrictedReasonDesc": "string",
                        "guestRestricted": true,
                        "registrationCardNo": "string",
                        "nameType": "Guest",
                        "id": "string",
                        "type": "string"
                      },
                      "sharedGuests": [
                        {
                          "profileId": {
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0
                          },
                          "firstName": "string",
                          "lastName": "string",
                          "fullName": "string"
                        }
                      ],
                      "attachedProfiles": [
                        {
                          "name": "string",
                          "profileIdList": [
                            {
                              "id": "string",
                              "type": "string"
                            }
                          ],
                          "reservationProfileType": "Company"
                        }
                      ],
                      "reservationPaymentMethod": {
                        "paymentCard": {
                          "cardId": {
                            "id": "string",
                            "type": "string"
                          },
                          "currentAuthorizedAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "approvalAmountNeeded": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "cardType": "Ab",
                          "userDefinedCardType": "string",
                          "cardNumber": "string",
                          "cardNumberMasked": "string",
                          "cardNumberLast4Digits": "string",
                          "expirationDate": "2020-07-14",
                          "expirationDateMasked": "string",
                          "expirationDateExpired": true,
                          "cardHolderName": "string",
                          "attachCreditCardToProfile": true,
                          "processing": "Eft",
                          "swiped": true,
                          "cardOrToken": "CardNumber"
                        },
                        "balance": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "authorizationRule": {
                          "code": 0,
                          "amount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "percent": 0
                        },
                        "emailFolioInfo": {
                          "email": {
                            "emailAddress": "string",
                            "type": "string",
                            "typeDescription": "string",
                            "emailFormat": "Html",
                            "primaryInd": true,
                            "orderSequence": 0,
                            "createDateTime": "2020-07-14T10:05:39.352Z",
                            "creatorId": "string",
                            "lastModifyDateTime": "2020-07-14T10:05:39.352Z",
                            "lastModifierId": "string",
                            "purgeDate": "2020-07-14"
                          },
                          "emailFolio": true,
                          "id": "string",
                          "type": "string"
                        },
                        "paymentMethod": "string",
                        "description": "string",
                        "folioView": 0
                      },
                      "reservationFolioWindows": [
                        {
                          "payeeInfo": {
                            "payeeId": {
                              "id": "string",
                              "type": "string"
                            },
                            "payeeName": "string",
                            "payeeAddress": {
                              "address": {
                                "addressLine": [
                                  "string"
                                ],
                                "cityName": "string",
                                "postalCode": "string",
                                "cityExtension": "string",
                                "county": "string",
                                "state": "string",
                                "country": {
                                  "value": "string",
                                  "code": "string"
                                },
                                "language": "string",
                                "type": "string",
                                "typeDescription": "string",
                                "primaryInd": true,
                                "updateReservations": true,
                                "barCode": "string",
                                "createDateTime": "2020-07-14T10:05:39.352Z",
                                "creatorId": "string",
                                "lastModifyDateTime": "2020-07-14T10:05:39.352Z",
                                "lastModifierId": "string",
                                "purgeDate": "2020-07-14"
                              },
                              "id": "string",
                              "type": "string"
                            },
                            "payeeAddressCount": 0,
                            "payeeReferenceCurrency": "string",
                            "payeeAccountInfo": {
                              "accountName": "string",
                              "accountId": {
                                "id": "string",
                                "type": "string"
                              },
                              "accountNo": "string",
                              "status": {
                                "restriction": "string",
                                "description": "string",
                                "restricted": true
                              }
                            },
                            "payeeTaxNumber": "string"
                          },
                          "balance": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "paymentMethod": "string",
                          "folioWindowNo": 0
                        }
                      ],
                      "specials": "string",
                      "lastPrivacyPromptDate": "2020-07-14",
                      "displayColor": "string",
                      "reservationIndicators": [
                        {
                          "indicatorName": "string",
                          "count": 0
                        }
                      ],
                      "roomStatus": "Clean",
                      "searchMatches": [
                        {
                          "attribute": "string",
                          "value": "string"
                        }
                      ],
                      "sourceOfSale": {
                        "sourceType": "string",
                        "sourceCode": "string"
                      },
                      "waitlist": {
                        "reasonDescription": "string",
                        "priorityDescription": "string",
                        "description": "string",
                        "reasonCode": "string",
                        "priorityCode": "string",
                        "telephone": "string"
                      },
                      "queue": {
                        "timeSpan": {
                          "startDate": "2020-07-14",
                          "endDate": "2020-07-14",
                          "duration": "string",
                          "durationInSeconds": 0
                        },
                        "guestTextInfo": {
                          "sentTime": "2020-07-14T10:05:39.352Z",
                          "sentBy": "string"
                        },
                        "priority": 0,
                        "averageQueueTimeToCheckIn": 0,
                        "averageQueueTimeCurrentReservations": 0,
                        "queueDate": "2020-07-14"
                      },
                      "housekeeping": {
                        "instructions": "string",
                        "facilityTaskInfo": {
                          "task": {
                            "description": "string",
                            "instructions": "string",
                            "facilityDepartureTask": true,
                            "linenChange": true,
                            "hotelId": "string",
                            "code": "string",
                            "sequence": 0
                          },
                          "supplies": [
                            {
                              "description": "string",
                              "quantity": 0,
                              "code": "string"
                            }
                          ],
                          "date": "2020-07-14"
                        },
                        "linenChange": true,
                        "turndownRequested": true,
                        "serviceTime": "2020-07-14",
                        "expectedServiceTime": "string",
                        "roomStatus": "Clean"
                      },
                      "cashiering": {
                        "revenuesAndBalances": {
                          "totalFixedCharge": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "totalPayment": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "roomRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "foodAndBevRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "otherRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "nonRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "totalRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "balance": {
                            "amount": 0,
                            "currencyCode": "string"
                          }
                        },
                        "billingPrivileges": {
                          "postingRestriction": true,
                          "preStayCharging": true,
                          "postStayCharging": true,
                          "folioCloseDate": "2020-07-14",
                          "scheduledCheckout": true,
                          "scheduledCheckoutTime": "2020-07-14",
                          "directBillAuthorized": true,
                          "videoCheckout": true,
                          "allowAutoCheckin": true,
                          "autoSettlement": true,
                          "autoSettlementType": "string",
                          "autoSettlementFreq": 0,
                          "creditLimitAutoPay": true
                        },
                        "taxType": {
                          "hotelId": "string",
                          "code": "string",
                          "description": "string",
                          "collectingAgentTax": true,
                          "printAutoAdjust": true,
                          "reportExemptDays": 0,
                          "reportTaxPercentage": 0,
                          "minimumLengthOfStay": 0,
                          "taxExemptNo": "string"
                        },
                        "bedTaxReporting": {
                          "taxRegistrationNo": 0,
                          "visaNumber": "string",
                          "visaIssueDate": "2020-07-14",
                          "visaExpiryDate": "2020-07-14",
                          "taxableDays": 0
                        },
                        "folioTexts": {
                          "folioText": [
                            {
                              "text": "string",
                              "row": 0
                            }
                          ]
                        },
                        "periodicFolio": {
                          "lastSettlementDate": "2020-07-14",
                          "lastFolioDate": "2020-07-14",
                          "frequency": 0
                        },
                        "compAccounting": {
                          "compType": "string",
                          "authorizer": "string"
                        },
                        "reservationPreConfiguredRoutingInstruction": {
                          "authorizerInfo": {
                            "authorizerId": {
                              "id": "string",
                              "type": "string"
                            },
                            "authorizerUserName": "string",
                            "authorizerName": "string",
                            "authorizerRateCode": "string",
                            "inheritAuthorizerRateCode": true
                          },
                          "ratePlanCode": "string",
                          "profileType": "Company",
                          "promotionCode": "string"
                        },
                        "financiallyResponsible": true,
                        "proratedBilling": true,
                        "lastRoomAndTaxPostedDate": "2020-07-14",
                        "reverseCheckInAllowed": true,
                        "reverseAdvanceCheckInAllowed": true,
                        "transactionsPosted": true
                      },
                      "taxType": {
                        "hotelId": "string",
                        "code": "string",
                        "description": "string",
                        "collectingAgentTax": true,
                        "printAutoAdjust": true,
                        "reportExemptDays": 0,
                        "reportTaxPercentage": 0,
                        "minimumLengthOfStay": 0
                      },
                      "deposit": {
                        "amountRequired": 0,
                        "amountPaid": 0,
                        "amountOwed": 0,
                        "dueDate": "2020-07-14",
                        "postingDate": "2020-07-14",
                        "hasPaid": true,
                        "hasOutstanding": true
                      },
                      "allowedActions": [
                        "Cancel"
                      ],
                      "revenuesAndBalances": {
                        "totalFixedCharge": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "totalPayment": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "roomRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "foodAndBevRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "otherRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "nonRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "totalRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "balance": {
                          "amount": 0,
                          "currencyCode": "string"
                        }
                      },
                      "hotelInterfaceStatusList": [
                        {
                          "roomExtension": "string",
                          "hotelInterface": {
                            "interfaceId": {
                              "id": "string",
                              "type": "string"
                            },
                            "hotelId": "string",
                            "interfaceName": "string",
                            "interfaceType": "Bms",
                            "logo": "string",
                            "machineName": "string",
                            "status": "Stopped",
                            "activeFlag": true
                          },
                          "interfaceRights": [
                            {
                              "right": 0,
                              "statusCode": "string",
                              "description": "string",
                              "category": "string"
                            }
                          ]
                        }
                      ],
                      "guestPreferredCurrency": "string",
                      "turndownInfo": {
                        "allowed": true,
                        "status": "Required"
                      },
                      "mobileNotifications": {
                        "roomReady": "Pending",
                        "keyReady": "Pending",
                        "checkoutMessageReceived": true,
                        "requiresAction": true,
                        "errorMessage": "string"
                      },
                      "reservationCommunication": {
                        "telephones": {
                          "telephoneInfo": [
                            {
                              "telephone": {
                                "phoneTechType": "string",
                                "phoneUseType": "string",
                                "phoneUseTypeDescription": "string",
                                "phoneNumber": "string",
                                "extension": "string",
                                "primaryInd": true,
                                "orderSequence": 0,
                                "createDateTime": "2020-07-14T10:05:39.353Z",
                                "creatorId": "string",
                                "lastModifyDateTime": "2020-07-14T10:05:39.353Z",
                                "lastModifierId": "string",
                                "purgeDate": "2020-07-14"
                              },
                              "id": "string",
                              "type": "string"
                            }
                          ],
                          "hasMore": true,
                          "totalResults": 0,
                          "count": 0
                        },
                        "emails": {
                          "emailInfo": [
                            {
                              "email": {
                                "emailAddress": "string",
                                "type": "string",
                                "typeDescription": "string",
                                "emailFormat": "Html",
                                "primaryInd": true,
                                "orderSequence": 0,
                                "createDateTime": "2020-07-14T10:05:39.353Z",
                                "creatorId": "string",
                                "lastModifyDateTime": "2020-07-14T10:05:39.353Z",
                                "lastModifierId": "string",
                                "purgeDate": "2020-07-14"
                              },
                              "id": "string",
                              "type": "string"
                            }
                          ],
                          "hasMore": true,
                          "totalResults": 0,
                          "count": 0
                        }
                      },
                      "advanceCheckIn": {
                        "advanceCheckedIn": true,
                        "expectedReturnTime": "2020-07-14T10:05:39.353Z",
                        "eTRComments": "string"
                      },
                      "welcomeOffer": true,
                      "cancellationInfo": {
                        "description": "string",
                        "code": "string",
                        "date": "2020-07-14"
                      },
                      "keyCount": 0,
                      "hotelId": "string",
                      "hotelName": "string",
                      "expectedServiceTime": "string",
                      "roomStayReservation": true,
                      "createDateTime": "2020-07-14T10:05:39.353Z",
                      "creatorId": "string",
                      "lastModifyDateTime": "2020-07-14T10:05:39.353Z",
                      "lastModifierId": "string",
                      "purgeDate": "2020-07-14",
                      "reservationStatus": "Reserved",
                      "computedReservationStatus": "Reserved",
                      "walkInIndicator": true,
                      "accessRestriction": "Change",
                      "commissionPayoutTo": "TravelAgent",
                      "paymentMethod": "string",
                      "preRegistered": true,
                      "openFolio": true,
                      "allowMobileCheckout": true,
                      "allowMobileViewFolio": true,
                      "optedForCommunication": true
                    }
                  ],
                  "hasMore": true,
                  "totalResults": 0,
                  "count": 0
                },
                "roomStatusInfo": {
                  "room": [
                    {
                      "roomType": {
                        "pseudo": true,
                        "suite": true,
                        "roomClass": "string",
                        "shortDescription": "string",
                        "houseKeeping": true,
                        "smokingPreference": "string",
                        "building": "string",
                        "roomAssignmentRating": "MostImportant",
                        "minimumOccupancy": 0,
                        "maximumOccupancy": 0,
                        "roomFeatures": [
                          {
                            "code": "string",
                            "description": "string",
                            "orderSequence": 0,
                            "quantity": 0
                          }
                        ],
                        "accessible": true,
                        "roomType": "string",
                        "meetingRoom": true
                      },
                      "floor": "string",
                      "floorDescription": "string",
                      "roomFeatures": [
                        {
                          "code": "string",
                          "description": "string",
                          "orderSequence": 0,
                          "quantity": 0
                        }
                      ],
                      "roomDescription": "string",
                      "description": {
                        "defaultText": "string",
                        "translatedTexts": {
                          "text": [
                            {
                              "value": "string",
                              "language": "string"
                            }
                          ]
                        }
                      },
                      "smokingPreference": "string",
                      "smokingPreferenceDescription": "string",
                      "building": "string",
                      "roomAssignmentRating": "MostImportant",
                      "accessible": true,
                      "roomId": "string",
                      "meetingRoom": true,
                      "roomSection": {
                        "daySectionCode": "string",
                        "eveningSectionCode": "string"
                      },
                      "housekeeping": {
                        "roomStatus": {
                          "reservationStatusList": [
                            "Arrival"
                          ],
                          "roomStatus": "Clean",
                          "frontOfficeStatus": "Vacant",
                          "housekeepingStatus": "Vacant"
                        },
                        "roomPersons": {
                          "frontOfficePersons": 0,
                          "houseKeepingPersons": 0
                        },
                        "guestServiceRequest": "DoNotDisturb",
                        "cleaningPriority": {
                          "prioritySequence": 0
                        },
                        "roomCondition": {
                          "roomCondition": {
                            "code": "string",
                            "description": "string"
                          },
                          "assignmentType": "Available",
                          "remarks": "string"
                        },
                        "linenChange": true,
                        "facilityTaskCode": [
                          "string"
                        ]
                      },
                      "outOfOrder": [
                        {
                          "repairRemarks": "string",
                          "returnStatus": "Clean",
                          "reasonCode": "string",
                          "reasonDesc": "string",
                          "newDateRange": {
                            "start": "2020-07-14",
                            "end": "2020-07-14"
                          },
                          "roomStatus": "Clean",
                          "start": "2020-07-14",
                          "end": "2020-07-14"
                        }
                      ],
                      "discrepancy": [
                        "Sleep"
                      ],
                      "sitePlanSection": {
                        "sectionCode": "string",
                        "sectionType": "string",
                        "linkCode": "string",
                        "coordinates": "string",
                        "description": "string"
                      },
                      "componentRoomNumber": "string",
                      "connectingRooms": [
                        {
                          "roomType": {
                            "pseudo": true,
                            "suite": true,
                            "roomClass": "string",
                            "shortDescription": "string",
                            "houseKeeping": true,
                            "smokingPreference": "string",
                            "building": "string",
                            "roomAssignmentRating": "MostImportant",
                            "minimumOccupancy": 0,
                            "maximumOccupancy": 0,
                            "roomFeatures": [
                              {
                                "code": "string",
                                "description": "string",
                                "orderSequence": 0,
                                "quantity": 0
                              }
                            ],
                            "accessible": true,
                            "roomType": "string",
                            "meetingRoom": true
                          },
                          "floor": "string",
                          "floorDescription": "string",
                          "roomFeatures": [
                            {
                              "code": "string",
                              "description": "string",
                              "orderSequence": 0,
                              "quantity": 0
                            }
                          ],
                          "roomDescription": "string",
                          "description": {
                            "defaultText": "string",
                            "translatedTexts": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "smokingPreference": "string",
                          "smokingPreferenceDescription": "string",
                          "building": "string",
                          "roomAssignmentRating": "MostImportant",
                          "accessible": true,
                          "roomId": "string",
                          "meetingRoom": true,
                          "roomCondition": {
                            "code": "string",
                            "description": "string"
                          }
                        }
                      ],
                      "componentRooms": [
                        {
                          "roomType": {
                            "pseudo": true,
                            "suite": true,
                            "roomClass": "string",
                            "shortDescription": "string",
                            "houseKeeping": true,
                            "smokingPreference": "string",
                            "building": "string",
                            "roomAssignmentRating": "MostImportant",
                            "minimumOccupancy": 0,
                            "maximumOccupancy": 0,
                            "roomFeatures": [
                              {
                                "code": "string",
                                "description": "string",
                                "orderSequence": 0,
                                "quantity": 0
                              }
                            ],
                            "accessible": true,
                            "roomType": "string",
                            "meetingRoom": true
                          },
                          "floor": "string",
                          "floorDescription": "string",
                          "roomFeatures": [
                            {
                              "code": "string",
                              "description": "string",
                              "orderSequence": 0,
                              "quantity": 0
                            }
                          ],
                          "roomDescription": "string",
                          "description": {
                            "defaultText": "string",
                            "translatedTexts": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "smokingPreference": "string",
                          "smokingPreferenceDescription": "string",
                          "building": "string",
                          "roomAssignmentRating": "MostImportant",
                          "accessible": true,
                          "roomId": "string",
                          "meetingRoom": true,
                          "roomCondition": {
                            "code": "string",
                            "description": "string"
                          }
                        }
                      ],
                      "attendant": [
                        {
                          "section": {
                            "hotelId": "string",
                            "code": "string",
                            "description": "string",
                            "sectionGroup": "string",
                            "targetCredits": 0,
                            "rooms": 0,
                            "roomCredits": 0,
                            "sequence": 0,
                            "inactive": true
                          },
                          "floor": "string",
                          "attendantId": "string",
                          "attendantName": "string",
                          "hotelId": "string",
                          "activeFlag": "string",
                          "sunday": true,
                          "monday": true,
                          "tuesday": true,
                          "wednesday": true,
                          "thursday": true,
                          "friday": true,
                          "saturday": true,
                          "appUser": {
                            "hotel": {
                              "code": "string",
                              "description": "string"
                            },
                            "appUser": "string",
                            "lDAPUser": "string",
                            "actAs": "string",
                            "actAt": "string",
                            "userDefaultLanguage": "string",
                            "appUserId": {
                              "id": "string",
                              "type": "string"
                            },
                            "cashierId": 0,
                            "cashierTitle": "string",
                            "department": "string",
                            "departmentLocation": "string",
                            "salesRepCode": "string",
                            "expiryDate": "2020-07-14",
                            "disabledUntil": "2020-07-14",
                            "passwordChangeDate": "2020-07-14",
                            "userInfo": {
                              "personName": {
                                "namePrefix": "string",
                                "givenName": "string",
                                "middleName": "string",
                                "surname": "string",
                                "nameSuffix": "string",
                                "nameTitle": "string",
                                "nameTitleSuffix": 0,
                                "envelopeGreeting": "string",
                                "salutation": "string",
                                "nameType": "Primary",
                                "language": "string",
                                "externalSystem": "string"
                              },
                              "profileId": {
                                "id": "string",
                                "type": "string"
                              },
                              "addressInfo": {
                                "address": {
                                  "addressLine": [
                                    "string"
                                  ],
                                  "cityName": "string",
                                  "postalCode": "string",
                                  "cityExtension": "string",
                                  "county": "string",
                                  "state": "string",
                                  "country": {
                                    "value": "string",
                                    "code": "string"
                                  },
                                  "language": "string",
                                  "type": "string",
                                  "typeDescription": "string",
                                  "primaryInd": true,
                                  "updateReservations": true,
                                  "barCode": "string",
                                  "createDateTime": "2020-07-14T10:05:39.354Z",
                                  "creatorId": "string",
                                  "lastModifyDateTime": "2020-07-14T10:05:39.354Z",
                                  "lastModifierId": "string",
                                  "purgeDate": "2020-07-14"
                                },
                                "id": "string",
                                "type": "string"
                              },
                              "emailInfo": {
                                "email": {
                                  "emailAddress": "string",
                                  "type": "string",
                                  "typeDescription": "string",
                                  "emailFormat": "Html",
                                  "primaryInd": true,
                                  "orderSequence": 0,
                                  "createDateTime": "2020-07-14T10:05:39.354Z",
                                  "creatorId": "string",
                                  "lastModifyDateTime": "2020-07-14T10:05:39.354Z",
                                  "lastModifierId": "string",
                                  "purgeDate": "2020-07-14"
                                },
                                "id": "string",
                                "type": "string"
                              },
                              "phoneInfo": {
                                "telephone": {
                                  "phoneTechType": "string",
                                  "phoneUseType": "string",
                                  "phoneUseTypeDescription": "string",
                                  "phoneNumber": "string",
                                  "extension": "string",
                                  "primaryInd": true,
                                  "orderSequence": 0,
                                  "createDateTime": "2020-07-14T10:05:39.354Z",
                                  "creatorId": "string",
                                  "lastModifyDateTime": "2020-07-14T10:05:39.354Z",
                                  "lastModifierId": "string",
                                  "purgeDate": "2020-07-14"
                                },
                                "id": "string",
                                "type": "string"
                              },
                              "department": {
                                "code": "string",
                                "description": "string"
                              },
                              "gender": "Male",
                              "birthDate": "2020-07-14",
                              "birthDateMasked": "string"
                            },
                            "userSessionInfo": {
                              "businessDate": "2020-07-14",
                              "systemDate": "2020-07-14",
                              "terminal": "string",
                              "runningApp": "string",
                              "shareProfiles": true,
                              "hotel": {
                                "code": "string",
                                "description": "string"
                              },
                              "cro": {
                                "code": "string",
                                "description": "string"
                              },
                              "chain": "string",
                              "cROCountryCode": "string",
                              "sessionDefaults": {
                                "dbDateFormat": "string",
                                "oracleDateFormat": "string",
                                "oracleTimeFormat": "string",
                                "javaDateFormat": "string",
                                "javaTimeFormat": "string",
                                "currencyCode": "string",
                                "currencyFormat": "string",
                                "defaultLanguage": "string",
                                "baseLanguage": "string"
                              },
                              "parameters": [
                                {
                                  "parameterName": "string",
                                  "parameterValue": "string"
                                }
                              ]
                            },
                            "attendantInfo": {
                              "attendantId": "string",
                              "hotelId": "string"
                            }
                          },
                          "startTime": "2020-07-14T10:05:39.354Z",
                          "status": "Standby"
                        }
                      ],
                      "hold": {
                        "holdUntil": "2020-07-14T10:05:39.354Z",
                        "holdUser": "string",
                        "comments": "string"
                      },
                      "turndownInfo": {
                        "turndownStatusInfo": "Required"
                      },
                      "resvInfo": [
                        {
                          "guestName": "string",
                          "reservationId": {
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0
                          },
                          "reservationStatusInfo": "Arrival",
                          "stayDateInfo": {
                            "timeSpan": {
                              "startDate": "2020-07-14",
                              "endDate": "2020-07-14",
                              "duration": "string"
                            },
                            "expectedTimes": {
                              "reservationExpectedArrivalTime": "2020-07-14T10:05:39.354Z",
                              "reservationExpectedDepartureTime": "2020-07-14T10:05:39.354Z"
                            }
                          },
                          "vipStatus": {
                            "value": "string",
                            "code": "string"
                          },
                          "profileId": {
                            "id": "string",
                            "type": "string"
                          }
                        }
                      ],
                      "componentRoomNumbers": {
                        "roomId": [
                          "string"
                        ]
                      }
                    }
                  ],
                  "hotelId": "string"
                },
                "links": [
                  {
                    "href": "string",
                    "rel": "string",
                    "templated": false,
                    "method": "GET",
                    "targetSchema": "string",
                    "operationId": "string",
                    "title": "string"
                  }
                ]
              }
            }
          },
          "204": {
            "description": "ReservationsInQueue not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/queuedReservations/{reservationId}": {
      "put": {
        "summary": "Add reservation to queue",
        "description": "Using this API you can assign reservations to the reservation queue if the guest's room is not ready for assignment or if there are no available rooms of the room type attached to the reservation. Housekeeping staff can use the Queue Rooms functionality to determine if there are guests waiting to check in to a particular room or type of room; if there are, the queue list can provide guidance in determining which rooms need attention first. <p><strong>OperationId:</strong>addReservationToQueue</p>",
        "operationId": "addReservationToQueue",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "queueReservation",
            "in": "body",
            "required": true,
            "description": "Request to add a reservation to the Queue for Check-In. A reservation can be added to the queue prior to Check-In on the day of arrival.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/queueReservation"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response to the request to add a reservation to the Queue for Check-In.",
            "schema": {
              "$ref": "#/definitions/reservationQueuePriority"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      },
      "delete": {
        "summary": "Delete reservation from queue",
        "description": "Use this API to remove a reservation that is already set as a Queued Reservation. <p><strong>OperationId:</strong>deleteReservationFromQueue</p>",
        "operationId": "deleteReservationFromQueue",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/reservationStatusStatistics": {
      "get": {
        "summary": "Get Reservation Status Statistics",
        "description": "This API will fetch reservation statistics for the given status per room type. <p><strong>OperationId:</strong>getReservationStatusStatistics</p>",
        "operationId": "getReservationStatusStatistics",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Hotel Code"
          },
          {
            "name": "reservationStatus",
            "in": "query",
            "collectionFormat": "multi",
            "required": true,
            "type": "array",
            "description": "Reservation statuses to fetch statistics for",
            "items": {
              "type": "string",
              "enum": [
                "DueIn",
                "DueOut",
                "CheckedIn",
                "CheckedOut"
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response of get Reservation Status Statistics.",
            "schema": {
              "$ref": "#/definitions/reservationStatusStatisticsResponseType"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FOFStats"
        ]
      }
    },
    "/hotels/{hotelId}/reservationSummaries": {
      "get": {
        "summary": "Get hotel reservation summaries",
        "description": "Use this API to return reservation summaries for a specific property based on search criteria such as reservationId, blockId, arrivalStart, membershipNumber, roomId, etc.<p><strong>OperationId:</strong>getReservationSummaries</p>",
        "operationId": "getReservationSummaries",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "searchType",
            "in": "query",
            "required": false,
            "type": "string",
            "uniqueItems": true,
            "enum": [
              "Any",
              "DayUse",
              "Arrival",
              "Arrived",
              "Departure",
              "WaitList",
              "Cancellation",
              "CheckedOut",
              "NoShow",
              "Complimentary",
              "InHouse",
              "PostStayPendingBalance",
              "PreRegistered",
              "PostToRoom",
              "OpenFolio",
              "ScheduledCheckOut",
              "Queued",
              "MobileCheckout",
              "RegisteredAndInHouse",
              "ResvBlockTraces",
              "GuestMessages",
              "MassCancellation",
              "Operator",
              "Turndown",
              "WalkIn",
              "AdvanceCheckedIn",
              "OpenBalance",
              "AutoFolioSettlement",
              "Routing",
              "PlayerSnapshot"
            ],
            "description": "Represents Reservation search type Player Snapshot."
          },
          {
            "name": "reservationId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "reservationIdContext",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "reservationIdType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "blockId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "blockIdContext",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "blockIdType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "arrivalEnd",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "arrivalStart",
            "in": "query",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "departureEnd",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "departureStart",
            "in": "query",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "stayOnEnd",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "stayOnStart",
            "in": "query",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "createdOnEnd",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "createOnStart",
            "in": "query",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "depositDateEnd",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "depositDateStart",
            "in": "query",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "dateCriteriaExpectedArrivalEndTime",
            "in": "query",
            "required": false,
            "description": "The ending value of the time span.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "dateCriteriaExpectedArrivalStartTime",
            "in": "query",
            "required": false,
            "description": "The starting value of the time span.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "depositDueDateEnd",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "depositDueDateStart",
            "in": "query",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "expectedReturnEndTime",
            "in": "query",
            "required": false,
            "description": "The ending value of the time span.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "expectedReturnStartTime",
            "in": "query",
            "required": false,
            "description": "The starting value of the time span.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "membershipNumber",
            "in": "query",
            "required": false,
            "description": "Lookup reservations with this membership number.",
            "type": "string"
          },
          {
            "name": "anyVIPStatus",
            "in": "query",
            "required": false,
            "description": "VIP status of the customer.",
            "type": "boolean"
          },
          {
            "name": "vipStatusCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "VIP status of the customer.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "roomId",
            "in": "query",
            "required": false,
            "description": "Wildcard Search value to lookup reservation with this room number.",
            "type": "string"
          },
          {
            "name": "lastName",
            "in": "query",
            "required": false,
            "description": "Wildcard Search value to lookup reservations with this Last Name.",
            "type": "string"
          },
          {
            "name": "firstName",
            "in": "query",
            "required": false,
            "description": "Wildcard Search value to lookup reservations with this First Name.",
            "type": "string"
          },
          {
            "name": "blockCode",
            "in": "query",
            "required": false,
            "description": "Wildcard Search value to lookup reservation with this block code.",
            "type": "string"
          },
          {
            "name": "companyName",
            "in": "query",
            "required": false,
            "description": "Lookup reservations with this company name.",
            "type": "string"
          },
          {
            "name": "travelAgentName",
            "in": "query",
            "required": false,
            "description": "Lookup reservations with this travel agent name.",
            "type": "string"
          },
          {
            "name": "creditCardNumber",
            "in": "query",
            "required": false,
            "description": "Lookup reservations which has this credit card attached.",
            "type": "string"
          },
          {
            "name": "customReference",
            "in": "query",
            "required": false,
            "description": "Lookup reservations with this custom reference number.",
            "type": "string"
          },
          {
            "name": "externalReference",
            "in": "query",
            "required": false,
            "description": "Lookup reservations with this external reference id.",
            "type": "string"
          },
          {
            "name": "attributeName",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Room",
                "Name",
                "ArrivalTime",
                "DepartureTime",
                "ArrivalDate",
                "DepartureDate"
              ]
            },
            "required": false
          },
          {
            "name": "orderType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Asc",
                "Desc"
              ]
            },
            "required": false
          },
          {
            "name": "expectedArrivalEndTime",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "expectedArrivalStartTime",
            "in": "query",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "roomTypes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Room Type.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "roomStatuses",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Clean",
                "Dirty",
                "Pickup",
                "Inspected",
                "OutOfOrder",
                "OutOfService"
              ]
            },
            "required": false
          },
          {
            "name": "paymentMethod",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Payment Method to search the reservation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "indicator",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple type that corresponds to reservation indicators.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Package",
                "Message",
                "Attachments",
                "Share",
                "Routing",
                "Itinerary",
                "Trace",
                "ServiceRequests",
                "Locator",
                "Comment",
                "AuthorizedBilling",
                "StayRevenue",
                "Preference",
                "ProfileNote",
                "NoPost",
                "DepositCancellation",
                "FixedCharge",
                "RateChange",
                "QmsTask",
                "Activity",
                "Queue",
                "Member",
                "CancelReason",
                "Extension",
                "OpenFolio",
                "PreStay",
                "PostStay",
                "WakeUpCall",
                "Alert",
                "ExternalQms",
                "Transport",
                "TrackIt",
                "Award",
                "ItemInventory",
                "Waitlist",
                "HistoryFuture",
                "Communication",
                "PrepaidCards",
                "WebRegistrationCards"
              ]
            },
            "required": false
          },
          {
            "name": "fetchSummaryInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple type for reservation summary instructions that can be used in requests to fetch summary.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ReservationPaymentMethods",
                "RoomDetails",
                "BlockReservationDetails"
              ]
            },
            "required": false
          },
          {
            "name": "allowedAction",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Flag indicating whether the Enrollment is in progress or not for the Profile associated with this Reservation.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Cancel",
                "Move",
                "PreCharge",
                "PostCharge",
                "FacilitySchedule",
                "Upsell",
                "PreCheckIn",
                "PostToNoShowCancel",
                "NoShow",
                "NameChange",
                "Discount",
                "HouseKeeping",
                "EnrollToPrimaryMembership",
                "EnrollInProgress"
              ]
            },
            "required": false
          },
          {
            "name": "keyword",
            "in": "query",
            "required": false,
            "description": "Wildcard search value to lookup reservation summaries with RoomId or First Name or Last Name. If both keyword and roomId/firstName/lastName is specified, keyword will take precedence.",
            "type": "string"
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple type for reservation instructions that can be used in requests to fetch necessary reservation summary details.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ShortReservationSummaries"
              ]
            },
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response of fetch room keys operation.",
            "schema": {
              "$ref": "#/definitions/shortReservation"
            },
            "examples": {
              "application/json": {
                "reservationInfoList": [
                  {
                    "reservationIdList": [
                      {
                        "id": "string",
                        "type": "string"
                      }
                    ],
                    "roomStay": {
                      "arrivalDate": "2020-07-14",
                      "departureDate": "2020-07-14",
                      "originalTimeSpan": {
                        "startDate": "2020-07-14",
                        "endDate": "2020-07-14",
                        "duration": "string"
                      },
                      "expectedTimes": {
                        "reservationExpectedArrivalTime": "2020-07-14T09:50:47.983Z",
                        "reservationExpectedDepartureTime": "2020-07-14T09:50:47.983Z"
                      },
                      "adultCount": 0,
                      "childCount": 0,
                      "roomClass": "string",
                      "roomType": "string",
                      "numberOfRooms": 0,
                      "roomNumber": "string",
                      "ratePlanCode": "string",
                      "rateAmount": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "points": {
                        "awardsType": "string",
                        "points": 0
                      },
                      "rateSuppressed": true,
                      "reservationBlock": {
                        "blockIdList": [
                          {
                            "id": "string",
                            "type": "string"
                          }
                        ],
                        "blockName": "string",
                        "hotelId": "string"
                      },
                      "bookingChannelCode": "string",
                      "partyCode": "string",
                      "fixedRate": true,
                      "totalAmount": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "guarantee": {
                        "guaranteeCode": "string",
                        "shortDescription": "string",
                        "onHold": true
                      },
                      "promotion": {
                        "promotionCode": "string",
                        "promotionName": "string",
                        "couponCode": "string"
                      },
                      "marketCode": "string",
                      "sourceOfBusiness": "string",
                      "sourceOfBusinessDescription": "string",
                      "balance": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "compBalance": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "roomTypeCharged": "string",
                      "depositPayments": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "guestServiceStatus": "DoNotDisturb",
                      "scheduledCheckoutTime": "2020-07-14",
                      "roomNumberLocked": true,
                      "pseudoRoom": true
                    },
                    "reservationGuest": {
                      "membership": {
                        "membershipId": 0,
                        "programCode": "string",
                        "bonusCode": "string",
                        "membershipTypeDesc": "string",
                        "membershipLevelDesc": "string",
                        "accountId": "string",
                        "membershipLevel": "string",
                        "playerRanking": 0
                      },
                      "namePrefix": "string",
                      "givenName": "string",
                      "alternateGivenName": "string",
                      "middleName": "string",
                      "surnamePrefix": "string",
                      "surname": "string",
                      "alternateSurname": "string",
                      "nameSuffix": "string",
                      "nameTitle": "string",
                      "fullName": "string",
                      "alternateFullName": "string",
                      "phoneNumber": "string",
                      "email": "string",
                      "birthDate": "2020-07-14",
                      "language": "string",
                      "nationality": {
                        "value": "string",
                        "code": "string"
                      },
                      "vip": {
                        "vipCode": "string",
                        "vipDescription": "string"
                      },
                      "address": {
                        "cityName": "string",
                        "postalCode": "string",
                        "state": "string",
                        "country": {
                          "value": "string",
                          "code": "string"
                        },
                        "streetAddress": "string",
                        "excludeNoCity": true
                      },
                      "anonymization": {
                        "anonymizationStatus": "Requested",
                        "anonymizationDate": "2020-07-14T09:50:47.984Z"
                      },
                      "accompanyGuests": [
                        {
                          "firstName": "string",
                          "lastName": "string",
                          "fullName": "string",
                          "registrationCardNo": "string",
                          "profileIdList": [
                            {
                              "id": "string",
                              "type": "string"
                            }
                          ]
                        }
                      ],
                      "externalInfo": {
                        "givenName": "string",
                        "surname": "string"
                      },
                      "guestLastStayInfo": {
                        "lastStayDate": "2020-07-14",
                        "lastStayRoom": "string",
                        "lastStayRate": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "totalStay": 0
                      },
                      "guestRestrictedCode": "string",
                      "guestRestrictedReasonDesc": "string",
                      "guestRestricted": true,
                      "registrationCardNo": "string",
                      "nameType": "Guest",
                      "id": "string",
                      "type": "string"
                    },
                    "sharedGuests": [
                      {
                        "profileId": {
                          "url": "string",
                          "type": "string",
                          "instance": "string",
                          "idContext": "string",
                          "id": "string",
                          "idExtension": 0
                        },
                        "firstName": "string",
                        "lastName": "string",
                        "fullName": "string"
                      }
                    ],
                    "attachedProfiles": [
                      {
                        "name": "string",
                        "profileIdList": [
                          {
                            "id": "string",
                            "type": "string"
                          }
                        ],
                        "reservationProfileType": "Company"
                      }
                    ],
                    "reservationPaymentMethod": {
                      "paymentCard": {
                        "cardId": {
                          "id": "string",
                          "type": "string"
                        },
                        "currentAuthorizedAmount": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "approvalAmountNeeded": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "cardType": "Ab",
                        "userDefinedCardType": "string",
                        "cardNumber": "string",
                        "cardNumberMasked": "string",
                        "cardNumberLast4Digits": "string",
                        "expirationDate": "2020-07-14",
                        "expirationDateMasked": "string",
                        "expirationDateExpired": true,
                        "cardHolderName": "string",
                        "attachCreditCardToProfile": true,
                        "processing": "Eft",
                        "swiped": true,
                        "cardOrToken": "CardNumber"
                      },
                      "balance": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "authorizationRule": {
                        "code": 0,
                        "amount": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "percent": 0
                      },
                      "emailFolioInfo": {
                        "email": {
                          "emailAddress": "string",
                          "type": "string",
                          "typeDescription": "string",
                          "emailFormat": "Html",
                          "primaryInd": true,
                          "orderSequence": 0,
                          "createDateTime": "2020-07-14T09:50:47.984Z",
                          "creatorId": "string",
                          "lastModifyDateTime": "2020-07-14T09:50:47.984Z",
                          "lastModifierId": "string",
                          "purgeDate": "2020-07-14"
                        },
                        "emailFolio": true,
                        "id": "string",
                        "type": "string"
                      },
                      "paymentMethod": "string",
                      "description": "string",
                      "folioView": 0
                    },
                    "reservationFolioWindows": [
                      {
                        "payeeInfo": {
                          "payeeId": {
                            "id": "string",
                            "type": "string"
                          },
                          "payeeName": "string",
                          "payeeAddress": {
                            "address": {
                              "addressLine": [
                                "string"
                              ],
                              "cityName": "string",
                              "postalCode": "string",
                              "cityExtension": "string",
                              "county": "string",
                              "state": "string",
                              "country": {
                                "value": "string",
                                "code": "string"
                              },
                              "language": "string",
                              "type": "string",
                              "typeDescription": "string",
                              "primaryInd": true,
                              "updateReservations": true,
                              "barCode": "string",
                              "createDateTime": "2020-07-14T09:50:47.984Z",
                              "creatorId": "string",
                              "lastModifyDateTime": "2020-07-14T09:50:47.984Z",
                              "lastModifierId": "string",
                              "purgeDate": "2020-07-14"
                            },
                            "id": "string",
                            "type": "string"
                          },
                          "payeeAddressCount": 0,
                          "payeeReferenceCurrency": "string",
                          "payeeAccountInfo": {
                            "accountName": "string",
                            "accountId": {
                              "id": "string",
                              "type": "string"
                            },
                            "accountNo": "string",
                            "status": {
                              "restriction": "string",
                              "description": "string",
                              "restricted": true
                            }
                          },
                          "payeeTaxNumber": "string"
                        },
                        "balance": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "paymentMethod": "string",
                        "folioWindowNo": 0
                      }
                    ],
                    "specials": "string",
                    "lastPrivacyPromptDate": "2020-07-14",
                    "displayColor": "string",
                    "reservationIndicators": [
                      {
                        "indicatorName": "string",
                        "count": 0
                      }
                    ],
                    "roomStatus": "Clean",
                    "searchMatches": [
                      {
                        "attribute": "string",
                        "value": "string"
                      }
                    ],
                    "sourceOfSale": {
                      "sourceType": "string",
                      "sourceCode": "string"
                    },
                    "waitlist": {
                      "reasonDescription": "string",
                      "priorityDescription": "string",
                      "description": "string",
                      "reasonCode": "string",
                      "priorityCode": "string",
                      "telephone": "string"
                    },
                    "queue": {
                      "timeSpan": {
                        "startDate": "2020-07-14",
                        "endDate": "2020-07-14",
                        "duration": "string",
                        "durationInSeconds": 0
                      },
                      "guestTextInfo": {
                        "sentTime": "2020-07-14T09:50:47.984Z",
                        "sentBy": "string"
                      },
                      "priority": 0,
                      "averageQueueTimeToCheckIn": 0,
                      "averageQueueTimeCurrentReservations": 0,
                      "queueDate": "2020-07-14"
                    },
                    "housekeeping": {
                      "instructions": "string",
                      "facilityTaskInfo": {
                        "task": {
                          "description": "string",
                          "instructions": "string",
                          "facilityDepartureTask": true,
                          "linenChange": true,
                          "hotelId": "string",
                          "code": "string",
                          "sequence": 0
                        },
                        "supplies": [
                          {
                            "description": "string",
                            "quantity": 0,
                            "code": "string"
                          }
                        ],
                        "date": "2020-07-14"
                      },
                      "linenChange": true,
                      "turndownRequested": true,
                      "serviceTime": "2020-07-14",
                      "expectedServiceTime": "string",
                      "roomStatus": "Clean"
                    },
                    "cashiering": {
                      "revenuesAndBalances": {
                        "totalFixedCharge": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "totalPayment": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "roomRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "foodAndBevRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "otherRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "nonRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "totalRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "balance": {
                          "amount": 0,
                          "currencyCode": "string"
                        }
                      },
                      "billingPrivileges": {
                        "postingRestriction": true,
                        "preStayCharging": true,
                        "postStayCharging": true,
                        "folioCloseDate": "2020-07-14",
                        "scheduledCheckout": true,
                        "scheduledCheckoutTime": "2020-07-14",
                        "directBillAuthorized": true,
                        "videoCheckout": true,
                        "allowAutoCheckin": true,
                        "autoSettlement": true,
                        "autoSettlementType": "string",
                        "autoSettlementFreq": 0,
                        "creditLimitAutoPay": true
                      },
                      "taxType": {
                        "hotelId": "string",
                        "code": "string",
                        "description": "string",
                        "collectingAgentTax": true,
                        "printAutoAdjust": true,
                        "reportExemptDays": 0,
                        "reportTaxPercentage": 0,
                        "minimumLengthOfStay": 0,
                        "taxExemptNo": "string"
                      },
                      "bedTaxReporting": {
                        "taxRegistrationNo": 0,
                        "visaNumber": "string",
                        "visaIssueDate": "2020-07-14",
                        "visaExpiryDate": "2020-07-14",
                        "taxableDays": 0
                      },
                      "folioTexts": {
                        "folioText": [
                          {
                            "text": "string",
                            "row": 0
                          }
                        ]
                      },
                      "periodicFolio": {
                        "lastSettlementDate": "2020-07-14",
                        "lastFolioDate": "2020-07-14",
                        "frequency": 0
                      },
                      "compAccounting": {
                        "compType": "string",
                        "authorizer": "string"
                      },
                      "reservationPreConfiguredRoutingInstruction": {
                        "authorizerInfo": {
                          "authorizerId": {
                            "id": "string",
                            "type": "string"
                          },
                          "authorizerUserName": "string",
                          "authorizerName": "string",
                          "authorizerRateCode": "string",
                          "inheritAuthorizerRateCode": true
                        },
                        "ratePlanCode": "string",
                        "profileType": "Company",
                        "promotionCode": "string"
                      },
                      "financiallyResponsible": true,
                      "proratedBilling": true,
                      "lastRoomAndTaxPostedDate": "2020-07-14",
                      "reverseCheckInAllowed": true,
                      "reverseAdvanceCheckInAllowed": true,
                      "transactionsPosted": true
                    },
                    "taxType": {
                      "hotelId": "string",
                      "code": "string",
                      "description": "string",
                      "collectingAgentTax": true,
                      "printAutoAdjust": true,
                      "reportExemptDays": 0,
                      "reportTaxPercentage": 0,
                      "minimumLengthOfStay": 0
                    },
                    "deposit": {
                      "amountRequired": 0,
                      "amountPaid": 0,
                      "amountOwed": 0,
                      "dueDate": "2020-07-14",
                      "postingDate": "2020-07-14",
                      "hasPaid": true,
                      "hasOutstanding": true
                    },
                    "allowedActions": [
                      "Cancel"
                    ],
                    "revenuesAndBalances": {
                      "totalFixedCharge": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "totalPayment": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "roomRevenue": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "foodAndBevRevenue": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "otherRevenue": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "nonRevenue": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "totalRevenue": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "balance": {
                        "amount": 0,
                        "currencyCode": "string"
                      }
                    },
                    "hotelInterfaceStatusList": [
                      {
                        "roomExtension": "string",
                        "hotelInterface": {
                          "interfaceId": {
                            "id": "string",
                            "type": "string"
                          },
                          "hotelId": "string",
                          "interfaceName": "string",
                          "interfaceType": "Bms",
                          "logo": "string",
                          "machineName": "string",
                          "status": "Stopped",
                          "activeFlag": true
                        },
                        "interfaceRights": [
                          {
                            "right": 0,
                            "statusCode": "string",
                            "description": "string",
                            "category": "string"
                          }
                        ]
                      }
                    ],
                    "guestPreferredCurrency": "string",
                    "turndownInfo": {
                      "allowed": true,
                      "status": "Required"
                    },
                    "mobileNotifications": {
                      "roomReady": "Pending",
                      "keyReady": "Pending",
                      "checkoutMessageReceived": true,
                      "requiresAction": true,
                      "errorMessage": "string"
                    },
                    "reservationCommunication": {
                      "telephones": {
                        "telephoneInfo": [
                          {
                            "telephone": {
                              "phoneTechType": "string",
                              "phoneUseType": "string",
                              "phoneUseTypeDescription": "string",
                              "phoneNumber": "string",
                              "extension": "string",
                              "primaryInd": true,
                              "orderSequence": 0,
                              "createDateTime": "2020-07-14T09:50:47.985Z",
                              "creatorId": "string",
                              "lastModifyDateTime": "2020-07-14T09:50:47.985Z",
                              "lastModifierId": "string",
                              "purgeDate": "2020-07-14"
                            },
                            "id": "string",
                            "type": "string"
                          }
                        ],
                        "hasMore": true,
                        "totalResults": 0,
                        "count": 0
                      },
                      "emails": {
                        "emailInfo": [
                          {
                            "email": {
                              "emailAddress": "string",
                              "type": "string",
                              "typeDescription": "string",
                              "emailFormat": "Html",
                              "primaryInd": true,
                              "orderSequence": 0,
                              "createDateTime": "2020-07-14T09:50:47.985Z",
                              "creatorId": "string",
                              "lastModifyDateTime": "2020-07-14T09:50:47.985Z",
                              "lastModifierId": "string",
                              "purgeDate": "2020-07-14"
                            },
                            "id": "string",
                            "type": "string"
                          }
                        ],
                        "hasMore": true,
                        "totalResults": 0,
                        "count": 0
                      }
                    },
                    "advanceCheckIn": {
                      "advanceCheckedIn": true,
                      "expectedReturnTime": "2020-07-14T09:50:47.985Z",
                      "eTRComments": "string"
                    },
                    "welcomeOffer": true,
                    "cancellationInfo": {
                      "description": "string",
                      "code": "string",
                      "date": "2020-07-14"
                    },
                    "keyCount": 0,
                    "hotelId": "string",
                    "hotelName": "string",
                    "expectedServiceTime": "string",
                    "roomStayReservation": true,
                    "createDateTime": "2020-07-14T09:50:47.985Z",
                    "creatorId": "string",
                    "lastModifyDateTime": "2020-07-14T09:50:47.985Z",
                    "lastModifierId": "string",
                    "purgeDate": "2020-07-14",
                    "reservationStatus": "Reserved",
                    "computedReservationStatus": "Reserved",
                    "walkInIndicator": true,
                    "accessRestriction": "Change",
                    "commissionPayoutTo": "TravelAgent",
                    "paymentMethod": "string",
                    "preRegistered": true,
                    "openFolio": true,
                    "allowMobileCheckout": true,
                    "allowMobileViewFolio": true,
                    "optedForCommunication": true
                  }
                ],
                "reservationsSummary": {
                  "roomSummary": {
                    "assignedRooms": {
                      "count": "string"
                    },
                    "unassignedRooms": {
                      "count": "string"
                    }
                  },
                  "paymentMethodSummary": {
                    "establishedCount": "string",
                    "unestablishedCount": "string"
                  },
                  "blockSummary": {
                    "totalReservations": 0
                  }
                },
                "links": [
                  {
                    "href": "string",
                    "rel": "string",
                    "templated": false,
                    "method": "GET",
                    "targetSchema": "string",
                    "operationId": "string",
                    "title": "string"
                  }
                ]
              }
            }
          },
          "204": {
            "description": "ReservationSummaries not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/ai/rooms": {
      "post": {
        "summary": "AI Assign Rooms",
        "description": "This API runs AI Room Assignment and allocates rooms to incoming reservations. <p><strong>OperationId:</strong>assignRoomsAI</p>",
        "operationId": "assignRoomsAI",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "roomsAI",
            "in": "body",
            "required": true,
            "description": "Request to run AI Room Assignment and allocate rooms to incoming reservations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomsAI"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      },
      "get": {
        "summary": "Automated Intelligence Room Assignment last run status",
        "description": "This API fetches the last run status of an Automated Intelligence Room Assignment. <p><strong>OperationId:</strong>getAiraLastRunStatus</p>",
        "operationId": "getAiraLastRunStatus",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response of last execution for AI Room Assignment",
            "schema": {
              "$ref": "#/definitions/airaLastRunStatusInfo"
            },
            "examples": {
              "application/json": {}
            }
          },
          "204": {
            "description": "Room Reservations not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/autoRoomAssignments": {
      "post": {
        "summary": "Assign the room automatically",
        "description": "This API can be used to assign the room automatically. <p><strong>OperationId:</strong>autoAssignRoom</p>",
        "operationId": "autoAssignRoom",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "autoAssignRoom",
            "in": "body",
            "required": true,
            "description": "Request for auto assignment of rooms to reservations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/autoAssignRoom"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Collection of result set which is made of reservation id, error and warning.",
            "schema": {
              "$ref": "#/definitions/autoAssignedRoom"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      },
      "delete": {
        "summary": "Auto unassign room",
        "description": "This API can be used to auto unassign a room. <p><strong>OperationId:</strong>autoUnAssignRoom</p>",
        "operationId": "autoUnAssignRoom",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "id",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "idExtension",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Additional identifying value assigned by the creating system.",
            "items": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "type",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "includeDepartureRooms",
            "in": "query",
            "required": false,
            "description": "Indicates if departure rooms are to be included in the auto unassignment.",
            "type": "boolean"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "roomNumberWildcard",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "useAIRoomAssignment",
            "in": "query",
            "required": false,
            "description": "If the AI ROOM ASSIGNMENT application parameter is set to Y, this flag when set to true will use the AI Room Assignment algorithm to fetch the results in order of suitability.",
            "type": "boolean"
          },
          {
            "name": "useAssociatedProfilePreferences",
            "in": "query",
            "required": false,
            "description": "Indicates if preferences on the profile associated to the reservation should be used to determine the room type. The preferences for FLOOR, SMOKING and ROOM FEATURES will be used.",
            "type": "boolean"
          },
          {
            "name": "hotelRoomStatus",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Clean",
                "Dirty",
                "Pickup",
                "Inspected",
                "OutOfOrder",
                "OutOfService"
              ]
            },
            "required": false
          },
          {
            "name": "hotelFORoomStatus",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple type for front office room status instructions to be used in requests for fetching housekeeping rooms. Valid values are Vacant and Occupied.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Vacant",
                "Occupied"
              ]
            },
            "required": false
          },
          {
            "name": "fromRoomNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "toRoomNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "roomType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "The room types of hotel rooms to be fetched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "roomClass",
            "in": "query",
            "required": false,
            "description": "The room class of hotel rooms to be fetched.",
            "type": "string"
          },
          {
            "name": "floor",
            "in": "query",
            "required": false,
            "description": "The floor of room to be fetched.",
            "type": "string"
          },
          {
            "name": "includeDueOut",
            "in": "query",
            "required": false,
            "description": "This flag when set to true when include rooms assigned to due out reservations.",
            "type": "boolean"
          },
          {
            "name": "departureTime",
            "in": "query",
            "required": false,
            "description": "When IncludeDueOut is enable,it is the departure time before which to search.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A code representing a room feature.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "description",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A code representing a room feature.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "orderSequence",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Display Order sequence.",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "quantity",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Indicates quantity.",
            "items": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "smokingPreference",
            "in": "query",
            "required": false,
            "description": "The smoking preference of room to be fetched.",
            "type": "string"
          },
          {
            "name": "includeAllRoomConditions",
            "in": "query",
            "required": false,
            "description": "This flag when set to true will include all room conditions, when set to false then room with \"General Assignment\" condition type will be excluded from the result.",
            "type": "boolean"
          },
          {
            "name": "includeComponentRooms",
            "in": "query",
            "required": false,
            "description": "This flag when set to true will include all component rooms",
            "type": "boolean"
          },
          {
            "name": "includePseudoRooms",
            "in": "query",
            "required": false,
            "description": "This flag when set to true will include all pseudo rooms",
            "type": "boolean"
          },
          {
            "name": "includeOORoomCheck",
            "in": "query",
            "required": false,
            "description": "This flag when set to true will work for Available Rooms functionality",
            "type": "boolean"
          },
          {
            "name": "connectingRoomsOnly",
            "in": "query",
            "required": false,
            "description": "This flag when set to true will include only connecting rooms.",
            "type": "boolean"
          },
          {
            "name": "reservationIdId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "reservationIdIdExtension",
            "in": "query",
            "required": false,
            "description": "Additional identifying value assigned by the creating system.",
            "type": "integer"
          },
          {
            "name": "idContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "reservationIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "pseudoRoomsOnly",
            "in": "query",
            "required": false,
            "description": "This flag when set to true will include only pseudo rooms",
            "type": "boolean"
          },
          {
            "name": "includeAttendentInRoom",
            "in": "query",
            "required": false,
            "description": "This flag when set to true will includes attendent in Rooms",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/massAdvanceCheckIns": {
      "post": {
        "summary": "Mass Advance Check in Reservations",
        "description": "Use this API to perform a mass advance checkin for reservations. <p><strong>OperationId:</strong>postMassAdvanceCheckIn</p>",
        "operationId": "postMassAdvanceCheckIn",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "massAdvanceCheckInReservations",
            "in": "body",
            "required": true,
            "description": "Request object to Submit Batch job for Mass Advance Check In of Reservations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/massAdvanceCheckInReservations"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/massCheckIns": {
      "post": {
        "summary": "Mass checkin reservations",
        "description": "Use this API to perform a mass Checkin for reservations. <p><strong>OperationId:</strong>postMassCheckIn</p>",
        "operationId": "postMassCheckIn",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "massCheckInReservations",
            "in": "body",
            "required": true,
            "description": "Request object to Submit Batch job for Mass Checkin of Reservations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/massCheckInReservations"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/advanceCheckIns": {
      "post": {
        "summary": "Advance checkin a reservation",
        "description": "At times, when guests arrive to the property prior to a room being ready, you can flag a reservation as Advance Checked In for arrivals due in on the current business date. This enables guests to post charges to their reservation folio prior to check in, and helps the rooms management team prioritize room cleaning and assignment. Individual reservations (including Walk In reservations, Pre Registered reservations, and reservations that are in Queue) and group block reservations can be Advance Checked In. <p><strong>OperationId:</strong>postAdvanceCheckIn</p>",
        "operationId": "postAdvanceCheckIn",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "advanceCheckInReservation",
            "in": "body",
            "required": true,
            "description": "Request object to perform Advance Check In of a Reservation.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/advanceCheckInReservation"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      },
      "delete": {
        "summary": "Reverse Advance Checkin ",
        "description": "Reverse an advance check in for a reservation. <p><strong>OperationId:</strong>deleteAdvanceCheckIn</p>",
        "operationId": "deleteAdvanceCheckIn",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/checkIns": {
      "delete": {
        "summary": "Revert a checked-in Reservation",
        "description": "Use this API to revert a reservation that has been checked in.  This will return the reservation to a Due in/Arrival status. <p><strong>OperationId:</strong>deleteCheckin</p>",
        "operationId": "deleteCheckin",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "roomStatus",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
            "uniqueItems": true,
            "enum": [
              "Clean",
              "Dirty",
              "Pickup",
              "Inspected",
              "OutOfOrder",
              "OutOfService"
            ]
          },
          {
            "name": "unassignRoom",
            "in": "query",
            "required": false,
            "description": "This option is used when all reservation check-in is reversed and the user wants to choose if the room is to be blocked. If all check-ins are not reversed, this is ignored and a default value false is used.",
            "type": "boolean"
          },
          {
            "name": "sharersList",
            "in": "query",
            "type": "array",
            "description": "List of sharers IDs linked to the reservation selected to be reverse check in.",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 40
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      },
      "post": {
        "summary": "Checks in a guest",
        "description": "Use this API to check in a guest reservation.  The reservation needs to be 'due in' status.  The API also provides an option to select an available room. <p><strong>OperationId:</strong>postCheckIn</p>",
        "operationId": "postCheckIn",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA reservation ID which is used to find reservation from OPERA. This ID is a primary identification of a reservation in OPERA."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel where reservation is being booked"
          },
          {
            "name": "reservation",
            "in": "body",
            "required": true,
            "description": "Validation checks includes the following: - Reservation is not valid to be checked in. - Split is still required before the reservation can be checked in. - Room information is missing. - Payment information is missing. - The status of the room needs to be reviewed. - Sharers was impacted. The check-in process affected the reservation details of shared guests on the reservation. - Sharers was not impacted. The check-in process has not affected the reservation details of shared guests on the reservation.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservation"
                },
                {
                  "example": {
                    "reservation": {
                      "roomId": "D209",
                      "ignoreWarnings": true,
                      "stopCheckin": false,
                      "printRegistration": true
                    },
                    "fetchReservationInstruction": [
                      "ReservationDetail"
                    ],
                    "includeNotifications": true
                  }
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "CheckIn response will commonly be errors over warnings. If a check has to be done before checking a reservation to a hotel, then the VerifyCheckinReservation operation can be utilized.",
            "schema": {
              "$ref": "#/definitions/checkedinReservation"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/commissionNotes": {
      "get": {
        "summary": "Operation to fetch commission notes.",
        "description": " <p><strong>OperationId:</strong>getCommissionNotes</p>",
        "operationId": "getCommissionNotes",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Reservation Id for which the commission notes are to be fetched."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Property code against which commissions notes are to be fetched."
          },
          {
            "name": "idExtension",
            "in": "query",
            "required": false,
            "description": "Additional identifying value assigned by the creating system.",
            "type": "integer"
          },
          {
            "name": "idContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response type for fetching commission notes.",
            "schema": {
              "$ref": "#/definitions/commissionNotesDetails"
            }
          },
          "204": {
            "description": "CommissionNotes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/commissionPaymentDetails": {
      "get": {
        "summary": "Fetch Commission Payment Details",
        "description": "You can use this API to fetch commission payment details. <p><strong>OperationId:</strong>getCommissionPaymentDetails</p>",
        "operationId": "getCommissionPaymentDetails",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the reservation",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response to the request to fetch commission payment details",
            "schema": {
              "$ref": "#/definitions/commissionPaymentDetails"
            }
          },
          "204": {
            "description": "Commission Payment Details not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Commissions"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/keyOptions": {
      "get": {
        "summary": "Fetch the keysOptions",
        "description": "This API is used to retrieve the key options attached to the room, reservation and profile. These key options are preferences that correspond to the Door Lock System in use that control the access to areas with the room key. Key option preferences can be configured and saved on profiles, rooms, and reservations to be included when requesting a room key. <p><strong>OperationId:</strong>getKeyOptions</p>",
        "operationId": "getKeyOptions",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique identifier of the reservation"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Name of the resort."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response of fetch keyOptions operation.",
            "schema": {
              "$ref": "#/definitions/keyOptionsInfo"
            }
          },
          "204": {
            "description": "keyOptions not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/linked": {
      "get": {
        "summary": "Get linked reservations",
        "description": "Use this API to view the reservations  that are linked to the specified reservation. <p><strong>OperationId:</strong>getLinkedReservations</p>",
        "operationId": "getLinkedReservations",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "additionalReservationId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "additionalReservationIdContext",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "additionalReservationIdType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response of fetch room keys operation.",
            "schema": {
              "$ref": "#/definitions/linkedReservations"
            }
          },
          "204": {
            "description": "LinkedReservations not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/priority": {
      "put": {
        "summary": "Change the reservation queue priority",
        "description": "This API can be used to change the resrevations Queue Priority. <p><strong>OperationId:</strong>putReservationQueuePriority</p>",
        "operationId": "putReservationQueuePriority",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "reservationQueuePriorityNumber",
            "in": "body",
            "required": true,
            "description": "Request to change the current priority of a reservation in Queue for Check-In.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reservationQueuePriorityNumber"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response for the Change Queue Priority request.",
            "schema": {
              "$ref": "#/definitions/reservationQueuePriority"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/roomAssignments": {
      "post": {
        "summary": "Assign a Room to a Reservation",
        "description": "This API will allow you to assign a room to a reservation in reserved status. Override instructions are available to assign a room despite warnings returned in the response message. <p><strong>OperationId:</strong>postRoomAssignment</p>",
        "operationId": "postRoomAssignment",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "room",
            "in": "body",
            "required": true,
            "description": "The reservation must still be reserved to use this operation.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/room"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Possible errors that the operation will generate: The reservation is not in Reserved state. The room being requested does not exist.",
            "schema": {
              "$ref": "#/definitions/assignedRoom"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/roomKeys": {
      "get": {
        "summary": "Fetch the room keys",
        "description": "You can use this API to retrieve any existing room key information for a reservation. <p><strong>OperationId:</strong>getRoomKeys</p>",
        "operationId": "getRoomKeys",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "includeInactiveRoomKeys",
            "in": "query",
            "required": false,
            "description": "Setting this to true will include inactive rooms keys details. This is supported when OPERA Control Multiple Guest Room Key is active.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response of fetch room keys operation.",
            "schema": {
              "$ref": "#/definitions/roomKeyInfo"
            }
          },
          "204": {
            "description": "RoomKeys not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      },
      "post": {
        "summary": "Requests room key(s)",
        "description": "You can use this API to create a room key request for a reservation to the active Door Locking System Property Interface. <p><strong>OperationId:</strong>postRoomKey</p>",
        "operationId": "postRoomKey",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "roomKey",
            "in": "body",
            "required": true,
            "description": "Request for generation of room key.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomKey"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response for room key creation.",
            "schema": {
              "$ref": "#/definitions/roomKeyDetails"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      },
      "delete": {
        "summary": "Delete room key",
        "description": "This API will delete room keys on a reservation. <p><strong>OperationId:</strong>deleteRoomKey</p>",
        "operationId": "deleteRoomKey",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      },
      "put": {
        "summary": "Update room keys.",
        "description": "When MUTIPLE_GUEST_KEY is active this methods can be used to update information on the room keys such as balance amount and keyOptions. reservationId and hotelId are required path parameters. The body parameter roomKeys includes information about the encoder, room, key type, key validity, key options  and   guests information for multiple keys",
        "operationId": "putRoomKeys",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "roomKeys",
            "in": "body",
            "required": true,
            "description": "Room key information",
            "schema": {
              "$ref": "#/definitions/roomKeyMultipleGuests"
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of updated resource"
              }
            },
            "description": "<description>",
            "schema": {
              "$ref": "#/definitions/updateRoomKeys"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/roomMoveHistory": {
      "get": {
        "summary": "Get room move history of a reservation",
        "description": "This API will return the history of room change/room moves for a specified reservation. <p><strong>OperationId:</strong>getRoomMoveHistory</p>",
        "operationId": "getRoomMoveHistory",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "reservationIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "reservationIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for the fetch room move history of a reservation.",
            "schema": {
              "$ref": "#/definitions/roomMoveHistory"
            }
          },
          "204": {
            "description": "RoomMoveHistory not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/rooms": {
      "put": {
        "summary": "Remove an assigned room",
        "description": "This API will allow you to remove an assigned room from a reservation in reserved status. <p><strong>OperationId:</strong>deleteAssignRoom</p>",
        "operationId": "deleteAssignRoom",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "unAssignRoomCriteria",
            "in": "body",
            "required": true,
            "description": "Request to the remove a room(unassign) from a reserved reservation.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/unAssignRoomCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/unAssignedRoom"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/rooms/{roomId}/roomMoves": {
      "put": {
        "summary": "Move in-house guest",
        "description": "This API will allow you to change rooms for an in-house guest. <p><strong>OperationId:</strong>moveInHouseGuest</p>",
        "operationId": "moveInHouseGuest",
        "parameters": [
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "moveInHouseGuest",
            "in": "body",
            "required": true,
            "description": "To move a reservation, the reservation needs to be in Checked-In state.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/moveInHouseGuest"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Potential errors which this operation might respond are the following: - Reservation is NOT In-House. - The room is NON-EXISTENT for the hotel. - The room is NOT valid for usage based on its current state. - The room's occupancy level has been compromised. - The room's pricing is NOT available.",
            "schema": {
              "$ref": "#/definitions/movedInHouseGuest"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/suggestedRooms": {
      "get": {
        "summary": "Get Suggested Rooms",
        "description": "You can use this API to fetch the suggested rooms. <p><strong>OperationId:</strong>getSuggestedRooms</p>",
        "operationId": "getSuggestedRooms",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique reservation identifier for the reservation."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Property where the reservation exists."
          },
          {
            "name": "roomType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "description": "Date of arrival.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "nights",
            "in": "query",
            "required": false,
            "description": "Number of nights that guest will be staying.",
            "type": "integer"
          },
          {
            "name": "suggestedRoomsInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Instruction to include commponent room.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ComponentRoom"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "List of suggested rooms for room assignment.",
            "schema": {
              "$ref": "#/definitions/suggestedRooms"
            }
          },
          "204": {
            "description": "SuggestedRooms not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/textMessages/{messageType}": {
      "put": {
        "summary": "Deliver Queue rooms text message",
        "description": "This API will deliver Queue rooms text message. <p><strong>OperationId:</strong>deliverQueueRoomsTextMessage</p>",
        "operationId": "deliverQueueRoomsTextMessage",
        "parameters": [
          {
            "name": "messageType",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "deliverQueueRoomsTextMessage",
            "in": "body",
            "required": true,
            "description": "Request to deliver a text message via Queue Reservations (for a guest) or Queue Rush (for housekeeping).",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/deliverQueueRoomsTextMessage"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response for delivering a text message via Queue Reservations (to a guest) or Queue Rush (to housekeeping).",
            "schema": {
              "$ref": "#/definitions/QueueRoomsTextMessage"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/verifyCheckIns": {
      "get": {
        "summary": "Verify checkin reservation",
        "description": "Use this API to verify checkin reservations. <p><strong>OperationId:</strong>verifyCheckinReservation</p>",
        "operationId": "verifyCheckinReservation",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "verifyCheckinInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Instructions for including in the request when retrieving reservation information. Voucher - indicates to generate vouchers,if reservation matches voucher rule.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "AuthorizationInfo",
                "ExcludeRoomSuggestion",
                "Keys",
                "Voucher",
                "ScheduledRoomMoves"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Reservation record showing the current state of the reservation.",
            "schema": {
              "$ref": "#/definitions/verifiedCheckinReservation"
            }
          },
          "204": {
            "description": "verifyCheckinReservation not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/reservations/{reservationId}/wakeUpCalls": {
      "get": {
        "summary": "Get Wake Up Call",
        "description": "Use thisAPI to get existing wake up call on an in-house reservation. <p><strong>OperationId:</strong>getWakeUpCall</p> <p>This API allows a time span of <strong>90</strong> days.</p>",
        "operationId": "getWakeUpCall",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "fetchCancelled",
            "in": "query",
            "required": false,
            "description": "Specifies whether we should fetch wake up calls with pending status.",
            "type": "boolean"
          },
          {
            "name": "fetchCompleted",
            "in": "query",
            "required": false,
            "description": "Specifies whether we should fetch wake up calls with pending status.",
            "type": "boolean"
          },
          {
            "name": "fetchNoAnswer",
            "in": "query",
            "required": false,
            "description": "Specifies whether we should fetch wake up calls with pending status.",
            "type": "boolean"
          },
          {
            "name": "fetchPending",
            "in": "query",
            "required": false,
            "description": "Specifies whether we should fetch wake up calls with pending status.",
            "type": "boolean"
          },
          {
            "name": "idExtension",
            "in": "query",
            "required": false,
            "description": "Additional identifying value assigned by the creating system.",
            "type": "integer"
          },
          {
            "name": "reservationIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "reservationIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "beginDate",
            "in": "query",
            "required": false,
            "description": "Begin date from which to start fetching wake up calls.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "description": "End date from which to start fetching wake up calls.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "beginTime",
            "in": "query",
            "required": false,
            "description": "Begin time from which to start fetching wake up calls.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "description": "End time from which to start fetching wake up calls.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "room",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel room(s) for which wake up calls are to be fetched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "blockId",
            "in": "query",
            "required": false,
            "description": "Block code for which wake up calls are to be fetched.",
            "type": "string"
          },
          {
            "name": "guestName",
            "in": "query",
            "required": false,
            "description": "Name with which wake up call may be associated.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Fetch wake up calls response.",
            "schema": {
              "$ref": "#/definitions/wakeUpCalls"
            }
          },
          "204": {
            "description": "WakeUpCall not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      },
      "put": {
        "summary": "Change Wake Up Call",
        "description": "Update an existing wake up call.  Wake up call can only be added to in-house reservations. <p><strong>OperationId:</strong>putWakeUpCall</p>",
        "operationId": "putWakeUpCall",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "wakeUpCalls",
            "in": "body",
            "required": true,
            "description": "Request to change a wake up call.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/wakeUpCalls"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/changedWakeUpCalls"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      },
      "delete": {
        "summary": "Delete Wake Up Call",
        "description": "Use this API to cancel a wake up call on a reservation. <p><strong>OperationId:</strong>deleteWakeUpCall</p>",
        "operationId": "deleteWakeUpCall",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "callTime",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Time on which wake up call is set.",
            "items": {
              "type": "string",
              "format": "date-time"
            },
            "required": false
          },
          {
            "name": "followUpCallTime",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Follow up call time.",
            "items": {
              "type": "string",
              "format": "date-time"
            },
            "required": false
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "newCallTime",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "New Time on which wake up call is set. Used to change the Followup Call time",
            "items": {
              "type": "string",
              "format": "date-time"
            },
            "required": false
          },
          {
            "name": "newFollowUpCallTime",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "New Follow up call time.Used to change the Followup Call time.",
            "items": {
              "type": "string",
              "format": "date-time"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      },
      "post": {
        "summary": "Create Wake Up Call",
        "description": "You can set, view, and cancel wake up call for individual reservations. The reservation must be in-house (checked-in) status to set a wake up call. <p><strong>OperationId:</strong>postWakeUpCall</p>",
        "operationId": "postWakeUpCall",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "wakeUpCalls",
            "in": "body",
            "required": true,
            "description": "Request to create a wake up call.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/wakeUpCalls"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/reservationsKeyOptions": {
      "get": {
        "summary": "Fetch keysOptions for the reservation and the guest profile",
        "description": "This API is used to retrieve the key options attached to the room, reservation and profile for all the reservations in reservationIdList. These key options are preferences that correspond to the Door Lock System in use that control the access to areas with the room key. Key option preferences can be configured and saved on profiles, rooms, and reservations to be included when requesting a room key. <p><strong>OperationId:</strong>getKeyOptions</p>",
        "operationId": "getReservationsKeyOptions",
        "parameters": [
          {
            "name": "reservationIdList",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A list of reservation ids to fetch key options for.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Name of the resort."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response of fetch keyOptions operation.",
            "schema": {
              "$ref": "#/definitions/keyOptionsInfoListType"
            }
          },
          "204": {
            "description": "keyOptions not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/roomKeysDetails": {
      "get": {
        "summary": "Read room key",
        "description": "This API can be used to read the Room Key. <p><strong>OperationId:</strong>readRoomKey</p>",
        "operationId": "readRoomKey",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "encoderTerminal",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "interfaceId",
            "in": "query",
            "required": false,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique DB internal number of a Hotel Interface record."
          },
          {
            "name": "encoderId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "encoderIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "encoderIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Respose for the reading of room key.",
            "schema": {
              "$ref": "#/definitions/roomKeyStatus"
            }
          },
          "204": {
            "description": "readRoomKey not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/roomKeysExternal": {
      "post": {
        "summary": "Requests room key(s)",
        "description": "API that manages requests for Door Lock Room Keys. This operation is used by OPERA Cloud PMS connected to external Door Lock Systems systems via Outbound Systems configuration: \n\n<strong>OPERA Cloud utilizes this operation </strong>\n\n- to request new or additional room keys - e.g. when guest checks in, or additional keys post check in.\n\n- to request to activate new keys after check on e.g. when a room key has been lost for a room.\n\n- to request a room key which is not related to a guest reservation but valid for a defined time - (for show rooms, repair) - One Shot Key.\n\n- to request to re-encode a key whereby other keys for this room remain active.\n\n- to request to read a key data from a room key and display it to the user in the PMS.\n\n- to request to modify existing key data - upon room move or change of departure date. (online key systems only!!)\n\n- to request to remove / delete a room key from a room on. Usually sent with check out of a reservation.\n\nUse this API to post a room key action to the active Door Lock System.\n\n<strong>Notes on keyType values:</strong>\n\n<strong>keyType = New\n\nkeyType = Lost </strong>\n\nIt is expected that all previous active keys for the room will become invalid.\n\nIt is expected that partner system handles multiple keys being active in case numberOfKeys is >1.\n\n<strong>keyType = Duplicate\n\nkeyType = ReEncode</strong>\n\nIt is expected that existing active keys for this room remain active.\n\n<strong>keyType = OneShot</strong>\n\nIt is expected that the room key is only valid for a room for specific time (for maintenance or Show room).\n\nIt is never related to a reservation.\n\n<strong>keyType = Read</strong> A request to the Key Card system to read Key Card information from requested Key Encoder/reader.\n\nThe Key Read functionality is of pure informational purpose. None of the received information is stored or processed in the PMS, and it is only for display to the user.\n\n<strong>keyType = Remove</strong>\n\nIt is expected that with this request all active keys for a room or reservation will become inactive or invalid so they will not be able to open the room after defined validityEnd time.\n\n<strong>Additional KeyType actions used by Online Door Lock Systems:</strong>\n\n<strong>Online Key card Systems</strong> are systems which do not write guest data to the room key directly but do store guest data internally and send the information to the related door lock.\n\n<strong>keyType = ModifyStay</strong>\n\nFor Online Door Lock Systems - Request to adjust Room key data when guest changes length of stay (validityEnd)\n\n<strong>keyType = RoomMove</strong>\n\nFor Online Door Lock Systems - adjust Room key data when guest performs room move. \n\n<p><strong>OperationId:</strong> postRoomKeysExternal</p>",
        "operationId": "postRoomKeysExternal",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "roomKey",
            "in": "body",
            "required": true,
            "description": "Request for generation of room key.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomKeysExternal"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response from the active Door Locking System Property Interface to the post request.<p><strong>Note on Response messages:</strong>\n\nIt is necessary to specify both the PMS 'encoderTerminal' and the Key Service system's coder (encoderId) in cases where more than one PMS workstation may be addressing one key coder. ORACLE PMS will NOT send another Request command automatically should a negative response be received. The user sees the response and decides if another try should be made.<p>",
            "schema": {
              "$ref": "#/definitions/roomKeysExternalDetails"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/roomStatusStatistics": {
      "get": {
        "summary": "Get counts of rooms by housekeeping status and front office status.",
        "description": "For current business date, rooms are grouped by the roomClass and roomType to display their housekeeping roomStatus.",
        "operationId": "getRoomsByRoomStatus",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "frontOfficeStatus",
            "in": "query",
            "required": false,
            "description": "Filter by frontOfficeStatus. If nothing is passed, we fetch all.",
            "type": "string",
            "enum": [
              "Vacant",
              "Occupied"
            ]
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response element for housekeeping statistics.",
            "schema": {
              "$ref": "#/definitions/roomStatusStatisticsListType"
            }
          },
          "204": {
            "description": "RoomStatusStatistics not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FOFStats"
        ]
      }
    },
    "/hotels/{hotelId}/rooms": {
      "get": {
        "summary": "Get hotel available rooms",
        "description": "Use this API to return available rooms based on search criteria such as hotelId, hotelRoomStatus, roomType, roomFeatureCode,etc.<p><strong>OperationId:</strong>getHotelRooms</p>",
        "operationId": "getHotelRooms",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "roomNumberWildcard",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "hotelRoomStatus",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Clean",
                "Dirty",
                "Pickup",
                "Inspected",
                "OutOfOrder",
                "OutOfService"
              ]
            },
            "required": false
          },
          {
            "name": "hotelFORoomStatus",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple type for front office room status instructions to be used in requests for fetching housekeeping rooms. Valid values are Vacant and Occupied.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Vacant",
                "Occupied"
              ]
            },
            "required": false
          },
          {
            "name": "fromRoomNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "toRoomNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "hotelRoomStartDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "hotelRoomEndDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "roomType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "The room types of hotel rooms to be fetched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "roomClass",
            "in": "query",
            "required": false,
            "description": "The room class of hotel rooms to be fetched.",
            "type": "string"
          },
          {
            "name": "floor",
            "in": "query",
            "required": false,
            "description": "The floor of room to be fetched.",
            "type": "string"
          },
          {
            "name": "includeDueOut",
            "in": "query",
            "required": false,
            "description": "This flag when set to true will include rooms assigned to due out reservations.",
            "type": "boolean"
          },
          {
            "name": "departureTime",
            "in": "query",
            "required": false,
            "description": "When IncludeDueOut is enable,it is the departure time before which to search.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "roomFeatureCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A code representing a room feature.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "description",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A code representing a room feature.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "orderSequence",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Display Order sequence.",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "quantity",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Indicates quantity.",
            "items": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "smokingPreference",
            "in": "query",
            "required": false,
            "description": "The smoking preference of room to be fetched.",
            "type": "string"
          },
          {
            "name": "includeAllRoomConditions",
            "in": "query",
            "required": false,
            "description": "This flag when set to true will include all room conditions, when set to false then room with \"General Assignment\" condition type will be excluded from the result.",
            "type": "boolean"
          },
          {
            "name": "includeComponentRooms",
            "in": "query",
            "required": false,
            "description": "This flag when set to true will include all component rooms",
            "type": "boolean"
          },
          {
            "name": "includePseudoRooms",
            "in": "query",
            "required": false,
            "description": "This flag when set to true will include all pseudo rooms",
            "type": "boolean"
          },
          {
            "name": "includeOORoomCheck",
            "in": "query",
            "required": false,
            "description": "This flag when set to true will work for Available Rooms functionality",
            "type": "boolean"
          },
          {
            "name": "connectingRoomsOnly",
            "in": "query",
            "required": false,
            "description": "This flag when set to true will include only connecting rooms.",
            "type": "boolean"
          },
          {
            "name": "reservationId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "reservationIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "reservationIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "pseudoRoomsOnly",
            "in": "query",
            "required": false,
            "description": "This flag when set to true will include only pseudo rooms",
            "type": "boolean"
          },
          {
            "name": "includeAttendentInRoom",
            "in": "query",
            "required": false,
            "description": "This flag when set to true will includes attendent in Rooms",
            "type": "boolean"
          },
          {
            "name": "includeRotationRoom",
            "in": "query",
            "required": false,
            "description": "This flag when set to true will return the rotation room when room roation parameter is active and the room type is configured for rotation.",
            "type": "boolean"
          },
          {
            "name": "ownerRoomsOnly",
            "in": "query",
            "required": false,
            "description": "When this flag is set to true, this API will fetch rooms which are contracted with owner profiles. This is supported when OPERA Control Room Rotation is active.",
            "type": "boolean"
          },
          {
            "name": "ownerExclusiveRoomsOnly",
            "in": "query",
            "required": false,
            "description": "When this flag is set to true, this API will fetch rooms can only be used by the reservation's profile (owner) of the room. This is supported when OPERA Control Room Rotation is active.",
            "type": "boolean"
          },
          {
            "name": "perfectFitRoomsOnly",
            "in": "query",
            "required": false,
            "description": "When this flag is set to true, this API will fetch only those rooms that have exactly Y nights free with the reservation guest(s) points.",
            "type": "boolean"
          },
          {
            "name": "orderBy",
            "in": "query",
            "type": "string",
            "description": "A collection of supported sorting for available rooms search results.",
            "uniqueItems": true,
            "enum": [
              "ForecastRotationPoints"
            ],
            "required": false
          },
          {
            "name": "unitGradeCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "required": false,
            "description": "Fetches rooms that matches requested unit grade codes. Only returns when Room Rotation and Unit Grade are active.",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "ownerExclusiveRoomProfileId",
            "in": "query",
            "required": false,
            "description": ": This OPERA profile?s internal Id will be used with ownerExclusiveRoomOnly flag to return the room which own by this profile. This query parameter is supported when OPERA Control Room Rotation is active.",
            "type": "string"
          },
          {
            "name": "excludeRoomFeatures",
            "in": "query",
            "type": "array",
            "maxItems": 4000,
            "collectionFormat": "multi",
            "description": "It indicates to exclude rooms with the selected Room Feature(s).It allows alphanumeric values(e.g.,TUB,BOLCONY,MV)",
            "items": {
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "required": false
          },
          {
            "name": "excludeFloorPreferences",
            "in": "query",
            "type": "array",
            "maxItems": 4000,
            "collectionFormat": "multi",
            "description": "It indicates to exclude rooms with the selected Floor(s) which are comma separated values.It allows alphanumeric values(e.g.,01,02,03,GROUND,five)",
            "items": {
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "required": false
          },
          {
            "name": "includeScheduledMoveOutRoom",
            "in": "query",
            "required": false,
            "description": "This flag when set to true will include rooms assigned to move out reservations. This query parameter is supported when OPERA Control Advanced Daily Details is active.",
            "type": "boolean"
          },
          {
            "name": "scheduledRoomMoveOutTime",
            "in": "query",
            "required": false,
            "description": "When IncludeMoveOut is enabled, it is the move out time before which to search. It will return rooms assigned to moving reservations that have a scheduled move out time before the entered time. This query parameter is supported when OPERA Control Advanced Daily Details is active",
            "type": "string",
            "format": "date-time"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "List of suggested rooms for room assignment.",
            "schema": {
              "$ref": "#/definitions/hotelRooms"
            },
            "examples": {
              "application/json": {
                "hotelRoomsDetails": {
                  "room": [
                    {
                      "roomType": {
                        "pseudo": true,
                        "suite": true,
                        "roomClass": "string",
                        "shortDescription": "string",
                        "houseKeeping": true,
                        "smokingPreference": "string",
                        "building": "string",
                        "roomAssignmentRating": "MostImportant",
                        "minimumOccupancy": 0,
                        "maximumOccupancy": 0,
                        "roomFeatures": [
                          {
                            "code": "string",
                            "description": "string",
                            "orderSequence": 0,
                            "quantity": 0
                          }
                        ],
                        "accessible": true,
                        "roomType": "string",
                        "meetingRoom": true
                      },
                      "floor": "string",
                      "floorDescription": "string",
                      "roomFeatures": [
                        {
                          "code": "string",
                          "description": "string",
                          "orderSequence": 0,
                          "quantity": 0
                        }
                      ],
                      "roomDescription": "string",
                      "description": {
                        "defaultText": "string",
                        "translatedTexts": {
                          "text": [
                            {
                              "value": "string",
                              "language": "string"
                            }
                          ]
                        }
                      },
                      "smokingPreference": "string",
                      "smokingPreferenceDescription": "string",
                      "building": "string",
                      "roomAssignmentRating": "MostImportant",
                      "accessible": true,
                      "roomId": "string",
                      "meetingRoom": true,
                      "roomSection": {
                        "daySectionCode": "string",
                        "eveningSectionCode": "string"
                      },
                      "housekeeping": {
                        "roomStatus": {
                          "reservationStatusList": [
                            "Arrival"
                          ],
                          "roomStatus": "Clean",
                          "frontOfficeStatus": "Vacant",
                          "housekeepingStatus": "Vacant"
                        },
                        "roomPersons": {
                          "frontOfficePersons": 0,
                          "houseKeepingPersons": 0
                        },
                        "guestServiceRequest": "DoNotDisturb",
                        "cleaningPriority": {
                          "prioritySequence": 0
                        },
                        "roomCondition": {
                          "roomCondition": {
                            "code": "string",
                            "description": "string"
                          },
                          "assignmentType": "Available",
                          "remarks": "string"
                        },
                        "linenChange": true,
                        "facilityTaskCode": [
                          "string"
                        ]
                      },
                      "outOfOrder": [
                        {
                          "repairRemarks": "string",
                          "returnStatus": "Clean",
                          "reasonCode": "string",
                          "reasonDesc": "string",
                          "newDateRange": {
                            "start": "2020-07-14",
                            "end": "2020-07-14"
                          },
                          "roomStatus": "Clean",
                          "start": "2020-07-14",
                          "end": "2020-07-14"
                        }
                      ],
                      "discrepancy": [
                        "Sleep"
                      ],
                      "sitePlanSection": {
                        "sectionCode": "string",
                        "sectionType": "string",
                        "linkCode": "string",
                        "coordinates": "string",
                        "description": "string"
                      },
                      "componentRoomNumber": "string",
                      "connectingRooms": [
                        {
                          "roomType": {
                            "pseudo": true,
                            "suite": true,
                            "roomClass": "string",
                            "shortDescription": "string",
                            "houseKeeping": true,
                            "smokingPreference": "string",
                            "building": "string",
                            "roomAssignmentRating": "MostImportant",
                            "minimumOccupancy": 0,
                            "maximumOccupancy": 0,
                            "roomFeatures": [
                              {
                                "code": "string",
                                "description": "string",
                                "orderSequence": 0,
                                "quantity": 0
                              }
                            ],
                            "accessible": true,
                            "roomType": "string",
                            "meetingRoom": true
                          },
                          "floor": "string",
                          "floorDescription": "string",
                          "roomFeatures": [
                            {
                              "code": "string",
                              "description": "string",
                              "orderSequence": 0,
                              "quantity": 0
                            }
                          ],
                          "roomDescription": "string",
                          "description": {
                            "defaultText": "string",
                            "translatedTexts": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "smokingPreference": "string",
                          "smokingPreferenceDescription": "string",
                          "building": "string",
                          "roomAssignmentRating": "MostImportant",
                          "accessible": true,
                          "roomId": "string",
                          "meetingRoom": true,
                          "roomCondition": {
                            "code": "string",
                            "description": "string"
                          }
                        }
                      ],
                      "componentRooms": [
                        {
                          "roomType": {
                            "pseudo": true,
                            "suite": true,
                            "roomClass": "string",
                            "shortDescription": "string",
                            "houseKeeping": true,
                            "smokingPreference": "string",
                            "building": "string",
                            "roomAssignmentRating": "MostImportant",
                            "minimumOccupancy": 0,
                            "maximumOccupancy": 0,
                            "roomFeatures": [
                              {
                                "code": "string",
                                "description": "string",
                                "orderSequence": 0,
                                "quantity": 0
                              }
                            ],
                            "accessible": true,
                            "roomType": "string",
                            "meetingRoom": true
                          },
                          "floor": "string",
                          "floorDescription": "string",
                          "roomFeatures": [
                            {
                              "code": "string",
                              "description": "string",
                              "orderSequence": 0,
                              "quantity": 0
                            }
                          ],
                          "roomDescription": "string",
                          "description": {
                            "defaultText": "string",
                            "translatedTexts": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "smokingPreference": "string",
                          "smokingPreferenceDescription": "string",
                          "building": "string",
                          "roomAssignmentRating": "MostImportant",
                          "accessible": true,
                          "roomId": "string",
                          "meetingRoom": true,
                          "roomCondition": {
                            "code": "string",
                            "description": "string"
                          }
                        }
                      ],
                      "attendant": [
                        {
                          "section": {
                            "hotelId": "string",
                            "code": "string",
                            "description": "string",
                            "sectionGroup": "string",
                            "targetCredits": 0,
                            "rooms": 0,
                            "roomCredits": 0,
                            "sequence": 0,
                            "inactive": true
                          },
                          "floor": "string",
                          "attendantId": "string",
                          "attendantName": "string",
                          "hotelId": "string",
                          "activeFlag": "string",
                          "sunday": true,
                          "monday": true,
                          "tuesday": true,
                          "wednesday": true,
                          "thursday": true,
                          "friday": true,
                          "saturday": true,
                          "appUser": {
                            "hotel": {
                              "code": "string",
                              "description": "string"
                            },
                            "appUser": "string",
                            "lDAPUser": "string",
                            "actAs": "string",
                            "actAt": "string",
                            "userDefaultLanguage": "string",
                            "appUserId": {
                              "id": "string",
                              "type": "string"
                            },
                            "cashierId": 0,
                            "cashierTitle": "string",
                            "department": "string",
                            "departmentLocation": "string",
                            "salesRepCode": "string",
                            "expiryDate": "2020-07-14",
                            "disabledUntil": "2020-07-14",
                            "passwordChangeDate": "2020-07-14",
                            "userInfo": {
                              "personName": {
                                "namePrefix": "string",
                                "givenName": "string",
                                "middleName": "string",
                                "surname": "string",
                                "nameSuffix": "string",
                                "nameTitle": "string",
                                "nameTitleSuffix": 0,
                                "envelopeGreeting": "string",
                                "salutation": "string",
                                "nameType": "Primary",
                                "language": "string",
                                "externalSystem": "string"
                              },
                              "profileId": {
                                "id": "string",
                                "type": "string"
                              },
                              "addressInfo": {
                                "address": {
                                  "addressLine": [
                                    "string"
                                  ],
                                  "cityName": "string",
                                  "postalCode": "string",
                                  "cityExtension": "string",
                                  "county": "string",
                                  "state": "string",
                                  "country": {
                                    "value": "string",
                                    "code": "string"
                                  },
                                  "language": "string",
                                  "type": "string",
                                  "typeDescription": "string",
                                  "primaryInd": true,
                                  "updateReservations": true,
                                  "barCode": "string",
                                  "createDateTime": "2020-07-14T09:54:54.236Z",
                                  "creatorId": "string",
                                  "lastModifyDateTime": "2020-07-14T09:54:54.236Z",
                                  "lastModifierId": "string",
                                  "purgeDate": "2020-07-14"
                                },
                                "id": "string",
                                "type": "string"
                              },
                              "emailInfo": {
                                "email": {
                                  "emailAddress": "string",
                                  "type": "string",
                                  "typeDescription": "string",
                                  "emailFormat": "Html",
                                  "primaryInd": true,
                                  "orderSequence": 0,
                                  "createDateTime": "2020-07-14T09:54:54.236Z",
                                  "creatorId": "string",
                                  "lastModifyDateTime": "2020-07-14T09:54:54.236Z",
                                  "lastModifierId": "string",
                                  "purgeDate": "2020-07-14"
                                },
                                "id": "string",
                                "type": "string"
                              },
                              "phoneInfo": {
                                "telephone": {
                                  "phoneTechType": "string",
                                  "phoneUseType": "string",
                                  "phoneUseTypeDescription": "string",
                                  "phoneNumber": "string",
                                  "extension": "string",
                                  "primaryInd": true,
                                  "orderSequence": 0,
                                  "createDateTime": "2020-07-14T09:54:54.236Z",
                                  "creatorId": "string",
                                  "lastModifyDateTime": "2020-07-14T09:54:54.236Z",
                                  "lastModifierId": "string",
                                  "purgeDate": "2020-07-14"
                                },
                                "id": "string",
                                "type": "string"
                              },
                              "department": {
                                "code": "string",
                                "description": "string"
                              },
                              "gender": "Male",
                              "birthDate": "2020-07-14",
                              "birthDateMasked": "string"
                            },
                            "userSessionInfo": {
                              "businessDate": "2020-07-14",
                              "systemDate": "2020-07-14",
                              "terminal": "string",
                              "runningApp": "string",
                              "shareProfiles": true,
                              "hotel": {
                                "code": "string",
                                "description": "string"
                              },
                              "cro": {
                                "code": "string",
                                "description": "string"
                              },
                              "chain": "string",
                              "cROCountryCode": "string",
                              "sessionDefaults": {
                                "dbDateFormat": "string",
                                "oracleDateFormat": "string",
                                "oracleTimeFormat": "string",
                                "javaDateFormat": "string",
                                "javaTimeFormat": "string",
                                "currencyCode": "string",
                                "currencyFormat": "string",
                                "defaultLanguage": "string",
                                "baseLanguage": "string"
                              },
                              "parameters": [
                                {
                                  "parameterName": "string",
                                  "parameterValue": "string"
                                }
                              ]
                            },
                            "attendantInfo": {
                              "attendantId": "string",
                              "hotelId": "string"
                            }
                          },
                          "startTime": "2020-07-14T09:54:54.236Z",
                          "status": "Standby"
                        }
                      ],
                      "hold": {
                        "holdUntil": "2020-07-14T09:54:54.236Z",
                        "holdUser": "string",
                        "comments": "string"
                      },
                      "turndownInfo": {
                        "turndownStatusInfo": "Required"
                      },
                      "resvInfo": [
                        {
                          "guestName": "string",
                          "reservationId": {
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0
                          },
                          "reservationStatusInfo": "Arrival",
                          "stayDateInfo": {
                            "timeSpan": {
                              "startDate": "2020-07-14",
                              "endDate": "2020-07-14",
                              "duration": "string"
                            },
                            "expectedTimes": {
                              "reservationExpectedArrivalTime": "2020-07-14T09:54:54.236Z",
                              "reservationExpectedDepartureTime": "2020-07-14T09:54:54.236Z"
                            }
                          },
                          "vipStatus": {
                            "value": "string",
                            "code": "string"
                          },
                          "profileId": {
                            "id": "string",
                            "type": "string"
                          }
                        }
                      ],
                      "componentRoomNumbers": {
                        "roomId": [
                          "string"
                        ]
                      }
                    }
                  ],
                  "hotelId": "string"
                },
                "totalPages": 0,
                "offset": 0,
                "limit": 0,
                "hasMore": true,
                "totalResults": 0,
                "count": 0,
                "links": [
                  {
                    "href": "string",
                    "rel": "string",
                    "templated": false,
                    "method": "GET",
                    "targetSchema": "string",
                    "operationId": "string",
                    "title": "string"
                  }
                ]
              }
            }
          },
          "204": {
            "description": "HotelRooms not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/rooms/onHold": {
      "post": {
        "summary": "Place Rooms On Hold",
        "description": "You can use this API to place Rooms On Hold. <p><strong>OperationId:</strong>placeRoomsOnHold</p>",
        "operationId": "placeRoomsOnHold",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "holdRooms",
            "in": "body",
            "required": true,
            "description": "Request to place rooms on hold.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/holdRooms"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/rooms/onHold/release": {
      "post": {
        "summary": "Release Rooms On Hold",
        "description": "You can use this API to release Rooms On Hold. <p><strong>OperationId:</strong>releaseRoomsOnHold</p>",
        "operationId": "releaseRoomsOnHold",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "holdRooms",
            "in": "body",
            "required": true,
            "description": "Request to release rooms from being held.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/holdRooms"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/serviceRequests": {
      "get": {
        "summary": "Get Service Requests",
        "description": "Use this API to retrieve any service requests that exist on a reservation. <p><strong>OperationId:</strong>getServiceRequests</p> <p>This API allows a time span of <strong>30</strong> days.</p>",
        "operationId": "getServiceRequests",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "status",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Open",
                "PendingFollowUp",
                "Closed",
                "DoNotDisturb",
                "MakeUpRoom"
              ]
            },
            "required": false
          },
          {
            "name": "priorityCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "departmentCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "reservationId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "reservationIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "reservationIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "profileId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "profileIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "profileIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "room",
            "in": "query",
            "required": false,
            "description": "The room number in which the service request was created.",
            "type": "string"
          },
          {
            "name": "creationEndDate",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "creationStartDate",
            "in": "query",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "closedEndDate",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "closedStartDate",
            "in": "query",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for service requests.",
            "schema": {
              "$ref": "#/definitions/serviceRequestsInfo"
            }
          },
          "204": {
            "description": "ServiceRequests not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      },
      "put": {
        "summary": "Change Service Requests",
        "description": "Use this API to modify any service requests that exist on a reservation. <p><strong>OperationId:</strong>putServiceRequests</p>",
        "operationId": "putServiceRequests",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "serviceRequestsInfo",
            "in": "body",
            "required": true,
            "description": "Change service requests.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/serviceRequestsInfo"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      },
      "post": {
        "summary": "Create Service Requests",
        "description": "Service Request functionality provides the ability to define, track and report Service Requests on a reservation.  They go through a preset flow including creating the request, completing it and then following up on the resolution with the guest. <p><strong>OperationId:</strong>postServiceRequests</p>",
        "operationId": "postServiceRequests",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "serviceRequestsInfo",
            "in": "body",
            "required": true,
            "description": "Add new service request.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/serviceRequestsInfo"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/serviceRequests/{serviceRequestId}": {
      "delete": {
        "summary": "Delete Service Requests",
        "description": "Use this API to delete any service requests that exist on a reservation. <p><strong>OperationId:</strong>deleteServiceRequests</p>",
        "operationId": "deleteServiceRequests",
        "parameters": [
          {
            "name": "serviceRequestId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/sourceReservations/{sourceReservationId}/targetReservations/{targetReservationId}/shiftRooms": {
      "put": {
        "summary": "Operation for Shift Rooms between two reservations",
        "description": "This API will allow you to quickly shift rooms for two reservations. <p><strong>OperationId:</strong>shiftRooms</p>",
        "operationId": "shiftRooms",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "sourceReservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "targetReservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "overrideBackToBackRoomSkip",
            "in": "query",
            "required": false,
            "description": "Specifies if the Swap/Shift action should continue regardless of the reservation having a Back to Back Linked Reservation assigned to the same room. Swap/Shift functionality is available when the Swap/Shift Rooms OPERA Control is active. Back to Back Reservation handling is available when the Back to Back Handling for Linked Reservations OPERA Control is active.",
            "type": "boolean"
          },
          {
            "name": "shiftRooms",
            "in": "body",
            "required": true,
            "description": "Request to Shift Rooms between two selected reservations (from the same property), that are for the same arrival date and room type.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/shiftRooms"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Potential errors which this operation might respond are the following: - Reservation is NOT In-House. - The room is NON-EXISTENT for the hotel. - The room is NOT valid for usage based on its current state. - The room's occupancy level has been compromised. - The room's pricing is NOT available.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/sourceReservations/{sourceReservationId}/targetReservations/{targetReservationId}/swapRooms": {
      "put": {
        "summary": "Operation for Swap/Shift Rooms between two reservations",
        "description": "This API will allow you to quickly swap rooms for two reservations. <p><strong>OperationId:</strong>swapRooms</p>",
        "operationId": "swapRooms",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "sourceReservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "targetReservationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "overrideBackToBackRoomSkip",
            "in": "query",
            "required": false,
            "description": "Specifies if the Swap/Shift action should continue regardless of the reservation having a Back to Back Linked Reservation assigned to the same room. Swap/Shift functionality is available when the Swap/Shift Rooms OPERA Control is active. Back to Back Reservation handling is available when the Back to Back Handling for Linked Reservations OPERA Control is active.",
            "type": "boolean"
          },
          {
            "name": "swapRooms",
            "in": "body",
            "required": true,
            "description": "Request to Swap Rooms between two selected reservations (from the same property), that are for the same arrival date and room type.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/swapRooms"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Potential errors which this operation might respond are the following: - Reservation is NOT In-House. - The room is NON-EXISTENT for the hotel. - The room is NOT valid for usage based on its current state. - The room's occupancy level has been compromised. - The room's pricing is NOT available.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/textMessages/{messageType}": {
      "get": {
        "summary": "Get Queue room text message",
        "description": "You can use this API to get Queue room text message. <p><strong>OperationId:</strong>getQueueRoomsTextMessage</p>",
        "operationId": "getQueueRoomsTextMessage",
        "parameters": [
          {
            "name": "messageType",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "reservationId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "reservationIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "reservationIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "mobileNumber",
            "in": "query",
            "required": false,
            "description": "Mobile number that the text message will be delivered to.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for retrieving a predefined text message, for Queue Reservations or Queue Rush.",
            "schema": {
              "$ref": "#/definitions/queuedRoomsTextMessage"
            }
          },
          "204": {
            "description": "QueueRoomsTextMessage not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    },
    "/hotels/{hotelId}/wakeUpCalls": {
      "get": {
        "summary": "Get Wake Up Calls",
        "description": "Use thisAPI to get existing wake up calls on an in-house reservation. <p><strong>OperationId:</strong>getWakeUpCalls</p>",
        "operationId": "getWakeUpCalls",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "fetchCancelled",
            "in": "query",
            "required": false,
            "description": "Specifies whether we should fetch wake up calls with pending status.",
            "type": "boolean"
          },
          {
            "name": "fetchCompleted",
            "in": "query",
            "required": false,
            "description": "Specifies whether we should fetch wake up calls with pending status.",
            "type": "boolean"
          },
          {
            "name": "fetchNoAnswer",
            "in": "query",
            "required": false,
            "description": "Specifies whether we should fetch wake up calls with pending status.",
            "type": "boolean"
          },
          {
            "name": "fetchPending",
            "in": "query",
            "required": false,
            "description": "Specifies whether we should fetch wake up calls with pending status.",
            "type": "boolean"
          },
          {
            "name": "reservationId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "idExtension",
            "in": "query",
            "required": false,
            "description": "Additional identifying value assigned by the creating system.",
            "type": "integer"
          },
          {
            "name": "reservationIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "reservationIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "beginDate",
            "in": "query",
            "required": false,
            "description": "Begin date from which to start fetching wake up calls.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "description": "End date from which to start fetching wake up calls.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "beginTime",
            "in": "query",
            "required": false,
            "description": "Begin time from which to start fetching wake up calls.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "description": "End time from which to start fetching wake up calls.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "room",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel room(s) for which wake up calls are to be fetched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "blockId",
            "in": "query",
            "required": false,
            "description": "Block code for which wake up calls are to be fetched.",
            "type": "string"
          },
          {
            "name": "guestName",
            "in": "query",
            "required": false,
            "description": "Name with which wake up call may be associated.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Fetch wake up calls response.",
            "schema": {
              "$ref": "#/definitions/wakeUpCalls"
            }
          },
          "204": {
            "description": "WakeUpCalls not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "FrontDeskOperations"
        ]
      }
    }
  },
  "parameters": {
    "authKey": {
      "name": "authorization",
      "description": "Bearer token that needs to be passed which is generated post user authentication",
      "type": "string",
      "in": "header",
      "required": true
    },
    "x-app-key": {
      "name": "x-app-key",
      "description": "Client or Partner's Application Key",
      "type": "string",
      "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
      "in": "header",
      "required": true
    },
    "x-hotelid": {
      "name": "x-hotelid",
      "type": "string",
      "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
      "in": "header",
      "required": true
    },
    "x-externalsystem": {
      "name": "x-externalsystem",
      "type": "string",
      "maxLength": 80,
      "description": "External system code.",
      "in": "header",
      "x-example": "EXTERNALSYSTEMCODE"
    },
    "Accept-Language": {
      "name": "Accept-Language",
      "type": "string",
      "description": "Language code",
      "in": "header"
    },
    "x-hubid": {
      "name": "x-hubid",
      "type": "string",
      "description": "x-hubid is a logical grouping of multiple properties that allows api consumers to manage data from a group of properties. This x-hubid is a valid list of hub codes configured in OPERA to which the user has access. Rest APIs without hotelId in the operation path can support hub level integration using x-hubid",
      "in": "header"
    }
  },
  "responses": {
    "400": {
      "description": "Bad Request",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "401": {
      "description": "Unauthorized"
    },
    "403": {
      "description": "Forbidden"
    },
    "404": {
      "description": "Resource not found",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "405": {
      "description": "Method not allowed"
    },
    "406": {
      "description": "Not acceptable."
    },
    "413": {
      "description": "Request Entity Too Large"
    },
    "414": {
      "description": "Request URI Too Large"
    },
    "415": {
      "description": "Unsupported Media Type"
    },
    "500": {
      "description": "System Error",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "502": {
      "description": "Bad Gateway"
    },
    "503": {
      "description": "Service Unavailable"
    }
  },
  "definitions": {
    "resvForBatchCCAut": {
      "type": "object",
      "description": "Response which contains a listing of reservations, and associated payment methods, that require credit card authorization.",
      "properties": {
        "hotelId": {
          "$ref": "#/definitions/codeType"
        },
        "reservations": {
          "$ref": "#/definitions/reservationsForCCAuthType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "codeType": {
      "type": "string",
      "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
      "minLength": 0,
      "maxLength": 20
    },
    "reservationsForCCAuthType": {
      "type": "array",
      "description": "List of reservations with their payment methods.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationForCCAuthType"
      }
    },
    "reservationForCCAuthType": {
      "type": "object",
      "description": "Reservation details, including a list of the associated payment methods.",
      "properties": {
        "guestName": {
          "description": "Guest name that is registered for the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "reservationId": {
          "$ref": "#/definitions/reservationId"
        },
        "reservationStatusInfo": {
          "$ref": "#/definitions/housekeepingRoomReservationStatusType"
        },
        "stayDateInfo": {
          "$ref": "#/definitions/stayDateInfoType"
        },
        "vipStatus": {
          "description": "VIP status of the guest.",
          "$ref": "#/definitions/vIPStatusType"
        },
        "profileId": {
          "description": "ProfileId of the guest.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "guestFirstName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "room": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "paymentMethods": {
          "$ref": "#/definitions/reservationPaymentMethodsType"
        }
      }
    },
    "reservationId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "housekeepingRoomReservationStatusType": {
      "type": "string",
      "description": "Room Reservation status types used in housekeeping. These may be different from the actual reservation statuses as these relate to the current reservation for the room.",
      "enum": [
        "Arrival",
        "Arrived",
        "DayUse",
        "DueOut",
        "Departed",
        "NotReserved",
        "StayOver"
      ]
    },
    "stayDateInfoType": {
      "type": "object",
      "description": "Room attached with stay detail information",
      "properties": {
        "timeSpan": {
          "$ref": "#/definitions/timeSpanType"
        },
        "expectedTimes": {
          "$ref": "#/definitions/resExpectedTimesType"
        }
      }
    },
    "timeSpanType": {
      "type": "object",
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "duration": {
          "type": "string"
        }
      }
    },
    "resExpectedTimesType": {
      "type": "object",
      "description": "Holds the Arrival and Departure Time Information",
      "properties": {
        "reservationExpectedArrivalTime": {
          "description": "Arrival Time",
          "type": "string",
          "format": "date-time"
        },
        "reservationExpectedDepartureTime": {
          "description": "Departure Time",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "vIPStatusType": {
      "type": "object",
      "description": "VIP status of the customer.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Used for Character Strings, length 0 to 2000.",
          "minLength": 0,
          "maxLength": 2000
        },
        "code": {
          "description": "VIP status of the customer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "uniqueID_Type": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "reservationPaymentMethodsType": {
      "type": "array",
      "description": "Defines reservation payment methods.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationPaymentMethodType"
      }
    },
    "reservationPaymentMethodType": {
      "type": "object",
      "properties": {
        "paymentCard": {
          "$ref": "#/definitions/resPaymentCardType"
        },
        "balance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "authorizationRule": {
          "$ref": "#/definitions/authorizationRuleType"
        },
        "emailFolioInfo": {
          "description": "Information on an email for the customer.",
          "type": "object",
          "properties": {
            "email": {
              "description": "eMail deatils for the profile.",
              "$ref": "#/definitions/emailType"
            },
            "emailFolio": {
              "type": "boolean"
            },
            "id": {
              "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "type": {
              "description": "A reference to the type of object defined by the UniqueID element.",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            }
          }
        },
        "paymentMethod": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "folioView": {
          "type": "integer"
        }
      }
    },
    "resPaymentCardType": {
      "type": "object",
      "description": "Information on a credit card for the customer.",
      "properties": {
        "cardId": {
          "description": "credit card id",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "currentAuthorizedAmount": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "approvalAmountNeeded": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "approvalCode": {
          "description": "Approval code sent by the credit card company on a successful authorization.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cardType": {
          "description": "Indicates the type of credit card from a defined list",
          "$ref": "#/definitions/cardTypeType"
        },
        "userDefinedCardType": {
          "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
          "type": "string",
          "minLength": 0,
          "maxLength": 2
        },
        "cardNumber": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "cardNumberMasked": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "cardNumberLast4Digits": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "expirationDate": {
          "description": "Expiration date of the credit card",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expirationDateMasked": {
          "description": "Masked Expiration date of the credit card",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "expirationDateExpired": {
          "type": "boolean"
        },
        "cardHolderName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "attachCreditCardToProfile": {
          "description": "Attach the credit card to profile.",
          "type": "boolean"
        },
        "processing": {
          "description": "This contains information on whether EFT is enabled. A value of 'C' indicates EFT is enabled and 'M' indicates manual authorization is available for this payment card type.",
          "$ref": "#/definitions/cardProcessingType"
        },
        "swiped": {
          "type": "boolean"
        },
        "cardPresent": {
          "description": "Flag to determine if the credit card was swiped/manually entered , This element is only used when PAYMENT SERVICE DIRECTIVE(PSD) Opera Control is active.",
          "type": "boolean"
        },
        "cardOrToken": {
          "description": "This contains information on whether credit card is tokenized (token enabled). A value of 'Token' indicates credit card is token enabled and 'CardNumber' indicates non token environment for this payment card type.",
          "$ref": "#/definitions/cardNumberTypeType"
        },
        "citId": {
          "description": "Customer Initiated Transaction(CIT) Id for Credit Cards. This is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        }
      }
    },
    "currencyAmountType": {
      "type": "object",
      "description": "A monetary value expressed with a currency code.",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "cardTypeType": {
      "type": "string",
      "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
      "enum": [
        "Ab",
        "Am",
        "Ax",
        "Cb",
        "Dc",
        "Ds",
        "Dt",
        "Ec",
        "Er",
        "Jc",
        "Jl",
        "Mc",
        "Nb",
        "So",
        "St",
        "Sw",
        "Va",
        "Xy",
        "Zz",
        "Cp",
        "Cu"
      ]
    },
    "cardProcessingType": {
      "type": "string",
      "enum": [
        "Eft",
        "Manual"
      ]
    },
    "cardNumberTypeType": {
      "type": "string",
      "description": "Simple type for indicating if credit card number is tokenized.",
      "enum": [
        "CardNumber",
        "Token"
      ]
    },
    "authorizationRuleType": {
      "type": "object",
      "description": "Configured rule for computing the amount to authorize.",
      "properties": {
        "code": {
          "description": "The authorization rule code.",
          "type": "integer",
          "pattern": "[0-9]{1,9}"
        },
        "amount": {
          "description": "The amount applicable to the authorization rule.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "percent": {
          "description": "A percentage value if the authorization rule is percentage based.",
          "type": "number"
        }
      }
    },
    "emailType": {
      "type": "object",
      "description": "Information on an email for the customer.",
      "properties": {
        "emailAddress": {
          "description": "Defines the e-mail address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "type": {
          "description": "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Describes the Type code",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "emailFormat": {
          "description": "Supported Email format.",
          "type": "string",
          "enum": [
            "Html",
            "Text"
          ]
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "instanceLink": {
      "type": "object",
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      }
    },
    "warningsType": {
      "type": "array",
      "description": "Used in conjunction with the Success element to define a business error.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    },
    "warningType": {
      "type": "object",
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "minLength": 1,
          "maxLength": 8
        }
      }
    },
    "exceptionDetailType": {
      "title": "Error Detail",
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "errorInstance": {
      "title": "Error Instance Details",
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "bankAccountsDetails": {
      "type": "object",
      "description": "Returns bank accounts that match the request criteria.",
      "properties": {
        "bankAccounts": {
          "$ref": "#/definitions/bankAccountsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "bankAccountsType": {
      "type": "array",
      "description": "List of bank accounts.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/bankAccountType"
      }
    },
    "bankAccountType": {
      "type": "object",
      "description": "Bank account information like Account ID, Bank Name, Currency, etc.",
      "properties": {
        "hotelId": {
          "description": "Property of the bank account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bankAccountId": {
          "description": "Bank account ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "bankAccountNo": {
          "description": "Account number at the bank.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "bankCode": {
          "description": "Unique code of the bank account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "branchCode": {
          "description": "Code for the branch of the bank.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bankName": {
          "description": "Name of the bank account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "paymentMethod": {
          "description": "Type of payment associated with the bank account.",
          "$ref": "#/definitions/commissionPaymentMethodType"
        },
        "checkFormat": {
          "description": "Type of format for Payment Method.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "currency": {
          "description": "Currency associated with the bank account.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "currentCheckNo": {
          "description": "Current check no of the bank account.",
          "type": "number"
        },
        "hotelName": {
          "description": "Property name of the bank account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "default": {
          "description": "Whether this bank account is to be the default in case no bank account is associated with the travel agent or source.",
          "type": "boolean"
        },
        "linkedToProfile": {
          "description": "Whether this bank account is associated with the travel agent or source.",
          "type": "boolean"
        }
      }
    },
    "commissionPaymentMethodType": {
      "type": "object",
      "description": "This contains a generic code and description information.",
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "format": {
          "description": "Payment format if the payment method is EFT.",
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        }
      }
    },
    "codeDescriptionType": {
      "type": "object",
      "description": "This contains a generic code and description information.",
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "commissionCheckToBeChanged": {
      "type": "object",
      "description": "Request type for updating commission check.",
      "properties": {
        "criteria": {
          "description": "Contains criteria for updating check payment",
          "$ref": "#/definitions/changeCommissionCheckCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changeCommissionCheckCriteriaType": {
      "type": "object",
      "description": "Base type for payment activity information",
      "properties": {
        "hotelId": {
          "description": "Property of the commission record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bankAccountId": {
          "description": "Unique id of bank account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "batchId": {
          "description": "Batch id of the commission payments.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "checkNo": {
          "description": "New check no of commission check.",
          "type": "number"
        },
        "paymentId": {
          "description": "Unique payment id of the commission check.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "commissionCheckStatus": {
      "type": "object",
      "description": "Response Body.",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commissionPaymentsActivityDetails": {
      "type": "object",
      "description": "Response type for commission payments activity.",
      "properties": {
        "paymentsActivity": {
          "description": "List of payment activity information",
          "$ref": "#/definitions/commissionPaymentsActivityType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commissionPaymentsActivityType": {
      "type": "array",
      "description": "List of payment activity information",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/commissionPaymentActivityType"
      }
    },
    "commissionPaymentActivityType": {
      "type": "object",
      "description": "Base type for payment activity information",
      "properties": {
        "hotelId": {
          "description": "Property of the commission record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bankAccountId": {
          "description": "Unique id of bank account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "batchId": {
          "description": "Batch id of the commission payments.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "paymentId": {
          "description": "Unique payment id of the commission check.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "agentId": {
          "description": "Unique travel agent or source profile ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "paymentDate": {
          "description": "Payment date of commission",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "checkNo": {
          "description": "Check no of payment.",
          "type": "number"
        },
        "fileName": {
          "description": "File name if payment method is EFT.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "status": {
          "description": "Payment activity status.",
          "$ref": "#/definitions/commissionPaymentActivityStatusType"
        },
        "payee": {
          "description": "Payee of commission",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "commissionAmount": {
          "description": "Commission amount payment.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "statusDate": {
          "description": "Status date of payment activity",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "onCommission": {
          "description": "Whether this payment batch has related commission records. Commission records could be unlinked for check payments when it is reprinted.",
          "type": "boolean"
        }
      }
    },
    "commissionPaymentActivityStatusType": {
      "type": "string",
      "description": "Simple type for payment activity status type. Valid values are Outstanding, Reconciled, Unpresented and Void.",
      "enum": [
        "Outstanding",
        "Reconciled",
        "Unpresented",
        "Void",
        "Failed"
      ]
    },
    "commissionPaymentActivityByRangeToBeChanged": {
      "type": "object",
      "description": "Request type for updating a range of payments activity.",
      "properties": {
        "criteria": {
          "description": "Contains criteria for updating a range of payments activity",
          "$ref": "#/definitions/changeCommissionPaymentActivityRangeCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changeCommissionPaymentActivityRangeCriteriaType": {
      "type": "object",
      "description": "Base type for payment activity information",
      "properties": {
        "hotelId": {
          "description": "Property of the commission record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bankAccountId": {
          "description": "Unique id of bank account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "batchId": {
          "description": "Batch id of the commission payments.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "paymentActivityRange": {
          "description": "Batch or Check range numbers.",
          "$ref": "#/definitions/numberRangeType"
        },
        "paymentActivityStatus": {
          "description": "Criteria for updating status of a range payment activity.",
          "$ref": "#/definitions/commissionPaymentActivityStatusCriteriaType"
        }
      }
    },
    "numberRangeType": {
      "type": "object",
      "description": "Date Range with Start and End dates.",
      "properties": {
        "from": {
          "description": "The starting value of the range of number",
          "type": "integer"
        },
        "to": {
          "description": "The ending value of the range of number",
          "type": "integer"
        }
      }
    },
    "commissionPaymentActivityStatusCriteriaType": {
      "type": "object",
      "description": "Criteria for updating status of a range of payment activity .",
      "properties": {
        "status": {
          "description": "New status for payment activity.",
          "$ref": "#/definitions/commissionPaymentActivityStatusType"
        },
        "statusDate": {
          "description": "Date applied when new status is applied. Used in Unpresented and Reconcile.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "commissionPaymentActivityByRangeStatus": {
      "type": "object",
      "description": "Response Body.",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reprintCommissionCheckByRange": {
      "type": "object",
      "description": "Request type for reprinting a range of check payments.",
      "properties": {
        "criteria": {
          "description": "Contains criteria for reprinting a range of check payments",
          "$ref": "#/definitions/reprintCommissionCheckRangeCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reprintCommissionCheckRangeCriteriaType": {
      "type": "object",
      "description": "Base type for payment activity information",
      "properties": {
        "hotelId": {
          "description": "Property of the commission record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bankAccountId": {
          "description": "Unique id of bank account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "batchId": {
          "description": "Batch id of the commission payments.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "checkRange": {
          "description": "Check range.",
          "$ref": "#/definitions/numberRangeType"
        },
        "startCheckNo": {
          "description": "Start check no of commission to be applied to the set.",
          "type": "number"
        },
        "allowExistingCheckNo": {
          "description": "Set to true if an existing check number can be used as the starting check number for reprint.",
          "type": "boolean"
        }
      }
    },
    "reprintCommissionCheckByRangeStatus": {
      "type": "object",
      "description": "Response type for reprinting a range of check payments.",
      "properties": {
        "reprintCheckReport": {
          "description": "Contains report id and batch id",
          "$ref": "#/definitions/commissionPaymentReportType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commissionPaymentReportType": {
      "type": "object",
      "description": "Contains report id, batch id (for check payments) or export file (for eft payments)",
      "properties": {
        "reportId": {
          "description": "The report instance ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "batchId": {
          "description": "Batch id of the commission payments.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "batchName": {
          "description": "If payment method is EFT, batch name of the payments.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "exportFile": {
          "description": "If payment method is EFT, file location of the file generated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "exportBlobFile": {
          "description": "If payment method is EFT, Export BLOB file from database in base64 binary format.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "batchCCAuth": {
      "type": "object",
      "description": "Request to start a batch job that will process a list of reservation, and their associated payment methods, that require credit card authorizations.",
      "properties": {
        "hotelId": {
          "$ref": "#/definitions/codeType"
        },
        "reservations": {
          "$ref": "#/definitions/reservationsForCCAuthType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "batchCCAuthToProcess": {
      "type": "object",
      "description": "Response for starting a credit card authorization batch job, which contains the batch ID upon success.",
      "properties": {
        "batchId": {
          "type": "integer"
        },
        "processId": {
          "$ref": "#/definitions/stringLength200"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "stringLength200": {
      "type": "string",
      "description": "Used for Character Strings, length 0 to 200.",
      "maxLength": 200,
      "minLength": 0
    },
    "reservationsInfo": {
      "type": "object",
      "description": "Response object to the Fetch Reservation Request operation. Based on the criteria, reservation information is returned.",
      "properties": {
        "reservationInfoList": {
          "description": "Collection of Reservations and their information.",
          "type": "object",
          "properties": {
            "reservationInfo": {
              "description": "Contains details of the reservation.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/reservationInfoType"
              }
            }
          }
        },
        "masterInfoList": {
          "description": "Refer to Generic common types document",
          "type": "array",
          "items": {
            "$ref": "#/definitions/masterInfoType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationInfoType": {
      "type": "object",
      "description": "The Reservation class contains the current reservation being created or altered.",
      "properties": {
        "reservationIdList": {
          "description": "Unique identifiers for the reservation for both internal and external systems",
          "$ref": "#/definitions/reservationIdList"
        },
        "externalReferences": {
          "description": "External Reference information for Reservation.",
          "$ref": "#/definitions/externalReferencesType"
        },
        "roomStay": {
          "description": "Collection of room stays.",
          "$ref": "#/definitions/stayInfoType"
        },
        "reservationGuest": {
          "description": "Collection of guests associated with the reservation.",
          "$ref": "#/definitions/resGuestInfoType"
        },
        "sharedGuests": {
          "description": "Collection of guests who share this reservation.",
          "$ref": "#/definitions/resSharedGuestListType"
        },
        "attachedProfiles": {
          "description": "List of attached profiles",
          "$ref": "#/definitions/resAttachedProfileListType"
        },
        "reservationPaymentMethod": {
          "description": "Payment method used for this reservation",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "reservationFolioWindows": {
          "description": "Collection of reservation folio windows.",
          "$ref": "#/definitions/reservationFolioWindowsType"
        },
        "specials": {
          "description": "Set of reservation preferences which belongs to the Specials group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "lastPrivacyPromptDate": {
          "description": "Last Privacy Prompt Date",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "displayColor": {
          "description": "Color setting of the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationIndicators": {
          "description": "Indicators of additional information attached to the reservation",
          "$ref": "#/definitions/indicatorsType"
        },
        "roomStatus": {
          "description": "Current room status",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "searchMatches": {
          "description": "Super Search matching terms.",
          "$ref": "#/definitions/searchMatchesType"
        },
        "sourceOfSale": {
          "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
          "$ref": "#/definitions/sourceOfSaleType"
        },
        "waitlist": {
          "description": "Information regarding why reservation has been/was waitlisted. This could hold information as history even if reservation is not in Waitlist status anymore.",
          "$ref": "#/definitions/waitlistResType"
        },
        "queue": {
          "description": "Information about the time and duration this reservation was on Queue for Checkin.",
          "$ref": "#/definitions/reservationQueueInformationType"
        },
        "housekeeping": {
          "description": "Information regarding housekeeping for this reservation.",
          "$ref": "#/definitions/resHousekeepingType"
        },
        "cashiering": {
          "description": "Holds cashiering related information for the reservation.",
          "$ref": "#/definitions/resCashieringType"
        },
        "taxType": {
          "description": "This stores the code for the type of tax calculation especially with tax exemption, etc.",
          "$ref": "#/definitions/taxTypeType"
        },
        "deposit": {
          "description": "Holds reservation deposit information.",
          "$ref": "#/definitions/reservationDepositType"
        },
        "allowedActions": {
          "description": "Collection of reservation allowed actions.",
          "$ref": "#/definitions/reservationAllowedActionsType"
        },
        "revenuesAndBalances": {
          "description": "Revenues and Balances Amount summary for the reservation.",
          "$ref": "#/definitions/resRevenueBalanceType"
        },
        "hotelInterfaceStatusList": {
          "description": "Collection of Hotel Interfaces and rights, this is populated only when fetching interface status for rooms.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationInterfaceStatusType"
          }
        },
        "guestPreferredCurrency": {
          "description": "Currency code preferred by guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "turndownInfo": {
          "description": "Currency code preferred by guest.",
          "$ref": "#/definitions/reservationTurndownInfoType"
        },
        "mobileNotifications": {
          "description": "Denotes the status of Room Ready, Key Ready messages.",
          "$ref": "#/definitions/resMobileNotificationsType"
        },
        "reservationCommunication": {
          "description": "Collection of reservation communication details.",
          "$ref": "#/definitions/resCommunicationType"
        },
        "advanceCheckIn": {
          "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
          "$ref": "#/definitions/advanceCheckInType"
        },
        "welcomeOffer": {
          "description": "This flag will determine wheather the reservation is eligible for Welcome Offer or not.",
          "type": "boolean"
        },
        "cancellationInfo": {
          "description": "Information regarding why reservation has been/was cancelled.",
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "code": {
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "date": {
              "description": "Date when reservation was last cancelled.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            }
          }
        },
        "keyCount": {
          "description": "Number of keys created for the reservation.",
          "type": "integer"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "expectedServiceTime": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomStayReservation": {
          "description": "Boolean True if this reservation is reserving rooms. False if it is only reserving services.",
          "type": "boolean"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "computedReservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "walkInIndicator": {
          "description": "When true, indicates the reservation is for a guest that walks-in without a reservation. When false, the reservation is not a walk-in.",
          "type": "boolean"
        },
        "accessRestriction": {
          "description": "Indicates user restriction on the reservation based on the Access exclusion functionality such as Restriction on Changes, Cancellation or both.",
          "$ref": "#/definitions/resAccessRestrictionType"
        },
        "commissionPayoutTo": {
          "description": "If not null, reservation is considered to pay out commission to either Travel Agent, Source or both.",
          "$ref": "#/definitions/commissionPayoutToType"
        },
        "paymentMethod": {
          "description": "Payment Method.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "preRegistered": {
          "description": "Defines if the reservation is pre-registered or not.",
          "type": "boolean"
        },
        "openFolio": {
          "description": "Returns true when reservation has an open folio.",
          "type": "boolean"
        },
        "allowMobileCheckout": {
          "description": "Flag containing true or false value for reservation to be eligible for self-checkout by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile checkout yes / no. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "allowMobileViewFolio": {
          "description": "Attribute AllowMobileViewFolio is set to true when the reservation is eligible for viewing folio using mobile device.",
          "type": "boolean"
        },
        "optedForCommunication": {
          "description": "Attribute OptedForCommunication is set to true when the guest has opted for receiving communicationsl related to the reservation.",
          "type": "boolean"
        },
        "backToBack": {
          "description": "Back to Back functionality is available when the Back to Back Handling of Linked Reservations OPERA Control is active.",
          "type": "boolean"
        }
      }
    },
    "reservationIdList": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "externalReferencesType": {
      "type": "array",
      "description": "This type contains unique information of external reference.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/externalReferenceType"
      }
    },
    "externalReferenceType": {
      "type": "object",
      "description": "This type contains unique information of external reference.",
      "properties": {
        "id": {
          "description": "Unique ID of external reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "ID extension for external reference.",
          "type": "integer"
        },
        "idContext": {
          "description": "ID context for external reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "stayInfoType": {
      "type": "object",
      "description": "Details on the Room Stay including Guest Counts, Time Span of this Room Stay, pointers to Res Guests, guest Memberships, Comments and Special Requests pertaining to this particular Room Stay and finally financial information related to the Room Stay, including Guarantee, Deposit and Payment and Cancellation Penalties.",
      "properties": {
        "arrivalDate": {
          "type": "string",
          "format": "date"
        },
        "departureDate": {
          "type": "string",
          "format": "date"
        },
        "originalTimeSpan": {
          "description": "The Original Time Span covers the Room Stay dates of the original reservation.",
          "$ref": "#/definitions/timeSpanType"
        },
        "expectedTimes": {
          "description": "The expected arrival, return and departure times of the guest.",
          "$ref": "#/definitions/resExpectedTimesType"
        },
        "adultCount": {
          "description": "A collection of Guest Counts associated with Room Stay.",
          "type": "integer"
        },
        "childCount": {
          "description": "A collection of Child Counts associated with Room Stay.",
          "type": "integer"
        },
        "roomClass": {
          "description": "Room class code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "description": "Room type code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "componentRoomType": {
          "description": "True indicates room type is a component type.",
          "type": "boolean"
        },
        "numberOfRooms": {
          "description": "Room Id",
          "type": "integer"
        },
        "roomId": {
          "description": "Room Id",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCode": {
          "description": "Rate plan code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateAmount": {
          "description": "Rate amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "points": {
          "description": "The Points contains the number of points used to book a particular room type.",
          "$ref": "#/definitions/pointsType"
        },
        "rateSuppressed": {
          "description": "Whether this rate should be suppressed from view",
          "type": "boolean"
        },
        "reservationBlock": {
          "description": "Key information about the block for this reservation.",
          "$ref": "#/definitions/reservationBlockType"
        },
        "bookingChannelCode": {
          "description": "Booking channel code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "linkCode": {
          "description": "Party code",
          "type": "string",
          "maxLength": 2000
        },
        "fixedRate": {
          "description": "True if the rate is a fixed rate, otherwise false",
          "type": "boolean"
        },
        "totalAmount": {
          "description": "The total amount charged for the Room Stay including additional occupant amounts and fees. If TaxInclusive is set to True, then taxes are included in the total amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "guarantee": {
          "description": "The guarantee information associated to the Room Stay. A maximum of 5 occurances are available for use depending on the context.",
          "$ref": "#/definitions/resGuaranteeType"
        },
        "promotion": {
          "description": "Promotion Codes",
          "$ref": "#/definitions/promotionType"
        },
        "marketCode": {
          "description": "Market code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "marketDescription": {
          "description": "Description of Market code",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "sourceCode": {
          "description": "Source of business",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceCodeDescription": {
          "description": "Description of the source of business.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "balance": {
          "description": "Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "roomTypeCharged": {
          "description": "Room type code that was charged",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "depositPayments": {
          "description": "A collection of deposit and/or payments for the Room Stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "guestServiceStatus": {
          "description": "Service Status of In House guest like DND or MUP",
          "$ref": "#/definitions/guestHousekeepingServiceRequestType"
        },
        "scheduledCheckoutTime": {
          "description": "Indicates that this reservation is scheduled for automated check out.",
          "type": "string",
          "format": "date"
        },
        "roomNumberLocked": {
          "description": "When true, indicates a room number cannot be changed. When false, indicates a room number may be changed.",
          "type": "boolean"
        },
        "pseudoRoom": {
          "description": "True indicates as pseudo room type. This is usually used for a posting master reservation.",
          "type": "boolean"
        },
        "assignedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        },
        "upgradedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        }
      }
    },
    "pointsType": {
      "type": "object",
      "description": "The Redeem Points contains the number of points required to book a room type.",
      "properties": {
        "awardsType": {
          "description": "Awards type for the award type rate code.",
          "type": "string"
        },
        "points": {
          "description": "No of points required to book this Room Stay.",
          "type": "integer"
        }
      }
    },
    "reservationBlockType": {
      "type": "object",
      "description": "Key information about the block for a reservation.",
      "properties": {
        "blockIdList": {
          "description": "Collection of unique block identifiers for the reservation.",
          "$ref": "#/definitions/blockIdList"
        },
        "blockName": {
          "description": "The Name of the block that is attached to the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "hotelId": {
          "description": "This is the HotelCode of the Block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "blockIdList": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "resGuaranteeType": {
      "type": "object",
      "description": "Validations type record returned after Validations are done.",
      "properties": {
        "guaranteeCode": {
          "description": "Guarantee Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "shortDescription": {
          "description": "Guarantee Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "onHold": {
          "description": "Guarantee Code.",
          "type": "boolean"
        }
      }
    },
    "promotionType": {
      "type": "object",
      "description": "Type to specify a rate promotion. Usually attached to a reservation to indicate a specific promotion is applied to the reservation.",
      "properties": {
        "promotionCode": {
          "description": "Promotion code associated with the rate plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "promotionName": {
          "description": "Promotion code Name associated with the rate plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "couponCode": {
          "description": "Promotion Coupon Code when promotion is setup to have a valid coupon code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "guestHousekeepingServiceRequestType": {
      "type": "string",
      "description": "Possible values for the Guest Service Status.",
      "enum": [
        "DoNotDisturb",
        "MakeUpRoom",
        "NoStatusSelected"
      ]
    },
    "resGuestInfoType": {
      "type": "object",
      "description": "Specifies Company or Travel Agent profile using IATA or Corp. No.",
      "properties": {
        "membership": {
          "description": "The Membership object identifying the frequent customer reward program.",
          "$ref": "#/definitions/membershipInfoType"
        },
        "namePrefix": {
          "description": "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)",
          "$ref": "#/definitions/namePrefixType"
        },
        "givenName": {
          "description": "Given name, first name or names",
          "$ref": "#/definitions/givenNameType"
        },
        "alternateGivenName": {
          "description": "Alternate given name, first name or names",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "middleName": {
          "description": "The middle name of the person name",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "surnamePrefix": {
          "description": "e.g \"van der\", \"von\", \"de\"",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "surname": {
          "description": "Family name, last name.",
          "$ref": "#/definitions/surnameType"
        },
        "alternateSurname": {
          "description": "Alternate family name, last name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "fullName": {
          "description": "Full display name",
          "type": "string"
        },
        "alternateFullName": {
          "description": "Altername full display name",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Phone number",
          "$ref": "#/definitions/phoneNumberType"
        },
        "email": {
          "description": "Email address",
          "$ref": "#/definitions/basicEmailType"
        },
        "birthDate": {
          "description": "Date of birth",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nationality": {
          "description": "Affiliation or ethnicity to a particular country.",
          "$ref": "#/definitions/countryNameType"
        },
        "vip": {
          "description": "The supplier's ranking of the customer (e.g., VIP, numerical ranking).",
          "$ref": "#/definitions/vIPType"
        },
        "address": {
          "description": "Address information that is attached to the reservation guest",
          "$ref": "#/definitions/addressSearchType"
        },
        "anonymization": {
          "description": "Provides information about the guest's anonymization status",
          "$ref": "#/definitions/anonymizationType"
        },
        "accompanyGuests": {
          "description": "List of guest names that are accompanying the reservation guest",
          "$ref": "#/definitions/resAccompanyGuestListType"
        },
        "externalInfo": {
          "description": "External information about the guest associated with the reservation.",
          "$ref": "#/definitions/resGuestExternalInfoType"
        },
        "guestLastStayInfo": {
          "description": "Contains information regarding the last stay of this guest.",
          "$ref": "#/definitions/guestLastStayInfoType"
        },
        "guestRestrictedCode": {
          "description": "Guest profile restricted reason code",
          "type": "string"
        },
        "guestRestrictedReasonDesc": {
          "description": "Guest profile restricted reason description",
          "type": "string"
        },
        "guestRestricted": {
          "description": "True indicates there are restrictions associated with the current profile.",
          "type": "boolean"
        },
        "registrationCardNo": {
          "description": "Unique identifier of the police registration card number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameType": {
          "$ref": "#/definitions/nameTypeType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "membershipInfoType": {
      "type": "object",
      "description": "The Membership object identifies the frequent customer reward program.",
      "properties": {
        "membershipId": {
          "description": "Membership ID (Unique ID from the memberships table).",
          "type": "number"
        },
        "programCode": {
          "description": "The code or name of the membership program ('Hertz', 'AAdvantage', etc.).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bonusCode": {
          "description": "The code or name of the bonus program. BonusCode can be used to indicate the level of membership (Gold Club, Platinum member, etc.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "membershipTypeDesc": {
          "description": "The description of the ProgramCode.(Delta Previlige for code DP)",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "membershipLevelDesc": {
          "description": "The description of the Bonus Code.(Platinum for code P)",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "accountId": {
          "description": "The account identification number for this particular member in this particular program.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "membershipLevel": {
          "description": "The code or name of the membership level and indicates the level of membership (Gold Club, Platinum member, etc.). This is same as the BonusCode.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        }
      }
    },
    "namePrefixType": {
      "type": "string",
      "description": "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)",
      "minLength": 0,
      "maxLength": 40
    },
    "givenNameType": {
      "type": "string",
      "description": "Given name, first name or names",
      "minLength": 0,
      "maxLength": 40
    },
    "surnameType": {
      "type": "string",
      "description": "Family name, last name.",
      "minLength": 0,
      "maxLength": 80
    },
    "phoneNumberType": {
      "type": "string",
      "description": "Phone number",
      "minLength": 0,
      "maxLength": 40
    },
    "basicEmailType": {
      "type": "string",
      "description": "Email address",
      "minLength": 0,
      "maxLength": 2000
    },
    "countryNameType": {
      "type": "object",
      "description": "Code for a country or a nationality.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Used for Character Strings, length 0 to 200 - It indicates country/nationality description.",
          "minLength": 0,
          "maxLength": 200
        },
        "code": {
          "description": "Code for a country or a nationality.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "displayCountryFlag": {
          "description": "Setting this to true will display the guest profile's country flag in the OPERA Cloud user interface, if it is configured.",
          "type": "boolean"
        },
        "isoCode": {
          "description": "ISO standard code for country.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "vIPType": {
      "type": "object",
      "description": "The supplier's ranking of the customer.",
      "properties": {
        "vipCode": {
          "description": "VIP Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vipDescription": {
          "description": "VIP Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "addressSearchType": {
      "type": "object",
      "description": "Address Details such as city, state, country, postal code etc.",
      "properties": {
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "streetAddress": {
          "description": "First Line of Street Address. For profile search it matches the first Address line.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "excludeNoCity": {
          "description": "When true indicates that only profiles with city will be fetched.",
          "type": "boolean"
        }
      }
    },
    "anonymizationType": {
      "type": "object",
      "description": "Provides information about guest's anonymization status.",
      "properties": {
        "anonymizationStatus": {
          "description": "Status of anonymization such as Requested or Anonymized.",
          "$ref": "#/definitions/anonymizationStatusType"
        },
        "anonymizationDate": {
          "description": "Date and Time when the guest was anonymized.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "anonymizationStatusType": {
      "type": "string",
      "description": "Guest has been anonymized.",
      "enum": [
        "Requested",
        "Anonymized"
      ]
    },
    "resAccompanyGuestListType": {
      "type": "array",
      "description": "Collection of accompany guests",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAccompanyGuestInfoType"
      }
    },
    "resAccompanyGuestInfoType": {
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        },
        "registrationCardNo": {
          "description": "Unique identifier of the police registration card number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
          "$ref": "#/definitions/profileIdList"
        }
      }
    },
    "profileIdList": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "resGuestExternalInfoType": {
      "type": "object",
      "description": "Specifies Company or Travel Agent profile using IATA or Corp. No.",
      "properties": {
        "givenName": {
          "description": "Given name, first name or names",
          "$ref": "#/definitions/givenNameType"
        },
        "surname": {
          "description": "Family name, last name.",
          "$ref": "#/definitions/surnameType"
        }
      }
    },
    "guestLastStayInfoType": {
      "type": "object",
      "description": "Contains last stay related details of the guest.",
      "properties": {
        "lastStayDate": {
          "description": "Guest's last stay date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastStayRoom": {
          "description": "Room Number where the guest stayed.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "lastStayRate": {
          "description": "The Rate amount of the guest's last stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalStay": {
          "description": "The total number of previous stay of the guest.",
          "type": "integer"
        }
      }
    },
    "nameTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Agent",
        "Contact",
        "Source",
        "Group",
        "Employee",
        "Hotel",
        "Purge"
      ]
    },
    "resSharedGuestListType": {
      "type": "array",
      "description": "Collection of shared guest reservations.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resSharedGuestInfoType"
      }
    },
    "resSharedGuestInfoType": {
      "type": "object",
      "description": "Contains information regarding the share reservation.",
      "properties": {
        "profileId": {
          "$ref": "#/definitions/profileId"
        },
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        }
      }
    },
    "profileId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "resAttachedProfileListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAttachedProfileType"
      }
    },
    "resAttachedProfileType": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Attached profile name",
          "type": "string"
        },
        "profileIdList": {
          "description": "Collection of unique profile identifiers",
          "$ref": "#/definitions/profileIdList"
        },
        "reservationProfileType": {
          "$ref": "#/definitions/resProfileTypeType"
        }
      }
    },
    "resProfileTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Group",
        "TravelAgent",
        "Source",
        "ReservationContact",
        "BillingContact",
        "Addressee"
      ]
    },
    "reservationFolioWindowsType": {
      "type": "array",
      "description": "Collection of reservation folio windows.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationFolioWindowType"
      }
    },
    "reservationFolioWindowType": {
      "type": "object",
      "description": "Folio window view which holds the set of folios for a reservation.",
      "properties": {
        "payeeInfo": {
          "description": "The window's configured payee information.",
          "$ref": "#/definitions/payeeInfoType"
        },
        "balance": {
          "description": "Running balance of the window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "paymentMethod": {
          "description": "Payment Method Type",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioWindowNo": {
          "type": "integer"
        }
      }
    },
    "payeeInfoType": {
      "type": "object",
      "description": "Payee information.",
      "properties": {
        "payeeId": {
          "description": "Opera name id of the payee.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "payeeName": {
          "description": "Name of the payee.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "payeeAddress": {
          "description": "Address of the payee.",
          "$ref": "#/definitions/addressInfoType"
        },
        "payeeAddressCount": {
          "description": "Payee multiple address count.",
          "type": "integer"
        },
        "payeeReferenceCurrency": {
          "description": "Reference currency of the payee.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "payeeAccountInfo": {
          "description": "AR account short info of the payee.",
          "$ref": "#/definitions/aRAccountShortInfoType"
        },
        "payeeTaxNumber": {
          "description": "The tax number of the payee.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "addressInfoType": {
      "type": "object",
      "description": "Provides address information.",
      "properties": {
        "address": {
          "description": "Address details for the profile.",
          "$ref": "#/definitions/addressType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "addressType": {
      "type": "object",
      "description": "Provides address information.",
      "properties": {
        "isValidated": {
          "description": "Indicator to define if the Address is validated by the Address Validation System.",
          "type": "boolean"
        },
        "addressLine": {
          "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "type": "array",
          "maxItems": 4,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 80
          }
        },
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "cityExtension": {
          "description": "Post Office City Extension Code number. City Extension mainly used for UK addresses.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "county": {
          "description": "County or District Name (e.g., Fairfax). This is read only.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "type": {
          "description": "Defines the type of address (e.g. home, business, other).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Describes the type code",
          "type": "string"
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "updateReservations": {
          "description": "Indicates whether to update the reservations or not. If true and the address is primary, then all associated active reservations will be updated with the new primary address.",
          "type": "boolean"
        },
        "barCode": {
          "description": "The postal barcode for the address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "aRAccountShortInfoType": {
      "type": "object",
      "description": "Accounts Receivabales Account details type charged for batched posting.",
      "properties": {
        "accountName": {
          "description": "Name of the AR Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "accountId": {
          "description": "The unique ID for the Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountNo": {
          "description": "The Account Number for the Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "status": {
          "description": "The status of the account.",
          "$ref": "#/definitions/aRAccountStatusType"
        }
      }
    },
    "aRAccountStatusType": {
      "type": "object",
      "description": "Type for the Account Status. Status can be restricted and a message/description added to the Account.",
      "properties": {
        "restriction": {
          "description": "The Restriction Code added on the Account. This is available when the functionality for adding restriction codes is ON.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "User defined status message on the Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "restricted": {
          "description": "Flag to indicate if the Account is restricted.",
          "type": "boolean"
        }
      }
    },
    "indicatorsType": {
      "type": "array",
      "description": "Collection of lamp indicators.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/indicatorType"
      }
    },
    "indicatorType": {
      "type": "object",
      "description": "Lamp indicator Type.",
      "properties": {
        "indicatorName": {
          "description": "Name of the indicator.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "count": {
          "description": "Indicates number of occurrences of the indicator.",
          "type": "integer"
        }
      }
    },
    "housekeepingRoomStatusType": {
      "type": "string",
      "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
      "enum": [
        "Clean",
        "Dirty",
        "Pickup",
        "Inspected",
        "OutOfOrder",
        "OutOfService"
      ]
    },
    "searchMatchesType": {
      "type": "array",
      "description": "List of Generic Name-Value-Pair Parameters used for super search matches.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/searchMatchType"
      }
    },
    "searchMatchType": {
      "type": "object",
      "description": "Search match indicating attribute and the matching value.",
      "properties": {
        "attribute": {
          "description": "Search match attribute.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "value": {
          "description": "Search match value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "sourceOfSaleType": {
      "type": "object",
      "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
      "properties": {
        "sourceType": {
          "description": "Type of entity/channel who made the reservation..",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "sourceCode": {
          "description": "The entity/channel who made the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "waitlistResType": {
      "type": "object",
      "description": "Information regarding why reservation is being /has been waitlisted.",
      "properties": {
        "reasonDescription": {
          "description": "Waitlist Reason Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "priorityDescription": {
          "description": "Waitlist priority Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "description": {
          "description": "Description why the reservation is being /has been waitlisted.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "reasonCode": {
          "description": "Waitlist Reason Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "priorityCode": {
          "description": "Waitlist Priority Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "telephone": {
          "description": "Guest telephone number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "reservationQueueInformationType": {
      "type": "object",
      "description": "Information regarding the Date, Duration and Priority of the reservation on Queue for Check in.",
      "properties": {
        "timeSpan": {
          "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
          "type": "object",
          "properties": {
            "startDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "endDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "duration": {
              "type": "string"
            },
            "durationInSeconds": {
              "description": "The total duration, in seconds, the reservation is on Queue.",
              "type": "integer"
            }
          }
        },
        "guestTextInfo": {
          "description": "Information for the message sent to the user",
          "$ref": "#/definitions/queueTextInfoType"
        },
        "priority": {
          "description": "The Queue Priority given to this reservation.",
          "type": "integer"
        },
        "averageQueueTimeToCheckIn": {
          "description": "The average time, in seconds, a reservation was on queue prior to Check-In.",
          "type": "integer"
        },
        "averageQueueTimeCurrentReservations": {
          "description": "The average time, in seconds, of the reservations currently in queue.",
          "type": "integer"
        },
        "queueDate": {
          "description": "The Business date on which the reservation was due to arrive and is currently placed on Queue for Check In.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "queueTextInfoType": {
      "type": "object",
      "description": "Information regarding the message sent to guest.",
      "properties": {
        "sentTime": {
          "description": "Time the text was last sent to the user.",
          "type": "string",
          "format": "date-time"
        },
        "sentBy": {
          "description": "User name of the user who sent message.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "resHousekeepingType": {
      "type": "object",
      "description": "Holds housekeeping turndown service information for the room.",
      "properties": {
        "instructions": {
          "description": "Turndown instructions for the room.",
          "type": "string"
        },
        "facilityTaskInfo": {
          "description": "The facility task applicable for the current day. This will be information only and not used for any updates.",
          "$ref": "#/definitions/facilityTaskType"
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "turndownRequested": {
          "description": "Indicates whether guest wants turndown facility or not.",
          "type": "boolean"
        },
        "serviceTime": {
          "description": "This is the Turndown room service time.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expectedServiceTime": {
          "description": "Expected Start Time for housekeeping task(s).",
          "type": "string"
        },
        "roomStatus": {
          "description": "Current room status. Current room status is populated only if room is assigned to the reservation and reservation is due in or in house.",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        }
      }
    },
    "facilityTaskType": {
      "type": "object",
      "description": "Information regarding facility task on a reservation.",
      "properties": {
        "task": {
          "description": "The Task Code.",
          "$ref": "#/definitions/housekeepingTaskCodeType"
        },
        "supplies": {
          "description": "Supplies associated with the task.",
          "$ref": "#/definitions/facilityCodesType"
        },
        "date": {
          "description": "The Date on which the task is applicable.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "housekeepingTaskCodeType": {
      "type": "object",
      "description": "Information related to a Task Code. Task Codes are used to generate task sheets in Rooms Management.",
      "properties": {
        "description": {
          "description": "Description of the Task Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "instructions": {
          "description": "Instructions for this Task Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "facilityDepartureTask": {
          "description": "Indicates if this task code is the default departure task for Facility Tasks. This requires",
          "type": "boolean"
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Property where this task code is configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "The Code for the task.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sequence": {
          "description": "Ordering sequence for display.",
          "type": "integer"
        }
      }
    },
    "facilityCodesType": {
      "type": "array",
      "description": "List of the facility codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/facilityCodeType"
      }
    },
    "facilityCodeType": {
      "type": "object",
      "description": "Facility Housekeeping Code, its description and quantity.",
      "properties": {
        "description": {
          "description": "Facility Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "quantity": {
          "description": "Signifies the quantity.",
          "type": "integer"
        },
        "code": {
          "description": "Facility code value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "resCashieringType": {
      "type": "object",
      "description": "Cashiering Information for the reservation.",
      "properties": {
        "revenuesAndBalances": {
          "description": "Revenues and Balances Amount summary for the reservation.",
          "$ref": "#/definitions/resRevenueBalanceType"
        },
        "billingPrivileges": {
          "description": "Billing privileges set on the reservation.",
          "$ref": "#/definitions/billingPrivilegesType"
        },
        "taxType": {
          "description": "This stores the code for the type of tax calculation especially with tax exemption, etc.",
          "$ref": "#/definitions/reservationTaxTypeInfo"
        },
        "bedTaxReporting": {
          "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
          "$ref": "#/definitions/bedTaxReportingType"
        },
        "folioTexts": {
          "description": "Additional text fields to display on the folio.",
          "$ref": "#/definitions/folioTextsType"
        },
        "periodicFolio": {
          "description": "Information regarding periodic folios set on the reservation.",
          "$ref": "#/definitions/resPeriodicFolioType"
        },
        "compAccounting": {
          "description": "Information regarding comp accounting on the reservation.",
          "$ref": "#/definitions/resCompAccountingType"
        },
        "reservationPreConfiguredRoutingInstruction": {
          "description": "Information regarding the selected preconfigured routing instruction on the reservation.",
          "$ref": "#/definitions/resPreConfiguredRoutingInstrType"
        },
        "financiallyResponsible": {
          "description": "The guest from whom payment has to be recovered (direct guest).",
          "type": "boolean"
        },
        "proratedBilling": {
          "description": "In case of Appartment style billing indicates whether a prorated amount should be used for an Apartment Style Billing rate.",
          "type": "boolean"
        },
        "lastRoomAndTaxPostedDate": {
          "description": "Date of the last Room And Tax posting. Used primarily to know the date in case of Advance Billing.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reverseCheckInAllowed": {
          "description": "This attribute is to verify if reverse check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "reverseAdvanceCheckInAllowed": {
          "description": "This attribute is to verify if reverse advance check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "transactionsPosted": {
          "description": "Specifies whether reservation has a financial transaction associated with it.",
          "type": "boolean"
        }
      }
    },
    "resRevenueBalanceType": {
      "type": "object",
      "description": "Revenue and Balance Amount summary for the reservation.",
      "properties": {
        "totalFixedCharge": {
          "description": "Total Fixed Charges on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalPayment": {
          "description": "Total payment received for the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "roomRevenue": {
          "description": "Room Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "foodAndBevRevenue": {
          "description": "Food and Beverage Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "otherRevenue": {
          "description": "Other Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "nonRevenue": {
          "description": "Total Non Revenue posted on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalRevenue": {
          "description": "Total Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Balance amount on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "billingPrivilegesType": {
      "type": "object",
      "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
      "properties": {
        "postingRestriction": {
          "description": "Flag used by interface program during check in.",
          "type": "boolean"
        },
        "preStayCharging": {
          "description": "Indicates if the reservation has charging privileges before arrival.",
          "type": "boolean"
        },
        "postStayCharging": {
          "description": "Indicates if the reservation has charging privileges after checkout.",
          "type": "boolean"
        },
        "folioCloseDate": {
          "description": "Date when folio was closed. This works with PostStayCharging flag.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "scheduledCheckout": {
          "description": "Indicates if the guest is scheduled for automatic check out.",
          "type": "boolean"
        },
        "scheduledCheckoutTime": {
          "description": "Time of automatic check out if guest is schedule for automatic check out.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "directBillAuthorized": {
          "description": "If Direct bill is authorized this will hold User ID who authorized it.",
          "type": "boolean"
        },
        "videoCheckout": {
          "description": "Indicates if the guest can do video checkout",
          "type": "boolean"
        },
        "allowAutoCheckin": {
          "description": "Indicated if a new reservation should be created and automatically checked in whenever the room is checked out. Available for pseudo room types only.",
          "type": "boolean"
        },
        "autoSettlement": {
          "description": "Indicates if the is a candidate for auto folio settlement.",
          "type": "boolean"
        },
        "autoSettlementType": {
          "description": "The folio settlement type for auto folio settlement.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "autoSettlementFreq": {
          "description": "The interval of days between each auto folio settlement.",
          "type": "integer"
        },
        "creditLimitAutoPay": {
          "description": "Indicates if the reservation will be included in the Automatic Credit Limit Overages process and also be listed in the Credit Limit Overages screen results.",
          "type": "boolean"
        }
      }
    },
    "reservationTaxTypeInfo": {
      "type": "object",
      "description": "Provides information about the Tax Type.",
      "properties": {
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Code of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "collectingAgentTax": {
          "description": "A boolean flag for Collecting Agent Tax",
          "type": "boolean"
        },
        "printAutoAdjust": {
          "description": "Print auto adjust information for this tax type on the tax exempt report.",
          "type": "boolean"
        },
        "reportExemptDays": {
          "description": "Number of days after which the guest will be tax exempt. Only used for tax exempt report.",
          "type": "integer"
        },
        "reportTaxPercentage": {
          "description": "Tax percentage. Only used for tax exempt report.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "minimumLengthOfStay": {
          "description": "Minimun Length of Stay.",
          "type": "integer"
        },
        "taxExemptNo": {
          "description": "Tax exempt number on the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "bedTaxReportingType": {
      "type": "object",
      "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
      "properties": {
        "taxRegistrationNo": {
          "description": "Tax Registration Number for Maldives Bed Tax Reporting.",
          "type": "number"
        },
        "visaNumber": {
          "description": "Visa number used for Maldives Bed Tax Reporting",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "visaIssueDate": {
          "description": "Visa Issue Date used for Maldives Bed Tax Reporting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaExpiryDate": {
          "description": "Visa Expiration Date used for Maldives Bed Tax Reporting",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "taxableDays": {
          "description": "Number of days for which the Maldives tax is applicable.",
          "type": "integer"
        }
      }
    },
    "folioTextsType": {
      "type": "array",
      "description": "This stores the description for the type of tax calculation especially with tax exemption, etc.",
      "maxItems": 2,
      "items": {
        "type": "object",
        "properties": {
          "text": {
            "description": "Additional text field to display on the folio.",
            "type": "string",
            "minLength": 0,
            "maxLength": 50
          },
          "row": {
            "description": "Row number of the additional text.",
            "type": "integer"
          }
        }
      }
    },
    "resPeriodicFolioType": {
      "type": "object",
      "description": "Information regarding periodic folios set on the reservation.",
      "properties": {
        "lastSettlementDate": {
          "description": "Latest date when a direct bill settlement was automatically done using the \"Direct Bill Batch Folios\" option.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastFolioDate": {
          "description": "Latest date when a folio was printed using the \"Periodic Batch Folios\" option",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "frequency": {
          "description": "Frequency in number of days when folios should be printed for this reservation.",
          "type": "integer"
        }
      }
    },
    "resCompAccountingType": {
      "type": "object",
      "description": "Information regarding comp accounting on the reservation.",
      "properties": {
        "compType": {
          "description": "Code used to identify the casino comp type and ranking of a guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "authorizer": {
          "description": "ID of the employee who will act as the host for this guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "compPostings": {
          "description": "Indicates if the Comp Billing/posting Exist",
          "type": "string",
          "minLength": 0,
          "maxLength": 5
        }
      }
    },
    "resPreConfiguredRoutingInstrType": {
      "type": "object",
      "description": "Instruction to attach Pre-Configured Routing Instructions to a Reservation.",
      "properties": {
        "authorizerInfo": {
          "description": "The authorizer information for Promotion Code with attached Complimentary Routing",
          "$ref": "#/definitions/authorizerInfoType"
        },
        "ratePlanCode": {
          "description": "Rate Code with attached Routing Instruction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "profileType": {
          "description": "Profile Type with attached Routing Instruction.",
          "$ref": "#/definitions/resProfileTypeType"
        },
        "promotionCode": {
          "description": "Promotion Code with attached Complimentary Routing.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "authorizerInfoType": {
      "type": "object",
      "description": "Authorizer Information",
      "properties": {
        "authorizerId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "authorizerUserName": {
          "description": "Application user name of the authorizer",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "authorizerName": {
          "description": "Full name of the authorizer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "authorizerRateCode": {
          "description": "Rate code of the authorizer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "inheritAuthorizerRateCode": {
          "description": "Indicates whether user has the choice to have reservation inherit rate code from the authorizer.",
          "type": "boolean"
        }
      }
    },
    "taxTypeType": {
      "type": "object",
      "description": "Provides information about the Tax Type.",
      "properties": {
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Code of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "collectingAgentTax": {
          "description": "A boolean flag for Collecting Agent Tax",
          "type": "boolean"
        },
        "printAutoAdjust": {
          "description": "Print auto adjust information for this tax type on the tax exempt report.",
          "type": "boolean"
        },
        "reportExemptDays": {
          "description": "Number of days after which the guest will be tax exempt. Only used for tax exempt report.",
          "type": "integer"
        },
        "reportTaxPercentage": {
          "description": "Tax percentage. Only used for tax exempt report.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "minimumLengthOfStay": {
          "description": "Minimun Length of Stay.",
          "type": "integer"
        }
      }
    },
    "reservationDepositType": {
      "type": "object",
      "description": "Reservation Deposit Type.",
      "properties": {
        "amountRequired": {
          "description": "Deposit Amount Required.",
          "type": "number"
        },
        "amountPaid": {
          "description": "Deposit Amount Paid.",
          "type": "number"
        },
        "amountOwed": {
          "description": "Deposit Amount Owed.",
          "type": "number"
        },
        "dueDate": {
          "description": "Deposit Due Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "postingDate": {
          "description": "Deposit Posting Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hasPaid": {
          "description": "Resolves whether reservation has paid deposit.",
          "type": "boolean"
        },
        "hasOutstanding": {
          "description": "Resolves whether reservation has outstanding deposit.",
          "type": "boolean"
        }
      }
    },
    "reservationAllowedActionsType": {
      "type": "array",
      "description": "Allowed action.",
      "maxItems": 11,
      "items": {
        "$ref": "#/definitions/reservationAllowedActionType"
      }
    },
    "reservationAllowedActionType": {
      "type": "string",
      "description": "Flag indicating whether the Enrollment is in progress or not for the Profile associated with this Reservation.",
      "enum": [
        "Cancel",
        "Move",
        "PreCharge",
        "PostCharge",
        "FacilitySchedule",
        "Upsell",
        "PreCheckIn",
        "PostToNoShowCancel",
        "NoShow",
        "NameChange",
        "Discount",
        "HouseKeeping",
        "EnrollToPrimaryMembership",
        "EnrollInProgress"
      ]
    },
    "reservationInterfaceStatusType": {
      "type": "object",
      "description": "Hotel Interface Type for a reservation and status of the various services",
      "properties": {
        "roomExtension": {
          "description": "Identifier for the room extension",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelInterface": {
          "description": "Hotel interface information for the reservation",
          "$ref": "#/definitions/hotelInterfaceType"
        },
        "interfaceRights": {
          "description": "Contains a list of status/rights for the various services under this interface",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/interfaceRightsStatusType"
          }
        }
      }
    },
    "hotelInterfaceType": {
      "type": "object",
      "properties": {
        "interfaceId": {
          "description": "Unique DB internal number of a Hotel Interface record.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "Hotel Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "interfaceName": {
          "description": "Name of the Hotel Interface",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "interfaceType": {
          "description": "Three letter code for each interface that identifies the interface.",
          "$ref": "#/definitions/hotelInterfaceTypeType"
        },
        "logo": {
          "description": "Hotel Interface Logo. On the database, this is also referred as DBF Logo. This is a three letter code followed by an underscore(_). This tells us which DBF files and log files with the prefix that IFC7 is going to create.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "machineName": {
          "description": "Unique machine name of the running IFC.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "status": {
          "description": "The current status of the IFC.",
          "$ref": "#/definitions/hotelInterfaceStatusType"
        },
        "activeFlag": {
          "description": "Indicator if the Hotel Interface is active or not. This is different from the Interface Status, which is either STOPPED or RUNNING.",
          "type": "boolean"
        }
      }
    },
    "hotelInterfaceTypeType": {
      "type": "string",
      "enum": [
        "Bms",
        "Cas",
        "Ccw",
        "Dls",
        "Eft",
        "Exp",
        "Mak",
        "Mbs",
        "Msc",
        "Pbx",
        "Pos",
        "Svs",
        "Tik",
        "Vid",
        "Vms",
        "Www",
        "Xml"
      ],
      "description": "XML Posting Interface"
    },
    "hotelInterfaceStatusType": {
      "type": "string",
      "description": "Status of the Hotel Interface either STOPPED or RUNNING.",
      "enum": [
        "Stopped",
        "Running",
        "Waiting",
        "StopInitiated",
        "StartInitiated",
        "RebootInitiated",
        "Other"
      ]
    },
    "interfaceRightsStatusType": {
      "type": "object",
      "properties": {
        "right": {
          "description": "Internal code for each allowed right of a Hotel Interface record.",
          "type": "integer"
        },
        "statusCode": {
          "description": "User defined code for an Interface Right.",
          "type": "string",
          "minLength": 0,
          "maxLength": 5
        },
        "description": {
          "description": "User defined description for an Interface Right.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "category": {
          "description": "Category code of this interface right.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        }
      }
    },
    "reservationTurndownInfoType": {
      "type": "object",
      "description": "Turndown information for a reservation",
      "properties": {
        "allowed": {
          "description": "Indicates if turndown is allowed or not",
          "type": "boolean"
        },
        "status": {
          "description": "Indicates turndown status, values could be required, not required, completed",
          "$ref": "#/definitions/turndownStatusType"
        }
      }
    },
    "turndownStatusType": {
      "type": "string",
      "description": "Simple type for turndown status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Required, Not Required and Completed.",
      "enum": [
        "Required",
        "NotRequired",
        "Compeleted"
      ]
    },
    "resMobileNotificationsType": {
      "type": "object",
      "description": "Contains the status of Room Ready and Key Ready messages.",
      "properties": {
        "roomReady": {
          "description": "Denotes the status of Room Ready message. It can have one of the values:PENDING, COMPLETED or FAILED",
          "$ref": "#/definitions/communicationStatusType"
        },
        "keyReady": {
          "description": "Denotes the status of Key Ready message. It can have one of the values:PENDING, COMPLETED or FAILED",
          "$ref": "#/definitions/communicationStatusType"
        },
        "checkoutMessageReceived": {
          "description": "Indicates if the Mobile checkout message is received.",
          "type": "boolean"
        },
        "requiresAction": {
          "description": "Indicates if user action is required. The action could be for sending Room Ready or Key Ready Notification. It could also be for initiating Checkout",
          "type": "boolean"
        },
        "errorMessage": {
          "description": "Error message when Mobile Notification has failed.",
          "type": "string"
        }
      }
    },
    "communicationStatusType": {
      "type": "string",
      "description": "Enum to denote the Status of Readiness messages sent to Guest Devices.",
      "enum": [
        "Pending",
        "Completed",
        "Failed",
        "Sent",
        "Received",
        "Cancelled",
        "PendingAvailability"
      ]
    },
    "resCommunicationType": {
      "type": "object",
      "description": "Communication details for a reservation.",
      "properties": {
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        }
      }
    },
    "telephoneInfoType": {
      "type": "object",
      "description": "Information on a telephone number for the customer.",
      "properties": {
        "telephone": {
          "description": "Phone details for the profile.",
          "$ref": "#/definitions/telephoneType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "telephoneType": {
      "type": "object",
      "description": "Information on a telephone number for the customer.",
      "properties": {
        "phoneTechType": {
          "description": "Indicates type of technology associated with this telephone number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "phoneUseType": {
          "description": "Describes the type of telephone number, in the context of its general use (e.g. Home, Business, Emergency Contact, Travel Arranger, Day, Evening).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "phoneUseTypeDescription": {
          "description": "Description of the PhoneUseType code",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "phoneNumber": {
          "description": "Telephone number assigned to a single location.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "extension": {
          "description": "Extension to reach a specific party at the phone number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "emailInfoType": {
      "type": "object",
      "description": "Information on an email for the customer.",
      "properties": {
        "email": {
          "description": "eMail deatils for the profile.",
          "$ref": "#/definitions/emailType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "advanceCheckInType": {
      "type": "object",
      "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
      "properties": {
        "advanceCheckedIn": {
          "description": "Indicates if the reservation is marked as Advance Checked In",
          "type": "boolean"
        },
        "expectedReturnTime": {
          "description": "Expected Return Time",
          "type": "string",
          "format": "date-time"
        },
        "eTRComments": {
          "description": "ETR Comments",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "pMS_ResStatusType": {
      "type": "string",
      "description": "This reservation is in checked in status and the business date is past departure date. This could occur when ORS and PMS are in same environment.",
      "enum": [
        "Reserved",
        "Requested",
        "NoShow",
        "Cancelled",
        "InHouse",
        "CheckedOut",
        "Waitlisted",
        "DueIn",
        "DueOut",
        "Walkin",
        "PendingCheckout"
      ]
    },
    "resAccessRestrictionType": {
      "type": "string",
      "description": "Indicates any Updates/Changes on the reservation as well as Reservation Cancellation are not allowed.",
      "enum": [
        "Change",
        "Cancel",
        "ChangeOrCancel"
      ]
    },
    "commissionPayoutToType": {
      "type": "string",
      "enum": [
        "TravelAgent",
        "Source",
        "TravelAgentSource",
        "None"
      ]
    },
    "masterInfoType": {
      "type": "object",
      "properties": {
        "codeInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeInfoType"
          }
        },
        "codeType": {
          "$ref": "#/definitions/masterType"
        }
      }
    },
    "codeInfoType": {
      "type": "object",
      "description": "",
      "properties": {
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "addtionalCodeInfo": {
          "$ref": "#/definitions/addtionalCodeInfoType"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "addtionalCodeInfoType": {
      "type": "array",
      "description": "Holds name of additional code information",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Holds name of additional code information",
            "$ref": "#/definitions/masterInfoCodeDetailType"
          },
          "value": {
            "description": "Holds value of additional code information",
            "type": "string",
            "minLength": 0,
            "maxLength": 2000
          }
        }
      }
    },
    "masterInfoCodeDetailType": {
      "type": "string",
      "enum": [
        "LongDescription",
        "ShortDescription"
      ]
    },
    "masterType": {
      "type": "string",
      "enum": [
        "Country",
        "State",
        "AddressType",
        "PhoneType",
        "RateCategory",
        "CalculationRule",
        "PostingRythym",
        "BillingInstruction",
        "TransactionCode",
        "DisplaySet",
        "MailingActions",
        "DistanceType",
        "District",
        "Territory",
        "FiscalRegion",
        "InventoryItem",
        "Package",
        "RoomFeaturePreference",
        "SpecialPreference",
        "Promotion",
        "Department",
        "ReservationPreference",
        "FacilityTask",
        "RoomType",
        "RateCode",
        "OutOfOrderReason",
        "Block"
      ]
    },
    "associateCommissionAgentToReservations": {
      "type": "object",
      "description": "Request type for associating reservations to Travel Agent or Source Profile.",
      "properties": {
        "commissionAgent": {
          "description": "Contains the id and type of the travel agent or source profile to be associated with the reservation.",
          "$ref": "#/definitions/commissionAgentIDType"
        },
        "reservations": {
          "description": "Contains list of reservation ids that will be associated to a travel agent or source profile.",
          "$ref": "#/definitions/hotelReservationsIDType"
        },
        "instructions": {
          "description": "List of commission reservation instructions.",
          "$ref": "#/definitions/commissionReservationInstructionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commissionAgentIDType": {
      "type": "object",
      "description": "Type which contains the Commission Agent id and its type.",
      "properties": {
        "commissionAgentType": {
          "description": "Type of Commission Agent. Either Agent or Source.",
          "$ref": "#/definitions/commissionAgentTypeType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "commissionAgentTypeType": {
      "type": "string",
      "description": "Simple type for commission agent type. Valid values are Agent and Source.",
      "enum": [
        "Agent",
        "Source"
      ]
    },
    "hotelReservationsIDType": {
      "type": "object",
      "description": "List of Reservation Unique identifiers to represent multiple reservations with each reservation's one unique id.",
      "properties": {
        "reservationId": {
          "description": "Unique identifier for a reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationId"
          }
        },
        "hotelId": {
          "description": "All reservation ids in the list must belong to this property.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "commissionReservationInstructionsType": {
      "type": "string",
      "description": "Type for commission reservation instructions.",
      "enum": [
        "FetchReservationInfo"
      ]
    },
    "associateCommissionAgentToReservationsStatus": {
      "type": "object",
      "description": "Response type for associating reservations to Travel Agent or Source Profile.",
      "properties": {
        "commissionReservationFailures": {
          "description": "List of reservations that wasn't successfully associated with the agent.",
          "$ref": "#/definitions/commissionReservationFailuresType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commissionReservationFailuresType": {
      "type": "array",
      "description": "Reservation that wasn't successfully associated with the agent.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/commissionReservationFailureType"
      }
    },
    "commissionReservationFailureType": {
      "type": "object",
      "description": "Collection of error and warning if any.",
      "properties": {
        "warnings": {
          "description": "Details of the warnings.",
          "$ref": "#/definitions/warningsType"
        },
        "errors": {
          "description": "Details of the errors.",
          "$ref": "#/definitions/errorsType"
        },
        "reservationInfo": {
          "description": "Reservation details along with failure reason.",
          "$ref": "#/definitions/reservationInfoType"
        }
      }
    },
    "errorsType": {
      "type": "array",
      "description": "An error that occurred during the processing of a message.",
      "maxItems": 99,
      "items": {
        "$ref": "#/definitions/errorType"
      }
    },
    "errorType": {
      "type": "object",
      "description": "Standard way to indicate that an error occurred during the processing of an message. If the message successfully processes, but there are business errors, those errors should be passed in the warning element.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string"
        },
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string"
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string"
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string"
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string"
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nodeList": {
          "description": "An XPath expression that selects all the nodes whose data caused this error. Further, this expression should have an additional contraint which contains the data of the node. This will provide the offending data back to systems that cannot maintain the original message.",
          "type": "string"
        }
      }
    },
    "status": {
      "type": "object",
      "description": "Response Body.",
      "properties": {
        "warnings": {
          "$ref": "#/definitions/warningsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      }
    },
    "processCommissionPayments": {
      "type": "object",
      "description": "Request type for processing commission payments.",
      "properties": {
        "criteria": {
          "description": "Criteria for actual commission payments processing.",
          "$ref": "#/definitions/processCommissionPaymentsCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "processCommissionPaymentsCriteriaType": {
      "type": "object",
      "description": "Generic commission criteria including hotel code, bank account id, agent id, reservation id and/or commission id",
      "properties": {
        "hotelId": {
          "description": "Property of the commission record .",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bankAccountId": {
          "description": "Unique id of bank account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "agentId": {
          "description": "Unique travel agent or source profile ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "resvNameId": {
          "description": "Unique reservation name ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "commissionId": {
          "description": "Unique id of the commission.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "timeSpan": {
          "description": "Date range that will be included on payment processing.",
          "$ref": "#/definitions/timeSpanType"
        },
        "checkNo": {
          "description": "If payment method is check, this serves as the start check number of checks to be printed.",
          "type": "number"
        }
      }
    },
    "processCommissionPaymentsStatus": {
      "type": "object",
      "description": "Response type for processing commission payments.",
      "properties": {
        "paymentReport": {
          "description": "Contains report id, batch id (for check payments) or export file (for eft payments)",
          "$ref": "#/definitions/commissionPaymentReportType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commissionsDetails": {
      "type": "object",
      "description": "Commissions for the requested account or agent id.",
      "properties": {
        "commissionInfoList": {
          "$ref": "#/definitions/commissionInfoListType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commissionInfoListType": {
      "type": "array",
      "description": "List of commission info.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/commissionInfoType"
      }
    },
    "commissionInfoType": {
      "type": "object",
      "description": "Commission processing information including related bank, agents or source and funds details.",
      "properties": {
        "bankAccount": {
          "$ref": "#/definitions/bankAccountType"
        },
        "commissionAgents": {
          "$ref": "#/definitions/commissionAgentsType"
        },
        "commissionSummary": {
          "$ref": "#/definitions/commissionSummaryType"
        }
      }
    },
    "commissionAgentsType": {
      "type": "array",
      "description": "Agent or source profiles that were returned by the search.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/commissionAgentType"
      }
    },
    "commissionAgentType": {
      "type": "object",
      "description": "Agent or source information along with their commission details.",
      "properties": {
        "agentInfo": {
          "$ref": "#/definitions/agentInfoType"
        },
        "commissionDetails": {
          "$ref": "#/definitions/commissionDetailsType"
        }
      }
    },
    "agentInfoType": {
      "type": "object",
      "description": "Agent or source commission information.",
      "properties": {
        "bankAccountId": {
          "description": "Unique bank account ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "agentId": {
          "description": "Unique ID of the travel agent or source.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "name": {
          "description": "Travel agent or source profile name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "alternateName": {
          "description": "Alternate name of the agent or source profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "city": {
          "description": "City of the travel agency or source profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "iATANo": {
          "description": "Travel agent's IATA number.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "profileType": {
          "description": "Whether travel agent or source profile.",
          "$ref": "#/definitions/profileTypeType"
        },
        "commissionCode": {
          "description": "Profile's commission code.",
          "$ref": "#/definitions/commissionCodeType"
        },
        "commissionAmount": {
          "description": "Amount of the commission payment to be generated for that agent or source.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "holdReason": {
          "description": "Hold code and description reason if all the reservations associated to the agent is on hold for commission.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "onCommission": {
          "description": "Whether this agent/source has been paid or will be paid for commission.",
          "type": "boolean"
        },
        "onHold": {
          "description": "When set to true, commission for all the reservations associated with this agent is flagged as on hold.",
          "type": "boolean"
        }
      }
    },
    "profileTypeType": {
      "type": "string",
      "description": "The types of Profile handled by the web service.",
      "enum": [
        "Guest",
        "Agent",
        "Company",
        "Group",
        "Source",
        "Employee",
        "Hotel",
        "Vendor",
        "Contact",
        "Purge",
        "BusinessHeader",
        "BillingAccount",
        "Activity",
        "Potential",
        "Account"
      ]
    },
    "commissionCodeType": {
      "type": "object",
      "description": "Type for commission code info.",
      "properties": {
        "code": {
          "description": "Commission code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vatPercentage": {
          "description": "Total commission that will be paid.",
          "type": "number"
        }
      }
    },
    "commissionDetailsType": {
      "type": "array",
      "description": "Commission details related to the stays for which the agent or source is eligible to receive commissions.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/commissionDetailType"
      }
    },
    "commissionDetailType": {
      "type": "object",
      "description": "Criteria for updating a commission record.",
      "properties": {
        "commissionId": {
          "description": "Unique ID of the commission.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "commissionCode": {
          "description": "Commission code that was used to determine the commission amount.",
          "$ref": "#/definitions/commissionCodeType"
        },
        "commissionAmount": {
          "description": "Commission amount owed to the agent/source for this stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "commissionTaxAmount": {
          "description": "Tax amount of the commission.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "prepaidCommissionAmount": {
          "description": "Pre paid amount for the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "remarks": {
          "description": "Remarks for the commission record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "reservationIdList": {
          "description": "Used to provide PMS and/or CRS identifiers.",
          "$ref": "#/definitions/reservationIdList"
        },
        "externalReferences": {
          "description": "External Reference information for Reservation.",
          "$ref": "#/definitions/externalReferencesType"
        },
        "guestInfo": {
          "description": "Guest name on the reservation that generated the commission.",
          "$ref": "#/definitions/resGuestInfoType"
        },
        "blockCode": {
          "description": "Block code of the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "description": "Room type code of the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomId": {
          "description": "Room number assigned to the reservation",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateCode": {
          "description": "Rate code of the reservation",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateAmount": {
          "description": "Rate amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "timeSpan": {
          "description": "Stay arrival and departure dates.",
          "$ref": "#/definitions/timeSpanType"
        },
        "commissionRevenue": {
          "description": "Commissionable revenue in local currency.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "commissionRevenueTaxAmount": {
          "description": "Tax amount of the revenue.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "aROffsetAmount": {
          "description": "Amount settled to AR",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalCommission": {
          "description": "Total commission that will be paid.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "exchangeRate": {
          "description": "Exchange rate of the currency.",
          "type": "number"
        },
        "adjustmentNotes": {
          "description": "System generated logs to indicate changes of commission record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "holdReason": {
          "description": "Hold code and description reason if the reservation is on hold for commission.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "recordLocator": {
          "description": "TA Record locator",
          "type": "string",
          "minLength": 0,
          "maxLength": 240
        },
        "reservationStatus": {
          "description": "Reservation status.",
          "type": "string"
        },
        "commissionStatus": {
          "description": "Commission status.",
          "$ref": "#/definitions/commissionStatusType"
        },
        "onHold": {
          "description": "When set to true, commission for this reservation is flagged as on hold.",
          "type": "boolean"
        },
        "aROffset": {
          "description": "When set to true, commission for this reservation is flagged to offset AR.",
          "type": "boolean"
        },
        "prepaid": {
          "description": "When set to true, commission for this reservation is flagged as prepaid.",
          "type": "boolean"
        },
        "routing": {
          "description": "When set to true, commission for this reservation is flagged as routing.",
          "type": "boolean"
        }
      }
    },
    "commissionStatusType": {
      "type": "string",
      "description": "Simple type for commission status. Valid values are Unpaid and Paid.",
      "enum": [
        "Unpaid",
        "Paid"
      ]
    },
    "commissionSummaryType": {
      "type": "object",
      "description": "Summary of the commission payment information totaled for all agents/sources.",
      "properties": {
        "potential": {
          "description": "Total funds required to pay all commissions for one or more agents/sources.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "aR": {
          "description": "Total commission amount held to offset the agents' and/or sources' accounts receivable accounts.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "onHold": {
          "description": "Total value of commission amounts being held for one or more agents/sources.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "toBePaid": {
          "description": "Difference between the Potential amount minus the On Hold amount minus the AR amount (Potential - On Hold - AR = To Be Paid).",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "calculateCommissions": {
      "type": "object",
      "description": "Request type for calculation of commission for all Travel Agent and/or Source.",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "calculateCommissionsStatus": {
      "type": "object",
      "description": "Response Body.",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "setProcessingInstructions": {
      "type": "object",
      "description": "Request Type for setting instructions for commission processing on Agent or Reservation level.",
      "properties": {
        "agents": {
          "description": "List of commission processing instructions for agents and/or its associated reservations.",
          "$ref": "#/definitions/commissionProcessingAgentsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commissionProcessingAgentsType": {
      "type": "array",
      "description": "Commission processing instructions for an Agent.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/commissionProcessingAgentType"
      }
    },
    "commissionProcessingAgentType": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "hotelId": {
          "description": "Property from which the agent will be on hold for commission.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instructions": {
          "description": "List of commission processing instructions.",
          "$ref": "#/definitions/commissionProcessingInstructionsType"
        },
        "reservations": {
          "description": "List of reservations associated with the agent and its commission processing instructions.",
          "$ref": "#/definitions/commissionProcessingReservationsType"
        }
      }
    },
    "commissionProcessingInstructionsType": {
      "type": "object",
      "description": "Type for commission process instruction. Possible instruction types are on hold and offset AR.",
      "properties": {
        "onHold": {
          "description": "Reason for setting the commission on hold.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "release": {
          "description": "When set to true, commission agent and/or its associated reservation will be released from commission processing.",
          "type": "boolean"
        },
        "offsetAR": {
          "description": "When set to true, commission agent and/or its associated reservation will be flagged to offset Account Receivable.",
          "type": "boolean"
        }
      }
    },
    "commissionProcessingReservationsType": {
      "type": "array",
      "description": "Commission processing instructions for a reservation.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/commissionProcessingReservationType"
      }
    },
    "commissionProcessingReservationType": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "instructions": {
          "description": "List of commission processing instructions.",
          "$ref": "#/definitions/commissionProcessingInstructionsType"
        }
      }
    },
    "commissionDetails": {
      "type": "object",
      "description": "Response type for fetch commission detail.",
      "properties": {
        "commissionDetail": {
          "description": "Contains reservation detail information and computed commission amount like gross, tax, prepaid, total.",
          "$ref": "#/definitions/commissionDetailType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commissionToBeChanged": {
      "type": "object",
      "description": "Request type for update of commission detail.",
      "properties": {
        "commissionDetail": {
          "description": "Contains fields that can be updated for commission i.e. commission amount, tax, prepaid, code and remarks.",
          "$ref": "#/definitions/commissionBaseDetailType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commissionBaseDetailType": {
      "type": "object",
      "description": "Criteria for updating a commission record.",
      "properties": {
        "commissionId": {
          "description": "Unique ID of the commission.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "commissionCode": {
          "description": "Commission code that was used to determine the commission amount.",
          "$ref": "#/definitions/commissionCodeType"
        },
        "commissionAmount": {
          "description": "Commission amount owed to the agent/source for this stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "commissionTaxAmount": {
          "description": "Tax amount of the commission.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "prepaidCommissionAmount": {
          "description": "Pre paid amount for the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "remarks": {
          "description": "Remarks for the commission record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "commissionStatus": {
      "type": "object",
      "description": "Response Body.",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "recalculateCommissionOnCodeChange": {
      "type": "object",
      "description": "Request type for recalculating commission amount when commission code of unpaid commission is changed.",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "recalculateCommissionOnCodeChangeStatus": {
      "type": "object",
      "description": "Response type for recalculating commission amount when commission code of unpaid commission is changed",
      "properties": {
        "commissionDetail": {
          "description": "Contains reservation detail information and computed commission amount like gross, tax, prepaid, total.",
          "$ref": "#/definitions/commissionDetailType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "dailyDocket": {
      "type": "object",
      "description": "Response object for fetching log book entries.",
      "properties": {
        "dailyDocketEntries": {
          "description": "List of log book entries.",
          "$ref": "#/definitions/dailyDocketType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "dailyDocketType": {
      "type": "array",
      "description": "log book entry.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/dailyDocketEntryType"
      }
    },
    "dailyDocketEntryType": {
      "type": "object",
      "description": "Log book entry.",
      "properties": {
        "hotelId": {
          "description": "Hotel Code of the log book entry.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "docketEntryId": {
          "description": "Unique identifier of the log book entry.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "department": {
          "description": "Department ID in which the log book entry belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "roleUserEntry": {
          "description": "Role or User in which the log book entry belongs to.",
          "$ref": "#/definitions/roleUserEntryType"
        },
        "entryDate": {
          "description": "The date-time in which the log book entry was created.",
          "type": "string",
          "format": "date-time"
        },
        "details": {
          "description": "Entry details.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "history": {
          "description": "Creation date time, Creator Id, last modification date time and last Modifier Id.",
          "$ref": "#/definitions/changeHistoryType"
        }
      }
    },
    "roleUserEntryType": {
      "type": "object",
      "description": "Role or User in which the log book entry belongs to.",
      "properties": {
        "role": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "user": {
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        }
      }
    },
    "changeHistoryType": {
      "type": "object",
      "description": "Creation date time, Creator Id, last modification date time and last Modifier Id.",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "floorPlans": {
      "type": "object",
      "description": "Response object to the Fetch Reservation Request operation. Based on the criteria, reservation information is returned.",
      "properties": {
        "floorPlansDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/floorPlanType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "floorPlanType": {
      "type": "object",
      "description": "Floor information containing collection of Room records that contain Housekeeping and Out Of Order information.",
      "properties": {
        "rooms": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/floorPlanRoomType"
          }
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "siteCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "siteDescription": {
          "type": "string"
        }
      }
    },
    "floorPlanRoomType": {
      "type": "object",
      "properties": {
        "roomType": {
          "description": "Room type basic information of the room.",
          "$ref": "#/definitions/roomTypeShortInfoType"
        },
        "floor": {
          "description": "Floor of the Room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "floorDescription": {
          "description": "Description for the Floor of the Room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomFeatures": {
          "description": "Room Features for the room.",
          "$ref": "#/definitions/roomFeaturesType"
        },
        "roomDescription": {
          "description": "Detail Long Description Of The Room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the room.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "smokingPreference": {
          "description": "This indicates room smoking preference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "smokingPreferenceDescription": {
          "description": "This indicates the description of the room smoking preference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "building": {
          "description": "Building associated with the room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomAssignmentRating": {
          "description": "Assignment Rating associated with the room.",
          "$ref": "#/definitions/ratePlanRatingType"
        },
        "accessible": {
          "description": "Indicates whether the room is accessibility compliant.",
          "type": "boolean"
        },
        "roomId": {
          "description": "Code of the room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "meetingRoom": {
          "description": "Indicates whether the room is a Meeting Room",
          "type": "boolean"
        },
        "roomSection": {
          "description": "Room sections of the room.",
          "$ref": "#/definitions/roomSectionType"
        },
        "housekeeping": {
          "description": "Identifies the Housekeeping information..",
          "$ref": "#/definitions/housekeepingType"
        },
        "outOfOrder": {
          "description": "Identifies the room Out of Order/Out of Service information.",
          "$ref": "#/definitions/roomsOutOfOrderType"
        },
        "discrepancy": {
          "description": "Identifies the room discrepancy information.",
          "$ref": "#/definitions/roomDiscrepanciesType"
        },
        "sitePlanSection": {
          "description": "Identifies the site plan location of the room.",
          "$ref": "#/definitions/sitePlanSectionType"
        },
        "componentRoomNumber": {
          "description": "This flag indicates component room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "connectingRooms": {
          "description": "This flag indicates connecting rooms.",
          "$ref": "#/definitions/roomRoomsType"
        },
        "componentRooms": {
          "description": "This flag indicates component rooms.",
          "$ref": "#/definitions/roomRoomsType"
        },
        "attendant": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/currentServicingAttendantType"
          }
        },
        "hold": {
          "description": "Hold attributes if any.",
          "$ref": "#/definitions/roomHoldType"
        },
        "turndownInfo": {
          "$ref": "#/definitions/turndownInfoType"
        },
        "resvInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationShortInfoType"
          }
        },
        "componentRoomNumbers": {
          "description": "List of component room numbers.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "guests": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/floorPlanRoomGuestType"
          }
        }
      },
      "description": "This type represents the primary room attributes."
    },
    "roomTypeShortInfoType": {
      "type": "object",
      "description": "Basic information of room type.",
      "properties": {
        "pseudo": {
          "description": "Indicates if room is a pseudo. This is read-only.",
          "type": "boolean"
        },
        "suite": {
          "description": "Indicates if room is a suite. This is read-only.",
          "type": "boolean"
        },
        "roomClass": {
          "description": "Room Class of the room. This is read-only.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "shortDescription": {
          "description": "Short Description of room type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "houseKeeping": {
          "description": "Indicates if room type of the room is flagged as housekeeping. This is read-only.",
          "type": "boolean"
        },
        "smokingPreference": {
          "description": "Specifies the smoking preference for room type of the room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "building": {
          "description": "Building associated with the room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomAssignmentRating": {
          "description": "Assignment Rating associated with the room.",
          "$ref": "#/definitions/ratePlanRatingType"
        },
        "minimumOccupancy": {
          "description": "Minimum occupancy for the room type.",
          "type": "integer"
        },
        "maximumOccupancy": {
          "description": "Maximum occupancy for the room type.",
          "type": "integer"
        },
        "roomFeatures": {
          "description": "Room Features for the room.",
          "$ref": "#/definitions/roomFeaturesType"
        },
        "accessible": {
          "description": "Indicates if room type is accessible.",
          "type": "boolean"
        },
        "roomType": {
          "description": "Room type of the room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "meetingRoom": {
          "description": "Indicates whether function space can be meeting room.",
          "type": "boolean"
        }
      }
    },
    "ratePlanRatingType": {
      "type": "string",
      "description": "Possible Rate plan rating values.",
      "enum": [
        "MostImportant",
        "Important",
        "SomewhatImportant",
        "LessImportant",
        "LeastImportant",
        "NoValueSet"
      ]
    },
    "roomFeaturesType": {
      "type": "array",
      "description": "A recurring element that identifies the room features.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomFeatureType"
      }
    },
    "roomFeatureType": {
      "type": "object",
      "description": "Room Feature Information.",
      "properties": {
        "code": {
          "description": "A code representing a room feature.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "A code representing a room feature.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "quantity": {
          "description": "Indicates quantity.",
          "type": "integer"
        }
      }
    },
    "translationTextType2000": {
      "type": "object",
      "description": "Contains Multiple translated texts and language codes.",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 2000.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "translationsTextType": {
      "type": "array",
      "description": "Language code for the translation.",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Used for Character Strings, length 0 to 2000.",
            "minLength": 0,
            "maxLength": 2000
          },
          "language": {
            "description": "Language identification.",
            "type": "string",
            "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          }
        },
        "description": "Language code for the translation."
      }
    },
    "roomSectionType": {
      "type": "object",
      "properties": {
        "daySectionCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "eveningSectionCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "housekeepingType": {
      "type": "object",
      "description": "Identifies the Housekeeping information.",
      "properties": {
        "roomStatus": {
          "description": "The Room status information per the reservation and housekeeping.",
          "$ref": "#/definitions/roomStatusType"
        },
        "roomPersons": {
          "description": "The Room person information per the reservation and housekeeping.",
          "$ref": "#/definitions/roomPersonsType"
        },
        "guestServiceRequest": {
          "$ref": "#/definitions/guestHousekeepingServiceRequestType"
        },
        "cleaningPriority": {
          "description": "Cleaning priority for the room, if a priority was set.",
          "$ref": "#/definitions/roomCleaningPriorityType"
        },
        "roomCondition": {
          "description": "Condition of the room, if a condition was set.",
          "$ref": "#/definitions/roomConditionType"
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "facilityTaskCode": {
          "description": "Facility task Code/ Task Code assigned to the room for the day.",
          "$ref": "#/definitions/codeListType"
        }
      }
    },
    "roomStatusType": {
      "type": "object",
      "properties": {
        "reservationStatusList": {
          "description": "List of status of the reservation to which this Room is assigned..",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/housekeepingRoomReservationStatusType"
          }
        },
        "roomStatus": {
          "description": "Status of the room (Dirty/Clean/Inspected/Pickup).",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "frontOfficeStatus": {
          "description": "Front office status ( Occupied/Vacant ).",
          "$ref": "#/definitions/frontOfficeRoomStatusType"
        },
        "housekeepingStatus": {
          "description": "Housekeeping status ( Occupied/Vacant ).",
          "$ref": "#/definitions/frontOfficeRoomStatusType"
        }
      }
    },
    "frontOfficeRoomStatusType": {
      "type": "string",
      "description": "Simple type for front office room status instructions to be used in requests for fetching housekeeping rooms. Valid values are Vacant and Occupied.",
      "enum": [
        "Vacant",
        "Occupied"
      ]
    },
    "roomPersonsType": {
      "type": "object",
      "properties": {
        "frontOfficePersons": {
          "type": "integer"
        },
        "houseKeepingPersons": {
          "type": "integer"
        }
      }
    },
    "roomCleaningPriorityType": {
      "type": "object",
      "description": "Type to indicate the cleaning priority for a room.",
      "properties": {
        "prioritySequence": {
          "description": "Priority sequence of the room for cleaning.",
          "type": "integer"
        }
      }
    },
    "roomConditionType": {
      "type": "object",
      "description": "Condition to be assigned on the room.",
      "properties": {
        "roomCondition": {
          "description": "Code and Decription of Condition to be assigned on the room.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "assignmentType": {
          "description": "Determine if room, after applying condition, is available or not in Room Assignment listing.",
          "$ref": "#/definitions/roomConditionAssigmentType"
        },
        "remarks": {
          "description": "Remarks on room condition assignment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "roomConditionAssigmentType": {
      "type": "string",
      "description": "Simple type for Room Condition assignment type. Valid values are Available and NotAvailable Only.",
      "enum": [
        "Available",
        "NotAvailable"
      ]
    },
    "codeListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "minLength": 0,
        "maxLength": 20
      }
    },
    "roomsOutOfOrderType": {
      "type": "array",
      "description": "Date Range and reasons for a room being Out of Order/Out Of Service (If the room is OO/OS).",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomOutOfOrderType"
      }
    },
    "roomOutOfOrderType": {
      "type": "object",
      "description": "Out Of Order and Out Of Service Room information.",
      "properties": {
        "repairRemarks": {
          "description": "Notes or Remarks on the OO/OS room",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "returnStatus": {
          "description": "Room Status which will be used on completion of OO/OS.",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "reasonCode": {
          "description": "Reason Code why the room is OO/OS.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reasonDesc": {
          "description": "Reason Description why the room is OO/OS.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "newDateRange": {
          "description": "The new start date and end date, if the dates were changed as part of an update. This would be blank for new OO/OS rooms.",
          "$ref": "#/definitions/dateRangeType"
        },
        "roomStatus": {
          "description": "The out of order or out of service room status OO/OS.",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "dateRangeType": {
      "type": "object",
      "description": "Date Range with Start and End dates.",
      "properties": {
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "roomDiscrepanciesType": {
      "type": "array",
      "description": "Room Discrepancies between front office and housekeeping room status and number of persons in the room.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomDiscrepancyType"
      }
    },
    "roomDiscrepancyType": {
      "type": "string",
      "description": "Simple type for discrepant room status instructions to be used in requests for fetching housekeeping and front office room discrepancy. Valid values are Sleep, Skip, Person Discrepancy, Due Out Only.",
      "enum": [
        "Sleep",
        "Skip",
        "PersonDiscrepancy"
      ]
    },
    "sitePlanSectionType": {
      "type": "object",
      "description": "Represents the site plan section record.",
      "properties": {
        "sectionCode": {
          "description": "The site plan section code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sectionType": {
          "description": "The section type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "linkCode": {
          "description": "The link code for the section.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "coordinates": {
          "description": "The coordinates for this section.",
          "type": "string"
        },
        "description": {
          "description": "The description of this section.",
          "type": "string"
        }
      }
    },
    "roomRoomsType": {
      "type": "array",
      "description": "Collection of rooms.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomRoomType"
      }
    },
    "roomRoomType": {
      "type": "object",
      "description": "This type represents the primary room attributes.",
      "properties": {
        "roomType": {
          "description": "Room type basic information of the room.",
          "$ref": "#/definitions/roomTypeShortInfoType"
        },
        "floor": {
          "description": "Floor of the Room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "floorDescription": {
          "description": "Description for the Floor of the Room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomFeatures": {
          "description": "Room Features for the room.",
          "$ref": "#/definitions/roomFeaturesType"
        },
        "roomDescription": {
          "description": "Detail Long Description Of The Room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the room.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "smokingPreference": {
          "description": "This indicates room smoking preference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "smokingPreferenceDescription": {
          "description": "This indicates the description of the room smoking preference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "building": {
          "description": "Building associated with the room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomAssignmentRating": {
          "description": "Assignment Rating associated with the room.",
          "$ref": "#/definitions/ratePlanRatingType"
        },
        "accessible": {
          "description": "Indicates whether the room is accessibility compliant.",
          "type": "boolean"
        },
        "roomId": {
          "description": "Code of the room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "meetingRoom": {
          "description": "Indicates whether the room is a Meeting Room",
          "type": "boolean"
        },
        "roomCondition": {
          "description": "Code and description of condition assigned on the room.",
          "$ref": "#/definitions/codeDescriptionType"
        }
      }
    },
    "currentServicingAttendantType": {
      "type": "object",
      "description": "The Attendant Name and ID of the attendant servicing the room.",
      "properties": {
        "section": {
          "description": "Section Code the attendant has been assigned.",
          "$ref": "#/definitions/housekeepingSectionType"
        },
        "floor": {
          "description": "The Floor which is assigned to the attendant.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "attendantId": {
          "description": "Attendant's unique identifier.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "attendantName": {
          "description": "Attendant's name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "hotelId": {
          "description": "Property where the attendant belongs.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "activeFlag": {
          "description": "Indicates if the Attendant is active.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "sunday": {
          "type": "boolean"
        },
        "monday": {
          "type": "boolean"
        },
        "tuesday": {
          "type": "boolean"
        },
        "wednesday": {
          "type": "boolean"
        },
        "thursday": {
          "type": "boolean"
        },
        "friday": {
          "type": "boolean"
        },
        "saturday": {
          "type": "boolean"
        },
        "appUser": {
          "description": "The App User Name and ID of the user who started the service.",
          "$ref": "#/definitions/applicationUserType"
        },
        "startTime": {
          "description": "The start time of the service.",
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "description": "Status of the respective Housekeeping Attendant.",
          "$ref": "#/definitions/servicingAttendantStatusType"
        }
      }
    },
    "housekeepingSectionType": {
      "type": "object",
      "description": "Information regarding Housekeeping Sections.",
      "properties": {
        "hotelId": {
          "description": "Property where this section is defined.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "The Housekeeping Section Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Section.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "sectionGroup": {
          "description": "Housekeeping Section Group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "targetCredits": {
          "description": "Target Credit for each task sheet created for this section when auto task assignment is broken out by section.",
          "type": "integer"
        },
        "rooms": {
          "description": "Rooms count for this section code. This is auto populated while creating/fetching record.",
          "type": "integer"
        },
        "roomCredits": {
          "description": "Number of housekeeping credits. This is auto populated while creating/fetching record.",
          "type": "integer"
        },
        "sequence": {
          "description": "Display sequence when task assignment is automatically broken out by Section Group.",
          "type": "integer"
        },
        "inactive": {
          "description": "Indicates if the Section Code is active.",
          "type": "boolean"
        }
      }
    },
    "applicationUserType": {
      "type": "object",
      "properties": {
        "hotel": {
          "description": "Hotel where user belongs.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "appUser": {
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        },
        "lDAPUser": {
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        },
        "actAs": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "actAt": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "userDefaultLanguage": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "appUserId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "cashierId": {
          "type": "integer"
        },
        "cashierTitle": {
          "description": "Cashier title.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "department": {
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        },
        "departmentLocation": {
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        },
        "salesRepCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "expiryDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "disabledUntil": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "passwordChangeDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "userInfo": {
          "$ref": "#/definitions/employeeInfoType"
        },
        "userSessionInfo": {
          "description": "This is only used during log-in.",
          "$ref": "#/definitions/userSessionInfoType"
        },
        "attendantInfo": {
          "$ref": "#/definitions/attendantType"
        }
      }
    },
    "employeeInfoType": {
      "type": "object",
      "properties": {
        "personName": {
          "$ref": "#/definitions/personNameType"
        },
        "profileId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "addressInfo": {
          "$ref": "#/definitions/addressInfoType"
        },
        "emailInfo": {
          "$ref": "#/definitions/emailInfoType"
        },
        "phoneInfo": {
          "$ref": "#/definitions/telephoneInfoType"
        },
        "department": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "gender": {
          "description": "Identifies the profile gender code selected from Gender types List of values. Gender types LOV provides the values configured at gender configuration.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "birthDate": {
          "description": "Indicates the date of birth as indicated in the document, in ISO 8601 prescribed format.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "birthDateMasked": {
          "description": "Indicates the date of birth as masked.",
          "type": "string"
        }
      }
    },
    "personNameType": {
      "type": "object",
      "description": "This provides name information for a person.",
      "properties": {
        "namePrefix": {
          "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "givenName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "middleName": {
          "description": "The middle name of the person name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "surname": {
          "description": "Family name, last name. May also be used for full name if the sending system does not have the ability to separate a full name into its parts, e.g. the surname element may be used to pass the full name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "nameTitleSuffix": {
          "description": "Title Suffix. Must be populated if ADVANCED_TITLE is on.",
          "type": "integer"
        },
        "envelopeGreeting": {
          "description": "Envelope Greeting of the profile",
          "type": "string"
        },
        "salutation": {
          "description": "Salutation of the profile",
          "type": "string"
        },
        "nameType": {
          "description": "Type of name of the individual, such as former, nickname, alternate or alias name.",
          "$ref": "#/definitions/personNameTypeType"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "externalSystem": {
          "description": "When name type is external, indicates the external system the name belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "personNameTypeType": {
      "type": "string",
      "description": "Person's name in an external system.",
      "enum": [
        "Primary",
        "Alternate",
        "Incognito",
        "External",
        "Phonetic"
      ]
    },
    "userSessionInfoType": {
      "type": "object",
      "properties": {
        "businessDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "systemDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "terminal": {
          "type": "string"
        },
        "runningApp": {
          "type": "string"
        },
        "shareProfiles": {
          "type": "boolean"
        },
        "hotel": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "cro": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "chain": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cROCountryCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sessionDefaults": {
          "$ref": "#/definitions/userSessionDefaultsType"
        },
        "parameters": {
          "$ref": "#/definitions/parametersType"
        }
      }
    },
    "userSessionDefaultsType": {
      "type": "object",
      "properties": {
        "dbDateFormat": {
          "type": "string"
        },
        "oracleDateFormat": {
          "type": "string"
        },
        "oracleTimeFormat": {
          "type": "string"
        },
        "javaDateFormat": {
          "type": "string"
        },
        "javaTimeFormat": {
          "type": "string"
        },
        "currencyCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencyFormat": {
          "type": "string"
        },
        "defaultLanguage": {
          "type": "string"
        },
        "baseLanguage": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "parametersType": {
      "type": "array",
      "description": "Collection of generic Name-Value-Pair parameters.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/parameterType"
      }
    },
    "parameterType": {
      "type": "object",
      "description": "Name value pair type that will hold generic parameter information. Only use this type when the parameters being passed are too dynamic to be defined.",
      "properties": {
        "parameterName": {
          "description": "Name of the parameter.",
          "type": "string"
        },
        "parameterValue": {
          "description": "Value of the parameter.",
          "type": "string"
        }
      }
    },
    "attendantType": {
      "type": "object",
      "properties": {
        "attendantId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "servicingAttendantStatusType": {
      "type": "string",
      "description": "Possible values for the Status of a Servicing Attendant.",
      "enum": [
        "Standby",
        "Break",
        "Working",
        "Completed"
      ]
    },
    "roomHoldType": {
      "type": "object",
      "properties": {
        "holdUntil": {
          "description": "The date and time when hold will expire.",
          "type": "string",
          "format": "date-time"
        },
        "holdUser": {
          "description": "User who placed room on hold.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "comments": {
          "description": "Comments of the room hold.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "turndownInfoType": {
      "type": "object",
      "properties": {
        "turndownStatusInfo": {
          "$ref": "#/definitions/turndownStatusType"
        }
      }
    },
    "reservationShortInfoType": {
      "type": "object",
      "properties": {
        "guestName": {
          "description": "Guest name that is registered for the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "reservationId": {
          "$ref": "#/definitions/reservationId"
        },
        "reservationStatusInfo": {
          "$ref": "#/definitions/housekeepingRoomReservationStatusType"
        },
        "stayDateInfo": {
          "$ref": "#/definitions/stayDateInfoType"
        },
        "vipStatus": {
          "description": "VIP status of the guest.",
          "$ref": "#/definitions/vIPStatusType"
        },
        "profileId": {
          "description": "ProfileId of the guest.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "scheduledRoomMoveOut": {
          "description": "This flag will be set to true  for rooms assigned to reservations that are scheduled to  move to another room.",
          "type": "boolean"
        },
        "scheduledRoomMoveOutTime": {
          "description": "This time indicates when the reservation is scheduled to move out of the room.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "floorPlanRoomGuestType": {
      "type": "object",
      "properties": {
        "lastName": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "arrival": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "departure": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "shareID": {
          "type": "string"
        },
        "confirmationNo": {
          "type": "string"
        }
      }
    },
    "statistics": {
      "type": "object",
      "description": "Response element for frontOffice statistics.",
      "properties": {
        "statisticsCode": {
          "description": ".",
          "$ref": "#/definitions/hSKStatReportCodeType"
        },
        "calendarDate": {
          "description": "Statistical date of the requested report.",
          "type": "string",
          "format": "date"
        },
        "metricSet": {
          "type": "array",
          "description": "Base statistic set holder which defines the span of the statistical data.",
          "items": {
            "type": "object",
            "description": ".",
            "properties": {
              "metrics": {
                "type": "array",
                "maxItems": 4000,
                "items": {
                  "$ref": "#/definitions/hSKStatType"
                }
              },
              "code": {
                "type": "string",
                "maxLength": 2000
              },
              "start": {
                "type": "string",
                "format": "date"
              },
              "end": {
                "type": "string",
                "format": "date"
              }
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hSKStatReportCodeType": {
      "type": "string",
      "description": "Supported Housekeeping report codes.",
      "enum": [
        "HouseSummary",
        "HouseSummaryMonthToDate",
        "HouseSummaryYearToDate",
        "ReservationActivity",
        "ReservationActivityDaily",
        "ReservationActivityMonthToDate",
        "ReservationActivityYearToDate",
        "ComplimentaryOrHouseUse",
        "DailyProjection",
        "RoomStatus",
        "LastHourStatus",
        "Turndown",
        "InHouse",
        "CheckIns",
        "CheckOuts",
        "AvailableRooms",
        "RoomMaintenance",
        "ReservationStatistics",
        "VIPGuests",
        "AdvanceCheckIn",
        "BlockArrivals",
        "ReservationsCancellationsToday",
        "AIRoomAssignment",
        "CompRouting",
        "RoomMoveStatistics"
      ]
    },
    "hSKStatType": {
      "type": "object",
      "description": "Since the statistical value can be represented in different measure of units, this element will provide a flexible definition for the supported Opera9 statistical units.",
      "properties": {
        "value": {
          "description": "Statistical value.",
          "type": "number"
        },
        "category": {
          "description": "Statistical unit category.",
          "$ref": "#/definitions/statUnitCategoryType"
        },
        "code": {
          "$ref": "#/definitions/hSKStatCodeType"
        }
      }
    },
    "statUnitCategoryType": {
      "type": "string",
      "description": "Supported statistical units.",
      "enum": [
        "Numeric",
        "Amount"
      ]
    },
    "hSKStatCodeType": {
      "type": "string",
      "description": "Supported housekeeping statistical codes.",
      "enum": [
        "ApprovedCompPostings",
        "StagedCompPostings",
        "DeclinedCompPostings",
        "CompRoutingInstructionsRequests",
        "TotalPhysicalRooms",
        "TotalRoomsToSell",
        "TotalOutOfOrder",
        "TotalOutOfService",
        "TotalRevenue",
        "PercentRoomsOccupied",
        "StayoverRooms",
        "StayoverPersons",
        "StayoverVIP",
        "DeparturesExpectedRooms",
        "DeparturesExpectedPersons",
        "DeparturesExpectedVIP",
        "DeparturesActualRooms",
        "DeparturesActualPersons",
        "DeparturesActualVIP",
        "DeparturesInLastHour",
        "ArrivalsInLastHour",
        "ArrivalsTotal",
        "ArrivalsExpectedRooms",
        "ArrivalsExpectedPersons",
        "ArrivalsExpectedVIP",
        "ArrivalsExpectedRoomsMadeToday",
        "ArrivalsExpectedPersonsMadeToday",
        "ArrivalsExpectedVIPMadeToday",
        "ArrivalsActualRooms",
        "ArrivalsActualPersons",
        "ArrivalsActualVIP",
        "ExtendedStaysRooms",
        "ExtendedStaysPersons",
        "ExtendedStaysVIP",
        "DeparturesTotal",
        "EarlyDeparturesRooms",
        "EarlyDeparturesPersons",
        "EarlyDeparturesVIP",
        "DayUseRooms",
        "DayUsePersons",
        "DayUseVIP",
        "WalkInRooms",
        "WalkInPersons",
        "WalkInVIP",
        "CanceledOnArrivalRooms",
        "CanceledOnArrivalPersons",
        "CanceledOnArrivalVIP",
        "ComplimentaryArrivalRooms",
        "ComplimentaryArrivalPersons",
        "ComplimentaryArrivalVIP",
        "ComplimentaryStayoverRooms",
        "ComplimentaryStayoverPersons",
        "ComplimentaryStayoverVIP",
        "ComplimentaryDepartureRooms",
        "ComplimentaryDeparturePersons",
        "ComplimentaryDepartureVIP",
        "HouseUseArrivalVIP",
        "HouseUseStayoverRooms",
        "HouseUseStayoverPersons",
        "HouseUseStayoverVIP",
        "HouseUseDepartureRooms",
        "HouseUseDeparturePersons",
        "HouseUseDepartureVIP",
        "MinAvailableTonightRooms",
        "MaxOccupiedTonightRooms",
        "MaxOccupiedTonightPersons",
        "MaxOccupiedTonightVIP",
        "MaxPercentageOccupiedTonightRooms",
        "BlocksNotPickedUp",
        "IndividualRooms",
        "IndividualPersons",
        "IndividualVIP",
        "GroupAndBlockRooms",
        "GroupAndBlockPersons",
        "GroupAndBlockVIP",
        "RoomRevenue",
        "AverageRoomRevenue",
        "InspectedRooms",
        "InspectedVacant",
        "InspectedAssigned",
        "InspectedOccupied",
        "CleanedRooms",
        "CleanVacant",
        "CleanAssigned",
        "CleanOccupied",
        "DirtyVacant",
        "DirtyAssigned",
        "DirtyOccupied",
        "PickupVacant",
        "PickupAssigned",
        "PickupOccupied",
        "OutOfOrderVacant",
        "OutOfOrderAssigned",
        "OutOfOrderOccupied",
        "OutOfServiceVacant",
        "OutOfServiceAssigned",
        "OutOfServiceOccupied",
        "QueueRooms",
        "TurndownRequired",
        "TurndownNotRequired",
        "TurndownCompletedRequired",
        "AdultsInHouse",
        "ChildrenInHouse",
        "AdultsExpectedCheckedOut",
        "ChildrenExpectedCheckedOut",
        "AdultsDeparted",
        "ChildrenDeparted",
        "InHouseRooms",
        "InHouse",
        "MaxOccupancyPercentage",
        "Stayover",
        "TotalRoomsReserved",
        "RevPar",
        "SkipRooms",
        "SleepRooms",
        "HouseUseArrivalRooms",
        "HouseUseArrivalPersons",
        "AverageCheckInTime",
        "CurrentAveWaitTime",
        "CheckedInsTotal",
        "ExpectedCheckInsTotal",
        "CheckedOutsTotal",
        "ExpectedCheckOutsTotal",
        "ScheduledCheckOutsTotal",
        "RoomMaintenanceResolvedTotal",
        "RoomMaintenanceUnResolvedTotal",
        "PreRegisteredTotal",
        "VIPPreRegisteredTotal",
        "OpenFolioTotal",
        "TurndownTotal",
        "VIPTurndownTotal",
        "VIPGuestsArriving",
        "VIPGuestsDeparting",
        "VIPGuestsTotal",
        "IndividualAdvanceCheckedInCurrent",
        "BlockAdvanceCheckedInCurrent",
        "IndividualAdvanceCheckedInInhouse",
        "BlockAdvanceCheckedInInhouse",
        "IndividualAdvanceCheckedInTotal",
        "BlockAdvanceCheckedInTotal",
        "InHouseBlocksTotal",
        "CancellationsTotal",
        "NewReservationsTotal",
        "ArrivalResvs",
        "ArrivalVIPResvs",
        "ArrivalMemberResvs",
        "ArrivalUnallocResvs",
        "ArrivalManualAssgnResvs",
        "ArrivalAIAssgnResvs",
        "ArrivalAIUpgResvs",
        "ArrivalAIAssgnVIPResvs",
        "ArrivalAIAssgnMemberResvs",
        "ArrivalAIAssgnOverridden",
        "CompletedRoomMoves",
        "PendingRoomMoves",
        "AdultsArrivals",
        "ChildrenArrivals",
        "Children1Arrivals",
        "Children2Arrivals",
        "Children3Arrivals",
        "Children1InHouse",
        "Children2InHouse",
        "Children3InHouse"
      ]
    },
    "activityLog": {
      "type": "object",
      "description": "Fulfillment activity log response.",
      "properties": {
        "activityLogDetails": {
          "description": "List of activity log entries.",
          "$ref": "#/definitions/activityLogListType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "activityLogListType": {
      "type": "object",
      "properties": {
        "activityLog": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/activityLogType"
          }
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "activityLogType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "module": {
          "type": "string"
        },
        "logDate": {
          "type": "string",
          "format": "date-time"
        },
        "refActionId": {
          "type": "number"
        },
        "logUserId": {
          "type": "integer"
        },
        "logUserName": {
          "type": "string"
        },
        "machineStation": {
          "type": "string"
        },
        "croCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "actionType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "actionDescription": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "iPAddress": {
          "description": "The IP Address of the machine that performed the activity",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "deviceCode": {
          "description": "The selected device code",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "taskSheetStatistics": {
      "type": "object",
      "properties": {
        "taskStatisticsInfo": {
          "description": "Information regarding the Task Sheet statistics.",
          "$ref": "#/definitions/hSKTaskSheetStatisticsInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hSKTaskSheetStatisticsInfoType": {
      "type": "object",
      "description": "Holds the task sheet statistics information.",
      "properties": {
        "taskSheetStatisticsInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/hSKTaskSheetInfoType"
          }
        },
        "masterInfoList": {
          "description": "Refer to Generic common types document",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/masterInfoType"
          }
        }
      }
    },
    "hSKTaskSheetInfoType": {
      "type": "object",
      "description": "Holds the information for the task sheet.",
      "properties": {
        "assignedTasks": {
          "$ref": "#/definitions/assignedTasksType"
        },
        "attendant": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "taskSeqNo": {
          "type": "integer"
        },
        "taskSheetType": {
          "$ref": "#/definitions/taskSheetType"
        },
        "taskSheetNo": {
          "type": "integer"
        },
        "taskDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "totalTaskCredits": {
          "type": "integer"
        },
        "totalCompletedCredits": {
          "type": "integer"
        },
        "averageActualTimeInSecs": {
          "type": "integer"
        },
        "taskSheetDetails": {
          "$ref": "#/definitions/hSKTaskSheetDetailsInfoType"
        },
        "roomSummary": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "object",
            "properties": {
              "housekeepingRoomStatusType": {
                "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
                "type": "string",
                "enum": [
                  "Clean",
                  "Dirty",
                  "Pickup",
                  "Inspected",
                  "OutOfOrder",
                  "OutOfService"
                ]
              },
              "totalCount": {
                "type": "integer"
              }
            }
          }
        }
      }
    },
    "assignedTasksType": {
      "type": "array",
      "description": "Holds the assigned task codes for a tasksheet.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/assignedTaskType"
      }
    },
    "assignedTaskType": {
      "type": "object",
      "description": "Holds the assigned task code for a tasksheet.",
      "properties": {
        "taskCode": {
          "description": "The Code for the task.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "taskSheetType": {
      "type": "string",
      "description": "Task Sheet classification.",
      "enum": [
        "NoServiceRequired",
        "DoNotDisturb",
        "ManuallyCreated",
        "AutomaticGeneration",
        "Isolated",
        "ExtraRooms"
      ]
    },
    "hSKTaskSheetDetailsInfoType": {
      "type": "object",
      "description": "Holds the task sheet statistics details information.",
      "properties": {
        "rooms": {
          "description": "Details of the room which is part of the Task Sheet. The room details will be returned when the request for IncludeTaskSheetDetails(flag in the search type) is true.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "object",
            "properties": {
              "roomType": {
                "description": "Room type basic information of the room.",
                "$ref": "#/definitions/roomTypeShortInfoType"
              },
              "floor": {
                "description": "Floor of the Room.",
                "type": "string",
                "minLength": 0,
                "maxLength": 20
              },
              "floorDescription": {
                "description": "Description for the Floor of the Room.",
                "type": "string",
                "minLength": 0,
                "maxLength": 20
              },
              "roomFeatures": {
                "description": "Room Features for the room.",
                "$ref": "#/definitions/roomFeaturesType"
              },
              "roomDescription": {
                "description": "Detail Long Description Of The Room.",
                "type": "string",
                "minLength": 0,
                "maxLength": 20
              },
              "description": {
                "description": "Description of the room.",
                "$ref": "#/definitions/translationTextType2000"
              },
              "smokingPreference": {
                "description": "This indicates room smoking preference.",
                "type": "string",
                "minLength": 0,
                "maxLength": 20
              },
              "smokingPreferenceDescription": {
                "description": "This indicates the description of the room smoking preference.",
                "type": "string",
                "minLength": 0,
                "maxLength": 20
              },
              "building": {
                "description": "Building associated with the room.",
                "type": "string",
                "minLength": 0,
                "maxLength": 20
              },
              "roomAssignmentRating": {
                "description": "Assignment Rating associated with the room.",
                "$ref": "#/definitions/ratePlanRatingType"
              },
              "accessible": {
                "description": "Indicates whether the room is accessibility compliant.",
                "type": "boolean"
              },
              "roomId": {
                "description": "Code of the room.",
                "type": "string",
                "minLength": 0,
                "maxLength": 20
              },
              "meetingRoom": {
                "description": "Indicates whether the room is a Meeting Room",
                "type": "boolean"
              },
              "roomSection": {
                "description": "Room sections of the room.",
                "$ref": "#/definitions/roomSectionType"
              },
              "housekeeping": {
                "description": "Identifies the Housekeeping information..",
                "$ref": "#/definitions/housekeepingType"
              },
              "outOfOrder": {
                "description": "Identifies the room Out of Order/Out of Service information.",
                "$ref": "#/definitions/roomsOutOfOrderType"
              },
              "discrepancy": {
                "description": "Identifies the room discrepancy information.",
                "$ref": "#/definitions/roomDiscrepanciesType"
              },
              "sitePlanSection": {
                "description": "Identifies the site plan location of the room.",
                "$ref": "#/definitions/sitePlanSectionType"
              },
              "componentRoomNumber": {
                "description": "This flag indicates component room.",
                "type": "string",
                "minLength": 0,
                "maxLength": 20
              },
              "connectingRooms": {
                "description": "This flag indicates connecting rooms.",
                "$ref": "#/definitions/roomRoomsType"
              },
              "componentRooms": {
                "description": "This flag indicates component rooms.",
                "$ref": "#/definitions/roomRoomsType"
              },
              "attendant": {
                "type": "array",
                "maxItems": 4000,
                "items": {
                  "$ref": "#/definitions/currentServicingAttendantType"
                }
              },
              "hold": {
                "description": "Hold attributes if any.",
                "$ref": "#/definitions/roomHoldType"
              },
              "turndownInfo": {
                "$ref": "#/definitions/turndownInfoType"
              },
              "resvInfo": {
                "type": "array",
                "maxItems": 4000,
                "items": {
                  "$ref": "#/definitions/reservationShortInfoType"
                }
              },
              "componentRoomNumbers": {
                "description": "List of component room numbers.",
                "type": "array",
                "maxItems": 4000,
                "items": {
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 20
                }
              },
              "reservationInfo": {
                "type": "array",
                "maxItems": 4000,
                "items": {
                  "$ref": "#/definitions/reservationInfoType"
                }
              },
              "servicingInfo": {
                "description": "Information regarding the current servicing of the room.",
                "type": "array",
                "maxItems": 4000,
                "items": {
                  "$ref": "#/definitions/currentServicingAttendantType"
                }
              },
              "attendantTimeEntriesInfo": {
                "type": "array",
                "maxItems": 4000,
                "items": {
                  "$ref": "#/definitions/hSKAttendantTimeLogsType"
                }
              },
              "instructions": {
                "description": "Task Sheet instructions at the room level.",
                "type": "string",
                "minLength": 0,
                "maxLength": 2000
              },
              "totalCredits": {
                "description": "Total credits for this room.",
                "type": "integer"
              },
              "wakeUpTime": {
                "description": "The wake up time of the current date",
                "type": "string",
                "format": "date",
                "maxLength": 8
              },
              "cleaningSequence": {
                "description": "The sequence for cleaning this room in the task sheet. This would apply only for Pickup and Dirty rooms.",
                "type": "integer"
              },
              "defaultSequence": {
                "description": "The sequence for this room from configuration.",
                "type": "integer"
              },
              "hasPriority": {
                "description": "The priority for this room.",
                "type": "boolean"
              },
              "actualTimeInMins": {
                "description": "The actual time spent by the attendant when doing a service to the room.",
                "type": "integer"
              },
              "roomSkipCount": {
                "description": "The number of skip count for that room.",
                "type": "integer"
              }
            },
            "description": "This type represents the primary room attributes."
          }
        }
      }
    },
    "hSKAttendantTimeLogsType": {
      "type": "object",
      "description": "Holds the information for the task sheet.",
      "properties": {
        "startRoomStatus": {
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "endRoomStatus": {
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "startTime": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "endTime": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "roomInterfaceStatus": {
      "type": "object",
      "description": "Response object for fetching room interface status",
      "properties": {
        "roomInterfaceStatusList": {
          "description": "Collection of room, reservation and interface status information.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/reservationInfoType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationInterface": {
      "type": "object",
      "description": "Request to change the interface status for a reservation.",
      "properties": {
        "reservationInterfaceStatus": {
          "description": "Contains collection of reservation and interface information",
          "type": "object",
          "properties": {
            "logo": {
              "description": "Hotel Interface Logo. On the database, this is also referred as DBF Logo. This is a three letter code followed by an underscore(_). This tells us which DBF files and log files with the prefix that IFC7 is going to create.",
              "$ref": "#/definitions/codeType"
            },
            "interfaceStatusList": {
              "description": "Collection of reservation and interface information.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/changeInterfaceStatusType"
              }
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changeInterfaceStatusType": {
      "type": "object",
      "description": "This will contain reservation id and corresponding interface information for which the interface status needs to be updated.",
      "properties": {
        "reservationId": {
          "description": "Unique identifier of the reservation.",
          "$ref": "#/definitions/reservationId"
        },
        "roomExtension": {
          "description": "Unique identifier for the room extension",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "interfaceRights": {
          "description": "Contains a list of status/rights for the various services under this interface",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/interfaceRightsStatusType"
          }
        }
      }
    },
    "roomKeyInterfaceDetails": {
      "type": "object",
      "description": "Response with the configuration details of active room key interfaces including the available key encoders.",
      "properties": {
        "keyInterfaceDetails": {
          "description": "Collection of configuration details of active room key interfaces.",
          "$ref": "#/definitions/roomKeyInterfaceDetailsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomKeyInterfaceDetailsType": {
      "type": "array",
      "description": "Configuration details of room key interface.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomKeyInterfaceDetailType"
      }
    },
    "roomKeyInterfaceDetailType": {
      "type": "object",
      "properties": {
        "interfaceRights": {
          "description": "Room key interface rights.",
          "$ref": "#/definitions/roomKeyInterfaceRightsType"
        },
        "encoders": {
          "description": "Available room key interface encoders.",
          "$ref": "#/definitions/roomKeyEncodersType"
        },
        "hotelId": {
          "description": "Hotel code of the interface.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "interfaceName": {
          "description": "Name of the interface.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "interfaceDescription": {
          "description": "Description of the interface.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "sendValidStartDateTime": {
          "description": "Indicator if the DLS Interface allows to send valid start date and time.",
          "type": "boolean"
        },
        "propertyDateTime": {
          "description": "Current property date and time.",
          "type": "string",
          "format": "date-time"
        },
        "multipleRoomKeys": {
          "description": "Indicator if additional rooms are allowed to be included in key creation.",
          "type": "boolean"
        },
        "additionalRoomsLimit": {
          "description": "Maximum number of additional rooms allowed.",
          "type": "integer",
          "minimum": 1,
          "maximum": 999
        },
        "outboundCode": {
          "description": "Outbound Code linked to the property interface.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "roomKeyInterfaceRightsType": {
      "type": "array",
      "description": "Holds the key encoder right.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomKeyInterfaceRightType"
      }
    },
    "roomKeyInterfaceRightType": {
      "type": "object",
      "properties": {
        "rightsCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "right": {
          "type": "integer"
        }
      }
    },
    "roomKeyEncodersType": {
      "type": "array",
      "description": "Holds the key encoder right.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomKeyEncoderType"
      }
    },
    "roomKeyEncoderType": {
      "type": "object",
      "properties": {
        "interfaceId": {
          "type": "string"
        },
        "encoderId": {
          "type": "string"
        },
        "workstation": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "deviceArea": {
          "type": "string"
        }
      }
    },
    "reservationQueueStatistics": {
      "type": "object",
      "description": "Response for the fetch of current Reservations In Queue statistics. Contains the statistic information.",
      "properties": {
        "statistics": {
          "description": "Queue Reservation statistics. Currently statistic is by Room Type.",
          "$ref": "#/definitions/reservationQueueStatisticsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationQueueStatisticsType": {
      "type": "object",
      "description": "Type for statistics of the reservations currently in Queue for Check-In.",
      "properties": {
        "roomType": {
          "description": "Room Type statistics for the reservations currently in Queue for Check-In.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationQueueRoomTypeStatisticsType"
          }
        },
        "averageQueueTimeToCheckIn": {
          "description": "The average time, in seconds, a reservation was on queue prior to Check-In.",
          "type": "integer"
        },
        "averageQueueTimeCurrentReservations": {
          "description": "The average time, in seconds, of the reservations currently in queue.",
          "type": "integer"
        }
      }
    },
    "reservationQueueRoomTypeStatisticsType": {
      "type": "object",
      "description": "Type for Room Type statistics for reservations currently in Queue for Check-In. Statistics would be the number of rooms for each room type which is currently in Queue. Statistics will also include the current number of rooms for each room status for the resort at the current time i.e the number of dirty rooms, clean rooms for each room type. In addition, the statistics will include the number of rooms per room type which are Vacant / Occupied.",
      "properties": {
        "roomType": {
          "description": "The room type for the statistics.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "fOStatus": {
          "description": "The number of rooms for the room type grouped by their FO status i.e Vacant or Occupied.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "object",
            "properties": {
              "roomStatus": {
                "description": "The total number of rooms for the room type grouped by their Room Status i.e Clean, Dirty etc..",
                "type": "array",
                "maxItems": 4000,
                "items": {
                  "type": "object",
                  "properties": {
                    "housekeepingRoomStatus": {
                      "description": "The room status code example Clean, Dirty etc.",
                      "$ref": "#/definitions/housekeepingRoomStatusType"
                    },
                    "totalRooms": {
                      "description": "The total number of rooms for the room status.",
                      "type": "integer"
                    }
                  }
                }
              },
              "frontOfficeStatus": {
                "description": "The FO status code i.e Vacant, Occupied.",
                "$ref": "#/definitions/frontOfficeRoomStatusType"
              },
              "totalRooms": {
                "description": "The total number of rooms for the Front Office status.",
                "type": "integer"
              }
            }
          }
        },
        "totalInQueue": {
          "description": "The total number of reservations in Queue for this room type.",
          "type": "integer"
        }
      }
    },
    "reservationsInQueue": {
      "type": "object",
      "description": "Response for the operation to fetch Reservations in Queue",
      "properties": {
        "reservations": {
          "description": "List of reservation currently in queue.",
          "$ref": "#/definitions/reservationList"
        },
        "roomStatusInfo": {
          "description": "Master Information regarding the room status for each of the rooms included in the response.",
          "$ref": "#/definitions/hotelRoomsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationList": {
      "type": "object",
      "description": "A collection of reservation details attached to Profiles.",
      "properties": {
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : History,Future reservations",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationInfoType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "hotelRoomsType": {
      "type": "object",
      "description": "Collection of Room record that contain Housekeeping and Out Of Order information.",
      "properties": {
        "room": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomType"
          }
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "roomType": {
      "type": "object",
      "description": "This type represents the primary room attributes.",
      "properties": {
        "scheduledRoomMoveOut": {
          "description": "This flag will be set to true  for rooms assigned to reservations that are scheduled to  move to another room.",
          "type": "boolean"
        },
        "scheduledRoomMoveOutTime": {
          "description": "It indicates the time of the reservation which is scheduled for move  out.",
          "type": "string",
          "format": "date-time"
        },
        "roomType": {
          "description": "Room type basic information of the room.",
          "$ref": "#/definitions/roomTypeShortInfoType"
        },
        "floor": {
          "description": "Floor of the Room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "floorDescription": {
          "description": "Description for the Floor of the Room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomFeatures": {
          "description": "Room Features for the room.",
          "$ref": "#/definitions/roomFeaturesType"
        },
        "roomDescription": {
          "description": "Detail Long Description Of The Room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the room.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "smokingPreference": {
          "description": "This indicates room smoking preference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "smokingPreferenceDescription": {
          "description": "This indicates the description of the room smoking preference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "building": {
          "description": "Building associated with the room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomAssignmentRating": {
          "description": "Assignment Rating associated with the room.",
          "$ref": "#/definitions/ratePlanRatingType"
        },
        "accessible": {
          "description": "Indicates whether the room is accessibility compliant.",
          "type": "boolean"
        },
        "roomId": {
          "description": "Code of the room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "meetingRoom": {
          "description": "Indicates whether the room is a Meeting Room",
          "type": "boolean"
        },
        "roomSection": {
          "description": "Room sections of the room.",
          "$ref": "#/definitions/roomSectionType"
        },
        "housekeeping": {
          "description": "Identifies the Housekeeping information..",
          "$ref": "#/definitions/housekeepingType"
        },
        "outOfOrder": {
          "description": "Identifies the room Out of Order/Out of Service information.",
          "$ref": "#/definitions/roomsOutOfOrderType"
        },
        "discrepancy": {
          "description": "Identifies the room discrepancy information.",
          "$ref": "#/definitions/roomDiscrepanciesType"
        },
        "sitePlanSection": {
          "description": "Identifies the site plan location of the room.",
          "$ref": "#/definitions/sitePlanSectionType"
        },
        "componentRoomNumber": {
          "description": "This flag indicates component room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "connectingRooms": {
          "description": "This flag indicates connecting rooms.",
          "$ref": "#/definitions/roomRoomsType"
        },
        "componentRooms": {
          "description": "This flag indicates component rooms.",
          "$ref": "#/definitions/roomRoomsType"
        },
        "attendant": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/currentServicingAttendantType"
          }
        },
        "hold": {
          "description": "Hold attributes if any.",
          "$ref": "#/definitions/roomHoldType"
        },
        "turndownInfo": {
          "$ref": "#/definitions/turndownInfoType"
        },
        "resvInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationShortInfoType"
          }
        },
        "componentRoomNumbers": {
          "description": "List of component room numbers.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "rotationRoomId": {
          "description": "Rotation room of the room type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "queueReservation": {
      "type": "object",
      "description": "Request to add a reservation to the Queue for Check-In. A reservation can be added to the queue prior to Check-In on the day of arrival.",
      "properties": {
        "hotelId": {
          "description": "Property where the reservation exists.",
          "$ref": "#/definitions/codeType"
        },
        "reservationId": {
          "description": "Reservation ID of the reservation which is to be added to the queue.",
          "$ref": "#/definitions/reservationId"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationQueuePriority": {
      "type": "object",
      "description": "Response to the request to add a reservation to the Queue for Check-In.",
      "properties": {
        "queueInfo": {
          "description": "Queue Information for this reservation.",
          "$ref": "#/definitions/reservationQueueInformationType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "shortReservation": {
      "type": "object",
      "properties": {
        "reservationInfoList": {
          "description": "Short reservation information response.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/reservationInfoType"
          }
        },
        "reservationsSummary": {
          "description": "Collection of Reservations summary and their information.",
          "$ref": "#/definitions/reservationsSummaryType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationsSummaryType": {
      "type": "object",
      "description": "Type which shows all fetched reservations summary depends on Fetch Summary Instruction.",
      "properties": {
        "roomSummary": {
          "description": "Room Summary of the reservations.",
          "$ref": "#/definitions/roomSummaryType"
        },
        "paymentMethodSummary": {
          "description": "Payment methods summary of the reservations.",
          "$ref": "#/definitions/paymentMethodsSummaryType"
        },
        "blockSummary": {
          "description": "Holds reservation information related to block(s) searched.",
          "$ref": "#/definitions/blockResvSummaryType"
        }
      }
    },
    "roomSummaryType": {
      "type": "object",
      "properties": {
        "assignedRooms": {
          "description": "Indicates summary of the assigned rooms.",
          "$ref": "#/definitions/assignedRoomsSummaryType"
        },
        "unassignedRooms": {
          "description": "Indicates summary of the unassigned rooms.",
          "$ref": "#/definitions/unassignedRoomsSummaryType"
        }
      }
    },
    "assignedRoomsSummaryType": {
      "type": "object",
      "description": "Indicates summary of the assigned rooms.",
      "properties": {
        "count": {
          "description": "Number of reservations with assigned rooms.",
          "type": "string",
          "minLength": 4,
          "maxLength": 4
        }
      }
    },
    "unassignedRoomsSummaryType": {
      "type": "object",
      "description": "Indicates summary of the unassigned rooms.",
      "properties": {
        "count": {
          "description": "Number of reservations with unassigned rooms.",
          "type": "string",
          "minLength": 4,
          "maxLength": 4
        }
      }
    },
    "paymentMethodsSummaryType": {
      "type": "object",
      "properties": {
        "establishedCount": {
          "description": "Reservations count with payment method established.",
          "type": "string",
          "minLength": 4,
          "maxLength": 4
        },
        "unestablishedCount": {
          "description": "Reservations count with no payment method established.",
          "type": "string",
          "minLength": 4,
          "maxLength": 4
        }
      }
    },
    "blockResvSummaryType": {
      "type": "object",
      "description": "Indicates summary of the Total reservations for the block.",
      "properties": {
        "totalReservations": {
          "description": "Number of reservations with block.",
          "type": "integer"
        }
      }
    },
    "roomsAI": {
      "type": "object",
      "description": "Request to run AI Room Assignment and allocate rooms to incoming reservations.",
      "properties": {
        "hotelCodes": {
          "description": "List of resorts for which the room assignment algorithm needs to run.",
          "$ref": "#/definitions/codeListType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "autoAssignRoom": {
      "type": "object",
      "description": "Request for auto assignment of rooms to reservations.",
      "properties": {
        "criteria": {
          "description": "Criteria for auto assignment of rooms to reservations.",
          "$ref": "#/definitions/reservationAutoRoomAssignRequestType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationAutoRoomAssignRequestType": {
      "type": "object",
      "description": "Request criteria for auto assignment of rooms to reserved reservations.",
      "properties": {
        "reservationCriteria": {
          "description": "A list of reservation ids which will be used to auto assign rooms.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationIdList"
          }
        },
        "roomSelectionCriteria": {
          "description": "Search type for the rooms which will be used to assign.",
          "type": "object",
          "properties": {
            "offset": {
              "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
              "type": "integer"
            },
            "limit": {
              "description": "Indicates maximum number of records a Web Service should return.",
              "type": "integer"
            },
            "hotelId": {
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "roomStatusFilter": {
              "description": "Fetch instructions that should be used to get hotel rooms.",
              "type": "object",
              "properties": {
                "hotelRoomStatusList": {
                  "description": "Hotel room status instructions to be used in requests for fetching rooms.",
                  "type": "array",
                  "maxItems": 4000,
                  "items": {
                    "$ref": "#/definitions/housekeepingRoomStatusType"
                  }
                },
                "hotelFORoomStatusList": {
                  "description": "Front office room status instructions to be used in requests for fetching housekeeping rooms.",
                  "type": "array",
                  "maxItems": 4000,
                  "items": {
                    "$ref": "#/definitions/frontOfficeRoomStatusType"
                  }
                }
              }
            },
            "roomRange": {
              "description": "Room range instructions.",
              "$ref": "#/definitions/roomRangeType"
            },
            "hotelRoomDateRange": {
              "description": "Date range instructions.",
              "$ref": "#/definitions/timeSpanType"
            },
            "roomTypes": {
              "description": "The room types of hotel rooms to be fetched.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "type": "string",
                "minLength": 0,
                "maxLength": 20
              }
            },
            "roomClass": {
              "description": "The room class of hotel rooms to be fetched.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "floor": {
              "description": "The floor of room to be fetched.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "includeDueOut": {
              "description": "This flag when set to true will include rooms assigned to due out reservations.",
              "type": "boolean"
            },
            "departureTime": {
              "description": "When IncludeDueOut is enabled, it is the departure time before which to search. It will return rooms assigned to departing reservations that have an ETD (Estimated Time of Departure) before the entered time.",
              "type": "string",
              "format": "date-time"
            },
            "roomFeatures": {
              "description": "The Room Features of the room to be fetched.",
              "$ref": "#/definitions/roomFeaturesType"
            },
            "smokingPreference": {
              "description": "The smoking preference of room to be fetched.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "includeAllRoomConditions": {
              "description": "This flag when set to true will include all room conditions, when set to false then room with \"General Assignment\" condition type will be excluded from the result.",
              "type": "boolean"
            },
            "includeComponentRooms": {
              "description": "This flag when set to true will include all component rooms",
              "type": "boolean"
            },
            "includePseudoRooms": {
              "description": "This flag when set to true will include all pseudo rooms",
              "type": "boolean"
            },
            "includeOORoomCheck": {
              "description": "This flag when set to true will work for Available Rooms functionality",
              "type": "boolean"
            },
            "connectingRoomsOnly": {
              "description": "This flag when set to true will include only connecting rooms.",
              "type": "boolean"
            },
            "reservationId": {
              "$ref": "#/definitions/reservationId"
            },
            "pseudoRoomsOnly": {
              "description": "This flag when set to true will include only pseudo rooms",
              "type": "boolean"
            },
            "includeAttendentInRoom": {
              "description": "This flag when set to true will includes attendent in Rooms",
              "type": "boolean"
            },
            "roomNumberWildcard": {
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "useAIRoomAssignment": {
              "description": "If the AI ROOM ASSIGNMENT application parameter is set to Y, this flag when set to true will use the AI Room Assignment algorithm to fetch the results in order of suitability.",
              "type": "boolean"
            },
            "includeDepartureRooms": {
              "description": "Indicates if departure rooms are to be included in the auto assignment.",
              "type": "boolean"
            },
            "useAssociatedProfilePreferences": {
              "description": "Indicates if preferences on the profile associated to the reservation should be used to determine the room type. The preferences for FLOOR, SMOKING and ROOM FEATURES will be used.",
              "type": "boolean"
            },
            "excludeRoomFeatures": {
              "description": "It indicates to exclude rooms with the selected Room Feature(s). It allows alphanumeric values(e.g.,TUB,BOLCONY,MV)",
              "$ref": "#/definitions/roomFeaturesType"
            },
            "excludeFloorPreferences": {
              "description": "It indicates to exclude rooms with the selected Floor(s).It allows alphanumeric values(e.g.,01,02,03,GROUND,five)",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "type": "string",
                "minLength": 0,
                "maxLength": 20
              }
            },
            "perfectFitRoomsOnly": {
              "type": "boolean",
              "description": "When this flag is set to true, it will fetch only rooms that have exactly Y nights free with the reservation guest(s) points. This will prevent any gaps in room assignment."
            },
            "orderBy": {
              "description": "When Forecast Rotation is checked, the room rotation order will consider any future reservations for point calculation and reorder the rooms accordingly.This is supported when OPERA Control Room Rotation and Forecast Rotation Points are active.",
              "$ref": "#/definitions/hotelRoomsOrderBy"
            },
            "useETDandETA": {
              "description": "Indicates if the Estimated Time of Departure of the departing reservation and the Estimated Time of Arrival of the arriving reservation should be considered during the Auto Assign process. If true, rooms that would cause an overlap of the ETD/ETAs will not be assigned. An additional buffer (in Minutes) will also be considered if the value in the Auto Assign ETD - ETA Buffer OPERA Control is not blank. The default value is false, which will not consider the ETD/ETA when assigning rooms.",
              "type": "boolean"
            },
            "excludeBackToBackReservations": {
              "description": "When this flag is set to true, it will exclude the linked reservations which are marked as Back to Back in the result.Marking reservations as Back to Back is available when the Back to Back Handling for Linked Reservations OPERA control is active.",
              "type": "boolean"
            }
          }
        },
        "roomNumberLocked": {
          "description": "Update the do not move flag used to locking the reservation room number.",
          "type": "boolean"
        }
      }
    },
    "roomRangeType": {
      "type": "object",
      "properties": {
        "fromRoomNumber": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "toRoomNumber": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "autoAssignedRoom": {
      "type": "array",
      "description": "Collection of result set which is made of reservation id, error and warning.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/autoRoomAssignType"
      }
    },
    "autoRoomAssignType": {
      "type": "object",
      "description": "Collection of error and warning if any.",
      "properties": {
        "warnings": {
          "description": "Details of the warnings.",
          "$ref": "#/definitions/warningsType"
        },
        "errors": {
          "description": "Details of the errors.",
          "$ref": "#/definitions/errorsType"
        },
        "reservationId": {
          "description": "Unique identifiers for the reservation for auto assign room.",
          "$ref": "#/definitions/reservationId"
        },
        "arrivalDate": {
          "description": "Arrival date of the reservation.",
          "type": "string",
          "format": "date-time"
        },
        "departureDate": {
          "description": "Departure date of the reservation.",
          "type": "string",
          "format": "date-time"
        },
        "guestName": {
          "description": "Guest name associated to the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "roomId": {
          "description": "Room number associated to the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "confirmationNo": {
          "description": "Reservation confirmation number.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "roomStatus": {
          "description": "Status of the room (Dirty/Clean/Inspected/Pickup).",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        }
      }
    },
    "massAdvanceCheckInReservations": {
      "type": "object",
      "description": "Request object to Submit Batch job for Mass Advance Check In of Reservations.",
      "properties": {
        "criteria": {
          "description": "Criteria for Submiting a request for Mass Advance Check In of Reservations.",
          "$ref": "#/definitions/massAdvanceCheckInCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "massAdvanceCheckInCriteriaType": {
      "type": "object",
      "description": "Criteria for performing Mass Advance Check In of Reservations",
      "properties": {
        "hotelId": {
          "description": "Resort to which the Reservation belongs.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationIdList": {
          "description": "Collection of IDs of Reservations that should be Mass Advance Checked In",
          "$ref": "#/definitions/reservationIdList"
        },
        "expectedReturnTime": {
          "description": "Time when the guest is expected to return to perform Check In",
          "type": "string",
          "format": "date-time"
        },
        "eTRComments": {
          "description": "Comments relating to the Advance Checked In guest's return to the property to perform Check In",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "massCheckInReservations": {
      "type": "object",
      "description": "Request object to Submit Batch job for Mass Checkin of Reservations.",
      "properties": {
        "criteria": {
          "description": "Criteria for Submiting Mass CHeckin of Reservations.",
          "$ref": "#/definitions/massCheckInCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "massCheckInCriteriaType": {
      "type": "object",
      "description": "This will have details of reservations and advance criteria for performing Mass Checkin of Reservations",
      "properties": {
        "hotelId": {
          "description": "Resort to which the Reservation belongs.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationIdList": {
          "description": "Collection of Reservation ID's that should be Mass Checked in",
          "$ref": "#/definitions/reservationIdList"
        },
        "additionalCriteria": {
          "description": "Additional RoomStatus Criteria for Mass Checkin",
          "type": "object",
          "properties": {
            "roomStatuses": {
              "description": "Additional RoomStatus Criteria for Mass Checkin",
              "$ref": "#/definitions/roomStatusListType"
            }
          }
        }
      }
    },
    "roomStatusListType": {
      "type": "array",
      "description": "Room Status Type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/housekeepingRoomStatusType"
      }
    },
    "advanceCheckInReservation": {
      "type": "object",
      "description": "Request object to perform Advance Check In of a Reservation.",
      "properties": {
        "reservation": {
          "description": "Information required for performing Advance Check In.",
          "$ref": "#/definitions/advanceCheckInReservationType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "advanceCheckInReservationType": {
      "type": "object",
      "description": "Information needed to perform Advance Check In of a Reservation",
      "properties": {
        "hotelId": {
          "description": "Resort to which the Reservation belongs.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "ID of the Reservation that is being Advance Checked In",
          "$ref": "#/definitions/reservationId"
        },
        "expectedReturnTime": {
          "description": "Time when the guest is expected to return to perform Check In",
          "type": "string",
          "format": "date-time"
        },
        "eTRComments": {
          "description": "Comments relating to the Advance Checked In guest's return to the property",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "reservationCommunication": {
          "description": "Collection of Reservation communication information such as phone numbers and email addresses.",
          "$ref": "#/definitions/resCommunicationType"
        },
        "optedForCommunication": {
          "description": "Indicates if the guest has opted for communications pertaining to this reservation.",
          "type": "boolean"
        }
      }
    },
    "reservation": {
      "type": "object",
      "description": "Validation checks includes the following: - Reservation is not valid to be checked in. - Split is still required before the reservation can be checked in. - Room information is missing. - Payment information is missing. - The status of the room needs to be reviewed. - Sharers was impacted. The check-in process affected the reservation details of shared guests on the reservation. - Sharers was not impacted. The check-in process has not affected the reservation details of shared guests on the reservation.",
      "properties": {
        "reservation": {
          "type": "object",
          "description": "Criteria element to check-in a reservation",
          "properties": {
            "roomId": {
              "description": "Expected room no. If this attribute is included, then Opera will check if the currently configured room no in the database matches this value.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "checkOutTime": {
              "description": "Request to update the checkout time.",
              "type": "string",
              "format": "date-time"
            },
            "startCheckInProcessTime": {
              "description": "Represents the time the user starts the check in process.",
              "type": "string",
              "format": "date-time"
            },
            "endCheckInProcessTime": {
              "description": "Represents the time the user compeletes the check in process.",
              "type": "string",
              "format": "date-time"
            },
            "lockHandle": {
              "description": "An id representing the record lock for this reservation. When passed, update operation will verify that this lock is still valid.",
              "type": "number"
            },
            "profilePrivacyPrompted": {
              "description": "Dictates whether Profile privacy stop in check in is prompted.",
              "type": "boolean"
            },
            "ignoreWarnings": {
              "description": "Dictates whether to ignore warnings ( e.g. room availability ) before check in.",
              "type": "boolean"
            },
            "stopCheckin": {
              "description": "Indicates the Stop Check In reservation Global Alert flag.",
              "type": "boolean"
            },
            "printRegistration": {
              "description": "Flag for Print Registration Card",
              "type": "boolean"
            },
            "overrideAdvancePaymentValidation": {
              "description": "Flag to override advance payment validation.",
              "type": "boolean"
            }
          }
        },
        "fetchReservationInstruction": {
          "description": "Instructions to fetch reservations .",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/checkedInReservationInstructionType"
          }
        },
        "includeNotifications": {
          "description": "When \"true\" alerts and comments are fetched. When \"false\", these alerts and comments are not retrieved.",
          "type": "boolean"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "checkedInReservationInstructionType": {
      "type": "string",
      "description": "Fetch Instruction to indicate if any automatically generated folios information should be returned in the response. For example, in a scenario when automatic credit bills are generated during check-in for the deposits, this instruction can be used to get the credit bill folios which can be used for printing/previewing the folios.",
      "enum": [
        "ReservationDetail",
        "AutoFolios",
        "ExcludeRoomSuggestion"
      ]
    },
    "checkedinReservation": {
      "type": "object",
      "description": "CheckIn response will commonly be errors over warnings. If a check has to be done before checking a reservation to a hotel, then the VerifyCheckinReservation operation can be utilized.",
      "properties": {
        "reservation": {
          "description": "Reservation record showing the current state of the reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/hotelReservationType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelReservationType": {
      "type": "object",
      "description": "The Reservation class contains the current reservation being created or altered.",
      "properties": {
        "reservationIdList": {
          "description": "Used to provide PMS and/or CRS identifiers.",
          "$ref": "#/definitions/reservationIdList"
        },
        "externalReferences": {
          "description": "External Reference information for Reservation.",
          "$ref": "#/definitions/externalReferencesType"
        },
        "associatedReservations": {
          "description": "Information regarding associated reservations.",
          "$ref": "#/definitions/associatedResType"
        },
        "sourceOfSale": {
          "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
          "$ref": "#/definitions/sourceOfSaleType"
        },
        "roomStay": {
          "description": "Room stays information.",
          "$ref": "#/definitions/roomStayType"
        },
        "compAuthorizer": {
          "description": "Reservation Comp Authorizer.",
          "$ref": "#/definitions/compAuthorizerInfoType"
        },
        "reservationGuests": {
          "description": "Collection of guests associated with the reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/resGuestType"
          }
        },
        "sharedGuests": {
          "description": "Collection of guests who share this reservation.",
          "$ref": "#/definitions/resSharedGuestListType"
        },
        "additionalGuestInfo": {
          "description": "Entry Date into the country. (Croatian Requirements).",
          "$ref": "#/definitions/resGuestAdditionalInfoType"
        },
        "reservationProfiles": {
          "description": "Collection of guests associated with the reservation.",
          "type": "object",
          "properties": {
            "reservationProfile": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/reservationProfileType"
              }
            },
            "commissionPayoutTo": {
              "description": "If not null, reservation is considered to pay out commission to either Travel Agent, Source or both.",
              "$ref": "#/definitions/commissionPayoutToType"
            }
          }
        },
        "reservationCommunication": {
          "description": "Collection of reservation communication details.",
          "$ref": "#/definitions/resCommunicationType"
        },
        "reservationAwards": {
          "description": "Collection of Awards,Certificates for the guest profile.",
          "$ref": "#/definitions/awardsType"
        },
        "trackItItems": {
          "description": "Collection of TrackIt Items available for that reservation",
          "$ref": "#/definitions/trackItItemsType"
        },
        "shares": {
          "description": "Collection of share reservation available for that reservation",
          "$ref": "#/definitions/hotelReservationsType"
        },
        "locators": {
          "description": "Collection of Locators available for that reservation",
          "$ref": "#/definitions/reservationLocatorsType"
        },
        "attachments": {
          "description": "Collection of attachments available for that reservation",
          "$ref": "#/definitions/attachmentsType"
        },
        "webRegistrationCards": {
          "description": "Collection of Web Registration Cards available for that reservation",
          "$ref": "#/definitions/attachmentsType"
        },
        "serviceRequests": {
          "description": "Collection of Service Requests available for that reservation",
          "$ref": "#/definitions/serviceRequests"
        },
        "reservationActivities": {
          "description": "Collection of Reservation Activities available for that reservation",
          "$ref": "#/definitions/activityLookUpList"
        },
        "scheduledActivities": {
          "description": "Collection of Scheduled Activities available for that reservation",
          "$ref": "#/definitions/activityLookUpList"
        },
        "prepaidCards": {
          "description": "Collection of Prepaid Cards available for that reservation",
          "$ref": "#/definitions/prepaidCardsType"
        },
        "profileAwards": {
          "description": "Collection of profile awards available for that reservation",
          "$ref": "#/definitions/awardsType"
        },
        "reservationPackages": {
          "description": "A Service object represents a non-room product provided to guests. Service products may have associated inventory and charges.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationPackageType"
          }
        },
        "inventoryItems": {
          "description": "A collection of inventory items attached to a reservation.",
          "$ref": "#/definitions/resInventoryItemsType"
        },
        "comments": {
          "description": "List of Notes for the Guest related to the reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/commentInfoType"
          }
        },
        "guestComments": {
          "description": "List of Notes for the Guest related to the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/commentInfoType"
          }
        },
        "guestMemberships": {
          "description": "List of Memberships for the Guest related to the reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/membershipType"
          }
        },
        "preferenceCollection": {
          "description": "Collection of reservation preferences.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/preferenceTypeType"
          }
        },
        "reservationMemberships": {
          "description": "List of reservation memberships.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationMembershipType"
          }
        },
        "reservationPaymentMethods": {
          "description": "A collection of Payment Method objects.",
          "$ref": "#/definitions/reservationPaymentMethodsType"
        },
        "routingInstructions": {
          "description": "Set of Routing Instructions.",
          "$ref": "#/definitions/routingInfoListType"
        },
        "reservationPolicies": {
          "description": "A collection of Cancellation Penalties objects.",
          "$ref": "#/definitions/reservationPoliciesType"
        },
        "cashiering": {
          "description": "Holds cashiering related information for the reservation.",
          "$ref": "#/definitions/resCashieringType"
        },
        "housekeeping": {
          "description": "Holds rooms housekeeping information.",
          "$ref": "#/definitions/resHousekeepingType"
        },
        "linkedReservation": {
          "description": "Reservations related to the current Reservation.",
          "$ref": "#/definitions/linkedReservationsInfoType"
        },
        "extSystemSync": {
          "type": "boolean"
        },
        "userDefinedFields": {
          "description": "Collections of user defined fields.",
          "$ref": "#/definitions/userDefinedFieldsType"
        },
        "reservationIndicators": {
          "description": "Indicators of additional information attached to the reservation",
          "$ref": "#/definitions/indicatorsType"
        },
        "waitlist": {
          "description": "Information regarding why reservation has been/was waitlisted. This could hold information as history even if reservation is no more in Waitlist status.",
          "$ref": "#/definitions/waitlistResType"
        },
        "cancellation": {
          "description": "Information regarding why reservation has been/was cancelled. This could hold information as history even if reservation is no more in in Cancelled status.",
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "code": {
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "cancellationNo": {
              "description": "Cancellation Number given when reservation was last cancelled.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "date": {
              "description": "Date when reservation was last cancelled.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            }
          }
        },
        "catering": {
          "description": "Catering event information if reservation is associated with the catering event.",
          "$ref": "#/definitions/cateringResInfoType"
        },
        "statisticalClassification": {
          "description": "Catering event information if reservation is associated with the catering event.",
          "$ref": "#/definitions/resStatClassificationType"
        },
        "alerts": {
          "description": "List of reservation alerts.",
          "$ref": "#/definitions/alertsType"
        },
        "traces": {
          "description": "List of reservation Traces.",
          "$ref": "#/definitions/hotelReservationTracesType"
        },
        "confirmationLetters": {
          "description": "List of reservation confirmation letters.",
          "$ref": "#/definitions/confirmationsType"
        },
        "callHistory": {
          "description": "List of reservation calls.",
          "$ref": "#/definitions/callHistoryType"
        },
        "fixedCharges": {
          "description": "List of reservation fixed charges.",
          "$ref": "#/definitions/fixedChargesType"
        },
        "guestMessages": {
          "description": "List of Messages.",
          "$ref": "#/definitions/guestMessagesType"
        },
        "lockHandle": {
          "description": "An id representing the record lock for this reservation. When passed, update operation will verify that this lock is still valid.",
          "type": "number"
        },
        "overrideInstructions": {
          "description": "List of overrides done for the reservation.",
          "$ref": "#/definitions/overrideInstructionsType"
        },
        "queue": {
          "description": "Information about the time and duration this reservation was on Queue for Checkin.",
          "$ref": "#/definitions/reservationQueueInformationType"
        },
        "allowedActions": {
          "description": "Collection of allowed actions for the reservation.",
          "$ref": "#/definitions/reservationAllowedActionsType"
        },
        "eCoupons": {
          "description": "List of eCoupons.",
          "$ref": "#/definitions/eCouponsType"
        },
        "transactionDiversions": {
          "description": "List of transaction diversions attached to the reservation.",
          "type": "object",
          "properties": {
            "transactionDiversions": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/reservationTransactionDiversionsType"
              }
            },
            "actionType": {
              "type": "string",
              "maxLength": 2000
            }
          }
        },
        "advanceCheckIn": {
          "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
          "$ref": "#/definitions/advanceCheckInType"
        },
        "tickets": {
          "description": "List of Reservation Tickets.",
          "$ref": "#/definitions/ticketsType"
        },
        "accessRestrictionMessage": {
          "description": "Configurable Access Restriction Message for Excluded Block or Rate Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "eCertificates": {
          "description": "List of ECertificates attached to the reservation.",
          "$ref": "#/definitions/reservationECertificatesType"
        },
        "customNameValueDetail": {
          "description": "List of Custom Name Value Information attached to the reservation.",
          "$ref": "#/definitions/nameValueDetailType"
        },
        "customChargeExemptionDetails": {
          "description": "List of Custom Charge Exemptions attached to the reservation.",
          "$ref": "#/definitions/customChargeExemptionsType"
        },
        "folios": {
          "description": "This element returns any automatically generated folios during check-in, based on the Fetch Instruction \"AutoFolios\". When the parameter \"Auto Generate Credit Bill for Deposit upon Check In\" is enabled, during check-in credit bills are automatically generated for the deposits. The generated credit bill details are returned so that user can preview/print the folio. For some countries like Portugal, it is mandatory to print the folio and hence this information is needed",
          "$ref": "#/definitions/foliosShortInfoType"
        },
        "autoBorrowFromHouse": {
          "description": "This flag will force to borrow from house if borrow required for number of rooms requested, this will only applicable when reservation is attached to a Block.",
          "type": "boolean"
        },
        "overrideExternalChecks": {
          "description": "Forcefully override the create/update action on the Reservation. For real-time CRS interfaces, this element is used as force selling indicator in case of Create or Update Reservation",
          "type": "boolean"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomStayReservation": {
          "description": "Boolean True if this reservation is reserving rooms. False if it is only reserving services.",
          "type": "boolean"
        },
        "reservationStatus": {
          "description": "Indicates the Actual status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "computedReservationStatus": {
          "description": "Indicates the Computed status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "walkIn": {
          "description": "When true, indicates the reservation is for a guest that walks-in without a reservation. When false, the reservation is not a walk-in.",
          "type": "boolean"
        },
        "printRate": {
          "description": "Indicates whether to show the rate or not on a printed document which includes the rate.",
          "type": "boolean"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "createBusinessDate": {
          "description": "Business Date when the reservation was created.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reinstateDate": {
          "description": "Business Date when the reservation was last reinstated.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "party": {
          "description": "Party/PartyCode when reservation is part of a party(a small group).",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "primaryEnrollmentResort": {
          "description": "Name Of the Resort/Hotel for the primary enrollment",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "primaryEnrollmentChain": {
          "description": "Name of the Chain for the primary enrollment",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "customReference": {
          "description": "Custom Reference to identify reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "displayColor": {
          "description": "The color to display this reservation on room grid displays.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "displayColorDetails": {
          "description": "Information of reservation display color, determined based on OPERA parameter RESERVATION_COLOR_DEFINITION ",
          "$ref": "#/definitions/reservationDisplayColorInfoType"
        },
        "markAsRecentlyAccessed": {
          "description": "Mark this reservation as recently accessed.",
          "type": "boolean"
        },
        "overrideInventoryCheck": {
          "description": "Indicates to Override the Room Inventory Check if applicable.",
          "type": "boolean"
        },
        "accessRestriction": {
          "description": "Indicates user restriction on the reservation based on the Access exclusion functionality such as Restriction on Changes, Cancellation or both.",
          "$ref": "#/definitions/resAccessRestrictionType"
        },
        "preRegistered": {
          "description": "Is the reservation pre-registered.",
          "type": "boolean"
        },
        "upgradeEligible": {
          "description": "Indicates whether the reservation is eligible for upgrade.",
          "type": "boolean"
        },
        "overrideBlockRestriction": {
          "type": "boolean"
        },
        "allowAutoCheckin": {
          "description": "Flag to allow auto checkin",
          "type": "boolean"
        },
        "hasOpenFolio": {
          "type": "boolean"
        },
        "allowMobileCheckout": {
          "description": "Flag containing true or false value for reservation to be eligible for self-checkout by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile checkout yes / no. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "allowMobileViewFolio": {
          "description": "Attribute AllowMobileViewFolio is set to true when the reservation is eligible for viewing folio using mobile device.",
          "type": "boolean"
        },
        "allowPreRegistration": {
          "description": "Flag containing true or false value for reservation to be eligible for prior check in by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile check in yes / no. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "optedForCommunication": {
          "description": "Flag containing true or false value to determine if the guest has opted for communications pertaining to this reservation.Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is marked for communication. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "chargeCardNumber": {
          "description": "This attribute represents Hotel charge card number. This number is generated automatically in OPERA when a reservation is created in OPERA. It is part of a functionality that provide the guest with the convenience of placing all their charges directly on their reservation folio.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "overrideOutOfServiceCheck": {
          "description": "Indicates to Override the Room Out Of Service Check if applicable.",
          "type": "boolean"
        },
        "hasVoucher": {
          "description": "This flag value true indicates the reservation matches a Voucher Rule. It is supported only if OPERA Control Vouchers is active.",
          "type": "boolean"
        },
        "scheduledRoomMoves": {
          "description": "Scheduled Moves",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/scheduledRoomMoveType"
          }
        },
        "backToBack": {
          "description": "This attribute indicates if the linked reservation is marked as Back to Back or not. Back to Back functionality is available when the Back to Back Handling of Linked Reservations OPERA Control is active.",
          "type": "boolean"
        },
        "backToBackSequence": {
          "description": "This attribute represents Back To Back Sequence of Linked Reservations(e.g. '1,2' i.e, 1 indicates Sequence Position and 2 indicates total count of linked Back to Back reservations with consecutive Stay Dates). This is applicable when OPERA control Back to Back Handling for Linked Reservations is active.",
          "$ref": "#/definitions/backToBackResSequenceType"
        },
        "backToBackGroupId": {
          "description": "This attribute represents a common identifier for a subgroup of linked reservations marked as Back to Back in a group of linked reservations.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "scheduledRoomMoveType": {
      "description": "Scheduled Room Move information.",
      "type": "object",
      "properties": {
        "scheduledMoveInfo": {
          "description": "Scheduled Room Move information for a reservation.",
          "$ref": "#/definitions/scheduledRoomMoveInfoType"
        },
        "roomAssignmentSegmentBegin": {
          "type": "string",
          "description": "Date Room Assignment Begins.",
          "format": "date-time"
        },
        "roomAssignmentSegmentEnd": {
          "type": "string",
          "description": "Date of the Scheduled Move Room.",
          "format": "date-time"
        },
        "roomAssignmentSegmentNo": {
          "type": "integer",
          "description": "Room Assignment Segment Number."
        }
      }
    },
    "scheduledRoomMoveInfoType": {
      "description": "Scheduled Room Move information.",
      "type": "object",
      "properties": {
        "moveStatus": {
          "description": "Scheduled Room Move Status.",
          "$ref": "#/definitions/scheduledRoomMoveStatusType"
        },
        "moveComments": {
          "type": "string",
          "description": "Comments about scheduled room move.",
          "minLength": 0,
          "maxLength": 200
        },
        "moveInRoomOccupancyInfo": {
          "description": "Scheduled Move In Room Occupancy Information.",
          "$ref": "#/definitions/roomOccupancyType"
        },
        "estimatedMoveTime": {
          "type": "string",
          "description": "Estimated Move Time.",
          "format": "date-time"
        },
        "moveOutRoomId": {
          "type": "string",
          "description": "Scheduled Move Out Room Id.",
          "minLength": 0,
          "maxLength": 20
        },
        "moveOutRoomType": {
          "type": "string",
          "description": "Scheduled Move Out Room Type.",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "scheduledRoomMoveStatusType": {
      "type": "string",
      "description": "Flag indicating scheduled room move status.",
      "enum": [
        "Completed",
        "Pending"
      ]
    },
    "roomOccupancyType": {
      "description": "Room Occupancy information.",
      "type": "object",
      "properties": {
        "roomId": {
          "type": "string",
          "description": "Room Id.",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "type": "string",
          "description": "Room Type.",
          "minLength": 0,
          "maxLength": 20
        },
        "roomIsOccupied": {
          "type": "boolean",
          "description": "Indicates if the Room is currently occupied."
        },
        "estimatedDepartureTime": {
          "type": "string",
          "description": "Estimated Time of Departure of reservation when room status is occupied.",
          "format": "date-time"
        },
        "guestFirstName": {
          "type": "string",
          "description": "Guest First/Given Name on reservation when room status is occupied.",
          "minLength": 0,
          "maxLength": 40
        },
        "guestLastName": {
          "type": "string",
          "description": "Guest Last Name /Surname on reservation when room status is occupied.",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "associatedResType": {
      "type": "object",
      "description": "Information regarding associated reservations to the reservation.",
      "properties": {
        "parentReservation": {
          "description": "Stores Unique ID of the parent reservation.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "originalMultiRoomRes": {
          "description": "Stores Unique ID of the original multi room reservation from which this reservation is split off.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "roomStayType": {
      "type": "object",
      "properties": {
        "registrationNumber": {
          "description": "Registration Number of the reservation for the current day.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "currentRoomInfo": {
          "description": "Room information of the reservation for the current day.",
          "$ref": "#/definitions/currentRoomInfoType"
        },
        "reservationKeyInfo": {
          "description": "Holds the room key information provided by the Door Lock System.",
          "$ref": "#/definitions/reservationKeyInfoType"
        },
        "roomRates": {
          "description": "A collection of Room Rates associated with a particular Room Stay. Each Room Rate combination can have multiple rates. Example King room, Rack rate plan, Monday through Thursday, weekday amount, Friday and Saturday, weekend amount.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomRateType"
          }
        },
        "guestCounts": {
          "$ref": "#/definitions/guestCountsType"
        },
        "arrivalDate": {
          "type": "string",
          "format": "date"
        },
        "departureDate": {
          "type": "string",
          "format": "date"
        },
        "bookingTimeSpan": {
          "description": "The booking time span of the reservation, only applicable when time increments are being used.",
          "$ref": "#/definitions/bookingTimeSpanType"
        },
        "expectedTimes": {
          "description": "The Expected Arrival and Departure Times.",
          "$ref": "#/definitions/resExpectedTimesType"
        },
        "originalTimeSpan": {
          "description": "The Original Time Span(Arrival, Departure) which covers the Room Stay. In case of Rolling No Show TimeSpan's StratDate moves forward but OriginalTimeSpan's StratDate remains the same.",
          "$ref": "#/definitions/timeSpanType"
        },
        "guarantee": {
          "description": "The guarantee information associated to the Room Stay. A maximum of 5 occurances are available for use depending on the context.",
          "$ref": "#/definitions/resGuaranteeType"
        },
        "promotion": {
          "description": "Promotions applied to the reservation to get the promotional rate.",
          "$ref": "#/definitions/promotionType"
        },
        "suiteWith": {
          "description": "Connecting Rooms.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "total": {
          "description": "The total amount charged for the Room Stay.",
          "$ref": "#/definitions/totalType"
        },
        "totalPoints": {
          "description": "The total number of Points charged for the Room Stay.",
          "$ref": "#/definitions/pointsType"
        },
        "multiValueAttrs": {
          "description": "Informative indicators indicating different values of an attribute exists over the stay.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 2000
          }
        },
        "upsellInfo": {
          "description": "Indicates Upsell Information to be applied on Reservation.",
          "$ref": "#/definitions/upsellInfoType"
        },
        "mobileNotifications": {
          "description": "Denotes the status of Room Ready and Key Ready messages.",
          "$ref": "#/definitions/resMobileNotificationsType"
        },
        "roomNumberLocked": {
          "description": "When true, indicates a room number cannot be changed. When false, indicates a room number may be changed.",
          "type": "boolean"
        },
        "printRate": {
          "description": "This control whether rate info will be printed in confirmation letter.",
          "type": "boolean"
        },
        "ownerReservationType": {
          "description": "Indicates whether reservation is for Unit/Room Owner or Authorized User. If this attribute is not define it is a regular/rental reservation.",
          "$ref": "#/definitions/ownerResTypeType"
        },
        "primaryShareType": {
          "description": "This is populated in case of primary share scenario. This indicates whether this reservation is primary or non primary. Changes or postings to the 'non-primary' share reservation is not allowed.",
          "$ref": "#/definitions/primaryShareTypeType"
        },
        "remoteCheckInAllowed": {
          "description": "Indicates whether the reservation is pre-registered for internet check-in or not.",
          "type": "boolean"
        },
        "bookingMedium": {
          "description": "Classifies the medium(Channel field on reservation screen) through which the reservation is made.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bookingMediumDescription": {
          "description": "Description of the booking medium.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "availableUpsellOfferCount": {
          "description": "Number of Upsell Offers Available for this stay. This will only be populated if the Upsell Instruction is included in the Allowed Instruction request",
          "type": "integer"
        }
      }
    },
    "currentRoomInfoType": {
      "type": "object",
      "description": "Room information of the reservation for the current day.",
      "properties": {
        "roomType": {
          "description": "Current room type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomId": {
          "description": "Current room number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomOwnershipType": {
          "description": "Provides the information of the assigned reservation room is an Owner,Referral or Regular room. This value is returned when Room Rotation OPERA Control is active and room number is assigned to a reservation.",
          "$ref": "#/definitions/reservationRoomOwnershipType"
        },
        "suggestedRoomNumbers": {
          "description": "Suggested room numbers.",
          "$ref": "#/definitions/codeListType"
        },
        "roomDescription": {
          "description": "Current room description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "roomViewCode": {
          "description": "Represents the room view code like City view, River view, Ocean view etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "assignedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        },
        "upgradedByAI": {
          "description": "Represents the room was upgraded by AI Room Assignment.",
          "type": "boolean"
        }
      }
    },
    "roomRateType": {
      "type": "object",
      "properties": {
        "total": {
          "$ref": "#/definitions/totalType"
        },
        "totalPoints": {
          "$ref": "#/definitions/pointsType"
        },
        "rates": {
          "$ref": "#/definitions/ratesType"
        },
        "packages": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/packageElementType"
          }
        },
        "stayProfiles": {
          "description": "Profile associated with the room Stay.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationProfileType"
          }
        },
        "guestCounts": {
          "description": "A collection of Guest Counts associated with the room rate.",
          "$ref": "#/definitions/guestCountsType"
        },
        "taxFreeGuestCounts": {
          "description": "A collection of Tax Free Guest Counts associated with the room rate. This list does not add to the guest count but just indicates number of tax free guests out of guest counts.",
          "$ref": "#/definitions/guestCountsType"
        },
        "awards": {
          "description": "Membership Awards code applied on the reservation.",
          "$ref": "#/definitions/resAwardsType"
        },
        "foreignExchange": {
          "description": "Exchange Type information for the postings.",
          "$ref": "#/definitions/foreignExchangeType"
        },
        "reservationBlock": {
          "description": "Key information about the block for this reservation.",
          "$ref": "#/definitions/reservationBlockType"
        },
        "roomRateInfo": {
          "description": "Information about the Room Rate Combination.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "mealPlans": {
          "description": "Meal plan codes for rate plan code.",
          "$ref": "#/definitions/mealPlansType"
        },
        "roomType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "promotionCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "availability": {
          "description": "Used to specify an availability status for the room rate. When available value could be either not specified or \"Available\".",
          "$ref": "#/definitions/roomRateAvailReasonType"
        },
        "suppressRate": {
          "type": "boolean"
        },
        "marketCode": {
          "description": "The code that relates to the market being sold to (e.g., the corporate market, packages).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "marketCodeDescription": {
          "description": "Description of the market code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "sourceCode": {
          "description": "To specify where the business came from e.g. radio, newspaper ad, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceCodeDescription": {
          "description": "Description of the source of business.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "numberOfUnits": {
          "description": "The number of rooms.",
          "type": "integer"
        },
        "roomId": {
          "description": "A string value representing the unique identification of a room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "pseudoRoom": {
          "description": "True indicates as pseudo room type. This is usually used for a posting master reservation.",
          "type": "boolean"
        },
        "roomTypeCharged": {
          "description": "Room Type used for the Rate calculation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "commissionCode": {
          "description": "Commission Code applicable for commission calculation for Travel Agent/Company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "commissionable": {
          "description": "Indicates Commission is applicable for commission calculation for Travel Agent/Company.",
          "type": "boolean"
        },
        "houseUseOnly": {
          "description": "Indicates this reservation is for House use.",
          "type": "boolean"
        },
        "complimentary": {
          "description": "Indicates this reservation rate is complimentary.",
          "type": "boolean"
        },
        "inventoryLender": {
          "description": "Indicates whether the room type inventory was taken from the allotment or House availability.",
          "type": "string"
        },
        "fixedRate": {
          "description": "Fixed Rate Indicator.",
          "type": "boolean"
        },
        "barRanking": {
          "description": "Best Available rates ranking.",
          "type": "integer"
        },
        "rateGroup": {
          "description": "For RatePlanSet equals BESTAVAILABLERATE, in case Rate Groups are enabled the element provides the rate group for the rate plan code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "discountAllowed": {
          "description": "Indicates if the Rate Code is discountable i.e discounts are allowed on the rate code.",
          "type": "boolean"
        },
        "bogoDiscount": {
          "description": "Indicates if the Rate Code has BOGO(Bye one Get one) indicator.",
          "type": "boolean"
        },
        "rateLevel": {
          "description": "Rate plan type like Corporate,Regular,Military,Weekend etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "commissionPercentage": {
          "description": "Indicates commission percentage used by the rate plan.",
          "type": "integer"
        },
        "commissionAmount": {
          "description": "Indicates commission amount used by the rate plan.",
          "type": "integer"
        },
        "credentialsRequired": {
          "description": "If true, indicates that credentials is required to sell the rate code.",
          "type": "boolean"
        },
        "taxIncluded": {
          "description": "If true, indicates if tax is included in the rate code.",
          "type": "boolean"
        },
        "rateDescription": {
          "description": "Rate code description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        }
      }
    },
    "totalType": {
      "type": "object",
      "description": "The total amount charged for the service including additional amounts and fees.",
      "properties": {
        "taxes": {
          "description": "A collection of taxes.",
          "$ref": "#/definitions/taxesType"
        },
        "fees": {
          "description": "A collection of fees or service charges.",
          "$ref": "#/definitions/feesType"
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "amountBeforeTax": {
          "description": "The total amount not including any associated tax (e.g., sales tax, VAT, GST or any associated tax).",
          "type": "number"
        },
        "amountAfterTax": {
          "description": "The total amount including all associated taxes (e.g., sales tax, VAT, GST or any associated tax).",
          "type": "number"
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "code": {
          "description": "Type of charge.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateOverride": {
          "description": "When true indicates that the rate amount has been overridden.",
          "type": "boolean"
        },
        "baseAmount": {
          "description": "The rate's base price. Amount excluding price for any add to rate combine line package attached to the rate.Also excludes any discounts",
          "type": "number"
        }
      }
    },
    "taxesType": {
      "type": "object",
      "description": "A collection of taxes.",
      "properties": {
        "tax": {
          "description": "An individual tax.",
          "type": "array",
          "maxItems": 99,
          "items": {
            "$ref": "#/definitions/taxType"
          }
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "taxType": {
      "type": "object",
      "description": "Applicable tax element. This element allows for both percentages and flat amounts. If one field is used, the other should be zero since logically, taxes should be calculated in only one of the two ways.",
      "properties": {
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "type": {
          "description": "Used to indicate if the amount is inclusive or exclusive of other charges, such as taxes, or is cumulative (amounts have been added to each other).",
          "$ref": "#/definitions/amountDeterminationType"
        },
        "code": {
          "description": "Code identifying the fee (e.g.,agency fee, municipality fee).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "amountDeterminationType": {
      "type": "string",
      "description": "Used to indicate if an amount is inclusive or exclusive of other charges, such as taxes.",
      "enum": [
        "Inclusive",
        "Exclusive"
      ]
    },
    "feesType": {
      "type": "object",
      "description": "A collection of fees or service charges.",
      "properties": {
        "fee": {
          "description": "An individual fee or service charge.",
          "type": "array",
          "maxItems": 99,
          "items": {
            "$ref": "#/definitions/feeType"
          }
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "feeType": {
      "type": "object",
      "description": "Applicable service charges or fees.",
      "properties": {
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "type": {
          "description": "Used to indicate if the amount is inclusive or exclusive of other charges, such as taxes, or is cumulative (amounts have been added to each other).",
          "$ref": "#/definitions/amountDeterminationType"
        },
        "code": {
          "description": "Code identifying the fee (e.g.,agency fee, municipality fee).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "ratesType": {
      "type": "object",
      "description": "Individual rate amount.",
      "properties": {
        "rate": {
          "description": "The Rate contains a collection of elements that define the amount of the rate, associated fees, additional occupant amounts. Taxes can be broken out or included within the various amounts. A currency can be associated to each amount.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/amountType"
          }
        },
        "rateRange": {
          "description": "Rate Range details like maximum rate amount and minimum rate amount in each available rate category.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/rateRangeType"
          }
        }
      }
    },
    "amountType": {
      "type": "object",
      "description": "Base charge and additional charges related to a room that includes such things as additional guest amounts, cancel fees, etc. Also includes Discount percentages, total amount, and the rate description.",
      "properties": {
        "base": {
          "description": "The base amount charged for the accommodation or service per unit of time (ex: Nightly, Weekly, etc). If TaxInclusive is set to True, then taxes are included in the base amount. Note that any additional charges should itemized in the other elements.",
          "$ref": "#/definitions/totalType"
        },
        "additionalGuestAmounts": {
          "description": "Collection of incremental charges per age qualifying code for additional guests. Amount charged for additional occupant is with respect to age group of the base guests.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/additionalGuestAmountType"
          }
        },
        "discount": {
          "description": "Discount percentage and/or Amount, code and textual reason for discount",
          "$ref": "#/definitions/discountType"
        },
        "shareRatePercentage": {
          "description": "Indicates the share rate percentage for the reservation if set to CUSTOMSPLIT.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "shareDistributionInstruction": {
          "description": "Last rate share distribution instruction applied on share reservation daily rate segment.",
          "$ref": "#/definitions/shareDistributionInstructionType"
        },
        "total": {
          "description": "The total amount charged for this rate including additional occupant amounts and fees.",
          "$ref": "#/definitions/totalType"
        },
        "requiredPoints": {
          "description": "The Points contains the number of points required to book a particular room type.",
          "$ref": "#/definitions/pointsType"
        },
        "effectiveRate": {
          "description": "The reservation effective amount charged for the accommodation or service (i.e. base amount + amount for Add to Rate Combine Line packages) per unit of time",
          "$ref": "#/definitions/totalType"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "additionalGuestAmountType": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/totalType"
        },
        "ageQualifyingCode": {
          "type": "string",
          "enum": [
            "ADULT",
            "CHILD",
            "OTHER",
            "CHILDBUCKET1",
            "CHILDBUCKET2",
            "CHILDBUCKET3",
            "CHILDBUCKET4",
            "CHILDBUCKET5"
          ]
        }
      }
    },
    "discountType": {
      "type": "object",
      "description": "Identifies and provides details about the discount. This allows for both percentages and flat amounts. If one field is used, the other should be zero/not specified since logically.",
      "properties": {
        "discountReason": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "percent": {
          "description": "Percentage discount.",
          "type": "number"
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        },
        "discountCode": {
          "description": "Specifies the type of discount (e.g., No condition, LOS, Deposit or Total amount spent).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "shareDistributionInstructionType": {
      "type": "string",
      "description": "The type of Rate Amount Change to be done on the Sharer reservation. This can be FULL -> Full Rate for each Sharer. SPLIT-> Split the Rate amount between Sharer Reservations. ENTIRE -> This Sharer will get the total amount of the rate code for all the Sharer Reservations.",
      "enum": [
        "Full",
        "Entire",
        "Split",
        "CustomSplit"
      ]
    },
    "rateRangeType": {
      "type": "object",
      "description": "Rate Range details like maximum rate amount and minimum rate amount in each available rate category.",
      "properties": {
        "base": {
          "description": "The base amount charged for the accommodation or service.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/totalType"
          }
        },
        "rateChange": {
          "description": "Rate Change Indicator.",
          "type": "boolean"
        }
      }
    },
    "packageElementType": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "allowance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "description": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 2000
          }
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "packageCode": {
          "type": "string"
        },
        "calculationRule": {
          "type": "string"
        },
        "postingRhythm": {
          "type": "string"
        },
        "quantity": {
          "type": "integer"
        },
        "includedInRate": {
          "type": "boolean"
        },
        "addRateSeprateLine": {
          "type": "boolean"
        },
        "addRateCombinedLine": {
          "type": "boolean"
        },
        "startTime": {
          "type": "string"
        },
        "endTime": {
          "type": "string"
        },
        "sellSeparate": {
          "type": "boolean"
        }
      }
    },
    "reservationProfileType": {
      "type": "object",
      "properties": {
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
          "$ref": "#/definitions/profileIdList"
        },
        "profile": {
          "description": "Provides detailed information regarding either a company or a customer profile.",
          "$ref": "#/definitions/profileType"
        },
        "reservationProfileType": {
          "$ref": "#/definitions/resProfileTypeType"
        }
      }
    },
    "profileType": {
      "type": "object",
      "description": "Type provides the detailed information about the profile and its children.",
      "properties": {
        "customer": {
          "description": "Detailed customer information for this profile.",
          "$ref": "#/definitions/customerType"
        },
        "company": {
          "description": "Detailed company information for this profile.",
          "$ref": "#/definitions/companyType"
        },
        "profileImage": {
          "description": "The profile image.",
          "$ref": "#/definitions/imageSetType"
        },
        "addresses": {
          "description": "List of customer addresses.",
          "type": "object",
          "properties": {
            "addressInfo": {
              "description": "Collection of Detailed information on an address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/addressInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "businessSegments": {
          "description": "Business/Market Segment associated to the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "territory": {
          "description": "Territory associated to the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "traceCode": {
          "description": "Trace Code associated to the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "ownerCode": {
          "description": "Owner Code associated to the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "influenceCode": {
          "description": "Influence Code associated to the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "uRLs": {
          "description": "List of Information on a URL for the customer.",
          "type": "object",
          "properties": {
            "uRLInfo": {
              "description": "Collection of Detailed information on web url/address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/uRLInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "comments": {
          "description": "List of Notes for the customer.",
          "type": "object",
          "properties": {
            "commentInfo": {
              "description": "Collection of Detailed information on comments for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/commentInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "profileDeliveryMethods": {
          "description": "List of Delivery methods configured against a Property for this Profile.",
          "type": "object",
          "properties": {
            "profileDeliveryMethod": {
              "description": "Collection of delivery methods for this Profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/profileDeliveryMethod"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "profileMemberships": {
          "description": "List of loyalty program(s) the profile is subscribed to.",
          "type": "object",
          "properties": {
            "profileMembership": {
              "description": "Collection of Detailed information on memberships for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/profileMembershipType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "preferenceCollection": {
          "description": "List of customer preferences.",
          "type": "object",
          "properties": {
            "preferenceType": {
              "description": "Collection of Detailed information on preferences of the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/preferenceTypeType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "keywords": {
          "description": "List of customer keywords.",
          "type": "object",
          "properties": {
            "keyword": {
              "description": "Collection of keywords attached to the profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/keywordType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "negotiatedRates": {
          "description": "List of profile negotiated rates.",
          "type": "object",
          "properties": {
            "negotiatedRate": {
              "description": "Collection of Detailed information on profile negotiated rates.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/negotiatedType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "gdsNegotiatedRates": {
          "description": "List of channel negotiated rates that this profile has been assigned to.",
          "type": "object",
          "properties": {
            "gdsNegotiatedRate": {
              "description": "Collection of Detailed information on channel negotiated rates for the profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/gdsNegotiatedType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "profileIndicators": {
          "description": "Indicators of additional information attached to the profile",
          "$ref": "#/definitions/indicatorsType"
        },
        "relationships": {
          "description": "Contains a collection of profiles that have a relationship with this profile.",
          "type": "object",
          "properties": {
            "relationship": {
              "description": "A collection of the profiles that have a relationship with this profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/relationshipInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "relationshipsSummary": {
          "description": "Contains a collection of profiles that have a relationship with this profile.",
          "type": "object",
          "properties": {
            "relationship": {
              "description": "A collection of the profiles summary that have a relationship with this profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/relationshipInfoSummaryType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "reservationInfoList": {
          "description": "Collection of Detailed information on history and future reservations associated with the profile.",
          "$ref": "#/definitions/reservationHistoryFutureInfoType"
        },
        "stayReservationInfoList": {
          "description": "Collection of Detailed information on history and future reservations associated with the profile.",
          "$ref": "#/definitions/reservationStayHistoryFutureInfoType"
        },
        "lastStayInfo": {
          "description": "Information on last stay of the profile.",
          "$ref": "#/definitions/lastStayInfoType"
        },
        "profileAccessType": {
          "description": "Detailed information on access type associated with the profile.",
          "$ref": "#/definitions/profileAccessType"
        },
        "profileRestrictions": {
          "description": "Detailed information on restrictions associated with the profile.",
          "$ref": "#/definitions/profileRestrictions"
        },
        "mailingActions": {
          "description": "Contains collection of mailing action list associated with the profile",
          "$ref": "#/definitions/mailingActionsType"
        },
        "privacyInfo": {
          "description": "Contains privacy related information associated with the profile",
          "$ref": "#/definitions/privacyInfoType"
        },
        "cashiering": {
          "description": "Contains cashiering related details for the profile",
          "$ref": "#/definitions/profileCashieringType"
        },
        "commissionInfoList": {
          "description": "Contains commission related details for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/profileCommissionType"
          }
        },
        "userDefinedFields": {
          "description": "Collections of user defined fields.",
          "$ref": "#/definitions/userDefinedFieldsType"
        },
        "webUserAccounts": {
          "description": "List of Web User Accounts of the profile.",
          "$ref": "#/definitions/webUserAccountsType"
        },
        "taxInfo": {
          "description": "Profile information about tax.",
          "$ref": "#/definitions/profileTaxInfoType"
        },
        "salesInfo": {
          "description": "Sales information of the profiles.",
          "$ref": "#/definitions/salesInfoType"
        },
        "eCertificates": {
          "description": "E-Certificate assosiated with the profile.",
          "$ref": "#/definitions/eCertificatesType"
        },
        "subscriptions": {
          "description": "List of profile subscriptions.",
          "$ref": "#/definitions/profileSubscriptionListType"
        },
        "localizationGuestType": {
          "description": "Localization Guest Type assocaited to the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "eligibleForFiscalFolio": {
          "description": "Eligible for Fiscal Folio/Payload generation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomOwnershipsList": {
          "description": "Room Ownership records.",
          "type": "object",
          "properties": {
            "roomOwnershipInfo": {
              "description": "Collection of Detailed information on Room Ownership records.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/roomOwnershipType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        },
        "statusCode": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "registeredProperty": {
          "description": "Hotel which this profile is registered with. This attribute is not used for configuration.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "requestForHotel": {
          "description": "Hotel which this profile is to be registered. This attribute is only used during creation of profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "protectedBy": {
          "description": "What level this profile is protected.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "markAsRecentlyAccessed": {
          "description": "Mark this profile as recently accessed.",
          "type": "boolean"
        },
        "markForHistory": {
          "description": "\"true\" setting marks the profile to be kept from being purged, once the profile is marked inactive.",
          "type": "boolean"
        },
        "hasCommission": {
          "description": "Populates true if the profile has commission configured false otherwise.",
          "type": "boolean"
        },
        "inheritedNegRates": {
          "description": "Flag to indicate if the negotiated rates are inherited from master profile. Flag is available only when the profile is linked to master profile and master profile has negotiated rate codes attached.",
          "type": "boolean"
        },
        "showInactiveRoomOwners": {
          "description": "Flag to show inactive Room Owners.",
          "type": "boolean"
        }
      }
    },
    "customerType": {
      "type": "object",
      "description": "Contains basic data on the customer's identity, location, relationships, finances, memberships, etc.",
      "properties": {
        "personName": {
          "description": "Detailed name information for the customer.",
          "type": "array",
          "maxItems": 5,
          "items": {
            "$ref": "#/definitions/personNameType"
          }
        },
        "anonymization": {
          "description": "Provides information about the guest's anonymization status",
          "$ref": "#/definitions/anonymizationType"
        },
        "citizenCountry": {
          "description": "Name of the (self-professed) country that is claimed for citizenship.",
          "$ref": "#/definitions/countryNameType"
        },
        "identifications": {
          "description": "List of identification of the customer.",
          "type": "object",
          "properties": {
            "identificationInfo": {
              "description": "Collection of detailed information on the identification of the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/identificationInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "profession": {
          "description": "Profession of a person.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "alienInfo": {
          "description": "Immigration/visa information of a foreign person.",
          "$ref": "#/definitions/alienInfoType"
        },
        "birthCountry": {
          "description": "Country of birth.",
          "$ref": "#/definitions/countryNameType"
        },
        "legalCompany": {
          "description": "Name Of the company the individual is associated with.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "companyInfo": {
          "description": "Company Information of the Profile.",
          "$ref": "#/definitions/companyInfoType"
        },
        "businessTitle": {
          "description": "Business Title.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "gender": {
          "description": "Identifies the profile gender code selected from Gender types List of values. Gender types LOV provides the values configured at gender configuration.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "birthDate": {
          "description": "Indicates the date of birth as indicated in the document, in ISO 8601 prescribed format.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "birthDateMasked": {
          "description": "Indicates the date of birth as masked.",
          "type": "string"
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nationality": {
          "description": "Nationality code identification",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "nationalityDescription": {
          "description": "Nationality code description",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "customerValue": {
          "description": "The supplier's ranking of the customer (e.g., VIP, numerical ranking).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "creditRating": {
          "description": "Credit Rating of the customer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vipStatus": {
          "description": "VIP status of the customer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vipDescription": {
          "description": "Description of the VIP status.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "birthPlace": {
          "description": "Place of birth.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "privateProfile": {
          "description": "This element tells profile is property exclusive or not.",
          "type": "boolean"
        },
        "blacklist": {
          "description": "This element tells if profile is blacklisted or not.",
          "type": "boolean"
        }
      }
    },
    "identificationInfoType": {
      "type": "object",
      "description": "Information on the identification of the customer.",
      "properties": {
        "identification": {
          "description": "Detailed information on the identification of the customer.",
          "$ref": "#/definitions/identificationType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "identificationType": {
      "type": "object",
      "description": "Identification information of the customer.",
      "properties": {
        "idType": {
          "description": "Identification Type. Eg Passport, Driving License etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "idNumber": {
          "description": "Identification Number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idNumberMasked": {
          "description": "Masked Identification Number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "issuedCountry": {
          "description": "The country where Identification was issued.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "issuedDate": {
          "description": "Issued date of Identification.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "issuedPlace": {
          "description": "The place where Identification was issued.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "expirationDate": {
          "description": "Expiration date of Identification.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "registeredProperty": {
          "description": "Property where the identification belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        }
      }
    },
    "alienInfoType": {
      "type": "object",
      "description": "immigration/visa information of a foreign person.",
      "properties": {
        "alienRegistrationNo": {
          "description": "Alien Registration Number.",
          "type": "string"
        },
        "immigrationStatus": {
          "description": "Immigration Status on an Alien.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "visaValidityType": {
          "description": "Visa Type of an Alien.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "companyInfoType": {
      "type": "object",
      "description": "Company Information of the Profile.",
      "properties": {
        "legalCompany": {
          "description": "Legal Company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "department": {
          "description": "Department of the Profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "position": {
          "description": "Business Title or Position of the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "companyType": {
      "type": "object",
      "properties": {
        "companyName": {
          "description": "Name of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "companyName2": {
          "description": "Second Name of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "companyName3": {
          "description": "Third Name of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "alternateName": {
          "description": "Alternate Name of the Company. Mainly, it's the name of the company written in the Alternate Language.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "alternateLanguage": {
          "description": "Alternate Language of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "businessLocale": {
          "description": "A jurisdiction(Territory) in which a company is authorized to do business.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "iATAInfo": {
          "description": "IATA Information of the profile.",
          "$ref": "#/definitions/iATAInfoType"
        },
        "businessTitle": {
          "description": "Business Title.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nationality": {
          "description": "Nationality code identification",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "nationalityDescription": {
          "description": "Nationality code description",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "commissionCode": {
          "description": "Commission code of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "creditRating": {
          "description": "Credit Rating of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "corporateIdType": {
          "description": "The type of corporate ID",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vipStatus": {
          "description": "VIP status of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vipDescription": {
          "description": "Description of the VIP status.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "blacklist": {
          "description": "This element tells if profile is blacklisted or not.",
          "type": "boolean"
        }
      }
    },
    "iATAInfoType": {
      "type": "object",
      "description": "IATA Information of the profile.",
      "properties": {
        "iATACompany": {
          "description": "IATA Company Detail.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "iATAConsortia": {
          "description": "IATA Consortia.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "iATAValidationResult": {
          "description": "IATA Validation Result.",
          "type": "boolean"
        }
      }
    },
    "imageSetType": {
      "type": "object",
      "description": "Represents on image set record.",
      "properties": {
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "imageSet": {
          "description": "The image set name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 800
        },
        "sequenceId": {
          "description": "The image set sequence ID.",
          "type": "integer"
        },
        "imageStyle": {
          "description": "The image set enumerated style.",
          "$ref": "#/definitions/imageStyleType"
        },
        "imageType": {
          "description": "The image set type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "hotelId": {
          "description": "The image set hotel code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "chainCode": {
          "description": "The image set chain code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "imageURL": {
          "description": "The image set URL.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "description": {
          "description": "The image set description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "imageOrder": {
          "description": "The image set order.",
          "type": "integer"
        },
        "website": {
          "description": "The image set website.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "imageStyleType": {
      "type": "string",
      "description": "An enumeration of image styles.",
      "enum": [
        "Full",
        "Thumbnail",
        "Icon",
        "Square",
        "Banner",
        "Button",
        "Lowres",
        "Highres"
      ]
    },
    "uRLInfoType": {
      "type": "object",
      "description": "Web site address.",
      "properties": {
        "url": {
          "description": "Provides URL information.",
          "$ref": "#/definitions/uRLType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "uRLType": {
      "type": "object",
      "description": "Web site address, in IETF(The Internet Engineering Task Force) specified format.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "type": {
          "description": "Defines the purpose of the URL address, such as personal, business, public, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Describes the Type code",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        }
      }
    },
    "commentInfoType": {
      "type": "object",
      "description": "Comment related to the profile/reservation.",
      "properties": {
        "comment": {
          "description": "Comment details for the comment. It will be empty in case of delete comment.",
          "$ref": "#/definitions/commentType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "commentType": {
      "type": "object",
      "description": "An indication of a new paragraph for a sub-section of a formatted text message.",
      "properties": {
        "text": {
          "description": "Formatted text content.",
          "$ref": "#/definitions/formattedTextTextType"
        },
        "image": {
          "description": "An image for this paragraph.",
          "type": "string"
        },
        "url": {
          "description": "A URL for this paragraph.",
          "type": "string"
        },
        "commentTitle": {
          "description": "Specifies Comment's Title.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "notificationLocation": {
          "description": "Notification Location associated with the Note.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "type": {
          "description": "Specifies type of the comment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Comment type Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "internal": {
          "description": "When true, the comment may not be shown to the consumer. When false, the comment may be shown to the consumer.",
          "type": "boolean"
        },
        "confidential": {
          "description": "When true, the comment may be confidential.",
          "type": "boolean"
        },
        "overrideInternal": {
          "description": "When true, the note internal could be modified.",
          "type": "boolean"
        },
        "protectDescription": {
          "description": "When true, the note title will be populated from the note type description and couldn't be modified.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "If specified comment belongs to the Hotel, otherwise it is a global comment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "actionType": {
          "description": "Specifies type of action described in the comments.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "actionDate": {
          "description": "Indicates at which date an action described in the comment must be taken.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "formattedTextTextType": {
      "type": "object",
      "description": "Provides text and indicates whether it is formatted or not.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        }
      }
    },
    "profileDeliveryMethod": {
      "type": "object",
      "description": "Delivery Information type to the profile.",
      "properties": {
        "deliveryId": {
          "description": "Delivery ID. It will be empty in case of new delivery method.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "deliveryType": {
          "description": "Delivery type can have a value EMAIL, ELECTRONIC etc and it depends on the parameter set in OPERA Control.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "deliveryValue": {
          "description": "Delivery value holds the corresponding value of the delivery type..",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "hotelId": {
          "description": "Property that has delivery methods configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "deliveryModule": {
          "description": "Module where this delivery type will be used. Example : EFolio Export, EInvoice , Fiscal, etc..",
          "$ref": "#/definitions/profileDeliveryModuleType"
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        }
      }
    },
    "profileDeliveryModuleType": {
      "type": "string",
      "description": "Module where this delivery type will be used. Example : EFolio Export, EInvoice , Fiscal, etc..",
      "enum": [
        "EfolioExport"
      ]
    },
    "profileMembershipType": {
      "type": "object",
      "description": "Detailed information of the memberships.",
      "properties": {
        "comment": {
          "description": "Additional comments regarding to the membership.",
          "$ref": "#/definitions/paragraphType"
        },
        "newMembershipNumber": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "nameOnCard": {
          "description": "Name to be displayed on the membership card.",
          "type": "string"
        },
        "programDescription": {
          "description": "Description of the membership program.",
          "type": "string"
        },
        "membershipLevel": {
          "description": "Indicates the membership level.",
          "type": "string"
        },
        "membershipLevelDescription": {
          "description": "Indicates the membership level description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "membershipClass": {
          "description": "Indicates the membership class.",
          "type": "string"
        },
        "earningPreference": {
          "description": "Earning preference to the membership.",
          "$ref": "#/definitions/membershipEarningPreferenceType"
        },
        "inactive": {
          "description": "Indicates whether membership is active or inactive.",
          "type": "boolean"
        },
        "benefits": {
          "description": "benefits for the membership.",
          "$ref": "#/definitions/benefitsType"
        },
        "tierAdministration": {
          "description": "Defines the degree of participation for this membership in the tier management portion of the program.",
          "$ref": "#/definitions/tierAdministrationType"
        },
        "downgrade": {
          "description": "Defines how downgrading will be handled for this membership.",
          "$ref": "#/definitions/downgradeType"
        },
        "reIssueNewCard": {
          "description": "The status of issuing new membership card to the member.",
          "$ref": "#/definitions/cardReIssueType"
        },
        "excludeFromBatch": {
          "description": "True if you want to exclude the member from the Membership Fulfillment extract,the member's actions will not be included in the fulfillment extract until this value set to false.",
          "type": "boolean"
        },
        "upgradeDescription": {
          "description": "Indicates Upgrade information which includes member's next tier level, requirements for the next upgrade.",
          "type": "string",
          "minLength": 0,
          "maxLength": 32000
        },
        "downgradeDescription": {
          "description": "Indicates information regarding the member's possible downgrades.",
          "type": "string",
          "minLength": 0,
          "maxLength": 32000
        },
        "rating": {
          "description": "Value Rating Type Description for this membership.",
          "type": "string"
        },
        "membershipEnrollmentCode": {
          "description": "Indicates how the guest enrolled in the program.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "memberStatus": {
          "description": "Indicates where the guest is in the membership enrollment process.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currentPoints": {
          "description": "Profile MemberShip Points.",
          "type": "number"
        },
        "pointsLabel": {
          "description": "Label used to refer to points for this membership type",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "enrollmentSource": {
          "description": "Source from where the enrollment is done.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "enrollmentResort": {
          "description": "Resort/CRO where enrollment is done.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "preferredCard": {
          "description": "Preferred Card.",
          "type": "boolean"
        },
        "membershipId": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "membershipType": {
          "description": "Type of membership.",
          "type": "string"
        },
        "primaryMembershipYn": {
          "description": "Indicator if Membership is a Primary Membership.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "primaryMembership": {
          "description": "Boolean indicator set to True implies membership is a Primary Membership.",
          "type": "boolean"
        },
        "membershipIdNo": {
          "description": "Membership ID Number.",
          "type": "integer"
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        },
        "centralSetup": {
          "description": "Indicates how the award points for this membership type will be managed.",
          "type": "boolean"
        },
        "signupDate": {
          "description": "Indicates when the member signed up for the loyalty program.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "effectiveDate": {
          "description": "Indicates the starting date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDate": {
          "description": "Indicates the ending date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDateExclusiveIndicator": {
          "description": "When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15 the last date of the period is Oct 14).",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "paragraphType": {
      "type": "object",
      "description": "An indication of a new paragraph for a sub-section of a formatted text message.",
      "properties": {
        "text": {
          "description": "Formatted text content.",
          "$ref": "#/definitions/formattedTextTextType"
        },
        "image": {
          "description": "An image for this paragraph.",
          "type": "string"
        },
        "url": {
          "description": "A URL for this paragraph.",
          "type": "string"
        }
      }
    },
    "membershipEarningPreferenceType": {
      "type": "string",
      "description": "The earning preference of a membership, it depends on the type of property. eg. when the property is a airline it should be Miles, other than Points.",
      "enum": [
        "Points",
        "Miles"
      ]
    },
    "benefitsType": {
      "type": "array",
      "description": "Basic information about membership benefit.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/benefitType"
      }
    },
    "benefitType": {
      "type": "object",
      "description": "Basic information about membership benefit.",
      "properties": {
        "code": {
          "description": "Benefit code associated with a membership.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "message": {
          "description": "Processing message for membership benefit.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "inactive": {
          "description": "Indicates whether membership benefit is active or inactive.",
          "type": "boolean"
        }
      }
    },
    "tierAdministrationType": {
      "type": "string",
      "description": "Do not upgrade membership. The membership may be downgraded.",
      "enum": [
        "Disabled",
        "NoUpgrade"
      ]
    },
    "downgradeType": {
      "type": "string",
      "description": "Do not downgrade membership when the next downgrade process runs. When the downgrade process runs, the membership will be automatically set to Grace.",
      "enum": [
        "Grace",
        "Never",
        "Period"
      ]
    },
    "cardReIssueType": {
      "type": "string",
      "description": "Request to re issue a new card.",
      "enum": [
        "Pending",
        "NotApplicable",
        "Requested"
      ]
    },
    "preferenceTypeType": {
      "type": "object",
      "description": "Preference details for the profile.",
      "properties": {
        "preference": {
          "description": "Collection of Preferences for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/preferenceType"
          }
        },
        "preferenceType": {
          "description": "Preference group code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "preferenceTypeDescription": {
          "description": "Preference group description.",
          "type": "string"
        },
        "sequence": {
          "description": "Preference Sequence.",
          "type": "string"
        },
        "maxQuantity": {
          "description": "Maximum quantity of preferences allowed per preference group.",
          "type": "integer"
        },
        "availableQuantity": {
          "description": "Available quantity of preferences (maximum quantity - Existing preferences)per preference group.",
          "type": "integer"
        },
        "maxResortUsedQuantity": {
          "description": "Maximum quantity of preferences used by any resort per preference group.",
          "type": "integer"
        },
        "reservationPreference": {
          "description": "Whether this preference is reservation preference or not.",
          "type": "boolean"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "preferenceType": {
      "type": "object",
      "description": "Guest Preference details for the profile.",
      "properties": {
        "preferenceValue": {
          "description": "Preference value for display purposes.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "description": {
          "description": "Preference Description for display purposes.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "global": {
          "description": "Whether this preference is property specific or not.",
          "type": "boolean"
        },
        "source": {
          "description": "Source of the preference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "hotels": {
          "description": "If specified preference belongs to the Hotels listed, otherwise it is a global preference.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "preferenceId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "excludedPreferencesCount": {
          "description": "Specifies the count of preferences excluded for the attached reservation preference.",
          "type": "integer"
        },
        "copyToProfile": {
          "description": "Specifies whether to copy the reservation preference to the profile or not.",
          "type": "boolean"
        }
      }
    },
    "keywordType": {
      "type": "object",
      "properties": {
        "keywordDetail": {
          "description": "The keyword new value, in case keyword value is modified.",
          "$ref": "#/definitions/keywordDetailType"
        },
        "type": {
          "description": "The type of keyword",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "keyword": {
          "description": "The keyword value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "keywordDetailType": {
      "type": "object",
      "properties": {
        "newKeyword": {
          "description": "The new keyword value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "negotiatedType": {
      "type": "object",
      "description": "This holds a list of NegotiatedInfoType.",
      "properties": {
        "negotiatedInfoList": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/negotiatedInfoType"
          }
        },
        "hotelId": {
          "description": "Hotel code for the negotiated rate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateCode": {
          "description": "Rate plan code for the negotiated rate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "negotiatedInfoType": {
      "type": "object",
      "description": "This provides information for a profile negotiated rate.",
      "properties": {
        "corporateAgreementId": {
          "description": "The master identifier for multiple offices/locations under the same company profile. This is optional",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "comissionCode": {
          "description": "Informational purposes only in numeric format.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "order": {
          "description": "The sell order.",
          "type": "integer"
        },
        "inactive": {
          "description": "Negotiated Rate is inactive or not",
          "type": "boolean"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "gdsNegotiatedType": {
      "type": "object",
      "description": "This holds a list of GdsNegotiatedInfoType.",
      "properties": {
        "gdsNegotiatedInfoList": {
          "description": "List of channel negotiated rates for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/gdsNegotiatedInfoType"
          }
        },
        "bookingChannelCode": {
          "description": "Booking Channel Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "channelRatePlanCode": {
          "description": "Channel Room Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "gdsNegotiatedInfoType": {
      "type": "object",
      "description": "This provides information for a channel negotiated rate.",
      "properties": {
        "accessCode": {
          "description": "The GDS negotiated rate code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "order": {
          "description": "The sell order.",
          "type": "integer"
        },
        "inactive": {
          "description": "The GDS Negotiated Rate is inactive or not",
          "type": "boolean"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "relationshipInfoType": {
      "type": "object",
      "description": "Relationship Type contains information about the associations between and among individuals, companies, travel agents, groups, sources, and contact profiles.",
      "properties": {
        "changeRelationship": {
          "description": "Information about the changes in relationship for the profile",
          "$ref": "#/definitions/changeRelationsType"
        },
        "relationshipProfile": {
          "description": "Refer to Relationship Profile type document.",
          "$ref": "#/definitions/relationshipProfileType"
        },
        "masterAccountInfo": {
          "description": "Refer to Master Profile type document.",
          "$ref": "#/definitions/masterAccountInfoType"
        },
        "id": {
          "description": "Relationship identifier.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "relation": {
          "description": "Indicates the type of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "relationDescription": {
          "description": "Displays the description of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "targetRelation": {
          "description": "Displays the type of relationship the Related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "targetRelationDescription": {
          "description": "Displays the description of the target relation(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "changeRelationsType": {
      "type": "object",
      "description": "Detailed information regarding the changes made to relationships for the profile.",
      "properties": {
        "id": {
          "description": "Relationship identifier.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "relation": {
          "description": "Indicates the type of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "relationDescription": {
          "description": "Displays the description of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "targetRelation": {
          "description": "Displays the type of relationship the Related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "targetRelationDescription": {
          "description": "Displays the description of the target relation(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "relationshipProfileType": {
      "type": "object",
      "properties": {
        "customer": {
          "description": "Detailed information of the customer",
          "$ref": "#/definitions/customerType"
        },
        "company": {
          "description": "Detailed information of the Company.",
          "$ref": "#/definitions/companyType"
        },
        "telephone": {
          "description": "Information on telephone details for the customer/company",
          "$ref": "#/definitions/telephoneInfoType"
        },
        "address": {
          "description": "Information on address details for the customer/company",
          "$ref": "#/definitions/addressInfoType"
        },
        "email": {
          "description": "Information on email address for the customer/company",
          "$ref": "#/definitions/emailInfoType"
        },
        "uRLs": {
          "description": "Information on web url/address for the customer/company",
          "$ref": "#/definitions/uRLInfoType"
        },
        "primaryOwner": {
          "description": "Primary Owner of the profile",
          "$ref": "#/definitions/ownerType"
        },
        "profileIdList": {
          "description": "Original profile details for which the relationships was created",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "changeProfileIdList": {
          "description": "Updated/changed profile details for the relationships created",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "primary": {
          "description": "Indicates if this relationship is the primary relationship.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "id": {
          "description": "Relationship identifier.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "statusCode": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        }
      }
    },
    "ownerType": {
      "type": "object",
      "description": "Generic type for information about an owner.",
      "properties": {
        "hotel": {
          "description": "Hotel to which the owner belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "userId": {
          "description": "Unique application user ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "userName": {
          "description": "Unique application user name of the owner.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "ownerCode": {
          "description": "Unique Code to identify the owner.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "profileId": {
          "description": "Unique owner profile information.",
          "$ref": "#/definitions/profileId"
        },
        "name": {
          "description": "Provides name information of the owner.",
          "$ref": "#/definitions/personNameType"
        },
        "department": {
          "description": "Department to which the owner belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "email": {
          "description": "Email information of the owner.",
          "$ref": "#/definitions/emailInfoType"
        },
        "phone": {
          "description": "Information on the telephone number of the owner.",
          "$ref": "#/definitions/telephoneInfoType"
        },
        "relationship": {
          "description": "Relationship of the owner within the profile or block.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "primary": {
          "description": "When true, this is a primary owner.",
          "type": "boolean"
        }
      }
    },
    "uniqueIDListType": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "profileStatusType": {
      "type": "string",
      "enum": [
        "Active",
        "Inactive"
      ]
    },
    "masterAccountInfoType": {
      "type": "object",
      "properties": {
        "masterAccountId": {
          "description": "Unique ID of the Master account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "masterAccountName": {
          "description": "Name of the Master account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "relationshipInfoSummaryType": {
      "type": "object",
      "description": "RelationshipInfoSummaryType contains information about the associations between and among individuals, companies, travel agents, groups, sources, and contact profiles.",
      "properties": {
        "relationshipProfile": {
          "description": "Refer to Relationship Profile Summary type document.",
          "$ref": "#/definitions/relationshipProfileSummaryType"
        },
        "masterAccountDetails": {
          "description": "Refer to Master Profile type document.",
          "$ref": "#/definitions/masterAccountInfoType"
        },
        "relationshipID": {
          "description": "Relationship identifier.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "sourceRelation": {
          "description": "Indicates the type of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceRelationDescription": {
          "description": "Displays the description of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "targetRelation": {
          "description": "Displays the type of relationship the Related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "targetRelationDescription": {
          "description": "Displays the description of the target relation(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "relationshipProfileSummaryType": {
      "type": "object",
      "properties": {
        "customerName": {
          "description": "Name of the customer",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "companyName": {
          "description": "Name of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "telephoneNumber": {
          "description": "Telephone number assigned to a single location",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "address": {
          "description": "Information on address details for the customer/company",
          "$ref": "#/definitions/relationshipAddressType"
        },
        "emailAddress": {
          "description": "Defines the e-mail address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "ownerCode": {
          "description": "Unique Code to identify the owner.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "profileIdList": {
          "description": "Original profile details for which the relationships was created",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "primary": {
          "description": "Indicates if this relationship is the primary relationship.",
          "type": "boolean"
        },
        "profileStatus": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "primaryOwnerCode": {
          "description": "When true, this is a primary owner.",
          "type": "boolean"
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        }
      }
    },
    "relationshipAddressType": {
      "type": "object",
      "description": "Provides address information for a Relationship.",
      "properties": {
        "addressLine": {
          "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "type": "array",
          "maxItems": 4,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 80
          }
        },
        "city": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "reservationHistoryFutureInfoType": {
      "type": "object",
      "description": "Information of History and Future Reservation details attached to Profiles.",
      "properties": {
        "historyList": {
          "description": "Refer to History list type document.",
          "$ref": "#/definitions/historyListType"
        },
        "futureList": {
          "description": "Refer to Future list type document.",
          "$ref": "#/definitions/futureListType"
        }
      }
    },
    "historyListType": {
      "type": "object",
      "description": "A collection of reservation history details attached to Profiles.",
      "properties": {
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : History reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationInfoType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "futureListType": {
      "type": "object",
      "description": "A collection of reservation history details attached to Profiles.",
      "properties": {
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : Future reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationInfoType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "reservationStayHistoryFutureInfoType": {
      "type": "object",
      "description": "Information of History and Future Reservation details attached to Profiles.",
      "properties": {
        "historyList": {
          "description": "Refer to History list type document.",
          "$ref": "#/definitions/stayHistoryListType"
        },
        "futureList": {
          "description": "Refer to Future list type document.",
          "$ref": "#/definitions/stayFutureListType"
        }
      }
    },
    "stayHistoryListType": {
      "type": "object",
      "description": "A collection of reservation history details attached to Profiles.",
      "properties": {
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : History reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/stayReservationInfoType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "stayReservationInfoType": {
      "type": "object",
      "description": "The Reservation class contains the current reservation being created or altered.",
      "properties": {
        "reservationIdList": {
          "description": "Unique identifiers for the reservation for both internal and external systems",
          "$ref": "#/definitions/reservationIdList"
        },
        "roomStay": {
          "description": "Collection of room stays.",
          "$ref": "#/definitions/stayInfoType"
        },
        "attachedProfiles": {
          "description": "List of attached profiles",
          "$ref": "#/definitions/resAttachedProfileListType"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "computedReservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        }
      }
    },
    "stayFutureListType": {
      "type": "object",
      "description": "A collection of reservation history details attached to Profiles.",
      "properties": {
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : Future reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/stayReservationInfoType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "lastStayInfoType": {
      "type": "object",
      "description": "Contains last stay related details for the profile",
      "properties": {
        "lastVisit": {
          "description": "Used to hold last stay information for the profile.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastRoom": {
          "description": "Used to hold last room information for the profile.",
          "type": "string"
        },
        "lastRate": {
          "description": "Used to hold last rate information for the profile.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalStay": {
          "description": "The total number of previous stay of the profile.",
          "type": "integer"
        }
      }
    },
    "profileAccessType": {
      "type": "object",
      "properties": {
        "chainCode": {
          "description": "Indicates the Chain code where the profile was created",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "croCode": {
          "description": "Indicates the CRO code where the profile was created",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "hotelId": {
          "description": "Indicates the Hotel code where the profile was created",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "sharedLevel": {
          "description": "Indicates whether the profile is shared at the following levels : global/property/CRO",
          "$ref": "#/definitions/profileSharedLevelType"
        }
      }
    },
    "profileSharedLevelType": {
      "type": "string",
      "description": "Simple types for Shared level.",
      "enum": [
        "Global",
        "Property",
        "Cro"
      ]
    },
    "profileRestrictions": {
      "type": "object",
      "properties": {
        "reason": {
          "description": "Restriction reason associated with the current profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reasonDescription": {
          "description": "Description of restriction reason.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "restricted": {
          "description": "True indicates there are restrictions associated with the current profile.",
          "type": "boolean"
        }
      }
    },
    "mailingActionsType": {
      "type": "object",
      "description": "Defines mailing action list for the profile.",
      "properties": {
        "mailingAction": {
          "description": "Defines mailing action code and description.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeDescriptionType"
          }
        },
        "active": {
          "description": "When true indicates that profile has subscribed to the mailing list.",
          "type": "boolean"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "privacyInfoType": {
      "type": "object",
      "description": "Defines Privacy related information for the profile.",
      "properties": {
        "marketResearchParticipation": {
          "description": "Indicates if the profile participates in market research.",
          "type": "boolean"
        },
        "lastPrivacyPromptDate": {
          "description": "Indicate the last privacy prompt date of the guest.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "infoFromThirdParty": {
          "description": "Indicates if the profile is ok getting info from third parties.",
          "type": "boolean"
        },
        "autoEnrollLoyaltyProgram": {
          "description": "Indicates if the profile wishes to be automatically enrolled in the property's loyalty program.",
          "type": "boolean"
        },
        "allowPhone": {
          "description": "Indicates if the profile wishes to allow phone calls.",
          "type": "boolean"
        },
        "allowSMS": {
          "description": "Indicates if the profile wishes to allow SMS.",
          "type": "boolean"
        },
        "allowEmail": {
          "description": "Indicates if the profile wishes to allow Email.",
          "type": "boolean"
        },
        "optInMailingList": {
          "description": "Indicates if the profile wishes to opt in for Mailing List.",
          "type": "boolean"
        },
        "optInMarketResearch": {
          "description": "Indicates if the profile wishes to opt in for Market Research.",
          "type": "boolean"
        },
        "optInThirdParty": {
          "description": "Indicates if the profile wishes to opt in for Third Party.",
          "type": "boolean"
        },
        "optInAutoEnrollmentMember": {
          "description": "Indicates if the profile wishes to opt in for Auto Enrolment Member.",
          "type": "boolean"
        },
        "optInPhone": {
          "description": "Indicates if the profile wishes to opt in for Phone.",
          "type": "boolean"
        },
        "optInSms": {
          "description": "Indicates if the profile wishes to opt in for SMS.",
          "type": "boolean"
        },
        "optInEmail": {
          "description": "Indicates if the profile wishes to opt in for Email.",
          "type": "boolean"
        }
      }
    },
    "profileCashieringType": {
      "type": "object",
      "description": "Contains cashiering related details for the profile",
      "properties": {
        "directBillingList": {
          "description": "Contains the direct billing related information for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/directBillingType"
          }
        },
        "autoFolioSettlementType": {
          "description": "Contains the auto folio settlement type for the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "paymentDueDays": {
          "description": "Ability to define on the account, the number of days after which the invoice should be paid.",
          "type": "integer"
        },
        "taxPercent1": {
          "description": "Tax1 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "taxPercent2": {
          "description": "Tax2 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "taxPercent3": {
          "description": "Tax3 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "taxPercent4": {
          "description": "Tax4 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "taxPercent5": {
          "description": "Tax5 Percentage for Collecting Agent.",
          "type": "integer"
        },
        "arNoCentral": {
          "description": "Account Receivables Central Number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "referenceCurrency": {
          "description": "Reference Currency.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vATOffsetYN": {
          "description": "VAT Offset Flag.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        }
      }
    },
    "directBillingType": {
      "type": "object",
      "description": "This is the preconfigured routing instruction type.",
      "properties": {
        "hotelId": {
          "description": "Hotel Code for which the details of direct billing is provided for a profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "aRNumber": {
          "description": "Hotel Code for which the details of direct billing is provided for a profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "profileCommissionType": {
      "type": "object",
      "description": "This is the preconfigured routing instruction type.",
      "properties": {
        "hotelId": {
          "description": "Hotel Code for the commission being used for a profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "commissionCode": {
          "description": "commission Code for a profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bankAccount": {
          "description": "Bank account used for the commission for a profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "paymentMethod": {
          "description": "Type of payment associated with the bank account.",
          "$ref": "#/definitions/commissionPaymentMethods"
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        }
      }
    },
    "commissionPaymentMethods": {
      "type": "string",
      "description": "Check",
      "enum": [
        "Cent",
        "Eft",
        "Chk"
      ]
    },
    "userDefinedFieldsType": {
      "type": "object",
      "description": "A common type used to hold user defined fields(UDFs). This type should be used to handle UDFs on RReservation, Profiles, etc.",
      "properties": {
        "characterUDFs": {
          "description": "Collection of user defined fields of Character/String Type.",
          "$ref": "#/definitions/characterUDFsType"
        },
        "numericUDFs": {
          "description": "Collection of user defined fields of Numeric Type.",
          "$ref": "#/definitions/numericUDFsType"
        },
        "dateUDFs": {
          "description": "Collection of user defined fields of Date Type.",
          "$ref": "#/definitions/dateUDFsType"
        }
      }
    },
    "characterUDFsType": {
      "type": "array",
      "description": "Used to hold collection of user defined fields of Character/String Type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/characterUDFType"
      }
    },
    "characterUDFType": {
      "type": "object",
      "description": "Used to hold user defined field of Character/String Type.",
      "properties": {
        "name": {
          "description": "Used to hold user defined field of Character Type. It is highly recommended to use UDFC01, UDFC02,...UDFC40 (Total 40) as Character/String UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "numericUDFsType": {
      "type": "array",
      "description": "Used to hold collection of user defined fields of Numeric Type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/numericUDFType"
      }
    },
    "numericUDFType": {
      "type": "object",
      "description": "Used to hold user defined field of Numeric Type. It is highly recommended to use UDFN01, UDFN02,...UDFN40 (Total 40) as Numeric UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
      "properties": {
        "name": {
          "description": "Name of user defined field.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "number"
        },
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "dateUDFsType": {
      "type": "array",
      "description": "Used to hold collection of user defined fields of Date Type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/dateUDFType"
      }
    },
    "dateUDFType": {
      "type": "object",
      "description": "Used to hold user defined field of Date Type.",
      "properties": {
        "name": {
          "description": "Used to hold user defined field of Date Type. It is highly recommended to use UDFD01, UDFD02,...UDFN20 (Total 20) as Date UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "webUserAccountsType": {
      "type": "array",
      "description": "Web User Accounts List.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/webUserAccountType"
      }
    },
    "webUserAccountType": {
      "type": "object",
      "description": "Web User Account of the guest.",
      "properties": {
        "securityQuestion": {
          "description": "Security Question and its Code associated with the account to verify the user.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "securityAnswer": {
          "description": "Answer to the Security Question.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "comments": {
          "description": "Comments.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "history": {
          "description": "Web User Account History.",
          "$ref": "#/definitions/webUserHistoryType"
        },
        "newLoginName": {
          "description": "New Login Name of the guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "newPassword": {
          "description": "Login Password.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "autoGeneratePassword": {
          "description": "A flag which determines if the password is auto generated.",
          "type": "boolean"
        },
        "loginName": {
          "description": "Login Name of the guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "domainCode": {
          "description": "Domain code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "locked": {
          "description": "Boolean flag that indicates whether the web account is locked or not.",
          "type": "boolean"
        },
        "inactive": {
          "description": "Boolean flag that indicates whether the web account is inactive or not.",
          "type": "boolean"
        }
      }
    },
    "webUserHistoryType": {
      "type": "object",
      "description": "Creation date time, Creator Id, last modification date time and last Modifier Id.",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastLogin": {
          "description": "Last login date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastPasswordChange": {
          "description": "Last Password change date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "inactiveDate": {
          "description": "Inactive date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "profileTaxInfoType": {
      "type": "object",
      "description": "Profile information related to tax.",
      "properties": {
        "tax1No": {
          "description": "The tax id of this profile. Usually issued by a government agency. Used by 1099 printing.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "tax2No": {
          "description": "Tax 2 id of this profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "taxCategory": {
          "description": "Tax Category to be changed.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "taxOffice": {
          "description": "Tax Office to be changed.",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        },
        "taxType": {
          "description": "Tax type to be changed.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "businessId": {
          "description": "Business ID. The maximum length of this element should not exceed 120 characters.",
          "type": "string",
          "minLength": 0,
          "maxLength": 128
        },
        "businessRegistration": {
          "description": "Business Registration Code. The maximum length of this element should not exceed 120 characters.",
          "type": "string",
          "minLength": 0,
          "maxLength": 128
        }
      }
    },
    "salesInfoType": {
      "type": "object",
      "description": "Provides sales information about the profiles of type company, travel agent, source and contact.",
      "properties": {
        "scope": {
          "description": "Defines the scope.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "scopeCity": {
          "description": "Defines the scope city.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "accountType": {
          "description": "Defines the account type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "accountSource": {
          "description": "Defines the account source.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "industryCode": {
          "description": "Defines the industry code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "businessSegments": {
          "description": "Defines the Business segments.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "priority": {
          "description": "Defines the priority.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "roomsPotential": {
          "description": "Defines the rooms potential.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "actionCode": {
          "description": "Defines the action code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "competitionCode": {
          "description": "Defines the competition code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "influence": {
          "description": "Defines the influence for the contact profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "preferredRoom": {
          "description": "Defines the Preferred Room for profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel Code used to filter the sales information.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "eCertificatesType": {
      "type": "array",
      "description": "List of e-certificates for the profile.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/eCertificateType"
      }
    },
    "eCertificateType": {
      "type": "object",
      "description": "E-Certificates details.",
      "properties": {
        "certificateId": {
          "description": "System generated unique certificate id.",
          "type": "integer"
        },
        "voucherNo": {
          "description": "System generated unique voucher number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "certificateNo": {
          "description": "Printed certificate no. This has to be unique.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "eCertificateInfo": {
          "$ref": "#/definitions/eCertificateInfoType"
        },
        "expiryDate": {
          "description": "Date of expiry.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "newExpiryDate": {
          "description": "New Date of expiry to extend e-certificate.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "profileId": {
          "description": "NameId.",
          "$ref": "#/definitions/profileId"
        },
        "consumptionDetail": {
          "$ref": "#/definitions/eCertificateConsumptionType"
        },
        "status": {
          "description": "Status of the certificate.",
          "$ref": "#/definitions/eCertificateStatusType"
        },
        "printed": {
          "description": "Print status of the certificate.",
          "type": "boolean"
        },
        "inactiveDate": {
          "description": "Date the record was marked as inactive.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "awardId": {
          "description": "AwardID.",
          "$ref": "#/definitions/awardId"
        },
        "databaseId": {
          "description": "External reference from which the record is created.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "source": {
          "description": "Source of e-certificate.",
          "$ref": "#/definitions/eCertificateIssueSourceType"
        },
        "issueType": {
          "description": "Process action issued the certificate. valid values are assigned (a),opt in (o) and purchased (p).",
          "$ref": "#/definitions/eCertificateIssueType"
        },
        "issueDate": {
          "description": "Date when certificate was issued.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "awardPoints": {
          "description": "Award points if any in case of certificate use membership award.",
          "type": "integer"
        },
        "generationDetail": {
          "$ref": "#/definitions/eCertificateGenerationType"
        },
        "originalVoucherNo": {
          "description": "In case of in lieu of certificate this will contain the original voucher no.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "originalCertificateNo": {
          "description": "In case of in lieu of certificate this will contain the original certificate no.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "inLieuSequence": {
          "description": "Seq of the in lieu of certificate. 1..n. original certificate will be treated as null = 0.",
          "type": "integer"
        },
        "cancelRequestDate": {
          "description": "Date on which the cancellation was requested.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "extensionCount": {
          "description": "Number of times e-certificate is already extended.",
          "type": "integer"
        }
      }
    },
    "eCertificateInfoType": {
      "type": "object",
      "description": "E-Certificates details.",
      "properties": {
        "certificateType": {
          "description": "User defined certificate code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "membershipType": {
          "description": "Membership type to which the certificate is linked to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "awardCode": {
          "description": "Award type to which the certificate is linked to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "promotionCode": {
          "description": "Promotion code to which certificate is attached to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "voucherBenefitCode": {
          "description": "Voucher benefit code attached to the certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "hotels": {
          "description": "Hotel to which certificate is attached to.",
          "type": "object",
          "properties": {
            "code": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "type": "string",
                "minLength": 0,
                "maxLength": 20
              }
            },
            "scope": {
              "description": "Scope of e-cert: global,single property or multi property.",
              "$ref": "#/definitions/eCertificateScopeType"
            }
          }
        },
        "description": {
          "description": "Description about the certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "longDescription": {
          "description": "Detail description about the certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "label": {
          "description": "Label for the certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "maxExtensionAllowed": {
          "description": "Number of times e-certificate can be extended.",
          "type": "integer"
        },
        "usageCriteria": {
          "$ref": "#/definitions/eCertificateUsageCriteriaType"
        },
        "value": {
          "description": "Value of the certificate for the guest.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "cost": {
          "description": "Cost of certificate.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "benefitSummary": {
          "description": "Summary of Benefits attached to this ECertificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        }
      }
    },
    "eCertificateScopeType": {
      "type": "string",
      "description": "Indicates that OPERA E-Certificate is available for a specific list of hotels.",
      "enum": [
        "Global",
        "Hotel",
        "MultiHotel"
      ]
    },
    "eCertificateUsageCriteriaType": {
      "type": "object",
      "description": "E-Certificates details.",
      "properties": {
        "reservation": {
          "description": "Indicates if certificate is to be used against reservation or not.",
          "type": "boolean"
        },
        "web": {
          "description": "Indicates if web certificate can be consumed in OWS.",
          "type": "boolean"
        },
        "webAllowed": {
          "description": "Indicates if certificate consumption allowable on the web.",
          "type": "boolean"
        },
        "benefit": {
          "description": "Indicates to attach a rate code to the e-certificate as a benefit.",
          "type": "boolean"
        },
        "hotel": {
          "description": "Indicates if web certificate can be consumed in hotel.",
          "type": "boolean"
        },
        "verifyCertificateNo": {
          "description": "Specify if the certificate number verification is required at time of consumption or not.",
          "type": "boolean"
        },
        "cancelAllowed": {
          "description": "Identify if cancel is allowed or not.",
          "type": "boolean"
        },
        "generateInLieuCertificate": {
          "description": "Identify if in lieu of certificate can be generated or not.",
          "type": "boolean"
        }
      }
    },
    "eCertificateConsumptionType": {
      "type": "object",
      "description": "E-Certificates details.",
      "properties": {
        "hotelId": {
          "description": "Property where certificate was consumed for.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "source": {
          "description": "Source of consumption.",
          "$ref": "#/definitions/eCertificateConsumeSourceType"
        },
        "surname": {
          "description": "Last name of the person who consumed the certificate..",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "firstName": {
          "description": "First name of the person who consumed the certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "middleName": {
          "description": "Middle name of the person who consumed the certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "email": {
          "description": "Email of the person who consumed the certificate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "date": {
          "description": "Date the certificate was consumed.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "userName": {
          "description": "Application user who created the consumption.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "userNotes": {
          "description": "Any notes on the certificate entered at time of consumption.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "referenceId": {
          "description": "Any reference like reservation no etc against which the certificate was consumed.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "locationType": {
          "description": "Consumption location type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "authorizationCode": {
          "description": "Authorization code for consumption.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "serviceDate": {
          "description": "Date on which the service is due (arrival date in case of reservation).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "eCertificateConsumeSourceType": {
      "type": "string",
      "description": "Indicates that OPERA E-Certificate is consumed by hotelPMS.",
      "enum": [
        "Central",
        "Web",
        "Hotel"
      ]
    },
    "eCertificateStatusType": {
      "type": "string",
      "description": "Indicates that OPERA E-Certificate is reserved.",
      "enum": [
        "Cancelled",
        "Consumed",
        "Deleted",
        "Expired",
        "Issued",
        "Reserved"
      ]
    },
    "awardId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "eCertificateIssueSourceType": {
      "type": "string",
      "description": "Indicates that OPERA E-Certificate is issued by external system.",
      "enum": [
        "Opera",
        "Web",
        "Interface"
      ]
    },
    "eCertificateIssueType": {
      "type": "string",
      "description": "Indicates that guest purchased OPERA E-Certificate.",
      "enum": [
        "Assigned",
        "OptedIn",
        "Purchased"
      ]
    },
    "eCertificateGenerationType": {
      "type": "object",
      "description": "E-Certificates details.",
      "properties": {
        "ruleId": {
          "description": "Key to identify the generation rule id.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "generationDetail": {
          "description": "Reason for which e-certificate was generated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "referenceValue": {
          "description": "Type of value that is in the certificate.valid values are membership_level.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "profileSubscriptionListType": {
      "type": "array",
      "description": "Details of the OPERA Profile subscription to external system",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/profileSubscriptionType"
      }
    },
    "profileSubscriptionType": {
      "type": "object",
      "description": "Contains details of the profile subscription. The subscription represents the link between the OPERA profile and the external profile within a particular external system",
      "properties": {
        "profileId": {
          "description": "OPERA Profile ID that this subscription record corresponds to.",
          "$ref": "#/definitions/profileId"
        },
        "externalProfileId": {
          "description": "Profile ID within the external system.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "profileInfo": {
          "description": "This provides name information for a person.",
          "type": "object",
          "properties": {
            "name": {
              "description": "Family name, last name or Company Name.",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            },
            "fullName": {
              "description": "Full display Name.",
              "type": "string",
              "minLength": 0,
              "maxLength": 200
            },
            "namePrefix": {
              "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            },
            "givenName": {
              "description": "Given name, first name or names.",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            },
            "middleName": {
              "description": "The middle name of the person name.",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            },
            "nameSuffix": {
              "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            },
            "nameTitle": {
              "description": "Degree or honors (e.g., Ph.D., M.D.)",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "nameType": {
              "description": "Type of name of the individual, such as former, nickname, alternate or alias name.",
              "$ref": "#/definitions/personNameTypeType"
            },
            "profileType": {
              "description": "OPERA profile type such as Individual or Company",
              "$ref": "#/definitions/profileTypeType"
            }
          }
        },
        "distributed": {
          "description": "Indicates if the profile was distributed to the external system.",
          "type": "boolean"
        },
        "force": {
          "description": "Indicates if the profile information should be overwritten by the external system.",
          "type": "boolean"
        },
        "subscriptionDate": {
          "description": "Timestamp when the profile was subscribed to.",
          "type": "string",
          "format": "date-time"
        },
        "lastDistributionDate": {
          "description": "Timestamp of the most recent distribution of this profile to the external system.",
          "type": "string",
          "format": "date-time"
        },
        "lastExternalUpdateDate": {
          "description": "Timestamp of the most recent update of the subscription information by the external system.",
          "type": "string",
          "format": "date-time"
        },
        "inactive": {
          "description": "Indicates whether this subscription is active or inactive.",
          "type": "boolean"
        },
        "systemCode": {
          "description": "Code of system where profile is subscribed to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "systemType": {
          "description": "Type of system where profile is subscribed to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "roomOwnershipType": {
      "type": "object",
      "description": "Define the search criteria for retrieving room ownership records",
      "properties": {
        "roomOwnershipId": {
          "description": "Unique Id for Room Owner record.",
          "type": "integer"
        },
        "contractNumber": {
          "description": "Contract number for room owner.",
          "type": "string"
        },
        "roomId": {
          "description": "Room Id of room owner.",
          "type": "string"
        },
        "roomCategory": {
          "description": "Room Category of the room ownership record.",
          "type": "string"
        },
        "roomType": {
          "description": "Room Type of the room ownership record.",
          "type": "string"
        },
        "startDate": {
          "description": "Start Date of the room ownership record.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "description": "End Date of the room ownership record.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "profileId": {
          "description": "Profile ID of the room ownership record.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "status": {
          "description": "Status of the room ownership record.",
          "type": "string"
        }
      }
    },
    "guestCountsType": {
      "type": "object",
      "description": "A collection of GuestCount by age group.",
      "properties": {
        "childAges": {
          "description": "Defines Children's Ages. Number of children ages mentioned may mot match with children counts.",
          "$ref": "#/definitions/childAgesType"
        },
        "childBuckets": {
          "description": "Defines children counts with Age Qualifying Group(Child Bucket#1) classification.",
          "$ref": "#/definitions/childBucketsType"
        },
        "adults": {
          "description": "Defines the number of Adults.",
          "type": "integer"
        },
        "children": {
          "description": "Defines the number of Children.",
          "type": "integer"
        }
      }
    },
    "childAgesType": {
      "type": "array",
      "description": "Age of a child in years.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/childAgeType"
      }
    },
    "childAgeType": {
      "type": "object",
      "description": "Defines Child's Age.",
      "properties": {
        "age": {
          "description": "Age of a child in years.",
          "type": "integer"
        }
      }
    },
    "childBucketsType": {
      "type": "object",
      "description": "Defines children counts with Age Qualifying Group(Child Bucket) classification.",
      "properties": {
        "bucket1Count": {
          "description": "Number of children classified under the first Age Qualifying Group(Child Bucket#1).",
          "type": "integer"
        },
        "bucket2Count": {
          "description": "Number of children classified under the second Age Qualifying Group(Child Bucket#2).",
          "type": "integer"
        },
        "bucket3Count": {
          "description": "Number of children classified under the third Age Qualifying Group(Child Bucket#3).",
          "type": "integer"
        },
        "bucket4Count": {
          "description": "Number of children classified under the fourth Age Qualifying Group(Child Bucket#4).",
          "type": "integer"
        },
        "bucket5Count": {
          "description": "Number of children classified under the fifth Age Qualifying Group(Child Bucket#5).",
          "type": "integer"
        }
      }
    },
    "resAwardsType": {
      "type": "object",
      "description": "Membership Awards code applied on the reservation.",
      "properties": {
        "membershipNo": {
          "description": "Membership program under which the award is applied.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "awardVouchers": {
          "$ref": "#/definitions/awardVouchersType"
        },
        "originalRoomType": {
          "description": "Room Type before the Upgrade Award.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "upgradeRoomType": {
          "description": "Room Type after the Upgrade Award.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "awardVouchersType": {
      "type": "array",
      "description": "This stores the Membership Awards code applied on the reservation.",
      "maxItems": 5,
      "items": {
        "type": "object",
        "properties": {
          "awardCode": {
            "description": "Membership Award code applied on the reservation.",
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          },
          "voucherNo": {
            "description": "Membership Award number.",
            "type": "string",
            "minLength": 0,
            "maxLength": 80
          }
        }
      }
    },
    "foreignExchangeType": {
      "type": "object",
      "description": "Foreign Exchange info.",
      "properties": {
        "type": {
          "description": "Exchange Type for the postings.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "effectiveDate": {
          "description": "Effective Exchange date for the foreign currency posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "mealPlansType": {
      "type": "array",
      "description": "Meal plan codes associated with the rate codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/mealPlanCodeType"
      }
    },
    "mealPlanCodeType": {
      "type": "object",
      "description": "Meal plan codes associated with the rate codes.",
      "properties": {
        "code": {
          "description": "Meal plan code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "included": {
          "description": "Represents if the meal plan code is included in rate code or not.",
          "type": "boolean"
        },
        "breakfastIncluded": {
          "description": "Represents if the meal plan code is available for breakfast or not.",
          "type": "boolean"
        },
        "lunchIncluded": {
          "description": "Represents if the meal plan code is available for lunch or not.",
          "type": "boolean"
        },
        "dinnerIncluded": {
          "description": "Represents if the meal plan code is available for dinner or not.",
          "type": "boolean"
        }
      }
    },
    "roomRateAvailReasonType": {
      "type": "string",
      "description": "Indicates the Room Rate is not available due to unavailability of enough items for the rate code.",
      "enum": [
        "Available",
        "Restricted",
        "RestrictedDueToInventory",
        "RestrictedDueToOccupancy",
        "RestrictedDueToItemInventory"
      ]
    },
    "upsellInfoType": {
      "type": "object",
      "description": "Information regarding upsell for a reservation.",
      "properties": {
        "originalInfo": {
          "description": "Original Values of the reservation prior to upgrade.",
          "type": "object",
          "properties": {
            "rateCode": {
              "description": "The Rate Code of the Reservation before it was upgraded",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "totalAmount": {
              "description": "Total Amount of the reservation before it was upgraded.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "roomType": {
              "description": "Original Reservation Room Type before being upgraded.",
              "$ref": "#/definitions/codeDescriptionType"
            },
            "nights": {
              "description": "The number of nights of the reservation before being upgraded.",
              "type": "integer"
            }
          }
        },
        "upsellInfo": {
          "description": "Information of a reservation during the process of upgrade.",
          "type": "object",
          "properties": {
            "totalUpsellCharge": {
              "description": "Amount that was charged for the upsell.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "totalUpsellMoneyAmount": {
              "description": "Total Amount that was charged including upsell.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "firstNightUpsellAmount": {
              "description": "First Night Total Amount including Upsell.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "firstNightUpsellCharge": {
              "description": "First Night Upsell Charges.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "totalUpsellPoints": {
              "description": "Total Upsell Points.",
              "type": "integer"
            },
            "totalActualRateAmount": {
              "description": "Actual Total Room Rate for the Target Upsell Room Type.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "roomType": {
              "description": "Reservation Room Type for Upsell.",
              "$ref": "#/definitions/codeDescriptionType"
            },
            "roomLongDescription": {
              "description": "Detail description of the Room Type.",
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "ruleId": {
              "description": "Upsell Rule Id.",
              "type": "integer"
            },
            "ruleCode": {
              "description": "Upsell rule code",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "ruleDescription": {
              "description": "Upsell rule description",
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "percentageSavings": {
              "description": "Percentage savings resulting from accepting upsell offer. This will be calculated as the ratio of the amount saved by accepting the upsell offer to the actual room rate (i.e. room rate when upsell is not offered)",
              "type": "number",
              "minimum": 0,
              "maximum": 100
            },
            "upsellDate": {
              "description": "The date on which reservation is upgraded.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "upsellUser": {
              "description": "User who upgraded the reservation.",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            }
          }
        }
      }
    },
    "ownerResTypeType": {
      "type": "string",
      "enum": [
        "Owner",
        "AuthorizedUser"
      ]
    },
    "primaryShareTypeType": {
      "type": "string",
      "enum": [
        "Primary",
        "NonPrimary"
      ]
    },
    "compAuthorizerInfoType": {
      "type": "object",
      "description": "Authorizer Information",
      "properties": {
        "authorizerId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "authorizerUserName": {
          "description": "Application user name of the authorizer",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "authorizerName": {
          "description": "Full name of the authorizer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        }
      }
    },
    "resGuestType": {
      "type": "object",
      "description": "A collection of ResGuest objects, identifying the guests associated with this reservation. Which guests are in which room is determined by each RoomStays ResGuestRPHs collection.",
      "properties": {
        "profileInfo": {
          "description": "A collection of Profiles or Unique IDs of Profiles.",
          "type": "object",
          "properties": {
            "profileIdList": {
              "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
              "$ref": "#/definitions/profileIdList"
            },
            "profile": {
              "description": "Provides detailed information regarding either a company or a customer profile.",
              "$ref": "#/definitions/profileType"
            },
            "profileCashieringDetail": {
              "description": "Cashiering details for the profile.",
              "$ref": "#/definitions/profileCashieringDetailType"
            },
            "registrationCardNo": {
              "description": "Unique identifier of the police registration card number.",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            }
          }
        },
        "arrivalTransport": {
          "$ref": "#/definitions/transportInfoType"
        },
        "departureTransport": {
          "$ref": "#/definitions/transportInfoType"
        },
        "visaInfo": {
          "$ref": "#/definitions/visaInfoType"
        },
        "reservationGuestRPH": {
          "description": "This is a reference placeholder, used as an index for this guest in this reservation. In the ResGuest object it is used like all other RPH attributes to send the delta of a reservation. It is used by the RoomStay and Service objects to indicate which guests are associated with that room stay or service.",
          "type": "string",
          "minLength": 1,
          "maxLength": 8
        },
        "primary": {
          "description": "When true indicates this is the primary guest.",
          "type": "boolean"
        }
      }
    },
    "profileCashieringDetailType": {
      "type": "object",
      "description": "The type contains routing instructions for the profile.",
      "properties": {
        "paymentMethod": {
          "description": "Payment Method Details.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "eCommerceId": {
          "description": "E-Commerce ID of the Profile",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "routingInstructions": {
          "description": "Set of preconfigured transaction codes.",
          "$ref": "#/definitions/profileRoutingInstructionsType"
        },
        "taxType": {
          "description": "Tax type code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "fiscalGuestType": {
          "description": "Guest type code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel Code for which the routing instructions are provided for a profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "profileRoutingInstructionsType": {
      "type": "object",
      "description": "The type contains routing instructions for the profile.",
      "properties": {
        "transactionCodes": {
          "description": "Set of preconfigured transaction codes.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "billingInstructions": {
          "description": "Set of preconfigured Billing Instruction results.",
          "$ref": "#/definitions/billingInstructionsType"
        },
        "autoPopulateRouting": {
          "description": "A flag which determines whether the instructions has to be automatically populated for this profile or not.",
          "type": "boolean"
        }
      }
    },
    "trxCodesInfoType": {
      "type": "array",
      "description": "List of Transaction codes info.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trxInfoType"
      }
    },
    "trxInfoType": {
      "type": "object",
      "description": "Transaction codes info.",
      "properties": {
        "description": {
          "description": "Transaction codes info.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionGroup": {
          "description": "Category of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionSubGroup": {
          "description": "Sub category of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "routingInstructionsId": {
          "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
          "type": "number"
        },
        "articles": {
          "description": "The List of Articles defined for this transaction code, when using the Articles functionality.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/articleInfoType"
          }
        },
        "trxServiceType": {
          "description": "Contains service type for transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionCode": {
          "description": "Unique identifier for the Transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel context of the Transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "printTrxReceipt": {
          "description": "Print receipt flag that tells whether the transaction receipt is to be printed or not. This is based on the transaction code.",
          "type": "boolean"
        }
      }
    },
    "articleInfoType": {
      "type": "object",
      "description": "Information regarding an article.",
      "properties": {
        "description": {
          "description": "Description of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionCode": {
          "description": "Transaction code to which the article belongs.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "price": {
          "description": "Default price of the article.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postIt": {
          "description": "Post it information of the article.",
          "$ref": "#/definitions/articlePostItType"
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel code to which the article belongs.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "articleCode": {
          "description": "Unique code of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "inactive": {
          "description": "Indicates whether the article is inactive or not.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        }
      }
    },
    "articlePostItType": {
      "type": "object",
      "description": "Post it information of an article.",
      "properties": {
        "availableForPostIt": {
          "description": "Indicates whether the article is available for post it.",
          "type": "boolean"
        },
        "color": {
          "description": "Color indicator which is only configurable if article is available for post it.",
          "$ref": "#/definitions/colorType"
        }
      }
    },
    "colorType": {
      "type": "string",
      "description": "Color configuration type. This color configuration provides a visual category of entities.",
      "enum": [
        "Red",
        "DarkRed",
        "Green",
        "DarkGreen",
        "LightGreen",
        "Orange",
        "White",
        "Yellow",
        "DarkYellow",
        "Purple",
        "Brown",
        "Gray",
        "Aqua",
        "Chocolate",
        "Blue",
        "LightBlue",
        "DarkBlue",
        "Cyan",
        "DarkCyan",
        "Magenta",
        "DarkMagenta",
        "Black"
      ]
    },
    "billingInstructionsType": {
      "type": "array",
      "description": "Set of Billing Instruction codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/billingInstructionType"
      }
    },
    "billingInstructionType": {
      "type": "object",
      "description": "Configured Billing Instruction which represents a set of Transaction Codes.",
      "properties": {
        "desc": {
          "description": "Billing Instruction code description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "routingInstructionsId": {
          "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
          "type": "number"
        },
        "billingCode": {
          "description": "Unique identifier for the Billing Instruction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel context of the Billing Instruction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "transportInfoType": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "type": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transportCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "carrierCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "stationCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "dateTime": {
          "type": "string",
          "format": "date-time"
        },
        "transportationReqd": {
          "type": "boolean"
        }
      }
    },
    "visaInfoType": {
      "type": "object",
      "properties": {
        "visaIssueDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaExpiryDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaNumber": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "resGuestAdditionalInfoType": {
      "type": "object",
      "properties": {
        "portOfEntry": {
          "description": "Entry point into the country. (Croatian Requirements).",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "dateOfEntry": {
          "description": "Entry Date into the country. (Croatian Requirements).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "nextDestination": {
          "description": "Entry Date into the country. (Croatian Requirements).",
          "type": "string"
        },
        "preferredRoomType": {
          "description": "Preferred Room Type of the guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "lastStay": {
          "description": "Last Stay information of the guest.",
          "$ref": "#/definitions/guestLastStayInfoType"
        },
        "purposeOfStay": {
          "description": "Purpose of stay.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "guestClassification": {
          "description": "Guest Classification for the data export.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "guestStatus": {
          "description": "Guest Status for the data export.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "awardsType": {
      "type": "array",
      "description": "List of awards.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/awardType"
      }
    },
    "awardType": {
      "type": "object",
      "description": "Detailed information of the awards.",
      "properties": {
        "awardCode": {
          "description": "Award category.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "awardType": {
          "description": "Can be P (Paper) or E (E-Certificate).",
          "$ref": "#/definitions/awardKindType"
        },
        "description": {
          "description": "Description of the award/certificate.",
          "type": "string"
        },
        "certificateNo": {
          "description": "Certificate No.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "masterCertificiateNo": {
          "description": "Master Certificate No.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "membershipNo": {
          "description": "Membership No.",
          "type": "string"
        },
        "hotelId": {
          "description": "Hotel Code for which the routing instructions are provided for a profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelCategory": {
          "description": "Indicates the lowest hotel category for which the certificate is valid.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "externalHotelCode": {
          "description": "Hotel Code of the CRS application that this certificate belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "externalConfirmationNo": {
          "description": "Confirmation Number given by a CRS application for this reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "categoryValid": {
          "description": "Indicates whether the category of certificate is valid or not for this resort.",
          "type": "boolean"
        },
        "reservationCertificateType": {
          "description": "[R]=Reward, [I]=Incentive.",
          "$ref": "#/definitions/reservationCertificateType"
        },
        "rewardCertificateType": {
          "description": "[RE]=Regular Certificate, [SA]=Stay Anytime Certificate, [PS]=Point Saver Certificate.",
          "$ref": "#/definitions/rewardCertificateType"
        },
        "status": {
          "description": "Status of the award aka available.",
          "$ref": "#/definitions/awardStatusType"
        },
        "expirationDate": {
          "description": "Expiration Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "gift": {
          "description": "Signifies whether award is gift or not.",
          "type": "boolean"
        },
        "upgrade": {
          "description": "Signifies whether upgrade award or not.",
          "type": "boolean"
        },
        "package": {
          "description": "Signifies whether upgrade is package or not.",
          "type": "boolean"
        },
        "instantlyRedeemable": {
          "description": "Indicates if the award is an Instant Redemption award.",
          "type": "boolean"
        },
        "paidUpgrade": {
          "description": "Indicates if this certificate was ordered using the \"Paid Upgrade\" option in the E-Certs screen.",
          "type": "boolean"
        },
        "detailedCertificate": {
          "description": "Indicates if this certificate is detailed or not.",
          "type": "boolean"
        },
        "nights": {
          "description": "Award Nights.",
          "type": "integer"
        },
        "sourceType": {
          "description": "MRW : From MRW MAN:Entered manually.",
          "type": "string"
        },
        "points": {
          "description": "No. of points used to order this award.",
          "type": "number"
        },
        "fBAInfo": {
          "description": "FBA related fields.",
          "$ref": "#/definitions/fBAInfoType"
        },
        "reservationId": {
          "description": "Reservation IDs will be empty if award is not attached.",
          "$ref": "#/definitions/reservationId"
        },
        "profileId": {
          "description": "Unique profile identifier requested to be fetched.",
          "$ref": "#/definitions/profileId"
        },
        "quantity": {
          "description": "Quantity of such awards needed to be ordered.",
          "type": "integer"
        },
        "displaySequence": {
          "description": "Indicates the order in which the certificates received from MRW.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "awardKindType": {
      "type": "string",
      "description": "Indicates that this is electronic certificate.",
      "enum": [
        "Paper",
        "ECertificate"
      ]
    },
    "reservationCertificateType": {
      "type": "string",
      "description": "Certificate is incentive.",
      "enum": [
        "Reward",
        "Incentive"
      ]
    },
    "rewardCertificateType": {
      "type": "string",
      "description": "Point Saver reward.",
      "enum": [
        "Regular",
        "StayAnytime",
        "PointSaver"
      ]
    },
    "awardStatusType": {
      "type": "string",
      "description": "Indicates that certificate is in use.",
      "enum": [
        "Available",
        "NotAvailable",
        "InUse"
      ]
    },
    "fBAInfoType": {
      "type": "object",
      "description": "FBA ( Flexible Benefits Awards ) related fields.",
      "properties": {
        "status": {
          "description": "Possible FBA statuses.",
          "$ref": "#/definitions/fBAStatusType"
        },
        "monetaryValue": {
          "description": "Award's FBA monetary values.",
          "type": "number"
        },
        "amount": {
          "description": "Award's FBA amount.",
          "type": "number"
        },
        "postedAmount": {
          "description": "Award's FBA posted amount.",
          "type": "number"
        },
        "reimbursedAmount": {
          "description": "Award's FBA reimbursed amount.",
          "type": "number"
        },
        "postingDateTime": {
          "description": "Date and time of the FBA posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "postingBusinessDate": {
          "description": "Business date of the FBA posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "settlementDateTime": {
          "description": "Date and time of the FBA settlement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "settlementBusinessDate": {
          "description": "Business date of the FBA settlement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reimbursementDateTime": {
          "description": "Date and time of the FBA reimbursement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reimbursementBusinessDate": {
          "description": "Business date of the FBA reimbursement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "fbaBillGenDate": {
          "description": "Business date of the FBA bill generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "flexibleBenefitAward": {
          "description": "Indicates if this certificate is a Flexible Benefit Award certificate.",
          "type": "boolean"
        },
        "posted": {
          "description": "Indicates whether FBA has been posted.",
          "type": "boolean"
        },
        "settled": {
          "description": "Indicates whether FBA has been settled.",
          "type": "boolean"
        },
        "reimbursed": {
          "description": "Indicates whether FBA has been reimbursed.",
          "type": "boolean"
        },
        "resettleAllowed": {
          "description": "Marks if the certificate is eligible for resettlement",
          "type": "boolean"
        },
        "reimburseAllowed": {
          "description": "Marks if the certificate is eligible for reimbursement.",
          "type": "boolean"
        },
        "orphanCertificate": {
          "description": "Indicates whether the certificate is Orphan or not.",
          "type": "boolean"
        }
      }
    },
    "fBAStatusType": {
      "type": "string",
      "description": "Flexible benefit award has been reimbursed.",
      "enum": [
        "Ordered",
        "Attached",
        "Posted",
        "Settled",
        "Reimbursed"
      ]
    },
    "trackItItemsType": {
      "type": "array",
      "description": "",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trackItItemType"
      }
    },
    "trackItItemType": {
      "type": "object",
      "description": "Detailed information of a Track It item.",
      "properties": {
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "trackItId": {
          "$ref": "#/definitions/trackItId"
        },
        "group": {
          "$ref": "#/definitions/trackItGroup"
        },
        "ticketNumber": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "referenceNumber": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "type": {
          "$ref": "#/definitions/trackItType"
        },
        "action": {
          "$ref": "#/definitions/trackItActionType"
        },
        "location": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "quantity": {
          "type": "integer"
        },
        "followUpDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "assignedTo": {
          "$ref": "#/definitions/applicationUserType"
        },
        "reservationInfo": {
          "$ref": "#/definitions/trackItReservationInfoType"
        },
        "trackItLogList": {
          "$ref": "#/definitions/trackItLogListType"
        }
      }
    },
    "trackItId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "trackItGroup": {
      "type": "string",
      "description": "Group to which the Track It items belong.",
      "enum": [
        "Parcel",
        "Valet",
        "Baggage",
        "Lost"
      ]
    },
    "trackItType": {
      "type": "object",
      "description": "Identifies the kind of Parcel, Baggage, or Lost items or Valet-managed vehicles or services.",
      "properties": {
        "type": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "url": {
          "$ref": "#/definitions/uRLType"
        }
      }
    },
    "trackItActionType": {
      "type": "object",
      "description": "Identifies the response expected from staff or other parties relative to a Track It ticket.",
      "properties": {
        "trackItAction": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "status": {
          "$ref": "#/definitions/actionStatusType"
        }
      }
    },
    "actionStatusType": {
      "type": "string",
      "description": "Action status of the Track It item(Open, Closed).",
      "enum": [
        "Open",
        "Closed"
      ]
    },
    "trackItReservationInfoType": {
      "type": "object",
      "description": "Reservation info associated with a Track It item.",
      "properties": {
        "reservationIdList": {
          "$ref": "#/definitions/reservationIdList"
        },
        "timeSpan": {
          "$ref": "#/definitions/timeSpanType"
        },
        "guestInfo": {
          "$ref": "#/definitions/resGuestInfoType"
        },
        "roomType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomStatus": {
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "guarantee": {
          "$ref": "#/definitions/resGuaranteeType"
        },
        "reservationStatus": {
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "computedReservationStatus": {
          "$ref": "#/definitions/pMS_ResStatusType"
        }
      }
    },
    "trackItLogListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trackItLogType"
      }
    },
    "trackItLogType": {
      "type": "object",
      "description": "Individual activity log related to the Track It ticket.",
      "properties": {
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "trackItLogId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "trackItId": {
          "$ref": "#/definitions/trackItId"
        },
        "type": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "businessDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "logUserId": {
          "type": "integer"
        },
        "logUserName": {
          "type": "string"
        },
        "logDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "hotelReservationsType": {
      "type": "object",
      "description": "A collection of Reservation objects and Unique IDs of Reservation.",
      "properties": {
        "reservation": {
          "description": "A collection of Reservations.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/hotelReservationType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "reservationLocatorsType": {
      "type": "array",
      "description": "Holds the Locator Information.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationLocatorType"
      }
    },
    "reservationLocatorType": {
      "type": "object",
      "description": "Holds the information for a Reservation Guest Locator",
      "properties": {
        "dateSpan": {
          "description": "Begin and End date range of the Guest Locator.",
          "$ref": "#/definitions/dateRangeType"
        },
        "timeSpan": {
          "description": "Time span for the Guest Locator.",
          "$ref": "#/definitions/dateTimeSpanType"
        },
        "locatorText": {
          "description": "The Locator Text for the guest.",
          "type": "string"
        },
        "locatorOn": {
          "description": "Date and time of the Guest Locator.",
          "type": "string",
          "format": "date-time"
        },
        "locatorBy": {
          "description": "User that entered this Guest Locator.",
          "type": "string"
        },
        "locatorId": {
          "description": "Unique Id of the Guest Locator ( Locator Id )",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "dateTimeSpanType": {
      "type": "object",
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
      "properties": {
        "startDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "endDateTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "attachmentsType": {
      "type": "array",
      "description": "Attachment List.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/attachmentType"
      }
    },
    "attachmentType": {
      "type": "object",
      "description": "Attached files.",
      "properties": {
        "fileName": {
          "description": "Name of the file.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "fileSize": {
          "description": "Size of the file.",
          "type": "integer"
        },
        "description": {
          "description": "Description for the file.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "global": {
          "description": "Flag to say if attachment is available across properties.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "history": {
          "description": "History data associated with Attachment.",
          "$ref": "#/definitions/dateTimeStampGroupType"
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "dateTimeStampGroupType": {
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "serviceRequests": {
      "type": "array",
      "description": "Service request.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/serviceRequest"
      }
    },
    "serviceRequest": {
      "type": "object",
      "description": "Service request.",
      "properties": {
        "serviceRequestId": {
          "description": "Unique identifier of the service request.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "Hotel Code of the service request.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Service request code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "status": {
          "description": "The status of the service request.",
          "$ref": "#/definitions/serviceRequestStatusType"
        },
        "priority": {
          "description": "The priority level of the service request.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "department": {
          "description": "The department that is associated with the service request code.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "reservationIdList": {
          "description": "Unique identifier of the reservation.",
          "$ref": "#/definitions/reservationIdList"
        },
        "profileId": {
          "description": "Unique identifier of the guest.",
          "$ref": "#/definitions/profileId"
        },
        "guestName": {
          "description": "The guest name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "room": {
          "description": "The room number in which the service request was created.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "openDate": {
          "description": "The date-time in which the service request was opened.",
          "type": "string",
          "format": "date-time"
        },
        "guaranteedBy": {
          "description": "The user who guaranteed the completion of the service request.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "comment": {
          "description": "Description of the service request.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "action": {
          "description": "Description of the action taken to complete the request.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "guestContactMethod": {
          "description": "Communication method picked from guest profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "completionDate": {
          "description": "The date-time in which the service request was completed.",
          "type": "string",
          "format": "date-time"
        },
        "closedDate": {
          "description": "The date-time in which the service request was closed.",
          "type": "string",
          "format": "date-time"
        },
        "closedBy": {
          "description": "The user who closed the service request.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "closeDescription": {
          "description": "The follow up description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "serviceRequestStatusType": {
      "type": "string",
      "enum": [
        "Open",
        "PendingFollowUp",
        "Closed",
        "DoNotDisturb",
        "MakeUpRoom"
      ]
    },
    "activityLookUpList": {
      "type": "array",
      "description": "Criteria for fetching Activity Bookings.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fetchActivityBookingsType"
      }
    },
    "fetchActivityBookingsType": {
      "type": "object",
      "description": "Used in the request message to describe the \"filtering Criteria\" when executing an activity lookup.",
      "properties": {
        "profileId": {
          "description": "ProfileID associated with the Activity under lookup.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "personName": {
          "description": "Detailed name information for the customer.",
          "$ref": "#/definitions/personNameType"
        },
        "address": {
          "description": "Detailed Address information for the customer.",
          "$ref": "#/definitions/addressType"
        },
        "activities": {
          "description": "The specific acitvity information to be used for filtering the Look-up.",
          "$ref": "#/definitions/activityList"
        },
        "hotelId": {
          "description": "Hotel Code, It is used to filter hotel specific children to this specific hotel code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "activityList": {
      "type": "array",
      "description": "A collection of Activity objects.",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "activityIds": {
            "description": "A collection of reference ID values that identify this uniquely scheduled activity instance. May contain one ID per external system plus an internal identifier.",
            "$ref": "#/definitions/uniqueIDListType"
          },
          "type": {
            "description": "The Type of the activity. Eg: SPA, Golf etc.",
            "type": "string"
          },
          "location": {
            "description": "The Location where the activity takes place. Eg: Salon",
            "type": "string"
          },
          "name": {
            "description": "Name of the people for whom the activity is scheduled. Can be more than one but should be equal to the number of persons",
            "type": "array",
            "maxItems": 4000,
            "items": {
              "type": "string",
              "minLength": 0,
              "maxLength": 200
            }
          },
          "numberOfPersons": {
            "description": "The total number of the people for whom the activity is scheduled. Can be more than one but should be equal to the number of persons",
            "type": "integer"
          },
          "timeSpan": {
            "description": "The time with-in which an activity falls (Starts/Ends/Spans)",
            "$ref": "#/definitions/dateTimeSpanType"
          },
          "duration": {
            "description": "The time span of the activity falls",
            "$ref": "#/definitions/dateTimeSpanType"
          },
          "description": {
            "description": "Description of the activity",
            "type": "array",
            "maxItems": 4000,
            "items": {
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            }
          },
          "note": {
            "description": "Any additional notes or comments regarding the scheduled activity.",
            "type": "array",
            "maxItems": 4000,
            "items": {
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            }
          },
          "groupCode": {
            "description": "Any Block code associated with the activity if its a Group booking.",
            "type": "string"
          },
          "amount": {
            "description": "The amount charged for the activity.",
            "$ref": "#/definitions/currencyAmountType"
          },
          "deposit": {
            "description": "A monetary value expressed with a currency code.",
            "type": "object",
            "properties": {
              "amount": {
                "description": "A monetary amount.",
                "type": "number"
              },
              "currencyCode": {
                "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
                "type": "string",
                "minLength": 3,
                "maxLength": 3
              },
              "collectedBy": {
                "type": "string",
                "enum": [
                  "Vendor",
                  "Agent",
                  "Other"
                ]
              }
            }
          },
          "inactiveDate": {
            "description": "The Date by which the activity is deemed Cancelled/Deleted.",
            "type": "string",
            "format": "date-time"
          },
          "participants": {
            "description": "The names of the participants.",
            "type": "array",
            "maxItems": 4000,
            "items": {
              "$ref": "#/definitions/personNameType"
            }
          },
          "uRLLink": {
            "description": "The URL link to launch the Activity Reservation System to view or edit full details of this activity.",
            "type": "string"
          },
          "extensions": {
            "description": "Vendor extensions to the activity record.",
            "type": "array",
            "maxItems": 4000,
            "items": {
              "type": "string"
            }
          },
          "status": {
            "description": "Activity reservation status. Typical examples are RESERVED, BOOKED, CANCELLED, and TENTATIVE.",
            "type": "string"
          },
          "statusDescription": {
            "description": "Activity reservation status description. Typical examples are RESERVED, BOOKED, CANCELLED, and TENTATIVE.",
            "type": "string"
          },
          "link": {
            "description": "When true indicates that activity link only needs to be inserted or deleted for this record.",
            "type": "boolean"
          }
        },
        "description": "Represents a single instance of a scheduled activity."
      }
    },
    "prepaidCardsType": {
      "type": "array",
      "description": "Holds fixed charge detail.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/prepaidCardType"
      }
    },
    "prepaidCardType": {
      "type": "object",
      "description": "Holds fixed charge information.",
      "properties": {
        "hotelId": {
          "description": "Hotel context for the Reservations.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "The unique ID of the reservation to which this record applies.",
          "$ref": "#/definitions/reservationId"
        },
        "name": {
          "description": "Family name, last name or Company Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "firstName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "profileId": {
          "description": "Card / Account holder name ID",
          "$ref": "#/definitions/profileId"
        },
        "cardNo": {
          "description": "Prepaid card / account number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "cardNumberMasked": {
          "description": "Masked Prepaid card / account number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "amount": {
          "description": "Prepaid Card Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "pinCode": {
          "description": "Prepaid card pin code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "interfaceId": {
          "description": "The unique ID for the Interface.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "cardDetails": {
          "description": "Prepaid Card details from vendor.",
          "$ref": "#/definitions/prepaidCardDetailsType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "giftCard": {
          "description": "Indicates a gift card type.",
          "type": "boolean"
        }
      }
    },
    "prepaidCardDetailsType": {
      "type": "object",
      "description": "Prepaid Card Details.",
      "properties": {
        "initialLoadDate": {
          "description": "Holds fixed charge detail.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "activateDate": {
          "description": "Holds fixed charge detail.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "initialCreditTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "creditTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "debitTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "reservedTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balanceTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "validUntilDate": {
          "description": "Holds fixed charge detail.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expiredDate": {
          "description": "Holds fixed charge detail.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactions": {
          "description": "Holds fixed charge detail.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/prepaidCardTransactionType"
          }
        }
      }
    },
    "prepaidCardTransactionType": {
      "type": "object",
      "description": "Prepaid Card transaction.",
      "properties": {
        "transactionType": {
          "description": "Transaction type enumeration.",
          "$ref": "#/definitions/prepaidCardTrxTypeType"
        },
        "transactionDate": {
          "description": "Transaction number of the Prepaid card transaction.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionNo": {
          "description": "Transaction number of the Prepaid card transaction.",
          "type": "number"
        },
        "amount": {
          "description": "Prepaid Card Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "prepaidCardTrxTypeType": {
      "type": "string",
      "description": "Reload transaction.",
      "enum": [
        "Activate",
        "Cancel",
        "Cashout",
        "Inquiry",
        "Issue",
        "Redeem",
        "Reload"
      ]
    },
    "reservationPackageType": {
      "type": "object",
      "description": "A ReservationPackageType class.",
      "properties": {
        "packageHeaderType": {
          "description": "Package information from configuration.",
          "$ref": "#/definitions/packageCodeHeaderType"
        },
        "scheduleList": {
          "description": "A HotelPackageSchedule type.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationPackageScheduleType"
          }
        },
        "newTimeSpan": {
          "description": "The changed dates(Start and End dates) for this product.",
          "$ref": "#/definitions/timeSpanType"
        },
        "consumptionDetails": {
          "description": "Package consumption details. Includes information for quantity , allowance etc.",
          "$ref": "#/definitions/packageConsumptionType"
        },
        "packageCode": {
          "description": "Package code. This is the unique code used for the package and is a required element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "internalID": {
          "description": "Reservation Package Opera Internal Unique Id. This is the unique Id used for this reservation package.",
          "type": "number"
        },
        "ratePlanCode": {
          "description": "The rate code which contains this package. If the package is not part of a rate code, this will be empty. Required element and part of the key to fetch the correct package record on the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "startDate": {
          "description": "Required value when changing a reservation package. If the original start date was null, then null is required.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "description": "Required value when changing a reservation package. If the original end date was null, then null is required.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "packageGroup": {
          "description": "Package group code. If this package is part of a package group, the group code is indicated here. This is a required element and is part of the key to fetch the correct package record .",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "source": {
          "description": "Indicates if the source of the product is Rate header, Rate Detail or Reservation. For new development this field is to be used for passing the product scource",
          "$ref": "#/definitions/productSourceType"
        },
        "awardCode": {
          "description": "This is the Award code used to redeem the package if the package is a redemption package.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "points": {
          "description": "Indicates the points used to redeem the redemption package.",
          "type": "integer"
        }
      }
    },
    "packageCodeHeaderType": {
      "type": "object",
      "properties": {
        "primaryDetails": {
          "description": "Package code header primary details.",
          "$ref": "#/definitions/configPackagePrimaryDetailsType"
        },
        "transactionDetails": {
          "description": "Package code header transaction information.",
          "$ref": "#/definitions/configPackageTransactionType"
        },
        "postingAttributes": {
          "description": "Package code posting attributes.",
          "$ref": "#/definitions/configPostingAttributesType"
        },
        "usageDetails": {
          "description": "Package code usage information.",
          "$ref": "#/definitions/configPackageUsageDetailType"
        }
      }
    },
    "configPackagePrimaryDetailsType": {
      "type": "object",
      "description": "A Config Package Info type.",
      "properties": {
        "description": {
          "description": "The description of the package.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "shortDescription": {
          "description": "The short description of the package.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "forecastGroup": {
          "description": "The Forecast group package belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "arrangementCode": {
          "description": "Arrangement Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "beginSellDate": {
          "description": "Indicates the begin sell date of the package.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endSellDate": {
          "description": "Indicates the end sell date of the package.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "configPackageTransactionType": {
      "type": "object",
      "description": "A HotelPackageTransaction type.",
      "properties": {
        "allowance": {
          "description": "Package is marked as an allowance, in case charge is expected back to the guest account from external interface eg. POS. which need to be offset against a consumption allowance.",
          "type": "boolean"
        },
        "currency": {
          "description": "The currency code for this package.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "postingType": {
          "description": "The posting frequency for this package, e.g., daily, arrival, departure, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "calculationRule": {
          "description": "The price calculation rule for this package.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "packagePostingRules": {
          "description": "The package posting rule details.",
          "$ref": "#/definitions/packagePostingRulesType"
        }
      }
    },
    "packagePostingRulesType": {
      "type": "object",
      "properties": {
        "transactionCode": {
          "description": "The Transaction code used to post the package price.",
          "$ref": "#/definitions/packageTransactionCodeType"
        },
        "overageCode": {
          "description": "The overage code to record over consumed allowance.",
          "$ref": "#/definitions/packageTransactionCodeType"
        },
        "profitCode": {
          "description": "The transaction code to record package profit, if any, from un-consumed allowance.",
          "$ref": "#/definitions/packageTransactionCodeType"
        },
        "lossCode": {
          "description": "The transaction code to record package Loss, if any, from un-consumed allowance.",
          "$ref": "#/definitions/packageTransactionCodeType"
        },
        "alternateCodesList": {
          "description": "The alternate transaction code that can be consumed by the guest in place of the transaction code.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/packageTransactionCodeType"
          }
        }
      }
    },
    "packageTransactionCodeType": {
      "type": "object",
      "properties": {
        "description": {
          "description": "The description of the code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "code": {
          "description": "Posting / transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "type": {
          "description": "Code is inclusive or exclusive of other chanrges such as taxes.",
          "$ref": "#/definitions/amountDeterminationType"
        }
      }
    },
    "configPostingAttributesType": {
      "type": "object",
      "description": "A config Package posting attributes type.",
      "properties": {
        "addToRate": {
          "description": "The package price is added to the room rate.",
          "type": "boolean"
        },
        "printSeparateLine": {
          "description": "The package price is printed on separate line of the folio.",
          "type": "boolean"
        },
        "sellSeparate": {
          "description": "Can the package be sold separate from rate plan code?",
          "type": "boolean"
        },
        "postNextDay": {
          "description": "package charges will be posted next business day.",
          "type": "boolean"
        },
        "forecastNextDay": {
          "description": "Package will be forecasted for consumption the next business day.",
          "type": "boolean"
        },
        "deliveryTimeRequired": {
          "description": "Indicates whether a delivery time is required for the package.",
          "type": "boolean"
        },
        "webBookable": {
          "description": "Can package be sold via Web channel.",
          "type": "boolean"
        },
        "formula": {
          "description": "The custom formula used for this package, if any.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "formulaFunctionName": {
          "description": "The custom formula function name used for this package, if any.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "formulaFunctionArguments": {
          "description": "The function argument name-value combination accepted by the custom formula used for this package.",
          "$ref": "#/definitions/functionArgumentsType"
        },
        "startTime": {
          "description": "Start time the package is valid.",
          "type": "string"
        },
        "endTime": {
          "description": "End time the package is valid.",
          "type": "string"
        },
        "catering": {
          "description": "Is package used for catering?",
          "type": "boolean"
        },
        "postingRhythm": {
          "description": "The posting rhythm for this package.",
          "$ref": "#/definitions/packagePostingRhythmType"
        },
        "priceCalculationRule": {
          "description": "The price calculation rule for this package.",
          "$ref": "#/definitions/packageCalculationRuleType"
        },
        "ticket": {
          "description": "Indicates whether a package is configured as a ticket or not.",
          "type": "boolean"
        },
        "inventoryItems": {
          "description": "Package Code Inventory Items type.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/pkgInventoryItemType"
          }
        },
        "calculatedPrice": {
          "description": "Calculated Package Price based from Number of Adults, Children and Calculation Rule.",
          "type": "number"
        }
      }
    },
    "functionArgumentsType": {
      "type": "array",
      "description": "Collection of function arguments and their corresponding values.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/functionArgumentType"
      }
    },
    "functionArgumentType": {
      "type": "object",
      "description": "This type provided details of a function argument and the value it holds.",
      "properties": {
        "name": {
          "description": "Specifies the name of the function argument.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "value": {
          "description": "Specifies the value held by the function argument.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "position": {
          "description": "Specifies the position of the function argument in the argument list.",
          "type": "integer"
        },
        "dataType": {
          "description": "Specifies the datatype of the function argument.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "required": {
          "description": "Argument of the function mandatory or not.",
          "type": "boolean"
        }
      }
    },
    "packagePostingRhythmType": {
      "type": "object",
      "description": "Package Posting rhythm type.",
      "properties": {
        "everyXNightsStartingNightY": {
          "description": "Post the package every X nights Staring from Night Y.",
          "type": "object",
          "properties": {
            "startOnNightY": {
              "description": "Starting night for consumption and posting prices.",
              "type": "integer"
            },
            "postEveryXNights": {
              "description": "Occurance of nights when the package needs to be posted and consumed.",
              "type": "integer"
            }
          }
        },
        "certainNightsOfTheWeek": {
          "description": "Post the package on certain nights of the week.",
          "type": "object",
          "properties": {
            "sunday": {
              "type": "boolean"
            },
            "monday": {
              "type": "boolean"
            },
            "tuesday": {
              "type": "boolean"
            },
            "wednesday": {
              "type": "boolean"
            },
            "thursday": {
              "type": "boolean"
            },
            "friday": {
              "type": "boolean"
            },
            "saturday": {
              "type": "boolean"
            }
          }
        },
        "customStaySchedule": {
          "description": "This user defined schedule lets you enter a posting rhythm over a 14-day period, starting with the arrival date, by assigning the day (number) within a guest stay for posting this package price.",
          "type": "object",
          "properties": {
            "night1": {
              "description": "Night 1 indicator.",
              "type": "boolean"
            },
            "night2": {
              "description": "Night 2 indicator.",
              "type": "boolean"
            },
            "night3": {
              "description": "Night 3 indicator.",
              "type": "boolean"
            },
            "night4": {
              "description": "Night 4 indicator.",
              "type": "boolean"
            },
            "night5": {
              "description": "Night 5 indicator.",
              "type": "boolean"
            },
            "night6": {
              "description": "Night 6 indicator.",
              "type": "boolean"
            },
            "night7": {
              "description": "Night 7 indicator.",
              "type": "boolean"
            },
            "night8": {
              "description": "Night 8 indicator.",
              "type": "boolean"
            },
            "night9": {
              "description": "Night 9 indicator.",
              "type": "boolean"
            },
            "night10": {
              "description": "Night 10 indicator.",
              "type": "boolean"
            },
            "night11": {
              "description": "Night 11 indicator.",
              "type": "boolean"
            },
            "night12": {
              "description": "Night 12 indicator.",
              "type": "boolean"
            },
            "night13": {
              "description": "Night 13 indicator.",
              "type": "boolean"
            },
            "night14": {
              "description": "Night 14 indicator.",
              "type": "boolean"
            }
          }
        },
        "customNightSchedule": {
          "description": "The start and end of the posting period is determined as follows: If the package is attached to a rate code: The period starts with the date when the rate code to which the package is attached becomes effective for the stay. The period ends with the date of the last night for that rate code (or the last night of the stay if the rate code remains in effect until the departure date). If the package is attached separately to the reservation: The Begin Date specified on the reservation when the package was attached is the start date for the period. The End Date specified on the reservation when the package was attached is the end date for the period. If no Begin Date and/or End Date are specified when the package is attached to the reservation, the Begin Date is assumed to be the arrival date and the End Date is assumed to be the departure date of the reservation, irrespective of when the package is attached to the reservation.",
          "type": "object",
          "properties": {
            "night1": {
              "description": "Night 1 indicator.",
              "type": "boolean"
            },
            "night2": {
              "description": "Night 2 indicator.",
              "type": "boolean"
            },
            "night3": {
              "description": "Night 3 indicator.",
              "type": "boolean"
            },
            "night4": {
              "description": "Night 4 indicator.",
              "type": "boolean"
            },
            "night5": {
              "description": "Night 5 indicator.",
              "type": "boolean"
            },
            "night6": {
              "description": "Night 6 indicator.",
              "type": "boolean"
            },
            "night7": {
              "description": "Night 7 indicator.",
              "type": "boolean"
            },
            "night8": {
              "description": "Night 8 indicator.",
              "type": "boolean"
            },
            "night9": {
              "description": "Night 9 indicator.",
              "type": "boolean"
            },
            "night10": {
              "description": "Night 10 indicator.",
              "type": "boolean"
            },
            "night11": {
              "description": "Night 11 indicator.",
              "type": "boolean"
            },
            "night12": {
              "description": "Night 12 indicator.",
              "type": "boolean"
            },
            "night13": {
              "description": "Night 13 indicator.",
              "type": "boolean"
            },
            "night14": {
              "description": "Night 14 indicator.",
              "type": "boolean"
            }
          }
        },
        "type": {
          "description": "Posting Rhythm for the package.",
          "$ref": "#/definitions/postingRhythmType"
        }
      }
    },
    "postingRhythmType": {
      "type": "string",
      "description": "Simple type for posting Rhythm types.",
      "enum": [
        "EveryNight",
        "ArrivalNight",
        "EveryXNightsStartingNightY",
        "CertainNightsOfTheWeek",
        "LastNight",
        "EveryNightExceptArrivalNight",
        "EveryNightExceptLast",
        "EveryNightExceptFirstAndLast",
        "CustomStaySchedule",
        "CustomNightSchedule",
        "FloatingAllowancePerStay",
        "TicketPosting"
      ]
    },
    "packageCalculationRuleType": {
      "type": "string",
      "description": "Simple type for package caluculation rules.",
      "enum": [
        "FlatRate",
        "PerPerson",
        "PerAdult",
        "PerChild",
        "PerRoom"
      ]
    },
    "pkgInventoryItemType": {
      "type": "object",
      "properties": {
        "articleNumber": {
          "description": "Article Number of the inventory item.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the inventory item.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "quantity": {
          "description": "Quantity of the inventory item allocated to the package.",
          "type": "integer"
        },
        "itemId": {
          "description": "Identifier for the inventory item.",
          "type": "integer"
        }
      }
    },
    "configPackageUsageDetailType": {
      "type": "object",
      "description": "A Config Package Usage Detail type.",
      "properties": {
        "source": {
          "description": "Indicates if the source of the product is Rate header, Rate Detail or Reservation.",
          "$ref": "#/definitions/productSourceType"
        },
        "usedInReservations": {
          "description": "Indicates if the package is used in, reserved or prospect reservations.",
          "type": "boolean"
        },
        "usedInRates": {
          "description": "Indicates if the package is used in any rate code.",
          "type": "boolean"
        },
        "usedInHouseReservations": {
          "description": "Indicates if any checked in reservations are using this product.",
          "type": "boolean"
        }
      }
    },
    "productSourceType": {
      "type": "string",
      "description": "Sources of Products",
      "enum": [
        "Reservation",
        "RateHeader",
        "RateDetail"
      ]
    },
    "reservationPackageScheduleType": {
      "type": "object",
      "description": "A HotelPackageSchedule type.",
      "properties": {
        "consumptionDate": {
          "description": "The date the package was used or can be used.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "unitPrice": {
          "description": "The price per unit of the package.",
          "type": "number"
        },
        "totalQuantity": {
          "description": "The total quantity of the package for this date, calculated based on the calculation rule as defined in the PackageHeaderType",
          "type": "integer"
        },
        "computedResvPrice": {
          "description": "Computed Reservation Price of the package. Calculation Will Be Performed Based On Other Parameters.",
          "type": "number"
        },
        "unitAllowance": {
          "description": "The allowance per unit of the package.",
          "type": "number"
        },
        "reservationDate": {
          "description": "The date of the Reservation when this package is applicable. This can be different from the date the package will be consumed. Example are next day packages. Reservation date is when the package is applied to the guest and Consumption date is when the guest can consume the package.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "originalUnitPrice": {
          "description": "The original price per unit of the package if it has been changed.",
          "type": "number"
        },
        "originalUnitAllowance": {
          "description": "The original allowance per unit of the package if it has been changed.",
          "type": "number"
        }
      }
    },
    "packageConsumptionType": {
      "type": "object",
      "description": "Package Consumption Information. Includes information on quantity of the package used, allowance consumption etc.",
      "properties": {
        "defaultQuantity": {
          "description": "The default quantity attached in the package.",
          "type": "integer"
        },
        "excludedQuantity": {
          "description": "The quantity which has been excluded in the package.",
          "type": "integer"
        },
        "totalQuantity": {
          "description": "The total quantity of the package, calculated based on the calculation rule as defined in the PackageHeaderType.",
          "type": "integer"
        },
        "allowanceConsumed": {
          "description": "Indicates if Allowance(for POS packages) has been consumed/posted for today.",
          "type": "boolean"
        }
      }
    },
    "resInventoryItemsType": {
      "type": "object",
      "description": "Defines a collection of inventory items attached to a reservation.",
      "properties": {
        "item": {
          "description": "Inventory item attached to a reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/resInventoryItemType"
          }
        },
        "itemClassCode": {
          "description": "The Item Class ID which the item belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "resInventoryItemType": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "item": {
          "description": "Specifies Items and its attributes. When used for data manipulation for Items setup on reservation, etc only code is considered. Other Attributes are for used to provide information during fetch operation.",
          "$ref": "#/definitions/itemInfoType"
        },
        "quantity": {
          "description": "Number of items booked.",
          "type": "integer"
        },
        "timeSpan": {
          "description": "Begin and end date and time of the items applicability.",
          "$ref": "#/definitions/dateRangeType"
        },
        "source": {
          "description": "If exists specifies whether the item is setup due to a Rate Plan, Package or a Block.",
          "$ref": "#/definitions/resInventoryItemSourceType"
        }
      }
    },
    "itemInfoType": {
      "type": "object",
      "description": "Basic information regarding an Item.",
      "properties": {
        "description": {
          "description": "Detail description of an item.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "availabilityPeriod": {
          "description": "Defines a Time period when the item is available.",
          "$ref": "#/definitions/timeWindowType"
        },
        "timeSpan": {
          "description": "Date Range to get the inventories of the items.",
          "$ref": "#/definitions/timeSpanType"
        },
        "quantity": {
          "description": "Quantity of hold Item",
          "type": "integer"
        },
        "itemHoldId": {
          "description": "ID reference for the hold Item",
          "type": "number"
        },
        "code": {
          "description": "Item Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "name": {
          "description": "Name of an item.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "itemPool": {
          "description": "Indicates if it is an item pool. Not applicable for Item within the Item Pool.",
          "type": "boolean"
        },
        "sellSeparate": {
          "description": "If true indicates that item is allowed to sell separately.",
          "type": "boolean"
        },
        "sellInReservation": {
          "description": "If true indicates that item can be sold in reservation.",
          "type": "boolean"
        },
        "sellInEvent": {
          "description": "If true indicates that item can be sold in event.",
          "type": "boolean"
        },
        "requiredForBooking": {
          "description": "If true indicates that item is required for the reservation.",
          "type": "boolean"
        },
        "fixedCharge": {
          "description": "If true indicates that item has fixed charge when it is attached to a reservation.",
          "type": "boolean"
        },
        "outsideStay": {
          "description": "If true indicates that item could be held outside of the reservation stay days.",
          "type": "boolean"
        },
        "defaultDuration": {
          "description": "Define the default duration in days when booking the item.",
          "type": "integer"
        }
      }
    },
    "timeWindowType": {
      "type": "object",
      "description": "Defines a Time period with start time and an end time.",
      "properties": {
        "startTime": {
          "description": "Start Time of the Time window.",
          "type": "string"
        },
        "endTime": {
          "description": "End Time of the Time window.",
          "type": "string"
        }
      }
    },
    "resInventoryItemSourceType": {
      "type": "object",
      "description": "Defines whether the item is setup due to a Rate Plan, Package or a Block.",
      "properties": {
        "ratePlanCode": {
          "description": "Rate Plan Code, If populated specifies that the item is setup due to a Rate Plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "packageCode": {
          "description": "Package Code, If populated specifies that the item is setup due to a Package.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "blockId": {
          "description": "Block Unique ID, If populated specifies that the item is setup due to a Block.",
          "$ref": "#/definitions/blockId"
        },
        "welcomeOffer": {
          "description": "If true, it implies that the item has been attached to the reservation as part of a Welcome Offer",
          "type": "boolean"
        },
        "packageInternalID": {
          "description": "Source Reservation Package Opera Internal Unique Id. This is the unique Id used for the reservation package associated with this item.",
          "type": "number"
        }
      }
    },
    "blockId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "membershipType": {
      "type": "object",
      "description": "Detailed information of the memberships.",
      "properties": {
        "comment": {
          "description": "Additional comments regarding to the membership.",
          "$ref": "#/definitions/paragraphType"
        },
        "newMembershipNumber": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "nameOnCard": {
          "description": "Name to be displayed on the membership card.",
          "type": "string"
        },
        "programDescription": {
          "description": "Description of the membership program.",
          "type": "string"
        },
        "membershipLevel": {
          "description": "Indicates the membership level.",
          "type": "string"
        },
        "membershipLevelDescription": {
          "description": "Indicates the membership level description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "membershipClass": {
          "description": "Indicates the membership class.",
          "type": "string"
        },
        "earningPreference": {
          "description": "Earning preference to the membership.",
          "$ref": "#/definitions/membershipEarningPreferenceType"
        },
        "inactive": {
          "description": "Indicates whether membership is active or inactive.",
          "type": "boolean"
        },
        "benefits": {
          "description": "benefits for the membership.",
          "$ref": "#/definitions/benefitsType"
        },
        "tierAdministration": {
          "description": "Defines the degree of participation for this membership in the tier management portion of the program.",
          "$ref": "#/definitions/tierAdministrationType"
        },
        "downgrade": {
          "description": "Defines how downgrading will be handled for this membership.",
          "$ref": "#/definitions/downgradeType"
        },
        "reIssueNewCard": {
          "description": "The status of issuing new membership card to the member.",
          "$ref": "#/definitions/cardReIssueType"
        },
        "excludeFromBatch": {
          "description": "True if you want to exclude the member from the Membership Fulfillment extract,the member's actions will not be included in the fulfillment extract until this value set to false.",
          "type": "boolean"
        },
        "upgradeDescription": {
          "description": "Indicates Upgrade information which includes member's next tier level, requirements for the next upgrade.",
          "type": "string",
          "minLength": 0,
          "maxLength": 32000
        },
        "downgradeDescription": {
          "description": "Indicates information regarding the member's possible downgrades.",
          "type": "string",
          "minLength": 0,
          "maxLength": 32000
        },
        "rating": {
          "description": "Value Rating Type Description for this membership.",
          "type": "string"
        },
        "membershipEnrollmentCode": {
          "description": "Indicates how the guest enrolled in the program.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "memberStatus": {
          "description": "Indicates where the guest is in the membership enrollment process.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currentPoints": {
          "description": "Profile MemberShip Points.",
          "type": "number"
        },
        "pointsLabel": {
          "description": "Label used to refer to points for this membership type",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "enrollmentSource": {
          "description": "Source from where the enrollment is done.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "enrollmentResort": {
          "description": "Resort/CRO where enrollment is done.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "preferredCard": {
          "description": "Preferred Card.",
          "type": "boolean"
        },
        "membershipId": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "membershipType": {
          "description": "Type of membership.",
          "type": "string"
        },
        "primaryMembershipYn": {
          "description": "Indicator if Membership is a Primary Membership.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "primaryMembership": {
          "description": "Boolean indicator set to True implies membership is a Primary Membership.",
          "type": "boolean"
        },
        "membershipIdNo": {
          "description": "Membership ID Number.",
          "type": "integer"
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        },
        "centralSetup": {
          "description": "Indicates how the award points for this membership type will be managed.",
          "type": "boolean"
        },
        "signupDate": {
          "description": "Indicates when the member signed up for the loyalty program.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "effectiveDate": {
          "description": "Indicates the starting date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDate": {
          "description": "Indicates the ending date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDateExclusiveIndicator": {
          "description": "When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15 the last date of the period is Oct 14).",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "reservationMembershipType": {
      "type": "object",
      "properties": {
        "comment": {
          "description": "Additional comments regarding to the membership.",
          "$ref": "#/definitions/paragraphType"
        },
        "newMembershipNumber": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "nameOnCard": {
          "description": "Name to be displayed on the membership card.",
          "type": "string"
        },
        "programDescription": {
          "description": "Description of the membership program.",
          "type": "string"
        },
        "membershipLevel": {
          "description": "Indicates the membership level.",
          "type": "string"
        },
        "membershipLevelDescription": {
          "description": "Indicates the membership level description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "membershipClass": {
          "description": "Indicates the membership class.",
          "type": "string"
        },
        "earningPreference": {
          "description": "Earning preference to the membership.",
          "$ref": "#/definitions/membershipEarningPreferenceType"
        },
        "inactive": {
          "description": "Indicates whether membership is active or inactive.",
          "type": "boolean"
        },
        "benefits": {
          "description": "benefits for the membership.",
          "$ref": "#/definitions/benefitsType"
        },
        "tierAdministration": {
          "description": "Defines the degree of participation for this membership in the tier management portion of the program.",
          "$ref": "#/definitions/tierAdministrationType"
        },
        "downgrade": {
          "description": "Defines how downgrading will be handled for this membership.",
          "$ref": "#/definitions/downgradeType"
        },
        "reIssueNewCard": {
          "description": "The status of issuing new membership card to the member.",
          "$ref": "#/definitions/cardReIssueType"
        },
        "excludeFromBatch": {
          "description": "True if you want to exclude the member from the Membership Fulfillment extract,the member's actions will not be included in the fulfillment extract until this value set to false.",
          "type": "boolean"
        },
        "upgradeDescription": {
          "description": "Indicates Upgrade information which includes member's next tier level, requirements for the next upgrade.",
          "type": "string",
          "minLength": 0,
          "maxLength": 32000
        },
        "downgradeDescription": {
          "description": "Indicates information regarding the member's possible downgrades.",
          "type": "string",
          "minLength": 0,
          "maxLength": 32000
        },
        "rating": {
          "description": "Value Rating Type Description for this membership.",
          "type": "string"
        },
        "membershipEnrollmentCode": {
          "description": "Indicates how the guest enrolled in the program.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "memberStatus": {
          "description": "Indicates where the guest is in the membership enrollment process.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currentPoints": {
          "description": "Profile MemberShip Points.",
          "type": "number"
        },
        "pointsLabel": {
          "description": "Label used to refer to points for this membership type",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "enrollmentSource": {
          "description": "Source from where the enrollment is done.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "enrollmentResort": {
          "description": "Resort/CRO where enrollment is done.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "preferredCard": {
          "description": "Preferred Card.",
          "type": "boolean"
        },
        "membershipId": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "membershipType": {
          "description": "Type of membership.",
          "type": "string"
        },
        "primaryMembershipYn": {
          "description": "Indicator if Membership is a Primary Membership.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "primaryMembership": {
          "description": "Boolean indicator set to True implies membership is a Primary Membership.",
          "type": "boolean"
        },
        "membershipIdNo": {
          "description": "Membership ID Number.",
          "type": "integer"
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        },
        "centralSetup": {
          "description": "Indicates how the award points for this membership type will be managed.",
          "type": "boolean"
        },
        "signupDate": {
          "description": "Indicates when the member signed up for the loyalty program.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "effectiveDate": {
          "description": "Indicates the starting date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDate": {
          "description": "Indicates the ending date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDateExclusiveIndicator": {
          "description": "When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15 the last date of the period is Oct 14).",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "linkMembership": {
          "type": "boolean"
        },
        "primary": {
          "type": "boolean"
        }
      },
      "description": "Detailed information of the memberships."
    },
    "routingInfoListType": {
      "type": "array",
      "description": "A routing info object can either be of type Folio OR of type Room with its corresponding instructions.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/routingInfoType"
      }
    },
    "routingInfoType": {
      "type": "object",
      "description": "A routing info object can either be of type Folio OR of type Room with its corresponding object.",
      "properties": {
        "folio": {
          "description": "Folio routing type.",
          "type": "object",
          "properties": {
            "guestInfo": {
              "description": "Guest details",
              "type": "object",
              "properties": {
                "profileIdList": {
                  "description": "Unique identifiers for the Profile for both internal and external systems.",
                  "$ref": "#/definitions/profileIdList"
                }
              }
            },
            "payeeInfo": {
              "$ref": "#/definitions/payeeInfoType"
            },
            "aRNumber": {
              "description": "Accounts Receivable.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            },
            "folioWindowNo": {
              "type": "integer"
            },
            "paymentMethod": {
              "type": "string",
              "maxLength": 2000
            }
          }
        },
        "room": {
          "description": "Room routing type.",
          "type": "object",
          "properties": {
            "roomId": {
              "description": "Room number to route the instructions.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "guestNameId": {
              "description": "Guest unique identifier to which the instruction will be routed.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "guestDisplayName": {
              "description": "Display Name for the guest.",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "reservationNameId": {
              "description": "Reservation name id to which the instruction will be routed.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            }
          }
        },
        "comp": {
          "description": "Comp Accounting Routing Info",
          "type": "object",
          "properties": {
            "compAccountingInfo": {
              "$ref": "#/definitions/compAccountingType"
            },
            "compRequestInfo": {
              "$ref": "#/definitions/compRoutingRequestType"
            },
            "payeeInfo": {
              "$ref": "#/definitions/payeeInfoType"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            },
            "folioWindowNo": {
              "type": "integer"
            }
          }
        },
        "request": {
          "description": "Comp Accounting Request routing",
          "type": "object",
          "properties": {
            "compRequestInfo": {
              "$ref": "#/definitions/compRoutingRequestType"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            }
          }
        },
        "refreshFolio": {
          "description": "On a successful update, the transactions that are already posted in the guest's folio will be re-organized based on the configured instructions.",
          "type": "boolean"
        }
      }
    },
    "routingInstructionType": {
      "type": "object",
      "description": "Routing limit can be one of the three: Credit Limit, Percetage Limit, Covers Limit",
      "properties": {
        "duration": {
          "description": "Duration of this instruction.",
          "type": "object",
          "properties": {
            "timeSpan": {
              "$ref": "#/definitions/timeSpanType"
            },
            "sunday": {
              "type": "boolean"
            },
            "monday": {
              "type": "boolean"
            },
            "tuesday": {
              "type": "boolean"
            },
            "wednesday": {
              "type": "boolean"
            },
            "thursday": {
              "type": "boolean"
            },
            "friday": {
              "type": "boolean"
            },
            "saturday": {
              "type": "boolean"
            },
            "daily": {
              "description": "Flag to indicate if the routing instruction is a daily instruction.",
              "type": "boolean"
            }
          }
        },
        "transactionCodes": {
          "description": "Set of Transaction Codes configured in this time span.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "billingInstructions": {
          "description": "Set of Billing Instructions configured in this time span.",
          "$ref": "#/definitions/billingInstructionsType"
        },
        "creditLimit": {
          "description": "Allowable credit amount for this routing instruction. Null value means no limit, 0 equals zero.",
          "type": "number"
        },
        "percentageLimit": {
          "description": "The routing limit percentage allowed for this routing instruction.",
          "type": "number"
        },
        "covers": {
          "description": "Number of covers for this routing instruction.",
          "type": "number"
        },
        "limitUsed": {
          "description": "Amount of Credit used for this routing instruction.",
          "type": "number"
        },
        "routingLinkId": {
          "description": "Internal Routing Link Id identifier to which limit group the instruction belongs.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "compAccountingType": {
      "type": "object",
      "description": "Authorizer Information",
      "properties": {
        "authorizerId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "authorizerUserName": {
          "description": "Application user name of the authorizer",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "authorizerName": {
          "description": "Full name of the authorizer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "authorizerRateCode": {
          "description": "Rate code of the authorizer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "inheritAuthorizerRateCode": {
          "description": "Indicates whether user has the choice to have reservation inherit rate code from the authorizer.",
          "type": "boolean"
        },
        "aRNumber": {
          "description": "AR Account Number of the authorizer",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "compTypeCode": {
          "description": "The Comp Type for this Account. Used when using the Comp types functionality",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "compVoucherNo": {
          "description": "The coupon or voucher number used by the external gaming system to track postings made to this routing.",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        },
        "dateRange": {
          "description": "Arrival date range for comp routing",
          "$ref": "#/definitions/dateRangeType"
        },
        "membershipId": {
          "description": "Membership number",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "membershipIdNo": {
          "description": "Unique Id of membership",
          "type": "integer"
        },
        "membershipNameOnCard": {
          "description": "Name displayed on the membership card",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "compRoutingRequestType": {
      "type": "object",
      "description": "Type for the details of a Comp Routing Request",
      "properties": {
        "requestedBy": {
          "description": "User who requested the Comp Routing",
          "$ref": "#/definitions/userInfoType"
        },
        "comments": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "declinedBy": {
          "description": "User information of user who declined comp routing request",
          "$ref": "#/definitions/userInfoType"
        },
        "status": {
          "description": "Comp routing status",
          "$ref": "#/definitions/compRoutingStatusType"
        }
      }
    },
    "userInfoType": {
      "type": "object",
      "description": "Opera User Information",
      "properties": {
        "userId": {
          "description": "User Id of the Opera User",
          "type": "integer"
        },
        "userName": {
          "description": "Name of the Opera User",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "compRoutingStatusType": {
      "type": "string",
      "description": "Status which indicates that the Request of Comp Routing was declined",
      "enum": [
        "Request",
        "Comp",
        "Declined"
      ]
    },
    "reservationPoliciesType": {
      "type": "object",
      "description": "A collection of reservation deposit and cancellation policies.",
      "properties": {
        "cancellationPolicies": {
          "description": "A collection of reservation cancellation policies..",
          "$ref": "#/definitions/resCancellationPoliciesType"
        },
        "depositPolicies": {
          "description": "A collection of reservation deposit policies.",
          "$ref": "#/definitions/resDepositPoliciesType"
        },
        "reservationIdList": {
          "description": "A list of Ids for reservation.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "name": {
          "description": "Name identifier for the reservation.",
          "type": "string"
        }
      }
    },
    "resCancellationPoliciesType": {
      "type": "array",
      "description": "A list of reservation cancellation policies.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resCancellationPolicyType"
      }
    },
    "resCancellationPolicyType": {
      "type": "object",
      "description": "A cancellation policy attached with the reservation.",
      "properties": {
        "revenueType": {
          "description": "Type of reservation.",
          "$ref": "#/definitions/depositCancelRevenueType"
        },
        "policy": {
          "description": "Cancellation policy details.",
          "$ref": "#/definitions/resCancelPenaltyType"
        },
        "percentageDue": {
          "description": "The percentage amount due for reservation cancellation.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "comments": {
          "description": "Comments attached with the reservation cancellation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "policyId": {
          "description": "Unique ID of the Reservation Policy.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "depositCancelRevenueType": {
      "type": "string",
      "description": "The type to indicate what revenue is to be used for calculating deposit/cancellation amounts.",
      "enum": [
        "Rooms",
        "Catering",
        "All"
      ]
    },
    "resCancelPenaltyType": {
      "type": "object",
      "description": "The CancelPenalty class defines the cancellation policy of the hotel facility.",
      "properties": {
        "deadline": {
          "description": "Cancellation deadline, absolute or relative.",
          "$ref": "#/definitions/policyDeadlineType"
        },
        "amountPercent": {
          "description": "Cancellation fee expressed as a fixed amount, or percentage of/or room nights.",
          "$ref": "#/definitions/policyAmountPercentType"
        },
        "penaltyDescription": {
          "description": "Text description of the Penalty in a given language.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "offsetUnit": {
          "$ref": "#/definitions/offsetUnitType"
        },
        "formattedRule": {
          "description": "Formatted Text Rule of the Cancellation Penalty.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "policyCode": {
          "description": "Policy Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "manual": {
          "description": "Flag to indicate if the cancellation policy is manual.",
          "type": "boolean"
        },
        "nonRefundable": {
          "description": "Indicates if the amount is refundable if booking is canceled.",
          "type": "boolean"
        },
        "effective": {
          "description": "Indicator if Cancellation Penalty is currently applicable or not.",
          "type": "boolean"
        }
      }
    },
    "policyDeadlineType": {
      "type": "object",
      "description": "Cancellation deadline, absolute or relative.",
      "properties": {
        "absoluteDeadline": {
          "description": "Defines the absolute deadline. Either this or the offset attributes may be used.",
          "type": "string",
          "format": "date-time"
        },
        "offsetFromArrival": {
          "description": "The number of days before arrival that allows cancellation without penalties.",
          "type": "integer"
        },
        "offsetDropTime": {
          "description": "Time on offset day the cancellation penalties applies.",
          "type": "string",
          "format": "date-time"
        },
        "offsetFromBookingDate": {
          "description": "The number of days after booking deposit must be paid.",
          "type": "integer"
        }
      }
    },
    "policyAmountPercentType": {
      "type": "object",
      "description": "Defines the percentage basis for calculating the fee amount or the amount.",
      "properties": {
        "basisType": {
          "description": "Provides the basis for how the amount of the guarantee is calculated.",
          "$ref": "#/definitions/policyBasisTypeType"
        },
        "nights": {
          "description": "The number of nights of the hotel stay that are used to calculate the fee amount.",
          "type": "integer"
        },
        "percent": {
          "description": "The percentage used to calculate the amount.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "policyBasisTypeType": {
      "type": "string",
      "description": "Full Amount.",
      "enum": [
        "FlatAmount",
        "Percentage",
        "Nights",
        "NightPercentage",
        "FullAmount"
      ]
    },
    "offsetUnitType": {
      "type": "string",
      "description": "Indicates deadline offset unit type.",
      "enum": [
        "Year",
        "Month",
        "Day",
        "Hour"
      ]
    },
    "resDepositPoliciesType": {
      "type": "array",
      "description": "A list of deposit policies attached with the reservation.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resDepositPolicyType"
      }
    },
    "resDepositPolicyType": {
      "type": "object",
      "description": "A deposit policy attached with the reservation.",
      "properties": {
        "revenueType": {
          "description": "Type of reservation.",
          "$ref": "#/definitions/depositCancelRevenueType"
        },
        "policy": {
          "description": "Reservation deposit policy details.",
          "$ref": "#/definitions/depositPolicyType"
        },
        "comments": {
          "description": "Comments attached with a deposit.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "amountPaid": {
          "description": "Total amount paid against the reservation deposit.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "amountDue": {
          "description": "Total amount due against the reservation deposit.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "policyId": {
          "description": "Unique ID of the Reservation Policy.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "depositPolicyType": {
      "type": "object",
      "description": "Used to define the deposit policy, guarantees policy, and/or accepted forms of payment.",
      "properties": {
        "amountPercent": {
          "description": "Payment expressed as a fixed amount, or a percentage of/or room nights.",
          "$ref": "#/definitions/policyAmountPercentType"
        },
        "deadline": {
          "description": "Payment deadline, absolute or relative.",
          "$ref": "#/definitions/policyDeadlineType"
        },
        "description": {
          "description": "Text description of the Payment in a given language.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "depositReceiptNo": {
          "description": "Receipt number associated with the deposit policy",
          "type": "integer"
        },
        "transactionDate": {
          "description": "Transaction Date associated with the deposit policy",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "depositReqReversed": {
          "description": "Flag to indicate if deposit policy is reversed",
          "type": "boolean"
        },
        "formattedRule": {
          "description": "Formatted Text Rule of the deposit policy.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "typeOfCharges": {
          "description": "Defines if the deposit amount is calculated based on Room Charges, Catering Charges or both",
          "$ref": "#/definitions/depositCancelRevenueType"
        },
        "policyCode": {
          "description": "Deposit Policy Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "manual": {
          "description": "Flag to indicate if the cancellation policy is manual.",
          "type": "boolean"
        }
      }
    },
    "linkedReservationsInfoType": {
      "type": "object",
      "description": "Linked Reservations.",
      "properties": {
        "reservationInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/linkedReservationInfoType"
          }
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "linkedReservationInfoType": {
      "type": "object",
      "properties": {
        "reservationIdList": {
          "$ref": "#/definitions/reservationIdList"
        },
        "timeSpan": {
          "$ref": "#/definitions/timeSpanType"
        },
        "givenName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "surname": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "title": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "room": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rate": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "guarantee": {
          "$ref": "#/definitions/resGuaranteeType"
        },
        "balance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "reservationBlock": {
          "description": "Key information about the block for the linked reservation.",
          "$ref": "#/definitions/reservationBlockType"
        },
        "displayColor": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "allowedActions": {
          "description": "Collection of allowed actions for the linked reservation.",
          "$ref": "#/definitions/reservationAllowedActionsType"
        },
        "reservationStatus": {
          "description": "Indicates the Actual status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "linkReservationType": {
          "$ref": "#/definitions/linkedReservationType"
        },
        "reverseCheckInAllowed": {
          "description": "This attribute is to verify if reverse check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "roomNumberLocked": {
          "description": "This attribute is to verify if room number is locked for the reservation. When true the room number cannot be changed",
          "type": "boolean"
        },
        "suppressRate": {
          "description": "This attribute checks if rate is suppressed or not in order to properly show strike through.",
          "type": "boolean"
        }
      }
    },
    "linkedReservationType": {
      "type": "string",
      "description": "Enumeration of the different Linked Reservation Types.",
      "enum": [
        "Linked",
        "Shared",
        "Default"
      ]
    },
    "cateringResInfoType": {
      "type": "object",
      "description": "Information regarding catering event and catering revenue type associated to the reservation.",
      "properties": {
        "eventId": {
          "description": "Unique ID on a catering event associated to the reservation.",
          "$ref": "#/definitions/eventId"
        },
        "revenueType": {
          "description": "Catering revenue type associated to the reservation.",
          "type": "string"
        }
      }
    },
    "eventId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "resStatClassificationType": {
      "type": "object",
      "description": "Statistical Classification information for the reservation.",
      "properties": {
        "roomType": {
          "description": "Room Type used to calculate statistics for export(DRS).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateTier": {
          "description": "Rate Tier used calculate statistics for export(DRS).",
          "type": "integer"
        }
      }
    },
    "alertsType": {
      "type": "array",
      "description": "List of alerts.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/alertType"
      }
    },
    "alertType": {
      "type": "object",
      "properties": {
        "code": {
          "description": "Code identifying the type of alert.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "global": {
          "description": "Indicate whether the alert is a global that is automatically and dynamically attached to all reservations that meet the alert criteria.",
          "type": "boolean"
        },
        "area": {
          "description": "The Area where the alert will be attached and shown.",
          "$ref": "#/definitions/alertAreaType"
        },
        "description": {
          "description": "The alert message.",
          "type": "string"
        },
        "screenNotification": {
          "description": "Notify by showing the alert on the screen",
          "type": "boolean"
        },
        "printerNotification": {
          "description": "Notify by sending the message to the printer.",
          "type": "boolean"
        },
        "printerName": {
          "description": "Printer used to print the alert notification.",
          "type": "string"
        },
        "reportId": {
          "description": "The module id of the report. This is used to printer the alert.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "reportName": {
          "description": "Report name of the report type.",
          "type": "string"
        },
        "reportDescription": {
          "description": "Report description. Mainly used for as a parameter for printing the alerts.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1000
        },
        "guestInfo": {
          "description": "Contains information regarding the guest.",
          "$ref": "#/definitions/alertGuestInfoType"
        },
        "userDefinedFields": {
          "description": "Collections of user defined fields.",
          "$ref": "#/definitions/userDefinedFieldsType"
        },
        "welcomeOffer": {
          "description": "Contains information regarding welcome offer.",
          "$ref": "#/definitions/welcomeOfferType"
        },
        "stopCheckInCheckOut": {
          "description": "Indicates the Reservation Stop Check In/Check Out Global Alert.",
          "type": "boolean"
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "alertAreaType": {
      "type": "string",
      "enum": [
        "CheckIn",
        "CheckOut",
        "Reservation",
        "Billing",
        "InHouse"
      ]
    },
    "alertGuestInfoType": {
      "type": "object",
      "properties": {
        "guestName": {
          "description": "Guest Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "membership": {
          "description": "Membership information of the guest.",
          "$ref": "#/definitions/membershipType"
        },
        "vipStatus": {
          "description": "VIP status of the guest.",
          "$ref": "#/definitions/vIPStatusType"
        },
        "lastHotelCode": {
          "description": "Hotel code of the last stay location of the guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "lastStayDate": {
          "description": "Last stay date at the property.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "totalStay": {
          "description": "Holds total number of days that the guest have stayed in the property.",
          "type": "integer"
        },
        "comments": {
          "description": "Additional alert information regarding the membership of the guest.",
          "type": "string"
        },
        "preference": {
          "description": "Additional alert information regarding the guest.",
          "type": "string"
        },
        "preference2": {
          "description": "Additional mandatory alert information regarding the guest preferences.",
          "type": "string"
        },
        "guestPreferredLanguage": {
          "description": "Holds the language preferred by the guest.",
          "$ref": "#/definitions/languageType"
        },
        "totalBrandStay": {
          "description": "Holds total number of days that the guest have stayed in the properties for the same brand.",
          "type": "integer"
        },
        "birthDate": {
          "description": "Indicates the date of birth as indicated in the document, in ISO 8601 prescribed format.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "birthDateMasked": {
          "description": "Indicates the date of birth as masked.",
          "type": "string"
        }
      }
    },
    "languageType": {
      "type": "string",
      "minLength": 0,
      "maxLength": 40
    },
    "welcomeOfferType": {
      "type": "object",
      "properties": {
        "status": {
          "description": "Determines the status of the welcome offer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "type": {
          "description": "Determines the welcome offer option selected while availing the welcome offer.",
          "$ref": "#/definitions/welcomeOfferOptionsType"
        }
      }
    },
    "welcomeOfferOptionsType": {
      "type": "string",
      "description": "None of the Welcome Offer option is selected.",
      "enum": [
        "BonusPoints",
        "Ecoupons",
        "Items",
        "PostIt",
        "NotSelected"
      ]
    },
    "hotelReservationTracesType": {
      "type": "array",
      "description": "List of Reservation Traces.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelReservationTraceType"
      }
    },
    "hotelReservationTraceType": {
      "type": "object",
      "description": "Extended Trace object to hold information for a reservation.",
      "properties": {
        "timeInfo": {
          "description": "Date of the trace.",
          "$ref": "#/definitions/traceTimeInfoType"
        },
        "reservationId": {
          "description": "Reservation ID of the reservation for which the traces are to be retrieved.",
          "$ref": "#/definitions/reservationId"
        },
        "departmentId": {
          "description": "Indicates the Department code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "traceText": {
          "description": "The information this trace contains.",
          "type": "string"
        },
        "resolveInfo": {
          "description": "Information regarding the status of the trace",
          "$ref": "#/definitions/traceResolveType"
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "traceTimeInfoType": {
      "type": "object",
      "properties": {
        "dateTimeSpan": {
          "description": "Time span for the trace.",
          "$ref": "#/definitions/dateTimeSpanType"
        },
        "traceOn": {
          "description": "Date of the trace.",
          "type": "string",
          "format": "date-time"
        },
        "traceTime": {
          "description": "Time of the trace",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "enteredBy": {
          "description": "User that entered this trace.",
          "type": "string"
        }
      }
    },
    "traceResolveType": {
      "type": "object",
      "properties": {
        "resolvedOn": {
          "description": "Date the trace was resolved",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "resolvedBy": {
          "description": "User that resolved the trace",
          "type": "string"
        }
      }
    },
    "confirmationsType": {
      "type": "array",
      "description": "List of confirmation letters.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/confirmationType"
      }
    },
    "confirmationType": {
      "type": "object",
      "properties": {
        "recipientInfo": {
          "description": "Receipient's information.",
          "$ref": "#/definitions/confRecipientInfoType"
        },
        "deliveryInfo": {
          "description": "The status of the confirmation letter sent via the specified CommunicationType.",
          "$ref": "#/definitions/confDeliveryInfoTypes"
        },
        "confirmationStyleInfo": {
          "description": "Confirmation style.",
          "$ref": "#/definitions/confirmationStyle"
        },
        "fromEmail": {
          "description": "Senders Email address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "sendTextMessage": {
          "description": "Flag to indicate sending confirmation letter as text message.",
          "type": "boolean"
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "confRecipientInfoType": {
      "type": "object",
      "properties": {
        "profileId": {
          "description": "name id of the recipient.",
          "$ref": "#/definitions/profileId"
        },
        "formerName": {
          "description": "Last Name of recipient.",
          "$ref": "#/definitions/profileNameType"
        },
        "addressInfo": {
          "description": "id of the address where to send confirmation letter.",
          "$ref": "#/definitions/addressInfoType"
        },
        "emailInfo": {
          "description": "id of the Email where to send confirmation letter.",
          "$ref": "#/definitions/emailInfoType"
        },
        "faxInfo": {
          "description": "id of the Fax where to send confirmation letter.",
          "$ref": "#/definitions/telephoneInfoType"
        },
        "telephoneInfo": {
          "description": "id of the Mobile where to send confirmation letter.",
          "$ref": "#/definitions/telephoneInfoType"
        },
        "recipientType": {
          "$ref": "#/definitions/profileTypeType"
        }
      }
    },
    "profileNameType": {
      "type": "object",
      "description": "This provides name information for a person.",
      "properties": {
        "name": {
          "description": "Family name, last name or Company Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "fullName": {
          "description": "Full display Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "namePrefix": {
          "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "givenName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "middleName": {
          "description": "The middle name of the person name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "nameType": {
          "description": "Type of name of the individual, such as former, nickname, alternate or alias name.",
          "$ref": "#/definitions/personNameTypeType"
        }
      }
    },
    "confDeliveryInfoTypes": {
      "type": "array",
      "description": "List of confirmation letter delivery methods and their status",
      "maxItems": 4,
      "items": {
        "$ref": "#/definitions/confDeliveryInfoType"
      }
    },
    "confDeliveryInfoType": {
      "type": "object",
      "properties": {
        "communicationType": {
          "description": "CommunicationType through which the confirmation letter was sent.",
          "$ref": "#/definitions/confDeliveryMethod"
        },
        "lastStatus": {
          "description": "Status of last sent confirmation.",
          "$ref": "#/definitions/sentConfirmationStatus"
        },
        "lastAttempted": {
          "description": "Date of last attempt to send confirmation letter.",
          "type": "string",
          "format": "date-time"
        },
        "successfulTries": {
          "description": "Number of success letter sent.",
          "type": "integer"
        }
      }
    },
    "confDeliveryMethod": {
      "type": "string",
      "enum": [
        "Print",
        "Email",
        "Fax",
        "Text",
        "NotConfigured"
      ]
    },
    "sentConfirmationStatus": {
      "type": "string",
      "enum": [
        "Pending",
        "Succeeded",
        "Failed"
      ]
    },
    "confirmationStyle": {
      "type": "object",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "style": {
          "description": "Name of the confirmation letter style.",
          "type": "string"
        }
      }
    },
    "callHistoryType": {
      "type": "array",
      "description": "Holds call information.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/callType"
      }
    },
    "callType": {
      "type": "object",
      "description": "Holds call information.",
      "properties": {
        "dateTimeSpan": {
          "description": "Call Time Span. Start Date and End Date is used for the Call duration.",
          "$ref": "#/definitions/dateTimeSpanType"
        },
        "caller": {
          "description": "Holds caller information.",
          "$ref": "#/definitions/callerType"
        },
        "reservation": {
          "description": "Holds Reservation Id and Hotel Code.",
          "type": "object",
          "properties": {
            "reservationIdList": {
              "description": "Holds Reservation related Ids.",
              "$ref": "#/definitions/reservationIdList"
            },
            "hotelId": {
              "description": "Holds Hotel Code.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            }
          }
        },
        "turnawayCode": {
          "description": "Call turn away code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "comments": {
          "description": "Call comments.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "callerType": {
      "type": "object",
      "description": "Holds caller information.",
      "properties": {
        "givenName": {
          "description": "Caller First Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 280
        },
        "surname": {
          "description": "Caller Last Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "phone": {
          "description": "Caller Phone Number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "email": {
          "description": "Caller Email.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "fax": {
          "description": "Caller Fax Number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "fixedChargesType": {
      "type": "array",
      "description": "Holds fixed charge detail.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fixedChargeType"
      }
    },
    "fixedChargeType": {
      "type": "object",
      "description": "Holds fixed charge information.",
      "properties": {
        "schedule": {
          "description": "Holds schedule of fixed charge.",
          "$ref": "#/definitions/fixedChargeScheduleType"
        },
        "charge": {
          "description": "Holds specific details of fixed charge.",
          "$ref": "#/definitions/fixedChargeDetailType"
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "fixedChargeScheduleType": {
      "type": "object",
      "description": "Holds schedule of fixed charge.",
      "properties": {
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "frequency": {
          "description": "Frequency of a fixed charge.",
          "$ref": "#/definitions/fixedChargeFrequencyType"
        },
        "dayToExecute": {
          "description": "Day of when to execute fixed charge. Applicable when frequency is Daily or Weekly.",
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "dateToExecute": {
          "description": "Date of when to execute yearly fixed charge. Applicable when frequency is Yearly.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "fixedChargeFrequencyType": {
      "type": "string",
      "description": "Yearly.",
      "enum": [
        "O",
        "D",
        "W",
        "M",
        "Q",
        "Y"
      ]
    },
    "fixedChargeDetailType": {
      "type": "object",
      "description": "Fixed charge amount could be specified by flat fee or be a percentage of the rate amount.",
      "properties": {
        "transaction": {
          "description": "Transaction code and description of a fixed charge.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "quantity": {
          "description": "Quantity of the product.",
          "type": "integer"
        },
        "chargeAmount": {
          "description": "Price of the product.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "percent": {
          "description": "Percentage of the rate amount.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "supplement": {
          "description": "Additional information regarding the fixed charge.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "article": {
          "description": "Holds related article code and description.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "roomNights": {
          "description": "Holds number of comp or cash room night to allocate.",
          "type": "integer"
        }
      }
    },
    "guestMessagesType": {
      "type": "array",
      "description": "Holds the Message Information",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/guestMessageType"
      }
    },
    "guestMessageType": {
      "type": "object",
      "description": "Holds the Message information for a Reservation",
      "properties": {
        "message": {
          "description": "Holds the Message Information",
          "$ref": "#/definitions/messageType"
        },
        "delivery": {
          "description": "Holds the Delivery Method Information",
          "$ref": "#/definitions/messageDeliveryType"
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "messageType": {
      "type": "object",
      "description": "Holds the Message Information",
      "properties": {
        "messageText": {
          "description": "Message Content",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "messageDate": {
          "description": "Date the message was created",
          "type": "string",
          "format": "date-time"
        },
        "typeOfMessage": {
          "description": "Type of message (Voice/Text)",
          "$ref": "#/definitions/typeOfMessageType"
        },
        "recipient": {
          "description": "Recipient of the Message",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "operator": {
          "description": "User who created the Message",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "typeOfMessageType": {
      "type": "string",
      "description": "The type of Message for Guest Messages.",
      "enum": [
        "Tm",
        "Vm"
      ]
    },
    "messageDeliveryType": {
      "type": "object",
      "description": "Holds the Delivery Information of the Message",
      "properties": {
        "deliveryStatus": {
          "description": "Status of the Message (Received or Not Received)",
          "$ref": "#/definitions/messageStatusType"
        },
        "deliveryDate": {
          "description": "Date the message has been delivered (marked as received)",
          "type": "string",
          "format": "date-time"
        },
        "deliveredBy": {
          "description": "User who delivered the message (who marked message as received)",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "printDate": {
          "description": "Date when message has been printed",
          "type": "string",
          "format": "date-time"
        },
        "textMessageSentDate": {
          "description": "Date when message has been sent via SMS",
          "type": "string",
          "format": "date-time"
        },
        "textMessageSentBy": {
          "description": "User who sent the message",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "textMessageSentById": {
          "description": "User Id of who sent the message",
          "type": "integer"
        },
        "textMessageRecipientNo": {
          "description": "Number in which the message is to be sent.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "messageStatusType": {
      "type": "string",
      "description": "Status of the Message.",
      "enum": [
        "Mr",
        "Nr"
      ]
    },
    "overrideInstructionsType": {
      "type": "array",
      "description": "List of override actions done.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/overrideInstructionType"
      }
    },
    "overrideInstructionType": {
      "type": "object",
      "description": "Type for Overrides. Contains information for the override action performed while booking a reservation.",
      "properties": {
        "description": {
          "description": "The description of the restriction for which the override was done.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "date": {
          "description": "The date when the override was done.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "type": {
          "description": "The type of override done. If done for Availability, then it will be AVAILABILITY.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "userId": {
          "description": "Login ID of the user who performed the override.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "reasonCode": {
          "description": "The override reason code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reasonDescription": {
          "description": "The override reason description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "eCouponsType": {
      "type": "array",
      "description": "Collection of ECouponType object.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/eCouponType"
      }
    },
    "eCouponType": {
      "type": "object",
      "description": "Reservation eCoupon Type Information.",
      "properties": {
        "eCouponId": {
          "description": "ECouponID to attach the eCoupon to Reservation.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "code": {
          "description": "Code to attach the eCoupon to Reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the eCoupon attached to the Reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "autoAttached": {
          "description": "Determines whether the eCoupon is attached through the Rate Code or not.",
          "type": "boolean"
        },
        "issuedQuantity": {
          "description": "Assigned Quantity for the eCoupon when attached to Reservation.",
          "type": "integer"
        },
        "usedQuantity": {
          "description": "Used Quantity of the eCoupon for the Reservation.",
          "type": "integer"
        },
        "reason": {
          "description": "Reason for attaching/modifing eCoupon.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "ratePlanCode": {
          "description": "Rate plan of the attached eCoupon to Reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "welcomeOffer": {
          "description": "Determines whether this eCoupon is eligible for welcome offer or not.",
          "type": "boolean"
        }
      }
    },
    "reservationTransactionDiversionsType": {
      "type": "array",
      "description": "List of Transaction Diversion rules.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationTransactionDiversionType"
      }
    },
    "reservationTransactionDiversionType": {
      "type": "object",
      "description": "A Transaction Diversion Rule Type",
      "properties": {
        "vipCode": {
          "description": "VIP code to consider while applying Diversion Instruction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "membership": {
          "description": "Membership type to consider while applying Diversion Instruction.",
          "$ref": "#/definitions/membershipTypeLevelType"
        },
        "targetRoom": {
          "description": "Room number to receive all the diverted transactions configured for this instruction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionCodes": {
          "description": "Collection of Transaction Code List",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeDescriptionType"
          }
        },
        "description": {
          "description": "User defined message for the Transaction Diversion Rule.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "level": {
          "description": "Level of the Transaction Diversion rule that can be Property or Reservation.",
          "$ref": "#/definitions/transactionDiversionRuleLevelType"
        },
        "thresholds": {
          "description": "Threshold Details related to the Transaction diversion rule.",
          "$ref": "#/definitions/thresholdDetailsType"
        },
        "type": {
          "description": "Transaction Diversion Rule Types",
          "$ref": "#/definitions/transactionDiversionRuleTypeType"
        },
        "hotelId": {
          "description": "Hotel code with which Transaction Diversion Rule is associated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Transaction Diversion Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "displaySequence": {
          "description": "User configured Sequence number.",
          "type": "number"
        },
        "inactive": {
          "description": "Indicator that tells whether the transaction diversion rule is active or not.",
          "type": "boolean"
        },
        "notes": {
          "description": "The Note details related to the Transaction Diversion Rule.",
          "$ref": "#/definitions/commentInfoType"
        },
        "posted": {
          "description": "Transaction diversions that are posted.",
          "type": "integer"
        },
        "diverted": {
          "description": "Transaction diversions that are diverted .",
          "type": "integer"
        },
        "dailyDetails": {
          "description": "Collection of daily details of a Transaction diversion rule for a particular reservation.",
          "$ref": "#/definitions/transactionDiversionDailyDetailsType"
        }
      }
    },
    "membershipTypeLevelType": {
      "type": "object",
      "properties": {
        "type": {
          "description": "Code type for Rule Details",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "level": {
          "description": "Description type for Rule Details",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "transactionDiversionRuleLevelType": {
      "type": "string",
      "description": "Reservation level.",
      "enum": [
        "Property",
        "Reservation"
      ]
    },
    "thresholdDetailsType": {
      "type": "object",
      "description": "Type for the threshold elements.",
      "properties": {
        "entity": {
          "description": "Diversion entity type associated with the charge for the transaction diversion rule .",
          "$ref": "#/definitions/entityType"
        },
        "scope": {
          "description": "Diversion scope for the transaction diversion rule.",
          "$ref": "#/definitions/scopeType"
        },
        "minRequired": {
          "description": "Minimum required number of quantities, counts or minutes that must be posted.",
          "type": "integer"
        },
        "complimentary": {
          "description": "The number of quantities, counts or minutes for which transaction diversion is allowed .",
          "type": "integer"
        },
        "isEditable": {
          "description": "Configuring this flag to be TRUE will make the thresholds editable.",
          "type": "boolean"
        }
      }
    },
    "entityType": {
      "type": "string",
      "description": "Indicates the rule is based on Minutes associated with the charge.",
      "enum": [
        "ThresholdCount",
        "ThresholdQuantity",
        "ThresholdMinutes"
      ]
    },
    "scopeType": {
      "type": "string",
      "description": "Minimum required and complimentary values are applicable Per Stay.",
      "enum": [
        "PerDay",
        "PerStay"
      ]
    },
    "transactionDiversionRuleTypeType": {
      "type": "string",
      "description": "The rule type on which the Transaction Diversion Rule is based. If a reservation has any of the following code, Transaction Diversion rule gets active for that reservation",
      "enum": [
        "Vip",
        "Membership"
      ]
    },
    "transactionDiversionDailyDetailsType": {
      "type": "array",
      "description": "List of daily details for Transaction Diversion rule.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/transactionDiversionDailyDetailType"
      }
    },
    "transactionDiversionDailyDetailType": {
      "type": "object",
      "description": "List of daily details for Transaction Diversion rule.",
      "properties": {
        "posted": {
          "description": "Transaction diversion rules that are posted.",
          "type": "integer"
        },
        "diverted": {
          "description": "Transaction diversion rules that are diverted .",
          "type": "integer"
        },
        "date": {
          "description": "Daily details Date about when the rules are posted or diverted.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "ticketsType": {
      "type": "array",
      "description": "Collection of TicketType objects.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/ticketType"
      }
    },
    "ticketType": {
      "type": "object",
      "description": "Reservation Ticket Type Information.",
      "properties": {
        "ticketId": {
          "description": "Internal Unique ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "packageCode": {
          "description": "Package Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationProductId": {
          "description": "Reference to the reservation product.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "ticketNumber": {
          "description": "Ticket number.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "description": {
          "description": "Package description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "issueDate": {
          "description": "Tickets issue date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "price": {
          "description": "Tickets price.",
          "type": "number"
        },
        "consumptionDate": {
          "description": "Tickets comsumption date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "rateCode": {
          "description": "The Rate Code to which tickets belong to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "quantity": {
          "description": "Number of tickets used to create multiple tickets.",
          "type": "integer"
        },
        "reference": {
          "description": "Free text field for reference information.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "status": {
          "description": "The Status Code for outbound WS call.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "statusDescription": {
          "description": "The Status Description for outbound WS call.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "reservationECertificatesType": {
      "type": "array",
      "description": "Collection of ECertificateType object.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationECertificateType"
      }
    },
    "reservationECertificateType": {
      "type": "object",
      "description": "Reservation ECertificate Type Information.",
      "properties": {
        "eCertificateNo": {
          "description": "ECertificate Number for the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "actionType": {
          "description": "ECertificate status for the reservation.",
          "$ref": "#/definitions/requestActionType"
        },
        "eCertificateType": {
          "description": "ECertificate Type where value can be PROMOTION,AWARD,BENEFIT and OTHER",
          "$ref": "#/definitions/eCertificateClassficationType"
        }
      }
    },
    "requestActionType": {
      "type": "string",
      "enum": [
        "Create",
        "Remove",
        "Query"
      ]
    },
    "eCertificateClassficationType": {
      "type": "string",
      "description": "Enumeration of the different type of Ecertificate.",
      "enum": [
        "Promotion",
        "Award",
        "Benefit",
        "Other"
      ]
    },
    "nameValueDetailType": {
      "type": "object",
      "description": "Detailed information returned during name value search.",
      "properties": {
        "nameValues": {
          "description": "Name Value List.",
          "$ref": "#/definitions/nameValuesType"
        }
      }
    },
    "nameValuesType": {
      "type": "array",
      "description": "List of name value pairs.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/nameValueType"
      }
    },
    "nameValueType": {
      "type": "object",
      "description": "Contains name value pair.",
      "properties": {
        "name": {
          "description": "Contains unique key which represents for record field.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "value": {
          "description": "Contains value for the record/column.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "formatString": {
          "description": "Contains format string for values.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "dataType": {
          "description": "Contains data type for values.",
          "$ref": "#/definitions/nameValueDataTypeType"
        },
        "origin": {
          "description": "Contains Origin information.",
          "$ref": "#/definitions/nameValueOriginType"
        },
        "usageInstruction": {
          "description": "Contains value(s) to identify the reports to include the collected information in e.g. PFH=Print Folio Header, PFD=Print Folio Detail.",
          "$ref": "#/definitions/codeListType"
        }
      }
    },
    "nameValueDataTypeType": {
      "type": "string",
      "enum": [
        "String",
        "Number",
        "Date",
        "Datetime",
        "Time",
        "Integer"
      ]
    },
    "nameValueOriginType": {
      "type": "object",
      "description": "Contains origin details.",
      "properties": {
        "originName": {
          "description": "Contains origin i.e. Reseravtion, Profile, Folio or FinTrx.",
          "$ref": "#/definitions/nameValueModuleType"
        },
        "destination": {
          "description": "Contains destination column for Origin.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "nameValueModuleType": {
      "type": "string",
      "enum": [
        "Reservation",
        "Folio",
        "Profile",
        "Fintrix"
      ]
    },
    "customChargeExemptionsType": {
      "type": "array",
      "description": "List of Custom Charge Exemptions.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/customChargeExemptionType"
      }
    },
    "customChargeExemptionType": {
      "type": "object",
      "description": "Contains custom charges exemption information.",
      "properties": {
        "customChargesExemption": {
          "description": "Contains exemption code and description.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "customChargeQuantity": {
          "description": "Contains exemption quantity for the stay. When this value is configured, daily exemption quantities are not permitted.",
          "$ref": "#/definitions/customChargeQuantityType"
        },
        "customChargeDates": {
          "description": "Contains exemption detail information for each date.",
          "$ref": "#/definitions/customChargeExemptionDatesType"
        },
        "excludedDates": {
          "description": "Contains list of dates which are not valid for custom charge exemptions.",
          "$ref": "#/definitions/excludedDatesType"
        },
        "percentage": {
          "description": "Exemption Percentage",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "propertyExemption": {
          "description": "Flag specifying if custom charge exemptions is property level or not.",
          "type": "boolean"
        }
      }
    },
    "customChargeQuantityType": {
      "type": "object",
      "description": "Contains quantity of custom charge exemptions.",
      "properties": {
        "quantity": {
          "description": "Contains number of Custom Charge Exemption for a day.",
          "type": "integer"
        },
        "available": {
          "description": "Indicates if Custom Charges Exemption information is editable.",
          "type": "boolean"
        }
      }
    },
    "customChargeExemptionDatesType": {
      "type": "array",
      "description": "Contains List of Custom Charge Exemption information for a day.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/customChargeExemptionDateType"
      }
    },
    "customChargeExemptionDateType": {
      "type": "object",
      "description": "Contains Custom Charge Exemption information for a day.",
      "properties": {
        "date": {
          "description": "Contains Custom Charge Exemption date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "quantity": {
          "description": "Contains number of Custom Charge Exemption for a day.",
          "type": "integer"
        }
      }
    },
    "excludedDatesType": {
      "type": "array",
      "description": "Contains list of dates which are valid for custom charge exemptions.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/excludedDateType"
      }
    },
    "excludedDateType": {
      "type": "object",
      "description": "Specifies all the enabled dates.",
      "properties": {
        "date": {
          "description": "Contains exclusion date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reason": {
          "description": "Contains reason for exclusion.",
          "$ref": "#/definitions/exclusionReasonType"
        }
      }
    },
    "exclusionReasonType": {
      "type": "string",
      "description": "Custom Charge has already been Processed for this date within the reservation stay.",
      "enum": [
        "NotConfigured",
        "CustomChargeProcessed"
      ]
    },
    "foliosShortInfoType": {
      "type": "array",
      "description": "This type contains a list of generated bills for a reservation.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/folioShortInfoType"
      }
    },
    "folioShortInfoType": {
      "type": "object",
      "description": "This type contains information of generated bills.",
      "properties": {
        "folioNo": {
          "description": "Folio No of the bill generated.",
          "type": "number"
        },
        "folioType": {
          "description": "Folio type of the bill generated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "folioView": {
          "description": "The folio window where the settlement is applied.",
          "type": "integer"
        },
        "autoGenerated": {
          "description": "Flag to indicate if the folio is auto generated or not.",
          "type": "boolean"
        },
        "internalFolioWindowID": {
          "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "invoiceNo": {
          "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
          "type": "number"
        },
        "folioDate": {
          "description": "Date of Folio Generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "folioStatus": {
          "$ref": "#/definitions/folioStatusType"
        }
      }
    },
    "folioStatusType": {
      "type": "string",
      "description": "The Folio Status Example: DEPOSIT folio, VOID folio or the default OK folio status.",
      "enum": [
        "Deposit",
        "Void",
        "Ok",
        "Zero",
        "Compress",
        "Converted",
        "Internal"
      ]
    },
    "commissionNotesDetails": {
      "type": "object",
      "description": "Response type for fetching commission notes.",
      "properties": {
        "hotelId": {
          "description": "Property code against which commissions notes are fetched.",
          "$ref": "#/definitions/codeType"
        },
        "reservationId": {
          "description": "Reservation Id for which the commission notes are fetched.",
          "$ref": "#/definitions/reservationId"
        },
        "commissionNotesList": {
          "description": "List of commission notes for reservation.",
          "$ref": "#/definitions/commissionNotesListType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commissionNotesListType": {
      "type": "array",
      "description": "Commission Note for the reservation.",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "minLength": 0,
        "maxLength": 2000
      }
    },
    "linkedReservations": {
      "type": "object",
      "properties": {
        "linkedReservationList": {
          "description": "Set of reservations linked to the requested Reservation.",
          "$ref": "#/definitions/linkedReservationsInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "room": {
      "type": "object",
      "description": "The reservation must still be reserved to use this operation.",
      "properties": {
        "criteria": {
          "description": "Criteria for assigning a room to a reservation.",
          "$ref": "#/definitions/reservationRoomSelectionType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationRoomSelectionType": {
      "type": "object",
      "description": "Defines search criteria needed to configure a room to a reservation.",
      "properties": {
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationIdList": {
          "$ref": "#/definitions/reservationIdList"
        },
        "roomId": {
          "description": "Room identifier which the reservation will hold.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "overrideInstructions": {
          "description": "If this element is present, override flags will be set when configuring the room to the reservation.",
          "$ref": "#/definitions/reservationRoomSelectionOverrideType"
        },
        "includedBackToBack": {
          "description": "This list contains the Reservation IDs of the Back to Back Reservations that will be assigned to the same room. Back to Back Reservation functionality is available when the Back to Back Handling of Linked Reservations OPERA Control is active.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationIdList"
          }
        },
        "includedSharers": {
          "description": "Valid share reservation identifier.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationIdList"
          }
        },
        "updateRoomTypeCharged": {
          "description": "Update the Room Type used for the Rate calculation.",
          "type": "boolean"
        },
        "includeDepartureRooms": {
          "description": "Indicates if departure rooms are to be included for room assignment.",
          "type": "boolean"
        },
        "roomNumberLocked": {
          "description": "Update the do not move flag used to locking the reservation room number.",
          "type": "boolean"
        },
        "orderBy": {
          "description": "When Forecast Rotation is checked, future reservation's point calculation will be considered while determing the room order for the assignment.",
          "$ref": "#/definitions/hotelRoomsOrderBy"
        },
        "scheduledRoomSegmentNumber": {
          "description": "Indicates the Room Segment number the room is assigned to.",
          "type": "number"
        },
        "roomSegmentBeginDate": {
          "type": "string",
          "description": "Defines the start date of the room segment of the reservation.Room segments/scheduled room move functionality is available when the Advanced Daily Details OPERA Control is active.",
          "format": "date"
        },
        "roomSegmentEndDate": {
          "type": "string",
          "description": "Defines the end date of the room segment of the reservation.Room segments/scheduled room move functionality is available when the Advanced Daily Details OPERA Control is active.",
          "format": "date"
        }
      }
    },
    "reservationRoomSelectionOverrideType": {
      "type": "object",
      "description": "Define the override flag which will be used when configuring a room to a reservation.",
      "properties": {
        "dirtyRoom": {
          "description": "Override the room selection even if the selected room has a \"dirty\" state.",
          "type": "boolean"
        },
        "outOfServiceRoom": {
          "description": "Override the room selection even if the selected room has an \"out-of-service\" state.",
          "type": "boolean"
        },
        "sleepDiscrepantRoom": {
          "description": "Override the room selection even when HouseKeeping configured the room to still be occupied.",
          "type": "boolean"
        },
        "occupancyRestriction": {
          "description": "Override the room selection even when room occupancy is exceeded.",
          "type": "boolean"
        },
        "rateRestriction": {
          "description": "Override the room selection even when there is rate restriction present for this room type.",
          "type": "boolean"
        },
        "inventoryRestriction": {
          "description": "Override the room selection even when there is no inventory.",
          "type": "boolean"
        },
        "roomNumberLocked": {
          "description": "Override the room number locked flag in the database and use the value passed.",
          "type": "boolean"
        },
        "holdRoom": {
          "description": "Override the Hold Room flag in the database and use the value passed.",
          "type": "boolean"
        },
        "rateChange": {
          "description": "Defines override rate type.",
          "$ref": "#/definitions/rateChangeInstructionType"
        },
        "overrideExternalChecks": {
          "description": "Forcefully override update. For real-time CRS interfaces, this element is used as force selling indicator.",
          "type": "boolean"
        },
        "dayUseReserved": {
          "description": "If the current reservation is a Day Use, then check on Reserved rooms can be overridden when assigning rooms.",
          "type": "boolean"
        },
        "overrideInstruction": {
          "description": "Contains user information for the override action performed while booking a reservation.",
          "$ref": "#/definitions/overrideInstructionType"
        },
        "overrideRotationRoom": {
          "description": "Override the rotation room with the selected room when assigning rooms.",
          "type": "boolean"
        },
        "overrideRoomOwnership": {
          "description": "Override the room ownership indicator in the reservation when assigning rooms. This is applicable when Room Rotation OPERA Control is active.",
          "type": "boolean"
        },
        "roomOwnershipType": {
          "description": "Indicates if the reservation room is an owner or referral or regular room. This is applicable when Room Rotation OPERA Control is active.",
          "$ref": "#/definitions/reservationRoomOwnershipType"
        },
        "overrideRoomFeatures": {
          "description": "This flag indicates true/false. When this is true, it will allow to override the room feature preference validation while assigning rooms. The Reservation Room Features OPERA Control will determine which room feature preferences will be validated. When Reservation Room Features is on, the validation will be against the Room Feature preferences attached to the reservation. If the parameter is off, the validation will be against the room feature preferences attached to the profile. This is applicable when the Room Feature Validation OPERA Control is on.",
          "type": "boolean"
        },
        "skipDiscrepantRoom": {
          "description": "This flag indicates true/false. When it is true, you will be allowed to override the room selection for a skip discrepancy. This flag is available when the Discrepant Rooms OPERA Control is active.",
          "type": "boolean"
        }
      }
    },
    "rateChangeInstructionType": {
      "type": "object",
      "description": "Defines override rate type.",
      "properties": {
        "discount": {
          "description": "Discount percentage and/or amount, code and textual reason for discount.",
          "$ref": "#/definitions/discountType"
        },
        "rateChange": {
          "description": "Rate change type.",
          "$ref": "#/definitions/rateChangeType"
        }
      }
    },
    "rateChangeType": {
      "type": "string",
      "description": "Simple type for rate change type.",
      "enum": [
        "Verify",
        "OldRate",
        "NewRate"
      ]
    },
    "assignedRoom": {
      "type": "object",
      "description": "Possible errors that the operation will generate: The reservation is not in Reserved state. The room being requested does not exist.",
      "properties": {
        "oldRates": {
          "description": "Collection of old room rate information on a daily basis.",
          "$ref": "#/definitions/dailyRatesType"
        },
        "newRates": {
          "description": "Collection of new room rate information on a daily basis.",
          "$ref": "#/definitions/dailyRatesType"
        },
        "effectiveRates": {
          "description": "Collection of effective rates per stay dates per guest to be applied on reservation including its shares.",
          "$ref": "#/definitions/effectiveRatesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "dailyRatesType": {
      "type": "array",
      "description": "Defines room rate information on a daily basis.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/dailyRateType"
      }
    },
    "dailyRateType": {
      "type": "object",
      "description": "The total amount charged for the service including additional amounts and fees.",
      "properties": {
        "taxes": {
          "description": "A collection of taxes.",
          "$ref": "#/definitions/taxesType"
        },
        "fees": {
          "description": "A collection of fees or service charges.",
          "$ref": "#/definitions/feesType"
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "amountBeforeTax": {
          "description": "The total amount not including any associated tax (e.g., sales tax, VAT, GST or any associated tax).",
          "type": "number"
        },
        "amountAfterTax": {
          "description": "The total amount including all associated taxes (e.g., sales tax, VAT, GST or any associated tax).",
          "type": "number"
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "code": {
          "description": "Type of charge.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateOverride": {
          "description": "When true indicates that the rate amount has been overridden.",
          "type": "boolean"
        },
        "baseAmount": {
          "description": "The rate's base price. Amount excluding price for any add to rate combine line package attached to the rate.Also excludes any discounts",
          "type": "number"
        },
        "discount": {
          "description": "Room rate discount percentage or amount, code and textual reason for discount.",
          "$ref": "#/definitions/discountType"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "effectiveRatesType": {
      "type": "array",
      "description": "Collection of effective rate amount per guest on specific dates.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/effectiveRateType"
      }
    },
    "effectiveRateType": {
      "type": "object",
      "description": "Effective rate amount per guest on specific dates.",
      "properties": {
        "onePersonRate": {
          "description": "Rate amount for one person.",
          "type": "number"
        },
        "twoPersonRate": {
          "description": "Rate amount for two persons.",
          "type": "number"
        },
        "threePersonRate": {
          "description": "Rate amount for three persons.",
          "type": "number"
        },
        "fourPersonRate": {
          "description": "Rate amount for four persons.",
          "type": "number"
        },
        "fivePersonRate": {
          "description": "Rate amount for five persons.",
          "type": "number"
        },
        "extraPersonRate": {
          "description": "Rate amount for each extra person.",
          "type": "number"
        },
        "extraChildRate": {
          "description": "Rate amount for each extra Child.",
          "type": "number"
        },
        "oneChildRate": {
          "description": "Rate amount for one Child.",
          "type": "number"
        },
        "twoChildrenRate": {
          "description": "Rate amount for two Children.",
          "type": "number"
        },
        "threeChildrenRate": {
          "description": "Rate amount for three Children.",
          "type": "number"
        },
        "fourChildrenRate": {
          "description": "Rate amount for four Children.",
          "type": "number"
        },
        "rateByAgeBuckets": {
          "description": "Collection of rate amount by age bracket.",
          "$ref": "#/definitions/rateByAgeBucketsType"
        },
        "minimumChildrenForFreeStay": {
          "description": "Minimum number of children needed to get free stay.",
          "type": "integer"
        },
        "pointsRequired": {
          "description": "The number of award points required for applying this rate plan schedule.",
          "type": "number"
        },
        "overrideFloorAmount": {
          "description": "true if floor amount needs to be override",
          "type": "boolean"
        },
        "hotelId": {
          "description": "",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCode": {
          "description": "",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "description": "",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "numberOfRooms": {
          "description": "",
          "type": "integer"
        },
        "amountBeforeTax": {
          "description": "Rate amount Before Tax.",
          "type": "number"
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "rateByAgeBucketsType": {
      "type": "array",
      "description": "Rate amount by age bucket.",
      "maxItems": 3,
      "items": {
        "$ref": "#/definitions/rateByAgeBucketType"
      }
    },
    "rateByAgeBucketType": {
      "type": "object",
      "description": "Rate amount by age bucket.",
      "properties": {
        "rateAmount": {
          "description": "Rate amount by age bucket.",
          "type": "number"
        },
        "minimumAge": {
          "description": "Minimum age for age bucket.",
          "type": "integer"
        },
        "maximumAge": {
          "description": "Maximum age for age bucket.",
          "type": "integer"
        }
      }
    },
    "roomKeyInfo": {
      "type": "object",
      "description": "Response of fetch room keys operation.",
      "properties": {
        "totalAuthorization": {
          "description": "Total Authorization on a reservation.",
          "type": "number"
        },
        "incidentalLimit": {
          "description": "Incidental limit on a reservation.",
          "type": "number"
        },
        "roomKeysInfoList": {
          "description": "Collection of Room Keys information.",
          "$ref": "#/definitions/roomKeysInfoListType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomKeysInfoListType": {
      "type": "array",
      "description": "Contains details of Room key.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomKeyInfoType"
      }
    },
    "roomKeyInfoType": {
      "type": "object",
      "description": "Contains detail information of room keys .",
      "properties": {
        "hotelId": {
          "description": "Name of the resort .",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "keyCount": {
          "description": "Number of keys has been created for the reservation .",
          "type": "string",
          "minLength": 1,
          "maxLength": 3
        },
        "keyStartDate": {
          "description": "Start date and time of the key.",
          "type": "string",
          "format": "date-time"
        },
        "keyExpiryDate": {
          "description": "Expiry date and time of the key.",
          "type": "string",
          "format": "date-time"
        },
        "keyPin": {
          "description": "PIN provided in keyTrack3 from the Door Lock System that is used to unlock a room. This is supported when Key Pin handling is active for the property and the Door Lock System in use.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "keyOptions": {
          "description": "Key options of the key.",
          "$ref": "#/definitions/codeListType"
        },
        "additionalRooms": {
          "description": "Additional rooms included in the key creation of reservation room.",
          "$ref": "#/definitions/codeListType"
        },
        "roomId": {
          "description": "Room Number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "Reservation ID of the reservation of the room key .",
          "$ref": "#/definitions/reservationId"
        },
        "keyTrack": {
          "description": "KeyTrack Data.",
          "$ref": "#/definitions/keyTrackType"
        },
        "guestInfo": {
          "description": "Guest information on the key. This information is available when multiple_guest_key is active.",
          "$ref": "#/definitions/roomKeyGuest"
        },
        "backToBackKey": {
          "description": "Flag indicates whether the key is back to back.",
          "type": "boolean"
        }
      }
    },
    "keyTrackType": {
      "type": "object",
      "properties": {
        "keyTrack1": {
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "keyTrack2": {
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "keyTrack3": {
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "keyTrack4": {
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "roomKey": {
      "type": "object",
      "description": "Request for generation of room key.",
      "properties": {
        "reservationIdList": {
          "description": "Collection of unique reservation identifiers for the reservation we are trying to make a room key for.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "roomNumber": {
          "description": "A room number to generate a key for. When creating keys using just the room number, the interface may allow only one-shot keys.",
          "type": "string",
          "maxLength": 2000
        },
        "originalRoomNumber": {
          "description": "Old Room Number is used when a room move is performed.",
          "type": "string",
          "maxLength": 2000
        },
        "keyTrack": {
          "description": "KeyTrack Data.",
          "$ref": "#/definitions/keyTrackType"
        },
        "resort": {
          "type": "string",
          "maxLength": 2000
        },
        "noOfKeys": {
          "type": "integer"
        },
        "keyValidityStart": {
          "type": "string",
          "format": "date-time"
        },
        "keyValidityEnd": {
          "type": "string",
          "format": "date-time"
        },
        "encoderTerminal": {
          "type": "string",
          "maxLength": 2000
        },
        "encoderId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "keyType": {
          "$ref": "#/definitions/roomKeyType"
        },
        "keyCardType": {
          "$ref": "#/definitions/keyCardType"
        },
        "keyCardUId": {
          "type": "string",
          "maxLength": 2000
        },
        "keyOptions": {
          "type": "string",
          "maxLength": 2000
        },
        "additionalRooms": {
          "description": "Collection of additional rooms to be included in key creation of reservation room.",
          "$ref": "#/definitions/codeListType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        },
        "roomKeyGuests": {
          "type": "array",
          "description": "Collection of of Room key guests for multiple guest room key functionality.",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomKeyGuest"
          }
        }
      }
    },
    "roomKeyType": {
      "type": "string",
      "description": "Simple type for representing room key type.",
      "enum": [
        "New",
        "Duplicate",
        "Lost",
        "OneShot",
        "RoomMove",
        "ReEncode",
        "Remove",
        "ModifyStay"
      ]
    },
    "keyCardType": {
      "type": "string",
      "description": "Key card types.",
      "enum": [
        "Mifare1K",
        "Mifare4K",
        "MifareUltralight"
      ]
    },
    "roomKeyDetails": {
      "type": "object",
      "description": "Response for room key creation.",
      "properties": {
        "keyCardData": {
          "type": "string",
          "maxLength": 2000
        },
        "keyTrack": {
          "description": "KeyTrack Data.",
          "$ref": "#/definitions/keyTrackType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomMoveHistory": {
      "type": "object",
      "description": "Response for the fetch room move history of a reservation.",
      "properties": {
        "roomMoveHistoryDetails": {
          "description": "List of room move history.",
          "$ref": "#/definitions/roomMoveDetailsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomMoveDetailsType": {
      "type": "array",
      "description": "List of room move details",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomMoveDetailType"
      }
    },
    "roomMoveDetailType": {
      "type": "object",
      "description": "Room move history information.",
      "properties": {
        "hotelId": {
          "description": "Identifies the hotel code under which room is moved.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "Unique identifier of the reservation.",
          "$ref": "#/definitions/reservationId"
        },
        "date": {
          "description": "Business date on which room is moved.",
          "type": "string",
          "format": "date-time"
        },
        "reasonCode": {
          "description": "Identifies the room move reason code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of why room is moved.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "fromRoom": {
          "description": "Room from which guest is moved.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "toRoom": {
          "description": "Room to which guest is moved.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "movedBy": {
          "description": "The user who moved the guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        }
      }
    },
    "unAssignRoomCriteria": {
      "type": "object",
      "description": "Request to the remove a room(unassign) from a reserved reservation.",
      "properties": {
        "overrideRoomNumberLocked": {
          "description": "Criteria for removing the room from a reservation.",
          "type": "boolean"
        },
        "overrideRoomOwnership": {
          "description": "Override the room ownership indicator in the reservation when removing rooms. This is applicable when Room Rotation OPERA Control is active.",
          "type": "boolean"
        },
        "roomSegmentBeginDate": {
          "type": "string",
          "description": "Defines the start date of the room segment of the reservation.Room segments/scheduled room move functionality is available when the Advanced Daily Details OPERA Control is active.",
          "format": "date"
        },
        "roomSegmentEndDate": {
          "type": "string",
          "description": "Defines the end date of the room segment of the reservation.Room segments/scheduled room move functionality is available when the Advanced Daily Details OPERA Control is active.",
          "format": "date"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "unAssignedRoom": {
      "type": "object",
      "description": "Response Body.",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "moveInHouseGuest": {
      "type": "object",
      "description": "To move a reservation, the reservation needs to be in Checked-In state.",
      "properties": {
        "criteria": {
          "description": "Defines search criteria needed to configure a room to a reservation.",
          "type": "object",
          "properties": {
            "hotelId": {
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "reservationIdList": {
              "$ref": "#/definitions/reservationIdList"
            },
            "roomId": {
              "description": "Room identifier which the reservation will hold.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "overrideInstructions": {
              "description": "If this element is present, override flags will be set when configuring the room to the reservation.",
              "$ref": "#/definitions/reservationRoomSelectionOverrideType"
            },
            "includedSharers": {
              "description": "Valid share reservation identifier.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/reservationIdList"
              }
            },
            "updateRoomTypeCharged": {
              "description": "Update the Room Type used for the Rate calculation.",
              "type": "boolean"
            },
            "includeDepartureRooms": {
              "description": "Indicates if departure rooms are to be included for room assignment.",
              "type": "boolean"
            },
            "roomNumberLocked": {
              "description": "Update the do not move flag used to locking the reservation room number.",
              "type": "boolean"
            },
            "oldRoomStatus": {
              "description": "On a successful RoomMove, this status will be configured in the reservation's previous room.",
              "$ref": "#/definitions/housekeepingRoomStatusType"
            },
            "reasonCode": {
              "description": "Identifies the room move reason code.",
              "$ref": "#/definitions/codeType"
            },
            "description": {
              "description": "Description of why room is moved.",
              "$ref": "#/definitions/stringLength2000"
            },
            "orderBy": {
              "description": "When Forecast Rotation is checked, future reservation's point calculation will be considered while determing the room order for the assignment.",
              "$ref": "#/definitions/hotelRoomsOrderBy"
            },
            "roomSegmentBeginDate": {
              "type": "string",
              "description": "Defines the start date of the room segment of the reservation.Room segments/scheduled room move functionality is available when the Advanced Daily Details OPERA Control is active.",
              "format": "date"
            },
            "roomSegmentEndDate": {
              "type": "string",
              "description": "Defines the end date of the room segment of the reservation.Room segments/scheduled room move functionality is available when the Advanced Daily Details OPERA Control is active.",
              "format": "date"
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "stringLength2000": {
      "type": "string",
      "description": "Used for Character Strings, length 0 to 2000.",
      "maxLength": 2000,
      "minLength": 0
    },
    "movedInHouseGuest": {
      "type": "object",
      "description": "Potential errors which this operation might respond are the following: - Reservation is NOT In-House. - The room is NON-EXISTENT for the hotel. - The room is NOT valid for usage based on its current state. - The room's occupancy level has been compromised. - The room's pricing is NOT available.",
      "properties": {
        "oldRates": {
          "description": "Collection of old room rate information on a daily basis.",
          "$ref": "#/definitions/dailyRatesType"
        },
        "newRates": {
          "description": "Collection of new room rate information on a daily basis.",
          "$ref": "#/definitions/dailyRatesType"
        },
        "effectiveRates": {
          "description": "Collection of effective rates per stay dates per guest to be applied on reservation including its shares.",
          "$ref": "#/definitions/effectiveRatesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "suggestedRooms": {
      "type": "object",
      "description": "Response of fetch suggested rooms operation.",
      "properties": {
        "suggestedRoomsType": {
          "description": "List of suggested rooms for room assignment.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/suggestedRoomType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "suggestedRoomType": {
      "type": "object",
      "description": "List of suggested rooms and component rooms.",
      "properties": {
        "componentRoomNumber": {
          "description": "List of component Room number belongs to a room.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "roomId": {
          "description": "Code of the room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "deliverQueueRoomsTextMessage": {
      "type": "object",
      "description": "Request to deliver a text message via Queue Reservations (for a guest) or Queue Rush (for housekeeping).",
      "properties": {
        "criteria": {
          "$ref": "#/definitions/queueRoomsTextCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "queueRoomsTextCriteriaType": {
      "type": "object",
      "description": "Text message criteria type, used to deliver a text message via Queue Reservations (to a guest) or Queue Rush (to housekeeping).",
      "properties": {
        "hotelId": {
          "description": "Resort context of the text message.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "Reservation ID, necessary if the text message will be delivered based on a queued reservation.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "mobileNumber": {
          "description": "Mobile number that the text message will be delivered to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "messageType": {
          "description": "Type of text message to be delivered.",
          "$ref": "#/definitions/queueRoomsTextMessageType"
        }
      }
    },
    "queueRoomsTextMessageType": {
      "type": "string",
      "description": "Text message will be delivered via Queue Rush, to housekeeping.",
      "enum": [
        "QueueReservation",
        "QueueRush"
      ]
    },
    "QueueRoomsTextMessage": {
      "type": "object",
      "description": "Response for delivering a text message via Queue Reservations (to a guest) or Queue Rush (to housekeeping).",
      "properties": {
        "guestTextInfo": {
          "description": "Information regarding the message sent to guest.",
          "$ref": "#/definitions/queueTextInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "verifiedCheckinReservation": {
      "type": "object",
      "properties": {
        "reservation": {
          "type": "array",
          "description": "Reservation record showing the current state of the reservation.",
          "items": {
            "$ref": "#/definitions/hotelReservationType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "wakeUpCalls": {
      "type": "object",
      "description": "Fetch wake up calls response.",
      "properties": {
        "calls": {
          "description": "List of the wake up calls.",
          "$ref": "#/definitions/wakeUpCallsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "wakeUpCallsType": {
      "type": "array",
      "description": "List of the wake up calls",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/wakeUpCallType"
      }
    },
    "wakeUpCallType": {
      "type": "object",
      "description": "Criteria to search and retrieve wake up calls.",
      "properties": {
        "reservationInfo": {
          "description": "Hotel room in which wake up call is to ring.",
          "$ref": "#/definitions/wakeUpCallResvInfoType"
        },
        "callTime": {
          "description": "Time on which wake up call is set.",
          "type": "string",
          "format": "date-time"
        },
        "followUpCallTime": {
          "description": "Follow up call time.",
          "type": "string",
          "format": "date-time"
        },
        "isFollowUpCall": {
          "description": "Is the call type follow up.",
          "type": "boolean"
        },
        "status": {
          "description": "Time on which wake up call is set.",
          "$ref": "#/definitions/wakeUpCallStatusType"
        },
        "processedDate": {
          "description": "Date on which wake up call was processed.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "processedTime": {
          "description": "Time on which wake up call was processed.",
          "type": "string"
        },
        "instructions": {
          "description": "Special instructions for the wake up call.",
          "type": "string"
        },
        "timeSpan": {
          "description": "Date Range to set the Wakeup calls. Only used to create a wake up call.",
          "$ref": "#/definitions/timeSpanType"
        },
        "newCallTime": {
          "description": "New Time on which wake up call is set. Used to change the Followup Call time",
          "type": "string",
          "format": "date-time"
        },
        "newFollowUpCallTime": {
          "description": "New Follow up call time.Used to change the Followup Call time.",
          "type": "string",
          "format": "date-time"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "wakeUpCallResvInfoType": {
      "type": "object",
      "description": "Criteria to search and retrieve wake up calls.",
      "properties": {
        "reservationIdList": {
          "description": "Collection of reservation identifiers like Reservation Name ID, Confirmation Number, etc.",
          "$ref": "#/definitions/reservationIdList"
        },
        "hotelId": {
          "description": "Hotel Code where wake up call is set.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "timezone": {
          "description": "Timezone of hotel.",
          "type": "string"
        },
        "guestName": {
          "description": "Guest Name.",
          "type": "string"
        },
        "profileId": {
          "description": "ID of the Guest profile.",
          "$ref": "#/definitions/profileId"
        },
        "vip": {
          "description": "Guest Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "membershipLevel": {
          "description": "Membership Level of the guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "membershipType": {
          "description": "Membership Type of the guest.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "arrival": {
          "description": "Reservation arrival date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "departure": {
          "description": "Reservation departure date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "room": {
          "description": "Hotel room in which wake up call is to ring.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomPhoneNumber": {
          "description": "Room phone number which wake up call is to ring.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "extensionNumber": {
          "description": "Room Phone Extension Number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "blockId": {
          "description": "Block id with which wake up call is associated.",
          "$ref": "#/definitions/blockId"
        },
        "blockCode": {
          "description": "Block code with which wake up call is associated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationStatus": {
          "description": "Indicates the Actual status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        }
      }
    },
    "wakeUpCallStatusType": {
      "type": "string",
      "description": "Statuses of the wake up call.",
      "enum": [
        "Completed",
        "NoAnswer",
        "Cancelled",
        "Pending"
      ]
    },
    "changedWakeUpCalls": {
      "type": "object",
      "description": "Response Body.",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomKeyStatus": {
      "type": "object",
      "description": "Respose for the reading of room key.",
      "properties": {
        "room": {
          "type": "string",
          "maxLength": 2000
        },
        "guestLastName": {
          "type": "string",
          "maxLength": 2000
        },
        "guestFirstName": {
          "type": "string",
          "maxLength": 2000
        },
        "validUntil": {
          "type": "string",
          "format": "date-time"
        },
        "keyOptions": {
          "type": "string",
          "maxLength": 2000
        },
        "guestDepartureDate": {
          "$ref": "#/definitions/dateRangeType"
        },
        "guestDepartureTime": {
          "$ref": "#/definitions/dateTimeRangeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "dateTimeRangeType": {
      "type": "object",
      "description": "Date Range with Start and End dates.",
      "properties": {
        "start": {
          "description": "The starting value of the time span.",
          "type": "string",
          "format": "date-time"
        },
        "end": {
          "description": "The ending value of the time span.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "hotelRooms": {
      "type": "object",
      "properties": {
        "hotelRoomsDetails": {
          "description": "Hotel rooms response based on criteria request.",
          "$ref": "#/definitions/hotelRoomsType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "holdRooms": {
      "type": "object",
      "description": "Request to place rooms on hold.",
      "properties": {
        "holdRoomsDetails": {
          "description": "List of rooms, hold reason, and comments.",
          "$ref": "#/definitions/roomsHoldsType"
        },
        "overrideRoomHold": {
          "description": "If trying to hold a room, which is held by a different user, then this flag will allow the current request to override that hold.",
          "type": "boolean"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomsHoldsType": {
      "type": "array",
      "description": "List of rooms, reason, and comments.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomsHoldType"
      }
    },
    "roomsHoldType": {
      "type": "object",
      "description": "Hold reason and the list of the rooms that are to be put on hold under that reason.",
      "properties": {
        "hotelId": {
          "description": "Resort where room hold is to take place.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rooms": {
          "description": "Collection of room numbers that are to be placed on hold.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "reason": {
          "description": "List of rooms that are to be put on hold.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "comments": {
          "description": "Comments to the rooms being put on hold.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "serviceRequestsInfo": {
      "type": "object",
      "description": "Response object for service requests.",
      "properties": {
        "serviceRequestsDetails": {
          "description": "List of service requests.",
          "$ref": "#/definitions/serviceRequests"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "queuedRoomsTextMessage": {
      "type": "object",
      "description": "Response for retrieving a predefined text message, for Queue Reservations or Queue Rush.",
      "properties": {
        "messageText": {
          "description": "Predefined message text, based on the message type defined in the request.",
          "$ref": "#/definitions/stringLength200"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationQueuePriorityNumber": {
      "type": "object",
      "description": "Request to change the current priority of a reservation in Queue for Check-In.",
      "properties": {
        "priority": {
          "description": "Priority which should be assigned to the reservation in Queue. If null, the topmost priority(1) will be assigned. All other reservations in the queue will be adjusted accordingly.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "shiftRooms": {
      "type": "object",
      "description": "To quickly shift rooms for two reservations that are for the same arrival date and room type",
      "properties": {
        "sourceRoom": {
          "description": "Source Room request which defines parameters needed to shift rooms.",
          "$ref": "#/definitions/stayRoominfo"
        },
        "targetRoom": {
          "description": "Target Room request which defines parameters needed to shift rooms.",
          "$ref": "#/definitions/stayRoominfo"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "swapRooms": {
      "type": "object",
      "description": "To quickly swap or shift rooms for two reservations that are for the same arrival date and room type",
      "properties": {
        "sourceRoom": {
          "description": "Source Room request which defines parameters needed to swap rooms.",
          "$ref": "#/definitions/stayRoominfo"
        },
        "targetRoom": {
          "description": "Target Room request which defines parameters needed to swap rooms.",
          "$ref": "#/definitions/stayRoominfo"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "stayRoominfo": {
      "type": "object",
      "description": "Request which contains parameters needed to swap or shift rooms",
      "properties": {
        "roomId": {
          "description": "Room identifier which the reservation will hold.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "arrivalDate": {
          "description": "Identifies Reservation arrival date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "roomType": {
          "description": "Identifies the reservations which are same room type/room category",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "roomStatusStatisticsListType": {
      "type": "object",
      "properties": {
        "roomStatusStatistics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/roomStatusStatisticsType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomStatusStatisticsType": {
      "type": "object",
      "properties": {
        "roomClass": {
          "type": "string"
        },
        "roomType": {
          "type": "string"
        },
        "frontOfficeStatus": {
          "type": "string"
        },
        "roomStats": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/roomStatusStatisticsCountType"
          }
        }
      }
    },
    "roomStatusStatisticsCountType": {
      "type": "object",
      "properties": {
        "housekeepingRoomStatus": {
          "type": "string"
        },
        "housekeepingRoomStatusCount": {
          "type": "integer"
        }
      }
    },
    "reservationDisplayColorInfoType": {
      "description": "Information of reservation display color, determined based on OPERA parameter RESERVATION_COLOR_DEFINITION ",
      "type": "object",
      "properties": {
        "displayColor": {
          "description": "Display Color of Reservation.",
          "$ref": "#/definitions/colorType"
        },
        "colorDefinition": {
          "description": "Definition populated based on OPERA setting RESERVATION_COLOR_DEFINITION.",
          "$ref": "#/definitions/colorDefinitionType"
        },
        "colorDescription": {
          "description": "Description populated based on DisplayColor.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "colorDefinitionType": {
      "type": "string",
      "description": "Color definition type. This color definition type is used to determine the defintion of color ",
      "enum": [
        "RESERVATION",
        "MARKET_CODE",
        "VIP_LEVEL",
        "MEMBERSHIP_LEVEL"
      ]
    },
    "roomKeyGuest": {
      "type": "object",
      "description": "Information about the guest for whom a key can be created.",
      "properties": {
        "firstName": {
          "description": "First Name of the guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "lastName": {
          "description": "Last Name of the guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "isAdult": {
          "description": "Flag to indicate wheter the guest is an Adult or a child.",
          "type": "boolean"
        },
        "originalBalance": {
          "description": "Original Balance on the Key card.",
          "type": "number"
        },
        "remainingBalance": {
          "description": "Remaining Balance on the Key card.",
          "type": "number"
        },
        "keyNumber": {
          "description": "Key Number of the card.",
          "type": "number"
        },
        "guestNameId": {
          "description": "Guest unique identifier to which the instruction will be routed.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "isInactive": {
          "description": "Flag to indicate wheter the guest is an Adult or a child.",
          "type": "boolean"
        },
        "guestKeyOptions": {
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        }
      }
    },
    "roomKeyMultipleGuests": {
      "type": "object",
      "description": "Short room key information containing  information about the multiple guests and room key options .",
      "properties": {
        "reservationIdList": {
          "description": "Collection of unique reservation identifiers for the reservation we are trying to make a room key for.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "roomNumber": {
          "description": "A room number to generate a key for. When creating keys using just the room number, the interface may allow only one-shot keys.",
          "type": "string",
          "maxLength": 2000
        },
        "keyOptions": {
          "type": "string",
          "maxLength": 2000
        },
        "roomKeyGuests": {
          "type": "array",
          "description": "Collection of of Room key guests for multiple guest room key functionality.",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomKeyGuest"
          }
        }
      }
    },
    "updateRoomKeys": {
      "type": "object",
      "description": "Collection of error and warning if any.",
      "properties": {
        "warnings": {
          "description": "Details of the warnings.",
          "$ref": "#/definitions/warningsType"
        },
        "errors": {
          "description": "Details of the errors.",
          "$ref": "#/definitions/errorsType"
        }
      }
    },
    "reservationRoomOwnershipType": {
      "type": "string",
      "description": "Indicates if the assigned reservation room is an Owner/Referral or Regular room.",
      "enum": [
        "Owner",
        "Referral",
        "Regular"
      ]
    },
    "commissionPaymentDetails": {
      "type": "object",
      "description": "Response to get the commission payment details.",
      "properties": {
        "commissionPaymentInfoList": {
          "type": "array",
          "description": "Defines list of commission payment info.",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/commissionPaymentInfo"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "commissionPaymentInfo": {
      "type": "object",
      "description": "Information on a commission payment for a reservation.",
      "properties": {
        "paymentId": {
          "type": "string",
          "description": "Payment id ",
          "minLength": 0,
          "maxLength": 2000
        },
        "paymentMethod": {
          "type": "string",
          "description": "Payment Method",
          "minLength": 0,
          "maxLength": 200
        },
        "commissionStatus": {
          "type": "string",
          "description": "Commission status",
          "minLength": 0,
          "maxLength": 200
        },
        "paymentDate": {
          "description": "The payment date",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "checkNo": {
          "description": "Check number for the payment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "commissionAmount": {
          "description": "Commission amount",
          "type": "number"
        },
        "batchId": {
          "type": "string",
          "description": "Batch Id for commission payment.",
          "minLength": 0,
          "maxLength": 2000
        },
        "remarks": {
          "type": "string",
          "description": "Remarks for the commission.",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "reservationStatusEnumType": {
      "type": "string",
      "description": "Reservation Status Enum Type",
      "enum": [
        "DueIn",
        "DueOut",
        "CheckedIn",
        "CheckedOut"
      ]
    },
    "reservationStatusStatisticsType": {
      "description": "Reservation Statistics for a Reservation Status",
      "type": "object",
      "properties": {
        "reservationStatus": {
          "description": "Reservation Status.",
          "$ref": "#/definitions/reservationStatusEnumType"
        },
        "total": {
          "description": "Number of reservations.",
          "type": "integer",
          "minimum": 0,
          "maximum": 4000
        },
        "roomClasses": {
          "type": "array",
          "description": "Reservation Statistics for each Room Class",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomClassStatisticsType"
          }
        }
      }
    },
    "reservationStatusStatisticsResponseType": {
      "type": "object",
      "description": "Reservation Status Statistics",
      "properties": {
        "reservationStatusStatistics": {
          "type": "array",
          "maxItems": 4,
          "description": "Statistics for each Reservation Status",
          "items": {
            "$ref": "#/definitions/reservationStatusStatisticsType"
          }
        }
      }
    },
    "roomTypeStatisticsType": {
      "description": "Reservation Statistics for a Room Type",
      "type": "object",
      "properties": {
        "roomType": {
          "description": "Room Type name. Available room types can be retrieved via /listOfValues/hotels/{hotelId}/roomTypes",
          "type": "string",
          "maxLength": 20
        },
        "total": {
          "description": "Number of reservations.",
          "type": "integer",
          "minimum": 0,
          "maximum": 4000
        }
      }
    },
    "roomClassStatisticsType": {
      "description": "Reservation Statistics for a Room Class",
      "type": "object",
      "properties": {
        "roomClass": {
          "description": "Room Class name. Available room classes can be retrieved via /listOfValues/hotels/{hotelId}/roomClasses",
          "type": "string",
          "maxLength": 20
        },
        "total": {
          "description": "Number of reservations.",
          "type": "integer",
          "minimum": 0,
          "maximum": 4000
        },
        "roomTypes": {
          "type": "array",
          "description": "Reservation Statistics for each Room Type",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomTypeStatisticsType"
          }
        }
      }
    },
    "hotelRoomsOrderBy": {
      "type": "string",
      "description": "This type is used to support various sortings for available rooms search results.",
      "enum": [
        "ForecastRotationPoints"
      ]
    },
    "airaLastRunStatusInfo": {
      "type": "object",
      "description": "Response of last execution status for AI Room Assignment",
      "properties": {
        "insertDate": {
          "description": "When the AI Room Assignment starts execution",
          "type": "string",
          "format": "date-time",
          "maxLength": 8
        },
        "updateDate": {
          "description": "Date time of updated status of an executions",
          "type": "string",
          "format": "date-time"
        },
        "actionValue": {
          "type": "string",
          "description": "Actual run status of an AI room assignment"
        },
        "runId": {
          "description": "Uniquely generated run-id for each execution of an algorithmn",
          "type": "string"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      }
    },
    "roomKeyOutBoundType": {
      "type": "string",
      "description": "Simple type for representing room key type.",
      "enum": [
        "New",
        "Duplicate",
        "Lost",
        "OneShot",
        "RoomMove",
        "ReEncode",
        "Remove",
        "ModifyStay",
        "Read"
      ]
    },
    "requestType": {
      "type": "string",
      "description": "Simple type for representing request type.",
      "enum": [
        "R1",
        "R2",
        "R3",
        "R4"
      ]
    },
    "roomKeyResponseCodeType": {
      "type": "string",
      "description": "Response Code",
      "enum": [
        "OK",
        "BY",
        "UR",
        "RY"
      ]
    },
    "roomKeyExternal": {
      "type": "object",
      "description": "Request for generation of room key used for OutBound.",
      "properties": {
        "encoderId": {
          "type": "string",
          "description": "Unique Id as defined by Door Lock System.",
          "minLength": 1,
          "maxLength": 2000
        },
        "encoderTerminal": {
          "type": "string",
          "description": "The Unique PMS encoder name linked with the encoderId",
          "minLength": 1,
          "maxLength": 2000
        },
        "roomId": {
          "description": "The PMS room number to generate a key for.",
          "type": "string",
          "maxLength": 2000
        },
        "oldRoomId": {
          "description": "Old Room Number is used when a room move (keyType RoomMove) is performed.",
          "type": "string",
          "maxLength": 2000
        },
        "noOfKeys": {
          "type": "integer",
          "description": "Number of keys to be created.The value is always 1",
          "minimum": 1,
          "maximum": 1,
          "default": 1
        },
        "reservationIdList": {
          "description": "Collection of unique reservation identifiers for the reservation we are trying to make a room key for.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "guestShareFlag": {
          "type": "boolean",
          "description": "Indicates if Guest is a sharer or not"
        },
        "OldGuestShareFlag": {
          "type": "boolean",
          "description": "Indicates if old Guest room is a sharer or not when a room move (keyType RoomMove) is performed."
        },
        "keyOptions": {
          "type": "string",
          "maxLength": 2000,
          "description": "Lists the access areas defined in PMS valid for the room key."
        },
        "keyValidityStart": {
          "type": "string",
          "description": "The date/time the room key is valid from.",
          "format": "date-time"
        },
        "keyValidityEnd": {
          "type": "string",
          "description": "The date/time the room key is valid to.",
          "format": "date-time"
        },
        "keyType": {
          "$ref": "#/definitions/roomKeyOutBoundType"
        },
        "keyTrack": {
          "description": "KeyTrack Data.",
          "$ref": "#/definitions/keyTrackType"
        },
        "outBoundCode": {
          "description": "OutBound Code of the Door Lock System (DLS).",
          "type": "string"
        },
        "additionalRooms": {
          "description": "Collection of additional rooms to be included in key creation of reservation room.",
          "type": "array",
          "maxItems": 999,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "oldAdditionalRooms": {
          "description": "Collection of old additional rooms in key creation of reservation room when a room move (keyType RoomMove) is performed.",
          "type": "array",
          "maxItems": 999,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "userId": {
          "type": "string",
          "description": "Unique identifier for the PMS user.",
          "maxLength": 2000
        },
        "requestType": {
          "$ref": "#/definitions/requestType"
        },
        "roomKeyGuests": {
          "type": "array",
          "description": "Collection of of Room key guests for multiple guest room key functionality.",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomKeyGuest"
          }
        }
      },
      "required": [
        "keyType",
        "encoderTerminal",
        "encoderId"
      ]
    },
    "roomKeyExternalDetails": {
      "type": "object",
      "description": "Response for the key request made to DLS from Opera PMS.",
      "properties": {
        "encoderId": {
          "type": "string",
          "description": "Unique Id as defined by Door Lock System.",
          "maxLength": 2000
        },
        "encoderTerminal": {
          "type": "string",
          "description": "The Unique PMS encoder name linked with the encoderId",
          "minLength": 1,
          "maxLength": 2000
        },
        "reservationIdList": {
          "description": "Collection of unique reservation identifiers for the reservation we are trying to make a room key for.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "roomId": {
          "description": "The PMS room number to generate a key for.",
          "type": "string",
          "maxLength": 2000
        },
        "keyTrack": {
          "description": "KeyTrack Data.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/keyTrackType"
          }
        },
        "keyOptions": {
          "type": "string",
          "maxLength": 200,
          "description": "Lists all PMS access areas - only send in response for keyType: 'Read' request"
        },
        "keyValidityStart": {
          "type": "string",
          "description": "Date/Time Key is valid from - only send in response for keyType: 'Read' request",
          "format": "date-time"
        },
        "keyValidityEnd": {
          "type": "string",
          "description": "Date/Time Key is valid to - only send in response for keyType: 'Read' request",
          "format": "date-time"
        },
        "responseText": {
          "type": "string",
          "description": "A user-friendly text with information on why a request is not successful",
          "maxLength": 2000
        },
        "responseCode": {
          "$ref": "#/definitions/roomKeyResponseCodeType"
        },
        "additionalRooms": {
          "description": "Collection of additional rooms to be included in key creation of reservation room.",
          "type": "array",
          "maxItems": 999,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        }
      },
      "required": [
        "roomId",
        "responseCode",
        "encoderTerminal"
      ]
    },
    "reservationKeyInfoType": {
      "type": "object",
      "description": "Holds the room key information provided by the Door Lock System.",
      "properties": {
        "keyPin": {
          "description": "PIN provided in keyTrack3 from the Door Lock System that is used to unlock a room. This is supported when Key Pin handling is active for the property and the Door Lock System in use.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "keyOptionsInfo": {
      "type": "object",
      "description": "Response of fetch keyOptions operation.",
      "properties": {
        "profileKeyOptions": {
          "type": "array",
          "description": "Key option preferences currently attached to a profile associated with the reservation.",
          "items": {
            "$ref": "#/definitions/profileKeyOptionsType"
          }
        },
        "reservationKeyOptions": {
          "type": "string",
          "description": "Key option preferences currently attached to the reservation.",
          "minLength": 0,
          "maxLength": 200
        },
        "roomKeyOptions": {
          "type": "string",
          "description": "Key option preferences currently attached to the room assigned to the reservation.",
          "minLength": 0,
          "maxLength": 200
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "profileKeyOptionsType": {
      "type": "object",
      "properties": {
        "profileId": {
          "type": "string",
          "description": "Unique profile Id attached to the reservation.",
          "minLength": 0,
          "maxLength": 200
        },
        "keyOptions": {
          "type": "string",
          "description": "Key option preferences of the specific profile Id attached to the reservation.",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "keyOptionsType": {
      "type": "object",
      "description": "This contains code and description information for key options.",
      "properties": {
        "keyOptionsCode": {
          "description": "key options code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "keyOptionDescription": {
          "description": "key options description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "externalRoomKeyType": {
      "type": "string",
      "description": "Simple type for representing room key request type. 'HardKey' = request for physical key card with RFID; 'MobileKey' = request for mobile key (no physical key); 'PinCode' = request for PinCode; 'KeyPayload' = request Key image from DLS System",
      "enum": [
        "HardKey",
        "MobileKey",
        "PinCode",
        "KeyPayload"
      ]
    },
    "keyUserType": {
      "type": "string",
      "description": "Simple type for representing key user type. 'Guest' = request Opera Guest room key",
      "enum": [
        "Guest"
      ]
    },
    "printDataType": {
      "type": "object",
      "description": "Lists the text, file or picture to print onto a Guest room key (only for roomKeyType is HardKey).",
      "properties": {
        "printText": {
          "description": "key options code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "printFile": {
          "description": "Base64 format of file representing data to print.",
          "type": "string",
          "format": "byte"
        },
        "printPicture": {
          "description": "Base64 format of picture representing data to print.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "keyOptionsResponseType": {
      "type": "object",
      "description": "This contains code and description information for key options.",
      "properties": {
        "keyOptionsCode": {
          "description": "key options code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "keyOptionDescription": {
          "description": "key options description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "isEnabled": {
          "description": "Indicates that the keyOption is enabled for this key.",
          "type": "boolean"
        },
        "default": {
          "description": "Indicates that this keyOption is a default access.",
          "type": "boolean"
        }
      }
    },
    "roomKeysExternal": {
      "type": "object",
      "description": "Request for generation of room key used for OutBound.",
      "properties": {
        "encoderId": {
          "type": "string",
          "description": "Unique Id as defined by Door Lock System.",
          "minLength": 1,
          "maxLength": 2000
        },
        "encoderTerminal": {
          "type": "string",
          "description": "The Unique PMS encoder name linked with the encoderId",
          "minLength": 1,
          "maxLength": 2000
        },
        "roomId": {
          "description": "The PMS room number to generate a key for.",
          "type": "string",
          "maxLength": 2000
        },
        "oldRoomId": {
          "description": "Old Room Number is used when a room move (keyType RoomMove) is performed.",
          "type": "string",
          "maxLength": 2000
        },
        "noOfKeys": {
          "type": "integer",
          "description": "Number of keys to be created.",
          "minimum": 1,
          "maximum": 1
        },
        "reservationIdList": {
          "description": "Collection of unique reservation identifiers for the reservation we are trying to make a room key for.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "guestShareFlag": {
          "type": "boolean",
          "description": "Indicates if Guest is a sharer or not"
        },
        "OldGuestShareFlag": {
          "type": "boolean",
          "description": "Indicates if old Guest room is a sharer or not when a room move (keyType RoomMove) is performed."
        },
        "keyValidityStart": {
          "type": "string",
          "description": "The date/time the room key is valid from.",
          "format": "date-time"
        },
        "keyValidityEnd": {
          "type": "string",
          "description": "The date/time the room key is valid to.",
          "format": "date-time"
        },
        "keyType": {
          "$ref": "#/definitions/roomKeyOutBoundType"
        },
        "keyTrack": {
          "description": "KeyTrack Data.",
          "$ref": "#/definitions/keyTrackType"
        },
        "outBoundCode": {
          "description": "OutBound Code of the Door Lock System (DLS).",
          "type": "string"
        },
        "additionalRooms": {
          "description": "Collection of additional rooms to be included in key creation of reservation room.",
          "type": "array",
          "maxItems": 999,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "oldAdditionalRooms": {
          "description": "Collection of old additional rooms in key creation of reservation room when a room move (keyType RoomMove) is performed.",
          "type": "array",
          "maxItems": 999,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "userId": {
          "type": "string",
          "description": "Unique identifier for the PMS user.",
          "maxLength": 2000
        },
        "roomKeyGuests": {
          "type": "array",
          "description": "Collection of of Room key guests for multiple guest room key functionality.",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomKeyGuest"
          }
        },
        "keyOptions": {
          "description": "Lists the access areas defined in PMS valid for the room key.",
          "type": "array",
          "maxItems": 1000,
          "items": {
            "$ref": "#/definitions/keyOptionsType"
          }
        },
        "keyRequestTime": {
          "type": "string",
          "description": "The date/time the room key is requested.",
          "format": "date-time"
        },
        "roomKeyType": {
          "$ref": "#/definitions/externalRoomKeyType"
        },
        "keyUserType": {
          "$ref": "#/definitions/keyUserType"
        },
        "cardSerialNumber": {
          "description": "Unique identifier of RFID card used for KeyPayload generation. Required when roomKeyType is KeyPayload.",
          "type": "string",
          "maxLength": 80
        },
        "printData": {
          "$ref": "#/definitions/printDataType"
        }
      },
      "required": [
        "keyType",
        "encoderTerminal",
        "encoderId",
        "roomKeyType",
        "keyUserType",
        "keyRequestTime"
      ]
    },
    "roomKeysExternalDetails": {
      "type": "object",
      "description": "Response for the key request made to DLS from OPERA Cloud.",
      "properties": {
        "encoderId": {
          "type": "string",
          "description": "Unique Id as defined by Door Lock System.",
          "maxLength": 2000
        },
        "encoderTerminal": {
          "type": "string",
          "description": "The Unique PMS encoder name linked with the encoderId",
          "minLength": 1,
          "maxLength": 2000
        },
        "reservationIdList": {
          "description": "Collection of unique reservation identifiers for the reservation we are trying to make a room key for.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "roomId": {
          "description": "The PMS room number to generate a key for.",
          "type": "string",
          "maxLength": 2000
        },
        "keyTrack": {
          "description": "KeyTrack Data.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/keyTrackType"
          }
        },
        "keyValidityStart": {
          "type": "string",
          "description": "Date/Time Key is valid from - only send in response for keyType: 'Read' request",
          "format": "date-time"
        },
        "keyValidityEnd": {
          "type": "string",
          "description": "Date/Time Key is valid to - only send in response for keyType: 'Read' request",
          "format": "date-time"
        },
        "noOfKeys": {
          "type": "integer",
          "description": "Number of keys to be created.The value is always 1"
        },
        "responseText": {
          "type": "string",
          "description": "A user-friendly text with information on why a request is not successful",
          "maxLength": 2000
        },
        "responseCode": {
          "$ref": "#/definitions/roomKeyResponseCodeType"
        },
        "additionalRooms": {
          "description": "Collection of additional rooms to be included in key creation of reservation room.",
          "type": "array",
          "maxItems": 999,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "keyOptions": {
          "description": "Lists all PMS access areas.",
          "type": "array",
          "maxItems": 1000,
          "items": {
            "$ref": "#/definitions/keyOptionsResponseType"
          }
        },
        "userId": {
          "type": "string",
          "description": "Unique identifier for the PMS user.",
          "maxLength": 2000
        },
        "digitalKeyData": {
          "description": "Base64 format of Mobile Key data provided by DLS System which the external system requested - only send in response for roomKeyType: 'MobileKey'",
          "type": "string",
          "format": "byte"
        },
        "keyImage": {
          "description": "Image of the created key - only send in response for roomKeyType: 'KeyPayload'",
          "type": "string",
          "format": "byte"
        },
        "cardSerialNumber": {
          "description": "Unique identifier of RFID card used for KeyPayload generation - only send in response for roomKeyType: 'KeyPayload'.",
          "type": "string",
          "maxLength": 80
        },
        "keyCreationTime": {
          "type": "string",
          "description": "Date/Time the key has been generated by Door Locking system.",
          "format": "date-time"
        },
        "roomKeyType": {
          "$ref": "#/definitions/externalRoomKeyType"
        },
        "keyUserType": {
          "$ref": "#/definitions/keyUserType"
        }
      },
      "required": [
        "roomId",
        "responseCode",
        "encoderTerminal",
        "roomKeyType",
        "keyUserType",
        "keyValidityStart",
        "keyValidityEnd",
        "keyCreationTime"
      ]
    },
    "bookingTimeSpanType": {
      "type": "object",
      "description": "The booking time span of the reservation, only applicable when time increments are being used.",
      "properties": {
        "startDateTime": {
          "type": "string",
          "description": "The start time of the reservation booking",
          "format": "date-time"
        },
        "endDateTime": {
          "type": "string",
          "description": "The end time of the reservation booking",
          "format": "date-time"
        }
      }
    },
    "backToBackResSequenceType": {
      "type": "object",
      "description": "Type object represents Back To Back Sequence Position and Total Count of Linked Back To Back Reservations ordered by consecutive Stay Dates.",
      "properties": {
        "position": {
          "description": "Indicates the Sequence position of Back to Back Reservation.",
          "type": "integer"
        },
        "totalCount": {
          "description": "Indicates the total count of Back To Back Reservations in the group of Linked Reservations.",
          "type": "integer"
        }
      }
    },
    "keyOptionsInfoListType": {
      "type": "object",
      "properties": {
        "keyOptions": {
          "description": "List of reservation key options.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/keyOptionsInfoType"
          }
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "keyOptionsInfoType": {
      "type": "object",
      "description": "Response of fetch keyOptions operation.",
      "properties": {
        "reservationId": {
          "$ref": "#/definitions/reservationId"
        },
        "profileKeyOptions": {
          "type": "array",
          "description": "Key option preferences currently attached to a profile associated with the reservation.",
          "items": {
            "$ref": "#/definitions/profileKeyOptionsType"
          }
        },
        "reservationKeyOptions": {
          "type": "string",
          "description": "Key option preferences currently attached to the reservation.",
          "minLength": 0,
          "maxLength": 200
        },
        "roomKeyOptions": {
          "type": "string",
          "description": "Key option preferences currently attached to the room assigned to the reservation.",
          "minLength": 0,
          "maxLength": 200
        }
      }
    }
  },
  "tags": [
    {
      "name": "FOFStats",
      "description": "The Front Desk Statistics module will provide statistical data related to front desk operations in a property."
    },
    {
      "name": "FrontDeskOperations",
      "description": "Front Desk module provides APIs related to a guests stay in the property. For example, checking a guest into the property, providing room information, splitting reservations, as well as adding wake-up calls to a reservation. This module goes hand-in-hand with cashiering module."
    },
    {
      "name": "Commissions",
      "description": "Commission web service provides commission processing service like payment processing, payment activity and search."
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}
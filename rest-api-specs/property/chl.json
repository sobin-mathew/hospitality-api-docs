{
  "swagger": "2.0",
  "info": {
    "title": "OPERA Cloud Channel Configuration API",
    "description": "APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>",
    "version": "24.4",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality_apis_ww_grp@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "schemes": [
    "https"
  ],
  "basePath": "/chl/v1",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/availability/summary": {
      "get": {
        "summary": "Gets the regional rate parity",
        "description": "Operation to Fetch the Regional Rate Parity. <p><strong>OperationId:</strong>getRegionalRateParity</p>",
        "operationId": "getRegionalRateParity",
        "deprecated": true,
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "required": false,
            "description": "Language identification.",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "numberOfDays",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "channelCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "ratePlanCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "channelRatePlanCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "chainCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "rateAccessCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "qualifyingProfileCategory",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "qualifyingProfileId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object to fetch regional rate parity.",
            "schema": {
              "$ref": "#/definitions/regionalRateParity"
            }
          },
          "204": {
            "description": "RegionalRateParity not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Availability"
        ]
      }
    },
    "/channels": {
      "get": {
        "summary": "Gets list of channels",
        "description": "Use this API to get list of channels from OPERA. <p><strong>OperationId:</strong>getChannels</p>",
        "operationId": "getChannels",
        "deprecated": true,
        "parameters": [
          {
            "name": "inactive",
            "in": "query",
            "required": false,
            "description": "Indicates whether searching for active or inactive codes.",
            "type": "boolean"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "channelCode",
            "in": "query",
            "required": false,
            "description": "External system code to be searched. This is also known as Booking Channel Code for CHANNEL external system type.",
            "type": "string"
          },
          {
            "name": "systemType",
            "in": "query",
            "required": false,
            "description": "External system type to be searched. Possible values are CHANNEL, OXI, etc.",
            "type": "string"
          },
          {
            "name": "systemSubType",
            "in": "query",
            "required": false,
            "description": "External system sub type to be searched. Possible values are GDS, WEB, etc.",
            "type": "string"
          },
          {
            "name": "systemRateType",
            "in": "query",
            "required": false,
            "description": "External system rate type to be searched. Possible values are DAILY, MAX_WEEKLY, etc.",
            "type": "string"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "Flag whether to include inactive channel or not.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching channels.",
            "schema": {
              "$ref": "#/definitions/channels"
            }
          },
          "204": {
            "description": "Channels not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "put": {
        "summary": "Update channel configuration",
        "description": "Use this API to update channel configuration <p><strong>OperationId:</strong>putChannels</p>",
        "operationId": "putChannels",
        "deprecated": true,
        "parameters": [
          {
            "name": "channels",
            "in": "body",
            "required": true,
            "description": "Request object for changing details of channels.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channels"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "post": {
        "summary": "Adds new channel",
        "description": "Use this API to add new channel code in OPERA <p><strong>OperationId:</strong>postChannels</p>",
        "operationId": "postChannels",
        "deprecated": true,
        "parameters": [
          {
            "name": "channels",
            "in": "body",
            "required": true,
            "description": "Request object for creating channels.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channels"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/account/contracts": {
      "delete": {
        "summary": "Deletes channel account contracts.",
        "description": "This API deletes channel account contracts. <p><strong>OperationId:</strong>deleteChannelAccountContracts</p>",
        "operationId": "deleteChannelAccountContracts",
        "deprecated": true,
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "idExtension",
            "in": "query",
            "required": false,
            "description": "Additional identifying value assigned by the creating system.",
            "type": "integer"
          },
          {
            "name": "idContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "id1",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "idExtension1",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Additional identifying value assigned by the creating system.",
            "items": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "idContext1",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "type1",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/account/contracts/copy": {
      "put": {
        "summary": "Creates copy of channel account contracts",
        "description": "This API creates copy of channel account contracts. <p><strong>OperationId:</strong>copyChannelAccountContracts</p>",
        "operationId": "copyChannelAccountContracts",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelAccountContractsCopy",
            "in": "body",
            "required": true,
            "description": "Request object to copy the channel account contract and create a new contract.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelAccountContractsCopy"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response object of the Channel account contract copy request.",
            "schema": {
              "$ref": "#/definitions/channelAccountContractsDetailsCopy"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/accounts": {
      "get": {
        "summary": "This API retrieves channel accounts.",
        "description": "This API retrieves channel accounts. <p><strong>OperationId:</strong>getChannelAccounts</p>",
        "operationId": "getChannelAccounts",
        "deprecated": true,
        "parameters": [
          {
            "name": "excludeInactive",
            "in": "query",
            "required": false,
            "description": "Indicator that tells whether to include inactive channel accounts or not.",
            "type": "boolean"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "accountType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Represents channel account TEMPLATE type.",
            "uniqueItems": true,
            "enum": [
              "Property",
              "Chain",
              "Dealer",
              "Subsidiary",
              "Routing",
              "Template"
            ]
          },
          {
            "name": "accountName",
            "in": "query",
            "required": false,
            "description": "Account Name for which details need to be fetched.",
            "type": "string"
          },
          {
            "name": "accountCode",
            "in": "query",
            "required": false,
            "description": "Account Code/No for which details need to be fetched.",
            "type": "string"
          },
          {
            "name": "contractExpInDays",
            "in": "query",
            "required": false,
            "description": "To fetch channel accounts which expires in no., of days.",
            "type": "integer"
          },
          {
            "name": "attributeName",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "orderType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Asc",
                "Desc"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object of the Channel accounts fetch request.",
            "schema": {
              "$ref": "#/definitions/channelAccountsSummary"
            }
          },
          "204": {
            "description": "ChannelAccounts not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "post": {
        "summary": "Adds channel accounts.",
        "description": "This API adds channel accounts. <p><strong>OperationId:</strong>postChannelAccounts</p>",
        "operationId": "postChannelAccounts",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelAccounts",
            "in": "body",
            "required": true,
            "description": "Request object to create the channel accounts.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelAccounts"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "put": {
        "summary": "Updates channel accounts",
        "description": "Use this API to update existing channel account for a given OPERA profile id <p><strong>OperationId:</strong>putChannelAccounts</p>",
        "operationId": "putChannelAccounts",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelAccountsToChange",
            "in": "body",
            "required": true,
            "description": "Channel account information to create a new channel account.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelAccountsToChange"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/accounts/{accountProfileId}": {
      "get": {
        "summary": "Gets channel accounts",
        "description": "Use this API to get existing channel account for a given OPERA profile id. <p><strong>OperationId:</strong>getChannelAccount</p>",
        "operationId": "getChannelAccount",
        "deprecated": true,
        "parameters": [
          {
            "name": "accountProfileId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies an account profile."
          },
          {
            "name": "markAsRecentlyAccessed",
            "in": "query",
            "required": false,
            "description": "Providing this flag marks the billing account as recently accessed.",
            "type": "boolean"
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Channel account indicators information.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "PrimaryDetails",
                "Communication",
                "Contact",
                "Notes",
                "Contracts",
                "Statements",
                "Indicators"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object of the Channel account fetch request. Contains detailed information for the channel account.",
            "schema": {
              "$ref": "#/definitions/channelAccount"
            }
          },
          "204": {
            "description": "ChannelAccount not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/accounts/{accountProfileId}/contracts": {
      "put": {
        "summary": "Updates channel account contracts for given profile Id.",
        "description": "Use this API to update existing cannel account contract for a given OPERA profile id <p><strong>OperationId:</strong>putChannelAccountContracts</p>",
        "operationId": "putChannelAccountContracts",
        "deprecated": true,
        "parameters": [
          {
            "name": "accountProfileId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies an account profile."
          },
          {
            "name": "channelAccountContracts",
            "in": "body",
            "required": true,
            "description": "Request object to change the channel account contracts.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelAccountContracts"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "post": {
        "summary": "Adds channel account contracts for given profile Id.",
        "description": "This API adds channel account contracts for given profile Id. <p><strong>OperationId:</strong>postChannelAccountContracts</p>",
        "operationId": "postChannelAccountContracts",
        "deprecated": true,
        "parameters": [
          {
            "name": "accountProfileId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies an account profile."
          },
          {
            "name": "channelAccountContracts",
            "in": "body",
            "required": true,
            "description": "Request object to create the channel account contracts.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelAccountContracts"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/accounts/{accountProfileId}/contracts/{contractId}": {
      "get": {
        "summary": "Gets channel account contracts for given profile Id.",
        "description": "Use this API to get existing cannel account contract for a given OPERA profile id. <p><strong>OperationId:</strong>getChannelAccountContractElements</p>",
        "operationId": "getChannelAccountContractElements",
        "deprecated": true,
        "parameters": [
          {
            "name": "contractId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Contract Id."
          },
          {
            "name": "accountProfileId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies an account profile."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "attributeName",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "orderType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Asc",
                "Desc"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object of the channel account contract elements fetch request. Contains detailed information for the channel contract elements.",
            "schema": {
              "$ref": "#/definitions/channelAccountContractElements"
            }
          },
          "204": {
            "description": "ChannelAccountContractElements not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/amenities": {
      "post": {
        "summary": "Adds channel amenities configuration",
        "description": "Use this API to add channel amenities mapping <p><strong>OperationId:</strong>postAmenitiesMapping</p>",
        "operationId": "postAmenitiesMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "amenities",
            "in": "body",
            "required": true,
            "description": "Request object for creating new external system amenities.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/amenities"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "put": {
        "summary": "Updates channel amenities configuration",
        "description": "Use this API to update channel amenities mapping <p><strong>OperationId:</strong>putAmenitiesMapping</p>",
        "operationId": "putAmenitiesMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "amenities",
            "in": "body",
            "required": true,
            "description": "Request object for changing external system amenities.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/amenities"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "delete": {
        "summary": "Deletes channel amenities configuration",
        "description": "Use this API to delete channel amenities mapping <p><strong>OperationId:</strong>deleteAmenitiesMapping</p>",
        "operationId": "deleteAmenitiesMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "inactive",
            "in": "query",
            "required": false,
            "description": "Indicates whether code is inactive or not.",
            "type": "boolean"
          },
          {
            "name": "systemCode",
            "in": "query",
            "required": false,
            "description": "External system code such as TRAVELOCITY, EXPEDIA, etc.",
            "type": "string"
          },
          {
            "name": "systemSubType",
            "in": "query",
            "required": false,
            "description": "External system subtype such as GDS, WEB, etc.",
            "type": "string"
          },
          {
            "name": "systemType",
            "in": "query",
            "required": false,
            "description": "External system type such as CHANNEL, OXI, etc.",
            "type": "string"
          },
          {
            "name": "systemName",
            "in": "query",
            "required": false,
            "description": "External system name.",
            "type": "string"
          },
          {
            "name": "websiteURL",
            "in": "query",
            "required": false,
            "description": "Cannel Website URL",
            "type": "string"
          },
          {
            "name": "iconURL",
            "in": "query",
            "required": false,
            "description": "Channel Icon URL",
            "type": "string"
          },
          {
            "name": "localSystemCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Code used inside the OPERA System",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "externalSystemCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Code used in the External System",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "description",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Detailed Description of the given entity.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "amenityGroup",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "User defined logical group name for the amenities.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "PropertyFeatures",
                "RoomFeatures",
                "ProductsFeatures",
                "BedCodes"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/amenities/mapping": {
      "get": {
        "summary": "Gets channel amenities configuration",
        "description": "Use this API to get channel amenities mapping. <p><strong>OperationId:</strong>getAmenitiesMapping</p>",
        "operationId": "getAmenitiesMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "inactive",
            "in": "query",
            "required": false,
            "description": "Indicates whether searching for active or inactive codes.",
            "type": "boolean"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "systemCode",
            "in": "query",
            "required": false,
            "description": "External system code to be searched. This is also known as Booking Channel Code for CHANNEL external system type.",
            "type": "string"
          },
          {
            "name": "systemType",
            "in": "query",
            "required": false,
            "description": "External system type to be searched. Possible values are CHANNEL, OXI, etc.",
            "type": "string"
          },
          {
            "name": "systemSubType",
            "in": "query",
            "required": false,
            "description": "External system sub type to be searched. Possible values are GDS, WEB, etc.",
            "type": "string"
          },
          {
            "name": "systemRateType",
            "in": "query",
            "required": false,
            "description": "External system rate type to be searched. Possible values are DAILY, MAX_WEEKLY, etc.",
            "type": "string"
          },
          {
            "name": "localSystemCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching external system amenities.",
            "schema": {
              "$ref": "#/definitions/amenitiesMapping"
            }
          },
          "204": {
            "description": "AmenitiesMapping not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/availability/publish": {
      "put": {
        "summary": "Publishes channel availability.",
        "description": "This API changes publishes channel availability. <p><strong>OperationId:</strong>publishChannelAvailability</p>",
        "operationId": "publishChannelAvailability",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelAvailability",
            "in": "body",
            "required": true,
            "description": "Request object for publishing rate availability to channels.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelAvailability"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/billingStatements": {
      "get": {
        "summary": "Retrieves channel billing statements.",
        "description": "This API retrieves channel billing statements. <p><strong>OperationId:</strong>getChannelBillingStatements</p>",
        "operationId": "getChannelBillingStatements",
        "deprecated": true,
        "parameters": [
          {
            "name": "includeLocked",
            "in": "query",
            "required": false,
            "description": "Indicates whether search results should include locked statements or not. By default, locked statements will be included.",
            "type": "boolean"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "statementId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "statementIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "beginDate",
            "in": "query",
            "required": false,
            "description": "Begin date of the statement.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "description": "End date of the statement.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "profileId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "profileIdType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object of the channel billing statements fetch request.",
            "schema": {
              "$ref": "#/definitions/channelBillingStatementSummaries"
            }
          },
          "204": {
            "description": "ChannelBillingStatements not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "post": {
        "summary": "Adds channel billing statements.",
        "description": "This API adds channel billing statements. <p><strong>OperationId:</strong>postChannelBillingStatements</p>",
        "operationId": "postChannelBillingStatements",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelBillingStatements",
            "in": "body",
            "required": true,
            "description": "Request object to create channel billing statements.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelBillingStatements"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "put": {
        "summary": "Updates channel billing statement details",
        "description": "Use this API to update channels billing statements for a given OPERA statement id <p><strong>OperationId:</strong>putChannelBillingStatements</p>",
        "operationId": "putChannelBillingStatements",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelBillingStatements",
            "in": "body",
            "required": true,
            "description": "Request object to Change channel billing statements.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelBillingStatements"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "delete": {
        "summary": "Deletes channel billing statements.",
        "description": "This API deletes channel billing statements. <p><strong>OperationId:</strong>deleteChannelBillingStatements</p>",
        "operationId": "deleteChannelBillingStatements",
        "deprecated": true,
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "idExtension",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Additional identifying value assigned by the creating system.",
            "items": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "idContext",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "type",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/billingStatements/generate": {
      "post": {
        "summary": "This API generates channel billing statements.",
        "description": "This API generates channel billing statements. <p><strong>OperationId:</strong>generateChannelBillingStatements</p>",
        "operationId": "generateChannelBillingStatements",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelBillingStatements",
            "in": "body",
            "required": true,
            "description": "Request object to Generate channel billing statements.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelBillingStatements"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/billingStatements/{statementId}": {
      "get": {
        "summary": "Retrieves channel billing statement for a given statement Id",
        "description": "This API retrieves channel billing statement for a given statement Id. <p><strong>OperationId:</strong>getChannelBillingStatement</p>",
        "operationId": "getChannelBillingStatement",
        "deprecated": true,
        "parameters": [
          {
            "name": "statementId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Statement Id."
          },
          {
            "name": "idContext",
            "in": "query",
            "default": "OPERA",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "idType",
            "in": "query",
            "default": "Statement",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object of the channel billing statement fetch request.",
            "schema": {
              "$ref": "#/definitions/channelBillingStatement"
            }
          },
          "204": {
            "description": "ChannelBillingStatement not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/billingStatements/{statementId}/details": {
      "get": {
        "summary": "Retrieves channel billing statement details for a given statement Id",
        "description": "This API retrieves channel billing statement details for a given statement Id. <p><strong>OperationId:</strong>getChannelBillingStatementDetails</p>",
        "operationId": "getChannelBillingStatementDetails",
        "deprecated": true,
        "parameters": [
          {
            "name": "statementId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Statement Id."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "contractId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "contractIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "attributeName",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "orderType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Asc",
                "Desc"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object of the channel account statement details fetch request.",
            "schema": {
              "$ref": "#/definitions/channelBillingStatementDetails"
            }
          },
          "204": {
            "description": "ChannelBillingStatementDetails not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/billingStatements/{statementId}/statistics": {
      "get": {
        "summary": "Retrieves billing statement details statistics.",
        "description": "This API retrieves billing statement details statistics. <p><strong>OperationId:</strong>getStatementDetailsStatistics</p>",
        "operationId": "getStatementDetailsStatistics",
        "deprecated": true,
        "parameters": [
          {
            "name": "statementId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Statement Id."
          },
          {
            "name": "contractId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "contractIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Type for statement details statistics instructions that can be used in requests for partial operations.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ByResort",
                "ByChannel",
                "ByChannelType",
                "ByFeeType"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object of the channel account statement details statistics fetch request.",
            "schema": {
              "$ref": "#/definitions/statementDetailsStatistics"
            }
          },
          "204": {
            "description": "StatementDetailsStatistics not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/cardType/mappings": {
      "get": {
        "summary": "Gets channel credit card mapping for a hotel",
        "description": "Use this API to get channel mapping for OPERA credit cards to channel for a given hotel id. <p><strong>OperationId:</strong>getChannelCardTypeMappings</p>",
        "operationId": "getChannelCardTypeMappings",
        "deprecated": true,
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "bookingChannelCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "cardTypes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "channelCardTypes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "Indicates whether search includes inactive mapping.",
            "type": "boolean"
          },
          {
            "name": "fetchUnmapped",
            "in": "query",
            "required": false,
            "description": "Indicates whether unmapped channel-hotel card types should be fetched.",
            "type": "boolean"
          },
          {
            "name": "fetchMapped",
            "in": "query",
            "required": false,
            "description": "Indicates whether mapped channel-hotel card types should be fetched.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching channel-hotel card type mappings.",
            "schema": {
              "$ref": "#/definitions/channelCardTypeMappingDetails"
            }
          },
          "204": {
            "description": "ChannelCardTypeMappings not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/cardTypes": {
      "post": {
        "summary": "Adds channel credit card mapping",
        "description": "Use this API to add channel mapping for OPERA Credit cards <p><strong>OperationId:</strong>postCreditCardsMapping</p>",
        "operationId": "postCreditCardsMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "creditCards",
            "in": "body",
            "required": true,
            "description": "Request object for creating external system credit cards.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/creditCards"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "put": {
        "summary": "Updates channel credit card mapping",
        "description": "Use this API to update channel credit card code mapping to OPERA credit card code <p><strong>OperationId:</strong>putCreditCardsMapping</p>",
        "operationId": "putCreditCardsMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "creditCards",
            "in": "body",
            "required": true,
            "description": "Request object for changing existing external system credit cards.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/creditCards"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "delete": {
        "summary": "Deletes channel credit card mapping",
        "description": "Use this API to delete channel credit card code mapping to OPERA credit card code. <p><strong>OperationId:</strong>deleteCreditCardsMapping</p>",
        "operationId": "deleteCreditCardsMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "inactive",
            "in": "query",
            "required": false,
            "description": "Indicates whether code is inactive or not.",
            "type": "boolean"
          },
          {
            "name": "systemCode",
            "in": "query",
            "required": false,
            "description": "External system code such as TRAVELOCITY, EXPEDIA, etc.",
            "type": "string"
          },
          {
            "name": "systemSubType",
            "in": "query",
            "required": false,
            "description": "External system subtype such as GDS, WEB, etc.",
            "type": "string"
          },
          {
            "name": "systemType",
            "in": "query",
            "required": false,
            "description": "External system type such as CHANNEL, OXI, etc.",
            "type": "string"
          },
          {
            "name": "systemName",
            "in": "query",
            "required": false,
            "description": "External system name.",
            "type": "string"
          },
          {
            "name": "websiteURL",
            "in": "query",
            "required": false,
            "description": "Cannel Website URL",
            "type": "string"
          },
          {
            "name": "iconURL",
            "in": "query",
            "required": false,
            "description": "Channel Icon URL",
            "type": "string"
          },
          {
            "name": "localSystemCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Code used inside the OPERA System",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "externalSystemCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Code used in the External System",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "description",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Detailed Description of the given entity.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/cardTypes/mapping": {
      "get": {
        "summary": "Gets channel credit card mapping",
        "description": "Use this API to get channel credit card code mapping to OPERA credit card code. <p><strong>OperationId:</strong>getCreditCardsMapping</p>",
        "operationId": "getCreditCardsMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "inactive",
            "in": "query",
            "required": false,
            "description": "Indicates whether searching for active or inactive codes.",
            "type": "boolean"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "systemCode",
            "in": "query",
            "required": false,
            "description": "External system code to be searched. This is also known as Booking Channel Code for CHANNEL external system type.",
            "type": "string"
          },
          {
            "name": "systemType",
            "in": "query",
            "required": false,
            "description": "External system type to be searched. Possible values are CHANNEL, OXI, etc.",
            "type": "string"
          },
          {
            "name": "systemSubType",
            "in": "query",
            "required": false,
            "description": "External system sub type to be searched. Possible values are GDS, WEB, etc.",
            "type": "string"
          },
          {
            "name": "systemRateType",
            "in": "query",
            "required": false,
            "description": "External system rate type to be searched. Possible values are DAILY, MAX_WEEKLY, etc.",
            "type": "string"
          },
          {
            "name": "localSystemCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "Indicates whether to include inactive guarantees or not.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching external system credit cards.",
            "schema": {
              "$ref": "#/definitions/creditCardsMapping"
            }
          },
          "204": {
            "description": "CreditCardsMapping not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/confirmationLetters": {
      "get": {
        "summary": "Gets channel property confirmation letter mapping",
        "description": "Use this API to get channel property confirmation letter configuration <p><strong>OperationId:</strong>getChannelHotelLetters</p>",
        "operationId": "getChannelHotelLetters",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "description": "Language code associated with the hotel letters.",
            "type": "string"
          },
          {
            "name": "letterType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Represents Inquiry Letter Type.",
            "uniqueItems": true,
            "enum": [
              "Confirmation",
              "Cancellation",
              "BanquetEventOrder",
              "Contract",
              "Inquiry"
            ]
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object after fetch Hotel Letters associated with the Booking Channels",
            "schema": {
              "$ref": "#/definitions/fetchedChannelHotelLetters"
            }
          },
          "204": {
            "description": "ChannelHotelLetters not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "post": {
        "summary": "Adds channel property confirmation letter mapping",
        "description": "Use this API to add channel property confirmation letter configuration <p><strong>OperationId:</strong>postChannelHotelLetters</p>",
        "operationId": "postChannelHotelLetters",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelHotelLettersToBeCreated",
            "in": "body",
            "required": true,
            "description": "Request object to create new Hotel Letters associated with the Channels",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelHotelLettersToBeCreated"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "put": {
        "summary": "Updates channel property confirmation letter mapping",
        "description": "Use this API to update channel property confirmation letter configuration <p><strong>OperationId:</strong>putChannelHotelLetters</p>",
        "operationId": "putChannelHotelLetters",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelHotelLettersToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object to update existing Hotel Letters associated with the Booking Channels",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelHotelLettersToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "delete": {
        "summary": "Deletes channel property confirmation letter mapping",
        "description": "Use this API to delete channel property confirmation letter configuration. <p><strong>OperationId:</strong>deleteChannelHotelLetters</p>",
        "operationId": "deleteChannelHotelLetters",
        "deprecated": true,
        "parameters": [
          {
            "name": "code",
            "in": "query",
            "required": false,
            "description": "Code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "description.",
            "type": "string"
          },
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code which the hotel letters belong to.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "code1",
            "in": "query",
            "required": false,
            "description": "Code.",
            "type": "string"
          },
          {
            "name": "description1",
            "in": "query",
            "required": false,
            "description": "description.",
            "type": "string"
          },
          {
            "name": "letterType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Represents Inquiry Letter Type.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Confirmation",
                "Cancellation",
                "BanquetEventOrder",
                "Contract",
                "Inquiry"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/currencies": {
      "post": {
        "summary": "Adds channel currency code mapping",
        "description": "Use this API to add channel currency code mapping to OPERA currency codes. <p><strong>OperationId:</strong>postCurrenciesMapping</p>",
        "operationId": "postCurrenciesMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "currencies",
            "in": "body",
            "required": true,
            "description": "Request object for creating external system currencies.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/currencies"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "put": {
        "summary": "Updates channel currency code mapping",
        "description": "Use this API to update channel mapping to OPERA currency codes <p><strong>OperationId:</strong>putCurrenciesMapping</p>",
        "operationId": "putCurrenciesMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "currencies",
            "in": "body",
            "required": true,
            "description": "Request object for changing existing external system currencies.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/currencies"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "delete": {
        "summary": "Deletes channel currency code mapping",
        "description": "Use this API to delete channel mapping to OPERA currency codes. <p><strong>OperationId:</strong>deleteCurrenciesMapping</p>",
        "operationId": "deleteCurrenciesMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "inactive",
            "in": "query",
            "required": false,
            "description": "Indicates whether code is inactive or not.",
            "type": "boolean"
          },
          {
            "name": "systemCode",
            "in": "query",
            "required": false,
            "description": "External system code such as TRAVELOCITY, EXPEDIA, etc.",
            "type": "string"
          },
          {
            "name": "systemSubType",
            "in": "query",
            "required": false,
            "description": "External system subtype such as GDS, WEB, etc.",
            "type": "string"
          },
          {
            "name": "systemType",
            "in": "query",
            "required": false,
            "description": "External system type such as CHANNEL, OXI, etc.",
            "type": "string"
          },
          {
            "name": "systemName",
            "in": "query",
            "required": false,
            "description": "External system name.",
            "type": "string"
          },
          {
            "name": "websiteURL",
            "in": "query",
            "required": false,
            "description": "Cannel Website URL",
            "type": "string"
          },
          {
            "name": "iconURL",
            "in": "query",
            "required": false,
            "description": "Channel Icon URL",
            "type": "string"
          },
          {
            "name": "localSystemCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Code used inside the OPERA System",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "externalSystemCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Code used in the External System",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "description",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Detailed Description of the given entity.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "lanyonDecimalPosition",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Number of decimal positions used by the currency.",
            "items": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "channelDecimalPosition",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Number of decimal positions used by the currency as per the channel.",
            "items": {
              "type": "integer"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/currencies/mapping": {
      "get": {
        "summary": "Gets channel currency code mapping",
        "description": "Use this API to update channel mapping to OPERA currency codes. <p><strong>OperationId:</strong>getCurrenciesMapping</p>",
        "operationId": "getCurrenciesMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "inactive",
            "in": "query",
            "required": false,
            "description": "Indicates whether searching for active or inactive codes.",
            "type": "boolean"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "systemCode",
            "in": "query",
            "required": false,
            "description": "External system code to be searched. This is also known as Booking Channel Code for CHANNEL external system type.",
            "type": "string"
          },
          {
            "name": "systemType",
            "in": "query",
            "required": false,
            "description": "External system type to be searched. Possible values are CHANNEL, OXI, etc.",
            "type": "string"
          },
          {
            "name": "systemSubType",
            "in": "query",
            "required": false,
            "description": "External system sub type to be searched. Possible values are GDS, WEB, etc.",
            "type": "string"
          },
          {
            "name": "systemRateType",
            "in": "query",
            "required": false,
            "description": "External system rate type to be searched. Possible values are DAILY, MAX_WEEKLY, etc.",
            "type": "string"
          },
          {
            "name": "localSystemCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "Indicates whether to include inactive guarantees or not.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching external system currencies.",
            "schema": {
              "$ref": "#/definitions/currenciesMapping"
            }
          },
          "204": {
            "description": "CurrenciesMapping not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/distributionTemplates": {
      "get": {
        "summary": "Retrieves distribution templates",
        "description": "This API retrieves distribution templates. <p><strong>OperationId:</strong>getDistributionTemplates</p>",
        "operationId": "getDistributionTemplates",
        "deprecated": true,
        "parameters": [
          {
            "name": "isChain",
            "in": "query",
            "default": "false",
            "required": false,
            "description": "Filter chain level distribution templates by chain.",
            "type": "boolean"
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "types",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "Indicates whether search includes inactive distribution templates.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching distribution templates based on search criteria.",
            "schema": {
              "$ref": "#/definitions/distributionTemplates"
            }
          },
          "204": {
            "description": "DistributionTemplates not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "post": {
        "summary": "Adds rate templates configurations",
        "description": "Use this API to add a distribution rate template. <p><strong>OperationId:</strong>postDistributionTemplates</p>",
        "operationId": "postDistributionTemplates",
        "deprecated": true,
        "parameters": [
          {
            "name": "distributionTemplates",
            "in": "body",
            "required": true,
            "description": "Request object for creating chain or property level distribution templates.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/distributionTemplates"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "put": {
        "summary": "Updates rate templates configurations",
        "description": "Use this API to update existing distribution rate template <p><strong>OperationId:</strong>putDistributionTemplates</p>",
        "operationId": "putDistributionTemplates",
        "deprecated": true,
        "parameters": [
          {
            "name": "distributionTemplates",
            "in": "body",
            "required": true,
            "description": "Request object for modifying chain or property level distribution templates.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/distributionTemplates"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "delete": {
        "summary": "Deletes rate templates configurations",
        "description": "Use this API to delete existing distribution rate template. <p><strong>OperationId:</strong>deleteDistributionTemplates</p>",
        "operationId": "deleteDistributionTemplates",
        "deprecated": true,
        "parameters": [
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "code",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel where the code is configured.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/errorCodes": {
      "delete": {
        "summary": "Deletes channel error codes",
        "description": "Use this API to delete channel error code mapping configurations. <p><strong>OperationId:</strong>deleteChannelErrors</p>",
        "operationId": "deleteChannelErrors",
        "deprecated": true,
        "parameters": [
          {
            "name": "bookingChannelCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Booking channel code of error.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "error",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Code of error.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/guarantees": {
      "post": {
        "summary": "Adds channel guarantee code mapping",
        "description": "Use this API to add channel's guarantee codes mapping to OPERA guarantee codes. <p><strong>OperationId:</strong>postGuaranteesMapping</p>",
        "operationId": "postGuaranteesMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "guarantees",
            "in": "body",
            "required": true,
            "description": "Request object for creating new external system guarantees.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/guarantees"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "put": {
        "summary": "Updates channel guarantee code mapping",
        "description": "Use this API to update channel's guarantee codes mapping to OPERA guarantee codes <p><strong>OperationId:</strong>putGuaranteesMapping</p>",
        "operationId": "putGuaranteesMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "guarantees",
            "in": "body",
            "required": true,
            "description": "Request object for changing external system guarantees.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/guarantees"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "delete": {
        "summary": "Deletes channel guarantee code mapping",
        "description": "Use this API to delete channel's guarantee codes mapping to OPERA guarantee codes. <p><strong>OperationId:</strong>deleteGuaranteesMapping</p>",
        "operationId": "deleteGuaranteesMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "inactive",
            "in": "query",
            "required": false,
            "description": "Indicates whether code is inactive or not.",
            "type": "boolean"
          },
          {
            "name": "systemCode",
            "in": "query",
            "required": false,
            "description": "External system code such as TRAVELOCITY, EXPEDIA, etc.",
            "type": "string"
          },
          {
            "name": "systemSubType",
            "in": "query",
            "required": false,
            "description": "External system subtype such as GDS, WEB, etc.",
            "type": "string"
          },
          {
            "name": "systemType",
            "in": "query",
            "required": false,
            "description": "External system type such as CHANNEL, OXI, etc.",
            "type": "string"
          },
          {
            "name": "systemName",
            "in": "query",
            "required": false,
            "description": "External system name.",
            "type": "string"
          },
          {
            "name": "websiteURL",
            "in": "query",
            "required": false,
            "description": "Cannel Website URL",
            "type": "string"
          },
          {
            "name": "iconURL",
            "in": "query",
            "required": false,
            "description": "Channel Icon URL",
            "type": "string"
          },
          {
            "name": "localSystemCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Code used inside the OPERA System",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "externalSystemCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Code used in the External System",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "description",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Detailed Description of the given entity.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "requirementCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Requirement code of guarantee.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/guarantees/mapping": {
      "get": {
        "summary": "Gets channel guarantee code mapping for a hotel",
        "description": "Use this API to get channel guarantee code mapping to OPERA guarantee code for a given hotel. <p><strong>OperationId:</strong>getGuaranteesMapping</p>",
        "operationId": "getGuaranteesMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "inactive",
            "in": "query",
            "required": false,
            "description": "Indicates whether searching for active or inactive codes.",
            "type": "boolean"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "systemCode",
            "in": "query",
            "required": false,
            "description": "External system code to be searched. This is also known as Booking Channel Code for CHANNEL external system type.",
            "type": "string"
          },
          {
            "name": "systemType",
            "in": "query",
            "required": false,
            "description": "External system type to be searched. Possible values are CHANNEL, OXI, etc.",
            "type": "string"
          },
          {
            "name": "systemSubType",
            "in": "query",
            "required": false,
            "description": "External system sub type to be searched. Possible values are GDS, WEB, etc.",
            "type": "string"
          },
          {
            "name": "systemRateType",
            "in": "query",
            "required": false,
            "description": "External system rate type to be searched. Possible values are DAILY, MAX_WEEKLY, etc.",
            "type": "string"
          },
          {
            "name": "localSystemCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "Indicates whether to include inactive guarantees or not.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching external system guarantees.",
            "schema": {
              "$ref": "#/definitions/guaranteesMapping"
            }
          },
          "204": {
            "description": "GuaranteesMapping not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/hotels": {
      "post": {
        "summary": "Adds channel hotel mapping",
        "description": "Use this API to add channel mapping to OPERA hotel id including channel hotel code, room sell limit per reservation, city code, end date. <p><strong>OperationId:</strong>postHotelsMapping</p>",
        "operationId": "postHotelsMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "Request object for creating external system properties.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/properties"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "put": {
        "summary": "Updates channel hotel mapping",
        "description": "Use this API to update channel mapping to OPERA hotel id including channel hotel code, room sell limit per reservation, city code, end date <p><strong>OperationId:</strong>putHotelsMapping</p>",
        "operationId": "putHotelsMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "properties",
            "in": "body",
            "required": true,
            "description": "Request object for changing existing external system properties.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/properties"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "delete": {
        "summary": "Deletes channel hotel mapping",
        "description": "Use this API to delete channel mapping to OPERA hotel id including channel hotel code, room sell limit per reservation, city code, end date. <p><strong>OperationId:</strong>deleteHotelsMapping</p>",
        "operationId": "deleteHotelsMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "inactive",
            "in": "query",
            "required": false,
            "description": "Indicates whether code is inactive or not.",
            "type": "boolean"
          },
          {
            "name": "systemCode",
            "in": "query",
            "required": false,
            "description": "External system code such as TRAVELOCITY, EXPEDIA, etc.",
            "type": "string"
          },
          {
            "name": "systemSubType",
            "in": "query",
            "required": false,
            "description": "External system subtype such as GDS, WEB, etc.",
            "type": "string"
          },
          {
            "name": "systemType",
            "in": "query",
            "required": false,
            "description": "External system type such as CHANNEL, OXI, etc.",
            "type": "string"
          },
          {
            "name": "systemName",
            "in": "query",
            "required": false,
            "description": "External system name.",
            "type": "string"
          },
          {
            "name": "websiteURL",
            "in": "query",
            "required": false,
            "description": "Cannel Website URL",
            "type": "string"
          },
          {
            "name": "iconURL",
            "in": "query",
            "required": false,
            "description": "Channel Icon URL",
            "type": "string"
          },
          {
            "name": "localSystemCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Code used inside the OPERA System",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "externalSystemCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Code used in the External System",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "description",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Detailed Description of the given entity.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "city",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "City code of the channel hotel.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "roomLimit",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Maximum room limit for the channel hotel reservation.",
            "items": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "bookingLimit",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Booking limit used by ADS interface for booking limit upload. Available if channel type is ADS and ADS ARI is enabled.",
            "items": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "hotelChainId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel chain ID of channel-hotel mapping. Only available for UA channel. It may not be modified if in myfidelio environment, and user is for a specific hotel.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "chainCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Chain code for the channel-hotel mapping.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "prevailingRates",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Prevailing rates flag of channel-hotel mapping. Available if PREVAILING_RATE_BY_LOS parameter is on.",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "aRIEnabled",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "ADS ARI enabled flag of channel-hotel mapping. Available only if channel type is ADS.",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "addOnLicense",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "External system Add-on license. This is mandatory when Channel Type is ADS.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "available",
            "in": "query",
            "required": false,
            "description": "Flag indicating if channel resort mapping is available.",
            "type": "boolean"
          },
          {
            "name": "defaultRateCode",
            "in": "query",
            "required": false,
            "description": "Default rate code to be used to calculate the total revenue.",
            "type": "string"
          },
          {
            "name": "defaultRateCode1",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Default rate code of channel hotel.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "lowRevenueThreshold",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Low revenue threshold.",
            "items": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "highRevenueThreshold",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "High revenue threshold.",
            "items": {
              "type": "integer"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/hotels/mapping": {
      "get": {
        "summary": "Gets channel hotel mapping",
        "description": "Use this API to get channel mapping to OPERA hotel id including channel hotel code, room sell limit per reservation, city code, end date. <p><strong>OperationId:</strong>getHotelsMapping</p>",
        "operationId": "getHotelsMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "inactive",
            "in": "query",
            "required": false,
            "description": "Indicates whether searching for active or inactive codes.",
            "type": "boolean"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "systemCode",
            "in": "query",
            "required": false,
            "description": "External system code to be searched. This is also known as Booking Channel Code for CHANNEL external system type.",
            "type": "string"
          },
          {
            "name": "systemType",
            "in": "query",
            "required": false,
            "description": "External system type to be searched. Possible values are CHANNEL, OXI, etc.",
            "type": "string"
          },
          {
            "name": "systemSubType",
            "in": "query",
            "required": false,
            "description": "External system sub type to be searched. Possible values are GDS, WEB, etc.",
            "type": "string"
          },
          {
            "name": "systemRateType",
            "in": "query",
            "required": false,
            "description": "External system rate type to be searched. Possible values are DAILY, MAX_WEEKLY, etc.",
            "type": "string"
          },
          {
            "name": "localSystemCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "Indicates whether to include inactive guarantees or not.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching external system properties.",
            "schema": {
              "$ref": "#/definitions/propertiesMapping"
            }
          },
          "204": {
            "description": "HotelsMapping not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/marketingText": {
      "get": {
        "summary": "Gets channel marketing messages",
        "description": "Use this API to get channel mapping for marketing messages. <p><strong>OperationId:</strong>getChannelMarketingText</p>",
        "operationId": "getChannelMarketingText",
        "deprecated": true,
        "parameters": [
          {
            "name": "transactionType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "policyType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "policyDetail",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "beginDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "filterHotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "bookingChannelCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "transactionTypes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "policyTypesPolicyType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "policyDetailPolicyDetail",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "showGlobal",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "Include or not include inactive channel marketing text.",
            "type": "boolean"
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple type for channel fetch instruction.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Marketingtext",
                "Amenity",
                "Carrier",
                "Currency",
                "Error",
                "Guarantee",
                "Ratecategory"
              ]
            },
            "required": false
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "channelCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching channel marketing texts.",
            "schema": {
              "$ref": "#/definitions/channelMarketingTextsInfo"
            }
          },
          "204": {
            "description": "ChannelMarketingText not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "post": {
        "summary": "Adds channel marketing messages",
        "description": "Use this API to add channel mapping for marketing messages <p><strong>OperationId:</strong>postChannelMarketingText</p>",
        "operationId": "postChannelMarketingText",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelMarketingText",
            "in": "body",
            "required": true,
            "description": "Request object for creating channel marketing texts.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelMarketingText"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "put": {
        "summary": "Updates channel marketing messages",
        "description": "Use this API to update channel mapping for marketing messages <p><strong>OperationId:</strong>putChannelMarketingText</p>",
        "operationId": "putChannelMarketingText",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelMarketingTextToChange",
            "in": "body",
            "required": true,
            "description": "Request object for changing channel marketing texts.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelMarketingTextToChange"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "delete": {
        "summary": "Deletes channel marketing messages",
        "description": "Use this API to delete channel mapping for marketing messages. <p><strong>OperationId:</strong>deleteChannelMarketingText</p>",
        "operationId": "deleteChannelMarketingText",
        "deprecated": true,
        "parameters": [
          {
            "name": "beginDate",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "format": "date"
            },
            "required": false
          },
          {
            "name": "bookingChannelCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "The code that identifies a Booking Channel.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "endDate",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "format": "date"
            },
            "required": false
          },
          {
            "name": "globalTextYN",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "The code that identifies a Hotel.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "marketingText",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "policyDetail",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "policyType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "transactionType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "newHotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "newTransactionType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "newPolicyType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "newPolicyDetail",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "newBeginDate",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "format": "date"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/marketingText/copy": {
      "post": {
        "summary": "Allows to copy marketing message to another channel and hotel",
        "description": "Use this API to copy one channel's mapping for marketing messages to another channel and hotel mapping. <p><strong>OperationId:</strong>copyChannelMarketingText</p>",
        "operationId": "copyChannelMarketingText",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelMarketingTextCopy",
            "in": "body",
            "required": true,
            "description": "Request object to copy channel marketing texts.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelMarketingTextCopy"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/negotiatedRates": {
      "post": {
        "summary": "Adds channel negotiate rate",
        "description": "Use this API to add channel's negotiated rate code mapping with an OPERA profile for a given hotel id <p><strong>OperationId:</strong>postChannelNegotiatedRate</p>",
        "operationId": "postChannelNegotiatedRate",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelNegotiatedRates",
            "in": "body",
            "required": true,
            "description": "Request object for creating Negotiated channel rates.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelNegotiatedRates"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "put": {
        "summary": "Updates channel negotiate rate",
        "description": "Use this API to update channel's negotiated rate code mapping including negotiated profile, negotiate rate access code, start date, end date, and sequence. <p><strong>OperationId:</strong>putChannelNegotiatedRate</p>",
        "operationId": "putChannelNegotiatedRate",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelNegotiatedRates",
            "in": "body",
            "required": true,
            "description": "Request object for changing Negotiated channel rates.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelNegotiatedRates"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "delete": {
        "summary": "Deletes channel negotiate rate",
        "description": "Use this API to update channel's negotiated rate code mapping including negotiated profile, negotiate rate access code, start date, end date, and sequence. <p><strong>OperationId:</strong>deleteChannelNegotiatedRate</p>",
        "operationId": "deleteChannelNegotiatedRate",
        "deprecated": true,
        "parameters": [
          {
            "name": "bookingChannelCode",
            "in": "query",
            "required": false,
            "description": "Booking Channel Code.",
            "type": "string"
          },
          {
            "name": "channelRatePlanCode",
            "in": "query",
            "required": false,
            "description": "Channel Room Type.",
            "type": "string"
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Hotel Code.",
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "idContext",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "type",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "externalSystem",
            "in": "query",
            "required": false,
            "description": "When name type is external, indicates the external system the name belongs to.",
            "type": "string"
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "description": "Language code associated with an alternate name.",
            "type": "string"
          },
          {
            "name": "nameType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Person's name in an external system.",
            "uniqueItems": true,
            "enum": [
              "Primary",
              "Alternate",
              "Incognito",
              "External",
              "Phonetic"
            ]
          },
          {
            "name": "namePrefix",
            "in": "query",
            "required": false,
            "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
            "type": "string"
          },
          {
            "name": "givenName",
            "in": "query",
            "required": false,
            "description": "Given name, first name or names.",
            "type": "string"
          },
          {
            "name": "middleName",
            "in": "query",
            "required": false,
            "description": "The middle name of the person name.",
            "type": "string"
          },
          {
            "name": "surname",
            "in": "query",
            "required": false,
            "description": "Family name, last name. May also be used for full name if the sending system does not have the ability to separate a full name into its parts, e.g. the surname element may be used to pass the full name.",
            "type": "string"
          },
          {
            "name": "nameSuffix",
            "in": "query",
            "required": false,
            "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
            "type": "string"
          },
          {
            "name": "nameTitle",
            "in": "query",
            "required": false,
            "description": "Degree or honors (e.g., Ph.D., M.D.)",
            "type": "string"
          },
          {
            "name": "nameTitleSuffix",
            "in": "query",
            "required": false,
            "description": "Title Suffix. Must be populated if ADVANCED_TITLE is on.",
            "type": "integer"
          },
          {
            "name": "envelopeGreeting",
            "in": "query",
            "required": false,
            "description": "Envelope Greeting of the profile",
            "type": "string"
          },
          {
            "name": "salutation",
            "in": "query",
            "required": false,
            "description": "Salutation of the profile",
            "type": "string"
          },
          {
            "name": "accessCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "end",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "The ending value of the date range.",
            "items": {
              "type": "string",
              "format": "date"
            },
            "required": false
          },
          {
            "name": "start",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "The starting value of the date range.",
            "items": {
              "type": "string",
              "format": "date"
            },
            "required": false
          },
          {
            "name": "newAccessCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "channelRatePlanCodeOrder",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "get": {
        "summary": "Gets channel negotiate rate",
        "description": "Use this API to update channel's negotiated rate code mapping including negotiated profile, negotiate rate access code, start date, end date, and sequence. <p><strong>OperationId:</strong>getChannelNegotiatedRate</p>",
        "operationId": "getChannelNegotiatedRate",
        "deprecated": true,
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookingChannelCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "channelRatePlanCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accessCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "uniqueId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "uniqueIdType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Negotiated channel rates.",
            "schema": {
              "$ref": "#/definitions/channelNegotiatedRateDetails"
            }
          },
          "204": {
            "description": "ChannelNegotiatedRate not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/rateCategories": {
      "delete": {
        "summary": "Deletes given channel's rate categories",
        "description": "Use this API to delete channel rate categories for a given channel. <p><strong>OperationId:</strong>deleteChannelRateCategories</p>",
        "operationId": "deleteChannelRateCategories",
        "deprecated": true,
        "parameters": [
          {
            "name": "bookingChannelCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Booking channel code of rate category.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "rateCategories",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Code of rate category.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/rateLevels": {
      "delete": {
        "summary": "Deletes channel rate level",
        "description": "Use this API to delete channel rate level code's description. <p><strong>OperationId:</strong>deleteChannelRateLevels</p>",
        "operationId": "deleteChannelRateLevels",
        "deprecated": true,
        "parameters": [
          {
            "name": "bookingChannelCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Booking channel code of rate level.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "rateLevels",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Code of rate level.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/rates": {
      "get": {
        "summary": "Gets channel property rate mapping",
        "description": "Use this API to get channel property rate mapping including channel rate code, start date, end date, rate level, channel rate description. <p><strong>OperationId:</strong>getChannelRateMapping</p>",
        "operationId": "getChannelRateMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "channelCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "ratePlanCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "channelRatePlanCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "ratePlanCategories",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "channelRatePlanCategories",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "includeUnmappedRatePlans",
            "in": "query",
            "required": false,
            "description": "Flag whether to include unmapped rate codes.",
            "type": "boolean"
          },
          {
            "name": "onlyUnmappedRatePlans",
            "in": "query",
            "required": false,
            "description": "Flag whether to include unmapped rate codes only.",
            "type": "boolean"
          },
          {
            "name": "includeInactiveMappings",
            "in": "query",
            "required": false,
            "description": "Flag whether to include inactive mappings.",
            "type": "boolean"
          },
          {
            "name": "onlyNegotiatedRates",
            "in": "query",
            "required": false,
            "description": "Flag whether to include negotiated rate mappings only.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching hotel-channel rate code mappings given search criteria including hotel codes, booking channel codes, rate codes, channel rate codes, etc.",
            "schema": {
              "$ref": "#/definitions/channelRateMappings"
            }
          },
          "204": {
            "description": "ChannelRateMapping not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "post": {
        "summary": "Adds channel property rate mapping",
        "description": "Use this API to add channel property rate mapping with OPERA hotel rate <p><strong>OperationId:</strong>postChannelRateMapping</p>",
        "operationId": "postChannelRateMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelRateMapping",
            "in": "body",
            "required": true,
            "description": "Request object for creating channel rate mappings.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelRateMapping"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "put": {
        "summary": "Updates channel property rate mapping",
        "description": "Use this API to update channel property rate mapping including channel rate code, start date, end date, rate level, channel rate description. <p><strong>OperationId:</strong>putChannelRateMapping</p>",
        "operationId": "putChannelRateMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelRateMapping",
            "in": "body",
            "required": true,
            "description": "Request object for changing channel rate mappings.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelRateMapping"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "delete": {
        "summary": "Deletes channel property rate mapping",
        "description": "Use this API to delete channel property rate mapping including channel rate code, start date, end date, rate level, channel rate description. <p><strong>OperationId:</strong>deleteChannelRateMapping</p>",
        "operationId": "deleteChannelRateMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "bookingChannelCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Booking Channel Code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "channelRatePlanCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Channel Room Type.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "hasChannelNegotiatedRates",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "True if the mapping has channel negotiated rates, otherwise false.",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "hasNegotiatedRates",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "True if this channel rate plan code has negotiated rates, otherwise false",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel Code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "ratePlanCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Room Type.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/rates/globalDescriptions": {
      "get": {
        "summary": "Gets global rate descriptions",
        "description": "Use this API to get global rate description for given hotel id. <p><strong>OperationId:</strong>getChannelRatesGlobalDescriptions</p>",
        "operationId": "getChannelRatesGlobalDescriptions",
        "deprecated": true,
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "ratePlanCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "roomTypes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "globalDescriptionType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Either Room Type or Rate Plan Code",
            "uniqueItems": true,
            "enum": [
              "RoomType",
              "RatePlan"
            ]
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object after fetch Global Descriptions of the GDS Channels",
            "schema": {
              "$ref": "#/definitions/channelGlobalDescriptions"
            }
          },
          "204": {
            "description": "ChannelRatesGlobalDescriptions not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "post": {
        "summary": "Adds global room descriptions",
        "description": "Use this API to adds global room description for given hotel id and room type code <p><strong>OperationId:</strong>postChannelRatesGlobalDescriptions</p>",
        "operationId": "postChannelRatesGlobalDescriptions",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelGlobalDescriptions",
            "in": "body",
            "required": true,
            "description": "Request object to create new Global Descriptions of the GDS Channels",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelGlobalDescriptions"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "put": {
        "summary": "Updates global rate descriptions",
        "description": "Use this API to update global rate description for given hotel id and rate code <p><strong>OperationId:</strong>putChannelRatesGlobalDescriptions</p>",
        "operationId": "putChannelRatesGlobalDescriptions",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelGlobalDescriptions",
            "in": "body",
            "required": true,
            "description": "Request object to update existing Global Descriptions of the GDS Channels",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelGlobalDescriptions"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "delete": {
        "summary": "Deletes global rate descriptions",
        "description": "Use this API to delete global rate description for given hotel id and rate code. <p><strong>OperationId:</strong>deleteChannelRatesGlobalDescriptions</p>",
        "operationId": "deleteChannelRatesGlobalDescriptions",
        "deprecated": true,
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Property mapping with Rate plan code or Room type",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "description": "Code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "description.",
            "type": "string"
          },
          {
            "name": "code1",
            "in": "query",
            "required": false,
            "description": "Code.",
            "type": "string"
          },
          {
            "name": "description1",
            "in": "query",
            "required": false,
            "description": "description.",
            "type": "string"
          },
          {
            "name": "globalDescType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Either Room Type or Rate Plan Code",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "RoomType",
                "RatePlan"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/rates/roomSequence": {
      "put": {
        "summary": "Updates channel property rateroom sequence",
        "description": "Use this API to update sequence for given channel property rate room mapping  <p><strong>OperationId:</strong>putChannelRateRoomSeq</p>",
        "operationId": "putChannelRateRoomSeq",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelRateRoomSequence",
            "in": "body",
            "required": true,
            "description": "Request object for changing sequence for channel rate rooms.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelRateRoomSequence"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/restrictions/publish": {
      "put": {
        "summary": "Publishes channel restrictions",
        "description": "This API changes the channel restrictions. <p><strong>OperationId:</strong>publishChannelRestrictions</p>",
        "operationId": "publishChannelRestrictions",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelRestrictions",
            "in": "body",
            "required": true,
            "description": "Request object for publishing rate restrictions to channels.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelRestrictions"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/roomTypes": {
      "delete": {
        "summary": "Delete channel configuration",
        "description": "Use this API to delete channel configuration. <p><strong>OperationId:</strong>deleteChannelRoomTypes</p>",
        "operationId": "deleteChannelRoomTypes",
        "deprecated": true,
        "parameters": [
          {
            "name": "bookingChannelCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Booking channel code of room type.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "roomTypes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Code of room type.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/rooms": {
      "post": {
        "summary": "Adds channel property room mapping",
        "description": "Use this API to add channel room mapping to OPERA hotel's room. <p><strong>OperationId:</strong>postChannelRoomMapping</p>",
        "operationId": "postChannelRoomMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelRoomMappings",
            "in": "body",
            "required": true,
            "description": "Request object for Channel Room Mapping creation.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelRoomMappings"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "put": {
        "summary": "Updates channel room configuration",
        "description": "Use this API to update channel room description <p><strong>OperationId:</strong>manageChannelRoomMapping</p>",
        "operationId": "manageChannelRoomMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelRoomMappings",
            "in": "body",
            "required": true,
            "description": "Request object to create, edit or delete channel room type mapping.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelRoomMappings"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/rooms/globalDescription": {
      "put": {
        "summary": "Update global descriptions for a room",
        "description": "Use this API to update OPERA room's global description for global distribution type channels <p><strong>OperationId:</strong>putRoomDescription</p>",
        "operationId": "putRoomDescription",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelGlobalDescription",
            "in": "body",
            "required": true,
            "description": "Request object for changing Room Mapping description.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelGlobalDescription"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/rooms/globalDescriptions": {
      "get": {
        "summary": "Gets global room descriptions",
        "description": "Use this API to get global room description for given hotel id and room type code. <p><strong>OperationId:</strong>getChannelRoomsGlobalDescriptions</p>",
        "operationId": "getChannelRoomsGlobalDescriptions",
        "deprecated": true,
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "ratePlanCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "roomTypes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "globalDescriptionType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Either Room Type or Rate Plan Code",
            "uniqueItems": true,
            "enum": [
              "RoomType",
              "RatePlan"
            ]
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object after fetch Global Descriptions of the GDS Channels",
            "schema": {
              "$ref": "#/definitions/channelGlobalDescriptions"
            }
          },
          "204": {
            "description": "ChannelRoomsGlobalDescriptions not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "post": {
        "summary": "Adds global rate descriptions",
        "description": "Use this API to add global rate description for given hotel id and rate code <p><strong>OperationId:</strong>postChannelRoomsGlobalDescriptions</p>",
        "operationId": "postChannelRoomsGlobalDescriptions",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelGlobalDescriptions",
            "in": "body",
            "required": true,
            "description": "Request object to create new Global Descriptions of the GDS Channels",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelGlobalDescriptions"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "put": {
        "summary": "Updates global room descriptions",
        "description": "Use this API to update global room description for given hotel id and room type code <p><strong>OperationId:</strong>putChannelRoomsGlobalDescriptions</p>",
        "operationId": "putChannelRoomsGlobalDescriptions",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelGlobalDescriptions",
            "in": "body",
            "required": true,
            "description": "Request object to update existing Global Descriptions of the GDS Channels",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelGlobalDescriptions"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "delete": {
        "summary": "Deletes global room descriptions",
        "description": "Use this API to delete global room description for given hotel id and room type code. <p><strong>OperationId:</strong>deleteChannelRoomsGlobalDescriptions</p>",
        "operationId": "deleteChannelRoomsGlobalDescriptions",
        "deprecated": true,
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Property mapping with Rate plan code or Room type",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "description": "Code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "description.",
            "type": "string"
          },
          {
            "name": "code1",
            "in": "query",
            "required": false,
            "description": "Code.",
            "type": "string"
          },
          {
            "name": "description1",
            "in": "query",
            "required": false,
            "description": "description.",
            "type": "string"
          },
          {
            "name": "globalDescType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Either Room Type or Rate Plan Code",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "RoomType",
                "RatePlan"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/subChannels": {
      "delete": {
        "summary": "Deletes sub channel configuration",
        "description": "Use this API to delete sub-channel (carrier) configuration for a given channel code. <p><strong>OperationId:</strong>deleteChannelCarriers</p>",
        "operationId": "deleteChannelCarriers",
        "deprecated": true,
        "parameters": [
          {
            "name": "bookingChannelCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Booking channel code of carrier.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "carriers",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Code of carrier.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/{channelCode}": {
      "get": {
        "summary": "Gets channel detail",
        "description": "This API retrieves channel information for the given channel code. <p><strong>OperationId:</strong>getChannel</p>",
        "operationId": "getChannel",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a channel."
          },
          {
            "name": "includeInactive",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Indicates whether fetch should include inactive codes or not.",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple type for external system instructions that can be used in requests for partial operations.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "RateLevel",
                "Error",
                "RoomType",
                "Carrier",
                "RateCategory"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching details of channel.",
            "schema": {
              "$ref": "#/definitions/channel"
            }
          },
          "204": {
            "description": "Channel not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/{channelCode}/errorCodes": {
      "put": {
        "summary": "Updates channel error codes",
        "description": "Use this API to update channel error code mapping configurations <p><strong>OperationId:</strong>putChannelErrors</p>",
        "operationId": "putChannelErrors",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a channel."
          },
          {
            "name": "channelErrors",
            "in": "body",
            "required": true,
            "description": "Request object for changing details of channel errors.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelErrors"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "post": {
        "summary": "Adds channel error codes",
        "description": "Use this API to add channel error code mapping configurations <p><strong>OperationId:</strong>postChannelErrors</p>",
        "operationId": "postChannelErrors",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a channel."
          },
          {
            "name": "channelErrors",
            "in": "body",
            "required": true,
            "description": "Request object for creating channel errors.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelErrors"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/{channelCode}/hotels": {
      "get": {
        "summary": "Get channel hotel mappings",
        "description": "Use this API to get the channel mappings to the OPERA hotel id, including hotel details for channel hotel code, room sell limit per reservation, city code and end date. <p><strong>OperationId:</strong>getChannelHotelCodeMapping</p>",
        "operationId": "getChannelHotelCodeMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a channel."
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "OPERA hotel code for which mapped channel hotel code should be fetched.",
            "type": "string"
          },
          {
            "name": "channelHotelCode",
            "in": "query",
            "required": false,
            "description": "Channel hotel code for which mapped OPERA hotel code should be fetched.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response giving OPERA hotel code mapped to channel hotel code for a booking channel and vice versa.",
            "schema": {
              "$ref": "#/definitions/channelHotelCodeMapping"
            }
          },
          "204": {
            "description": "ChannelHotelCodeMapping not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/{channelCode}/parameters": {
      "put": {
        "summary": "Updates channel control settings",
        "description": "Use this API to active/inactive channel controls. It also allows to update channel control settings. <p><strong>OperationId:</strong>putChannelParameters</p>",
        "operationId": "putChannelParameters",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a channel."
          },
          {
            "name": "changeChannelParameters",
            "in": "body",
            "required": true,
            "description": "Request object for modifying channel parameter(s).",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/changeChannelParameters"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/{channelCode}/rateCategories": {
      "put": {
        "summary": "Updates given channel's rate categories",
        "description": "Use this API to update channel rate categories for a given channel. <p><strong>OperationId:</strong>putChannelRateCategories</p>",
        "operationId": "putChannelRateCategories",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a channel."
          },
          {
            "name": "channelRateCategories",
            "in": "body",
            "required": true,
            "description": "Request object for changing details of channel rate categories.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelRateCategories"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "post": {
        "summary": "Adds given channel's rate categories",
        "description": "Use this API to add channel rate categories for a given channel. <p><strong>OperationId:</strong>postChannelRateCategories</p>",
        "operationId": "postChannelRateCategories",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a channel."
          },
          {
            "name": "channelRateCategories",
            "in": "body",
            "required": true,
            "description": "Request object for creating channel rate categories.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelRateCategories"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/{channelCode}/rateLevels": {
      "put": {
        "summary": "Updates channel rate level",
        "description": "Use this API to update channel rate level code's description <p><strong>OperationId:</strong>putChannelRateLevels</p>",
        "operationId": "putChannelRateLevels",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a channel."
          },
          {
            "name": "channelRateLevels",
            "in": "body",
            "required": true,
            "description": "Request object for changing details of channel rate levels.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelRateLevels"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "post": {
        "summary": "Adds channel rate level",
        "description": "Use this API to add channel rate level configurations <p><strong>OperationId:</strong>postChannelRateLevels</p>",
        "operationId": "postChannelRateLevels",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a channel."
          },
          {
            "name": "channelRateLevels",
            "in": "body",
            "required": true,
            "description": "Request object for creating channel rate levels.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelRateLevels"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/{channelCode}/ratePlans": {
      "put": {
        "summary": "Publishes channel rate plan codes",
        "description": "This API changes the channel rate plans for given channel code. <p><strong>OperationId:</strong>publishChannelRatePlans</p>",
        "operationId": "publishChannelRatePlans",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a channel."
          },
          {
            "name": "channelRatePlans",
            "in": "body",
            "required": true,
            "description": "Request object for publishing rate codes to GDS.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelRatePlans"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/{channelCode}/rateRoomSequences": {
      "get": {
        "summary": "Gets channel property rateroom sequence",
        "description": "Use this API to get sequence for given channel property rate room mapping. <p><strong>OperationId:</strong>getChannelRateRoomSeq</p>",
        "operationId": "getChannelRateRoomSeq",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a channel."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "ratePlanCode",
            "in": "query",
            "required": false,
            "description": "Hotel Rate Plan Code.",
            "type": "string"
          },
          {
            "name": "roomType",
            "in": "query",
            "required": false,
            "description": "Hotel Room Type.",
            "type": "string"
          },
          {
            "name": "channelRatePlanCode",
            "in": "query",
            "required": false,
            "description": "Channel Rate Plan Code.",
            "type": "string"
          },
          {
            "name": "channelRoomType",
            "in": "query",
            "required": false,
            "description": "Channel Room Type.",
            "type": "string"
          },
          {
            "name": "channelRateRoomParameterName",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Enumaration of the different parameters Channel Rate Room accepts.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "ShowInactive"
              ]
            },
            "required": false
          },
          {
            "name": "channelRateRoomParameterValue",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for channel rate rooms sequence based on a criteria.",
            "schema": {
              "$ref": "#/definitions/channelRateRoomSequenceDetails"
            }
          },
          "204": {
            "description": "ChannelRateRoomSeq not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/{channelCode}/rates/{channelRateCode}/globalDescription": {
      "put": {
        "summary": "Updates global descriptions for a rate",
        "description": "Use this API to update OPERA rate's global description for global distribution type channels <p><strong>OperationId:</strong>putRateGlobalDescription</p>",
        "operationId": "putRateGlobalDescription",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelRateCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Channel Rate Code."
          },
          {
            "name": "channelCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a channel."
          },
          {
            "name": "channelGlobalDescription",
            "in": "body",
            "required": true,
            "description": "Request object for changing channel rate codes global description.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelGlobalDescription"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/{channelCode}/roomTypes": {
      "put": {
        "summary": "Updates channel room",
        "description": "Use this API to update channel room description <p><strong>OperationId:</strong>putChannelRoomTypes</p>",
        "operationId": "putChannelRoomTypes",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a channel."
          },
          {
            "name": "channelRoomTypes",
            "in": "body",
            "required": true,
            "description": "Request object for changing details of channel room types.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelRoomTypes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "post": {
        "summary": "Adds channel room",
        "description": "Use this API to add channel room configuration <p><strong>OperationId:</strong>postChannelRoomTypes</p>",
        "operationId": "postChannelRoomTypes",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a channel."
          },
          {
            "name": "channelRoomTypes",
            "in": "body",
            "required": true,
            "description": "Request object for creating channel room types.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelRoomTypes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/{channelCode}/subChannels": {
      "put": {
        "summary": "Updates sub channel configuration",
        "description": "Use this API to update sub-channel (carrier) configuration for a given channel code <p><strong>OperationId:</strong>putChannelCarriers</p>",
        "operationId": "putChannelCarriers",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a channel."
          },
          {
            "name": "channelCarriers",
            "in": "body",
            "required": true,
            "description": "Request object for changing details of channel carriers.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelCarriers"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "post": {
        "summary": "Adds sub channel configuration",
        "description": "Use this API to add sub-channel (carrier) configuration for a given channel code <p><strong>OperationId:</strong>postChannelCarriers</p>",
        "operationId": "postChannelCarriers",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a channel."
          },
          {
            "name": "channelCarriers",
            "in": "body",
            "required": true,
            "description": "Request object for creating channel carriers.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelCarriers"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/{channelCode}/tenants": {
      "post": {
        "summary": "Adds channel tenants.",
        "description": "This API adds channel tenants. <p><strong>OperationId:</strong>postChannelOrgMapping</p>",
        "operationId": "postChannelOrgMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a channel."
          },
          {
            "name": "channelOrgMapping",
            "in": "body",
            "required": true,
            "description": "Request object for Create Channel to ORG and CRO Mapping.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelOrgMapping"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/channels/{channelCode}/tenants/{tenantCode}": {
      "put": {
        "summary": "Updates channel tenants mapping.",
        "description": "This API changes channel tenants mapping. <p><strong>OperationId:</strong>putChannelOrgMapping</p>",
        "operationId": "putChannelOrgMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "tenantCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Tenant Code."
          },
          {
            "name": "channelCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a channel."
          },
          {
            "name": "channelOrgMapping",
            "in": "body",
            "required": true,
            "description": "Request object for Change Channel to ORG and CRO Mapping.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelOrgMapping"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "get": {
        "summary": "Retrieves channel tenants mapping.",
        "description": "This API retrieves channel tenants mapping. <p><strong>OperationId:</strong>getChannelOrgMapping</p>",
        "operationId": "getChannelOrgMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "tenantCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Tenant Code."
          },
          {
            "name": "channelCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a channel."
          },
          {
            "name": "chainCode",
            "in": "query",
            "required": false,
            "description": "Chain code for which channel code and org code are mapped.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for Fetch Channel to ORG and CRO Mapping.",
            "schema": {
              "$ref": "#/definitions/channelOrgMappingsDetails"
            }
          },
          "204": {
            "description": "ChannelOrgMapping not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "delete": {
        "summary": "Deletes channel tenants mapping.",
        "description": "This API deletes channel tenants mapping. <p><strong>OperationId:</strong>deleteChannelOrgMapping</p>",
        "operationId": "deleteChannelOrgMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "tenantCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Tenant Code."
          },
          {
            "name": "channelCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a channel."
          },
          {
            "name": "chainCode",
            "in": "query",
            "required": false,
            "description": "Chain code for which channel code and org code are mapped.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/clusters/{clusterId}/channels/negotiatedRates": {
      "get": {
        "summary": "Gets channel negotiate rate",
        "description": "Use this API to update channel's negotiated rate code mapping including negotiated profile, negotiate rate access code, start date, end date, and sequence. <p><strong>OperationId:</strong>getChannelNegotiatedRates</p>",
        "operationId": "getChannelNegotiatedRates",
        "deprecated": true,
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "$ref": "#/parameters/clusterIdPath"
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "channelCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "channelRateCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ratePlanCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "accessCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "internalChannelsOnly",
            "in": "query",
            "required": false,
            "description": "If true then it would fetch only the internal channels. If false then it expects channelCode as well to establish if its an inernal or external channel.",
            "type": "boolean",
            "default": false
          },
          {
            "name": "uniqueId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "uniqueIdType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Negotiated channel rates.",
            "schema": {
              "$ref": "#/definitions/profileNegotiatedRateDetails"
            }
          },
          "204": {
            "description": "ChannelNegotiatedRate not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/clusters/{clusterId}/channels/profileRatesAccess": {
      "put": {
        "summary": "Initiate profile rate access codes",
        "description": "<p><strong>OperationId:</strong> putProfileNegRateAccessCodes</p> <p>Operation to Initiate profile rate access codes</p>",
        "operationId": "putProfileNegRateAccessCodes",
        "deprecated": true,
        "parameters": [
          {
            "name": "items",
            "in": "body",
            "required": true,
            "description": "Request for configuring profile rate access codes.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/profileRateAccessCodes"
                }
              ]
            }
          },
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "description": "ClusterId in URI path."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/clusters/{clusterId}/channels/profileRatesAccessDeletes": {
      "post": {
        "summary": "Delete Channel Rates Access for cluster level",
        "operationId": "deleteProfileNegRateAccessCodes",
        "description": "<p><strong>operationId:</strong>deleteProfileNegRateAccessCodes</p> <p> Delete Channel Rates Access for cluster level</p>",
        "deprecated": true,
        "parameters": [
          {
            "name": "deleteNegotiatedRates",
            "in": "body",
            "required": true,
            "description": "Request body",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/deleteNegotiatedRates"
                }
              ]
            }
          },
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "description": "ClusterId in URI path."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/clusters/{clusterId}/channels/syncProfileRatesAccess": {
      "put": {
        "summary": "Sync profile rate access codes",
        "description": "<p><strong>OperationId:</strong> syncProfileNegRateAccessCodes</p> <p>Operation to Initiate profile rate access codes</p>",
        "operationId": "syncProfileNegRateAccessCodes",
        "deprecated": true,
        "parameters": [
          {
            "name": "items",
            "in": "body",
            "required": true,
            "description": "Request for configuring profile rate access codes.",
            "schema": {
              "$ref": "#/definitions/syncProfileRatesAccessCodes"
            }
          },
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 50,
            "description": "ClusterId in URI path."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/hotels/totalPricing": {
      "post": {
        "summary": "Adds total pricing tax and fee types",
        "description": "Use this API to add global distribution channels tax and fee configurations. <p><strong>OperationId:</strong>postTotalPricingElements</p>",
        "operationId": "postTotalPricingElements",
        "deprecated": true,
        "parameters": [
          {
            "name": "totalPricingElements",
            "in": "body",
            "required": true,
            "description": "Request object to create the total pricing elements of GDS channel.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/totalPricingElements"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "put": {
        "summary": "Updates total pricing tax and fee types",
        "description": "Use this API to update global distribution channels tax and fee configurations <p><strong>OperationId:</strong>putTotalPricingElements</p>",
        "operationId": "putTotalPricingElements",
        "deprecated": true,
        "parameters": [
          {
            "name": "totalPricingElements",
            "in": "body",
            "required": true,
            "description": "Request object to change the total pricing elements of GDS channel.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/totalPricingElements"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "delete": {
        "summary": "Deletes total pricing tax and fee types",
        "description": "Use this API to delete global distribution channels tax and fee configurations. <p><strong>OperationId:</strong>deleteTotalPricingElements</p>",
        "operationId": "deleteTotalPricingElements",
        "deprecated": true,
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel Code that associated with Transaction Code and Total Pricing Element",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "description": "Code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "description.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/hotels/totalPricing/copy": {
      "put": {
        "summary": "Allows to copy total pricing tax and fees to another hotel id",
        "description": "Use this API to copy global distribution system's fee and tax configurations from one hotel to another hotel within same chain/tenant <p><strong>OperationId:</strong>copyTotalPricingElements</p>",
        "operationId": "copyTotalPricingElements",
        "deprecated": true,
        "parameters": [
          {
            "name": "totalPricingElementsCopy",
            "in": "body",
            "required": true,
            "description": "Request object to copy the total pricing elements into the target properties.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/totalPricingElementsCopy"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/hotels/{hotelId}/channel/sellLimits": {
      "get": {
        "summary": "Gets sell limit detail for a given channel hotel combination",
        "description": "Use this API to retrieve channel sell limit detail to get or review daily sell limits for a given hotel-channel combination. <p><strong>OperationId:</strong>getChannelSellLimits</p>",
        "operationId": "getChannelSellLimits",
        "deprecated": true,
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel where channel sell limits is searched."
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": true,
            "description": "Sell limits which exist at or beyond this date will be fetched.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "bookingChannelCode",
            "in": "query",
            "required": false,
            "description": "Channel for which the sell limits are to be fetched.",
            "type": "string"
          },
          {
            "name": "channelRoomType",
            "in": "query",
            "required": false,
            "description": "Channel room type for which the sell limits are to be fetched.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object containing sell limit schedules set for the channel or channel room type.",
            "schema": {
              "$ref": "#/definitions/channelSellLimits"
            }
          },
          "204": {
            "description": "ChannelSellLimits not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Inventory"
        ]
      }
    },
    "/hotels/{hotelId}/channelSellLimits": {
      "put": {
        "summary": "Updates channel sell limits by date",
        "description": "Use this API to update channel property sell limit mapping by given dates. <p><strong>OperationId:</strong>changeChannelSellLimitsByDate</p>",
        "operationId": "changeChannelSellLimitsByDate",
        "deprecated": true,
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel where channel sell limits are updated by date."
          },
          {
            "name": "channelSellLimitsByDate",
            "in": "body",
            "required": true,
            "description": "Request object to create or update sell limits for the channel or channel room type by day. Advanced logic is implemented to combine consecutive blocks of sell limits into a single schedule which have the same limits configured. Existing schedules can also be split as needed to account for overlapping schedules.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelSellLimitsByDate"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Inventory"
        ]
      }
    },
    "/hotels/{hotelId}/channelSellLimits/{Id}": {
      "delete": {
        "summary": "Deletes channel sell limits",
        "description": "Use this API to delete channel property sell limit mapping. <p><strong>OperationId:</strong>deleteChannelSellLimits</p>",
        "operationId": "deleteChannelSellLimits",
        "deprecated": true,
        "parameters": [
          {
            "name": "Id",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the channel sell limit to be deleted."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel where channel sell limits is deleted."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Inventory"
        ]
      }
    },
    "/hotels/{hotelId}/channels/guarantees": {
      "get": {
        "summary": "Gets channel guarantee code mappings",
        "description": "Use this API  to get the list of the channel guarantee code mappings to the OPERA guarantee codes. <p><strong>OperationId:</strong>getChannelGuaranteeCodeMappings</p>",
        "operationId": "getChannelGuaranteeCodeMappings",
        "deprecated": true,
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "bookingChannelCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "guaranteeCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "channelGuaranteeCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "Indicates whether search includes inactive mapping.",
            "type": "boolean"
          },
          {
            "name": "fetchUnmapped",
            "in": "query",
            "required": false,
            "description": "Indicates whether unmapped channel-hotel guarantee code should be fetched.",
            "type": "boolean"
          },
          {
            "name": "fetchMapped",
            "in": "query",
            "required": false,
            "description": "Indicates whether mapped channel-hotel guarantee code should be fetched.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching channel-hotel guarantee code mappings.",
            "schema": {
              "$ref": "#/definitions/channelGuaranteeCodeMappingDetails"
            }
          },
          "204": {
            "description": "ChannelGuaranteeCodeMappings not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/hotels/{hotelId}/channels/ratePlans": {
      "put": {
        "summary": "Publishes channel hotel rate plan codes",
        "description": "This API changes the channel rate plans for given Hotel Id. <p><strong>OperationId:</strong>publishHotelChannelRatePlans</p>",
        "operationId": "publishHotelChannelRatePlans",
        "deprecated": true,
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "channelRatePlans",
            "in": "body",
            "required": true,
            "description": "Request object for publishing rate codes to GDS.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelRatePlans"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/hotels/{hotelId}/channels/rates": {
      "post": {
        "summary": "Distributes channel rate mappings to channel room types",
        "description": "Use this API to link (distribute) channel a rate code to channel room types. <p><strong>OperationId:</strong>postChannelRates</p>",
        "operationId": "postChannelRates",
        "deprecated": true,
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "channelRates",
            "in": "body",
            "required": true,
            "description": "Request object for distributing channel rates.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelRates"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/hotels/{hotelId}/channels/totalPricing": {
      "get": {
        "summary": "Gets total pricing tax and fee types",
        "description": "Use this API to get global distribution channels tax and fee configurations. <p><strong>OperationId:</strong>getTotalPricingElements</p>",
        "operationId": "getTotalPricingElements",
        "deprecated": true,
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "elementCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "transactionCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object to populate total pricing elements of the GDS channel.",
            "schema": {
              "$ref": "#/definitions/totalPricingElements"
            }
          },
          "204": {
            "description": "TotalPricingElements not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/hotels/{hotelId}/channels/{channelCode}/cardType/{cardTypeCode}": {
      "post": {
        "summary": "Adds channel credit card mapping for a hotel",
        "description": "Use this API to add channel mapping for OPERA credit cards to channel for a given hotel id <p><strong>OperationId:</strong>postChannelCardTypeMapping</p>",
        "operationId": "postChannelCardTypeMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "cardTypeCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a channel."
          },
          {
            "name": "channelCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a channel."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "channelCardTypeMappings",
            "in": "body",
            "required": true,
            "description": "Request object for creating a new channel-hotel card type mapping.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelCardTypeMappings"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "put": {
        "summary": "Updates channel credit card mapping for a hotel",
        "description": "Use this API to update channel mapping for OPERA credit cards to channel for a given hotel id <p><strong>OperationId:</strong>putChannelCardTypeMapping</p>",
        "operationId": "putChannelCardTypeMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "cardTypeCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a channel."
          },
          {
            "name": "channelCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a channel."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "channelCardTypeMappings",
            "in": "body",
            "required": true,
            "description": "Request object for changing information of an existing channel-hotel card type mapping.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelCardTypeMappings"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "delete": {
        "summary": "Deletes channel credit card mapping for a hotel",
        "description": "Use this API to delete channel mapping for OPERA credit cards to channel for a given hotel id. <p><strong>OperationId:</strong>deleteChannelCardTypeMapping</p>",
        "operationId": "deleteChannelCardTypeMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "cardTypeCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a channel."
          },
          {
            "name": "channelCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a channel."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "channelCardType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/hotels/{hotelId}/channels/{channelCode}/guarantees/{guaranteeCode}": {
      "post": {
        "summary": "Adds channel guarantee code mapping for a hotel",
        "description": "Use this API to add channel guarantee code mapping to OPERA guarantee code for a given hotel <p><strong>OperationId:</strong>postChannelGuaranteeCodeMapping</p>",
        "operationId": "postChannelGuaranteeCodeMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "guaranteeCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Guarantee Code."
          },
          {
            "name": "channelCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a channel."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "channelGuaranteeCodeMappings",
            "in": "body",
            "required": true,
            "description": "Request object for creating a new channel-hotel guarantee code mapping.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelGuaranteeCodeMappings"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "put": {
        "summary": "Updates channel guarantee code mapping for a hotel",
        "description": "Use this API to update channel guarantee code mapping to OPERA guarantee code for a given hotel <p><strong>OperationId:</strong>putChannelGuaranteeCodeMapping</p>",
        "operationId": "putChannelGuaranteeCodeMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "guaranteeCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Guarantee Code."
          },
          {
            "name": "channelCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a channel."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "channelGuaranteeCodeMappings",
            "in": "body",
            "required": true,
            "description": "Request object for changing information of an existing channel-hotel guarantee code mapping.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelGuaranteeCodeMappings"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "delete": {
        "summary": "Deletes channel guarantee code mapping for a hotel",
        "description": "Use this API to delete channel guarantee code mapping to OPERA guarantee code for a given property. <p><strong>OperationId:</strong>deleteChannelGuaranteeCodeMapping</p>",
        "operationId": "deleteChannelGuaranteeCodeMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "guaranteeCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Guarantee Code."
          },
          {
            "name": "channelCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a channel."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/hotels/{hotelId}/channels/{channelCode}/parameters": {
      "get": {
        "summary": "Retrieves channel parameters.",
        "description": "Use this API to get list of channel parameters and their settings. <p><strong>OperationId:</strong>getChannelParameters</p>",
        "operationId": "getChannelParameters",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a channel."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "parameterNameWildCard",
            "in": "query",
            "required": false,
            "description": "Parameter for wild card search on channel parameters.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for channel parameter(s) based on search criteria.",
            "schema": {
              "$ref": "#/definitions/channelParameterMapping"
            }
          },
          "204": {
            "description": "ChannelParameters not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/hotels/{hotelId}/channels/{channelCode}/policies": {
      "get": {
        "summary": "Retrieves the channel policies",
        "description": "Use this API to retrieve channel policies mapping. <p><strong>OperationId:</strong>getChannelPolicies</p>",
        "operationId": "getChannelPolicies",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a channel."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "requestType",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "channelRatePlanCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "channelRoomTypeCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "ratePlanCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "roomTypeCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "corporateId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "corporateIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Request object for fetching Policies, guarantee, and deposit Details.",
            "schema": {
              "$ref": "#/definitions/channelPolicies"
            }
          },
          "204": {
            "description": "ChannelPolicies not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/hotels/{hotelId}/channels/{channelCode}/rooms/{channelRoomType}/rates": {
      "post": {
        "summary": "Distributes channel room rate mappings.",
        "description": "Use this API to link (distribute) channel a room type to channel rate codes. <p><strong>OperationId:</strong>postChannelRoomTypeRate</p>",
        "operationId": "postChannelRoomTypeRate",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelRoomType",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Channel Room Type."
          },
          {
            "name": "channelCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a channel."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "channelRates",
            "in": "body",
            "required": true,
            "description": "Request object for distributing channel rates.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelRates"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/hotels/{hotelId}/channels/{channelCode}/rooms/{roomTypeCode}": {
      "get": {
        "summary": "Gets channel room mapping by room type",
        "description": "This API retrieves channel room mapping by room type. <p><strong>OperationId:</strong>getChannelRoomMappingById</p>",
        "operationId": "getChannelRoomMappingById",
        "deprecated": true,
        "parameters": [
          {
            "name": "roomTypeCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Room Type Code."
          },
          {
            "name": "channelCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a channel."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "beginDate",
            "in": "query",
            "required": false,
            "description": "Begin Date.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "channelRoomType",
            "in": "query",
            "required": false,
            "description": "Channel Room Type.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for Channel Room Mappings by ID.",
            "schema": {
              "$ref": "#/definitions/channelRoomMapping"
            }
          },
          "204": {
            "description": "ChannelRoomMappingById not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "put": {
        "summary": "Updates channel property room mapping",
        "description": "Use this API to update channel room mapping to OPERA hotel's room mapping including channel room type code, start date, end date, room order. <p><strong>OperationId:</strong>putChannelRoomMapping</p>",
        "operationId": "putChannelRoomMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "roomTypeCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Room Type Code."
          },
          {
            "name": "channelCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a channel."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "channelRoomMapping",
            "in": "body",
            "required": true,
            "description": "Request object for changing Channel Room Mapping.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelRoomMapping"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      },
      "delete": {
        "summary": "Deletes channel property room mapping",
        "description": "Use this API to delete channel room mapping to OPERA hotel's room mapping including channel room type code, start date, end date, room order. <p><strong>OperationId:</strong>deleteChannelRoomMapping</p>",
        "operationId": "deleteChannelRoomMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "roomTypeCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Room Type Code."
          },
          {
            "name": "channelCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a channel."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "beginDate",
            "in": "query",
            "required": false,
            "description": "Begin Date.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "channelRoomType",
            "in": "query",
            "required": false,
            "description": "Channel Room Type.",
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "description": "End date of the hotel-channel room type mapping.",
            "type": "string",
            "format": "date"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/hotels/{hotelId}/channels/{channelCode}/rooms/{roomTypeCode}/inventorySnapshot": {
      "get": {
        "summary": "Gets hotel room's restrictions and channel availability",
        "description": "Operation to fetch the room availability and restrictions for a given property and room type in relation to channels. <p><strong>OperationId:</strong>getChannelInventorySnapshotByRoomType</p>",
        "operationId": "getChannelInventorySnapshotByRoomType",
        "deprecated": true,
        "parameters": [
          {
            "name": "roomTypeCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Room Type Code."
          },
          {
            "name": "channelCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Channel Code."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "name": "friday",
            "in": "query",
            "default": "false",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "monday",
            "in": "query",
            "default": "false",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "saturday",
            "in": "query",
            "default": "false",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sunday",
            "in": "query",
            "default": "false",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "thursday",
            "in": "query",
            "default": "false",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "tuesday",
            "in": "query",
            "default": "false",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "wednesday",
            "in": "query",
            "default": "false",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "snapshotLevel",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Indicates to evaluate statistics for house, channel, and room type level. Must include the specific booking channel in the search criteria.",
            "uniqueItems": true,
            "enum": [
              "BookingChannel",
              "ChannelRoomType"
            ]
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object containing the room availability and restrictions for a hotel in relation to booking channels.",
            "schema": {
              "$ref": "#/definitions/channelInventorySnapshot"
            }
          },
          "204": {
            "description": "ChannelInventorySnapshotByRoomType not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Availability"
        ]
      }
    },
    "/hotels/{hotelId}/channels/{channelId}/channelSellLimitsByDateRange": {
      "put": {
        "summary": "Updates channel sell limits by daterange",
        "description": "Use this API to update channel property sell limit mapping by given date range. <p><strong>OperationId:</strong>changeChannelSellLimitsByDateRange</p>",
        "operationId": "changeChannelSellLimitsByDateRange",
        "deprecated": true,
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the channel for which sell limits are updated by date range."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel where channel sell limits are updated by date range."
          },
          {
            "name": "channelSellLimitsByDateRange",
            "in": "body",
            "required": true,
            "description": "Request object to create or update sell limit schedules for the channel or channel room type within a date range. Existing schedules can be split as needed to account for overlapping schedules.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/channelSellLimitsByDateRange"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Inventory"
        ]
      }
    },
    "/hotels/{hotelId}/generalAvailabilitySimulator": {
      "get": {
        "summary": "Gets the General Availability",
        "description": "Use this API to fetch the General Availability Simulator. <p><strong>OperationId:</strong>getGeneralAvailabilitySimulator</p>",
        "operationId": "getGeneralAvailabilitySimulator",
        "deprecated": true,
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "bookingChannelCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "arrival",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "adults",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "nights",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "children",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "noOfRooms",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "channelRatePlanCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "rateAccessCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "corpIdIATA",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "inventoryBlockCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "promotionCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "currencyCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object to simulate general availability.",
            "schema": {
              "$ref": "#/definitions/generalAvailabilitySimulator"
            }
          },
          "204": {
            "description": "GeneralAvailabilitySimulator not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Availability"
        ]
      }
    },
    "/hotels/{hotelId}/inventorySnapshot": {
      "get": {
        "summary": "Gets hotel's rooms and restrictions channel availability",
        "description": "Operation to fetch the room availability and restrictions for a given property in relation to channels. <p><strong>OperationId:</strong>getChannelInventorySnapshot</p>",
        "operationId": "getChannelInventorySnapshot",
        "deprecated": true,
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "fromDate",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "name": "friday",
            "in": "query",
            "default": "false",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "monday",
            "in": "query",
            "default": "false",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "saturday",
            "in": "query",
            "default": "false",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sunday",
            "in": "query",
            "default": "false",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "thursday",
            "in": "query",
            "default": "false",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "tuesday",
            "in": "query",
            "default": "false",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "wednesday",
            "in": "query",
            "default": "false",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "duration",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "bookingChannelCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "channelRoomTypes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "snapshotLevel",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Indicates to evaluate statistics for house, channel, and room type level. Must include the specific booking channel in the search criteria.",
            "uniqueItems": true,
            "enum": [
              "BookingChannel",
              "ChannelRoomType"
            ]
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object containing the room availability and restrictions for a hotel in relation to booking channels.",
            "schema": {
              "$ref": "#/definitions/channelInventorySnapshot"
            }
          },
          "204": {
            "description": "ChannelInventorySnapshot not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Availability"
        ]
      }
    },
    "/hotels/{hotelId}/rateParity": {
      "get": {
        "summary": "Gets channel's rate configuration",
        "description": "Operation to Fetch the Rate Parity. The rate parity search criteria can include room types, rate plans, promotion code, rate access code or chain codes. <p><strong>OperationId:</strong>getRateParity</p>",
        "operationId": "getRateParity",
        "deprecated": true,
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "comparisonType",
            "in": "query",
            "required": false,
            "description": "An enumerated type defining the Parity Comparison type. Values: FIRST_RATES, CHANNEL_RATES. CHANNEL_RATES requires HotelCode and BookingChannelCode as part of request.",
            "type": "string"
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "description": "Language identification.",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "numberOfDays",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "channelCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "roomType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "ratePlanCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "channelRoomType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "channelRatePlanCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "chainCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "rateAccessCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "inventoryBlockCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "promotionCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "qualifyingProfileCategory",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "qualifyingProfileId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object to fetch Rate Parity.",
            "schema": {
              "$ref": "#/definitions/rateParity"
            }
          },
          "204": {
            "description": "RateParity not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Availability"
        ]
      }
    },
    "/hotels/{hotelId}/rates/{ratePlanCode}/globalDescription": {
      "get": {
        "summary": "Gets global rate descriptions",
        "description": "Use this API to get global rate description for given hotel id and rate code. <p><strong>OperationId:</strong>getChannelRateCodeGlobalDesc</p>",
        "operationId": "getChannelRateCodeGlobalDesc",
        "deprecated": true,
        "parameters": [
          {
            "name": "ratePlanCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Rate Plan Code."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for information regarding global descriptions of hotel rate codes.",
            "schema": {
              "$ref": "#/definitions/channelEnhancedGlobalDescription"
            }
          },
          "204": {
            "description": "ChannelRateCodeGlobalDesc not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/hotels/{hotelId}/rooms/mapping": {
      "get": {
        "summary": "Gets channel property room mapping",
        "description": "Use this API to get channel room mapping to OPERA hotel's room mapping including channel room type code, start date, end date, room order. <p><strong>OperationId:</strong>getChannelRoomMapping</p>",
        "operationId": "getChannelRoomMapping",
        "deprecated": true,
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "bookingChannelCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "roomTypes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "channelRoomTypes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "includeInactiveMappings",
            "in": "query",
            "required": false,
            "description": "Flag whether to include inactive mappings or not.",
            "type": "boolean"
          },
          {
            "name": "includeUnmappedRoomTypes",
            "in": "query",
            "required": false,
            "description": "Flag whether to include unmapped room types or not.",
            "type": "boolean"
          },
          {
            "name": "onlyUnmappedRoomTypes",
            "in": "query",
            "required": false,
            "description": "Flag whether to include mapped room types only.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Operation to fetch hotel-channel room type mappings.",
            "schema": {
              "$ref": "#/definitions/channelRoomMappingsSummary"
            }
          },
          "204": {
            "description": "ChannelRoomMapping not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    },
    "/hotels/{hotelId}/rooms/{roomType}/globalDescription": {
      "get": {
        "summary": "Gets global room descriptions",
        "description": "Use this API to get global room description for given hotel id and room type code. <p><strong>OperationId:</strong>getChannelRoomTypeGlobalDesc</p>",
        "operationId": "getChannelRoomTypeGlobalDesc",
        "deprecated": true,
        "parameters": [
          {
            "name": "roomType",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Room type."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID that identifies a single hotel property."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for information regarding global descriptions of hotel room types.",
            "schema": {
              "$ref": "#/definitions/channelEnhancedGlobalDescription"
            }
          },
          "204": {
            "description": "ChannelRoomTypeGlobalDesc not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Channel"
        ]
      }
    }
  },
  "parameters": {
    "authKey": {
      "name": "authorization",
      "description": "Bearer token that needs to be passed which is generated post user authentication",
      "type": "string",
      "in": "header",
      "required": true
    },
    "x-app-key": {
      "name": "x-app-key",
      "description": "Client or Partner's Application Key",
      "type": "string",
      "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
      "in": "header",
      "required": true
    },
    "x-hotelid": {
      "name": "x-hotelid",
      "type": "string",
      "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
      "in": "header",
      "required": true
    },
    "x-externalsystem": {
      "name": "x-externalsystem",
      "type": "string",
      "maxLength": 80,
      "description": "External system code.",
      "in": "header",
      "x-example": "EXTERNALSYSTEMCODE"
    },
    "Accept-Language": {
      "name": "Accept-Language",
      "type": "string",
      "description": "Language code",
      "in": "header"
    },
    "x-hubid": {
      "name": "x-hubid",
      "type": "string",
      "description": "x-hubid is a logical grouping of multiple properties that allows api consumers to manage data from a group of properties. This x-hubid is a valid list of hub codes configured in OPERA to which the user has access. Rest APIs without hotelId in the operation path can support hub level integration using x-hubid",
      "in": "header"
    },
    "clusterIdPath": {
      "name": "clusterId",
      "description": "ClusterId in URI path",
      "type": "string",
      "in": "path",
      "required": true,
      "maxLength": 50
    }
  },
  "responses": {
    "400": {
      "description": "Bad Request",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "401": {
      "description": "Unauthorized"
    },
    "403": {
      "description": "Forbidden"
    },
    "404": {
      "description": "Resource not found",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "405": {
      "description": "Method not allowed"
    },
    "406": {
      "description": "Not acceptable."
    },
    "413": {
      "description": "Request Entity Too Large"
    },
    "414": {
      "description": "Request URI Too Large"
    },
    "415": {
      "description": "Unsupported Media Type"
    },
    "500": {
      "description": "System Error",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "502": {
      "description": "Bad Gateway"
    },
    "503": {
      "description": "Service Unavailable"
    }
  },
  "definitions": {
    "regionalRateParity": {
      "type": "object",
      "description": "Response object to fetch regional rate parity.",
      "properties": {
        "regionalRateParity": {
          "description": "Information on Room rate parity among channels or hotels",
          "$ref": "#/definitions/regionalRateParityType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "regionalRateParityType": {
      "type": "object",
      "description": "Information on Room Rate Parity among Channels/Property",
      "properties": {
        "regionalParityGroups": {
          "description": "Channels and Property combination.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/regionalParityGroupType"
          }
        },
        "hotelsInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/hotelChannelInfoType"
          }
        },
        "bookingChannelsInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/bookingChannelInfoType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "regionalParityGroupType": {
      "type": "object",
      "description": "Channels and Property Group wise Rates for Room Type and Rate Plan combination.",
      "properties": {
        "regionalParityRates": {
          "description": "Minimum and Maximum Rate on specific arrival date.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/regionalParityRateType"
          }
        },
        "hotelId": {
          "description": "The code that identifies a Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bookingChannelCode": {
          "description": "The code that identifies a Booking Channel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bookingChannelURL": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "bookingChannelIconURL": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "regionalParityRateType": {
      "type": "object",
      "description": "Rate on specific arrival date.",
      "properties": {
        "minimumRate": {
          "type": "number"
        },
        "maximumRate": {
          "type": "number"
        },
        "arrivalDate": {
          "description": "Arrival Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "weekendDay": {
          "type": "boolean"
        },
        "currencyCode": {
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        },
        "statusCode": {
          "description": "Status Code related to functionality.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "statusDescription": {
          "description": "Description of Status Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "hotelChannelInfoType": {
      "type": "object",
      "properties": {
        "bookingChannelMappings": {
          "description": "Booking Channels mapping for the Hotel Code.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/bookingChannelMappingType"
          }
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "bookingChannelMappingType": {
      "type": "object",
      "properties": {
        "bookingChannelCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "bookingChannelInfoType": {
      "type": "object",
      "properties": {
        "hotelMappings": {
          "description": "Hotel Code mapping for the Booking Channel.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/hotelMappingType"
          }
        },
        "configurationParameters": {
          "$ref": "#/definitions/parametersType"
        },
        "bookingChannelCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "bookingChannelType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 240
        }
      }
    },
    "hotelMappingType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "parametersType": {
      "type": "array",
      "description": "Collection of generic Name-Value-Pair parameters.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/parameterType"
      }
    },
    "parameterType": {
      "type": "object",
      "description": "Name value pair type that will hold generic parameter information. Only use this type when the parameters being passed are too dynamic to be defined.",
      "properties": {
        "parameterName": {
          "description": "Name of the parameter.",
          "type": "string"
        },
        "parameterValue": {
          "description": "Value of the parameter.",
          "type": "string"
        }
      }
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "instanceLink": {
      "type": "object",
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      }
    },
    "warningsType": {
      "type": "array",
      "description": "Used in conjunction with the Success element to define a business error.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    },
    "warningType": {
      "type": "object",
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "minLength": 1,
          "maxLength": 8
        }
      }
    },
    "exceptionDetailType": {
      "title": "Error Detail",
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "errorInstance": {
      "title": "Error Instance Details",
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "channels": {
      "type": "object",
      "description": "Response object for fetching channels.",
      "properties": {
        "channels": {
          "description": "Collection of channels based on the request criteria.",
          "$ref": "#/definitions/channelsType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelsType": {
      "type": "array",
      "description": "Identify details of channels.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelType"
      }
    },
    "channelType": {
      "type": "object",
      "description": "Identify details of an external system.",
      "properties": {
        "systemInfo": {
          "description": "Identify main details of external system.",
          "$ref": "#/definitions/systemInfoType"
        },
        "sellBy": {
          "description": "External system Sell By.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "addOnLicense": {
          "description": "External system Add-on license. Available for ADS only.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateLevels": {
          "description": "External system rate levels details.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/systemRateLevelType"
          }
        },
        "rateCategories": {
          "description": "External system rate categories details.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/systemRateCategoryType"
          }
        },
        "roomTypes": {
          "description": "External system room type details.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/systemRoomTypeType"
          }
        },
        "carriers": {
          "description": "External system carrier details.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/systemCarrierType"
          }
        },
        "errorCodes": {
          "description": "External system error details.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/systemErrorType"
          }
        },
        "parameters": {
          "description": "Parameters of external system.",
          "$ref": "#/definitions/parametersType"
        }
      }
    },
    "systemInfoType": {
      "type": "object",
      "description": "External system attributes.",
      "properties": {
        "systemName": {
          "description": "External system name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "websiteURL": {
          "description": "Cannel Website URL",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "iconURL": {
          "description": "Channel Icon URL",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "systemCode": {
          "description": "External system code such as TRAVELOCITY, EXPEDIA, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "systemType": {
          "description": "External system type such as CHANNEL, OXI, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "systemSubType": {
          "description": "External system subtype such as GDS, WEB, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "inactive": {
          "description": "Indicates whether code is inactive or not.",
          "type": "boolean"
        }
      }
    },
    "systemRateLevelType": {
      "type": "object",
      "description": "Identify rate level details of external system.",
      "properties": {
        "rateLevelCode": {
          "description": "Code and description of rate level.",
          "$ref": "#/definitions/codeDescriptionType"
        }
      }
    },
    "codeDescriptionType": {
      "type": "object",
      "description": "This contains a generic code and description information.",
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "systemRateCategoryType": {
      "type": "object",
      "description": "Identify rate category details of external system.",
      "properties": {
        "rateCategoryCode": {
          "description": "Code and description of rate category.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "shoppingCategory": {
          "description": "Shopping category of rate category external system.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "negotiated": {
          "description": "Indicates whether external system rate category is negotiated or not.",
          "type": "boolean"
        },
        "inactive": {
          "description": "Indicates whether external system rate category is active or not.",
          "type": "boolean"
        }
      }
    },
    "systemRoomTypeType": {
      "type": "object",
      "description": "Identify room type details of external system.",
      "properties": {
        "roomTypeCode": {
          "description": "Code and description of room type.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "inactiveDate": {
          "description": "Inactive date of room type external system.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "systemCarrierType": {
      "type": "object",
      "description": "Identify carrier details of external system.",
      "properties": {
        "carrierCode": {
          "description": "Code and description of carrier.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "merchant": {
          "description": "Indicates whether external system carrier is merchant or not.",
          "type": "boolean"
        },
        "inactive": {
          "description": "Indicates whether external system carrier is active or not.",
          "type": "boolean"
        }
      }
    },
    "systemErrorType": {
      "type": "object",
      "description": "Identify error details of external system.",
      "properties": {
        "errorCode": {
          "description": "Code and description of error.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "errorDescription": {
          "description": "description of error.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "errorPrefix": {
          "description": "Prefix of system error code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "errorSuffix": {
          "description": "Suffix of system error code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bookingResponse": {
          "description": "Booking response of system error code.",
          "$ref": "#/definitions/systemErrorBookingResponseType"
        },
        "dateRange": {
          "description": "Validity date of system error code.",
          "$ref": "#/definitions/timeSpanType"
        },
        "manualProcess": {
          "description": "Indicates whether system error code is manual process or not",
          "type": "boolean"
        }
      }
    },
    "systemErrorBookingResponseType": {
      "type": "string",
      "description": "Simple type for external system booking response.",
      "enum": [
        "PendingNeeded",
        "Unconfirmed",
        "Cancelled"
      ]
    },
    "timeSpanType": {
      "type": "object",
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "duration": {
          "type": "string"
        }
      }
    },
    "status": {
      "type": "object",
      "description": "Response Body.",
      "properties": {
        "warnings": {
          "$ref": "#/definitions/warningsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      }
    },
    "channelAccountContractsCopy": {
      "type": "object",
      "description": "Request object to copy the channel account contract and create a new contract.",
      "properties": {
        "channelAccountContractsCopy": {
          "description": "Channel account information to create a copy.",
          "$ref": "#/definitions/channelAccountContractsCopyType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelAccountContractsCopyType": {
      "type": "array",
      "description": "List of channel account contracts information to create a copy of.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelAccountContractCopyType"
      }
    },
    "channelAccountContractCopyType": {
      "type": "object",
      "description": "Channel account contract type to hold account and contract details to copy.",
      "properties": {
        "targetProfileId": {
          "description": "Target Profile Id to which contract to be copied. User can populate either Profile ID or AccountCode.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "targetAccountCode": {
          "description": "Target Account code to which contract to be copied. This is utilised to find account when TargetProfileID is not provided.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "channelAccountContractCopyDetails": {
          "description": "Contract details to copy.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/channelAccountContractCopyDetailsType"
          }
        }
      }
    },
    "uniqueID_Type": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "channelAccountContractCopyDetailsType": {
      "type": "object",
      "description": "Channel account contract type to hold account and contract details to copy.",
      "properties": {
        "sourceProfileId": {
          "description": "Holds channel account profile identifier of the contract to be copied.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "sourceContractId": {
          "description": "Holds contract Id of the contract to be copied.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "contractNo": {
          "description": "Holds contract No of the new contract to create.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "beginDate": {
          "description": "Holds begin date of the new contract.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "description": "Holds end date of the new contract.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "note": {
          "description": "Holds Note for the new contract.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "retainContractNo": {
          "description": "Flag to retain contract No or generate new one.",
          "type": "boolean"
        }
      }
    },
    "channelAccountContractsDetailsCopy": {
      "type": "object",
      "description": "Response object of the Channel account contract copy request.",
      "properties": {
        "channelAccountContractsCopyResponse": {
          "description": "Response details of the contracts sent for copy.",
          "$ref": "#/definitions/channelAccountContractsCopyResponseType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelAccountContractsCopyResponseType": {
      "type": "array",
      "description": "List of channel account contracts information to create a copy of.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelAccountContractCopyResponseType"
      }
    },
    "channelAccountContractCopyResponseType": {
      "type": "object",
      "description": "Channel account contract type to hold account and contract details to copy.",
      "properties": {
        "accountId": {
          "description": "Target account Id to which contract copied.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountCode": {
          "description": "Target Account code to which contract is copied.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "contractResponseInformation": {
          "description": "Holds contract Id of the contract copied.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "object",
            "properties": {
              "contractId": {
                "description": "Holds contract Id of the contract copied.",
                "$ref": "#/definitions/uniqueID_Type"
              },
              "sourceContractNo": {
                "description": "Holds contract No of the contract which is copied.",
                "type": "string",
                "minLength": 0,
                "maxLength": 20
              },
              "targetContractNo": {
                "description": "Holds contract No of the new contract created.",
                "type": "string",
                "minLength": 0,
                "maxLength": 20
              },
              "errorMessage": {
                "description": "Error message if failed to copy the contract.",
                "$ref": "#/definitions/errorType"
              },
              "success": {
                "description": "Flag to identify contract is copied successfully.",
                "type": "boolean"
              }
            }
          }
        },
        "errorMessage": {
          "description": "Error message if failed to copy all the contracts from account.",
          "$ref": "#/definitions/errorType"
        }
      }
    },
    "errorType": {
      "type": "object",
      "description": "Standard way to indicate that an error occurred during the processing of an message. If the message successfully processes, but there are business errors, those errors should be passed in the warning element.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string"
        },
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string"
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string"
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string"
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string"
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nodeList": {
          "description": "An XPath expression that selects all the nodes whose data caused this error. Further, this expression should have an additional contraint which contains the data of the node. This will provide the offending data back to systems that cannot maintain the original message.",
          "type": "string"
        }
      }
    },
    "channelAccountsSummary": {
      "type": "object",
      "description": "Response object of the Channel accounts fetch request.",
      "properties": {
        "channelAccounts": {
          "description": "Type to contain summary details of the channel account.",
          "$ref": "#/definitions/channelAccountsSummaryType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelAccountsSummaryType": {
      "type": "array",
      "description": "This type holds collection of channel accounts summary information.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelAccountSummaryType"
      }
    },
    "channelAccountSummaryType": {
      "type": "object",
      "description": "To hold channel account detailed information.",
      "properties": {
        "hotelId": {
          "description": "Property of the Billing Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "profileIdList": {
          "description": "Billing Account profile Id details.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "accountDetails": {
          "description": "Detailed Account information.",
          "$ref": "#/definitions/channelAccountDetailsType"
        },
        "addressInfo": {
          "description": "Detailed information on an address for the Billing Account contact.",
          "$ref": "#/definitions/addressInfoType"
        },
        "telephoneInfo": {
          "description": "Detailed information on telephone/ fax for the Billing Account contact.",
          "$ref": "#/definitions/telephoneInfoType"
        },
        "emailInfo": {
          "description": "Detailed information on an eMail address for the customer contact.",
          "$ref": "#/definitions/emailInfoType"
        },
        "contractEndsOn": {
          "description": "Channel account contract ends on date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "channelAccountIndicators": {
          "description": "Indicators of additional information attached to the profile",
          "$ref": "#/definitions/indicatorsType"
        },
        "hotels": {
          "description": "List of all the hotels where channel account is associated.",
          "$ref": "#/definitions/codeListType"
        },
        "inactive": {
          "description": "Indicates whether the account is inactive or not.",
          "type": "boolean"
        }
      }
    },
    "uniqueIDListType": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "channelAccountDetailsType": {
      "type": "object",
      "description": "To hold channel account detailed information.",
      "properties": {
        "accountCode": {
          "description": "Holds Account code for which details are fetched.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "templateAccountCode": {
          "description": "Holds Template Account code on which current account is based on.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "accountType": {
          "description": "Holds Account type for which details are fetched.",
          "$ref": "#/definitions/channelAccountTypeType"
        },
        "accountName": {
          "description": "Holds Account Name for which details are fetched.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "contactName": {
          "description": "Account contact name information.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "eCUNo": {
          "description": "Holds ECU No alias AR_No.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "channelAccountTypeType": {
      "type": "string",
      "description": "Represents channel account TEMPLATE type.",
      "enum": [
        "Property",
        "Chain",
        "Dealer",
        "Subsidiary",
        "Routing",
        "Template"
      ]
    },
    "addressInfoType": {
      "type": "object",
      "description": "Provides address information.",
      "properties": {
        "address": {
          "description": "Address details for the profile.",
          "$ref": "#/definitions/addressType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "addressType": {
      "type": "object",
      "description": "Provides address information.",
      "properties": {
        "isValidated": {
          "description": "Indicator to define if the Address is validated by the Address Validation System.",
          "type": "boolean"
        },
        "addressLine": {
          "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "type": "array",
          "maxItems": 4,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 80
          }
        },
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "cityExtension": {
          "description": "Post Office City Extension Code number. City Extension mainly used for UK addresses.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "county": {
          "description": "County or District Name (e.g., Fairfax). This is read only.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "type": {
          "description": "Defines the type of address (e.g. home, business, other).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Describes the type code",
          "type": "string"
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "updateReservations": {
          "description": "Indicates whether to update the reservations or not. If true and the address is primary, then all associated active reservations will be updated with the new primary address.",
          "type": "boolean"
        },
        "barCode": {
          "description": "The postal barcode for the address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "countryNameType": {
      "type": "object",
      "description": "Code for a country or a nationality.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Used for Character Strings, length 0 to 200.",
          "minLength": 0,
          "maxLength": 200
        },
        "code": {
          "description": "Code for a country or a nationality.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "telephoneInfoType": {
      "type": "object",
      "description": "Information on a telephone number for the customer.",
      "properties": {
        "telephone": {
          "description": "Phone details for the profile.",
          "$ref": "#/definitions/telephoneType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "telephoneType": {
      "type": "object",
      "description": "Information on a telephone number for the customer.",
      "properties": {
        "phoneTechType": {
          "description": "Indicates type of technology associated with this telephone number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "phoneUseType": {
          "description": "Describes the type of telephone number, in the context of its general use (e.g. Home, Business, Emergency Contact, Travel Arranger, Day, Evening).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "phoneUseTypeDescription": {
          "description": "Description of the PhoneUseType code",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "phoneNumber": {
          "description": "Telephone number assigned to a single location.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "extension": {
          "description": "Extension to reach a specific party at the phone number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "emailInfoType": {
      "type": "object",
      "description": "Information on an email for the customer.",
      "properties": {
        "email": {
          "description": "eMail deatils for the profile.",
          "$ref": "#/definitions/emailType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "emailType": {
      "type": "object",
      "description": "Information on an email for the customer.",
      "properties": {
        "emailAddress": {
          "description": "Defines the e-mail address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "type": {
          "description": "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Describes the Type code",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "emailFormat": {
          "description": "Supported Email format.",
          "type": "string",
          "enum": [
            "Html",
            "Text"
          ]
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "indicatorsType": {
      "type": "array",
      "description": "Collection of lamp indicators.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/indicatorType"
      }
    },
    "indicatorType": {
      "type": "object",
      "description": "Lamp indicator Type.",
      "properties": {
        "indicatorName": {
          "description": "Name of the indicator.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "count": {
          "description": "Indicates number of occurrences of the indicator.",
          "type": "integer"
        }
      }
    },
    "codeListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "minLength": 0,
        "maxLength": 20
      }
    },
    "channelAccounts": {
      "type": "object",
      "description": "Request object to create the channel accounts.",
      "properties": {
        "channelAccounts": {
          "description": "Channel account information to create a new channel account.",
          "$ref": "#/definitions/channelAccountsInformationType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelAccountsInformationType": {
      "type": "array",
      "description": "Channel account information object to hold details of channel account.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelAccountInformationType"
      }
    },
    "channelAccountInformationType": {
      "type": "object",
      "description": "To hold channel account detailed information.",
      "properties": {
        "accountDetails": {
          "description": "Detailed Account information.",
          "$ref": "#/definitions/channelAccountDetailsType"
        },
        "accountSetupDetails": {
          "description": "Detailed Account setup information.",
          "$ref": "#/definitions/channelAccountSetupDetailsType"
        },
        "contactInformation": {
          "description": "Account contact information.",
          "$ref": "#/definitions/channelAccountContactType"
        },
        "channelAccountNotes": {
          "description": "Account notes information.",
          "$ref": "#/definitions/channelAccountNotesType"
        },
        "communicationDetails": {
          "description": "Communication details assigned to account.",
          "$ref": "#/definitions/channelAccountCommunicationType"
        },
        "contractInformation": {
          "description": "Communication details assigned to account.",
          "$ref": "#/definitions/channelAccountContractsInformationType"
        },
        "channelAccountIndicators": {
          "description": "Indicators of additional information attached to the profile",
          "$ref": "#/definitions/indicatorsType"
        }
      }
    },
    "channelAccountSetupDetailsType": {
      "type": "object",
      "description": "To hold channel account detailed setup information.",
      "properties": {
        "hotelCodes": {
          "description": "Hotels information where channel account is associated/active with.",
          "$ref": "#/definitions/codeListType"
        },
        "chainCode": {
          "description": "Chain information where current account is configured with.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencyCode": {
          "description": "Holds Currency code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instances": {
          "description": "Hold list of account codes whose template account is current account.",
          "$ref": "#/definitions/codeListType"
        },
        "rebateDate": {
          "description": "The rebate date for the account.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "inactiveDate": {
          "description": "The date that account was marked as inactive.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "contractEndsOn": {
          "description": "Contract End date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "registeredHotel": {
          "description": "Property which registered this channel account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "channelAccountContactType": {
      "type": "object",
      "description": "Holds channel account contact information.",
      "properties": {
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        }
      }
    },
    "channelAccountNotesType": {
      "type": "object",
      "description": "Holds channel account notes information.",
      "properties": {
        "note": {
          "description": "Holds Note for the account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        }
      }
    },
    "channelAccountCommunicationType": {
      "type": "object",
      "description": "Holds channel account communication information.",
      "properties": {
        "addresses": {
          "description": "List of customer addresses.",
          "type": "object",
          "properties": {
            "addressInfo": {
              "description": "Collection of Detailed information on an address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/addressInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        }
      }
    },
    "channelAccountContractsInformationType": {
      "type": "array",
      "description": "Channel account contract information object to hold details of channel account contract.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelAccountContractInformationType"
      }
    },
    "channelAccountContractInformationType": {
      "type": "object",
      "description": "To hold channel account contract detailed information.",
      "properties": {
        "contractId": {
          "description": "Holds contract Id of the contract.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "contractNo": {
          "description": "Holds contract No of the contract.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "beginDate": {
          "description": "Holds begin date of the contract.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "description": "Holds end date of the contract.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "note": {
          "description": "Holds Note for the account contract.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "channelAccountContractElements": {
          "description": "Holds contract elements information.",
          "$ref": "#/definitions/channelAccountContractElementsType"
        },
        "markStatementsToRegenerate": {
          "description": "Flag to mark respective statements which were generated on these contracts to be regenerated.",
          "type": "boolean"
        }
      }
    },
    "channelAccountContractElementsType": {
      "type": "array",
      "description": "Channel account contract elements information object to hold details of contract elements.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/contractElementInformationType"
      }
    },
    "contractElementInformationType": {
      "type": "object",
      "description": "To hold channel account contract element detailed information.",
      "properties": {
        "contractId": {
          "description": "Contract Id of the contract.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "sequence": {
          "description": "Sequence identifies contract element per contract.",
          "type": "integer"
        },
        "feeType": {
          "description": "Holds Fee type of the contract element. If Fee type is not populated, it will be considered to delete this contract element.",
          "$ref": "#/definitions/contractFeeTypeType"
        },
        "bookingChannelType": {
          "description": "Holds channel type of the contract element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 240
        },
        "bookingChannelCode": {
          "description": "Holds channel of the contract element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "contractPricing": {
          "description": "Price information for this contract element.",
          "$ref": "#/definitions/contractPricingType"
        },
        "contractRangeInformation": {
          "description": "Holds Contract Range per number of Properties, Rooms or reservations information.",
          "$ref": "#/definitions/contractRangeInformationType"
        },
        "frequency": {
          "description": "Holds frequency of billing.",
          "$ref": "#/definitions/contractPriceFrequencyType"
        },
        "note": {
          "description": "Holds Note for the contract element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        }
      }
    },
    "contractFeeTypeType": {
      "type": "string",
      "description": "To specify contract element is for Miscellaneous fee.",
      "enum": [
        "Setup",
        "Maintenance",
        "Transaction",
        "Fax",
        "MinimumFee",
        "Miscellaneous"
      ]
    },
    "contractPricingType": {
      "type": "object",
      "description": "Price information applied as part of contract.",
      "properties": {
        "price": {
          "description": "Price that will be billed as part of this contract element.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "pricePer": {
          "description": "Identifies weather Price to be billed per Reservation, property, room or as a flat fee.",
          "$ref": "#/definitions/contractPriceType"
        }
      }
    },
    "currencyAmountType": {
      "type": "object",
      "description": "A monetary value expressed with a currency code.",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "contractPriceType": {
      "type": "string",
      "description": "To specify price will be billed per reservation. This is allowed only if Fee type is Transaction or Fax.",
      "enum": [
        "FlatFee",
        "Property",
        "Room",
        "Reservation"
      ]
    },
    "contractRangeInformationType": {
      "type": "object",
      "description": "Holds Contract Range per number of Properties, Rooms or reservations information.",
      "properties": {
        "contractTransaction": {
          "description": "Holds Contract Range per number of Properties, Rooms or reservations information.",
          "$ref": "#/definitions/contractTransactionType"
        },
        "range": {
          "description": "Holds No of reservations range for Transaction Fee type.",
          "type": "integer"
        },
        "months": {
          "description": "Holds No of months calculated while generating statements for Maintenance Fee type.",
          "type": "number"
        },
        "contractRange": {
          "description": "Holds minimum and maximum range per number of Properties/Rooms/Reservations value.",
          "$ref": "#/definitions/numberRangeType"
        }
      }
    },
    "contractTransactionType": {
      "type": "string",
      "description": "To specify range information is considered per number of Rooms. This is allowed only if Fee type is Maintenance.",
      "enum": [
        "Properties",
        "Rooms"
      ]
    },
    "numberRangeType": {
      "type": "object",
      "description": "Date Range with Start and End dates.",
      "properties": {
        "from": {
          "description": "The starting value of the range of number",
          "type": "integer"
        },
        "to": {
          "description": "The ending value of the range of number",
          "type": "integer"
        }
      }
    },
    "contractPriceFrequencyType": {
      "type": "string",
      "description": "To specify bills will be generated on Yearly basis.",
      "enum": [
        "Monthly",
        "Quarterly",
        "HalfYearly",
        "Yearly"
      ]
    },
    "channelAccountsToChange": {
      "type": "array",
      "description": "Channel account information to create a new channel account.",
      "items": {
        "$ref": "#/definitions/channelAccountType"
      }
    },
    "channelAccountType": {
      "type": "object",
      "description": "A collection of Channel Account Profile Id and account details information.",
      "properties": {
        "profileId": {
          "description": "Unique Billing account profile identifier fetched.",
          "$ref": "#/definitions/profileId"
        },
        "channelAccountInformation": {
          "description": "Provides detailed information regarding Channel Account.",
          "$ref": "#/definitions/channelAccountInformationType"
        }
      }
    },
    "profileId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "channelAccount": {
      "type": "object",
      "description": "Response object of the Channel account fetch request. Contains detailed information for the channel account.",
      "properties": {
        "channelAccount": {
          "description": "Channel account detailed information type to contain details of channel account including account information, setup details, communication information.",
          "$ref": "#/definitions/channelAccountType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelAccountContracts": {
      "type": "object",
      "description": "Request object to create the channel account contracts.",
      "properties": {
        "channelAccountContracts": {
          "description": "Channel account information to create a new channel account contracts.",
          "$ref": "#/definitions/channelAccountContractsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelAccountContractsType": {
      "type": "object",
      "description": "Channel account contracts type to hold account and contract details.",
      "properties": {
        "profileId": {
          "description": "Unique channel account profile identifier.",
          "$ref": "#/definitions/profileId"
        },
        "accountCode": {
          "description": "Holds Account code of the channel account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "accountName": {
          "description": "Holds Account Name of the channel account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "channelAccountContractsInformation": {
          "description": "Provides detailed information regarding Channel Account contract.",
          "$ref": "#/definitions/channelAccountContractsInformationType"
        }
      }
    },
    "channelAccountContractElements": {
      "type": "object",
      "description": "Response object of the channel account contract elements fetch request. Contains detailed information for the channel contract elements.",
      "properties": {
        "contractElements": {
          "description": "Holds list of contract elements detail.",
          "$ref": "#/definitions/channelAccountContractElementsType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "amenities": {
      "type": "object",
      "description": "Request object for changing external system amenities.",
      "properties": {
        "amenities": {
          "description": "External system amenities to be changed.",
          "$ref": "#/definitions/amenitiesMappingType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "amenitiesMappingType": {
      "type": "array",
      "description": "Information about an external system amenity mapping.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/amenityMappingType"
      }
    },
    "amenityMappingType": {
      "type": "object",
      "description": "Base external system mapping info.",
      "properties": {
        "systemInfo": {
          "description": "Identify details of External System",
          "$ref": "#/definitions/systemInfoType"
        },
        "localSystemCode": {
          "description": "Code used inside the OPERA System",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "externalSystemCode": {
          "description": "Code used in the External System",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Detailed Description of the given entity.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "dateRange": {
          "description": "Start and End Date of the mapping validity. If value is not supplied that mapping will be valid forever.",
          "$ref": "#/definitions/timeSpanType"
        },
        "amenityGroup": {
          "description": "User defined logical group name for the amenities.",
          "$ref": "#/definitions/amenityGroupType"
        }
      }
    },
    "amenityGroupType": {
      "type": "string",
      "description": "User defined logical group name for the amenities.",
      "enum": [
        "PropertyFeatures",
        "RoomFeatures",
        "ProductsFeatures",
        "BedCodes"
      ]
    },
    "amenitiesMapping": {
      "type": "object",
      "description": "Response object for fetching external system amenities.",
      "properties": {
        "amenitiesMapping": {
          "description": "Collection of external system amenities based on the request criteria.",
          "$ref": "#/definitions/amenitiesMappingType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelAvailability": {
      "type": "object",
      "description": "Request object for publishing rate availability to channels.",
      "properties": {
        "publishAvailability": {
          "description": "Availability information to be published.",
          "$ref": "#/definitions/publishRatePlanType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "publishRatePlanType": {
      "type": "object",
      "description": "Information to publish a new rate code.",
      "properties": {
        "channel": {
          "description": "The target channel to send the updated rate information to the external channel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "hotelId": {
          "description": "The source Property to send the updated rate information to the external channel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "beginDate": {
          "description": "Date from which rate code will be effective on the channel.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "description": "Date on which rate code will cease to be effective.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "channelCodes": {
          "description": "The selected Channel Rate Codes for update.",
          "type": "object",
          "properties": {
            "channelRatePlanCodes": {
              "description": "The selected Channel Rate Codes for update.",
              "$ref": "#/definitions/codeListType"
            },
            "channelRoomTypes": {
              "description": "The selected Channel Rate Codes for update.",
              "$ref": "#/definitions/codeListType"
            }
          }
        },
        "hotelCodes": {
          "description": "The selected property Rate Codes for update.",
          "type": "object",
          "properties": {
            "ratePlanCodes": {
              "description": "The selected property Rate Codes for update.",
              "$ref": "#/definitions/codeListType"
            },
            "roomTypes": {
              "description": "The selected property Rate Codes for update.",
              "$ref": "#/definitions/codeListType"
            }
          }
        }
      }
    },
    "channelBillingStatementSummaries": {
      "type": "object",
      "description": "Response object of the channel billing statements fetch request.",
      "properties": {
        "channelBillingStatementsSummary": {
          "description": "Summary information of channel billing statements.",
          "$ref": "#/definitions/channelBillingStatementSummariesType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelBillingStatementSummariesType": {
      "type": "array",
      "description": "Holds summary of channel billing statement.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelBillingStatementSummaryType"
      }
    },
    "channelBillingStatementSummaryType": {
      "type": "object",
      "description": "To hold channel account statement detailed information.",
      "properties": {
        "statementId": {
          "description": "Holds statement Id.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountCodeList": {
          "description": "List of Billing Account profile code's.",
          "$ref": "#/definitions/codeListType"
        },
        "statementDate": {
          "description": "Holds date on which statement is created.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "beginDate": {
          "description": "Holds begin date of the statement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "description": "Holds end date of the statement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lockDate": {
          "description": "Holds date on which statement is locked.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "note": {
          "description": "Holds Note for the statement.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "totalAmount": {
          "description": "Holds Total amount information from statement accounts generated.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "generated": {
          "description": "Flag to identify Statements were generated or not.",
          "type": "boolean"
        },
        "dirty": {
          "description": "Flag to identify Statements generated were dirty or not.",
          "type": "boolean"
        }
      }
    },
    "channelBillingStatements": {
      "type": "object",
      "description": "Request object to Change channel billing statements.",
      "properties": {
        "channelBillingStatements": {
          "description": "Channel billing statements information to Change.",
          "$ref": "#/definitions/channelBillingStatementsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelBillingStatementsType": {
      "type": "array",
      "description": "Provides detailed information regarding channel billing statement.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelBillingStatementType"
      }
    },
    "channelBillingStatementType": {
      "type": "object",
      "description": "To hold channel account statement detailed information.",
      "properties": {
        "statementId": {
          "description": "Holds statement Id.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountCodeList": {
          "description": "List of Billing Account profile code's.",
          "$ref": "#/definitions/codeListType"
        },
        "statementDate": {
          "description": "Holds date on which statement is created.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "beginDate": {
          "description": "Holds begin date of the statement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "description": "Holds end date of the statement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lockDate": {
          "description": "Holds date on which statement is locked.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "note": {
          "description": "Holds Note for the statement.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "totalAmount": {
          "description": "Holds Total amount information from statement accounts generated.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "generated": {
          "description": "Flag to identify Statements were generated or not.",
          "type": "boolean"
        },
        "dirty": {
          "description": "Flag to identify Statements generated were dirty or not.",
          "type": "boolean"
        },
        "channelAccountStatements": {
          "description": "Holds Channel account statements information.",
          "$ref": "#/definitions/channelStatementAccountsType"
        }
      }
    },
    "channelStatementAccountsType": {
      "type": "array",
      "description": "Provides detailed information regarding Channel Account contract.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelStatementAccountType"
      }
    },
    "channelStatementAccountType": {
      "type": "object",
      "description": "Channel account statement type to hold statement details. WS wont update any statement account information except Note and account details information.",
      "properties": {
        "profileId": {
          "description": "Profile ID of the account statement.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountCode": {
          "description": "Holds Account code of the channel account statement.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "contractId": {
          "description": "Contract ID of the account statement.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "beginDate": {
          "description": "Holds begin date of the account statement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "description": "Holds end date of the account statement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "note": {
          "description": "Holds Note for the account statement.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "totalDetailsAmount": {
          "description": "Holds Total amount information from details in channel account currency.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "channelAccountStatementDetails": {
          "description": "Holds Channel account statement details.",
          "$ref": "#/definitions/channelStatementDetailsType"
        }
      }
    },
    "channelStatementDetailsType": {
      "type": "array",
      "description": "Provides detailed information regarding Channel Account statements.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelStatementDetailType"
      }
    },
    "channelStatementDetailType": {
      "type": "object",
      "description": "To hold channel account contract element detailed information.",
      "properties": {
        "contractId": {
          "description": "Contract Id of the contract.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "sequence": {
          "description": "Sequence identifies contract element per contract.",
          "type": "integer"
        },
        "feeType": {
          "description": "Holds Fee type of the contract element. If Fee type is not populated, it will be considered to delete this contract element.",
          "$ref": "#/definitions/contractFeeTypeType"
        },
        "bookingChannelType": {
          "description": "Holds channel type of the contract element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 240
        },
        "bookingChannelCode": {
          "description": "Holds channel of the contract element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "contractPricing": {
          "description": "Price information for this contract element.",
          "$ref": "#/definitions/contractPricingType"
        },
        "contractRangeInformation": {
          "description": "Holds Contract Range per number of Properties, Rooms or reservations information.",
          "$ref": "#/definitions/contractRangeInformationType"
        },
        "frequency": {
          "description": "Holds frequency of billing.",
          "$ref": "#/definitions/contractPriceFrequencyType"
        },
        "note": {
          "description": "Holds Note for the contract element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "statementId": {
          "description": "Statement Id of the statement detail.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "Holds the property for the statement detail.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "oldHotelCode": {
          "description": "Holds the value of property that user changed from to find and update.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "quantity": {
          "description": "Number of Units (transactions, rooms or properties).",
          "type": "integer"
        },
        "routingAccount": {
          "description": "Holds Routing account. If no value is provided, it will be defaulted to *",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "contractAmount": {
          "description": "Holds contract amount calculated while generating the contracts.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "invoiceAmount": {
          "description": "Holds amount per line calculated while generating the contracts.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "orderByList": {
          "description": "Holds the default Order By value.",
          "$ref": "#/definitions/orderByListType"
        }
      }
    },
    "orderByListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "attributeName": {
            "type": "string",
            "maxLength": 2000
          },
          "orderType": {
            "$ref": "#/definitions/orderByAscDescType"
          }
        }
      }
    },
    "orderByAscDescType": {
      "type": "string",
      "enum": [
        "Asc",
        "Desc"
      ]
    },
    "channelBillingStatement": {
      "type": "object",
      "description": "Response object of the channel billing statement fetch request.",
      "properties": {
        "channelBillingStatement": {
          "description": "Detailed information of channel billing statement.",
          "$ref": "#/definitions/channelBillingStatementType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelBillingStatementDetails": {
      "type": "object",
      "description": "Response object of the channel account statement details fetch request.",
      "properties": {
        "channelStatementDetails": {
          "description": "Holds list of channel statement details.",
          "$ref": "#/definitions/channelStatementDetailsType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "statementDetailsStatistics": {
      "type": "object",
      "description": "Response object of the channel account statement details statistics fetch request.",
      "properties": {
        "channelStatementDetails": {
          "description": "Holds statement details statistics.",
          "$ref": "#/definitions/statementDetailsStatisticsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "statementDetailsStatisticsType": {
      "type": "object",
      "description": "Channel statement details statistics .",
      "properties": {
        "detailsByResort": {
          "description": "Channel billing statement details statistics by Resort.",
          "$ref": "#/definitions/statisticDetailsType"
        },
        "detailsByChannel": {
          "description": "Channel billing statement details statistics by Channel.",
          "$ref": "#/definitions/statisticDetailsType"
        },
        "detailsByChannelType": {
          "description": "Channel billing statement details statistics by Channel type.",
          "$ref": "#/definitions/statisticDetailsType"
        },
        "detailsByFeeType": {
          "description": "Channel billing statement details statistics by Fee type.",
          "$ref": "#/definitions/statisticDetailsType"
        }
      }
    },
    "statisticDetailsType": {
      "type": "array",
      "description": "Holds the statistic details for the statement details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/statementDetailsStatisticType"
      }
    },
    "statementDetailsStatisticType": {
      "type": "object",
      "description": "Channel statement details statistics.",
      "properties": {
        "hotelId": {
          "description": "Holds the property for the statement detail statistic By resort.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bookingChannelCode": {
          "description": "Holds channel of the statement details statistic By Channel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bookingChannelType": {
          "description": "Holds channel type of the statement details statistic By Channel Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 240
        },
        "feeType": {
          "description": "Holds Fee type of the statement details statistic By Fee Type.",
          "$ref": "#/definitions/contractFeeTypeType"
        },
        "contractAmount": {
          "description": "Holds total contract amount for all the statement details grouped by Resort/Channel/Channel Type/Fee Type.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "invoiceAmount": {
          "description": "Holds invoice amount for all the statement details grouped by Resort/Channel/Channel Type/Fee Type.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "detailsCount": {
          "description": "Channel billing statement details record count grouped by Resort/Channel/Channel Type/Fee Type.",
          "type": "integer"
        }
      }
    },
    "channelCardTypeMappingDetails": {
      "type": "object",
      "description": "Response object for fetching channel-hotel card type mappings.",
      "properties": {
        "channelCardTypeMappings": {
          "description": "Paging information and collection of channel-hotel card type mappings.",
          "type": "object",
          "properties": {
            "channelCardTypeMapping": {
              "description": "Channel-hotel card type mapping and its details.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/channelCardTypeMappingType"
              }
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelCardTypeMappingType": {
      "type": "object",
      "description": "Channel-hotel card type mapping information.",
      "properties": {
        "newChannelCardType": {
          "description": "New channel card type for the existing card type mapping.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "inactiveDate": {
          "description": "Inactive date of card type mapping.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hotelId": {
          "description": "Hotel code of card type mapping.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bookingChannelCode": {
          "description": "Booking channel code of card type mapping.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cardType": {
          "description": "Card type of card type mapping.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "channelCardType": {
          "description": "Channel card type of card type mapping.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "creditCards": {
      "type": "object",
      "description": "Request object for changing existing external system credit cards.",
      "properties": {
        "creditCards": {
          "description": "External system credit cards to be changed.",
          "$ref": "#/definitions/creditCardsMappingType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "creditCardsMappingType": {
      "type": "array",
      "description": "Information about an external system credit card mapping.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/creditCardMappingType"
      }
    },
    "creditCardMappingType": {
      "type": "object",
      "description": "Base external system mapping info.",
      "properties": {
        "systemInfo": {
          "description": "Identify details of External System",
          "$ref": "#/definitions/systemInfoType"
        },
        "localSystemCode": {
          "description": "Code used inside the OPERA System",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "externalSystemCode": {
          "description": "Code used in the External System",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Detailed Description of the given entity.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "dateRange": {
          "description": "Start and End Date of the mapping validity. If value is not supplied that mapping will be valid forever.",
          "$ref": "#/definitions/timeSpanType"
        }
      }
    },
    "creditCardsMapping": {
      "type": "object",
      "description": "Response object for fetching external system credit cards.",
      "properties": {
        "creditCardsMapping": {
          "description": "Collection of external system credit cards based on the request criteria.",
          "$ref": "#/definitions/creditCardsMappingType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fetchedChannelHotelLetters": {
      "type": "object",
      "description": "Response object after fetch Hotel Letters associated with the Booking Channels",
      "properties": {
        "channelHotelLetters": {
          "description": "Retrieve the collection detail of Hotel Letters associated with the booking channel based on the search criteria",
          "$ref": "#/definitions/channelHotelLettersType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelHotelLettersType": {
      "type": "array",
      "description": "Collection of Hotel Letters Type",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelHotelLetterType"
      }
    },
    "channelHotelLetterType": {
      "type": "object",
      "description": "Provide unique identification of Hotel Letter associated with a Booking Channel.",
      "properties": {
        "bookingChannel": {
          "description": "Booking channel code associated to the hotel letters.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "hotelId": {
          "description": "Hotel code which the hotel letters belong to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "languageCode": {
          "description": "Language code associated with the hotel letters.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "letterType": {
          "description": "Letter Type associated to hotel letters.",
          "$ref": "#/definitions/letterTypeType"
        },
        "letterName": {
          "description": "Name of the letter that associated to Hotel Letter.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "letterTypeType": {
      "type": "string",
      "description": "Represents Inquiry Letter Type.",
      "enum": [
        "Confirmation",
        "Cancellation",
        "BanquetEventOrder",
        "Contract",
        "Inquiry"
      ]
    },
    "channelHotelLettersToBeCreated": {
      "type": "object",
      "description": "Request object to create new Hotel Letters associated with the Channels",
      "properties": {
        "channelHotelLetters": {
          "description": "Hotel Letters associated with the Booking Channel to be created.",
          "$ref": "#/definitions/channelHotelLettersType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelHotelLettersToBeChanged": {
      "type": "object",
      "description": "Request object to update existing Hotel Letters associated with the Booking Channels",
      "properties": {
        "channelHotelLetters": {
          "description": "Hotel Letters associated with a booking channel to be changed.",
          "$ref": "#/definitions/channelHotelLettersType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "currencies": {
      "type": "object",
      "description": "Request object for changing existing external system currencies.",
      "properties": {
        "currencies": {
          "description": "External system currencies to be changed.",
          "$ref": "#/definitions/currenciesMappingType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "currenciesMappingType": {
      "type": "array",
      "description": "Information about an external currency mapping.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/currencyMappingType"
      }
    },
    "currencyMappingType": {
      "type": "object",
      "description": "Base external system mapping info.",
      "properties": {
        "systemInfo": {
          "description": "Identify details of External System",
          "$ref": "#/definitions/systemInfoType"
        },
        "localSystemCode": {
          "description": "Code used inside the OPERA System",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "externalSystemCode": {
          "description": "Code used in the External System",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Detailed Description of the given entity.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "dateRange": {
          "description": "Start and End Date of the mapping validity. If value is not supplied that mapping will be valid forever.",
          "$ref": "#/definitions/timeSpanType"
        },
        "lanyonDecimalPosition": {
          "description": "Number of decimal positions used by the currency.",
          "type": "integer"
        },
        "channelDecimalPosition": {
          "description": "Number of decimal positions used by the currency as per the channel.",
          "type": "integer"
        }
      }
    },
    "currenciesMapping": {
      "type": "object",
      "description": "Response object for fetching external system currencies.",
      "properties": {
        "currenciesMapping": {
          "description": "Collection of external system currencies based on the request criteria.",
          "$ref": "#/definitions/currenciesMappingType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "distributionTemplates": {
      "type": "object",
      "description": "Response object for fetching distribution templates based on search criteria.",
      "properties": {
        "distributionTemplates": {
          "description": "Collection of chain level distribution templates.",
          "$ref": "#/definitions/distributionTemplatesType"
        },
        "hotelsDistributionTemplates": {
          "description": "Collection of hotel level distribution templates.",
          "$ref": "#/definitions/hotelsDistributionTemplatesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "distributionTemplatesType": {
      "type": "array",
      "description": "Information about a distribution template.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/distributionTemplateType"
      }
    },
    "distributionTemplateType": {
      "type": "object",
      "description": "Information about a distribution template.",
      "properties": {
        "description": {
          "description": "Description of the distribution template.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "type": {
          "description": "Classification or grouping of the distribution template.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "negotiatedRate": {
          "description": "Overrides availability of configuring negotiated rates given Channel is flagged as negotiated.",
          "type": "boolean"
        },
        "inactive": {
          "description": "Flag that indicates whether distribution template is inactive or not.",
          "type": "boolean"
        },
        "displaySequence": {
          "description": "Display sequence of the distribution template.",
          "type": "integer"
        },
        "channelRates": {
          "description": "Information about channel rates where distribution template will be distributed to.",
          "$ref": "#/definitions/distributionTemplateChannelRatesType"
        },
        "code": {
          "description": "Uniquely identifies the distribution template.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "distributionTemplateChannelRatesType": {
      "type": "array",
      "description": "Information about channel rate where distribution template will be distributed to.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/distributionTemplateChannelRateType"
      }
    },
    "distributionTemplateChannelRateType": {
      "type": "object",
      "description": "Information about channel rates of a distribution template.",
      "properties": {
        "systemInfo": {
          "description": "Main details of external system.",
          "$ref": "#/definitions/systemInfoType"
        },
        "channelRateCode": {
          "description": "Channel Rate Code where distribution template will be distributed to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "channelRateCategory": {
          "description": "Channel Rate Category where distribution template will be distributed to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "channelRateLevel": {
          "description": "Channel Rate Level where distribution template will be distributed to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "regionalAvailability": {
          "description": "Regional Availability flag which will be the default value when rate code is distributed to channels.",
          "type": "boolean"
        },
        "rateUpdate": {
          "description": "Rate update flag which will be the default value when rate code is distributed to channels.",
          "type": "boolean"
        },
        "restrictionUpdate": {
          "description": "Restriction update flag which will be the default value when rate code is distributed to channels.",
          "type": "boolean"
        },
        "returnSGA": {
          "description": "Return SGA flag which will be the default value when rate code is distributed to channels.",
          "type": "boolean"
        }
      }
    },
    "hotelsDistributionTemplatesType": {
      "type": "array",
      "description": "Information about a hotel level distribution template.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelDistributionTemplatesType"
      }
    },
    "hotelDistributionTemplatesType": {
      "type": "object",
      "description": "Collection of distribution templates.",
      "properties": {
        "distributionTemplate": {
          "description": "Information about a distribution template.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/distributionTemplateType"
          }
        },
        "hotelId": {
          "description": "Hotel code where distribute templates belong to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "guarantees": {
      "type": "object",
      "description": "Request object for changing external system guarantees.",
      "properties": {
        "guarantees": {
          "description": "External system guarantees to be changed.",
          "$ref": "#/definitions/guaranteesMappingType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "guaranteesMappingType": {
      "type": "array",
      "description": "Information about an external system guarantee mapping.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/guaranteeMappingType"
      }
    },
    "guaranteeMappingType": {
      "type": "object",
      "description": "Base external system mapping info.",
      "properties": {
        "systemInfo": {
          "description": "Identify details of External System",
          "$ref": "#/definitions/systemInfoType"
        },
        "localSystemCode": {
          "description": "Code used inside the OPERA System",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "externalSystemCode": {
          "description": "Code used in the External System",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Detailed Description of the given entity.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "dateRange": {
          "description": "Start and End Date of the mapping validity. If value is not supplied that mapping will be valid forever.",
          "$ref": "#/definitions/timeSpanType"
        },
        "requirementCode": {
          "description": "Requirement code of guarantee.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "guaranteesMapping": {
      "type": "object",
      "description": "Response object for fetching external system guarantees.",
      "properties": {
        "guaranteesMapping": {
          "description": "Collection of external system guarantees based on the request criteria.",
          "$ref": "#/definitions/guaranteesMappingType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "properties": {
      "type": "object",
      "description": "Request object for changing existing external system properties.",
      "properties": {
        "properties": {
          "description": "External system properties to be changed.",
          "$ref": "#/definitions/propertiesMappingType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "propertiesMappingType": {
      "type": "array",
      "description": "Information about an external property mapping.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/propertyMappingType"
      }
    },
    "propertyMappingType": {
      "type": "object",
      "description": "Base external system mapping info.",
      "properties": {
        "systemInfo": {
          "description": "Identify details of External System",
          "$ref": "#/definitions/systemInfoType"
        },
        "initialUpload": {
          "description": "Initial Upload or not.",
          "type": "boolean"
        },
        "localSystemCode": {
          "description": "Code used inside the OPERA System",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "externalSystemCode": {
          "description": "Code used in the External System",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Detailed Description of the given entity.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "dateRange": {
          "description": "Start and End Date of the mapping validity. If value is not supplied that mapping will be valid forever.",
          "$ref": "#/definitions/timeSpanType"
        },
        "city": {
          "description": "City code of the channel hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomLimit": {
          "description": "Maximum room limit for the channel hotel reservation.",
          "type": "integer"
        },
        "bookingLimit": {
          "description": "Booking limit used by ADS interface for booking limit upload. Available if channel type is ADS and ADS ARI is enabled.",
          "type": "integer"
        },
        "hotelChainId": {
          "description": "Hotel chain ID of channel-hotel mapping. Only available for UA channel. It may not be modified if in myfidelio environment, and user is for a specific hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "chainCode": {
          "description": "Chain code for the channel-hotel mapping.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "prevailingRates": {
          "description": "Prevailing rates flag of channel-hotel mapping. Available if PREVAILING_RATE_BY_LOS parameter is on.",
          "type": "boolean"
        },
        "aRIEnabled": {
          "description": "ADS ARI enabled flag of channel-hotel mapping. Available only if channel type is ADS.",
          "type": "boolean"
        },
        "addOnLicense": {
          "description": "External system Add-on license. This is mandatory when Channel Type is ADS.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "channelHotelCodeMappingBuckets": {
          "description": "Rate code revenue thresholds information.",
          "$ref": "#/definitions/channelHotelCodeMappingBucketsType"
        }
      }
    },
    "channelHotelCodeMappingBucketsType": {
      "type": "object",
      "description": "Channel-hotel mapping buckets information.",
      "properties": {
        "channelHotelCodeMappingBucket": {
          "description": "Default rate code revenue thresholds.",
          "type": "array",
          "maxItems": 3,
          "items": {
            "$ref": "#/definitions/channelHotelCodeMappingBucketType"
          }
        },
        "defaultRateCode": {
          "description": "Default rate code to be used to calculate the total revenue.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "available": {
          "description": "Flag indicating if channel resort mapping is available.",
          "type": "boolean"
        }
      }
    },
    "channelHotelCodeMappingBucketType": {
      "type": "object",
      "description": "Channel-hotel mapping bucket information.",
      "properties": {
        "lowRevenueThreshold": {
          "description": "Low revenue threshold.",
          "type": "integer"
        },
        "highRevenueThreshold": {
          "description": "High revenue threshold.",
          "type": "integer"
        },
        "defaultRateCode": {
          "description": "Default rate code of channel hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "propertiesMapping": {
      "type": "object",
      "description": "Response object for fetching external system properties.",
      "properties": {
        "propertiesMapping": {
          "description": "Collection of external system properties based on the request criteria.",
          "$ref": "#/definitions/propertiesMappingType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelMarketingTextsInfo": {
      "type": "object",
      "description": "Response object for fetching channel marketing texts.",
      "properties": {
        "marketingTexts": {
          "description": "List of channel marketing texts based on the request criteria.",
          "$ref": "#/definitions/marketingTextsType"
        },
        "hotelsInfo": {
          "description": "Reference hotel info for the hotels in the result set.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/hotelChannelInfoType"
          }
        },
        "bookingChannelsInfo": {
          "description": "Reference booking channel info for booking channels in the result set.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/bookingChannelInfoType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "marketingTextsType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/marketingTextType"
      }
    },
    "marketingTextType": {
      "type": "object",
      "description": "Information about the the Marketing text for the Channel",
      "properties": {
        "newHotelCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "newTransactionType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "newPolicyType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "newPolicyDetail": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "newBeginDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hotelId": {
          "description": "The code that identifies a Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bookingChannelCode": {
          "description": "The code that identifies a Booking Channel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "marketingText": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "policyType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "policyDetail": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "beginDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "globalTextYN": {
          "type": "boolean"
        }
      }
    },
    "channelMarketingText": {
      "type": "object",
      "description": "Request object for creating channel marketing texts.",
      "properties": {
        "createChannelMarketingTexts": {
          "description": "List of channel marketing texts to be created.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/marketingTextType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelMarketingTextToChange": {
      "type": "object",
      "description": "Request object for changing channel marketing texts.",
      "properties": {
        "changeChannelMarketingTexts": {
          "description": "List of channel marketing texts to be changed.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/marketingTextType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelMarketingTextCopy": {
      "type": "object",
      "description": "Request object to copy channel marketing texts.",
      "properties": {
        "copyChannelMarketingTexts": {
          "description": "List of channel marketing texts to be copied.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/copyMarketingTextType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyMarketingTextType": {
      "type": "object",
      "description": "Copy Channel Marketing Text among Channels",
      "properties": {
        "copyFrom": {
          "type": "object",
          "properties": {
            "copyFrom": {
              "$ref": "#/definitions/marketingTextType"
            }
          }
        },
        "copyTo": {
          "type": "object",
          "properties": {
            "bookingChannelCodes": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "type": "string",
                "minLength": 0,
                "maxLength": 20
              }
            },
            "hotelCodes": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "type": "string",
                "minLength": 0,
                "maxLength": 20
              }
            }
          }
        }
      }
    },
    "channelNegotiatedRates": {
      "type": "object",
      "description": "Request object for changing Negotiated channel rates.",
      "properties": {
        "channelNegRates": {
          "description": "Negotiated channel rate details to be modified.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/channelNegRateType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelNegRateType": {
      "type": "object",
      "properties": {
        "negProfile": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/channelNegProfileType"
          }
        },
        "bookingChannelCode": {
          "description": "Booking Channel Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "channelRatePlanCode": {
          "description": "Channel Room Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "channelNegProfileType": {
      "type": "object",
      "description": "A negotiated rate type",
      "properties": {
        "uniqueId": {
          "$ref": "#/definitions/uniqueIDListType"
        },
        "formerName": {
          "$ref": "#/definitions/personNameType"
        },
        "accessInfoList": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/channelNegRateAccessType"
          }
        }
      }
    },
    "personNameType": {
      "type": "object",
      "description": "This provides name information for a person.",
      "properties": {
        "namePrefix": {
          "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "givenName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "middleName": {
          "description": "The middle name of the person name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "surname": {
          "description": "Family name, last name. May also be used for full name if the sending system does not have the ability to separate a full name into its parts, e.g. the surname element may be used to pass the full name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "nameTitleSuffix": {
          "description": "Title Suffix. Must be populated if ADVANCED_TITLE is on.",
          "type": "integer"
        },
        "envelopeGreeting": {
          "description": "Envelope Greeting of the profile",
          "type": "string"
        },
        "salutation": {
          "description": "Salutation of the profile",
          "type": "string"
        },
        "nameType": {
          "description": "Type of name of the individual, such as former, nickname, alternate or alias name.",
          "$ref": "#/definitions/personNameTypeType"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "externalSystem": {
          "description": "When name type is external, indicates the external system the name belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "personNameTypeType": {
      "type": "string",
      "description": "Person's name in an external system.",
      "enum": [
        "Primary",
        "Alternate",
        "Incognito",
        "External",
        "Phonetic"
      ]
    },
    "channelNegRateAccessType": {
      "type": "object",
      "properties": {
        "accessInfoDetail": {
          "$ref": "#/definitions/channelNegRateAccessDetailType"
        },
        "accessCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "channelNegRateAccessDetailType": {
      "type": "object",
      "properties": {
        "newAccessCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "channelRatePlanCodeOrder": {
          "type": "integer"
        },
        "newTimeSpan": {
          "$ref": "#/definitions/timeSpanType"
        }
      }
    },
    "channelNegotiatedRateDetails": {
      "type": "object",
      "description": "Response object for fetching Negotiated channel rates.",
      "properties": {
        "channelNegRates": {
          "description": "List of negotiated channel rates based on search criteria.",
          "type": "object",
          "properties": {
            "channelNegRate": {
              "description": "List of negotiated channel rates based on search criteria.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/channelNegRateType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelRateMappings": {
      "type": "object",
      "description": "Response object for fetching hotel-channel rate code mappings given search criteria including hotel codes, booking channel codes, rate codes, channel rate codes, etc.",
      "properties": {
        "channelRateMappings": {
          "description": "Hotel-channel rate code mappings fetch results based on the search criteria.",
          "$ref": "#/definitions/channelRateMappingsType"
        },
        "masterInfo": {
          "description": "Additional details about the booking channels and source descriptions for a hotel rate code referenced within the fetched results.",
          "$ref": "#/definitions/channelRateMappingMasterInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelRateMappingsType": {
      "type": "object",
      "description": "Collection of hotel-channel rate code mappings.",
      "properties": {
        "channelRateMapping": {
          "description": "Information about hotel-channel rate code mapping.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/channelRateMappingType"
          }
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "channelRateMappingType": {
      "type": "object",
      "description": "Basic details of a hotel-channel rate code mapping.",
      "properties": {
        "description": {
          "description": "Description of channel rate plan code.",
          "$ref": "#/definitions/channelRateMappingDescriptionType"
        },
        "channelRatePlanWebName": {
          "description": "Name of channel rate plan code to display on web.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "channelRatePlanCategory": {
          "description": "Channel rate category of hotel-channel rate code mapping.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateLevel": {
          "description": "Rate Level.",
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "rateTierAttr": {
          "description": "Rate Tier.",
          "type": "object",
          "properties": {
            "rateTier": {
              "type": "integer"
            }
          }
        },
        "blockRateIndicator": {
          "description": "Block Rate Indicator.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "promotionCode": {
          "description": "Promotion Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "channelRatePlanOrder": {
          "description": "Order of the channel rate type mapping.",
          "type": "number"
        },
        "allowRateUpdate": {
          "description": "Indicates if Rate updates to Channel are allowed.",
          "type": "boolean"
        },
        "allowRatesToGds": {
          "description": "Indicates if the rate is to be distributed to channels.",
          "type": "boolean"
        },
        "allowRestrictionUpdate": {
          "description": "Indicates if Rate Restrictions are sent to an ADS, GDS, or ODS partner, such as Expedia, via the AVH messaging functionality.",
          "type": "boolean"
        },
        "regionalAvailAttr": {
          "description": "Indicates if rate participates in Regional Availability.",
          "type": "object",
          "properties": {
            "inclInRegionalAvail": {
              "type": "boolean"
            },
            "allowRegionalAvail": {
              "type": "boolean"
            }
          }
        },
        "beginDate": {
          "description": "Begin date of the channel rate code mapping.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "description": "End date of the channel rate code mapping.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "carrierInfo": {
          "description": "Carrier attached to the Channel Rate Plan.",
          "$ref": "#/definitions/carrierInfoType"
        },
        "newChannelRatePlanCode": {
          "description": "New Channel Rate Plan Code of the mapping. Used only to change the Channel Rate Plan Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomTypes": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "ratePlanInfo": {
          "description": "Rate plan information including description and sell dates.",
          "$ref": "#/definitions/ratePlanPrimaryDetailsType"
        },
        "bookingChannelCode": {
          "description": "Booking Channel Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCode": {
          "description": "Room Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "channelRatePlanCode": {
          "description": "Channel Room Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hasNegotiatedRates": {
          "description": "True if this channel rate plan code has negotiated rates, otherwise false",
          "type": "boolean"
        },
        "hasChannelNegotiatedRates": {
          "description": "True if the mapping has channel negotiated rates, otherwise false.",
          "type": "boolean"
        }
      }
    },
    "channelRateMappingDescriptionType": {
      "type": "object",
      "description": "This type holds descriptions of hotel-channel rate code mapping. Description may be from Hotel rate code description, Global description or custom user defined description. Global description only supports enhanced description.",
      "properties": {
        "rateCodeDescription": {
          "description": "Description of hotel-channel rate code mapping from hotel rate code configuration.",
          "$ref": "#/definitions/channelRateMappingDescriptionDetailsType"
        },
        "globalDescription": {
          "description": "Description of hotel-channel rate code mapping from global description.",
          "$ref": "#/definitions/channelRateMappingEnhancedDescriptionType"
        },
        "customDescription": {
          "description": "Custom or user-defined description of hotel-channel rate code mapping.",
          "$ref": "#/definitions/channelRateMappingDescriptionDetailsType"
        },
        "shortDescription": {
          "description": "Channel rate code short description for Channel AA or Channel with HTML support.",
          "$ref": "#/definitions/translationTextType80"
        }
      }
    },
    "channelRateMappingDescriptionDetailsType": {
      "type": "object",
      "description": "Descriptions of hotel-channel rate code mapping which may be enhanced descriptions, HTML supported description or a simple string description.",
      "properties": {
        "enhancedDescription": {
          "description": "Enhanced descriptions which allow defining line 1 to 3 descriptions.",
          "$ref": "#/definitions/channelRateMappingEnhancedDescriptionType"
        },
        "hTMLSupportedDescription": {
          "description": "HTML supported description.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "description": {
          "description": "Plain text description.",
          "$ref": "#/definitions/translationTextType2000"
        }
      }
    },
    "channelRateMappingEnhancedDescriptionType": {
      "type": "object",
      "description": "Enhanced descriptions of hotel-channel room type or rate code mapping.",
      "properties": {
        "enhancedDescriptionLine1": {
          "description": "Enhanced Description Line 1.",
          "$ref": "#/definitions/translationTextType50"
        },
        "enhancedDescriptionLine2": {
          "description": "Enhanced Description Line 2.",
          "$ref": "#/definitions/translationTextType50"
        },
        "enhancedDescriptionLine3": {
          "description": "Enhanced Description Line 3.",
          "$ref": "#/definitions/translationTextType50"
        },
        "description": {
          "description": "Rate code description in addition to enhanced description line 1 to 3.",
          "$ref": "#/definitions/translationTextType2000"
        }
      }
    },
    "translationTextType50": {
      "type": "object",
      "description": "Contains Multiple translated texts and language codes.",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 50.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "translationsTextType": {
      "type": "array",
      "description": "Language code for the translation.",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Used for Character Strings, length 0 to 2000.",
            "minLength": 0,
            "maxLength": 2000
          },
          "language": {
            "description": "Language identification.",
            "type": "string",
            "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          }
        },
        "description": "Language code for the translation."
      }
    },
    "translationTextType2000": {
      "type": "object",
      "description": "Contains Multiple translated texts and language codes.",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 2000.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "translationTextType80": {
      "type": "object",
      "description": "Contains Multiple translated texts and language codes.",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 80.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "carrierInfoType": {
      "type": "object",
      "description": "Carrier Information Type.",
      "properties": {
        "carrierCode": {
          "description": "Use the SGA(Signature Airline Code) to filter rate codes for specific sources of business. This field can also be used to exclude specific sources of availability and bookings from the selection of rates.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "returnToSGA": {
          "description": "Return to SGA.",
          "type": "boolean"
        }
      }
    },
    "ratePlanPrimaryDetailsType": {
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the rate plan.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "startSellDate": {
          "description": "Start sell date of the rate plan.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endSellDate": {
          "description": "End sell date of the rate plan.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "sellSequence": {
          "description": "Sell Sequence for the rate plan.",
          "type": "number"
        },
        "privilegedRate": {
          "description": "The particular rate code is marked as privileged making it restrictive on who can update information.",
          "type": "boolean"
        },
        "privilegedRateRestriction": {
          "description": "The restrictions marked on the rate code are marked as privileged making it restrictive on who can update information.",
          "type": "boolean"
        },
        "baseType": {
          "description": "In Advanced Dynamic Base Rates, specifies how the rate code rates are defined, either as FLAT (defined by amounts) or DIFFERENTIAL (defined by offset).",
          "$ref": "#/definitions/baseType"
        },
        "lockStatus": {
          "description": "Specifies the lock status of the rate code. Rates can be Unlocked, Externally locked, locked at Property level, or locked at Central level.",
          "$ref": "#/definitions/rateCodeLockStatusType"
        },
        "approvalStatus": {
          "description": "Approval Status of the Rate Plan.",
          "$ref": "#/definitions/ratePlanApprovalStatusType"
        }
      }
    },
    "baseType": {
      "type": "string",
      "description": "Simple type for base type, flat or differential.",
      "enum": [
        "Flat",
        "Differential"
      ]
    },
    "rateCodeLockStatusType": {
      "type": "string",
      "description": "Indicates that the rate code is locked by the central system and cannot be edited at the property level.",
      "enum": [
        "Unlocked",
        "External",
        "Property",
        "Central"
      ]
    },
    "ratePlanApprovalStatusType": {
      "type": "string",
      "description": "Indicates that the Rate Plan is approved for selling.",
      "enum": [
        "NewUnapproved",
        "ChangedUnapproved",
        "Rejected",
        "Approved"
      ]
    },
    "channelRateMappingMasterInfoType": {
      "type": "object",
      "description": "Additional details about the booking channels and source descriptions for a hotel rate code referenced within the fetched results.",
      "properties": {
        "bookingChannelsInfo": {
          "description": "Additional details about booking channels.",
          "$ref": "#/definitions/bookingChannelsInfoType"
        },
        "sourceDescriptions": {
          "description": "Hotel-channel rate code mappings source descriptions.",
          "$ref": "#/definitions/channelRateMappingsSourceDescriptionsType"
        }
      }
    },
    "bookingChannelsInfoType": {
      "type": "array",
      "description": "Additional detail about booking channel.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/bookingChannelInfoType"
      }
    },
    "channelRateMappingsSourceDescriptionsType": {
      "type": "array",
      "description": "Source descriptions of a hotel-channel rate code mapping.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelRateMappingSourceDescriptionsType"
      }
    },
    "channelRateMappingSourceDescriptionsType": {
      "type": "object",
      "description": "Source descriptions of a hotel-channel rate code mapping.",
      "properties": {
        "description": {
          "description": "Description from hotel rate code configuration.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "globalDescription": {
          "description": "Global descriptions of a hotel rate code.",
          "$ref": "#/definitions/channelRateMappingEnhancedDescriptionType"
        },
        "hotelId": {
          "description": "Hotel code where the descriptions belong to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateCode": {
          "description": "Rate code where the descriptions belong to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "channelRateMapping": {
      "type": "object",
      "description": "Request object for changing channel rate mappings.",
      "properties": {
        "channelRateMappings": {
          "description": "Information about the Rate mapping to be updated.",
          "type": "object",
          "properties": {
            "channelRateMapping": {
              "description": "Information about the Rate mapping to be updated.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/channelRateMappingType"
              }
            },
            "ignoreChannelRateWarning": {
              "description": "'Y' if warnings like \"Channel Rate Code already exists in Channel\" should be ignored and should proceed with creating a new mapping; otherwise, value is 'N'",
              "type": "boolean"
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelGlobalDescriptions": {
      "type": "object",
      "description": "Request object to create new Global Descriptions of the GDS Channels",
      "properties": {
        "channelGlobalDescriptions": {
          "$ref": "#/definitions/channelGlobalDescriptionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelGlobalDescriptionsType": {
      "type": "array",
      "description": "Collection of GDS channel Global description types",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/genericGlobalDescriptionType"
      }
    },
    "genericGlobalDescriptionType": {
      "type": "object",
      "description": "This type holds enhanced room/rate description.",
      "properties": {
        "hotelId": {
          "description": "Property mapping with Rate plan code or Room type",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCode": {
          "description": "Global description type holds Rate plan code.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "roomType": {
          "description": "Global description type holds Room Type.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "globalDescType": {
          "description": "Global description type to differentiate the type",
          "$ref": "#/definitions/globalDescTypeType"
        },
        "ratePlanGlobalDescription": {
          "description": "Generic global description holds rate plan enhanced description details",
          "$ref": "#/definitions/channelRateMappingEnhancedDescriptionType"
        },
        "roomTypeGlobalDescription": {
          "description": "Generic global description Room Type enhanced description details",
          "$ref": "#/definitions/channelMappingEnhancedDescriptionType"
        }
      }
    },
    "globalDescTypeType": {
      "type": "string",
      "description": "Either Room Type or Rate Plan Code",
      "enum": [
        "RoomType",
        "RatePlan"
      ]
    },
    "channelMappingEnhancedDescriptionType": {
      "type": "object",
      "description": "Enhanced descriptions of hotel-channel room type or rate code mapping.",
      "properties": {
        "enhancedDescriptionLine1": {
          "description": "Enhanced Description Line 1.",
          "$ref": "#/definitions/translationTextType50"
        },
        "enhancedDescriptionLine2": {
          "description": "Enhanced Description Line 2.",
          "$ref": "#/definitions/translationTextType50"
        },
        "enhancedDescriptionLine3": {
          "description": "Enhanced Description Line 3.",
          "$ref": "#/definitions/translationTextType50"
        }
      }
    },
    "channelRateRoomSequence": {
      "type": "object",
      "description": "Request object for changing sequence for channel rate rooms.",
      "properties": {
        "channelRateRoomList": {
          "description": "Booking channel rate room List.",
          "$ref": "#/definitions/channelRateRoomListType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelRateRoomListType": {
      "type": "object",
      "description": "This type holds collection of channel Rate Room details.",
      "properties": {
        "channelRateRoom": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/channelRateRoomType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "channelRateRoomType": {
      "type": "object",
      "description": "This type holds data for channel Rate room.",
      "properties": {
        "channelRateRoomDetail": {
          "$ref": "#/definitions/channelRateRoomDetailType"
        },
        "bookingChannelCode": {
          "description": "Booking Channel Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "description": "Room Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "channelRoomType": {
          "description": "Channel Room Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCode": {
          "description": "Rate Plan code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "channelRatePlanCode": {
          "description": "Channel Rate Plan code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "beginDate": {
          "description": "Begin Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "description": "End Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "inactive": {
          "description": "Channel Rate Room Type is invalid.",
          "type": "boolean"
        }
      }
    },
    "channelRateRoomDetailType": {
      "type": "object",
      "description": "This type holds data for channel Rate room.",
      "properties": {
        "roomOrder": {
          "description": "Room order for rate room combination.It will be used if RoomOrderFromRoomMapping is not set.",
          "type": "number"
        },
        "rateOrder": {
          "description": "Rate order for rate room combination. It will be used if RateOrderFromRateMapping is not set.",
          "type": "number"
        },
        "roomOrderFromRoomMapping": {
          "description": "Room order from the booking channel room mapping.",
          "type": "number"
        },
        "rateOrderFromRateMapping": {
          "description": "Rate order from the booking channel rate mapping.",
          "type": "number"
        }
      }
    },
    "channelRestrictions": {
      "type": "object",
      "description": "Request object for publishing rate restrictions to channels.",
      "properties": {
        "publishRestriction": {
          "description": "Restriction information to be published.",
          "$ref": "#/definitions/publishRatePlanType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelRoomMappings": {
      "type": "object",
      "description": "Request object for Channel Room Mapping creation.",
      "properties": {
        "channelRoomMappings": {
          "description": "Channel Room Type mapping details to be defined.",
          "$ref": "#/definitions/channelRoomMappingsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelRoomMappingsType": {
      "type": "array",
      "description": "Hotel-channel room type mapping information.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelRoomMappingType"
      }
    },
    "channelRoomMappingType": {
      "type": "object",
      "description": "Basic details of hotel-channel room type mapping.",
      "properties": {
        "endDate": {
          "description": "End date of the hotel-channel room type mapping.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "description": {
          "description": "Hotel-channel room type mapping description.",
          "$ref": "#/definitions/channelRoomMappingDescriptionType"
        },
        "alternateChannelRoomType": {
          "description": "Alternate channel room type name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "channelRoomTypeOrder": {
          "description": "Channel room type order of the hotel-channel room type mapping.",
          "type": "number"
        },
        "sellSequence": {
          "description": "Sell sequence for hotel-channel room type mapping.",
          "type": "number"
        },
        "active": {
          "description": "Flag that indicates whether hotel-channel room type mapping is active or not.",
          "type": "boolean"
        },
        "bedTypeCode": {
          "description": "Channel bed type code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "baseAllocation": {
          "description": "Channel base allocation.",
          "type": "integer"
        },
        "rateCodes": {
          "description": "Rate codes where hotel-channel room type mappings belong to.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "channelRateCodes": {
          "description": "Channel rate codes where hotel-channel room mappings belong to.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "newChannelRoomType": {
          "description": "Channel Room Type. This element is used for sending modified Channel room type value for operation ChangeChannelRoomMapping.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "newBeginDate": {
          "description": "Begin date of the channel room type mapping. This element is used for sending modified Begin date value for operation ChangeChannelRoomMapping.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "bookingChannelInfo": {
          "description": "Additional details about the booking channel.",
          "$ref": "#/definitions/bookingChannelInfoType"
        },
        "globalDescription": {
          "description": "Global descriptions for the hotel room type.",
          "$ref": "#/definitions/channelMappingEnhancedDescriptionType"
        },
        "channelRoomMappingDetails": {
          "description": "Channel Room Type. This element is used for sending modified Channel room type value for operation ChangeChannelRoomMapping.",
          "$ref": "#/definitions/channelRoomMappingDetailsType"
        },
        "bookingChannelCode": {
          "description": "Booking Channel Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "description": "Room Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "channelRoomType": {
          "description": "Channel Room Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "beginDate": {
          "description": "Begin Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "channelRoomMappingDescriptionType": {
      "type": "object",
      "description": "This type holds descriptions of hotel-channel room type mapping. Description may be from Hotel Room Type description, Global description or custom user defined description. Global description only supports enhanced description.",
      "properties": {
        "roomTypeDescription": {
          "description": "Description of hotel-channel room type mapping from Hotel Room Type configuration.",
          "$ref": "#/definitions/channelRoomMappingDescriptionDetailsType"
        },
        "globalDescription": {
          "description": "Description of hotel-channel room type mapping from Global description.",
          "$ref": "#/definitions/channelMappingEnhancedDescriptionType"
        },
        "customDescription": {
          "description": "Custom or user-defined description of hotel-channel room type mapping.",
          "$ref": "#/definitions/channelRoomMappingDescriptionDetailsType"
        }
      }
    },
    "channelRoomMappingDescriptionDetailsType": {
      "type": "object",
      "description": "This type holds descriptions of hotel-channel room type mapping. Descriptions may be enhanced descriptions, HTML supported description or a simple string description.",
      "properties": {
        "enhancedDescription": {
          "description": "Enhanced descriptions which allow defining line 1 to 3 descriptions.",
          "$ref": "#/definitions/channelMappingEnhancedDescriptionType"
        },
        "hTMLSupportedDescription": {
          "description": "HTML supported description with addition of channel room type short description.",
          "$ref": "#/definitions/channelRoomMappingHTMLSupportedDescriptionType"
        },
        "description": {
          "description": "Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "channelRoomMappingHTMLSupportedDescriptionType": {
      "type": "object",
      "description": "This type holds HTML description of hotel-channel room type with additional channel room type short description.",
      "properties": {
        "description": {
          "description": "Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "shortDescription": {
          "description": "Channel room type or rate code short description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "channelRoomMappingDetailsType": {
      "type": "object",
      "description": "Basic details of hotel-channel room type mapping.",
      "properties": {
        "endDate": {
          "description": "End date of the hotel-channel room type mapping.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "description": {
          "description": "Hotel-channel room type mapping description.",
          "$ref": "#/definitions/channelRoomMappingDescriptionType"
        },
        "alternateChannelRoomType": {
          "description": "Alternate channel room type name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "channelRoomTypeOrder": {
          "description": "Channel room type order of the hotel-channel room type mapping.",
          "type": "number"
        },
        "sellSequence": {
          "description": "Sell sequence for hotel-channel room type mapping.",
          "type": "number"
        },
        "active": {
          "description": "Flag that indicates whether hotel-channel room type mapping is active or not.",
          "type": "boolean"
        },
        "bedTypeCode": {
          "description": "Channel bed type code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "baseAllocation": {
          "description": "Channel base allocation.",
          "type": "integer"
        },
        "rateCodes": {
          "description": "Rate codes where hotel-channel room type mappings belong to.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "channelRateCodes": {
          "description": "Channel rate codes where hotel-channel room mappings belong to.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "newChannelRoomType": {
          "description": "Channel Room Type. This element is used for sending modified Channel room type value for operation ChangeChannelRoomMapping.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "newBeginDate": {
          "description": "Begin date of the channel room type mapping. This element is used for sending modified Begin date value for operation ChangeChannelRoomMapping.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "bookingChannelInfo": {
          "description": "Additional details about the booking channel.",
          "$ref": "#/definitions/bookingChannelInfoType"
        },
        "globalDescription": {
          "description": "Global descriptions for the hotel room type.",
          "$ref": "#/definitions/channelMappingEnhancedDescriptionType"
        }
      }
    },
    "channelGlobalDescription": {
      "type": "object",
      "description": "Request object for changing channel rate codes global description.",
      "properties": {
        "channelRoomDescription": {
          "description": "Channel Rate code mapping global description details.",
          "$ref": "#/definitions/channelGlobalDescriptionType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelGlobalDescriptionType": {
      "type": "object",
      "description": "This type holds enhanced room/rate description.",
      "properties": {
        "shortDescription": {
          "$ref": "#/definitions/translationTextType2000"
        },
        "description": {
          "$ref": "#/definitions/translationTextType2000"
        },
        "enhancedDesc1": {
          "$ref": "#/definitions/translationTextType50"
        },
        "enhancedDesc2": {
          "$ref": "#/definitions/translationTextType50"
        },
        "enhancedDesc3": {
          "$ref": "#/definitions/translationTextType50"
        },
        "source": {
          "type": "string"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bookingChannelCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "channel": {
      "type": "object",
      "description": "Response object for fetching details of channel.",
      "properties": {
        "channel": {
          "description": "Details of a channel.",
          "$ref": "#/definitions/channelType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelErrors": {
      "type": "object",
      "description": "Request object for creating channel errors.",
      "properties": {
        "errors": {
          "description": "channel errors to be created.",
          "type": "object",
          "properties": {
            "error": {
              "description": "Channel error details.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/systemErrorType"
              }
            },
            "bookingChannelCode": {
              "description": "Channel code.",
              "$ref": "#/definitions/codeType"
            }
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "codeType": {
      "type": "string",
      "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
      "minLength": 0,
      "maxLength": 20
    },
    "channelHotelCodeMapping": {
      "type": "object",
      "description": "Response giving OPERA hotel code mapped to channel hotel code for a booking channel and vice versa.",
      "properties": {
        "channelCode": {
          "description": "Channel code for which the hotel code mapping information is needed.",
          "type": "string",
          "maxLength": 2000
        },
        "hotelInfo": {
          "description": "OPERA or Channel hotel code information.",
          "$ref": "#/definitions/hotelCodeMappingInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelCodeMappingInfoType": {
      "type": "object",
      "description": "Generic information of the OPERA hotel code, channel hotelcode for the requested booking channel code.",
      "properties": {
        "hotelId": {
          "description": "OPERA hotel code for the requested channel hotel code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "channelHotelCode": {
          "description": "Channel hotel code for the requested OPERA hotel code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "changeChannelParameters": {
      "type": "object",
      "description": "Request object for modifying channel parameter(s).",
      "properties": {
        "criteria": {
          "description": "Collection of channel parameter(s) to be modified.",
          "$ref": "#/definitions/changeChannelParametersType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changeChannelParametersType": {
      "type": "object",
      "properties": {
        "systemCode": {
          "description": "External system code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "channelParameters": {
          "description": "Collection of channel parameters whose value needs to be modified.",
          "$ref": "#/definitions/channelParametersSimpleType"
        }
      }
    },
    "channelParametersSimpleType": {
      "type": "array",
      "description": "Collection of channel parameters simple information.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelParameterSimpleType"
      }
    },
    "channelParameterSimpleType": {
      "type": "object",
      "description": "Basic channel parameter info used in changing channel parameter values.",
      "properties": {
        "parameterName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "parameterValue": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "parameterValueType": {
          "$ref": "#/definitions/channelParameterValueType"
        }
      }
    },
    "channelParameterValueType": {
      "type": "string",
      "description": "The value types of parameter, possible types are Boolean, String, Date, and Number.",
      "enum": [
        "Boolean",
        "String",
        "Date",
        "Time",
        "Number",
        "SingleSelectLOV",
        "MultiSelectLOV"
      ]
    },
    "channelRateCategories": {
      "type": "object",
      "description": "Request object for creating channel rate categories.",
      "properties": {
        "rateCategories": {
          "description": "channel rate categories to be created.",
          "type": "object",
          "properties": {
            "rateCategory": {
              "description": "Channel rate category details.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/systemRateCategoryType"
              }
            },
            "bookingChannelCode": {
              "description": "Channel code.",
              "$ref": "#/definitions/codeType"
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelRateLevels": {
      "type": "object",
      "description": "Request object for creating channel rate levels.",
      "properties": {
        "rateLevels": {
          "description": "channel rate levels to be created.",
          "type": "object",
          "properties": {
            "rateLevel": {
              "description": "Channel rate level details.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/systemRateLevelType"
              }
            },
            "bookingChannelCode": {
              "description": "Channel code.",
              "$ref": "#/definitions/codeType"
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelRatePlans": {
      "type": "object",
      "description": "Request object for publishing rate codes to GDS.",
      "properties": {
        "publishRatePlan": {
          "description": "Rate code information to be published.",
          "$ref": "#/definitions/publishRatePlanType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelRateRoomSequenceDetails": {
      "type": "object",
      "description": "Response object for channel rate rooms sequence based on a criteria.",
      "properties": {
        "channelRateRoomList": {
          "description": "Booking channel rate room List.",
          "$ref": "#/definitions/channelRateRoomListType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelRoomTypes": {
      "type": "object",
      "description": "Request object for creating channel room types.",
      "properties": {
        "roomTypes": {
          "description": "channel room types to be created.",
          "type": "object",
          "properties": {
            "roomType": {
              "description": "Channel room type details.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/systemRoomTypeType"
              }
            },
            "bookingChannelCode": {
              "description": "Channel code.",
              "$ref": "#/definitions/codeType"
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelCarriers": {
      "type": "object",
      "description": "Request object for creating channel carriers.",
      "properties": {
        "carriers": {
          "description": "Channel carriers to be created.",
          "type": "object",
          "properties": {
            "carrier": {
              "description": "Channel carrier details.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/systemCarrierType"
              }
            },
            "bookingChannelCode": {
              "description": "Channel code.",
              "$ref": "#/definitions/codeType"
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelOrgMapping": {
      "type": "object",
      "description": "Request object for Create Channel to ORG and CRO Mapping.",
      "properties": {
        "channelOrgMappingDetails": {
          "$ref": "#/definitions/channelOrgMappingType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelOrgMappingType": {
      "type": "object",
      "description": "Respresents information of the Channel Code, OrgCode and Default Login Resort used for mapping.",
      "properties": {
        "channelCode": {
          "description": "Channel code for which OrgCode mapping needs to be done.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "orgCode": {
          "description": "OrgCode for which Channel code mapping needs to be done.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "defaultLoginResort": {
          "description": "Default Login Resort value used while mapping Channel Code and OrgCode.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "channelOrgMappingsDetails": {
      "type": "object",
      "description": "Response object for Fetch Channel to ORG and CRO Mapping.",
      "properties": {
        "channelOrgMappingsDetails": {
          "$ref": "#/definitions/channelOrgMappingsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelOrgMappingsType": {
      "type": "array",
      "description": "Respresents information of the Channel Code, OrgCode and Default Login Resort used for mapping.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelOrgMappingType"
      }
    },
    "totalPricingElements": {
      "type": "object",
      "description": "Response object to populate total pricing elements of the GDS channel.",
      "properties": {
        "totalPricingElements": {
          "$ref": "#/definitions/totalPricingElementsType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "totalPricingElementsType": {
      "type": "array",
      "description": "List of Total Pricing Element Type",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/totalPricingElementType"
      }
    },
    "totalPricingElementType": {
      "type": "object",
      "description": "Total Pricing Element ID type used to identify the record",
      "properties": {
        "hotelId": {
          "description": "Hotel Code that associated with Transaction Code and Total Pricing Element",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transaction": {
          "description": "Transaction Code with Total Pricing Element of the GDS channel",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "elementCode": {
          "description": "The mapped Total Pricing Element code of the GDS channel",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "chargeType": {
          "description": "The mapped Total Pricing Element Charge Type of the GDS channel",
          "$ref": "#/definitions/chargeTypeType"
        },
        "editPricingElementId": {
          "description": "Combination of primary attributes of Total Pricing Element to update the primary attribute field",
          "$ref": "#/definitions/totalPricingElementIDType"
        }
      }
    },
    "chargeTypeType": {
      "type": "string",
      "description": "Total Pricing Element either Tax or Service Fee",
      "enum": [
        "Tax",
        "ServiceFee"
      ]
    },
    "totalPricingElementIDType": {
      "type": "object",
      "description": "Total Pricing Element ID type used to identify the record",
      "properties": {
        "hotelId": {
          "description": "Hotel Code that associated with Transaction Code and Total Pricing Element",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transaction": {
          "description": "Transaction Code with Total Pricing Element of the GDS channel",
          "$ref": "#/definitions/codeDescriptionType"
        }
      }
    },
    "totalPricingElementsCopy": {
      "type": "object",
      "description": "Request object to copy the total pricing elements into the target properties.",
      "properties": {
        "copyInstructions": {
          "$ref": "#/definitions/copyTotalPricingElementsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyTotalPricingElementsType": {
      "type": "object",
      "description": "Total Pricing Elements to copy from single source property to multi target properties",
      "properties": {
        "totalPricingElements": {
          "description": "Total Pricing Element Type record details to copy",
          "$ref": "#/definitions/totalPricingElementsType"
        },
        "targetHotels": {
          "description": "Target properties to copy Total Pricing Element records",
          "$ref": "#/definitions/codeListType"
        }
      }
    },
    "channelSellLimits": {
      "type": "object",
      "description": "Response object containing sell limit schedules set for the channel or channel room type.",
      "properties": {
        "sellLimits": {
          "description": "List of sell limit schedules configured for the requested channel or channel room type.",
          "$ref": "#/definitions/channelSellLimitSchedulesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelSellLimitSchedulesType": {
      "type": "array",
      "description": "Details about a sell limit schedule for a channel or channel room type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelSellLimitScheduleType"
      }
    },
    "channelSellLimitScheduleType": {
      "type": "object",
      "description": "Details about a sell limit schedule for a channel or channel room type.",
      "properties": {
        "sellLimitId": {
          "description": "Unique identifier for the channel sell limit.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "Hotel for which the sell limit schedule is applicable.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bookingChannelCode": {
          "description": "Channel for which the sell limit schedule is applicable.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "channelRoomType": {
          "description": "Channel room type for which the sell limit schedule is applicable.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "dateRange": {
          "description": "Sell limit schedule begin and end dates as well as which days of the week the limit applies to.",
          "$ref": "#/definitions/timeSpanDaysOfWeekType"
        },
        "numberOfRooms": {
          "description": "Number of rooms which can be sold under the hotel, channel, and channel room type combination for the specified date range.",
          "type": "integer"
        }
      }
    },
    "timeSpanDaysOfWeekType": {
      "type": "object",
      "description": "Container for Time span with days of week.",
      "properties": {
        "timeSpan": {
          "$ref": "#/definitions/timeSpanType"
        },
        "sunday": {
          "type": "boolean"
        },
        "monday": {
          "type": "boolean"
        },
        "tuesday": {
          "type": "boolean"
        },
        "wednesday": {
          "type": "boolean"
        },
        "thursday": {
          "type": "boolean"
        },
        "friday": {
          "type": "boolean"
        },
        "saturday": {
          "type": "boolean"
        }
      }
    },
    "channelSellLimitsByDate": {
      "type": "object",
      "description": "Request object to create or update sell limits for the channel or channel room type by day. Advanced logic is implemented to combine consecutive blocks of sell limits into a single schedule which have the same limits configured. Existing schedules can also be split as needed to account for overlapping schedules.",
      "properties": {
        "sellLimits": {
          "description": "Collection of sell limits to be created or updated for the channel or channel room type and a particular day.",
          "$ref": "#/definitions/channelSellLimitsByDateType"
        },
        "adjustOverlappingSchedules": {
          "description": "Flag to indicate whether any overlapping schedules should be automatically adjusted (split, truncated, etc.) as needed.",
          "type": "boolean"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelSellLimitsByDateType": {
      "type": "object",
      "description": "Collection of sell limits for a channel or channel room type structured by day.",
      "properties": {
        "channelSellLimits": {
          "description": "Details about the sell limit for this particular resort, channel, and date.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/channelSellLimitType"
          }
        },
        "channelRoomTypeSellLimits": {
          "description": "Details about the sell limit for this particular resort, channel, channel room type, and date.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "object",
            "properties": {
              "numberOfRooms": {
                "description": "Number of rooms that can be sold for this particular sell limit date.",
                "type": "integer"
              },
              "bookingChannelCode": {
                "description": "Channel for which this sell limit is applicable.",
                "type": "string",
                "minLength": 0,
                "maxLength": 20
              },
              "date": {
                "description": "Date on which this sell limit is applicable.",
                "type": "string",
                "format": "date",
                "maxLength": 8
              },
              "channelRoomType": {
                "description": "Channel room type for which this sell limit is applicable.",
                "type": "string",
                "minLength": 0,
                "maxLength": 20
              }
            }
          }
        },
        "hotelId": {
          "description": "Hotel under which the channel sell limits are applicable.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "channelSellLimitType": {
      "type": "object",
      "properties": {
        "numberOfRooms": {
          "description": "Number of rooms that can be sold for this particular sell limit date.",
          "type": "integer"
        },
        "bookingChannelCode": {
          "description": "Channel for which this sell limit is applicable.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "date": {
          "description": "Date on which this sell limit is applicable.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "channelGuaranteeCodeMappingDetails": {
      "type": "object",
      "description": "Response object for fetching channel-hotel guarantee code mappings.",
      "properties": {
        "channelGuaranteeCodeMappings": {
          "description": "Paging information and collection of channel-hotel guarantee code mappings.",
          "type": "object",
          "properties": {
            "channelGuaranteeCodeMapping": {
              "description": "Channel-hotel guarantee code mapping and its details.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/channelGuaranteeCodeMappingType"
              }
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelGuaranteeCodeMappingType": {
      "type": "object",
      "description": "Channel-hotel guarantee code mapping information.",
      "properties": {
        "newChannelGuaranteeCode": {
          "description": "New channel guarantee code for the existing guarantee code mapping.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "paymentType": {
          "description": "Payment type of guarantee code mapping.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "inactiveDate": {
          "description": "Inactive date of guarantee code mapping.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hotelId": {
          "description": "Hotel code of guarantee code mapping.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bookingChannelCode": {
          "description": "Booking channel code of guarantee code mapping.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "guaranteeCode": {
          "description": "Guarantee code of guarantee code mapping.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "channelGuaranteeCode": {
          "description": "Channel guarantee code of guarantee code mapping.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "channelRates": {
      "type": "object",
      "description": "Request object for distributing channel rates.",
      "properties": {
        "distributeChannelRates": {
          "description": "Information about rate code to be distributed to channels.",
          "$ref": "#/definitions/distributeChannelRatesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "distributeChannelRatesType": {
      "type": "object",
      "description": "Information about rate codes to be distributed to channels.",
      "properties": {
        "distributeChannelRate": {
          "description": "Information about rate codes to be distributed to a channel.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/distributeChannelRateType"
          }
        },
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "distributeChannelRateType": {
      "type": "object",
      "description": "Information about rate codes to be distributed to a channel.",
      "properties": {
        "distributeChannelRateMappings": {
          "description": "Information about rate codes to be distributed to a channel.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/distributeChannelRateMappingType"
          }
        },
        "negotiatedProfiles": {
          "description": "Negotiated channel rate details to be modified.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/channelNegProfileType"
          }
        },
        "bookingChannelCode": {
          "description": "Channel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "channelRatePlanCode": {
          "description": "Channel Rate Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "distributeChannelRateMappingType": {
      "type": "object",
      "description": "Basic details of a hotel-channel rate code mapping.",
      "properties": {
        "description": {
          "description": "Description of channel rate plan code.",
          "$ref": "#/definitions/channelRateMappingDescriptionType"
        },
        "channelRatePlanWebName": {
          "description": "Name of channel rate plan code to display on web.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "channelRatePlanCategory": {
          "description": "Channel rate category of hotel-channel rate code mapping.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateLevel": {
          "description": "Rate Level.",
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "rateTierAttr": {
          "description": "Rate Tier.",
          "type": "object",
          "properties": {
            "rateTier": {
              "type": "integer"
            }
          }
        },
        "blockRateIndicator": {
          "description": "Block Rate Indicator.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "promotionCode": {
          "description": "Promotion Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "channelRatePlanOrder": {
          "description": "Order of the channel rate type mapping.",
          "type": "number"
        },
        "allowRateUpdate": {
          "description": "Indicates if Rate updates to Channel are allowed.",
          "type": "boolean"
        },
        "allowRestrictionUpdate": {
          "description": "Indicates if Rate Restrictions are sent to an ADS, GDS, or ODS partner, such as Expedia, via the AVH messaging functionality.",
          "type": "boolean"
        },
        "regionalAvailAttr": {
          "description": "Indicates if rate participates in Regional Availability.",
          "type": "object",
          "properties": {
            "inclInRegionalAvail": {
              "type": "boolean"
            },
            "allowRegionalAvail": {
              "type": "boolean"
            }
          }
        },
        "beginDate": {
          "description": "Begin date of the channel rate code mapping.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "description": "End date of the channel rate code mapping.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "carrierInfo": {
          "description": "Carrier attached to the Channel Rate Plan.",
          "$ref": "#/definitions/carrierInfoType"
        },
        "newChannelRatePlanCode": {
          "description": "New Channel Rate Plan Code of the mapping. Used only to change the Channel Rate Plan Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomTypes": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "ratePlanInfo": {
          "description": "Rate plan information including description and sell dates.",
          "$ref": "#/definitions/ratePlanPrimaryDetailsType"
        },
        "ratePlanCode": {
          "description": "Rate Plan Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hasNegotiatedRates": {
          "description": "True if this channel rate plan code has negotiated rates, otherwise false",
          "type": "boolean"
        },
        "hasChannelNegotiatedRates": {
          "description": "True if the mapping has channel negotiated rates, otherwise false.",
          "type": "boolean"
        }
      }
    },
    "channelCardTypeMappings": {
      "type": "object",
      "description": "Request object for creating a new channel-hotel card type mapping.",
      "properties": {
        "channelCardTypeMapping": {
          "description": "Channel-hotel card type mapping information to be created.",
          "$ref": "#/definitions/channelCardTypeMappingType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelGuaranteeCodeMappings": {
      "type": "object",
      "description": "Request object for creating a new channel-hotel guarantee code mapping.",
      "properties": {
        "channelGuaranteeCodeMapping": {
          "description": "Channel-hotel guarantee code mapping information to be created.",
          "$ref": "#/definitions/channelGuaranteeCodeMappingType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelParameterMapping": {
      "type": "object",
      "description": "Response object for channel parameter(s) based on search criteria.",
      "properties": {
        "channelParameterMapping": {
          "description": "Collection of channel parameter(s) result based on the search criteria.",
          "$ref": "#/definitions/channelParameterMappingType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelParameterMappingType": {
      "type": "object",
      "description": "Includes information about the parametersTypes and system Information for the Channel/Hotel.",
      "properties": {
        "systemInfo": {
          "description": "Identify details of External System",
          "$ref": "#/definitions/systemInfoType"
        },
        "groups": {
          "description": "Collection of channel parameters organized into groups.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/channelParameterGroupType"
          }
        }
      }
    },
    "channelParameterGroupType": {
      "type": "object",
      "properties": {
        "channelParameters": {
          "$ref": "#/definitions/channelParametersType"
        },
        "groupName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "groupDisplayName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "channelParametersType": {
      "type": "array",
      "description": "parameters details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelParameterType"
      }
    },
    "channelParameterType": {
      "type": "object",
      "properties": {
        "parameterName": {
          "description": "Name of the parameter in the channel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "parameterDisplay": {
          "description": "The display name for the parameter in the channel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "shortDescription": {
          "description": "Short description for the parameter.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "parameterDescription": {
          "description": "The Description for the parameter.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "parameterValue": {
          "description": "The Value of the parameter.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "hotelId": {
          "description": "Hotel code identifying the parameters related to the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "parameterType": {
          "description": "The type of the parameter, the possible types are P (Parameter), Setting (S).",
          "type": "string",
          "enum": [
            "P",
            "S"
          ]
        },
        "scope": {
          "description": "Whether this is a global or property level parameter.",
          "type": "string",
          "enum": [
            "H",
            "P"
          ]
        },
        "valueType": {
          "$ref": "#/definitions/channelParameterValueType"
        },
        "sequence": {
          "description": "Sequence number for displaying the parameter in the channel.",
          "type": "integer"
        },
        "parameters": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/baseChannelParameterType"
          }
        },
        "levelType": {
          "$ref": "#/definitions/channelParameterLevelType"
        },
        "levelCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      },
      "description": "Parameters details for the Channel."
    },
    "baseChannelParameterType": {
      "type": "object",
      "description": "Parameters details for the Channel.",
      "properties": {
        "parameterName": {
          "description": "Name of the parameter in the channel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "parameterDisplay": {
          "description": "The display name for the parameter in the channel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "shortDescription": {
          "description": "Short description for the parameter.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "parameterDescription": {
          "description": "The Description for the parameter.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "parameterValue": {
          "description": "The Value of the parameter.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "hotelId": {
          "description": "Hotel code identifying the parameters related to the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "parameterType": {
          "description": "The type of the parameter, the possible types are P (Parameter), Setting (S).",
          "type": "string",
          "enum": [
            "P",
            "S"
          ]
        },
        "scope": {
          "description": "Whether this is a global or property level parameter.",
          "type": "string",
          "enum": [
            "H",
            "P"
          ]
        },
        "valueType": {
          "$ref": "#/definitions/channelParameterValueType"
        },
        "sequence": {
          "description": "Sequence number for displaying the parameter in the channel.",
          "type": "integer"
        }
      }
    },
    "channelParameterLevelType": {
      "type": "string",
      "enum": [
        "Global",
        "Hotel"
      ]
    },
    "channelPolicies": {
      "type": "object",
      "description": "Request object for fetching Policies, guarantee, and deposit Details.",
      "properties": {
        "channelPoliciesInfo": {
          "description": "Reservation Rules and Policies related Information",
          "$ref": "#/definitions/channelPoliciesInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelPoliciesInfoType": {
      "type": "array",
      "description": "To list down all the policies associated with the relevant input request.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelPolicyType"
      }
    },
    "channelPolicyType": {
      "type": "object",
      "description": "Policy details including guaranteeInfo, cancellation information etc.",
      "properties": {
        "guarantees": {
          "description": "Guarantee details to be fetched",
          "$ref": "#/definitions/guaranteesInfoType"
        },
        "cancelPenalty": {
          "description": "Cancellation details.",
          "$ref": "#/definitions/cancelPenaltyType"
        },
        "depositPolicy": {
          "description": "DepositPolicy details.",
          "$ref": "#/definitions/depositPolicyType"
        },
        "channelMarketingInfo": {
          "description": "Channel Marketing Text like cancel,deposit,tax,commission policy etc.",
          "$ref": "#/definitions/channelMarketingInfoType"
        },
        "ratePlanCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "channelRatePlanCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hold": {
          "type": "boolean"
        },
        "deposit": {
          "type": "boolean"
        },
        "commissionCode": {
          "type": "string"
        }
      }
    },
    "guaranteesInfoType": {
      "type": "array",
      "description": "Guarantee details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/guaranteeType"
      }
    },
    "guaranteeType": {
      "type": "object",
      "description": "Specifies Guarantee Code attributes.",
      "properties": {
        "description": {
          "description": "Description of the Guarantee Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "requirements": {
          "description": "Specifies various requirements for the guarantee code.",
          "$ref": "#/definitions/guaranteeRequirementsType"
        },
        "shortDescription": {
          "description": "Brief description of the Guarantee Code.",
          "$ref": "#/definitions/translationTextType80"
        },
        "paymentTypes": {
          "description": "Specifies various payment types for the guarantee code.",
          "$ref": "#/definitions/paymentTypesType"
        },
        "guaranteeCode": {
          "description": "Code assigned to the Guarantee.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "onHold": {
          "description": "If true indicates this Guarantee Code is used only to hold the inventory during reservation process.",
          "type": "boolean"
        },
        "reserveInventory": {
          "description": "If true indicates inventory will be reserved/deducted when reservation uses this Guarantee Code.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "lateArrival": {
          "description": "Represents the late arrival time.",
          "type": "string"
        }
      }
    },
    "guaranteeRequirementsType": {
      "type": "object",
      "description": "Specifies various requirement for the guarantee code.",
      "properties": {
        "requirementCode": {
          "description": "Requirement Code.",
          "type": "string"
        },
        "cancellation": {
          "description": "When true indicates cancellation on the reservation is required for this guarantee code.",
          "type": "boolean"
        },
        "phoneNumber": {
          "description": "When true indicates phone number on the reservation is required for this guarantee code.",
          "type": "boolean"
        },
        "address": {
          "description": "When true indicates address on the reservation is required for this guarantee code.",
          "type": "boolean"
        },
        "creditCard": {
          "description": "When true indicates Credit Card on the reservation is required for this guarantee code.",
          "type": "boolean"
        },
        "arrivalTime": {
          "description": "When true indicates arrival Time on the reservation is required for this guarantee code.",
          "type": "boolean"
        },
        "deposit": {
          "description": "When true indicates deposit is required for this guarantee code.",
          "type": "boolean"
        }
      }
    },
    "paymentTypesType": {
      "type": "array",
      "description": "Payment card code like AX,VI etc.",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "minLength": 0,
        "maxLength": 20
      }
    },
    "cancelPenaltyType": {
      "type": "object",
      "description": "The CancelPenalty class defines the cancellation policy of the hotel facility.",
      "properties": {
        "deadline": {
          "description": "Cancellation deadline, absolute or relative.",
          "$ref": "#/definitions/policyDeadlineType"
        },
        "amountPercent": {
          "description": "Cancellation fee expressed as a fixed amount, or percentage of/or room nights.",
          "$ref": "#/definitions/policyAmountPercentType"
        },
        "penaltyDescription": {
          "description": "Text description of the Penalty in a given language.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "offsetUnit": {
          "$ref": "#/definitions/offsetUnitType"
        },
        "formattedRule": {
          "description": "Formatted Text Rule of the Cancellation Penalty.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "policyCode": {
          "description": "Policy Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "manual": {
          "description": "Flag to indicate if the cancellation policy is manual.",
          "type": "boolean"
        },
        "nonRefundable": {
          "description": "Indicates if the amount is refundable if booking is canceled.",
          "type": "boolean"
        }
      }
    },
    "policyDeadlineType": {
      "type": "object",
      "description": "Cancellation deadline, absolute or relative.",
      "properties": {
        "absoluteDeadline": {
          "description": "Defines the absolute deadline. Either this or the offset attributes may be used.",
          "type": "string",
          "format": "date-time"
        },
        "offsetFromArrival": {
          "description": "The number of days before arrival that allows cancellation without penalties.",
          "type": "integer"
        },
        "offsetDropTime": {
          "description": "Time on offset day the cancellation penalties applies.",
          "type": "string",
          "format": "date-time"
        },
        "offsetFromBookingDate": {
          "description": "The number of days after booking deposit must be paid.",
          "type": "integer"
        }
      }
    },
    "policyAmountPercentType": {
      "type": "object",
      "description": "Defines the percentage basis for calculating the fee amount or the amount.",
      "properties": {
        "basisType": {
          "description": "Provides the basis for how the amount of the guarantee is calculated.",
          "$ref": "#/definitions/policyBasisTypeType"
        },
        "nights": {
          "description": "The number of nights of the hotel stay that are used to calculate the fee amount.",
          "type": "integer"
        },
        "percent": {
          "description": "The percentage used to calculate the amount.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "policyBasisTypeType": {
      "type": "string",
      "description": "Full Amount.",
      "enum": [
        "FlatAmount",
        "Percentage",
        "Nights",
        "NightPercentage",
        "FullAmount"
      ]
    },
    "offsetUnitType": {
      "type": "string",
      "description": "Indicates deadline offset unit type.",
      "enum": [
        "Year",
        "Month",
        "Day",
        "Hour"
      ]
    },
    "depositPolicyType": {
      "type": "object",
      "description": "Used to define the deposit policy, guarantees policy, and/or accepted forms of payment.",
      "properties": {
        "amountPercent": {
          "description": "Payment expressed as a fixed amount, or a percentage of/or room nights.",
          "$ref": "#/definitions/policyAmountPercentType"
        },
        "deadline": {
          "description": "Payment deadline, absolute or relative.",
          "$ref": "#/definitions/policyDeadlineType"
        },
        "description": {
          "description": "Text description of the Payment in a given language.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "depositReceiptNo": {
          "description": "Receipt number associated with the deposit policy",
          "type": "integer"
        },
        "transactionDate": {
          "description": "Transaction Date associated with the deposit policy",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "depositReqReversed": {
          "description": "Flag to indicate if deposit policy is reversed",
          "type": "boolean"
        },
        "formattedRule": {
          "description": "Formatted Text Rule of the deposit policy.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "typeOfCharges": {
          "description": "Defines if the deposit amount is calculated based on Room Charges, Catering Charges or both",
          "$ref": "#/definitions/depositCancelRevenueType"
        },
        "policyCode": {
          "description": "Deposit Policy Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "manual": {
          "description": "Flag to indicate if the cancellation policy is manual.",
          "type": "boolean"
        }
      }
    },
    "depositCancelRevenueType": {
      "type": "string",
      "description": "The type to indicate what revenue is to be used for calculating deposit/cancellation amounts.",
      "enum": [
        "Rooms",
        "Catering",
        "All"
      ]
    },
    "channelMarketingInfoType": {
      "type": "array",
      "description": "Marketing Text like cancel policy, deposit policy etc.",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "description": {
            "description": "Marketing Text like cancel policy, deposit policy etc.",
            "type": "string",
            "minLength": 0,
            "maxLength": 4000
          },
          "policyType": {
            "description": "Indicates the policy type like cancel,deposit etc.",
            "$ref": "#/definitions/marketingPolicyType"
          },
          "ratePlanCode": {
            "description": "Indicates the rate code for which the policy is associated with.",
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        }
      }
    },
    "marketingPolicyType": {
      "type": "string",
      "description": "Indicates the channel policy type like deposit,cancel etc.",
      "enum": [
        "Deposit",
        "Commission",
        "Cancel",
        "Guarantee",
        "General",
        "Penalty",
        "Tax",
        "Promotion"
      ]
    },
    "channelRoomMapping": {
      "type": "object",
      "description": "Request object for changing Channel Room Mapping.",
      "properties": {
        "channelRoomMapping": {
          "description": "Channel Room Type mapping details to be changed.",
          "$ref": "#/definitions/channelRoomMappingType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelInventorySnapshot": {
      "type": "object",
      "description": "Response object containing the room availability and restrictions for a hotel in relation to booking channels.",
      "properties": {
        "channelInventorySnapshot": {
          "description": "Channel inventory snapshot containing room availability and restrictions for a hotel in relation to booking channels.",
          "$ref": "#/definitions/channelInventorySnapshotType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelInventorySnapshotType": {
      "type": "object",
      "description": "The evaluated channel inventory snapshot statistics based on the search criteria given.",
      "properties": {
        "inventories": {
          "description": "The main statistics for the channel inventory snapshot.",
          "$ref": "#/definitions/channelInventorySnapshotInventoriesType"
        },
        "masterInfo": {
          "description": "Additional information about the records returned in the snapshot.",
          "$ref": "#/definitions/channelInventorySnapshotMasterInfoType"
        }
      }
    },
    "channelInventorySnapshotInventoriesType": {
      "type": "object",
      "description": "Collection of inventory statistics and restrictions for a hotel in relation to booking channels.",
      "properties": {
        "inventory": {
          "description": "Details of inventory statistics and restrictions.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/channelInventoryType"
          }
        },
        "hotelId": {
          "description": "Hotel that the inventory belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "channelInventoryType": {
      "type": "object",
      "description": "Inventory statistics and restrictions. This can have no code (House level), BookingChannelCode, or ChannelRoomType to represent the different levels.",
      "properties": {
        "snapshot": {
          "description": "Inventory statistics and restriction details.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/channelSnapshotType"
          }
        },
        "bookingChannelCode": {
          "description": "Booking channel code that the snapshot belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "channelRoomType": {
          "description": "Booking channel room type that the snapshot belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "channelSnapshotType": {
      "type": "object",
      "description": "Inventory statistic and restriction information for a given date.",
      "properties": {
        "restrictionsInfo": {
          "description": "Restrictions information for the day.",
          "$ref": "#/definitions/restrictionsInfoType"
        },
        "inventoryRooms": {
          "description": "Number of rooms in inventory.",
          "type": "number"
        },
        "sellLimit": {
          "description": "Number of overbooking rooms allowed.",
          "type": "number"
        },
        "tentativeRoomsSold": {
          "description": "Number of tentative rooms sold - does not include definite reservations.",
          "type": "number"
        },
        "roomsSold": {
          "description": "Number of rooms sold.",
          "type": "number"
        },
        "availableRooms": {
          "description": "Number of available rooms.",
          "type": "number"
        },
        "date": {
          "description": "Date of the statistics and restrictions.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "restrictionsInfoType": {
      "type": "array",
      "description": "Provides the basic Restriction type details, specifically used in snapshot operations for efficiency.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/restrictionInfoType"
      }
    },
    "restrictionInfoType": {
      "type": "object",
      "properties": {
        "restrictionStatus": {
          "description": "Indicates the type of the restriction.",
          "$ref": "#/definitions/restrictionInfoStatusType"
        }
      }
    },
    "restrictionInfoStatusType": {
      "type": "object",
      "description": "The RestrictionStatusType is used to indicate the type of restriction applied. An enumerated restriction type is defined in the attribute group.",
      "properties": {
        "code": {
          "description": "Identifies the type of restriction. I.E. Closed, ClosedForArrival, etc.",
          "$ref": "#/definitions/restrictionStatusesType"
        },
        "unit": {
          "description": "Defines restriction in conjunction with Restriction Code. Value must be specified for Restriction Codes MinimumStayThrough, MaximumStayThrough, MinimumLengthOfStay, MaximumLengthOfStay, MinimumAdvanceBooking, MaximumAdvanceBooking.",
          "type": "integer"
        },
        "lOS1": {
          "description": "Indicates Length of Stay 1 is not available. Defines restriction in conjunction with Restriction Code LOSNotAvailable.",
          "type": "boolean"
        },
        "lOS2": {
          "description": "Indicates Length of Stay 2 is not available. Defines restriction in conjunction with Restriction Code LOSNotAvailable.",
          "type": "boolean"
        },
        "lOS3": {
          "description": "Indicates Length of Stay 3 is not available. Defines restriction in conjunction with Restriction Code LOSNotAvailable.",
          "type": "boolean"
        },
        "lOS4": {
          "description": "Indicates Length of Stay 4 is not available. Defines restriction in conjunction with Restriction Code LOSNotAvailable.",
          "type": "boolean"
        },
        "lOS5": {
          "description": "Indicates Length of Stay 5 is not available. Defines restriction in conjunction with Restriction Code LOSNotAvailable.",
          "type": "boolean"
        },
        "lOS6": {
          "description": "Indicates Length of Stay 6 is not available. Defines restriction in conjunction with Restriction Code LOSNotAvailable.",
          "type": "boolean"
        },
        "lOS7": {
          "description": "Indicates Length of Stay 7 or more is not available. Defines restriction in conjunction with Restriction Code LOSNotAvailable.",
          "type": "boolean"
        },
        "roomClass": {
          "description": "Room Class of actual restriction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateCategory": {
          "description": "Rate Category of actual restriction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateCode": {
          "description": "Rate Code of actual restriction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "description": "Room Type of actual restriction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bookingChannelCode": {
          "description": "Booking channel code of actual restriction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "restrictionStatusesType": {
      "type": "string",
      "enum": [
        "Closed",
        "ClosedForArrival",
        "ClosedForDeparture",
        "MinimumStayThrough",
        "MaximumStayThrough",
        "MinimumLengthOfStay",
        "MaximumLengthOfStay",
        "LOSNotAvailable",
        "MinimumAdvanceBooking",
        "MaximumAdvanceBooking",
        "Open",
        "OpenForArrival",
        "OpenForDeparture"
      ]
    },
    "channelInventorySnapshotMasterInfoType": {
      "type": "object",
      "description": "Details about the booking channels and room types contained in the channel inventory snapshot.",
      "properties": {
        "bookingChannel": {
          "description": "Collection of booking channels returned in the channel inventory snapshot and the details about those channels.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "object",
            "properties": {
              "channelRoomTypes": {
                "description": "Details about a specific channel room type.",
                "type": "array",
                "maxItems": 4000,
                "items": {
                  "type": "object",
                  "properties": {
                    "channelRoomTypeCode": {
                      "description": "The channel room type's identifying code.",
                      "type": "string",
                      "minLength": 0,
                      "maxLength": 20
                    },
                    "roomTypeCode": {
                      "description": "The internal room type label which is mapped to the channel room type.",
                      "type": "string",
                      "minLength": 0,
                      "maxLength": 20
                    },
                    "description": {
                      "description": "If the ENHANCED_ROOM_RATE_DESCRIPTION function is off, this element will contain the simple channel room type description.",
                      "type": "string",
                      "minLength": 0,
                      "maxLength": 200
                    },
                    "roomDescriptionLine1": {
                      "description": "If the ENHANCED_ROOM_RATE_DESCRIPTION function is on, this element will contain the first line of the enhanced channel room type description.",
                      "type": "string",
                      "minLength": 0,
                      "maxLength": 200
                    },
                    "roomDescriptionLine2": {
                      "description": "If the ENHANCED_ROOM_RATE_DESCRIPTION function is on, this element will contain the second line of the enhanced channel room type description.",
                      "type": "string",
                      "minLength": 0,
                      "maxLength": 200
                    },
                    "roomDescriptionLine3": {
                      "description": "If the ENHANCED_ROOM_RATE_DESCRIPTION function is on, this element will contain the third line of the enhanced channel room type description.",
                      "type": "string",
                      "minLength": 0,
                      "maxLength": 200
                    },
                    "sellSequence": {
                      "description": "The order in which the channel room type is to be displayed.",
                      "type": "integer"
                    }
                  }
                }
              },
              "code": {
                "description": "The booking channel's identifying code.",
                "type": "string",
                "minLength": 0,
                "maxLength": 20
              },
              "description": {
                "description": "The name or description of the booking channel.",
                "type": "string",
                "minLength": 0,
                "maxLength": 40
              },
              "bookingChannelType": {
                "description": "The type of channel. I.E. GDS, ADS, ODS, WEB.",
                "type": "string",
                "minLength": 0,
                "maxLength": 20
              },
              "channelInventoryActive": {
                "description": "Flag to indicate if the channel and hotel combination have the Channel Inventory parameter active. This parameter allows sell limits to be set for the channel or channel room type.",
                "type": "boolean"
              }
            }
          }
        },
        "hotelId": {
          "description": "The internal hotel code that the given booking channel info is mapped under.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "channelSellLimitsByDateRange": {
      "type": "object",
      "description": "Request object to create or update sell limit schedules for the channel or channel room type within a date range. Existing schedules can be split as needed to account for overlapping schedules.",
      "properties": {
        "sellLimits": {
          "description": "List of sell limit schedules to be created or updated for the channel or channel room type.",
          "$ref": "#/definitions/channelSellLimitSchedulesType"
        },
        "adjustOverlappingSchedules": {
          "description": "Flag to indicate whether any overlapping schedules should be automatically adjusted (split, truncated, etc.) as needed.",
          "type": "boolean"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "generalAvailabilitySimulator": {
      "type": "object",
      "description": "Response object to simulate general availability.",
      "properties": {
        "generalAvailability": {
          "description": "Room Type and room rate combination.",
          "$ref": "#/definitions/generalAvailSimulatorType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "generalAvailSimulatorType": {
      "type": "object",
      "description": "Room Type and Room Rate combination.",
      "properties": {
        "availableRatePlans": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/availableRatePlanType"
          }
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bookingChannelCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "marketingInfo": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "supportsHTMLEditor": {
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "sellOrder": {
          "description": "Sell by room, rate or rate room.",
          "$ref": "#/definitions/sellOrderType"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "availableRatePlanType": {
      "type": "object",
      "description": "Room Type and Room Rate combination.",
      "properties": {
        "marketingInfo": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "availableRooms": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/availableRoomType"
          }
        },
        "ratePlanCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanDesc": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "currency": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "taxInfo": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "availableRoomType": {
      "type": "object",
      "description": "Room Type and Room Rate combination.",
      "properties": {
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "channelRoomType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateChangedYN": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "sellOrderType": {
      "type": "string",
      "description": "Channel Sell By which may be RATEROOM, RATE or ROOM.",
      "enum": [
        "RateRoom",
        "Rate",
        "Room"
      ]
    },
    "rateParity": {
      "type": "object",
      "description": "Response object to fetch Rate Parity.",
      "properties": {
        "rateParity": {
          "description": "Rate parity.",
          "$ref": "#/definitions/rateParityType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "rateParityType": {
      "type": "object",
      "description": "Information on Room Rate Parity among Channels/Property",
      "properties": {
        "parityGroups": {
          "description": "Channels and Property combination.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/parityGroupType"
          }
        },
        "hotelsInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/hotelChannelInfoType"
          }
        },
        "bookingChannelsInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/bookingChannelInfoType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "parityGroupType": {
      "type": "object",
      "description": "Channels and Property Group wise Rates for Room Type and Rate Plan combination.",
      "properties": {
        "parityRoomRates": {
          "description": "Room Type and Rate Plan combination.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/parityRoomRateType"
          }
        },
        "hotelId": {
          "description": "The code that identifies a Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bookingChannelCode": {
          "description": "The code that identifies a Booking Channel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bookingChannelURL": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "bookingChannelIconURL": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "parityRoomRateType": {
      "type": "object",
      "description": "Rate for Room Type and Rate Plan combination.",
      "properties": {
        "parityRates": {
          "description": "Rate on specific arrival date.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/parityRateType"
          }
        },
        "roomType": {
          "description": "The code that identifies a Room Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCode": {
          "description": "The code that identifies a Rate Plan Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "channelRoomType": {
          "description": "The code that identifies a Booking Channel Room Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "channelRatePlanCode": {
          "description": "The code that identifies a Booking Channel Rate Plan Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "parityRateType": {
      "type": "object",
      "description": "Minimum and Maximum Rate on specific arrival date.",
      "properties": {
        "additionalDetailList": {
          "$ref": "#/definitions/additionalDetailListType"
        },
        "roomTypeDescription": {
          "$ref": "#/definitions/enhancedDescriptionType"
        },
        "rateDescription": {
          "$ref": "#/definitions/enhancedDescriptionType"
        },
        "ratePlanDescription": {
          "type": "string"
        },
        "channelRatePlanCategory": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateFrequency": {
          "type": "string"
        },
        "availableRooms": {
          "type": "integer"
        },
        "additionalAmounts": {
          "$ref": "#/definitions/additionalAmountListType"
        },
        "rateAmounts": {
          "type": "object",
          "properties": {
            "totalAmount": {
              "$ref": "#/definitions/currencyAmountType"
            },
            "taxAmount": {
              "$ref": "#/definitions/currencyAmountType"
            },
            "cancellationAmount": {
              "$ref": "#/definitions/currencyAmountType"
            },
            "commissionAmount": {
              "$ref": "#/definitions/currencyAmountType"
            },
            "depositAmount": {
              "$ref": "#/definitions/currencyAmountType"
            }
          }
        },
        "totalPricingAmounts": {
          "type": "object",
          "properties": {
            "totalSurcharge": {
              "$ref": "#/definitions/currencyAmountType"
            },
            "totalTax": {
              "$ref": "#/definitions/currencyAmountType"
            },
            "totalRateIncl": {
              "$ref": "#/definitions/currencyAmountType"
            }
          }
        },
        "arrivalDate": {
          "description": "Arrival Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "weekendDay": {
          "type": "boolean"
        },
        "closed": {
          "type": "boolean"
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        },
        "statusCode": {
          "description": "Status Code related to functionality.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "statusDescription": {
          "description": "Description of Status Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "rateChangesOverDays": {
          "type": "boolean"
        }
      }
    },
    "additionalDetailListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/additionalDetailType"
      }
    },
    "additionalDetailType": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "detailType": {
          "type": "string",
          "enum": [
            "CancelPolicy",
            "CommissionPolicy",
            "GuaranteePolicy",
            "DepositPolicy",
            "PenaltyPolicy",
            "MarketingInformation",
            "Promotion",
            "TaxInformation",
            "Other"
          ]
        },
        "otherDetailType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "enhancedDescriptionType": {
      "type": "object",
      "description": "This type holds enhanced room/rate description.",
      "properties": {
        "shortDescription": {
          "$ref": "#/definitions/translationTextType2000"
        },
        "description": {
          "$ref": "#/definitions/translationTextType2000"
        },
        "enhancedDesc1": {
          "$ref": "#/definitions/translationTextType50"
        },
        "enhancedDesc2": {
          "$ref": "#/definitions/translationTextType50"
        },
        "enhancedDesc3": {
          "$ref": "#/definitions/translationTextType50"
        },
        "source": {
          "type": "string"
        }
      }
    },
    "additionalAmountListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/additionalAmountType"
      }
    },
    "additionalAmountType": {
      "type": "object",
      "properties": {
        "amountType": {
          "type": "string",
          "enum": [
            "AdditionalAdult",
            "AdditionalChild",
            "AdditionalRollawayBed",
            "AdditionalCrib",
            "AdditionalRollawayCrib"
          ]
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "channelEnhancedGlobalDescription": {
      "type": "object",
      "description": "Response object for information regarding global descriptions of hotel room types.",
      "properties": {
        "globalDescription": {
          "description": "Contains the global descriptions of hotel room types.",
          "$ref": "#/definitions/enhancedDescriptionType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelRoomMappingsSummary": {
      "type": "object",
      "description": "Operation to fetch hotel-channel room type mappings.",
      "properties": {
        "channelRoomMappingsSummary": {
          "description": "Refer to Generic common types document.",
          "$ref": "#/definitions/channelRoomMappingsSummaryType"
        },
        "masterInfo": {
          "description": "Additional details about the booking channels and source descriptions for a hotel room type referenced within the fetched results.",
          "$ref": "#/definitions/channelRoomMappingMasterInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "channelRoomMappingsSummaryType": {
      "type": "object",
      "description": "Collection of hotel-channel room type mappings.",
      "properties": {
        "channelRoomMappingSummary": {
          "description": "Information about hotel-channel room type mapping.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/channelRoomMappingSummaryType"
          }
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "channelRoomMappingSummaryType": {
      "type": "object",
      "description": "Basic details of hotel-channel room type mapping.",
      "properties": {
        "endDate": {
          "description": "End date of the hotel-channel room type mapping.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "description": {
          "description": "Hotel-channel room type mapping description.",
          "$ref": "#/definitions/channelRoomMappingDescriptionType"
        },
        "alternateChannelRoomType": {
          "description": "Alternate channel room type name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "channelRoomTypeOrder": {
          "description": "Channel room type order of the hotel-channel room type mapping.",
          "type": "number"
        },
        "sellSequence": {
          "description": "Sell sequence for hotel-channel room type mapping.",
          "type": "number"
        },
        "active": {
          "description": "Flag that indicates whether hotel-channel room type mapping is active or not.",
          "type": "boolean"
        },
        "bedTypeCode": {
          "description": "Channel bed type code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "baseAllocation": {
          "description": "Channel base allocation.",
          "type": "integer"
        },
        "rateCodes": {
          "description": "Rate codes where hotel-channel room type mappings belong to.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "channelRateCodes": {
          "description": "Channel rate codes where hotel-channel room mappings belong to.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "noOfRateRoomsMapped": {
          "description": "Number of active rate room mappings for the channel room type.",
          "type": "integer"
        },
        "maximumOccupancy": {
          "description": "The maximum occupancy for this room category.",
          "type": "integer"
        },
        "defaultOccupancy": {
          "description": "Default occupancy for the room type.",
          "type": "integer"
        },
        "physicalRoomsCount": {
          "description": "The physical number of rooms in this room category at this property.",
          "type": "integer"
        },
        "bookingChannelCode": {
          "description": "Booking Channel Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "description": "Room Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "channelRoomType": {
          "description": "Channel Room Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "beginDate": {
          "description": "Begin Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "channelRoomMappingMasterInfoType": {
      "type": "object",
      "description": "Additional details about the booking channels and source descriptions for a hotel room type referenced within the fetched results.",
      "properties": {
        "bookingChannelsInfo": {
          "description": "Additional details about booking channels.",
          "$ref": "#/definitions/bookingChannelsInfoType"
        },
        "sourceDescriptions": {
          "description": "hotel-channel room type mapping source descriptions.",
          "$ref": "#/definitions/channelRoomMappingsSourceDescriptionsType"
        }
      }
    },
    "channelRoomMappingsSourceDescriptionsType": {
      "type": "array",
      "description": "This type holds hotel-channel room type mapping source descriptions.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/channelRoomMappingSourceDescriptionsType"
      }
    },
    "channelRoomMappingSourceDescriptionsType": {
      "type": "object",
      "description": "Hotel-channel room type mapping source descriptions.",
      "properties": {
        "description": {
          "description": "Hotel room type description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "globalDescription": {
          "description": "Hotel room type global description.",
          "$ref": "#/definitions/channelMappingEnhancedDescriptionType"
        },
        "hotelId": {
          "description": "Hotel code the descriptions belong to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "description": "Room type the descriptions belong to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "profileNegotiatedRateDetails": {
      "type": "object",
      "description": "Response object for fetching Negotiated channel rates.",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/getChannelRatesAccessItems"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "getChannelRatesAccessItems": {
      "type": "object",
      "description": "Response object for fetching Negotiated channel rates.",
      "properties": {
        "hotelId": {
          "description": "Hotel Id.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "channelCode": {
          "description": "Channel Room Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCode": {
          "description": "Channel Room Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "channelRatePlanCode": {
          "description": "Channel Room Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "channelRatePlanOrder": {
          "description": "Channel Room Type.",
          "type": "integer",
          "default": true
        },
        "rateAccessCode": {
          "type": "string",
          "description": "Negotiated Rate Access Code."
        },
        "startDate": {
          "type": "string",
          "description": "Start Date of the Channel Rate Access Code.",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "description": "End Date of the Channel Rate Access Code.",
          "format": "date"
        },
        "active": {
          "type": "boolean"
        },
        "profileId": {
          "type": "string",
          "minLength": 1,
          "maxLength": 20,
          "pattern": "[A-Z0-9]+",
          "description": "Profile Id for which Channel Rate access code is applicable for."
        },
        "accountId": {
          "type": "string",
          "minLength": 1,
          "maxLength": 20,
          "pattern": "[A-Z0-9]+",
          "description": "Account Id for which Channel Rate access code is applicable for."
        },
        "accountName": {
          "type": "string",
          "description": "Account name for which Channel Rate access Code is applicable for.",
          "minLength": 1,
          "maxLength": 80
        },
        "profileAccountType": {
          "$ref": "#/definitions/accountTypeEnum"
        }
      }
    },
    "profileRateAccessCodes": {
      "type": "object",
      "description": "Request Object for Profile Rate Access Async Job",
      "properties": {
        "items": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/profileRateAccessCode"
          }
        }
      }
    },
    "profileRateAccessCode": {
      "type": "object",
      "required": [
        "hotelId",
        "channelCode",
        "channelRatePlans"
      ],
      "properties": {
        "hotelId": {
          "type": "string",
          "description": "Unique ID that identifies a single hotel property.",
          "minLength": 1,
          "maxLength": 20
        },
        "channelCode": {
          "type": "string",
          "description": "Unique ID that identifies a single Channel.",
          "minLength": 1,
          "maxLength": 20
        },
        "channelRatePlans": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/profileChannelRatePlan"
          }
        }
      }
    },
    "profileChannelRatePlan": {
      "type": "object",
      "required": [
        "ratePlanCode",
        "channelRatePlanCode",
        "channelRateAccessCodes"
      ],
      "properties": {
        "ratePlanCode": {
          "type": "string",
          "description": "Rate Plan Code (length of string must be less than or equal to 20)",
          "minLength": 1,
          "maxLength": 20
        },
        "channelRatePlanCode": {
          "type": "string",
          "description": "Chennel Rate Plan Code (length of string must be less than or equal to 20)",
          "minLength": 1,
          "maxLength": 20
        },
        "startDate": {
          "type": "string",
          "description": "ISO 8601 date Format 'YYYY-MM-DD'",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "description": "ISO 8601 date Format 'YYYY-MM-DD'",
          "format": "date"
        },
        "active": {
          "type": "boolean",
          "default": true
        },
        "channelRatePlanOrder": {
          "type": "integer",
          "default": true,
          "description": "Channel Rate Plan Order"
        },
        "channelRateAccessCodes": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/profileChannelRateAccessCode"
          }
        }
      }
    },
    "profileChannelRateAccessCode": {
      "type": "object",
      "required": [
        "rateAccessCode",
        "active",
        "accountId",
        "accountName",
        "accountType"
      ],
      "properties": {
        "rateAccessCode": {
          "type": "string",
          "description": "Negotiated Rate Access Code."
        },
        "startDate": {
          "type": "string",
          "description": "Start Date of the Channel Rate Access Code.",
          "format": "date"
        },
        "endDate": {
          "type": "string",
          "description": "End Date of the Channel Rate Access Code.",
          "format": "date"
        },
        "active": {
          "type": "boolean"
        },
        "accountId": {
          "type": "string",
          "minLength": 1,
          "maxLength": 20,
          "pattern": "[A-Z0-9]+",
          "description": "Account Id for which Channel Rate access code is applicable for."
        },
        "accountName": {
          "type": "string",
          "description": "Account name for which Channel Rate access Code is applicable for.",
          "minLength": 1,
          "maxLength": 80
        },
        "profileAccountType": {
          "$ref": "#/definitions/accountTypeEnum"
        },
        "profileId": {
          "type": "string",
          "minLength": 1,
          "maxLength": 20,
          "description": "Profile Id for which Channel Rate access code is applicable for."
        },
        "oldRateAccessCode": {
          "type": "string",
          "description": "Negotiated Rate Access Code."
        },
        "oldStartDate": {
          "type": "string",
          "description": "Start Date of the Channel Rate Access Code.",
          "format": "date"
        },
        "oldEndDate": {
          "type": "string",
          "description": "End Date of the Channel Rate Access Code.",
          "format": "date"
        }
      }
    },
    "syncProfileRatesAccessCodes": {
      "type": "object",
      "properties": {
        "targetHotels": {
          "type": "array",
          "maxItems": 50,
          "minItems": 1,
          "items": {
            "type": "string"
          }
        },
        "oldChannelRatesAccess": {
          "$ref": "#/definitions/channelRatesAccessMain"
        },
        "newChannelRatesAccess": {
          "$ref": "#/definitions/channelRatesAccessMain"
        }
      }
    },
    "channelRatesAccessMain": {
      "type": "object",
      "properties": {
        "hotelId": {
          "type": "string",
          "description": "Unique ID that identifies a single hotel property.",
          "minLength": 1,
          "maxLength": 20
        },
        "channelCode": {
          "type": "string"
        },
        "channelRatePlanCode": {
          "type": "string"
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "description": "ISO 8601 date Format 'YYYY-MM-DD'"
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "description": "ISO 8601 date Format 'YYYY-MM-DD'"
        },
        "rateAccessCode": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "accountId": {
          "description": "Id of the profile account",
          "type": "string",
          "minLength": 1,
          "maxLength": 20,
          "pattern": "[A-Z0-9]+"
        },
        "accountName": {
          "description": "Name of the profile account",
          "type": "string",
          "minLength": 1
        },
        "profileAccountType": {
          "$ref": "#/definitions/accountTypeEnum"
        },
        "profileId": {
          "type": "string",
          "minLength": 1,
          "maxLength": 20,
          "description": "Profile Id for which Channel Rate access code is applicable for."
        }
      }
    },
    "accountTypeEnum": {
      "description": "Type of the profile account",
      "type": "string",
      "enum": [
        "Source",
        "TravelAgent",
        "Company"
      ]
    },
    "deleteNegotiatedRates": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "minItems": 1,
          "maxItems": 100,
          "items": {
            "$ref": "#/definitions/hotelIdChannelRatesAccess"
          }
        }
      }
    },
    "hotelIdChannelRatesAccess": {
      "description": "HotelId with mappingIds",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "profileId": {
          "description": "Profile ID.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "accountId": {
          "description": "Account ID.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "channelcode": {
          "description": "channel Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "channelRateCode": {
          "description": "channel Rate Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCode": {
          "description": " Rate Plan Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "accessCode": {
          "description": "Access Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    }
  },
  "tags": [
    {
      "name": "Availability",
      "description": "The Availability APIs allow you to manage a properties room-rate availability, which is configured for a channel. This also includes operations to manage restrictions and hurdles."
    },
    {
      "name": "Inventory",
      "description": "The Inventory APIs allow you to manage a properties room inventory, as well as manage overbooking/sell limits at different levels. It also contains operations to get Item Inventory."
    },
    {
      "name": "Channel",
      "description": "The Channel APIs allows you to view, configure and manage the mappings for your channel rate codes, negotiated rates, room types, global descriptions, letters, credit card types and channel codes."
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}
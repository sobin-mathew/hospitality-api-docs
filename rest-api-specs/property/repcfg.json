{
  "swagger": "2.0",
  "info": {
    "title": "OPERA Cloud Report Master Data Management API",
    "description": "APIs for adding, updating, and deleting stationery reports in OPERA Cloud.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>",
    "version": "24.4",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality_apis_ww_grp@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "schemes": [
    "https"
  ],
  "basePath": "/rep/config/v1",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/genericReports": {
      "post": {
        "summary": "Create generic reports.",
        "description": "Use this API to create generic reports. <p><strong>OperationId:</strong>postGenericReports</p>",
        "operationId": "postGenericReports",
        "parameters": [
          {
            "name": "genericReports",
            "in": "body",
            "required": true,
            "description": "This request provides End of Day reports to be created.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericReports"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Report"
        ]
      },
      "delete": {
        "summary": "Delete generic reports.",
        "description": "Use this API to delete generic reports based on hotelId, Id, contextId. <p><strong>OperationId:</strong>deleteGenericReports</p>",
        "operationId": "deleteGenericReports",
        "parameters": [
          {
            "name": "hotelId",
            "minLength": 0,
            "maxLength": 2000,
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          },
          {
            "name": "id",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "idContext",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "type",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Report"
        ]
      },
      "put": {
        "summary": "Update generic reports.",
        "description": "Use this API to update generic reports. <p><strong>OperationId:</strong>changeGenericReports</p>",
        "operationId": "changeGenericReports",
        "parameters": [
          {
            "name": "genericReports",
            "in": "body",
            "required": true,
            "description": "This request provides generic reports to be updated.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/genericReports"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "This response provides the result of updating reports.",
            "schema": {
              "$ref": "#/definitions/genericReports"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Report"
        ]
      }
    },
    "/reportParameters": {
      "get": {
        "summary": "Return report parameters.",
        "description": "Use this API to return report parameters based on search criteria such as id, idContext, type. <p><strong>OperationId:</strong>getReportParameters</p>",
        "operationId": "getReportParameters",
        "parameters": [
          {
            "name": "id",
            "minLength": 0,
            "maxLength": 80,
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "idContext",
            "minLength": 0,
            "maxLength": 80,
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "minLength": 0,
            "maxLength": 80,
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "The Fetch Report Parameters result object contains a collection of report parameters which allow/require user input prior to running the report.",
            "schema": {
              "$ref": "#/definitions/reportParameters"
            }
          },
          "204": {
            "description": "ReportParameters not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Report"
        ]
      }
    },
    "/reportTextConfiguration/copy": {
      "put": {
        "summary": "Operation to copy report text configuration.",
        "description": " <p><strong>OperationId:</strong>copyReportTextConfiguration</p>",
        "operationId": "copyReportTextConfiguration",
        "parameters": [
          {
            "name": "reportTextConfigurationsCopy",
            "in": "body",
            "required": true,
            "description": "Request object to copy the Report Text Configuration from Source Property to Destination Properties.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reportTextConfigurationsCopy"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Report"
        ]
      }
    },
    "/reports": {
      "get": {
        "summary": "Return reports.",
        "description": "Use this API to return reports based on search criteria such as excludeGroup, includeInternalReports, includeRnAReports, includeUnpublished, includeWatermarkDetails, limit, multiPropertyOnly, protectedReportParam, scheduled, name, group, hotel, id, idContext, type. <p><strong>OperationId:</strong>getReports</p>",
        "operationId": "getReports",
        "parameters": [
          {
            "name": "excludeGroup",
            "minLength": 0,
            "maxLength": 2000,
            "in": "query",
            "required": false,
            "description": "Indicates whether a report group should be excluded",
            "type": "string"
          },
          {
            "name": "includeInternalReports",
            "in": "query",
            "required": false,
            "description": "Indicates whether sample internal reports are to be included",
            "type": "boolean"
          },
          {
            "name": "includeRnAReports",
            "in": "query",
            "required": false,
            "description": "Indicates whether RnA reports are to be included",
            "type": "boolean"
          },
          {
            "name": "includeUnpublished",
            "in": "query",
            "required": false,
            "description": "Indicates whether protected reports should be included",
            "type": "boolean"
          },
          {
            "name": "includeWatermarkDetails",
            "in": "query",
            "required": false,
            "description": "Indicates whether the watermark details is to be populated. This is needed only for the configuration and not for the actual execution.",
            "type": "boolean"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "multiPropertyOnly",
            "in": "query",
            "required": false,
            "description": "Indicates whether the result set should only include multi-property reports.",
            "type": "boolean"
          },
          {
            "name": "protectedReportParam",
            "in": "query",
            "required": false,
            "description": "Indicates whether protected reports should be included",
            "type": "boolean"
          },
          {
            "name": "scheduled",
            "in": "query",
            "required": false,
            "description": "Indicates that only reports that can be scheduled are included",
            "type": "boolean"
          },
          {
            "name": "name",
            "minLength": 0,
            "maxLength": 2000,
            "in": "query",
            "required": false,
            "description": "Partial report name or description to search.",
            "type": "string"
          },
          {
            "name": "group",
            "minLength": 0,
            "maxLength": 2000,
            "in": "query",
            "required": false,
            "description": "Report group to limit search.",
            "type": "string"
          },
          {
            "name": "hotel",
            "minLength": 0,
            "maxLength": 2000,
            "in": "query",
            "required": false,
            "description": "Hotel code to search reports for.",
            "type": "string"
          },
          {
            "name": "id",
            "minLength": 0,
            "maxLength": 80,
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "idContext",
            "minLength": 0,
            "maxLength": 80,
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "minLength": 0,
            "maxLength": 80,
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "This type contains a collection of report modules which match the requested criteria. The object also may include a standard SUCCESS element or a WARNINGS or ERRORS collection.",
            "schema": {
              "$ref": "#/definitions/reports"
            }
          },
          "204": {
            "description": "Reports not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "Report"
        ]
      }
    }
  },
  "parameters": {
    "authKey": {
      "name": "authorization",
      "description": "Bearer token that needs to be passed which is generated post user authentication",
      "type": "string",
      "in": "header",
      "required": true
    },
    "x-app-key": {
      "name": "x-app-key",
      "description": "Client or Partner's Application Key",
      "type": "string",
      "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
      "in": "header",
      "required": true
    },
    "x-hotelid": {
      "name": "x-hotelid",
      "type": "string",
      "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
      "in": "header",
      "required": true
    },
    "x-externalsystem": {
      "name": "x-externalsystem",
      "type": "string",
      "maxLength": 80,
      "description": "External system code.",
      "in": "header",
      "x-example": "EXTERNALSYSTEMCODE"
    },
    "Accept-Language": {
      "name": "Accept-Language",
      "type": "string",
      "description": "Language code",
      "in": "header"
    },
    "x-hubid": {
      "name": "x-hubid",
      "type": "string",
      "description": "x-hubid is a logical grouping of multiple properties that allows api consumers to manage data from a group of properties. This x-hubid is a valid list of hub codes configured in OPERA to which the user has access. Rest APIs without hotelId in the operation path can support hub level integration using x-hubid",
      "in": "header"
    }
  },
  "responses": {
    "400": {
      "description": "Bad Request",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "401": {
      "description": "Unauthorized"
    },
    "403": {
      "description": "Forbidden"
    },
    "404": {
      "description": "Resource not found",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "405": {
      "description": "Method not allowed"
    },
    "406": {
      "description": "Not acceptable."
    },
    "413": {
      "description": "Request Entity Too Large"
    },
    "414": {
      "description": "Request URI Too Large"
    },
    "415": {
      "description": "Unsupported Media Type"
    },
    "500": {
      "description": "System Error",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "502": {
      "description": "Bad Gateway"
    },
    "503": {
      "description": "Service Unavailable"
    }
  },
  "definitions": {
    "exceptionDetailType": {
      "title": "Error Detail",
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "errorInstance": {
      "title": "Error Instance Details",
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "instanceLink": {
      "type": "object",
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      },
      "required": [
        "href",
        "rel",
        "method",
        "operationId"
      ]
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "warningsType": {
      "type": "array",
      "description": "Used in conjunction with the Success element to define a business error.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    },
    "warningType": {
      "type": "object",
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "minLength": 1,
          "maxLength": 8
        }
      }
    },
    "status": {
      "type": "object",
      "description": "Response Body.",
      "properties": {
        "warnings": {
          "$ref": "#/definitions/warningsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      }
    },
    "copyReportsType": {
      "type": "object",
      "description": "Copy report configuration code from one property to the other.",
      "properties": {
        "codes": {
          "description": "List of Code that is to be copied.",
          "$ref": "#/definitions/codeListType"
        },
        "targetHotelCodes": {
          "description": "Property to which configuration code type to be copied to.",
          "$ref": "#/definitions/codeListType"
        },
        "sourceHotelCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "codeListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "minLength": 0,
        "maxLength": 20
      }
    },
    "reportTextConfigurationsCopy": {
      "type": "object",
      "description": "Request object to copy the Report Text Configurations from Source Property to Destination Properties.",
      "properties": {
        "copyReports": {
          "description": "List of Report type to copy",
          "$ref": "#/definitions/copyReportsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "uniqueID_Type": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "reportsType": {
      "type": "object",
      "description": "Contains a collection of reports matching the requested criteria.",
      "properties": {
        "reports": {
          "description": "List of reports matching search criteria.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reportType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "reportType": {
      "type": "object",
      "description": "Contains details about the report application module from the DB.",
      "properties": {
        "moduleId": {
          "description": "Report module ID (table key).",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "reportName": {
          "description": "Report name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "moduleType": {
          "description": "Module type either RTF,GRP,SFT,URL,RNA or REP.",
          "$ref": "#/definitions/reportModuleTypeType"
        },
        "reportDescription": {
          "description": "Report description.",
          "$ref": "#/definitions/translationTextType1000"
        },
        "reportGroupId": {
          "description": "Report group module ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "reportGroup": {
          "description": "Report group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1000
        },
        "attachedReports": {
          "description": "List of Reports attached with the Shift Report group.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "reportGroupDescription": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1000
        },
        "translatableReportGroupDescription": {
          "description": "Translatable Name of the Report Group Description.",
          "$ref": "#/definitions/translationTextType1000"
        },
        "hotel": {
          "description": "The hotel code that the report is associated with.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "formToRun": {
          "description": "Form which is run to collect parameter information to generate the report.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "languageCode": {
          "description": "Report language code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hasParameters": {
          "description": "Flag which indicates whether the report requires parameters.",
          "type": "boolean"
        },
        "sample": {
          "description": "Flag which indicates whether the report is a sample provided in the application.",
          "type": "boolean"
        },
        "customized": {
          "description": "Flag which indicates whether the report is customized by the user.",
          "type": "boolean"
        },
        "customizedRtfAttachId": {
          "description": "Customized RTF file's Attach ID in the database.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "canRunSeperate": {
          "description": "Flag which indicates if the report can be run separately.",
          "type": "boolean"
        },
        "multiPropertyReport": {
          "description": "Flag which indicates if the report can be run for multiple properties.",
          "type": "boolean"
        },
        "procedureRequired": {
          "description": "Flag which indicates whether the report requires a procedure.",
          "type": "boolean"
        },
        "userDefinedReport": {
          "description": "Flag which indicates whether the report is user defined.",
          "type": "boolean"
        },
        "protectedReport": {
          "description": "Flag which indicates whether the report is protected.",
          "type": "boolean"
        },
        "systemReport": {
          "description": "Flag to indicate whether this is a system report.",
          "type": "boolean"
        },
        "destination": {
          "description": "Report default destination.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "defaultPrinterName": {
          "description": "Default printer name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "copies": {
          "description": "Number of copies configured for report.",
          "type": "integer"
        },
        "shiftReport": {
          "description": "Flag to indicate whether this is a shift report.",
          "type": "boolean"
        },
        "dataSourceType": {
          "description": "Set to ODT for BI Publisher reports.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "dataSource": {
          "description": "Data source for BI Publisher reports.",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "usedInApp": {
          "description": "A comma separated list of Opera V5 application indicators for which the report is enabled.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "opera9Certified": {
          "description": "A flag indicating that the report has been certified for use with Opera 9.",
          "type": "boolean"
        },
        "watermarkDetails": {
          "description": "The watermark details of the report being retrieved.",
          "$ref": "#/definitions/watermarkType"
        },
        "externalReportUrl": {
          "description": "Information regarding Report Url from external source.",
          "$ref": "#/definitions/externalUrlInfoType"
        },
        "rowsPerPage": {
          "description": "Rows for Key Packet report group.",
          "type": "integer"
        },
        "columnsPerPage": {
          "description": "Columns for Key Packet report group.",
          "type": "integer"
        },
        "excelOutput": {
          "description": "Flag to indicate whether the report can be exported to Excel.",
          "type": "boolean"
        }
      }
    },
    "reportModuleTypeType": {
      "type": "string",
      "description": "Procedure Report",
      "enum": [
        "Rtf",
        "Cus",
        "Rep",
        "Sft",
        "Grp",
        "Url",
        "Lbl",
        "Pcd",
        "Rna"
      ]
    },
    "watermarkType": {
      "type": "object",
      "description": "Details of the watermark to be used at the time of report generation.",
      "properties": {
        "mode": {
          "description": "Watermark for PDF files",
          "$ref": "#/definitions/watermarkModeType"
        },
        "text": {
          "description": "Watermark Text.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "font": {
          "description": "Watermark font name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "fontSize": {
          "description": "Watermark font name.",
          "type": "number"
        },
        "xPosition": {
          "description": "X position of watermark on page starting in lower left corner.",
          "type": "integer"
        },
        "yPosition": {
          "description": "Y position of watermark on page starting in lower left corner.",
          "type": "integer"
        },
        "angle": {
          "description": "Watermark angle in degrees.",
          "type": "integer"
        },
        "red": {
          "description": "Watermark color (red), value ranges from 0.0 to 1.0 ( Java API values ).",
          "type": "number"
        },
        "green": {
          "description": "Watermark color (green), value ranges from 0.0 to 1.0 ( Java API values ).",
          "type": "number"
        },
        "blue": {
          "description": "Watermark color (blue), value ranges from 0.0 to 1.0 ( Java API values ).",
          "type": "number"
        }
      }
    },
    "watermarkModeType": {
      "type": "string",
      "description": "Identifies the data type of the report parameter.",
      "enum": [
        "Simple",
        "Enhanced",
        "NoWatermark",
        "GroupSettings"
      ]
    },
    "translationTextType1000": {
      "type": "object",
      "description": "Contains Multiple translated texts and language codes.",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 1000.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1000
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "translationsTextType": {
      "type": "array",
      "description": "Language code for the translation.",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Used for Character Strings, length 0 to 2000.",
            "minLength": 0,
            "maxLength": 2000
          },
          "language": {
            "description": "Language identification.",
            "type": "string",
            "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          }
        },
        "description": "Language code for the translation."
      }
    },
    "uniqueIDListType": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "externalUrlInfoType": {
      "type": "object",
      "description": "Contains all the information of External Urls.",
      "properties": {
        "externalReportUrl": {
          "description": "Report Url from external source.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "isUrlDynamic": {
          "description": "Indicates if the Url is dynamic",
          "type": "boolean"
        }
      }
    },
    "reports": {
      "type": "object",
      "description": "This type contains a collection of report modules which match the requested criteria. The object also may include a standard SUCCESS element or a WARNINGS or ERRORS collection.",
      "properties": {
        "reports": {
          "description": "The collection of reports that matches the requested criteria.",
          "$ref": "#/definitions/reportsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reportParametersType": {
      "type": "array",
      "description": "List of parameters required to run report.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reportParameterType"
      }
    },
    "reportParameterType": {
      "type": "object",
      "description": "Defines an individual report parameter.",
      "properties": {
        "name": {
          "description": "Individual report parameter details.",
          "type": "string",
          "minLength": 0,
          "maxLength": 400
        },
        "label": {
          "description": "Display label for report parameter.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "dataType": {
          "description": "Report parameter data type used to determine kind of UI control to display.",
          "$ref": "#/definitions/paramDataType"
        },
        "value": {
          "description": "Initial report parameter value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "calculatedDateValue": {
          "description": "Date value from offset.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "dateFormatMask": {
          "description": "Format mask for date report parameters.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "orderBy": {
          "description": "Report parameter display order.",
          "type": "integer"
        },
        "dateOffset": {
          "description": "Number of days to offset from current business date for date report parameter.",
          "type": "integer"
        },
        "formatMask": {
          "$ref": "#/definitions/paramFormatMaskType"
        },
        "buildStringForDateOffset": {
          "type": "string",
          "minLength": 0,
          "maxLength": 32000
        },
        "lovParam": {
          "$ref": "#/definitions/lovParamDetailsType"
        }
      }
    },
    "paramDataType": {
      "type": "string",
      "description": "Identifies the data type of the report parameter.",
      "enum": [
        "DateAsChar",
        "Date",
        "Number",
        "CheckBox",
        "DateTime",
        "Char",
        "Money",
        "Integer"
      ]
    },
    "lovParamDetailsType": {
      "type": "object",
      "description": "Identifies a destination record for the report.",
      "properties": {
        "lovSql": {
          "description": "Query statement for LOV based report parameters.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "lOVs": {
          "description": "Report parameter LOV details.",
          "$ref": "#/definitions/paramLOVsType"
        },
        "lovValidate": {
          "description": "Flag to indicate that input should be validated against LOV.",
          "type": "boolean"
        },
        "lovMultiSelect": {
          "description": "This attribute is used to indicate if an LOV defined is multi-select. This is particularly useful for simple reports.",
          "type": "boolean"
        }
      }
    },
    "paramLOVsType": {
      "type": "array",
      "description": "List of values for report parameter.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/paramLOVType"
      }
    },
    "paramLOVType": {
      "type": "object",
      "description": "Represents an individual LOV item for a report parameter.",
      "properties": {
        "code": {
          "description": "Report parameter LOV code.",
          "type": "string"
        },
        "description": {
          "description": "Report parameter LOV label.",
          "type": "string"
        },
        "string": {
          "description": "Report parameter LOV string (third attribute returned for some queries).",
          "type": "string"
        }
      }
    },
    "paramFormatMaskType": {
      "type": "string",
      "description": "Specifies the format mask for the parameter.",
      "enum": [
        "None",
        "Upper",
        "Lower"
      ]
    },
    "configGenericReportsType": {
      "type": "object",
      "description": "It contains collection of reports.",
      "properties": {
        "report": {
          "description": "A generic report.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/configGenericReportType"
          }
        },
        "hotelId": {
          "description": "Hotel code in which reports to be set up belong to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "chainCode": {
          "description": "Chain code in which reports to be set up belong to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "configGenericReportType": {
      "type": "object",
      "description": "A mandatory or non-mandatory procedure or report.",
      "properties": {
        "name": {
          "description": "Display Name of procedure or report.",
          "$ref": "#/definitions/translationTextType1000"
        },
        "reportName": {
          "description": "Name of the .REP or .RTF file. .REP or .RTF extension is not needed.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "userDefinedReport": {
          "description": "Flag which indicates whether the report is user defined.",
          "type": "boolean"
        },
        "moduleType": {
          "description": "Module type either RTF,GRP,SFT,URL,RNA or REP.",
          "$ref": "#/definitions/reportModuleTypeType"
        },
        "usedInApp": {
          "description": "Report can be run in these applications - Global level, property level or in the Sales & Event Management.",
          "type": "array",
          "maxItems": 3,
          "items": {
            "$ref": "#/definitions/reportRunnableApps"
          }
        },
        "dataSourceType": {
          "description": "Set to ODT for BI Publisher reports.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "dataSource": {
          "description": "Data source for BI Publisher reports.",
          "type": "string",
          "minLength": 0,
          "maxLength": 255
        },
        "mandatory": {
          "description": "Flag indicating whether procedure or report is mandatory or not.",
          "type": "boolean"
        },
        "formToRun": {
          "description": "Form which is run to collect parameter information to generate the report.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "reportLanguage": {
          "description": "The language in which the report is configured. This language code will be used when running a report for guests like registration cards, folio etc when GUEST LANGUAGE functionality is turned on.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "active": {
          "description": "Flag indicating whether procedure or report is active to run.",
          "type": "boolean"
        },
        "protected": {
          "description": "Flag indicating whether report is protected or not.",
          "type": "boolean"
        },
        "sequence": {
          "description": "Display sequence of procedure or report.",
          "type": "integer"
        },
        "reportGroup": {
          "description": "Report group to which the report is being added.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "multiPropertyReport": {
          "description": "Flag which indicates if the report can be run for multiple properties.",
          "type": "boolean"
        },
        "excelOutput": {
          "description": "Flag to indicate whether the report can be exported to Excel.",
          "type": "boolean"
        },
        "attachedReports": {
          "description": "List of Reports attached with the Shift Report group.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "watermarkDetails": {
          "description": "The watermark details of the report being added.",
          "$ref": "#/definitions/watermarkType"
        },
        "parameters": {
          "description": "A report parameter.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/configReportParameterType"
          }
        },
        "rowsPerPage": {
          "description": "Rows to be entered for Key Packet report group.",
          "type": "integer"
        },
        "columnsPerPage": {
          "description": "Columns to be entered for Key Packet report group.",
          "type": "integer"
        },
        "moduleId": {
          "description": "Module id of the report.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "externalReportUrl": {
          "description": "Information regarding Report Url from external source.",
          "$ref": "#/definitions/externalUrlInfoType"
        },
        "printReport": {
          "description": "Details of sending report to destination.",
          "$ref": "#/definitions/printReportType"
        }
      }
    },
    "reportRunnableApps": {
      "type": "string",
      "description": "Simple type for report module type.",
      "enum": [
        "Global",
        "Property",
        "SalesAndCatering"
      ]
    },
    "configReportParameterType": {
      "type": "object",
      "description": "A report parameter.",
      "properties": {
        "name": {
          "description": "Report parameter name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 400
        },
        "label": {
          "description": "Display label for report parameter.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "dataType": {
          "description": "Report parameter data type.",
          "$ref": "#/definitions/paramDataType"
        },
        "value": {
          "description": "Default report parameter value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "dateOffset": {
          "description": "Date Ofset could be in the format +x DAYS.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "lovSql": {
          "description": "Query statement for LOV based report parameters.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "sequence": {
          "description": "Display sequence of report parameter.",
          "type": "integer"
        }
      }
    },
    "printReportType": {
      "type": "object",
      "description": "Details to print or send report to printer, email or fax.",
      "properties": {
        "destination": {
          "description": "Destination to which the report is directed to by default.",
          "$ref": "#/definitions/printDestinationType"
        },
        "copies": {
          "description": "Number of copies to be printed or sent.",
          "type": "integer"
        },
        "sent": {
          "description": "Indicates whether report has already been sent or not.",
          "type": "boolean"
        }
      }
    },
    "printDestinationType": {
      "type": "string",
      "description": "Allowed values for Print Destination.",
      "enum": [
        "Printer",
        "Email",
        "Fax"
      ]
    },
    "reportParameters": {
      "type": "object",
      "description": "The Fetch Report Parameters result object contains a collection of report parameters which allow/require user input prior to running the report.",
      "properties": {
        "reportParameters": {
          "description": "This element holds the collection of report parameters for user input.",
          "$ref": "#/definitions/reportParametersType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "genericReports": {
      "type": "object",
      "description": "This request provides End of Day reports to be created.",
      "properties": {
        "reports": {
          "description": "It contains collection of reports setup to be saved.",
          "$ref": "#/definitions/configGenericReportsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    }
  },
  "tags": [
    {
      "name": "Report",
      "description": "The Report Service provides information about available report modules which may be generated, along with their parameters."
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}
{
  "swagger": "2.0",
  "info": {
    "title": "OPERA Cloud Accounts Receivables API",
    "description": "APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>",
    "version": "24.4",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality_apis_ww_grp@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "schemes": [
    "https"
  ],
  "basePath": "/ars/v1",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/accountReminders": {
      "get": {
        "summary": "Get account receivable's reminder statements",
        "description": "Use this API to get AR account holders' reminder letter that includes detail of payment due, their current account balance, or for other purposes. <p><strong>OperationId:</strong>getReminders</p>",
        "operationId": "getReminders",
        "parameters": [
          {
            "name": "accounts",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Property where the AR Account exists. This is required.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "profiles",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "accountNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Account Number for the AR Account.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "accountName",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Account Name for the AR Account.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response to the request to fetch pending Reminders for Accounts.",
            "schema": {
              "$ref": "#/definitions/reminders"
            }
          },
          "204": {
            "description": "Reminders not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      },
      "post": {
        "summary": "Generate reminders",
        "description": "Use this API to generate a reminder statement which includes payment due,  current account balance, and etc. of account receivable account holder. <p><strong>OperationId:</strong>postReminders</p>",
        "operationId": "postReminders",
        "parameters": [
          {
            "name": "reminders",
            "in": "body",
            "required": true,
            "description": "Request to update the reminder information on an Account. After the letter has been generated and sent, the account and the invoices will be updated with the Reminder Cycle information. This is done so that the next cycle of Reminder Letters c can be generated correctly.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reminders"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/accounts": {
      "get": {
        "summary": "Get given profile's account receivable detail",
        "description": "Use this API to search for AR Accounts for a given OPERA Profile id. API returns contain a list of AR Accounts and their AR information. <p><strong>OperationId:</strong>getAccounts</p> <p>The maximum allowable limit for this API is <strong>20</strong>.</p>",
        "operationId": "getAccounts",
        "parameters": [
          {
            "name": "balance",
            "in": "query",
            "required": false,
            "description": "Search By Balance. Search will be done for 'All', 'Open Balance' or 'Zero Balance' Accounts.",
            "type": "string",
            "uniqueItems": true,
            "enum": [
              "All",
              "Open",
              "Zero"
            ]
          },
          {
            "name": "batchStatement",
            "in": "query",
            "required": false,
            "description": "Search criteria for batch processing",
            "type": "boolean"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Property where the Accounts exist.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "profileId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "profileIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "profileType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "Search by Account Type.",
            "type": "string"
          },
          {
            "name": "accountNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Account Number .",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "accountName",
            "in": "query",
            "required": false,
            "description": "Wild Card Search by Account Name. Search will be done for any Accounts whose name starts with this value.",
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "accountIdContext",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "accountType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "includeStatementHistoryIndicator",
            "in": "query",
            "required": false,
            "description": "Return statement history indicator in result. This flag included for performance reason to populate history flag only for Statements Mode.",
            "type": "boolean"
          },
          {
            "name": "includeReminderHistoryIndicator",
            "in": "query",
            "required": false,
            "description": "Return reminder history indicator in result. This flag included for performance reason to populate history flag only for Statements Mode.",
            "type": "boolean"
          },
          {
            "name": "superSearch",
            "in": "query",
            "required": false,
            "description": "Free form text field for searching all reservation fields",
            "type": "string"
          },
          {
            "name": "searchHotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "attributeName",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "orderType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Asc",
                "Desc"
              ]
            },
            "required": false
          },
          {
            "name": "minimumBalance",
            "in": "query",
            "required": false,
            "description": "Search AR Accounts with a minimum balance filter.",
            "type": "number"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for the request to search for AR Accounts. Based on the criteria, the response can contain a list of AR Accounts and their AR information.",
            "schema": {
              "$ref": "#/definitions/accountsInfo"
            }
          },
          "204": {
            "description": "Accounts not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/accounts/{accountId}/remindersHistory": {
      "get": {
        "summary": "Get history of reminder letters for a given account receivable",
        "description": "Use this API to get history of reminder letters prepared for AR account. <p><strong>OperationId:</strong>getRemindersHistory</p>",
        "operationId": "getRemindersHistory",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the account"
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Property where the AR Account exists. This is required.",
            "type": "string"
          },
          {
            "name": "profileId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "accountIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "accountType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "accountNo",
            "in": "query",
            "required": false,
            "description": "Account Number for the AR Account.",
            "type": "string"
          },
          {
            "name": "accountName",
            "in": "query",
            "required": false,
            "description": "Account Name for the AR Account.",
            "type": "string"
          },
          {
            "name": "dateSent",
            "in": "query",
            "required": false,
            "description": "History Date filter.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "reportFileNameWildCard",
            "in": "query",
            "required": false,
            "description": "Report Name wild card.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Reminders History.",
            "schema": {
              "$ref": "#/definitions/remindersHistory"
            }
          },
          "204": {
            "description": "RemindersHistory not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/accounts/{accountId}/statements": {
      "get": {
        "summary": "Get given profile's account receivable statements",
        "description": "Use this API to prepare statement for an AR account holders. It is typically prepared for billing purposes.<br><p><strong><mark>This API is deprecated. Please use getARStatements instead</mark></strong></p> <p><strong>OperationId:</strong>getStatements</p>",
        "operationId": "getStatements",
        "deprecated": true,
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the account"
          },
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Property where the AR Account exists. This is required.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "profileId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "profileIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "profileType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "accountNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Account Number for the AR Account.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "accountName",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Account Name for the AR Account.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "canBeModified",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Flag to indicate if postings or adjustments can be made to the invoice.",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "closeDate",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Close date of the invoice.",
            "items": {
              "type": "string",
              "format": "date"
            },
            "required": false
          },
          {
            "name": "fiscalBillNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "The Fiscal Bill number of this posting",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "folioDate",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Date of Folio Generation.",
            "items": {
              "type": "string",
              "format": "date"
            },
            "required": false
          },
          {
            "name": "folioNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Folio Number.",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "folioStatus",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "The Folio Status Example: DEPOSIT folio, VOID folio or the default OK folio status.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Deposit",
                "Void",
                "Ok",
                "Zero",
                "Compress",
                "Converted",
                "Internal"
              ]
            },
            "required": false
          },
          {
            "name": "folioTypeName",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "The name of the Folio Type used for the Folio Number sequence.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "internalFolioWindowID",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "invoiceNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "invoiceType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Normal",
                "Credit",
                "OldBalance",
                "PasserBy"
              ]
            },
            "required": false
          },
          {
            "name": "postingDate",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Posting date of the invoice.",
            "items": {
              "type": "string",
              "format": "date"
            },
            "required": false
          },
          {
            "name": "revenueDate",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Revenue date ID of the invoice.",
            "items": {
              "type": "string",
              "format": "date"
            },
            "required": false
          },
          {
            "name": "statementNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Statementno of the invoice.",
            "items": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "status",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Status of the invoice.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "transferDate",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Transfer date of the invoice.",
            "items": {
              "type": "string",
              "format": "date"
            },
            "required": false
          },
          {
            "name": "invoiceTransactionCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Transaction code of the invoice.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "transactionDate",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Transaction Date of the invoice.",
            "items": {
              "type": "string",
              "format": "date"
            },
            "required": false
          },
          {
            "name": "transactionNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique Transaction Identifier of the Invoice.",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "invoiceHotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Property where the AR Account exists. This is required.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "reservationId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "reservationIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "reservationType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "guestProfileId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "guestProfileIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "guestProfileType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "age",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "The Aging age of the invoice",
            "items": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "guestName",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Name of the Guest who consumed these transactions.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "originalAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "originalAmountCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "currencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "paymentsAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "paymentsCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "balanceAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "balanceCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "reference",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "User-defined posting reference.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "remark",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "User-defined posting remark.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "adjusted",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "parentInvoiceNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "compressed",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "compressedDate",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "format": "date"
            },
            "required": false
          },
          {
            "name": "transferredOut",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "transferredIn",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "marketDescription",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "marketHotelId",
            "in": "query",
            "required": false,
            "description": "Property where the AR Account exists. This is required.",
            "type": "string"
          },
          {
            "name": "marketCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "marketGroup",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "roomClassDescription",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "roomClassHotelId",
            "in": "query",
            "required": false,
            "description": "Property where the AR Account exists. This is required.",
            "type": "string"
          },
          {
            "name": "roomClassCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sourceDescription",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sourceHotelId",
            "in": "query",
            "required": false,
            "description": "Property where the AR Account exists. This is required.",
            "type": "string"
          },
          {
            "name": "sourceCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sourceGroup",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cashierId",
            "in": "query",
            "required": false,
            "description": "Cashier Id of the Cashier.",
            "type": "number"
          },
          {
            "name": "cashierName",
            "in": "query",
            "required": false,
            "description": "Cashier Name.",
            "type": "string"
          },
          {
            "name": "transactionHotelId",
            "in": "query",
            "required": false,
            "description": "Property where the AR Account exists. This is required.",
            "type": "string"
          },
          {
            "name": "printTrxReceipt",
            "in": "query",
            "required": false,
            "description": "Print receipt flag that tells whether the transaction receipt is to be printed or not. This is based on the transaction code.",
            "type": "boolean"
          },
          {
            "name": "accountInvoiceTransactionCode",
            "in": "query",
            "required": false,
            "description": "Unique identifier for the Transaction code.",
            "type": "string"
          },
          {
            "name": "transactionDescription",
            "in": "query",
            "required": false,
            "description": "Transaction codes info.",
            "type": "string"
          },
          {
            "name": "transactionGroup",
            "in": "query",
            "required": false,
            "description": "Category of the transaction code.",
            "type": "string"
          },
          {
            "name": "transactionSubGroup",
            "in": "query",
            "required": false,
            "description": "Sub category of the transaction code.",
            "type": "string"
          },
          {
            "name": "universalProductCode",
            "in": "query",
            "required": false,
            "description": "Unique Universal product code of the transaction code.",
            "type": "string"
          },
          {
            "name": "routingInstructionsId",
            "in": "query",
            "required": false,
            "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
            "type": "number"
          },
          {
            "name": "articleCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique code of the article.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "articleHotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Property where the AR Account exists. This is required.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "inactive",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Indicates whether the article is inactive or not.",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "orderSequence",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Display Order sequence.",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "articleDescription",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Description of the article.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "transactionCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Transaction code to which the article belongs.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "articleAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "articleCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "availableForPostIt",
            "in": "query",
            "required": false,
            "description": "Indicates whether the article is available for post it.",
            "type": "boolean"
          },
          {
            "name": "color",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Color configuration type. This color configuration provides a visual category of entities.",
            "uniqueItems": true,
            "enum": [
              "Red",
              "DarkRed",
              "Green",
              "DarkGreen",
              "LightGreen",
              "Orange",
              "White",
              "Yellow",
              "DarkYellow",
              "Purple",
              "Brown",
              "Gray",
              "Aqua",
              "Chocolate",
              "Blue",
              "LightBlue",
              "DarkBlue",
              "Cyan",
              "DarkCyan",
              "Magenta",
              "DarkMagenta",
              "Black"
            ]
          },
          {
            "name": "articleUniversalProductCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique Universal product code of the article.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "attachCreditCardToProfile",
            "in": "query",
            "required": false,
            "description": "Attach the credit card to profile.",
            "type": "boolean"
          },
          {
            "name": "cardHolderName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardNumberLast4Digits",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardNumberMasked",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardOrToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Simple type for indicating if credit card number is tokenized.",
            "uniqueItems": true,
            "enum": [
              "CardNumber",
              "Token"
            ]
          },
          {
            "name": "cardType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
            "uniqueItems": true,
            "enum": [
              "Ab",
              "Am",
              "Ax",
              "Cb",
              "Dc",
              "Ds",
              "Dt",
              "Ec",
              "Er",
              "Jc",
              "Jl",
              "Mc",
              "Nb",
              "So",
              "St",
              "Sw",
              "Va",
              "Xy",
              "Zz",
              "Cp",
              "Cu"
            ]
          },
          {
            "name": "expirationDate",
            "in": "query",
            "required": false,
            "description": "Expiration date of the credit card",
            "type": "string",
            "format": "date"
          },
          {
            "name": "expirationDateExpired",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "expirationDateMasked",
            "in": "query",
            "required": false,
            "description": "Masked Expiration date of the credit card",
            "type": "string"
          },
          {
            "name": "processing",
            "in": "query",
            "required": false,
            "type": "string",
            "uniqueItems": true,
            "enum": [
              "Eft",
              "Manual"
            ]
          },
          {
            "name": "swiped",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "userDefinedCardType",
            "in": "query",
            "required": false,
            "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
            "type": "string"
          },
          {
            "name": "invoicePaymentCardId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "invoicePaymentCardIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "invoicePaymentCardIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "currentAuthorizedAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "currentAuthorizedAmountCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "approvalAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "approvalAmountCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "Defines the type of Linked profiles for a block.",
            "type": "string"
          },
          {
            "name": "addresseeProfileId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "addresseeProfileIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "addresseeProfileType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "description": "Name for the profile attached to the block.",
            "type": "string"
          },
          {
            "name": "city",
            "in": "query",
            "required": false,
            "description": "City for the profile attached to the block.",
            "type": "string"
          },
          {
            "name": "phone",
            "in": "query",
            "required": false,
            "description": "Phone for the profile attached to the block.",
            "type": "string"
          },
          {
            "name": "allowPartialTransferYn",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Flag to check Partail Transfer Allowed.",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "printed",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Flag to check Invoice Statement is Printed.",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "printedDate",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Invoice Statement Printed Date.",
            "items": {
              "type": "string",
              "format": "date"
            },
            "required": false
          },
          {
            "name": "storedFolioId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "storedFolioIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "storedFolioType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "storedFolioName",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Name of the Stored Folio.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "storedDebitFolioId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "storedDebitFolioIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "storedDebitFolioType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "storedDebitFolioName",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Name of the Stored Debit Folio.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "balanceForwardDate",
            "in": "query",
            "required": false,
            "description": "The date specified in this field determines the balance forward date and balance forward total that is printed on the statement. (A balance forward shows the net amount for all invoices and payments (debits and credits) prior to the balance forward date as a single total, rather than itemizing them individually on the statement.)",
            "type": "string",
            "format": "date"
          },
          {
            "name": "inclFolios",
            "in": "query",
            "default": "false",
            "required": false,
            "description": "Flag to indicate if the associated Folios for the Invoices are to be included along with the the Statement.",
            "type": "boolean"
          },
          {
            "name": "inclPrinted",
            "in": "query",
            "default": "false",
            "required": false,
            "description": "Flag to indicate if Previousely Printed Invoices are to be included in the Statement. This is based on the Functionality for AR PRINTED INVOICES.",
            "type": "boolean"
          },
          {
            "name": "inclZero",
            "in": "query",
            "default": "false",
            "required": false,
            "description": "Flag to indicate if Zero Balances Invoices are to be included in the Statement.",
            "type": "boolean"
          },
          {
            "name": "filterEndDate",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "filterStartDate",
            "in": "query",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "statementText",
            "in": "query",
            "required": false,
            "description": "Text which will be printed on the Invoice.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Details of the Statement to generate.",
            "schema": {
              "$ref": "#/definitions/statements"
            }
          },
          "204": {
            "description": "Statements not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/arTransactions": {
      "get": {
        "summary": "Get AR transactions.",
        "description": "Use this API to get list of transaction data for a given account receivable account number and list of hotels <p><strong>OperationId:</strong>getARTransactions</p> <p>This API allows a time span of <strong>30</strong> days.</p>",
        "operationId": "getARTransactions",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Property where the Accounts exist.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": true
          },
          {
            "name": "accounts",
            "in": "query",
            "required": false,
            "description": "Account number of this transaction.",
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "fromAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "fromCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "toAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "toCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "guestName",
            "in": "query",
            "required": false,
            "description": "Display Name for the guest.",
            "type": "string"
          },
          {
            "name": "invoices",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "invoice Number .",
            "items": {
              "type": "number",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "folios",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "folio Number .",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "fiscalBillNo",
            "in": "query",
            "required": false,
            "description": "Fiscal bill number of this transaction.",
            "type": "string"
          },
          {
            "name": "accountName",
            "in": "query",
            "required": false,
            "description": "Account number of this transaction.",
            "type": "string"
          },
          {
            "name": "addresseName",
            "in": "query",
            "required": false,
            "description": "Addressee Name filter. Works with the Addressee Functionality.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response after fetching AR transaction details.",
            "schema": {
              "$ref": "#/definitions/arTransactions"
            }
          },
          "204": {
            "description": "ARTransactions not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/hotels/{hotelId}/accounts": {
      "post": {
        "summary": "Create an account receivable account",
        "description": "Use this API to create a new account receivable type account for given OPERA profile id. Prior creating account, need to use getProfile to find OPERA profile's id.  <p><strong>OperationId:</strong>postAccount</p>",
        "operationId": "postAccount",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "accountCriteria",
            "in": "body",
            "required": true,
            "description": "Request to create a new AR Account",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/accountCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/hotels/{hotelId}/accounts/invoicesOnHold": {
      "get": {
        "summary": "Get list of hold invoices for account receivable",
        "description": "Use this API to get list of account receivable invoices which are put on hold. <p><strong>OperationId:</strong>getInvoicesOnHold</p> <p>This API allows a time span of <strong>30</strong> days.</p>",
        "operationId": "getInvoicesOnHold",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "profileId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "profileIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "profileType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "accountIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "accountType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "accountNo",
            "in": "query",
            "required": false,
            "description": "Account Number for the AR Account.",
            "type": "string"
          },
          {
            "name": "accountName",
            "in": "query",
            "required": false,
            "description": "Account Name for the AR Account.",
            "type": "string"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "folios",
            "in": "query",
            "required": false,
            "description": "Folio Number for the invoice.",
            "type": "string"
          },
          {
            "name": "invoices",
            "in": "query",
            "required": false,
            "description": "Invoice number for the invoice.",
            "type": "number"
          },
          {
            "name": "fiscalBillNo",
            "in": "query",
            "required": false,
            "description": "Fiscal Bill number for the invoice.",
            "type": "string"
          },
          {
            "name": "guestName",
            "in": "query",
            "required": false,
            "description": "Guest Name set for the invoice.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response after fetching on-hold invoices.",
            "schema": {
              "$ref": "#/definitions/invoicesOnHold"
            }
          },
          "204": {
            "description": "InvoicesOnHold not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/hotels/{hotelId}/accounts/{accountId}": {
      "get": {
        "summary": "Get account",
        "description": "Use this API to search for account receivable type account's  detail for given account id. <p><strong>OperationId:</strong>getAccount</p>",
        "operationId": "getAccount",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the account"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "accountNo",
            "in": "query",
            "required": false,
            "description": "Account Number for the Account.",
            "type": "string"
          },
          {
            "name": "profileId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "profileIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "profileType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Instructions to fetch AR Account details.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Account",
                "Aging",
                "FixedCharges",
                "Invoices",
                "Payments",
                "Summary",
                "Comments",
                "Traces",
                "Reminder",
                "Statement",
                "Indicators",
                "YearView"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for the request to fetch details for an AR Account.",
            "schema": {
              "$ref": "#/definitions/account"
            }
          },
          "204": {
            "description": "Account not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      },
      "put": {
        "summary": "Update a account receivable account",
        "description": "Use this API to update existing account using account id and further detail. Use get account to get account detail prior updating. <p><strong>OperationId:</strong>putAccount</p>",
        "operationId": "putAccount",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the account"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "account",
            "in": "body",
            "required": true,
            "description": "Request to change and existing AR Account. The Account No, Credit Limit, Address, Email, Telephone information, Permanent Flag, Primary Account Flag, Contact Name are the details that can be changed on an existing account.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/account"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      },
      "delete": {
        "summary": "Delete Account ",
        "description": "Use this API to delete account detail for given unique account id. Use get accounts to find account id. <p><strong>OperationId:</strong>deleteAccount</p>",
        "operationId": "deleteAccount",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the account"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/hotels/{hotelId}/accounts/{accountId}/applyCreditToInvoices": {
      "post": {
        "summary": "Add credits to AR invoices",
        "description": "Use this API to add credits to account receivable invoices. <p><strong>OperationId:</strong>postCreditToInvoices</p>",
        "operationId": "postCreditToInvoices",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the account"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "creditToInvoices",
            "in": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/creditToInvoices"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/hotels/{hotelId}/accounts/{accountId}/arCreditCard/transfer": {
      "post": {
        "summary": "Move credit card payment to account receivable",
        "description": "Use this API to transfer credit card payment transactions to Accounts Receivable. <p><strong>OperationId:</strong>transferARCreditCardPayments</p>",
        "operationId": "transferARCreditCardPayments",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the account"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "arCreditCardPaymentsToTransfer",
            "in": "body",
            "required": true,
            "description": "Request to transfer AR Credit Card payments.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/arCreditCardPaymentsToTransfer"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/hotels/{hotelId}/accounts/{accountId}/charges": {
      "post": {
        "summary": "Add charges to account receivable",
        "description": "Use this API to post charges to account receivable account. <p><strong>OperationId:</strong>postChargesToAR</p>",
        "operationId": "postChargesToAR",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the account"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "arChargesPostingCriteria",
            "in": "body",
            "required": true,
            "description": "Request to post charges to an existing invoice, when the functionality is available. If the invoice should not be modified or if the folio should not be modified,based on other functionalities, then the charges cannot be posted to the invoice.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/arChargesPostingCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/hotels/{hotelId}/accounts/{accountId}/comments": {
      "post": {
        "summary": "Create Account Comment",
        "description": "Use this API to add a note for a given account id. Use get accounts to find account id. <p><strong>OperationId:</strong>postAccountComment</p>",
        "operationId": "postAccountComment",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the account"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "accountComment",
            "in": "body",
            "required": true,
            "description": "Request to create a Comment for an Account.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/accountComment"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      },
      "put": {
        "summary": "Change Account Comment",
        "description": "Use this API to update existing account note. Use get account to find noteid <p><strong>OperationId:</strong>putAccountComment</p>",
        "operationId": "putAccountComment",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the account"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "accountComment",
            "in": "body",
            "required": true,
            "description": "Request to Change the Comment on an Account.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/accountComment"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      },
      "delete": {
        "summary": "Delete Account Comment",
        "description": "Use this API to delete notes from a given account id. Use get account with an instruction to get note id. <p><strong>OperationId:</strong>deleteAccountComment</p>",
        "operationId": "deleteAccountComment",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the account"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "value",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Property Value"
          },
          {
            "name": "hotel",
            "in": "query",
            "required": false,
            "description": "If specified comment belongs to the Hotel, otherwise it is a global comment.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/hotels/{hotelId}/accounts/{accountId}/compressInvoices": {
      "put": {
        "summary": "Combines Account receivable invoices",
        "description": "Use this API to combine two or more invoices into one invoice <p><strong>OperationId:</strong>compressARInvoices</p>",
        "operationId": "compressARInvoices",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the account"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "arCompressInvoices",
            "in": "body",
            "required": true,
            "description": "Request to compress two or more invoices for an Account",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/arCompressInvoices"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response for the request to compress two or more invoices.",
            "schema": {
              "$ref": "#/definitions/compressedARInvoices"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/hotels/{hotelId}/accounts/{accountId}/copyAccount": {
      "post": {
        "summary": "Copy account receivable account ",
        "description": "Use this API to create account receivable to multiple hotels by copying from source hotel. <p><strong>OperationId:</strong>copyARAccount</p>",
        "operationId": "copyARAccount",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the account"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "arAccountCopy",
            "in": "body",
            "required": true,
            "description": "Request to copy AR Account",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/arAccountCopy"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/hotels/{hotelId}/accounts/{accountId}/fixedCharges": {
      "post": {
        "summary": "Create fixed charges ",
        "description": "Use this API to create fixed charges for a given account id of account receivable. Use get accounts to find an account id. <p><strong>OperationId:</strong>postAccountFixedCharge</p>",
        "operationId": "postAccountFixedCharge",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the account"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "accountFixedCharge",
            "in": "body",
            "required": true,
            "description": "Request to create a Fixed Charge for an Account.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/accountFixedCharge"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/hotels/{hotelId}/accounts/{accountId}/fixedCharges/{fixedChargeId}": {
      "put": {
        "summary": "Update fixed charge detail ",
        "description": "Use this API to update existing fixed charges for a given account receivable. <p><strong>OperationId:</strong>putAccountFixedCharge</p>",
        "operationId": "putAccountFixedCharge",
        "parameters": [
          {
            "name": "fixedChargeId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "ID of the fixed charge"
          },
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the account"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "accountFixedCharge",
            "in": "body",
            "required": true,
            "description": "Request to Change the Fixed Charge on an Account.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/accountFixedCharge"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      },
      "delete": {
        "summary": "Delete fixed charges ",
        "description": "Use this API to delete fixed charges for a given account receivable id. Use getaccounts to find an account id. <p><strong>OperationId:</strong>deleteAccountFixedCharge</p>",
        "operationId": "deleteAccountFixedCharge",
        "parameters": [
          {
            "name": "fixedChargeId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "ID of the fixed charge"
          },
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the account"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/hotels/{hotelId}/accounts/{accountId}/folioPrinters": {
      "get": {
        "summary": "Get list of account receivable folio printers",
        "description": "Use this API to find account receivable folio printers <p><strong>OperationId:</strong>getARFolioPrinters</p>",
        "operationId": "getARFolioPrinters",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the account"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "balance",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "overrideCreditHoldCheck",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "cashierId",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s)."
          },
          {
            "name": "profileId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "accountNo",
            "in": "query",
            "required": false,
            "description": "Account Number for the AR Account.",
            "type": "string"
          },
          {
            "name": "accountName",
            "in": "query",
            "required": false,
            "description": "Account Name for the AR Account.",
            "type": "string"
          },
          {
            "name": "guestProfileId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "guestProfileIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "guestProfileType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "folioWindowNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "chargeCashierId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s).",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "chargeTransactionCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Transaction Code to post.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "articleCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Article ID.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "currencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "postingQuantity",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Quantity to post to the folio.",
            "items": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "postingReference",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "User-defined posting reference.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "postingRemark",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "User-defined posting remark.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "checkNumber",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Indicates the Cheque number.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "arrangementCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Corrected arrangement code from the package associated to this transaction.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "applyRoutingInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Apply room routing when making this posting.",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "usePackageAllowance",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Use the applicable package allowance when making this posting.",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "autoPosting",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "True indicates the Transaction Code is allowed to be posted automatically.",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "financialTransactionId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "financialTransactionIdContext",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "financialTransactionType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID element.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "reference",
            "in": "query",
            "required": false,
            "description": "User-defined invoice reference.",
            "type": "string"
          },
          {
            "name": "remark",
            "in": "query",
            "required": false,
            "description": "User-defined invoice remark.",
            "type": "string"
          },
          {
            "name": "folioType",
            "in": "query",
            "required": false,
            "description": "Folio Type to be assigned to generated folio. This is a country requirement.",
            "type": "string"
          },
          {
            "name": "generateFiscalFolio",
            "in": "query",
            "required": false,
            "description": "Fiscal folio flag to call fiscal folio web service after folio generation.",
            "type": "boolean"
          },
          {
            "name": "queueName",
            "in": "query",
            "required": false,
            "description": "Folio Queue name.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response to the request to fetch the Folio Printers applicable for a Folio, based on the",
            "schema": {
              "$ref": "#/definitions/arFolioPrinters"
            }
          },
          "204": {
            "description": "ARFolioPrinters not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/hotels/{hotelId}/accounts/{accountId}/invoices": {
      "post": {
        "summary": "Create account receivable invoices",
        "description": "Use this API to create a new invoice for an AR account. <p><strong>OperationId:</strong>postInvoice</p>",
        "operationId": "postInvoice",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the account"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "arInvoice",
            "in": "body",
            "required": true,
            "description": "Request to create a new Invoice for an Account.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/arInvoice"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response to the request to create an invoice for an Account.",
            "schema": {
              "$ref": "#/definitions/arInvoiceDetails"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/hotels/{hotelId}/accounts/{accountId}/statements": {
      "post": {
        "summary": "Generate a statement for a given account receivable",
        "description": "Use this API to generate statement for a given account receivable id. It includes the account balance as of the current business date, an aging summary that shows how long outstanding balances have been \"on the books\" for each aging level set up for given property. <p><strong>OperationId:</strong>postStatements</p>",
        "operationId": "postStatements",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the account"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "statementsToBeGenerated",
            "in": "body",
            "required": true,
            "description": "Operation to generate AR Statements. This will validate and check if there exists any invoices to be included in the Statement based on the criteria used. If Statement Numbering is used, this will return a statement number to use in report as well as report sequence id to identify statement's invoices.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/statementsToBeGenerated"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/hotels/{hotelId}/accounts/{accountId}/traces": {
      "post": {
        "summary": "Add a trace to an account receivable account",
        "description": "Use this API to add a trace for a given account id. Use getaccounts to find account id. <p><strong>OperationId:</strong>postAccountTrace</p>",
        "operationId": "postAccountTrace",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the account"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "accountTrace",
            "in": "body",
            "required": true,
            "description": "Request to create a Trace for an Account.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/accountTrace"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      },
      "put": {
        "summary": "This API facilitates modification of account traces.",
        "description": " <p><strong>OperationId:</strong>putAccountTrace</p>",
        "operationId": "putAccountTrace",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the account"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "accountTrace",
            "in": "body",
            "required": true,
            "description": "Request to Change the Trace on an Account.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/accountTrace"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      },
      "delete": {
        "summary": "This API facilitates deletion of account traces.",
        "description": " <p><strong>OperationId:</strong>deleteAccountTrace</p>",
        "operationId": "deleteAccountTrace",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the account"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "traceID",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "traceOn",
            "in": "query",
            "required": false,
            "description": "Date of the trace.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "traceText",
            "in": "query",
            "required": false,
            "description": "The information this trace contains.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/hotels/{hotelId}/accounts/{accountId}/transactions/{transactionId}/invoicePaymentDetails": {
      "get": {
        "summary": "Get account receivable invoice and payment details",
        "description": "Use this API to get AR account's invoice and payment details including credit, debit, amount due date, etc. <p><strong>OperationId:</strong>getInvoicePaymentDetail</p>",
        "operationId": "getInvoicePaymentDetail",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the transaction"
          },
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the account"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "profileId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "profileIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "profileType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "accountNo",
            "in": "query",
            "required": false,
            "description": "Account Number for the AR Account.",
            "type": "string"
          },
          {
            "name": "accountName",
            "in": "query",
            "required": false,
            "description": "Account Name for the AR Account.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for the fetch invoice and payments details request.",
            "schema": {
              "$ref": "#/definitions/invoicePayment"
            }
          },
          "204": {
            "description": "InvoicePaymentDetail not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/hotels/{hotelId}/accounts/{accountId}/uncompressInvoices": {
      "post": {
        "summary": "Reverse the compressing invoice process",
        "description": "Use this API to reverse compressing account receivable invoices and break single combined invoice into individual invoices. <p><strong>OperationId:</strong>uncompressARInvoices</p>",
        "operationId": "uncompressARInvoices",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the account"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "invoice",
            "in": "body",
            "required": true,
            "description": "Request to uncompress a compressed(Parent) Invoice",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/invoice"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/hotels/{hotelId}/agingCycles": {
      "get": {
        "summary": "Get given AR account's aging detail",
        "description": "Use this API to get account receivable profile's aging summary including account name, summary, credit limit, total outstanding balance, etc. per aging bucket. <p><strong>OperationId:</strong>getARAgingCycles</p>",
        "operationId": "getARAgingCycles",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for Fetch AR Aging Cycles.",
            "schema": {
              "$ref": "#/definitions/arAgingCycles"
            }
          },
          "204": {
            "description": "ARAgingCycles not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/hotels/{hotelId}/batchCharges": {
      "post": {
        "summary": "Create process to charge on multiple account receivables",
        "description": "Use this API to create a batch process for simultaneously post a one-time charge to multiple account receivable accounts. <p><strong>OperationId:</strong>postBatchCharges</p>",
        "operationId": "postBatchCharges",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "batchChargesToPost",
            "in": "body",
            "required": true,
            "description": "Request for posting a charge in a batch to list of accounts.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/batchChargesToPost"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/hotels/{hotelId}/directBillsToAR": {
      "put": {
        "summary": "Move direct bills to account receivable",
        "description": "Use this API to transfer direct bills to account receivable account <p><strong>OperationId:</strong>transferDirectBillsToAr</p>",
        "operationId": "transferDirectBillsToAr",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "transferDirectBillsToAr",
            "in": "body",
            "required": true,
            "description": "Request for Transfer Directs bill to AR.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transferDirectBillsToAr"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/hotels/{hotelId}/invoices": {
      "put": {
        "summary": "Update invoice detail.",
        "description": "Use this API to update or transfer invoice detail such as amount, transaction code, etc. <p><strong>OperationId:</strong>putInvoiceDetails</p>",
        "operationId": "putInvoiceDetails",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "invoice",
            "in": "body",
            "required": true,
            "description": "Response to the request to change invoice",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/invoice"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/hotels/{hotelId}/invoices/{invoiceId}": {
      "put": {
        "summary": "Update invoice detail.",
        "description": "Use this API to update or transfer invoice detail such as amount, transaction code, etc.<br><p><strong><mark>This API is deprecated. Please use putInvoiceDetails instead</mark></strong></p> <p><strong>OperationId:</strong>putInvoice</p>",
        "operationId": "putInvoice",
        "deprecated": true,
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the invoice"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "invoice",
            "in": "body",
            "required": true,
            "description": "Response to the request to change invoice",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/invoice"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/hotels/{hotelId}/invoices/{invoiceId}/transactions/{transactionId}/accounts/{accountId}/invoiceAppliedPayments": {
      "get": {
        "summary": "Get account receivable invoice's payment history",
        "description": "Use this API to get applied payment details for AR invoices.<br><p><strong><mark>This API is deprecated. Please use getAppliedInvoicePayments instead</mark></strong></p> <p><strong>OperationId:</strong>getInvoiceAppliedPayments</p>",
        "operationId": "getInvoiceAppliedPayments",
        "deprecated": true,
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the account"
          },
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the transaction"
          },
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the invoice"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "invoiceNo",
            "in": "query",
            "required": false,
            "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
            "type": "number"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response to the applied payment details,Contains errors or warnings if any.",
            "schema": {
              "$ref": "#/definitions/invoiceAppliedPayments"
            }
          },
          "204": {
            "description": "InvoiceAppliedPayments not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/hotels/{hotelId}/invoices/{invoiceId}/transactions/{transactionId}/paymentsFromInvoice": {
      "delete": {
        "summary": "Delete payments from invoice",
        "description": "Delete payments from invoice.<br><p><strong><mark>This API is deprecated. Please use removePaymentsFromInvoice instead</mark></strong></p> <p><strong>OperationId:</strong>deletePaymentsFromInvoice</p>",
        "operationId": "deletePaymentsFromInvoice",
        "deprecated": true,
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the transaction"
          },
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the invoice"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "trxNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique Transaction Identifier of the Payment.",
            "items": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "cashierID",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s)."
          },
          {
            "name": "invoiceNo",
            "in": "query",
            "required": false,
            "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
            "type": "number"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/hotels/{hotelId}/profiles/{profileId}/accounts/{accountId}/charges": {
      "post": {
        "summary": "Add charges to account receivable",
        "description": "Use this API to post charges to account receivable account.<br><p><strong><mark>This API is deprecated. Please use postChargesToAR instead</mark></strong></p> <p><strong>OperationId:</strong>postARCharges</p>",
        "operationId": "postARCharges",
        "deprecated": true,
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the account"
          },
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the profile"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "arChargesPostingCriteria",
            "in": "body",
            "required": true,
            "description": "Request to post charges to an existing invoice, when the functionality is available. If the invoice should not be modified or if the folio should not be modified,based on other functionalities, then the charges cannot be posted to the invoice.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/arChargesPostingCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/hotels/{hotelId}/profiles/{profileId}/accounts/{accountId}/payments": {
      "post": {
        "summary": "Add payment to an account receivable account for a list of reservations",
        "description": "Use this API to make payment to AR accounts for a list of reservations. <p><strong>OperationId:</strong>postARPayments</p>",
        "operationId": "postARPayments",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the account"
          },
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the profile"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "arPaymentsToBeCreated",
            "in": "body",
            "required": true,
            "description": "Request to post a payment to an AR Account and apply the payment to Invoices..",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/arPaymentsToBeCreated"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response notifying if the posting of a payment to an AR Account.",
            "schema": {
              "$ref": "#/definitions/arPayments"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/hotels/{hotelId}/profiles/{profileId}/accounts/{accountId}/statementsHistory": {
      "get": {
        "summary": "Get given profile's account receivable statements history",
        "description": "Use this API to find the history of statements prepared for AR accounts. <p><strong>OperationId:</strong>getStatementsHistory</p>",
        "operationId": "getStatementsHistory",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the account"
          },
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the profile"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "accountNo",
            "in": "query",
            "required": false,
            "description": "Account Number for the AR Account.",
            "type": "string"
          },
          {
            "name": "accountName",
            "in": "query",
            "required": false,
            "description": "Account Name for the AR Account.",
            "type": "string"
          },
          {
            "name": "dateSent",
            "in": "query",
            "required": false,
            "description": "History Date filter.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "reportFileNameWildCard",
            "in": "query",
            "required": false,
            "description": "Report Name wild card.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Statement History.",
            "schema": {
              "$ref": "#/definitions/statementHistory"
            }
          },
          "204": {
            "description": "StatementsHistory not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/hotels/{hotelId}/profiles/{profileId}/accounts/{accountId}/transactions/{transactionId}/reversePayment": {
      "post": {
        "summary": "Reverse Payment",
        "description": "Use this API to reverse payment that occurred accidently or via user error. <p><strong>OperationId:</strong>postReversePayment</p>",
        "operationId": "postReversePayment",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the transaction"
          },
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the account"
          },
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the profile"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "reversePayment",
            "in": "body",
            "required": true,
            "description": "Request for reverse AR payment",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/reversePayment"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/hotels/{hotelId}/transactions/{transactionId}/accounts/{accountId}/invoiceAppliedPayments": {
      "get": {
        "summary": "Get account receivable invoice's payment history",
        "description": "Use this API to get applied payment details for AR invoices. <p><strong>OperationId:</strong>getAppliedInvoicePayments</p>",
        "operationId": "getAppliedInvoicePayments",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the account"
          },
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the transaction"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "invoiceNo",
            "in": "query",
            "required": false,
            "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
            "type": "number"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response to the applied payment details,Contains errors or warnings if any.",
            "schema": {
              "$ref": "#/definitions/invoiceAppliedPayments"
            }
          },
          "204": {
            "description": "AppliedInvoicePayments not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/hotels/{hotelId}/transactions/{transactionId}/creditcard/payments": {
      "get": {
        "summary": "Get account receivable folios which are paid using credit cards",
        "description": "Use this API to get lists of folios for guests who checked out using a credit card payment transaction code that has an account receivable associated with it. It also lists payments made prior to check out if the payment was made using a credit card transaction code that has a an account receivable associated with it. <p><strong>OperationId:</strong>getARCreditCardPayments</p> <p>The maximum allowable limit for this API is <strong>50</strong>.</p> <p>This API allows a time span of <strong>30</strong> days.</p>",
        "operationId": "getARCreditCardPayments",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the transaction"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response after fetching AR credit card payments.",
            "schema": {
              "$ref": "#/definitions/arCreditCardPayments"
            }
          },
          "204": {
            "description": "ARCreditCardPayments not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/hotels/{hotelId}/transactions/{transactionId}/paymentsFromInvoice": {
      "delete": {
        "summary": "Delete payments from invoice",
        "description": "Delete payments from invoice. <p><strong>OperationId:</strong>removePaymentsFromInvoice</p>",
        "operationId": "removePaymentsFromInvoice",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the transaction"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "trxNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique Transaction Identifier of the Payment.",
            "items": {
              "type": "number"
            },
            "required": true
          },
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "cashierID",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s)."
          },
          {
            "name": "invoiceNo",
            "in": "query",
            "required": false,
            "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
            "type": "number"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/hotels/{hotelId}/unlink/invoiceFromStatement": {
      "put": {
        "summary": "Unlink invoices from a statement",
        "description": "Use this API to remove the invoice from the statement before that invoice can be included in a different statement. <p><strong>OperationId:</strong>unlinkInvoiceFromStatement</p>",
        "operationId": "unlinkInvoiceFromStatement",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "unlinkInvoiceFromStatement",
            "in": "body",
            "required": true,
            "description": "Request to unlink invoice from statement",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/unlinkInvoiceFromStatement"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/invoicePayments/accounts/{accountId}": {
      "get": {
        "summary": "Get payment detail for account's invoices",
        "description": "Use this API to get payment data for account receivable invoices. <p><strong>OperationId:</strong>getInvoicesPayments</p> <p>The maximum allowable limit for this API is <strong>50</strong>.</p>",
        "operationId": "getInvoicesPayments",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the account"
          },
          {
            "name": "inclDetails",
            "in": "query",
            "default": "true",
            "required": false,
            "description": "Flag to indicate if Invoice Details are required.",
            "type": "boolean"
          },
          {
            "name": "inclZeroBalance",
            "in": "query",
            "default": "true",
            "required": false,
            "description": "Flag to indicate if Zero Balance Invoices are to be included.",
            "type": "boolean"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Property where the Accounts exist.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "guestDisplayName",
            "in": "query",
            "required": false,
            "description": "Display Name for the guest.",
            "type": "string"
          },
          {
            "name": "remark",
            "in": "query",
            "required": false,
            "description": "Filter for User-defined Invoice Supplement. The search is case-insensitive and supports % as wildcard character with right-side wildcard search by default. Examples: ABC or ABC% finds records that start with ABC, such as ABC, ABCDEF, and ABC123. %ABC or %ABC% finds records that contain ABC, such as ABC, ABC123, MYABC, and MYABC123.",
            "type": "string"
          },
          {
            "name": "reference",
            "in": "query",
            "required": false,
            "description": "Filter for User-defined Invoice Reference. The search is case-insensitive and supports % as wildcard character with right-side wildcard search by default. Examples: ABC or ABC% finds records that start with ABC, such as ABC, ABCDEF, and ABC123. %ABC or %ABC% finds records that contain ABC, such as ABC, ABC123, MYABC, and MYABC123.",
            "type": "string"
          },
          {
            "name": "invoiceNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "invoice Number .",
            "items": {
              "type": "number",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "addresseeName",
            "in": "query",
            "required": false,
            "description": "Addressee Name filter. Works with the Addressee Functionality.",
            "type": "string"
          },
          {
            "name": "reservationId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "reservationIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "reservationType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "printed",
            "in": "query",
            "default": "true",
            "required": false,
            "description": "Flag to check Invoice Statement is Printed.",
            "type": "boolean"
          },
          {
            "name": "unBilled",
            "in": "query",
            "default": "false",
            "required": false,
            "description": "Flag to check Invoice is billed",
            "type": "boolean"
          },
          {
            "name": "folioNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "folio Number .",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "fiscalBillNo",
            "in": "query",
            "required": false,
            "description": "Fiscal bill number of this transaction.",
            "type": "string"
          },
          {
            "name": "statementNo",
            "in": "query",
            "required": false,
            "description": "The Statement number of this invoice.",
            "type": "number"
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Type of AR Invoice information to fetch the invoices or payments data.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Invoices",
                "Payments"
              ]
            },
            "required": false
          },
          {
            "name": "customNumber",
            "in": "query",
            "required": false,
            "description": "Custom number",
            "type": "string"
          },
          {
            "name": "orderBy",
            "in": "query",
            "required": false,
            "description": "This represents which information the data will be ordered.",
            "type": "string",
            "uniqueItems": true,
            "enum": [
              "OpenBalance",
              "TransactionDate"
            ]
          },
          {
            "name": "sortOrder",
            "in": "query",
            "required": false,
            "description": "This represents how the invoice payments will be ordered",
            "type": "string",
            "uniqueItems": true,
            "enum": [
              "Asc",
              "Desc"
            ]
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for the fetch invoice and payments details request.",
            "schema": {
              "$ref": "#/definitions/invoicesPayments"
            }
          },
          "204": {
            "description": "InvoicesPayments not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/invoicePostings": {
      "get": {
        "summary": "Get account receivable invoice postings",
        "description": "Use this API to get account receivable postings. <p><strong>OperationId:</strong>getInvoicePostings</p> <p>This API allows a time span of <strong>30</strong> days.</p>",
        "operationId": "getInvoicePostings",
        "parameters": [
          {
            "name": "canBeModified",
            "in": "query",
            "required": false,
            "description": "Flag to indicate if postings or adjustments can be made to the invoice.",
            "type": "boolean"
          },
          {
            "name": "closeDate",
            "in": "query",
            "required": false,
            "description": "Close date of the invoice.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "fiscalBillNo",
            "in": "query",
            "required": false,
            "description": "The Fiscal Bill number of this posting",
            "type": "string"
          },
          {
            "name": "folioDate",
            "in": "query",
            "required": false,
            "description": "Date of Folio Generation.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "folioNo",
            "in": "query",
            "required": false,
            "description": "Folio Number.",
            "type": "number"
          },
          {
            "name": "folioStatus",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The Folio Status Example: DEPOSIT folio, VOID folio or the default OK folio status.",
            "uniqueItems": true,
            "enum": [
              "Deposit",
              "Void",
              "Ok",
              "Zero",
              "Compress",
              "Converted",
              "Internal"
            ]
          },
          {
            "name": "folioTypeName",
            "in": "query",
            "required": false,
            "description": "The name of the Folio Type used for the Folio Number sequence.",
            "type": "string"
          },
          {
            "name": "internalFolioWindowID",
            "in": "query",
            "required": false,
            "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
            "type": "string"
          },
          {
            "name": "invoiceNo",
            "in": "query",
            "required": false,
            "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
            "type": "number"
          },
          {
            "name": "invoiceType",
            "in": "query",
            "required": false,
            "type": "string",
            "uniqueItems": true,
            "enum": [
              "Normal",
              "Credit",
              "OldBalance",
              "PasserBy"
            ]
          },
          {
            "name": "postingDate",
            "in": "query",
            "required": false,
            "description": "Posting date of the invoice.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "revenueDate",
            "in": "query",
            "required": false,
            "description": "Revenue date ID of the invoice.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "statementNo",
            "in": "query",
            "required": false,
            "description": "Statementno of the invoice.",
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "description": "Status of the invoice.",
            "type": "string"
          },
          {
            "name": "transferDate",
            "in": "query",
            "required": false,
            "description": "Transfer date of the invoice.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "postingTransactionCode",
            "in": "query",
            "required": false,
            "description": "Transaction code of the invoice.",
            "type": "string"
          },
          {
            "name": "transactionDate",
            "in": "query",
            "required": false,
            "description": "Transaction Date of the invoice.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "transactionNo",
            "in": "query",
            "required": false,
            "description": "Unique Transaction Identifier of the Invoice.",
            "type": "number"
          },
          {
            "name": "cashierId",
            "in": "query",
            "required": false,
            "type": "number",
            "description": "The Cashier ID of the Cashier who is currently processing the transaction(s)."
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Property where the invoice exists.",
            "type": "string"
          },
          {
            "name": "reservationId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "reservationIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "reservationType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "guestProfileId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "guestProfileIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "guestProfileType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "age",
            "in": "query",
            "required": false,
            "description": "The Aging age of the invoice",
            "type": "integer"
          },
          {
            "name": "guestName",
            "in": "query",
            "required": false,
            "description": "Name of the Guest who consumed these transactions.",
            "type": "string"
          },
          {
            "name": "originalAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "originalAmountCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "currencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "paymentsAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "paymentsCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "balanceAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "balanceCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "reference",
            "in": "query",
            "required": false,
            "description": "User-defined posting reference.",
            "type": "string"
          },
          {
            "name": "remark",
            "in": "query",
            "required": false,
            "description": "User-defined posting remark.",
            "type": "string"
          },
          {
            "name": "adjusted",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "parentInvoiceNo",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "compressed",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "compressedDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "transferredOut",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "transferredIn",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "marketDescription",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "marketHotelId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "marketCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "marketGroup",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "roomClassDescription",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "roomClassHotelId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "roomClassCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sourceDescription",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sourceHotelId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sourceCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sourceGroup",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cashierInfoCashierId",
            "in": "query",
            "required": false,
            "description": "Cashier Id of the Cashier.",
            "type": "number"
          },
          {
            "name": "cashierName",
            "in": "query",
            "required": false,
            "description": "Cashier Name.",
            "type": "string"
          },
          {
            "name": "transactionHotelId",
            "in": "query",
            "required": false,
            "description": "Hotel context of the Transaction code.",
            "type": "string"
          },
          {
            "name": "printTrxReceipt",
            "in": "query",
            "required": false,
            "description": "Print receipt flag that tells whether the transaction receipt is to be printed or not. This is based on the transaction code.",
            "type": "boolean"
          },
          {
            "name": "invoicePostingsTransactionCode",
            "in": "query",
            "required": false,
            "description": "Unique identifier for the Transaction code.",
            "type": "string"
          },
          {
            "name": "transactionDescription",
            "in": "query",
            "required": false,
            "description": "Transaction codes info.",
            "type": "string"
          },
          {
            "name": "transactionGroup",
            "in": "query",
            "required": false,
            "description": "Category of the transaction code.",
            "type": "string"
          },
          {
            "name": "transactionSubGroup",
            "in": "query",
            "required": false,
            "description": "Sub category of the transaction code.",
            "type": "string"
          },
          {
            "name": "universalProductCode",
            "in": "query",
            "required": false,
            "description": "Unique Universal product code of the transaction code.",
            "type": "string"
          },
          {
            "name": "routingInstructionsId",
            "in": "query",
            "required": false,
            "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
            "type": "number"
          },
          {
            "name": "articleCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique code of the article.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "articleHotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code to which the article belongs.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "inactive",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Indicates whether the article is inactive or not.",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "orderSequence",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Display Order sequence.",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "articleDescription",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Description of the article.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "transactionCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Transaction code to which the article belongs.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "articleAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "articleCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "availableForPostIt",
            "in": "query",
            "required": false,
            "description": "Indicates whether the article is available for post it.",
            "type": "boolean"
          },
          {
            "name": "color",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Color configuration type. This color configuration provides a visual category of entities.",
            "uniqueItems": true,
            "enum": [
              "Red",
              "DarkRed",
              "Green",
              "DarkGreen",
              "LightGreen",
              "Orange",
              "White",
              "Yellow",
              "DarkYellow",
              "Purple",
              "Brown",
              "Gray",
              "Aqua",
              "Chocolate",
              "Blue",
              "LightBlue",
              "DarkBlue",
              "Cyan",
              "DarkCyan",
              "Magenta",
              "DarkMagenta",
              "Black"
            ]
          },
          {
            "name": "articleUniversalProductCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique Universal product code of the article.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "attachCreditCardToProfile",
            "in": "query",
            "required": false,
            "description": "Attach the credit card to profile.",
            "type": "boolean"
          },
          {
            "name": "cardHolderName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardNumberLast4Digits",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardNumberMasked",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardOrToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Simple type for indicating if credit card number is tokenized.",
            "uniqueItems": true,
            "enum": [
              "CardNumber",
              "Token"
            ]
          },
          {
            "name": "cardType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
            "uniqueItems": true,
            "enum": [
              "Ab",
              "Am",
              "Ax",
              "Cb",
              "Dc",
              "Ds",
              "Dt",
              "Ec",
              "Er",
              "Jc",
              "Jl",
              "Mc",
              "Nb",
              "So",
              "St",
              "Sw",
              "Va",
              "Xy",
              "Zz",
              "Cp",
              "Cu"
            ]
          },
          {
            "name": "expirationDate",
            "in": "query",
            "required": false,
            "description": "Expiration date of the credit card",
            "type": "string",
            "format": "date"
          },
          {
            "name": "expirationDateExpired",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "expirationDateMasked",
            "in": "query",
            "required": false,
            "description": "Masked Expiration date of the credit card",
            "type": "string"
          },
          {
            "name": "processing",
            "in": "query",
            "required": false,
            "type": "string",
            "uniqueItems": true,
            "enum": [
              "Eft",
              "Manual"
            ]
          },
          {
            "name": "swiped",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "userDefinedCardType",
            "in": "query",
            "required": false,
            "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
            "type": "string"
          },
          {
            "name": "cardId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "PaymentCardIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "paymentCardIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "currentAuthorizedAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "currentAuthorizedAmountCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "approvalAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "approvalAmountCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "addresseeType",
            "in": "query",
            "required": false,
            "description": "Defines the type of Linked profiles for a block.",
            "type": "string"
          },
          {
            "name": "addressProfileId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "addressProfileIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "addressProfileIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "description": "Name for the profile attached to the block.",
            "type": "string"
          },
          {
            "name": "city",
            "in": "query",
            "required": false,
            "description": "City for the profile attached to the block.",
            "type": "string"
          },
          {
            "name": "phone",
            "in": "query",
            "required": false,
            "description": "Phone for the profile attached to the block.",
            "type": "string"
          },
          {
            "name": "allowPartialTransferYn",
            "in": "query",
            "required": false,
            "description": "Flag to check Partail Transfer Allowed.",
            "type": "boolean"
          },
          {
            "name": "printed",
            "in": "query",
            "required": false,
            "description": "Flag to check Invoice Statement is Printed.",
            "type": "boolean"
          },
          {
            "name": "printedDate",
            "in": "query",
            "required": false,
            "description": "Invoice Statement Printed Date.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "storedFolioId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "storedFolioIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "storedFolioType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "storedFolioName",
            "in": "query",
            "required": false,
            "description": "Name of the Stored Folio.",
            "type": "string"
          },
          {
            "name": "storedDebitFolioId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "storedDebitFolioIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "storedDebitFolioType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "storedDebitFolioName",
            "in": "query",
            "required": false,
            "description": "Name of the Stored Debit Folio.",
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "accountIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "accountType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "accountNo",
            "in": "query",
            "required": false,
            "description": "The Account Number for the Account.",
            "type": "string"
          },
          {
            "name": "profileId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "profileIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "profileIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "additionalFilterCashierId",
            "in": "query",
            "required": false,
            "description": "Cashier Id of the Cashier.",
            "type": "number"
          },
          {
            "name": "additionalFilterTransactionCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "additionalFilterTransactionSubGroupCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "referenceWildCard",
            "in": "query",
            "required": false,
            "description": "Filters the results for reference.",
            "type": "string"
          },
          {
            "name": "supplementWildCard",
            "in": "query",
            "required": false,
            "description": "Filter the results for supplement.",
            "type": "string"
          },
          {
            "name": "checkNumberWildCard",
            "in": "query",
            "required": false,
            "description": "Lookup string which will try to match an existing Cheque number's.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response to the request to fetch postings for an invoice",
            "schema": {
              "$ref": "#/definitions/invoicePostings"
            }
          },
          "204": {
            "description": "InvoicePostings not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/invoices/close": {
      "put": {
        "summary": "Close account receivable invoices",
        "description": "Use this API to close (\"freeze\") one or more selected invoices at any point after they have been created. When an invoice has been closed, no new postings to the invoice can be made, transaction reference or supplemental information can be edited, or adjustments to transaction codes can be made. However, payments can be posted to an invoice after it has been closed. <p><strong>OperationId:</strong>putInvoices</p>",
        "operationId": "putInvoices",
        "parameters": [
          {
            "name": "invoices",
            "in": "body",
            "required": true,
            "description": "Request to close invoice(s)",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/invoices"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/invoicesAccount": {
      "put": {
        "summary": "Change Account receivable invoice for an AR account",
        "description": "Use this API to update existing AR invoice for a given profile and/or a reservation. <p><strong>OperationId:</strong>putARInvoicesAccount</p>",
        "operationId": "putARInvoicesAccount",
        "parameters": [
          {
            "name": "arInvoicesAccount",
            "in": "body",
            "required": true,
            "description": "Request to change AR invoice(s) account in AR.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/arInvoicesAccount"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/oldBalances": {
      "post": {
        "summary": "Add old balances from external accounting systems",
        "description": "Use this API to add old balances from external accounting systems into OPERA Accounts Receivable. <p><strong>OperationId:</strong>postAROldBalances</p>",
        "operationId": "postAROldBalances",
        "parameters": [
          {
            "name": "arOldBalances",
            "in": "body",
            "required": true,
            "description": "Request to Post AR Old Balances",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/arOldBalances"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/profiles/{profileId}/aging": {
      "get": {
        "summary": "Get given profile's aging detail",
        "description": "Use this API to get profile's account receivable summary including fixed charges, account balance, statements, reminder history, etc. <p><strong>OperationId:</strong>getProfileAging</p>",
        "operationId": "getProfileAging",
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the profile"
          },
          {
            "name": "currency",
            "in": "query",
            "required": false,
            "description": "Currency of the aging amounts.",
            "type": "string"
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response to the request to fetch the total Aging information for a Profile.",
            "schema": {
              "$ref": "#/definitions/profileAging"
            }
          },
          "204": {
            "description": "ProfileAging not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/profiles/{profileId}/yearViews": {
      "get": {
        "summary": "Get given profile's yearly account receivable detail",
        "description": "Use this API to get a month-by-month total of accrued debits, accrued credits, and a net total for the selected account data. <p><strong>OperationId:</strong>getProfileYearView</p>",
        "operationId": "getProfileYearView",
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the profile"
          },
          {
            "name": "currency",
            "in": "query",
            "required": false,
            "description": "Currency of the Year View amounts.",
            "type": "string"
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response to the request to fetch the total Year View information for a Profile.",
            "schema": {
              "$ref": "#/definitions/profileYearView"
            }
          },
          "204": {
            "description": "ProfileYearView not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/reopenInvoices": {
      "put": {
        "summary": "Reopen account receivable closed invoice",
        "description": "Use this API to unfreeze or reopen invoice for account receivable. <p><strong>OperationId:</strong>reopenInvoices</p>",
        "operationId": "reopenInvoices",
        "parameters": [
          {
            "name": "invoices",
            "in": "body",
            "required": true,
            "description": "Request to re-open closed invoice(s)",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/invoices"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/statements": {
      "get": {
        "summary": "Get given profile's account receivable statements",
        "description": "Use this API to prepare statement for an AR account holders. It is typically prepared for billing purposes. <p><strong>OperationId:</strong>getARStatements</p>",
        "operationId": "getARStatements",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Property where the AR Account exists. This is required.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "profileId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "profileIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "profileType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "accountID",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "accountNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Account Number for the AR Account.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "accountName",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Account Name for the AR Account.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "canBeModified",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Flag to indicate if postings or adjustments can be made to the invoice.",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "closeDate",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Close date of the invoice.",
            "items": {
              "type": "string",
              "format": "date"
            },
            "required": false
          },
          {
            "name": "fiscalBillNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "The Fiscal Bill number of this posting",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "folioDate",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Date of Folio Generation.",
            "items": {
              "type": "string",
              "format": "date"
            },
            "required": false
          },
          {
            "name": "folioNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Folio Number.",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "folioStatus",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "The Folio Status Example: DEPOSIT folio, VOID folio or the default OK folio status.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Deposit",
                "Void",
                "Ok",
                "Zero",
                "Compress",
                "Converted",
                "Internal"
              ]
            },
            "required": false
          },
          {
            "name": "folioTypeName",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "The name of the Folio Type used for the Folio Number sequence.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "internalFolioWindowID",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "invoiceNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "invoiceType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Normal",
                "Credit",
                "OldBalance",
                "PasserBy"
              ]
            },
            "required": false
          },
          {
            "name": "postingDate",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Posting date of the invoice.",
            "items": {
              "type": "string",
              "format": "date"
            },
            "required": false
          },
          {
            "name": "revenueDate",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Revenue date ID of the invoice.",
            "items": {
              "type": "string",
              "format": "date"
            },
            "required": false
          },
          {
            "name": "statementNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Statementno of the invoice.",
            "items": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "status",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Status of the invoice.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "transferDate",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Transfer date of the invoice.",
            "items": {
              "type": "string",
              "format": "date"
            },
            "required": false
          },
          {
            "name": "invoiceTransactionCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Transaction code of the invoice.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "transactionDate",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Transaction Date of the invoice.",
            "items": {
              "type": "string",
              "format": "date"
            },
            "required": false
          },
          {
            "name": "transactionNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique Transaction Identifier of the Invoice.",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "invoiceHotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Property where the AR Account exists. This is required.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "reservationId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "reservationIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "reservationType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "guestProfileId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "guestProfileIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "guestProfileType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "age",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "The Aging age of the invoice",
            "items": {
              "type": "integer"
            },
            "required": false
          },
          {
            "name": "guestName",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Name of the Guest who consumed these transactions.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "originalAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "originalAmountCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "currencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "paymentsAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "paymentsCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "balanceAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "balanceCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "reference",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "User-defined posting reference.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "remark",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "User-defined posting remark.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "adjusted",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "parentInvoiceNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "compressed",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "compressedDate",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "format": "date"
            },
            "required": false
          },
          {
            "name": "transferredOut",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "transferredIn",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "marketDescription",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "marketHotelId",
            "in": "query",
            "required": false,
            "description": "Property where the AR Account exists. This is required.",
            "type": "string"
          },
          {
            "name": "marketCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "marketGroup",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "roomClassDescription",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "roomClassHotelId",
            "in": "query",
            "required": false,
            "description": "Property where the AR Account exists. This is required.",
            "type": "string"
          },
          {
            "name": "roomClassCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sourceDescription",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sourceHotelId",
            "in": "query",
            "required": false,
            "description": "Property where the AR Account exists. This is required.",
            "type": "string"
          },
          {
            "name": "sourceCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "sourceGroup",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cashierId",
            "in": "query",
            "required": false,
            "description": "Cashier Id of the Cashier.",
            "type": "number"
          },
          {
            "name": "cashierName",
            "in": "query",
            "required": false,
            "description": "Cashier Name.",
            "type": "string"
          },
          {
            "name": "transactionHotelId",
            "in": "query",
            "required": false,
            "description": "Property where the AR Account exists. This is required.",
            "type": "string"
          },
          {
            "name": "printTrxReceipt",
            "in": "query",
            "required": false,
            "description": "Print receipt flag that tells whether the transaction receipt is to be printed or not. This is based on the transaction code.",
            "type": "boolean"
          },
          {
            "name": "accountInvoiceTransactionCode",
            "in": "query",
            "required": false,
            "description": "Unique identifier for the Transaction code.",
            "type": "string"
          },
          {
            "name": "transactionDescription",
            "in": "query",
            "required": false,
            "description": "Transaction codes info.",
            "type": "string"
          },
          {
            "name": "transactionGroup",
            "in": "query",
            "required": false,
            "description": "Category of the transaction code.",
            "type": "string"
          },
          {
            "name": "transactionSubGroup",
            "in": "query",
            "required": false,
            "description": "Sub category of the transaction code.",
            "type": "string"
          },
          {
            "name": "universalProductCode",
            "in": "query",
            "required": false,
            "description": "Unique Universal product code of the transaction code.",
            "type": "string"
          },
          {
            "name": "routingInstructionsId",
            "in": "query",
            "required": false,
            "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
            "type": "number"
          },
          {
            "name": "articleCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique code of the article.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "articleHotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Property where the AR Account exists. This is required.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "inactive",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Indicates whether the article is inactive or not.",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "orderSequence",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Display Order sequence.",
            "items": {
              "type": "number"
            },
            "required": false
          },
          {
            "name": "articleDescription",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Description of the article.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "transactionCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Transaction code to which the article belongs.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "articleAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "articleCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "availableForPostIt",
            "in": "query",
            "required": false,
            "description": "Indicates whether the article is available for post it.",
            "type": "boolean"
          },
          {
            "name": "color",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Color configuration type. This color configuration provides a visual category of entities.",
            "uniqueItems": true,
            "enum": [
              "Red",
              "DarkRed",
              "Green",
              "DarkGreen",
              "LightGreen",
              "Orange",
              "White",
              "Yellow",
              "DarkYellow",
              "Purple",
              "Brown",
              "Gray",
              "Aqua",
              "Chocolate",
              "Blue",
              "LightBlue",
              "DarkBlue",
              "Cyan",
              "DarkCyan",
              "Magenta",
              "DarkMagenta",
              "Black"
            ]
          },
          {
            "name": "articleUniversalProductCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique Universal product code of the article.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "attachCreditCardToProfile",
            "in": "query",
            "required": false,
            "description": "Attach the credit card to profile.",
            "type": "boolean"
          },
          {
            "name": "cardHolderName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardNumberLast4Digits",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardNumberMasked",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cardOrToken",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Simple type for indicating if credit card number is tokenized.",
            "uniqueItems": true,
            "enum": [
              "CardNumber",
              "Token"
            ]
          },
          {
            "name": "cardType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
            "uniqueItems": true,
            "enum": [
              "Ab",
              "Am",
              "Ax",
              "Cb",
              "Dc",
              "Ds",
              "Dt",
              "Ec",
              "Er",
              "Jc",
              "Jl",
              "Mc",
              "Nb",
              "So",
              "St",
              "Sw",
              "Va",
              "Xy",
              "Zz",
              "Cp",
              "Cu"
            ]
          },
          {
            "name": "expirationDate",
            "in": "query",
            "required": false,
            "description": "Expiration date of the credit card",
            "type": "string",
            "format": "date"
          },
          {
            "name": "expirationDateExpired",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "expirationDateMasked",
            "in": "query",
            "required": false,
            "description": "Masked Expiration date of the credit card",
            "type": "string"
          },
          {
            "name": "processing",
            "in": "query",
            "required": false,
            "type": "string",
            "uniqueItems": true,
            "enum": [
              "Eft",
              "Manual"
            ]
          },
          {
            "name": "swiped",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "userDefinedCardType",
            "in": "query",
            "required": false,
            "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
            "type": "string"
          },
          {
            "name": "invoicePaymentCardId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "invoicePaymentCardIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "invoicePaymentCardIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "currentAuthorizedAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "currentAuthorizedAmountCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "approvalAmount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "approvalAmountCurrencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "Defines the type of Linked profiles for a block.",
            "type": "string"
          },
          {
            "name": "addresseeProfileId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "addresseeProfileIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "addresseeProfileType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "description": "Name for the profile attached to the block.",
            "type": "string"
          },
          {
            "name": "city",
            "in": "query",
            "required": false,
            "description": "City for the profile attached to the block.",
            "type": "string"
          },
          {
            "name": "phone",
            "in": "query",
            "required": false,
            "description": "Phone for the profile attached to the block.",
            "type": "string"
          },
          {
            "name": "allowPartialTransferYn",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Flag to check Partail Transfer Allowed.",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "printed",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Flag to check Invoice Statement is Printed.",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "printedDate",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Invoice Statement Printed Date.",
            "items": {
              "type": "string",
              "format": "date"
            },
            "required": false
          },
          {
            "name": "storedFolioId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "storedFolioIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "storedFolioType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "storedFolioName",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Name of the Stored Folio.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "storedDebitFolioId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "storedDebitFolioIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "storedDebitFolioType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "storedDebitFolioName",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Name of the Stored Debit Folio.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "balanceForwardDate",
            "in": "query",
            "required": false,
            "description": "The date specified in this field determines the balance forward date and balance forward total that is printed on the statement. (A balance forward shows the net amount for all invoices and payments (debits and credits) prior to the balance forward date as a single total, rather than itemizing them individually on the statement.)",
            "type": "string",
            "format": "date"
          },
          {
            "name": "inclFolios",
            "in": "query",
            "default": "false",
            "required": false,
            "description": "Flag to indicate if the associated Folios for the Invoices are to be included along with the the Statement.",
            "type": "boolean"
          },
          {
            "name": "inclPrinted",
            "in": "query",
            "default": "false",
            "required": false,
            "description": "Flag to indicate if Previousely Printed Invoices are to be included in the Statement. This is based on the Functionality for AR PRINTED INVOICES.",
            "type": "boolean"
          },
          {
            "name": "inclZero",
            "in": "query",
            "default": "false",
            "required": false,
            "description": "Flag to indicate if Zero Balances Invoices are to be included in the Statement.",
            "type": "boolean"
          },
          {
            "name": "filterEndDate",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "filterStartDate",
            "in": "query",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "statementText",
            "in": "query",
            "required": false,
            "description": "Text which will be printed on the Invoice.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Details of the Statement to generate.",
            "schema": {
              "$ref": "#/definitions/statements"
            }
          },
          "204": {
            "description": "ARStatements not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/transferInvoicesAndPayments": {
      "put": {
        "summary": "Move an invoice or a payment to another AR account",
        "description": "Use this API to move all or a portion of an invoice or a payment from one AR account to another AR account <p><strong>OperationId:</strong>transferInvoicesAndPayments</p>",
        "operationId": "transferInvoicesAndPayments",
        "parameters": [
          {
            "name": "invoicesAndPaymentsToTransfer",
            "in": "body",
            "required": true,
            "description": "Request for transferring invoice(s) in AR.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/invoicesAndPaymentsToTransfer"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    },
    "/transferPostings": {
      "put": {
        "summary": "Transfer postings",
        "description": "Use this API to transfer postings from one account receivable invoice to another account receivable invoice. <p><strong>OperationId:</strong>transferPostings</p>",
        "operationId": "transferPostings",
        "parameters": [
          {
            "name": "transferPostings",
            "in": "body",
            "required": true,
            "description": "Request for transferring invoice posting(s)in AR.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/transferPostings"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "AccountsReceivables"
        ]
      }
    }
  },
  "parameters": {
    "authKey": {
      "name": "authorization",
      "description": "Bearer token that needs to be passed which is generated post user authentication",
      "type": "string",
      "in": "header",
      "required": true
    },
    "x-app-key": {
      "name": "x-app-key",
      "description": "Client or Partner's Application Key",
      "type": "string",
      "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
      "in": "header",
      "required": true
    },
    "x-hotelid": {
      "name": "x-hotelid",
      "type": "string",
      "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
      "in": "header",
      "required": true
    },
    "x-externalsystem": {
      "name": "x-externalsystem",
      "type": "string",
      "maxLength": 80,
      "description": "External system code.",
      "in": "header",
      "x-example": "EXTERNALSYSTEMCODE"
    },
    "Accept-Language": {
      "name": "Accept-Language",
      "type": "string",
      "description": "Language code",
      "in": "header"
    },
    "x-hubid": {
      "name": "x-hubid",
      "type": "string",
      "description": "x-hubid is a logical grouping of multiple properties that allows api consumers to manage data from a group of properties. This x-hubid is a valid list of hub codes configured in OPERA to which the user has access. Rest APIs without hotelId in the operation path can support hub level integration using x-hubid",
      "in": "header"
    }
  },
  "responses": {
    "400": {
      "description": "Bad Request",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "401": {
      "description": "Unauthorized"
    },
    "403": {
      "description": "Forbidden"
    },
    "404": {
      "description": "Resource not found",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "405": {
      "description": "Method not allowed"
    },
    "406": {
      "description": "Not acceptable."
    },
    "413": {
      "description": "Request Entity Too Large"
    },
    "414": {
      "description": "Request URI Too Large"
    },
    "415": {
      "description": "Unsupported Media Type"
    },
    "500": {
      "description": "System Error",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "502": {
      "description": "Bad Gateway"
    },
    "503": {
      "description": "Service Unavailable"
    }
  },
  "definitions": {
    "reminders": {
      "type": "object",
      "description": "Response to the request to fetch pending Reminders for Accounts.",
      "properties": {
        "remindersDetails": {
          "description": "Statement History.",
          "$ref": "#/definitions/aRRemindersType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "aRRemindersType": {
      "type": "array",
      "description": "Information about a Reminder.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/aRReminderType"
      }
    },
    "aRReminderType": {
      "type": "object",
      "description": "AR Reminder Information Type.",
      "properties": {
        "hotelId": {
          "description": "Property where the Account belongs.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "accountId": {
          "description": "The unique ID of the AR Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "maxAge": {
          "description": "The maximum Age(days) of the invoices in the Reminder. This would be available when Simple Reminder functionality is OFF.",
          "type": "integer"
        },
        "cycleUsed": {
          "description": "The Reminder Cycle calculation type(defined for the Account Type) for this Account. This is how the Reminder Cycle is being calculated. Values are Days or End Of Month.",
          "$ref": "#/definitions/reminderCycleType"
        },
        "letterName": {
          "description": "The Reminder Letter name which is to be used for this Reminder based on the setup on the Account Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "cycle": {
          "description": "The current Reminder Cycle number for this reminder. This would be available when Simple Reminder functionality is ON.",
          "type": "integer"
        },
        "lastCycle": {
          "description": "The Last Reminder Cycle used for this Account. This would be available when Simple Reminder functionality is ON.",
          "type": "integer"
        },
        "lastReminderSent": {
          "description": "The date of the Last Reminder Sent.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "age": {
          "description": "The minimum age(days) of the invoices to be included in the Reminder",
          "type": "integer"
        },
        "currencyCode": {
          "description": "Reminder summary currency code.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        },
        "reportFileName": {
          "description": "The Reminder report file name Letter name which is to be used for reprint.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "isHistoryExists": {
          "description": "Indicates that reminders history exists.",
          "type": "boolean"
        },
        "invoices": {
          "description": "Invoice details of the Reminder.",
          "$ref": "#/definitions/aRInvoicesType"
        }
      }
    },
    "uniqueID_Type": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "reminderCycleType": {
      "type": "string",
      "description": "The different types of Reminder Cycle calculation rules.",
      "enum": [
        "Days",
        "EndOfMonth"
      ]
    },
    "aRInvoicesType": {
      "type": "array",
      "description": "A collection of AR Invoices.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/aRInvoiceType"
      }
    },
    "aRInvoiceType": {
      "type": "object",
      "description": "Details of an AR Invoice.",
      "properties": {
        "hotelId": {
          "description": "Property where the invoice exists.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "Reservation ID of the invoice.",
          "$ref": "#/definitions/reservationId"
        },
        "guestProfileId": {
          "description": "Guest Profile ID of the invoice.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "age": {
          "description": "The Aging age of the invoice",
          "type": "integer"
        },
        "guestName": {
          "description": "Name of the Guest who consumed these transactions.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "originalAmount": {
          "description": "Original Amount of the Invoice",
          "$ref": "#/definitions/currencyAmountType"
        },
        "amount": {
          "description": "Current Amount of the Invoice.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "payments": {
          "description": "Total Payments made to this Invoice.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Amount still open which has not been paid",
          "$ref": "#/definitions/currencyAmountType"
        },
        "reference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "remark": {
          "description": "User-defined posting remark.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "adjusted": {
          "type": "boolean"
        },
        "parentInvoiceNo": {
          "type": "number"
        },
        "compressed": {
          "type": "boolean"
        },
        "compressedDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transferredOut": {
          "type": "boolean"
        },
        "transferredIn": {
          "type": "boolean"
        },
        "market": {
          "description": "Invoice market code.",
          "$ref": "#/definitions/marketCodeInfoType"
        },
        "roomClass": {
          "description": "Invoice room class code.",
          "$ref": "#/definitions/roomClassCodeInfoType"
        },
        "source": {
          "description": "Invoice source code.",
          "$ref": "#/definitions/sourceCodeInfoType"
        },
        "reservationInfo": {
          "description": "Reservation guest details.",
          "$ref": "#/definitions/reservationInfoType"
        },
        "cashierInfo": {
          "description": "Cashier information. Contains Id and Name details of the cashier.",
          "$ref": "#/definitions/cashierInfoType"
        },
        "transactionInfo": {
          "description": "Transaction information .",
          "$ref": "#/definitions/trxInfoType"
        },
        "paymentCard": {
          "description": "Payment card details.",
          "$ref": "#/definitions/resPaymentCardType"
        },
        "addresseeInfo": {
          "description": "Addressee Information for the folio. This is available when the Addressee functionality is used and and Addressee is attached to the folio of the Invoice.",
          "$ref": "#/definitions/profileInfoType"
        },
        "allowPartialTransferYn": {
          "description": "Flag to check Partail Transfer Allowed.",
          "type": "boolean"
        },
        "printed": {
          "description": "Flag to check Invoice Statement is Printed.",
          "type": "boolean"
        },
        "printedDate": {
          "description": "Invoice Statement Printed Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "storedFolioId": {
          "description": "ID of the Stored Folio.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "storedFolioName": {
          "description": "Name of the Stored Folio.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "storedDebitFolioId": {
          "description": "ID of the Stored Debit Folio.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "storedDebitFolioName": {
          "description": "Name of the Stored Debit Folio.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "folioTexts": {
          "description": "Additional text fields to display on the folio.",
          "$ref": "#/definitions/folioTextsType"
        },
        "customNumbers": {
          "description": "Unique Custom Numbers associated with this record.",
          "type": "array",
          "maxItems": 5,
          "items": {
            "$ref": "#/definitions/customNumberType"
          }
        },
        "fiscalResponseType": {
          "description": "Provides information which is used for fiscal response processing.",
          "$ref": "#/definitions/fiscalResponseType"
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier of the Invoice.",
          "type": "number"
        },
        "transactionDate": {
          "description": "Transaction Date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "status": {
          "description": "Status of the invoice.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionCode": {
          "description": "Transaction code of the invoice.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioNo": {
          "description": "Folio Number.",
          "type": "number"
        },
        "invoiceNo": {
          "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
          "type": "number"
        },
        "fiscalBillNo": {
          "description": "The Fiscal Bill number of this posting",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "folioTypeName": {
          "description": "The name of the Folio Type used for the Folio Number sequence.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "internalFolioWindowID": {
          "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioDate": {
          "description": "Date of Folio Generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "folioStatus": {
          "$ref": "#/definitions/folioStatusType"
        },
        "folioNoWithPrefix": {
          "description": "The folio number with prefix value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "invoiceType": {
          "description": "Invoice code of the invoice.",
          "$ref": "#/definitions/aRInvoiceCategory"
        },
        "statementNo": {
          "description": "Statementno of the invoice.",
          "type": "integer"
        },
        "revenueDate": {
          "description": "Revenue date ID of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "closeDate": {
          "description": "Close date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "postingDate": {
          "description": "Posting date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transferDate": {
          "description": "Transfer date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "canBeModified": {
          "description": "Flag to indicate if postings or adjustments can be made to the invoice.",
          "type": "boolean"
        }
      }
    },
    "reservationId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "currencyAmountType": {
      "type": "object",
      "description": "A monetary value expressed with a currency code.",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "marketCodeInfoType": {
      "type": "object",
      "properties": {
        "marketCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "marketGroup": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "roomClassCodeInfoType": {
      "type": "object",
      "description": "Code of the room class type.",
      "properties": {
        "roomClassCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "sourceCodeInfoType": {
      "type": "object",
      "properties": {
        "sourceCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceGroup": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "reservationInfoType": {
      "type": "object",
      "description": "The Reservation class contains the current reservation being created or altered.",
      "properties": {
        "reservationIdList": {
          "description": "Unique identifiers for the reservation for both internal and external systems",
          "$ref": "#/definitions/reservationIdList"
        },
        "roomStay": {
          "description": "Collection of room stays.",
          "$ref": "#/definitions/stayInfoType"
        },
        "reservationGuest": {
          "description": "Collection of guests associated with the reservation.",
          "$ref": "#/definitions/resGuestInfoType"
        },
        "sharedGuests": {
          "description": "Collection of guests who share this reservation.",
          "$ref": "#/definitions/resSharedGuestListType"
        },
        "attachedProfiles": {
          "description": "List of attached profiles",
          "$ref": "#/definitions/resAttachedProfileListType"
        },
        "reservationPaymentMethod": {
          "description": "Payment method used for this reservation",
          "$ref": "#/definitions/reservationPaymentMethodType"
        },
        "reservationFolioWindows": {
          "description": "Collection of reservation folio windows.",
          "$ref": "#/definitions/reservationFolioWindowsType"
        },
        "specials": {
          "description": "Set of reservation preferences which belongs to the Specials group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "lastPrivacyPromptDate": {
          "description": "Last Privacy Prompt Date",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "displayColor": {
          "description": "Color setting of the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationIndicators": {
          "description": "Indicators of additional information attached to the reservation",
          "$ref": "#/definitions/indicatorsType"
        },
        "roomStatus": {
          "description": "Current room status",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "searchMatches": {
          "description": "Super Search matching terms.",
          "$ref": "#/definitions/searchMatchesType"
        },
        "sourceOfSale": {
          "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
          "$ref": "#/definitions/sourceOfSaleType"
        },
        "waitlist": {
          "description": "Information regarding why reservation has been/was waitlisted. This could hold information as history even if reservation is not in Waitlist status anymore.",
          "$ref": "#/definitions/waitlistResType"
        },
        "queue": {
          "description": "Information about the time and duration this reservation was on Queue for Checkin.",
          "$ref": "#/definitions/reservationQueueInformationType"
        },
        "housekeeping": {
          "description": "Information regarding housekeeping for this reservation.",
          "$ref": "#/definitions/resHousekeepingType"
        },
        "cashiering": {
          "description": "Holds cashiering related information for the reservation.",
          "$ref": "#/definitions/resCashieringType"
        },
        "taxType": {
          "description": "This stores the code for the type of tax calculation especially with tax exemption, etc.",
          "$ref": "#/definitions/taxTypeType"
        },
        "deposit": {
          "description": "Holds reservation deposit information.",
          "$ref": "#/definitions/reservationDepositType"
        },
        "allowedActions": {
          "description": "Collection of reservation allowed actions.",
          "$ref": "#/definitions/reservationAllowedActionsType"
        },
        "revenuesAndBalances": {
          "description": "Revenues and Balances Amount summary for the reservation.",
          "$ref": "#/definitions/resRevenueBalanceType"
        },
        "hotelInterfaceStatusList": {
          "description": "Collection of Hotel Interfaces and rights, this is populated only when fetching interface status for rooms.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationInterfaceStatusType"
          }
        },
        "guestPreferredCurrency": {
          "description": "Currency code preferred by guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "turndownInfo": {
          "description": "Currency code preferred by guest.",
          "$ref": "#/definitions/reservationTurndownInfoType"
        },
        "mobileNotifications": {
          "description": "Denotes the status of Room Ready, Key Ready messages.",
          "$ref": "#/definitions/resMobileNotificationsType"
        },
        "reservationCommunication": {
          "description": "Collection of reservation communication details.",
          "$ref": "#/definitions/resCommunicationType"
        },
        "advanceCheckIn": {
          "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
          "$ref": "#/definitions/advanceCheckInType"
        },
        "welcomeOffer": {
          "description": "This flag will determine wheather the reservation is eligible for Welcome Offer or not.",
          "type": "boolean"
        },
        "cancellationInfo": {
          "description": "Information regarding why reservation has been/was cancelled.",
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "code": {
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "date": {
              "description": "Date when reservation was last cancelled.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            }
          }
        },
        "keyCount": {
          "description": "Number of keys created for the reservation.",
          "type": "integer"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "expectedServiceTime": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomStayReservation": {
          "description": "Boolean True if this reservation is reserving rooms. False if it is only reserving services.",
          "type": "boolean"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "computedReservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "walkInIndicator": {
          "description": "When true, indicates the reservation is for a guest that walks-in without a reservation. When false, the reservation is not a walk-in.",
          "type": "boolean"
        },
        "accessRestriction": {
          "description": "Indicates user restriction on the reservation based on the Access exclusion functionality such as Restriction on Changes, Cancellation or both.",
          "$ref": "#/definitions/resAccessRestrictionType"
        },
        "commissionPayoutTo": {
          "description": "If not null, reservation is considered to pay out commission to either Travel Agent, Source or both.",
          "$ref": "#/definitions/commissionPayoutToType"
        },
        "paymentMethod": {
          "description": "Payment Method.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "preRegistered": {
          "description": "Defines if the reservation is pre-registered or not.",
          "type": "boolean"
        },
        "openFolio": {
          "description": "Returns true when reservation has an open folio.",
          "type": "boolean"
        },
        "allowMobileCheckout": {
          "description": "Flag containing true or false value for reservation to be eligible for self-checkout by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile checkout yes / no. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "allowMobileViewFolio": {
          "description": "Attribute AllowMobileViewFolio is set to true when the reservation is eligible for viewing folio using mobile device.",
          "type": "boolean"
        },
        "optedForCommunication": {
          "description": "Attribute OptedForCommunication is set to true when the guest has opted for receiving communicationsl related to the reservation.",
          "type": "boolean"
        }
      }
    },
    "reservationIdList": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "stayInfoType": {
      "type": "object",
      "description": "Details on the Room Stay including Guest Counts, Time Span of this Room Stay, pointers to Res Guests, guest Memberships, Comments and Special Requests pertaining to this particular Room Stay and finally financial information related to the Room Stay, including Guarantee, Deposit and Payment and Cancellation Penalties.",
      "properties": {
        "arrivalDate": {
          "type": "string",
          "format": "date"
        },
        "departureDate": {
          "type": "string",
          "format": "date"
        },
        "originalTimeSpan": {
          "description": "The Original Time Span covers the Room Stay dates of the original reservation.",
          "$ref": "#/definitions/timeSpanType"
        },
        "expectedTimes": {
          "description": "The expected arrival, return and departure times of the guest.",
          "$ref": "#/definitions/resExpectedTimesType"
        },
        "adultCount": {
          "description": "A collection of Guest Counts associated with Room Stay.",
          "type": "integer"
        },
        "childCount": {
          "description": "A collection of Child Counts associated with Room Stay.",
          "type": "integer"
        },
        "roomClass": {
          "description": "Room class code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "description": "Room type code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "componentRoomType": {
          "description": "True indicates room type is a component type.",
          "type": "boolean"
        },
        "numberOfRooms": {
          "description": "Room Id",
          "type": "integer"
        },
        "roomId": {
          "description": "Room Id",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCode": {
          "description": "Rate plan code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateAmount": {
          "description": "Rate amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "points": {
          "description": "The Points contains the number of points used to book a particular room type.",
          "$ref": "#/definitions/pointsType"
        },
        "rateSuppressed": {
          "description": "Whether this rate should be suppressed from view",
          "type": "boolean"
        },
        "reservationBlock": {
          "description": "Key information about the block for this reservation.",
          "$ref": "#/definitions/reservationBlockType"
        },
        "bookingChannelCode": {
          "description": "Booking channel code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "linkCode": {
          "description": "Party code",
          "type": "string",
          "maxLength": 2000
        },
        "fixedRate": {
          "description": "True if the rate is a fixed rate, otherwise false",
          "type": "boolean"
        },
        "totalAmount": {
          "description": "The total amount charged for the Room Stay including additional occupant amounts and fees. If TaxInclusive is set to True, then taxes are included in the total amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "guarantee": {
          "description": "The guarantee information associated to the Room Stay. A maximum of 5 occurances are available for use depending on the context.",
          "$ref": "#/definitions/resGuaranteeType"
        },
        "promotion": {
          "description": "Promotion Codes",
          "$ref": "#/definitions/promotionType"
        },
        "marketCode": {
          "description": "Market code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "marketDescription": {
          "description": "Description of Market code",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "sourceCode": {
          "description": "Source of business",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceCodeDescription": {
          "description": "Description of the source of business.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "balance": {
          "description": "Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "roomTypeCharged": {
          "description": "Room type code that was charged",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "depositPayments": {
          "description": "A collection of deposit and/or payments for the Room Stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "guestServiceStatus": {
          "description": "Service Status of In House guest like DND or MUP",
          "$ref": "#/definitions/guestHousekeepingServiceRequestType"
        },
        "scheduledCheckoutTime": {
          "description": "Indicates that this reservation is scheduled for automated check out.",
          "type": "string",
          "format": "date"
        },
        "roomNumberLocked": {
          "description": "When true, indicates a room number cannot be changed. When false, indicates a room number may be changed.",
          "type": "boolean"
        },
        "pseudoRoom": {
          "description": "True indicates as pseudo room type. This is usually used for a posting master reservation.",
          "type": "boolean"
        },
        "assignedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        },
        "upgradedByAI": {
          "description": "Represents the room was assigned by AI Room Assignment.",
          "type": "boolean"
        }
      }
    },
    "timeSpanType": {
      "type": "object",
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "duration": {
          "type": "string"
        }
      }
    },
    "resExpectedTimesType": {
      "type": "object",
      "description": "Holds the Arrival and Departure Time Information",
      "properties": {
        "reservationExpectedArrivalTime": {
          "description": "Arrival Time",
          "type": "string",
          "format": "date-time"
        },
        "reservationExpectedDepartureTime": {
          "description": "Departure Time",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pointsType": {
      "type": "object",
      "description": "The Redeem Points contains the number of points required to book a room type.",
      "properties": {
        "awardsType": {
          "description": "Awards type for the award type rate code.",
          "type": "string"
        },
        "points": {
          "description": "No of points required to book this Room Stay.",
          "type": "integer"
        }
      }
    },
    "reservationBlockType": {
      "type": "object",
      "description": "Key information about the block for a reservation.",
      "properties": {
        "blockIdList": {
          "description": "Collection of unique block identifiers for the reservation.",
          "$ref": "#/definitions/blockIdList"
        },
        "blockName": {
          "description": "The Name of the block that is attached to the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "hotelId": {
          "description": "This is the HotelCode of the Block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "blockIdList": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "resGuaranteeType": {
      "type": "object",
      "description": "Validations type record returned after Validations are done.",
      "properties": {
        "guaranteeCode": {
          "description": "Guarantee Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "shortDescription": {
          "description": "Guarantee Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "onHold": {
          "description": "Guarantee Code.",
          "type": "boolean"
        }
      }
    },
    "promotionType": {
      "type": "object",
      "description": "Type to specify a rate promotion. Usually attached to a reservation to indicate a specific promotion is applied to the reservation.",
      "properties": {
        "promotionCode": {
          "description": "Promotion code associated with the rate plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "promotionName": {
          "description": "Promotion code Name associated with the rate plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "couponCode": {
          "description": "Promotion Coupon Code when promotion is setup to have a valid coupon code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "guestHousekeepingServiceRequestType": {
      "type": "string",
      "description": "Possible values for the Guest Service Status.",
      "enum": [
        "DoNotDisturb",
        "MakeUpRoom",
        "NoStatusSelected"
      ]
    },
    "resGuestInfoType": {
      "type": "object",
      "description": "Specifies Company or Travel Agent profile using IATA or Corp. No.",
      "properties": {
        "membership": {
          "description": "The Membership object identifying the frequent customer reward program.",
          "$ref": "#/definitions/membershipInfoType"
        },
        "namePrefix": {
          "description": "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)",
          "$ref": "#/definitions/namePrefixType"
        },
        "givenName": {
          "description": "Given name, first name or names",
          "$ref": "#/definitions/givenNameType"
        },
        "alternateGivenName": {
          "description": "Alternate given name, first name or names",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "middleName": {
          "description": "The middle name of the person name",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "surnamePrefix": {
          "description": "e.g \"van der\", \"von\", \"de\"",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "surname": {
          "description": "Family name, last name.",
          "$ref": "#/definitions/surnameType"
        },
        "alternateSurname": {
          "description": "Alternate family name, last name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "fullName": {
          "description": "Full display name",
          "type": "string"
        },
        "alternateFullName": {
          "description": "Altername full display name",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Phone number",
          "$ref": "#/definitions/phoneNumberType"
        },
        "email": {
          "description": "Email address",
          "$ref": "#/definitions/basicEmailType"
        },
        "birthDate": {
          "description": "Date of birth",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nationality": {
          "description": "Affiliation or ethnicity to a particular country.",
          "$ref": "#/definitions/countryNameType"
        },
        "vip": {
          "description": "The supplier's ranking of the customer (e.g., VIP, numerical ranking).",
          "$ref": "#/definitions/vIPType"
        },
        "address": {
          "description": "Address information that is attached to the reservation guest",
          "$ref": "#/definitions/addressSearchType"
        },
        "anonymization": {
          "description": "Provides information about the guest's anonymization status",
          "$ref": "#/definitions/anonymizationType"
        },
        "accompanyGuests": {
          "description": "List of guest names that are accompanying the reservation guest",
          "$ref": "#/definitions/resAccompanyGuestListType"
        },
        "externalInfo": {
          "description": "External information about the guest associated with the reservation.",
          "$ref": "#/definitions/resGuestExternalInfoType"
        },
        "guestLastStayInfo": {
          "description": "Contains information regarding the last stay of this guest.",
          "$ref": "#/definitions/guestLastStayInfoType"
        },
        "guestRestrictedCode": {
          "description": "Guest profile restricted reason code",
          "type": "string"
        },
        "guestRestrictedReasonDesc": {
          "description": "Guest profile restricted reason description",
          "type": "string"
        },
        "guestRestricted": {
          "description": "True indicates there are restrictions associated with the current profile.",
          "type": "boolean"
        },
        "registrationCardNo": {
          "description": "Unique identifier of the police registration card number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameType": {
          "$ref": "#/definitions/nameTypeType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "membershipInfoType": {
      "type": "object",
      "description": "The Membership object identifies the frequent customer reward program.",
      "properties": {
        "membershipId": {
          "description": "Membership ID (Unique ID from the memberships table).",
          "type": "number"
        },
        "programCode": {
          "description": "The code or name of the membership program ('Hertz', 'AAdvantage', etc.).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bonusCode": {
          "description": "The code or name of the bonus program. BonusCode can be used to indicate the level of membership (Gold Club, Platinum member, etc.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "membershipTypeDesc": {
          "description": "The description of the ProgramCode.(Delta Previlige for code DP)",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "membershipLevelDesc": {
          "description": "The description of the Bonus Code.(Platinum for code P)",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "accountId": {
          "description": "The account identification number for this particular member in this particular program.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "membershipLevel": {
          "description": "The code or name of the membership level and indicates the level of membership (Gold Club, Platinum member, etc.). This is same as the BonusCode.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        }
      }
    },
    "namePrefixType": {
      "type": "string",
      "description": "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)",
      "minLength": 0,
      "maxLength": 40
    },
    "givenNameType": {
      "type": "string",
      "description": "Given name, first name or names",
      "minLength": 0,
      "maxLength": 40
    },
    "surnameType": {
      "type": "string",
      "description": "Family name, last name.",
      "minLength": 0,
      "maxLength": 40
    },
    "phoneNumberType": {
      "type": "string",
      "description": "Phone number",
      "minLength": 0,
      "maxLength": 40
    },
    "basicEmailType": {
      "type": "string",
      "description": "Email address",
      "minLength": 0,
      "maxLength": 2000
    },
    "countryNameType": {
      "type": "object",
      "description": "Code for a country or a nationality.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Used for Character Strings, length 0 to 200.",
          "minLength": 0,
          "maxLength": 200
        },
        "code": {
          "description": "Code for a country or a nationality.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "vIPType": {
      "type": "object",
      "description": "The supplier's ranking of the customer.",
      "properties": {
        "vipCode": {
          "description": "VIP Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vipDescription": {
          "description": "VIP Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "addressSearchType": {
      "type": "object",
      "description": "Address Details such as city, state, country, postal code etc.",
      "properties": {
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "streetAddress": {
          "description": "First Line of Street Address. For profile search it matches the first Address line.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "excludeNoCity": {
          "description": "When true indicates that only profiles with city will be fetched.",
          "type": "boolean"
        }
      }
    },
    "anonymizationType": {
      "type": "object",
      "description": "Provides information about guest's anonymization status.",
      "properties": {
        "anonymizationStatus": {
          "description": "Status of anonymization such as Requested or Anonymized.",
          "$ref": "#/definitions/anonymizationStatusType"
        },
        "anonymizationDate": {
          "description": "Date and Time when the guest was anonymized.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "anonymizationStatusType": {
      "type": "string",
      "description": "Guest has been anonymized.",
      "enum": [
        "Requested",
        "Anonymized"
      ]
    },
    "resAccompanyGuestListType": {
      "type": "array",
      "description": "Collection of accompany guests",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAccompanyGuestInfoType"
      }
    },
    "resAccompanyGuestInfoType": {
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        },
        "registrationCardNo": {
          "description": "Unique identifier of the police registration card number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
          "$ref": "#/definitions/profileIdList"
        }
      }
    },
    "profileIdList": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "resGuestExternalInfoType": {
      "type": "object",
      "description": "Specifies Company or Travel Agent profile using IATA or Corp. No.",
      "properties": {
        "givenName": {
          "description": "Given name, first name or names",
          "$ref": "#/definitions/givenNameType"
        },
        "surname": {
          "description": "Family name, last name.",
          "$ref": "#/definitions/surnameType"
        }
      }
    },
    "guestLastStayInfoType": {
      "type": "object",
      "description": "Contains last stay related details of the guest.",
      "properties": {
        "lastStayDate": {
          "description": "Guest's last stay date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastStayRoom": {
          "description": "Room Number where the guest stayed.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "lastStayRate": {
          "description": "The Rate amount of the guest's last stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalStay": {
          "description": "The total number of previous stay of the guest.",
          "type": "integer"
        }
      }
    },
    "nameTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Agent",
        "Contact",
        "Source",
        "Group",
        "Employee",
        "Hotel",
        "Purge"
      ]
    },
    "resSharedGuestListType": {
      "type": "array",
      "description": "Collection of shared guest reservations.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resSharedGuestInfoType"
      }
    },
    "resSharedGuestInfoType": {
      "type": "object",
      "description": "Contains information regarding the share reservation.",
      "properties": {
        "profileId": {
          "$ref": "#/definitions/profileId"
        },
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        }
      }
    },
    "profileId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "resAttachedProfileListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAttachedProfileType"
      }
    },
    "resAttachedProfileType": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Attached profile name",
          "type": "string"
        },
        "profileIdList": {
          "description": "Collection of unique profile identifiers",
          "$ref": "#/definitions/profileIdList"
        },
        "reservationProfileType": {
          "$ref": "#/definitions/resProfileTypeType"
        }
      }
    },
    "resProfileTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Group",
        "TravelAgent",
        "Source",
        "ReservationContact",
        "BillingContact",
        "Addressee"
      ]
    },
    "reservationPaymentMethodType": {
      "type": "object",
      "properties": {
        "paymentCard": {
          "$ref": "#/definitions/resPaymentCardType"
        },
        "balance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "authorizationRule": {
          "$ref": "#/definitions/authorizationRuleType"
        },
        "emailFolioInfo": {
          "description": "Information on an email for the customer.",
          "type": "object",
          "properties": {
            "email": {
              "description": "eMail deatils for the profile.",
              "$ref": "#/definitions/emailType"
            },
            "emailFolio": {
              "type": "boolean"
            },
            "id": {
              "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "type": {
              "description": "A reference to the type of object defined by the UniqueID element.",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            }
          }
        },
        "paymentMethod": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "folioView": {
          "type": "integer"
        }
      }
    },
    "resPaymentCardType": {
      "type": "object",
      "description": "Information on a credit card for the customer.",
      "properties": {
        "cardId": {
          "description": "credit card id",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "currentAuthorizedAmount": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "approvalAmountNeeded": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "cardType": {
          "description": "Indicates the type of credit card from a defined list",
          "$ref": "#/definitions/cardTypeType"
        },
        "userDefinedCardType": {
          "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
          "type": "string",
          "minLength": 0,
          "maxLength": 2
        },
        "cardNumber": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "cardNumberMasked": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "cardNumberLast4Digits": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "expirationDate": {
          "description": "Expiration date of the credit card",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expirationDateMasked": {
          "description": "Masked Expiration date of the credit card",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "expirationDateExpired": {
          "type": "boolean"
        },
        "cardHolderName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "attachCreditCardToProfile": {
          "description": "Attach the credit card to profile.",
          "type": "boolean"
        },
        "processing": {
          "description": "This contains information on whether EFT is enabled. A value of 'C' indicates EFT is enabled and 'M' indicates manual authorization is available for this payment card type.",
          "$ref": "#/definitions/cardProcessingType"
        },
        "swiped": {
          "type": "boolean"
        },
        "cardPresent": {
          "description": "Flag to determine if the credit card was swiped/manually entered , This element is only used when PAYMENT SERVICE DIRECTIVE(PSD) Opera Control is active.",
          "type": "boolean"
        },
        "cardOrToken": {
          "description": "This contains information on whether credit card is tokenized (token enabled). A value of 'Token' indicates credit card is token enabled and 'CardNumber' indicates non token environment for this payment card type.",
          "$ref": "#/definitions/cardNumberTypeType"
        },
        "citId": {
          "description": "Customer Initiated Transaction(CIT) Id for Credit Cards. This is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        }
      }
    },
    "cardTypeType": {
      "type": "string",
      "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
      "enum": [
        "Ab",
        "Am",
        "Ax",
        "Cb",
        "Dc",
        "Ds",
        "Dt",
        "Ec",
        "Er",
        "Jc",
        "Jl",
        "Mc",
        "Nb",
        "So",
        "St",
        "Sw",
        "Va",
        "Xy",
        "Zz",
        "Cp",
        "Cu"
      ]
    },
    "cardProcessingType": {
      "type": "string",
      "enum": [
        "Eft",
        "Manual"
      ]
    },
    "cardNumberTypeType": {
      "type": "string",
      "description": "Simple type for indicating if credit card number is tokenized.",
      "enum": [
        "CardNumber",
        "Token"
      ]
    },
    "authorizationRuleType": {
      "type": "object",
      "description": "Configured rule for computing the amount to authorize.",
      "properties": {
        "code": {
          "description": "The authorization rule code.",
          "type": "integer",
          "pattern": "[0-9]{1,9}"
        },
        "amount": {
          "description": "The amount applicable to the authorization rule.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "percent": {
          "description": "A percentage value if the authorization rule is percentage based.",
          "type": "number"
        }
      }
    },
    "emailType": {
      "type": "object",
      "description": "Information on an email for the customer.",
      "properties": {
        "emailAddress": {
          "description": "Defines the e-mail address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "type": {
          "description": "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Describes the Type code",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "emailFormat": {
          "description": "Supported Email format.",
          "type": "string",
          "enum": [
            "Html",
            "Text"
          ]
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "reservationFolioWindowsType": {
      "type": "array",
      "description": "Collection of reservation folio windows.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationFolioWindowType"
      }
    },
    "reservationFolioWindowType": {
      "type": "object",
      "description": "Folio window view which holds the set of folios for a reservation.",
      "properties": {
        "payeeInfo": {
          "description": "The window's configured payee information.",
          "$ref": "#/definitions/payeeInfoType"
        },
        "balance": {
          "description": "Running balance of the window.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "paymentMethod": {
          "description": "Payment Method Type",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioWindowNo": {
          "type": "integer"
        }
      }
    },
    "payeeInfoType": {
      "type": "object",
      "description": "Payee information.",
      "properties": {
        "payeeId": {
          "description": "Opera name id of the payee.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "payeeName": {
          "description": "Name of the payee.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "payeeAddress": {
          "description": "Address of the payee.",
          "$ref": "#/definitions/addressInfoType"
        },
        "payeeAddressCount": {
          "description": "Payee multiple address count.",
          "type": "integer"
        },
        "payeeReferenceCurrency": {
          "description": "Reference currency of the payee.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "payeeAccountInfo": {
          "description": "AR account short info of the payee.",
          "$ref": "#/definitions/aRAccountShortInfoType"
        },
        "payeeTaxNumber": {
          "description": "The tax number of the payee.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "addressInfoType": {
      "type": "object",
      "description": "Provides address information.",
      "properties": {
        "address": {
          "description": "Address details for the profile.",
          "$ref": "#/definitions/addressType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "addressType": {
      "type": "object",
      "description": "Provides address information.",
      "properties": {
        "isValidated": {
          "description": "Indicator to define if the Address is validated by the Address Validation System.",
          "type": "boolean"
        },
        "addressLine": {
          "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "type": "array",
          "maxItems": 4,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 80
          }
        },
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "cityExtension": {
          "description": "Post Office City Extension Code number. City Extension mainly used for UK addresses.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "county": {
          "description": "County or District Name (e.g., Fairfax). This is read only.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "type": {
          "description": "Defines the type of address (e.g. home, business, other).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Describes the type code",
          "type": "string"
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "updateReservations": {
          "description": "Indicates whether to update the reservations or not. If true and the address is primary, then all associated active reservations will be updated with the new primary address.",
          "type": "boolean"
        },
        "barCode": {
          "description": "The postal barcode for the address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "aRAccountShortInfoType": {
      "type": "object",
      "description": "Accounts Receivabales Account details type charged for batched posting.",
      "properties": {
        "accountName": {
          "description": "Name of the AR Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "accountId": {
          "description": "The unique ID for the Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountNo": {
          "description": "The Account Number for the Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "status": {
          "description": "The status of the account.",
          "$ref": "#/definitions/aRAccountStatusType"
        }
      }
    },
    "aRAccountStatusType": {
      "type": "object",
      "description": "Type for the Account Status. Status can be restricted and a message/description added to the Account.",
      "properties": {
        "restriction": {
          "description": "The Restriction Code added on the Account. This is available when the functionality for adding restriction codes is ON.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "User defined status message on the Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "restricted": {
          "description": "Flag to indicate if the Account is restricted.",
          "type": "boolean"
        }
      }
    },
    "indicatorsType": {
      "type": "array",
      "description": "Collection of lamp indicators.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/indicatorType"
      }
    },
    "indicatorType": {
      "type": "object",
      "description": "Lamp indicator Type.",
      "properties": {
        "indicatorName": {
          "description": "Name of the indicator.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "count": {
          "description": "Indicates number of occurrences of the indicator.",
          "type": "integer"
        }
      }
    },
    "housekeepingRoomStatusType": {
      "type": "string",
      "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
      "enum": [
        "Clean",
        "Dirty",
        "Pickup",
        "Inspected",
        "OutOfOrder",
        "OutOfService"
      ]
    },
    "searchMatchesType": {
      "type": "array",
      "description": "List of Generic Name-Value-Pair Parameters used for super search matches.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/searchMatchType"
      }
    },
    "searchMatchType": {
      "type": "object",
      "description": "Search match indicating attribute and the matching value.",
      "properties": {
        "attribute": {
          "description": "Search match attribute.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "value": {
          "description": "Search match value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "sourceOfSaleType": {
      "type": "object",
      "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
      "properties": {
        "sourceType": {
          "description": "Type of entity/channel who made the reservation..",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "sourceCode": {
          "description": "The entity/channel who made the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "waitlistResType": {
      "type": "object",
      "description": "Information regarding why reservation is being /has been waitlisted.",
      "properties": {
        "reasonDescription": {
          "description": "Waitlist Reason Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "priorityDescription": {
          "description": "Waitlist priority Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "description": {
          "description": "Description why the reservation is being /has been waitlisted.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "reasonCode": {
          "description": "Waitlist Reason Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "priorityCode": {
          "description": "Waitlist Priority Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "telephone": {
          "description": "Guest telephone number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "reservationQueueInformationType": {
      "type": "object",
      "description": "Information regarding the Date, Duration and Priority of the reservation on Queue for Check in.",
      "properties": {
        "timeSpan": {
          "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
          "type": "object",
          "properties": {
            "startDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "endDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "duration": {
              "type": "string"
            },
            "durationInSeconds": {
              "description": "The total duration, in seconds, the reservation is on Queue.",
              "type": "integer"
            }
          }
        },
        "guestTextInfo": {
          "description": "Information for the message sent to the user",
          "$ref": "#/definitions/queueTextInfoType"
        },
        "priority": {
          "description": "The Queue Priority given to this reservation.",
          "type": "integer"
        },
        "averageQueueTimeToCheckIn": {
          "description": "The average time, in seconds, a reservation was on queue prior to Check-In.",
          "type": "integer"
        },
        "averageQueueTimeCurrentReservations": {
          "description": "The average time, in seconds, of the reservations currently in queue.",
          "type": "integer"
        },
        "queueDate": {
          "description": "The Business date on which the reservation was due to arrive and is currently placed on Queue for Check In.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "queueTextInfoType": {
      "type": "object",
      "description": "Information regarding the message sent to guest.",
      "properties": {
        "sentTime": {
          "description": "Time the text was last sent to the user.",
          "type": "string",
          "format": "date-time"
        },
        "sentBy": {
          "description": "User name of the user who sent message.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "resHousekeepingType": {
      "type": "object",
      "description": "Holds housekeeping turndown service information for the room.",
      "properties": {
        "instructions": {
          "description": "Turndown instructions for the room.",
          "type": "string"
        },
        "facilityTaskInfo": {
          "description": "The facility task applicable for the current day. This will be information only and not used for any updates.",
          "$ref": "#/definitions/facilityTaskType"
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "turndownRequested": {
          "description": "Indicates whether guest wants turndown facility or not.",
          "type": "boolean"
        },
        "serviceTime": {
          "description": "This is the Turndown room service time.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expectedServiceTime": {
          "description": "Expected Start Time for housekeeping task(s).",
          "type": "string"
        },
        "roomStatus": {
          "description": "Current room status. Current room status is populated only if room is assigned to the reservation and reservation is due in or in house.",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        }
      }
    },
    "facilityTaskType": {
      "type": "object",
      "description": "Information regarding facility task on a reservation.",
      "properties": {
        "task": {
          "description": "The Task Code.",
          "$ref": "#/definitions/housekeepingTaskCodeType"
        },
        "supplies": {
          "description": "Supplies associated with the task.",
          "$ref": "#/definitions/facilityCodesType"
        },
        "date": {
          "description": "The Date on which the task is applicable.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "housekeepingTaskCodeType": {
      "type": "object",
      "description": "Information related to a Task Code. Task Codes are used to generate task sheets in Rooms Management.",
      "properties": {
        "description": {
          "description": "Description of the Task Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "instructions": {
          "description": "Instructions for this Task Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "facilityDepartureTask": {
          "description": "Indicates if this task code is the default departure task for Facility Tasks. This requires",
          "type": "boolean"
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Property where this task code is configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "The Code for the task.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sequence": {
          "description": "Ordering sequence for display.",
          "type": "integer"
        }
      }
    },
    "facilityCodesType": {
      "type": "array",
      "description": "List of the facility codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/facilityCodeType"
      }
    },
    "facilityCodeType": {
      "type": "object",
      "description": "Facility Housekeeping Code, its description and quantity.",
      "properties": {
        "description": {
          "description": "Facility Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "quantity": {
          "description": "Signifies the quantity.",
          "type": "integer"
        },
        "code": {
          "description": "Facility code value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "resCashieringType": {
      "type": "object",
      "description": "Cashiering Information for the reservation.",
      "properties": {
        "revenuesAndBalances": {
          "description": "Revenues and Balances Amount summary for the reservation.",
          "$ref": "#/definitions/resRevenueBalanceType"
        },
        "billingPrivileges": {
          "description": "Billing privileges set on the reservation.",
          "$ref": "#/definitions/billingPrivilegesType"
        },
        "taxType": {
          "description": "This stores the code for the type of tax calculation especially with tax exemption, etc.",
          "$ref": "#/definitions/reservationTaxTypeInfo"
        },
        "bedTaxReporting": {
          "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
          "$ref": "#/definitions/bedTaxReportingType"
        },
        "folioTexts": {
          "description": "Additional text fields to display on the folio.",
          "$ref": "#/definitions/folioTextsType"
        },
        "periodicFolio": {
          "description": "Information regarding periodic folios set on the reservation.",
          "$ref": "#/definitions/resPeriodicFolioType"
        },
        "compAccounting": {
          "description": "Information regarding comp accounting on the reservation.",
          "$ref": "#/definitions/resCompAccountingType"
        },
        "reservationPreConfiguredRoutingInstruction": {
          "description": "Information regarding the selected preconfigured routing instruction on the reservation.",
          "$ref": "#/definitions/resPreConfiguredRoutingInstrType"
        },
        "financiallyResponsible": {
          "description": "The guest from whom payment has to be recovered (direct guest).",
          "type": "boolean"
        },
        "proratedBilling": {
          "description": "In case of Appartment style billing indicates whether a prorated amount should be used for an Apartment Style Billing rate.",
          "type": "boolean"
        },
        "lastRoomAndTaxPostedDate": {
          "description": "Date of the last Room And Tax posting. Used primarily to know the date in case of Advance Billing.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reverseCheckInAllowed": {
          "description": "This attribute is to verify if reverse check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "reverseAdvanceCheckInAllowed": {
          "description": "This attribute is to verify if reverse advance check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "transactionsPosted": {
          "description": "Specifies whether reservation has a financial transaction associated with it.",
          "type": "boolean"
        }
      }
    },
    "resRevenueBalanceType": {
      "type": "object",
      "description": "Revenue and Balance Amount summary for the reservation.",
      "properties": {
        "totalFixedCharge": {
          "description": "Total Fixed Charges on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalPayment": {
          "description": "Total payment received for the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "roomRevenue": {
          "description": "Room Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "foodAndBevRevenue": {
          "description": "Food and Beverage Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "otherRevenue": {
          "description": "Other Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "nonRevenue": {
          "description": "Total Non Revenue posted on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalRevenue": {
          "description": "Total Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Balance amount on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "billingPrivilegesType": {
      "type": "object",
      "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
      "properties": {
        "postingRestriction": {
          "description": "Flag used by interface program during check in.",
          "type": "boolean"
        },
        "preStayCharging": {
          "description": "Indicates if the reservation has charging privileges before arrival.",
          "type": "boolean"
        },
        "postStayCharging": {
          "description": "Indicates if the reservation has charging privileges after checkout.",
          "type": "boolean"
        },
        "folioCloseDate": {
          "description": "Date when folio was closed. This works with PostStayCharging flag.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "scheduledCheckout": {
          "description": "Indicates if the guest is scheduled for automatic check out.",
          "type": "boolean"
        },
        "scheduledCheckoutTime": {
          "description": "Time of automatic check out if guest is schedule for automatic check out.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "directBillAuthorized": {
          "description": "If Direct bill is authorized this will hold User ID who authorized it.",
          "type": "boolean"
        },
        "videoCheckout": {
          "description": "Indicates if the guest can do video checkout",
          "type": "boolean"
        },
        "allowAutoCheckin": {
          "description": "Indicated if a new reservation should be created and automatically checked in whenever the room is checked out. Available for pseudo room types only.",
          "type": "boolean"
        },
        "autoSettlement": {
          "description": "Indicates if the is a candidate for auto folio settlement.",
          "type": "boolean"
        },
        "autoSettlementType": {
          "description": "The folio settlement type for auto folio settlement.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "autoSettlementFreq": {
          "description": "The interval of days between each auto folio settlement.",
          "type": "integer"
        },
        "creditLimitAutoPay": {
          "description": "Indicates if the reservation will be included in the Automatic Credit Limit Overages process and also be listed in the Credit Limit Overages screen results.",
          "type": "boolean"
        }
      }
    },
    "reservationTaxTypeInfo": {
      "type": "object",
      "description": "Provides information about the Tax Type.",
      "properties": {
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Code of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "collectingAgentTax": {
          "description": "A boolean flag for Collecting Agent Tax",
          "type": "boolean"
        },
        "printAutoAdjust": {
          "description": "Print auto adjust information for this tax type on the tax exempt report.",
          "type": "boolean"
        },
        "reportExemptDays": {
          "description": "Number of days after which the guest will be tax exempt. Only used for tax exempt report.",
          "type": "integer"
        },
        "reportTaxPercentage": {
          "description": "Tax percentage. Only used for tax exempt report.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "minimumLengthOfStay": {
          "description": "Minimun Length of Stay.",
          "type": "integer"
        },
        "taxExemptNo": {
          "description": "Tax exempt number on the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "bedTaxReportingType": {
      "type": "object",
      "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
      "properties": {
        "taxRegistrationNo": {
          "description": "Tax Registration Number for Maldives Bed Tax Reporting.",
          "type": "number"
        },
        "visaNumber": {
          "description": "Visa number used for Maldives Bed Tax Reporting",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "visaIssueDate": {
          "description": "Visa Issue Date used for Maldives Bed Tax Reporting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaExpiryDate": {
          "description": "Visa Expiration Date used for Maldives Bed Tax Reporting",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "taxableDays": {
          "description": "Number of days for which the Maldives tax is applicable.",
          "type": "integer"
        }
      }
    },
    "folioTextsType": {
      "type": "array",
      "description": "This stores the description for the type of tax calculation especially with tax exemption, etc.",
      "maxItems": 2,
      "items": {
        "type": "object",
        "properties": {
          "text": {
            "description": "Additional text field to display on the folio.",
            "type": "string",
            "minLength": 0,
            "maxLength": 50
          },
          "row": {
            "description": "Row number of the additional text.",
            "type": "integer"
          }
        }
      }
    },
    "resPeriodicFolioType": {
      "type": "object",
      "description": "Information regarding periodic folios set on the reservation.",
      "properties": {
        "lastSettlementDate": {
          "description": "Latest date when a direct bill settlement was automatically done using the \"Direct Bill Batch Folios\" option.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastFolioDate": {
          "description": "Latest date when a folio was printed using the \"Periodic Batch Folios\" option",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "frequency": {
          "description": "Frequency in number of days when folios should be printed for this reservation.",
          "type": "integer"
        }
      }
    },
    "resCompAccountingType": {
      "type": "object",
      "description": "Information regarding comp accounting on the reservation.",
      "properties": {
        "compType": {
          "description": "Code used to identify the casino comp type and ranking of a guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "authorizer": {
          "description": "ID of the employee who will act as the host for this guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "compPostings": {
          "description": "Indicates if the Comp Billing/posting Exist",
          "type": "string",
          "minLength": 0,
          "maxLength": 5
        }
      }
    },
    "resPreConfiguredRoutingInstrType": {
      "type": "object",
      "description": "Instruction to attach Pre-Configured Routing Instructions to a Reservation.",
      "properties": {
        "authorizerInfo": {
          "description": "The authorizer information for Promotion Code with attached Complimentary Routing",
          "$ref": "#/definitions/authorizerInfoType"
        },
        "ratePlanCode": {
          "description": "Rate Code with attached Routing Instruction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "profileType": {
          "description": "Profile Type with attached Routing Instruction.",
          "$ref": "#/definitions/resProfileTypeType"
        },
        "promotionCode": {
          "description": "Promotion Code with attached Complimentary Routing.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "authorizerInfoType": {
      "type": "object",
      "description": "Authorizer Information",
      "properties": {
        "authorizerId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "authorizerUserName": {
          "description": "Application user name of the authorizer",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "authorizerName": {
          "description": "Full name of the authorizer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "authorizerRateCode": {
          "description": "Rate code of the authorizer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "inheritAuthorizerRateCode": {
          "description": "Indicates whether user has the choice to have reservation inherit rate code from the authorizer.",
          "type": "boolean"
        }
      }
    },
    "taxTypeType": {
      "type": "object",
      "description": "Provides information about the Tax Type.",
      "properties": {
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Code of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "collectingAgentTax": {
          "description": "A boolean flag for Collecting Agent Tax",
          "type": "boolean"
        },
        "printAutoAdjust": {
          "description": "Print auto adjust information for this tax type on the tax exempt report.",
          "type": "boolean"
        },
        "reportExemptDays": {
          "description": "Number of days after which the guest will be tax exempt. Only used for tax exempt report.",
          "type": "integer"
        },
        "reportTaxPercentage": {
          "description": "Tax percentage. Only used for tax exempt report.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "minimumLengthOfStay": {
          "description": "Minimun Length of Stay.",
          "type": "integer"
        }
      }
    },
    "reservationDepositType": {
      "type": "object",
      "description": "Reservation Deposit Type.",
      "properties": {
        "amountRequired": {
          "description": "Deposit Amount Required.",
          "type": "number"
        },
        "amountPaid": {
          "description": "Deposit Amount Paid.",
          "type": "number"
        },
        "amountOwed": {
          "description": "Deposit Amount Owed.",
          "type": "number"
        },
        "dueDate": {
          "description": "Deposit Due Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "postingDate": {
          "description": "Deposit Posting Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hasPaid": {
          "description": "Resolves whether reservation has paid deposit.",
          "type": "boolean"
        },
        "hasOutstanding": {
          "description": "Resolves whether reservation has outstanding deposit.",
          "type": "boolean"
        }
      }
    },
    "reservationAllowedActionsType": {
      "type": "array",
      "description": "Allowed action.",
      "maxItems": 11,
      "items": {
        "$ref": "#/definitions/reservationAllowedActionType"
      }
    },
    "reservationAllowedActionType": {
      "type": "string",
      "description": "Flag indicating whether the Enrollment is in progress or not for the Profile associated with this Reservation.",
      "enum": [
        "Cancel",
        "Move",
        "PreCharge",
        "PostCharge",
        "FacilitySchedule",
        "Upsell",
        "PreCheckIn",
        "PostToNoShowCancel",
        "NoShow",
        "NameChange",
        "Discount",
        "EnrollToPrimaryMembership",
        "EnrollInProgress"
      ]
    },
    "reservationInterfaceStatusType": {
      "type": "object",
      "description": "Hotel Interface Type for a reservation and status of the various services",
      "properties": {
        "roomExtension": {
          "description": "Identifier for the room extension",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelInterface": {
          "description": "Hotel interface information for the reservation",
          "$ref": "#/definitions/hotelInterfaceType"
        },
        "interfaceRights": {
          "description": "Contains a list of status/rights for the various services under this interface",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/interfaceRightsStatusType"
          }
        }
      }
    },
    "hotelInterfaceType": {
      "type": "object",
      "properties": {
        "interfaceId": {
          "description": "Unique DB internal number of a Hotel Interface record.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "Hotel Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "interfaceName": {
          "description": "Name of the Hotel Interface",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "interfaceType": {
          "description": "Three letter code for each interface that identifies the interface.",
          "$ref": "#/definitions/hotelInterfaceTypeType"
        },
        "logo": {
          "description": "Hotel Interface Logo. On the database, this is also referred as DBF Logo. This is a three letter code followed by an underscore(_). This tells us which DBF files and log files with the prefix that IFC7 is going to create.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "machineName": {
          "description": "Unique machine name of the running IFC.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "status": {
          "description": "The current status of the IFC.",
          "$ref": "#/definitions/hotelInterfaceStatusType"
        },
        "activeFlag": {
          "description": "Indicator if the Hotel Interface is active or not. This is different from the Interface Status, which is either STOPPED or RUNNING.",
          "type": "boolean"
        }
      }
    },
    "hotelInterfaceTypeType": {
      "type": "string",
      "enum": [
        "Bms",
        "Cas",
        "Ccw",
        "Dls",
        "Eft",
        "Exp",
        "Mak",
        "Mbs",
        "Msc",
        "Pbx",
        "Pos",
        "Svs",
        "Tik",
        "Vid",
        "Vms",
        "Www",
        "Xml"
      ],
      "description": "XML Posting Interface"
    },
    "hotelInterfaceStatusType": {
      "type": "string",
      "description": "Status of the Hotel Interface either STOPPED or RUNNING.",
      "enum": [
        "Stopped",
        "Running",
        "Waiting",
        "StopInitiated",
        "StartInitiated",
        "RebootInitiated",
        "Other"
      ]
    },
    "interfaceRightsStatusType": {
      "type": "object",
      "properties": {
        "right": {
          "description": "Internal code for each allowed right of a Hotel Interface record.",
          "type": "integer"
        },
        "statusCode": {
          "description": "User defined code for an Interface Right.",
          "type": "string",
          "minLength": 0,
          "maxLength": 5
        },
        "description": {
          "description": "User defined description for an Interface Right.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "category": {
          "description": "Category code of this interface right.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        }
      }
    },
    "reservationTurndownInfoType": {
      "type": "object",
      "description": "Turndown information for a reservation",
      "properties": {
        "allowed": {
          "description": "Indicates if turndown is allowed or not",
          "type": "boolean"
        },
        "status": {
          "description": "Indicates turndown status, values could be required, not required, completed",
          "$ref": "#/definitions/turndownStatusType"
        }
      }
    },
    "turndownStatusType": {
      "type": "string",
      "description": "Simple type for turndown status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Required, Not Required and Completed.",
      "enum": [
        "Required",
        "NotRequired",
        "Compeleted"
      ]
    },
    "resMobileNotificationsType": {
      "type": "object",
      "description": "Contains the status of Room Ready and Key Ready messages.",
      "properties": {
        "roomReady": {
          "description": "Denotes the status of Room Ready message. It can have one of the values:PENDING, COMPLETED or FAILED",
          "$ref": "#/definitions/communicationStatusType"
        },
        "keyReady": {
          "description": "Denotes the status of Key Ready message. It can have one of the values:PENDING, COMPLETED or FAILED",
          "$ref": "#/definitions/communicationStatusType"
        },
        "checkoutMessageReceived": {
          "description": "Indicates if the Mobile checkout message is received.",
          "type": "boolean"
        },
        "requiresAction": {
          "description": "Indicates if user action is required. The action could be for sending Room Ready or Key Ready Notification. It could also be for initiating Checkout",
          "type": "boolean"
        },
        "errorMessage": {
          "description": "Error message when Mobile Notification has failed.",
          "type": "string"
        }
      }
    },
    "communicationStatusType": {
      "type": "string",
      "description": "Enum to denote the Status of Readiness messages sent to Guest Devices.",
      "enum": [
        "Pending",
        "Completed",
        "Failed",
        "Sent",
        "Received",
        "Cancelled",
        "PendingAvailability"
      ]
    },
    "resCommunicationType": {
      "type": "object",
      "description": "Communication details for a reservation.",
      "properties": {
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        }
      }
    },
    "telephoneInfoType": {
      "type": "object",
      "description": "Information on a telephone number for the customer.",
      "properties": {
        "telephone": {
          "description": "Phone details for the profile.",
          "$ref": "#/definitions/telephoneType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "telephoneType": {
      "type": "object",
      "description": "Information on a telephone number for the customer.",
      "properties": {
        "phoneTechType": {
          "description": "Indicates type of technology associated with this telephone number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "phoneUseType": {
          "description": "Describes the type of telephone number, in the context of its general use (e.g. Home, Business, Emergency Contact, Travel Arranger, Day, Evening).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "phoneUseTypeDescription": {
          "description": "Description of the PhoneUseType code",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "phoneNumber": {
          "description": "Telephone number assigned to a single location.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "extension": {
          "description": "Extension to reach a specific party at the phone number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "emailInfoType": {
      "type": "object",
      "description": "Information on an email for the customer.",
      "properties": {
        "email": {
          "description": "eMail deatils for the profile.",
          "$ref": "#/definitions/emailType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "advanceCheckInType": {
      "type": "object",
      "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
      "properties": {
        "advanceCheckedIn": {
          "description": "Indicates if the reservation is marked as Advance Checked In",
          "type": "boolean"
        },
        "expectedReturnTime": {
          "description": "Expected Return Time",
          "type": "string",
          "format": "date-time"
        },
        "eTRComments": {
          "description": "ETR Comments",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "pMS_ResStatusType": {
      "type": "string",
      "description": "This reservation is in checked in status and the business date is past departure date. This could occur when ORS and PMS are in same environment.",
      "enum": [
        "Reserved",
        "Requested",
        "NoShow",
        "Cancelled",
        "InHouse",
        "CheckedOut",
        "Waitlisted",
        "DueIn",
        "DueOut",
        "Walkin",
        "PendingCheckout"
      ]
    },
    "resAccessRestrictionType": {
      "type": "string",
      "description": "Indicates any Updates/Changes on the reservation as well as Reservation Cancellation are not allowed.",
      "enum": [
        "Change",
        "Cancel",
        "ChangeOrCancel"
      ]
    },
    "commissionPayoutToType": {
      "type": "string",
      "enum": [
        "TravelAgent",
        "Source",
        "TravelAgentSource",
        "None"
      ]
    },
    "cashierInfoType": {
      "type": "object",
      "description": "Cashier information. Contains Id and Name details of the cashier.",
      "properties": {
        "cashierId": {
          "description": "Cashier Id of the Cashier.",
          "type": "number"
        },
        "cashierName": {
          "description": "Cashier Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "trxInfoType": {
      "type": "object",
      "description": "Transaction codes info.",
      "properties": {
        "description": {
          "description": "Transaction codes info.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionGroup": {
          "description": "Category of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionSubGroup": {
          "description": "Sub category of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "routingInstructionsId": {
          "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
          "type": "number"
        },
        "articles": {
          "description": "The List of Articles defined for this transaction code, when using the Articles functionality.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/articleInfoType"
          }
        },
        "trxServiceType": {
          "description": "Contains service type for transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionCode": {
          "description": "Unique identifier for the Transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel context of the Transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "printTrxReceipt": {
          "description": "Print receipt flag that tells whether the transaction receipt is to be printed or not. This is based on the transaction code.",
          "type": "boolean"
        }
      }
    },
    "articleInfoType": {
      "type": "object",
      "description": "Information regarding an article.",
      "properties": {
        "description": {
          "description": "Description of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionCode": {
          "description": "Transaction code to which the article belongs.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "price": {
          "description": "Default price of the article.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postIt": {
          "description": "Post it information of the article.",
          "$ref": "#/definitions/articlePostItType"
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel code to which the article belongs.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "articleCode": {
          "description": "Unique code of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "inactive": {
          "description": "Indicates whether the article is inactive or not.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        }
      }
    },
    "articlePostItType": {
      "type": "object",
      "description": "Post it information of an article.",
      "properties": {
        "availableForPostIt": {
          "description": "Indicates whether the article is available for post it.",
          "type": "boolean"
        },
        "color": {
          "description": "Color indicator which is only configurable if article is available for post it.",
          "$ref": "#/definitions/colorType"
        }
      }
    },
    "colorType": {
      "type": "string",
      "description": "Color configuration type. This color configuration provides a visual category of entities.",
      "enum": [
        "Red",
        "DarkRed",
        "Green",
        "DarkGreen",
        "LightGreen",
        "Orange",
        "White",
        "Yellow",
        "DarkYellow",
        "Purple",
        "Brown",
        "Gray",
        "Aqua",
        "Chocolate",
        "Blue",
        "LightBlue",
        "DarkBlue",
        "Cyan",
        "DarkCyan",
        "Magenta",
        "DarkMagenta",
        "Black"
      ]
    },
    "profileInfoType": {
      "type": "object",
      "description": "Provides information about attached profiles to the block.",
      "properties": {
        "profileId": {
          "description": "Opera ID for the profile attached to the block.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "name": {
          "description": "Name for the profile attached to the block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "city": {
          "description": "City for the profile attached to the block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "phone": {
          "description": "Phone for the profile attached to the block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "Defines the type of Linked profiles for a block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "customNumberType": {
      "type": "string",
      "description": "Custom number",
      "minLength": 0,
      "maxLength": 200
    },
    "fiscalResponseType": {
      "type": "object",
      "description": "Provides information which is used for fiscal response processing.",
      "properties": {
        "folioSeqId": {
          "description": "Fiscal Folio sequence ID stored in queue table.",
          "type": "integer"
        },
        "retryFiscalPrinting": {
          "description": "Flag to do the retrieval process of fiscal printing or not.",
          "type": "boolean"
        }
      }
    },
    "folioStatusType": {
      "type": "string",
      "description": "The Folio Status Example: DEPOSIT folio, VOID folio or the default OK folio status.",
      "enum": [
        "Deposit",
        "Void",
        "Ok",
        "Zero",
        "Compress",
        "Converted",
        "Internal"
      ]
    },
    "aRInvoiceCategory": {
      "type": "string",
      "enum": [
        "Normal",
        "Credit",
        "OldBalance",
        "PasserBy"
      ]
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "instanceLink": {
      "type": "object",
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      }
    },
    "warningsType": {
      "type": "array",
      "description": "Used in conjunction with the Success element to define a business error.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    },
    "warningType": {
      "type": "object",
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "minLength": 1,
          "maxLength": 8
        }
      }
    },
    "exceptionDetailType": {
      "title": "Error Detail",
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "errorInstance": {
      "title": "Error Instance Details",
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "status": {
      "type": "object",
      "description": "Response Body.",
      "properties": {
        "warnings": {
          "$ref": "#/definitions/warningsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      }
    },
    "accountsInfo": {
      "type": "object",
      "description": "Response for the request to search for AR Accounts. Based on the criteria, the response can contain a list of AR Accounts and their AR information.",
      "properties": {
        "accountsDetails": {
          "description": "List of AR Accounts.",
          "$ref": "#/definitions/aRAccountsType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "aRAccountsType": {
      "type": "array",
      "description": "Information regarding the AR Account.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/aRAccountType"
      }
    },
    "aRAccountType": {
      "type": "object",
      "description": "Accounts Receivabales Account details type.",
      "properties": {
        "hotelId": {
          "description": "Property where the AR Account exists.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "accountName": {
          "description": "Name of the AR Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "accountId": {
          "description": "The unique ID for the Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountNo": {
          "description": "The Account Number for the Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "profileId": {
          "description": "Internal Profile ID for the AR Account.",
          "$ref": "#/definitions/profileId"
        },
        "balance": {
          "description": "Open Balance of the Account for this property.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "creditLimit": {
          "description": "The maximum credit allowed for the Account.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "contactName": {
          "description": "The person to contact for this Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "paymentDueDays": {
          "description": "Number of days on which person can make payment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "monthEndCalcYN": {
          "description": "Month End Calculation.",
          "type": "boolean"
        },
        "address": {
          "description": "Address information for the address which is attached to this AR Account.",
          "$ref": "#/definitions/addressInfoType"
        },
        "email": {
          "description": "Email information for the Account. This is the Email that is attached to this AR Account.",
          "$ref": "#/definitions/emailInfoType"
        },
        "telephones": {
          "description": "The Telephone and Fax details attached to the Account.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/telephoneInfoType"
          }
        },
        "lastReminderInfo": {
          "description": "Report History Type used as based type for Remiders and Statements History types.",
          "type": "object",
          "properties": {
            "reportName": {
              "description": "Report Name.",
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "reportFileName": {
              "description": "Report file name when exists to allow report re-printing.",
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "dateSent": {
              "description": "The Reminder Letter name which is to be used for this Reminder based on the setup on the Account Type.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "age": {
              "description": "The minimum age(days) of the invoices to be included in the Reminder",
              "type": "integer"
            },
            "historyExists": {
              "description": "Indicates that reminders history exists.",
              "type": "boolean"
            }
          }
        },
        "lastStatementInfo": {
          "description": "Report History Type used as based type for Remiders and Statements History types.",
          "type": "object",
          "properties": {
            "reportName": {
              "description": "Report Name.",
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "reportFileName": {
              "description": "Report file name when exists to allow report re-printing.",
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "dateSent": {
              "description": "The Reminder Letter name which is to be used for this Reminder based on the setup on the Account Type.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "statementNo": {
              "description": "When using Statement Numbering, a unique number is associated to the Statement.",
              "type": "integer"
            },
            "historyExists": {
              "description": "Indicates that statement history exists.",
              "type": "boolean"
            }
          }
        },
        "notes": {
          "description": "The Note details attached to the Account.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/commentInfoType"
          }
        },
        "traces": {
          "description": "The Trace details attached to the Account.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/traceType"
          }
        },
        "fixedCharges": {
          "description": "Fixed charges attached to this AR Account.",
          "$ref": "#/definitions/fixedChargesType"
        },
        "accountIndicators": {
          "description": "Indicators of additional information attached to the Account.",
          "$ref": "#/definitions/indicatorsType"
        },
        "agingInfo": {
          "description": "The Aging balance information for this account, by Aging Buckets.",
          "$ref": "#/definitions/aRAgingInfoType"
        },
        "yearViewInfo": {
          "description": "The Year View balance information for this account.",
          "$ref": "#/definitions/aRYearViewInfoType"
        },
        "invoices": {
          "description": "List of all Invoices.",
          "$ref": "#/definitions/aRInvoicesType"
        },
        "payments": {
          "description": "List of all Payments made.",
          "$ref": "#/definitions/aRPaymentsType"
        },
        "summary": {
          "description": "The Summary Information of the Invoices for the Account.",
          "$ref": "#/definitions/aRBalanceType"
        },
        "status": {
          "description": "The status of the account.",
          "$ref": "#/definitions/aRAccountStatusType"
        },
        "batchStatement": {
          "description": "Include In Batch Statement",
          "type": "boolean"
        },
        "printFoliosWithStatement": {
          "description": "Indicates if associated folios should be printed by default with the statement.",
          "type": "boolean"
        },
        "emailStatementsReminders": {
          "description": "Indicates if the Account has opted to send the statements and reminders to the Account email address by default.",
          "type": "boolean"
        },
        "searchMatches": {
          "description": "Super Search matching terms.",
          "$ref": "#/definitions/searchMatchesType"
        },
        "primary": {
          "description": "Indicates if this Account is the Primary Account for this Guest/Company.",
          "type": "boolean"
        },
        "type": {
          "description": "The type of Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "accountTypeDescription": {
          "description": "The description of the Account Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "permanent": {
          "description": "Indicates if this is a Permanent Account. Permanent Accounts cannot be deleted.",
          "type": "boolean"
        }
      }
    },
    "commentInfoType": {
      "type": "object",
      "description": "Comment related to the profile/reservation.",
      "properties": {
        "comment": {
          "description": "Comment details for the comment. It will be empty in case of delete comment.",
          "$ref": "#/definitions/commentType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "commentType": {
      "type": "object",
      "description": "An indication of a new paragraph for a sub-section of a formatted text message.",
      "properties": {
        "text": {
          "description": "Formatted text content.",
          "$ref": "#/definitions/formattedTextTextType"
        },
        "image": {
          "description": "An image for this paragraph.",
          "type": "string"
        },
        "url": {
          "description": "A URL for this paragraph.",
          "type": "string"
        },
        "commentTitle": {
          "description": "Specifies Comment's Title.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "notificationLocation": {
          "description": "Notification Location associated with the Note.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "type": {
          "description": "Specifies type of the comment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Comment type Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "internal": {
          "description": "When true, the comment may not be shown to the consumer. When false, the comment may be shown to the consumer.",
          "type": "boolean"
        },
        "confidential": {
          "description": "When true, the comment may be confidential.",
          "type": "boolean"
        },
        "overrideInternal": {
          "description": "When true, the note internal could be modified.",
          "type": "boolean"
        },
        "protectDescription": {
          "description": "When true, the note title will be populated from the note type description and couldn't be modified.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "If specified comment belongs to the Hotel, otherwise it is a global comment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "actionType": {
          "description": "Specifies type of action described in the comments.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "actionDate": {
          "description": "Indicates at which date an action described in the comment must be taken.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "formattedTextTextType": {
      "type": "object",
      "description": "Provides text and indicates whether it is formatted or not.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        }
      }
    },
    "traceType": {
      "type": "object",
      "properties": {
        "timeInfo": {
          "description": "Date of the trace.",
          "$ref": "#/definitions/traceTimeInfoType"
        },
        "reservationId": {
          "description": "Reservation ID of the reservation for which the traces are to be retrieved.",
          "$ref": "#/definitions/reservationId"
        },
        "departmentId": {
          "description": "Indicates the Department code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "traceText": {
          "description": "The information this trace contains.",
          "type": "string"
        },
        "resolveInfo": {
          "description": "Information regarding the status of the trace",
          "$ref": "#/definitions/traceResolveType"
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "traceTimeInfoType": {
      "type": "object",
      "properties": {
        "dateTimeSpan": {
          "description": "Time span for the trace.",
          "$ref": "#/definitions/dateTimeSpanType"
        },
        "traceOn": {
          "description": "Date of the trace.",
          "type": "string",
          "format": "date-time"
        },
        "traceTime": {
          "description": "Time of the trace",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "enteredBy": {
          "description": "User that entered this trace.",
          "type": "string"
        }
      }
    },
    "dateTimeSpanType": {
      "type": "object",
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
      "properties": {
        "startDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "endDateTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "traceResolveType": {
      "type": "object",
      "properties": {
        "resolvedOn": {
          "description": "Date the trace was resolved",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "resolvedBy": {
          "description": "User that resolved the trace",
          "type": "string"
        }
      }
    },
    "fixedChargesType": {
      "type": "array",
      "description": "Holds fixed charge detail.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fixedChargeType"
      }
    },
    "fixedChargeType": {
      "type": "object",
      "description": "Holds fixed charge information.",
      "properties": {
        "schedule": {
          "description": "Holds schedule of fixed charge.",
          "$ref": "#/definitions/fixedChargeScheduleType"
        },
        "charge": {
          "description": "Holds specific details of fixed charge.",
          "$ref": "#/definitions/fixedChargeDetailType"
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "fixedChargeScheduleType": {
      "type": "object",
      "description": "Holds schedule of fixed charge.",
      "properties": {
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "frequency": {
          "description": "Frequency of a fixed charge.",
          "$ref": "#/definitions/fixedChargeFrequencyType"
        },
        "dayToExecute": {
          "description": "Day of when to execute fixed charge. Applicable when frequency is Daily or Weekly.",
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "dateToExecute": {
          "description": "Date of when to execute yearly fixed charge. Applicable when frequency is Yearly.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "fixedChargeFrequencyType": {
      "type": "string",
      "description": "Yearly.",
      "enum": [
        "O",
        "D",
        "W",
        "M",
        "Q",
        "Y"
      ]
    },
    "fixedChargeDetailType": {
      "type": "object",
      "description": "Fixed charge amount could be specified by flat fee or be a percentage of the rate amount.",
      "properties": {
        "transaction": {
          "description": "Transaction code and description of a fixed charge.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "quantity": {
          "description": "Quantity of the product.",
          "type": "integer"
        },
        "chargeAmount": {
          "description": "Price of the product.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "percent": {
          "description": "Percentage of the rate amount.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "supplement": {
          "description": "Additional information regarding the fixed charge.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "article": {
          "description": "Holds related article code and description.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "roomNights": {
          "description": "Holds number of comp or cash room night to allocate.",
          "type": "integer"
        }
      }
    },
    "codeDescriptionType": {
      "type": "object",
      "description": "This contains a generic code and description information.",
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "aRAgingInfoType": {
      "type": "object",
      "description": "Information regarding the aging balances for an account.",
      "properties": {
        "totalOutstanding": {
          "description": "The total debit and credit balance of the account.",
          "$ref": "#/definitions/aRBalanceType"
        },
        "aging": {
          "description": "The debit and credit balance per Aging bucket.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/aRAgingType"
          }
        }
      }
    },
    "aRBalanceType": {
      "type": "object",
      "description": "Balance information for AR.",
      "properties": {
        "debit": {
          "description": "Debit Balance amount. The amount owed by the Account.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "credit": {
          "description": "The credit Balance amount. Any payment that is Unallocated i.e not applied against an invoice, is included in this.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "total": {
          "description": "The total balance i.e Debit minus Credit amounts.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "aRAgingType": {
      "type": "object",
      "description": "Aging information for an Aging Bucket.",
      "properties": {
        "agingBucketRange": {
          "description": "The bucket description in terms of days. Example : 0-31 days",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "agingDate": {
          "description": "The start date and end date for this Aging bucket.",
          "$ref": "#/definitions/dateRangeType"
        },
        "balanceInfo": {
          "description": "The balance amounts for this bucket. Contains the Debit Balance, Credit Balance and the Total Balance.",
          "$ref": "#/definitions/aRBalanceType"
        },
        "agingStartDay": {
          "description": "The start number of days for this Aging bucket. Example: For the range 31-60 days, this would be 31.",
          "type": "integer"
        },
        "agingEndDay": {
          "description": "The end number of days for this Aging bucket. Example: For the range 31-60 days, this would be 60.",
          "type": "integer"
        },
        "sequence": {
          "description": "The sequence for display.",
          "type": "integer"
        }
      }
    },
    "dateRangeType": {
      "type": "object",
      "description": "Date Range with Start and End dates.",
      "properties": {
        "start": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "end": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "aRYearViewInfoType": {
      "type": "object",
      "description": "Information regarding Year View balances for an account.",
      "properties": {
        "totalOutstanding": {
          "description": "The total debit and credit balance of the account.",
          "$ref": "#/definitions/aRBalanceType"
        },
        "yearView": {
          "description": "The debit and credit balance per account.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/aRYearViewType"
          }
        }
      }
    },
    "aRYearViewType": {
      "type": "object",
      "description": "Year information for an Year View.",
      "properties": {
        "dateRange": {
          "description": "The period start and end date.",
          "$ref": "#/definitions/dateRangeType"
        },
        "balanceInfo": {
          "description": "The balance amounts for this date range. Contains the Debit Balance, Credit Balance and the Total Balance.",
          "$ref": "#/definitions/aRBalanceType"
        },
        "runningTotal": {
          "description": "The running total balance for the date range.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "aRPaymentsType": {
      "type": "array",
      "description": "A collection of AR Payments.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/aRPaymentType"
      }
    },
    "aRPaymentType": {
      "type": "object",
      "description": "Details of an AR Payment.",
      "properties": {
        "age": {
          "description": "The Aging age of the payment.",
          "type": "integer"
        },
        "amount": {
          "description": "Amount of the Payment.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "amountUsed": {
          "description": "Total amount applied against an invoice.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Amount still open which has not been applied against any invoice.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "reference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "remark": {
          "description": "User-defined posting remark.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "cashierInfo": {
          "description": "Cashier information. Contains Id and Name details of the cashier.",
          "$ref": "#/definitions/cashierInfoType"
        },
        "paymentCard": {
          "description": "Payment card details.",
          "$ref": "#/definitions/resPaymentCardType"
        },
        "transferredOut": {
          "type": "boolean"
        },
        "transferredIn": {
          "type": "boolean"
        },
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier of the Payment.",
          "type": "number"
        },
        "transactionDate": {
          "description": "Date of the Payment.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionCode": {
          "description": "Transaction code of the Payment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "postingDate": {
          "description": "Posting date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "revenueDate": {
          "description": "Revenue date ID of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transferDate": {
          "description": "Transfer of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "sequenceNo": {
          "description": "When this PostingType is used to return the postings generated by a batch request, the sequence number is used to relate to the Request's sequence number.",
          "type": "integer"
        }
      }
    },
    "remindersHistory": {
      "type": "object",
      "description": "Reminders History.",
      "properties": {
        "aRReminderHistory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/aRReminderHistoryType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "aRReminderHistoryType": {
      "type": "object",
      "description": "Report History Type used as based type for Remiders and Statements History types.",
      "properties": {
        "reportName": {
          "description": "Report Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "reportFileName": {
          "description": "Report file name when exists to allow report re-printing.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "dateSent": {
          "description": "The Reminder Letter name which is to be used for this Reminder based on the setup on the Account Type.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "age": {
          "description": "The minimum age(days) of the invoices to be included in the Reminder",
          "type": "integer"
        }
      }
    },
    "statements": {
      "type": "object",
      "description": "Details of the Statement to generate.",
      "properties": {
        "aRStatements": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/aRStatementType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "aRStatementType": {
      "type": "object",
      "description": "Details about an AR Statement.",
      "properties": {
        "hotelId": {
          "description": "Property where the Account belongs.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "balance": {
          "description": "The Statement Balance.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "accountId": {
          "description": "The unique ID of the AR Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "invoices": {
          "description": "Invoice details of the Statement.",
          "$ref": "#/definitions/aRInvoicesType"
        },
        "statementNo": {
          "description": "Statement Number for the Statement, when the functionality for Numbering is ON.",
          "type": "integer"
        },
        "reportSeqNo": {
          "description": "Internal Report Sequence Number for the which is used to mark statement invoices",
          "type": "integer"
        },
        "inclFolios": {
          "description": "Flag to indicate if Folios are to be printed along with the Statement.",
          "type": "boolean"
        },
        "statementName": {
          "description": "The Statement Report name which should be used for printing.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "type": {
          "description": "The Type of Statement used.",
          "$ref": "#/definitions/statementType"
        },
        "reportFileName": {
          "description": "The Statement Report name which should be used for printing.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "statementType": {
      "type": "string",
      "description": "The Types of Statements that can be used on an Account Type.",
      "enum": [
        "BalanceForward",
        "IndividualOpenItems"
      ]
    },
    "arTransactions": {
      "type": "object",
      "description": "Response after fetching AR transaction details.",
      "properties": {
        "transactions": {
          "description": "Invoice and Payment Details for the Account.",
          "$ref": "#/definitions/aRTransactionType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in the response invoices/payments.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "aRTransactionType": {
      "type": "object",
      "description": "Transaction Information.",
      "properties": {
        "invoices": {
          "description": "List of Invoices.",
          "$ref": "#/definitions/accountInvoicesInfoType"
        },
        "payments": {
          "description": "List of Payments.",
          "$ref": "#/definitions/accountPaymentsInfoType"
        }
      }
    },
    "accountInvoicesInfoType": {
      "type": "array",
      "description": "Account Invoice Info.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/accountInvoiceInfoType"
      }
    },
    "accountInvoiceInfoType": {
      "type": "object",
      "description": "Details of an AR Invoice.",
      "properties": {
        "hotelId": {
          "description": "Property where the invoice exists.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "Reservation ID of the invoice.",
          "$ref": "#/definitions/reservationId"
        },
        "guestProfileId": {
          "description": "Guest Profile ID of the invoice.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "age": {
          "description": "The Aging age of the invoice",
          "type": "integer"
        },
        "guestName": {
          "description": "Name of the Guest who consumed these transactions.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "originalAmount": {
          "description": "Original Amount of the Invoice",
          "$ref": "#/definitions/currencyAmountType"
        },
        "amount": {
          "description": "Current Amount of the Invoice.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "payments": {
          "description": "Total Payments made to this Invoice.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Amount still open which has not been paid",
          "$ref": "#/definitions/currencyAmountType"
        },
        "reference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "remark": {
          "description": "User-defined posting remark.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "adjusted": {
          "type": "boolean"
        },
        "parentInvoiceNo": {
          "type": "number"
        },
        "compressed": {
          "type": "boolean"
        },
        "compressedDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transferredOut": {
          "type": "boolean"
        },
        "transferredIn": {
          "type": "boolean"
        },
        "market": {
          "description": "Invoice market code.",
          "$ref": "#/definitions/marketCodeInfoType"
        },
        "roomClass": {
          "description": "Invoice room class code.",
          "$ref": "#/definitions/roomClassCodeInfoType"
        },
        "source": {
          "description": "Invoice source code.",
          "$ref": "#/definitions/sourceCodeInfoType"
        },
        "reservationInfo": {
          "description": "Reservation guest details.",
          "$ref": "#/definitions/reservationInfoType"
        },
        "cashierInfo": {
          "description": "Cashier information. Contains Id and Name details of the cashier.",
          "$ref": "#/definitions/cashierInfoType"
        },
        "transactionInfo": {
          "description": "Transaction information .",
          "$ref": "#/definitions/trxInfoType"
        },
        "paymentCard": {
          "description": "Payment card details.",
          "$ref": "#/definitions/resPaymentCardType"
        },
        "addresseeInfo": {
          "description": "Addressee Information for the folio. This is available when the Addressee functionality is used and and Addressee is attached to the folio of the Invoice.",
          "$ref": "#/definitions/profileInfoType"
        },
        "allowPartialTransferYn": {
          "description": "Flag to check Partail Transfer Allowed.",
          "type": "boolean"
        },
        "printed": {
          "description": "Flag to check Invoice Statement is Printed.",
          "type": "boolean"
        },
        "printedDate": {
          "description": "Invoice Statement Printed Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "storedFolioId": {
          "description": "ID of the Stored Folio.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "storedFolioName": {
          "description": "Name of the Stored Folio.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "storedDebitFolioId": {
          "description": "ID of the Stored Debit Folio.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "storedDebitFolioName": {
          "description": "Name of the Stored Debit Folio.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "folioTexts": {
          "description": "Additional text fields to display on the folio.",
          "$ref": "#/definitions/folioTextsType"
        },
        "customNumbers": {
          "description": "Unique Custom Numbers associated with this record.",
          "type": "array",
          "maxItems": 5,
          "items": {
            "$ref": "#/definitions/customNumberType"
          }
        },
        "fiscalResponseType": {
          "description": "Provides information which is used for fiscal response processing.",
          "$ref": "#/definitions/fiscalResponseType"
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier of the Invoice.",
          "type": "number"
        },
        "transactionDate": {
          "description": "Transaction Date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "status": {
          "description": "Status of the invoice.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionCode": {
          "description": "Transaction code of the invoice.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioNo": {
          "description": "Folio Number.",
          "type": "number"
        },
        "invoiceNo": {
          "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
          "type": "number"
        },
        "fiscalBillNo": {
          "description": "The Fiscal Bill number of this posting",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "folioTypeName": {
          "description": "The name of the Folio Type used for the Folio Number sequence.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "internalFolioWindowID": {
          "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioDate": {
          "description": "Date of Folio Generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "folioStatus": {
          "$ref": "#/definitions/folioStatusType"
        },
        "folioNoWithPrefix": {
          "description": "The folio number with prefix value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "invoiceType": {
          "description": "Invoice code of the invoice.",
          "$ref": "#/definitions/aRInvoiceCategory"
        },
        "statementNo": {
          "description": "Statementno of the invoice.",
          "type": "integer"
        },
        "revenueDate": {
          "description": "Revenue date ID of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "closeDate": {
          "description": "Close date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "postingDate": {
          "description": "Posting date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transferDate": {
          "description": "Transfer date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "canBeModified": {
          "description": "Flag to indicate if postings or adjustments can be made to the invoice.",
          "type": "boolean"
        },
        "accountName": {
          "description": "Name of the AR Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1000
        },
        "accountNo": {
          "description": "The Account Number for the Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "accountId": {
          "description": "The unique ID for the Account.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "accountPaymentsInfoType": {
      "type": "array",
      "description": "Account Payments info .",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/accountPaymentInfoType"
      }
    },
    "accountPaymentInfoType": {
      "type": "object",
      "description": "Details of an AR Payment.",
      "properties": {
        "age": {
          "description": "The Aging age of the payment.",
          "type": "integer"
        },
        "amount": {
          "description": "Amount of the Payment.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "amountUsed": {
          "description": "Total amount applied against an invoice.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Amount still open which has not been applied against any invoice.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "reference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "remark": {
          "description": "User-defined posting remark.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "cashierInfo": {
          "description": "Cashier information. Contains Id and Name details of the cashier.",
          "$ref": "#/definitions/cashierInfoType"
        },
        "paymentCard": {
          "description": "Payment card details.",
          "$ref": "#/definitions/resPaymentCardType"
        },
        "transferredOut": {
          "type": "boolean"
        },
        "transferredIn": {
          "type": "boolean"
        },
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier of the Payment.",
          "type": "number"
        },
        "transactionDate": {
          "description": "Date of the Payment.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionCode": {
          "description": "Transaction code of the Payment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "postingDate": {
          "description": "Posting date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "revenueDate": {
          "description": "Revenue date ID of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transferDate": {
          "description": "Transfer of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "sequenceNo": {
          "description": "When this PostingType is used to return the postings generated by a batch request, the sequence number is used to relate to the Request's sequence number.",
          "type": "integer"
        },
        "accountName": {
          "description": "Name of the AR Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1000
        },
        "accountNo": {
          "description": "The Account Number for the Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "accountId": {
          "description": "The unique ID for the Account.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "trxCodesInfoType": {
      "type": "array",
      "description": "List of Transaction codes info.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trxInfoType"
      }
    },
    "accountCriteria": {
      "type": "object",
      "description": "Request to create a new AR Account",
      "properties": {
        "criteria": {
          "description": "Criteria to create an AR Account.",
          "$ref": "#/definitions/aRAccountType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "invoicesOnHold": {
      "type": "object",
      "description": "Response after fetching on-hold invoices.",
      "properties": {
        "details": {
          "description": "Invoice and Payment Details for the Account.",
          "$ref": "#/definitions/aRAccountsInvoicesPaymentsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "aRAccountsInvoicesPaymentsType": {
      "type": "array",
      "description": "Account Invoice information.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/aRAccountInvoicesPaymentsType"
      }
    },
    "aRAccountInvoicesPaymentsType": {
      "type": "object",
      "description": "AR Account Invoices Information.",
      "properties": {
        "hotelId": {
          "description": "Property where the Account exists.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "profileId": {
          "description": "Profile ID of the Account.",
          "$ref": "#/definitions/profileId"
        },
        "accountId": {
          "description": "The internal unique ID for the AR Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountName": {
          "description": "Name of the AR Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "accountNo": {
          "description": "The Account Number for the Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "paymentDueDays": {
          "description": "Number of days on which person can make payment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "monthEndCalcYN": {
          "description": "Month End Calculation.",
          "type": "boolean"
        },
        "summary": {
          "description": "The Summary Information of the Invoices for the Account.",
          "$ref": "#/definitions/aRBalanceType"
        },
        "invoices": {
          "description": "List of all Invoices.",
          "$ref": "#/definitions/aRInvoicesType"
        },
        "payments": {
          "description": "List of all Payments made.",
          "$ref": "#/definitions/aRPaymentsType"
        }
      }
    },
    "account": {
      "type": "object",
      "description": "Response for the request to fetch details for an AR Account.",
      "properties": {
        "accountDetails": {
          "description": "Account Details. Details can include information regarding Aging, Reminders, Statements, invoices, payments, notes and traces.",
          "$ref": "#/definitions/aRAccountType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "creditToInvoices": {
      "type": "object",
      "properties": {
        "criteria": {
          "$ref": "#/definitions/aRApplyPaymentCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "aRApplyPaymentCriteriaType": {
      "type": "object",
      "description": "Criteria type for apply credits to Invoices. Requires a list of invoices to apply the credit.",
      "properties": {
        "account": {
          "description": "Account for which the credit will be applied.",
          "$ref": "#/definitions/aRAccountCriteriaType"
        },
        "invoices": {
          "description": "List of Invoices to which the payment may be applied.",
          "$ref": "#/definitions/aRPaymentInvoicesType"
        },
        "payments": {
          "description": "List of Payments which will be applied to the invoices.",
          "$ref": "#/definitions/aRPaymentsType"
        },
        "applyType": {
          "description": "Defines how the payment has to be applied.",
          "$ref": "#/definitions/aRApplyType"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "aRAccountCriteriaType": {
      "type": "object",
      "description": "Criteria type for an AR Account.",
      "properties": {
        "hotelId": {
          "description": "Property where the AR Account exists. This is required.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "profileId": {
          "description": "Profile ID of the account",
          "$ref": "#/definitions/profileId"
        },
        "accountId": {
          "description": "The internal unique ID for the AR Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountNo": {
          "description": "Account Number for the AR Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "accountName": {
          "description": "Account Name for the AR Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "aRPaymentInvoicesType": {
      "type": "array",
      "description": "AR Invoice to which the payment will be applied.",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "hotelId": {
            "description": "Property where the invoice exists.",
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          },
          "reservationId": {
            "description": "Reservation ID of the invoice.",
            "$ref": "#/definitions/reservationId"
          },
          "guestProfileId": {
            "description": "Guest Profile ID of the invoice.",
            "$ref": "#/definitions/uniqueID_Type"
          },
          "age": {
            "description": "The Aging age of the invoice",
            "type": "integer"
          },
          "guestName": {
            "description": "Name of the Guest who consumed these transactions.",
            "type": "string",
            "minLength": 0,
            "maxLength": 200
          },
          "originalAmount": {
            "description": "Original Amount of the Invoice",
            "$ref": "#/definitions/currencyAmountType"
          },
          "amount": {
            "description": "Current Amount of the Invoice.",
            "$ref": "#/definitions/currencyAmountType"
          },
          "payments": {
            "description": "Total Payments made to this Invoice.",
            "$ref": "#/definitions/currencyAmountType"
          },
          "balance": {
            "description": "Amount still open which has not been paid",
            "$ref": "#/definitions/currencyAmountType"
          },
          "reference": {
            "description": "User-defined posting reference.",
            "type": "string",
            "minLength": 0,
            "maxLength": 2000
          },
          "remark": {
            "description": "User-defined posting remark.",
            "type": "string",
            "minLength": 0,
            "maxLength": 2000
          },
          "adjusted": {
            "type": "boolean"
          },
          "parentInvoiceNo": {
            "type": "number"
          },
          "compressed": {
            "type": "boolean"
          },
          "compressedDate": {
            "type": "string",
            "format": "date",
            "maxLength": 8
          },
          "transferredOut": {
            "type": "boolean"
          },
          "transferredIn": {
            "type": "boolean"
          },
          "market": {
            "description": "Invoice market code.",
            "$ref": "#/definitions/marketCodeInfoType"
          },
          "roomClass": {
            "description": "Invoice room class code.",
            "$ref": "#/definitions/roomClassCodeInfoType"
          },
          "source": {
            "description": "Invoice source code.",
            "$ref": "#/definitions/sourceCodeInfoType"
          },
          "reservationInfo": {
            "description": "Reservation guest details.",
            "$ref": "#/definitions/reservationInfoType"
          },
          "cashierInfo": {
            "description": "Cashier information. Contains Id and Name details of the cashier.",
            "$ref": "#/definitions/cashierInfoType"
          },
          "transactionInfo": {
            "description": "Transaction information .",
            "$ref": "#/definitions/trxInfoType"
          },
          "paymentCard": {
            "description": "Payment card details.",
            "$ref": "#/definitions/resPaymentCardType"
          },
          "addresseeInfo": {
            "description": "Addressee Information for the folio. This is available when the Addressee functionality is used and and Addressee is attached to the folio of the Invoice.",
            "$ref": "#/definitions/profileInfoType"
          },
          "allowPartialTransferYn": {
            "description": "Flag to check Partail Transfer Allowed.",
            "type": "boolean"
          },
          "printed": {
            "description": "Flag to check Invoice Statement is Printed.",
            "type": "boolean"
          },
          "printedDate": {
            "description": "Invoice Statement Printed Date.",
            "type": "string",
            "format": "date",
            "maxLength": 8
          },
          "storedFolioId": {
            "description": "ID of the Stored Folio.",
            "$ref": "#/definitions/uniqueID_Type"
          },
          "storedFolioName": {
            "description": "Name of the Stored Folio.",
            "type": "string",
            "minLength": 0,
            "maxLength": 2000
          },
          "storedDebitFolioId": {
            "description": "ID of the Stored Debit Folio.",
            "$ref": "#/definitions/uniqueID_Type"
          },
          "storedDebitFolioName": {
            "description": "Name of the Stored Debit Folio.",
            "type": "string",
            "minLength": 0,
            "maxLength": 2000
          },
          "folioTexts": {
            "description": "Additional text fields to display on the folio.",
            "$ref": "#/definitions/folioTextsType"
          },
          "customNumbers": {
            "description": "Unique Custom Numbers associated with this record.",
            "type": "array",
            "maxItems": 5,
            "items": {
              "$ref": "#/definitions/customNumberType"
            }
          },
          "fiscalResponseType": {
            "description": "Provides information which is used for fiscal response processing.",
            "$ref": "#/definitions/fiscalResponseType"
          },
          "transactionNo": {
            "description": "Unique Transaction Identifier of the Invoice.",
            "type": "number"
          },
          "transactionDate": {
            "description": "Transaction Date of the invoice.",
            "type": "string",
            "format": "date",
            "maxLength": 8
          },
          "status": {
            "description": "Status of the invoice.",
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          },
          "transactionCode": {
            "description": "Transaction code of the invoice.",
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          },
          "folioNo": {
            "description": "Folio Number.",
            "type": "number"
          },
          "invoiceNo": {
            "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
            "type": "number"
          },
          "fiscalBillNo": {
            "description": "The Fiscal Bill number of this posting",
            "type": "string",
            "minLength": 0,
            "maxLength": 2000
          },
          "folioTypeName": {
            "description": "The name of the Folio Type used for the Folio Number sequence.",
            "type": "string",
            "minLength": 0,
            "maxLength": 100
          },
          "internalFolioWindowID": {
            "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          },
          "folioDate": {
            "description": "Date of Folio Generation.",
            "type": "string",
            "format": "date",
            "maxLength": 8
          },
          "folioStatus": {
            "$ref": "#/definitions/folioStatusType"
          },
          "folioNoWithPrefix": {
            "description": "The folio number with prefix value.",
            "type": "string",
            "minLength": 0,
            "maxLength": 200
          },
          "invoiceType": {
            "description": "Invoice code of the invoice.",
            "$ref": "#/definitions/aRInvoiceCategory"
          },
          "statementNo": {
            "description": "Statementno of the invoice.",
            "type": "integer"
          },
          "revenueDate": {
            "description": "Revenue date ID of the invoice.",
            "type": "string",
            "format": "date",
            "maxLength": 8
          },
          "closeDate": {
            "description": "Close date of the invoice.",
            "type": "string",
            "format": "date",
            "maxLength": 8
          },
          "postingDate": {
            "description": "Posting date of the invoice.",
            "type": "string",
            "format": "date",
            "maxLength": 8
          },
          "transferDate": {
            "description": "Transfer date of the invoice.",
            "type": "string",
            "format": "date",
            "maxLength": 8
          },
          "canBeModified": {
            "description": "Flag to indicate if postings or adjustments can be made to the invoice.",
            "type": "boolean"
          },
          "amountToApply": {
            "description": "Amount to apply to this Invoice.",
            "$ref": "#/definitions/currencyAmountType"
          }
        },
        "description": "Details of an AR Invoice."
      }
    },
    "aRApplyType": {
      "type": "string",
      "description": "Apply payment Selectively to the Invoices included.",
      "enum": [
        "Default",
        "OldestInvoice",
        "ApplyToInvoices",
        "ApplySelectivelyToInvoices"
      ]
    },
    "cashierId": {
      "type": "number",
      "description": "The Cashier ID of the Cashier who is currently processing the transaction(s)."
    },
    "arCreditCardPaymentsToTransfer": {
      "type": "object",
      "description": "Request to transfer AR Credit Card payments.",
      "properties": {
        "criteria": {
          "description": "Criteria for the request to transfer AR Credit Card payments.",
          "$ref": "#/definitions/transferARCreditCardPaymentsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transferARCreditCardPaymentsType": {
      "type": "object",
      "description": "Transfer AR Credit Card payment information.",
      "properties": {
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "accountId": {
          "description": "The unique ID for the Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "totalAmount": {
          "description": "Total Amount of postings to be transfered.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "reference": {
          "description": "Reference Text for the payment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionNo": {
          "description": "Transaction number of the payments to be transfered.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "number"
          }
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "arChargesPostingCriteria": {
      "type": "object",
      "description": "Request to post charges to an existing invoice, when the functionality is available. If the invoice should not be modified or if the folio should not be modified,based on other functionalities, then the charges cannot be posted to the invoice.",
      "properties": {
        "criteria": {
          "description": "Information regarding the Account, Invoice and the charges which have to be posted to the invoice.",
          "$ref": "#/definitions/aRChargesPostingCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "aRChargesPostingCriteriaType": {
      "type": "object",
      "description": "The charges which have to be posted.",
      "properties": {
        "hotelId": {
          "description": "Property where the charges are to be posted.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "charges": {
          "description": "Information regarding the charges which have to be posted.",
          "$ref": "#/definitions/chargesCriteriaType"
        },
        "account": {
          "description": "The account to which the charges have to be posted.",
          "$ref": "#/definitions/aRAccountCriteriaType"
        },
        "invoice": {
          "description": "The invoice to which the charges have to be posted.",
          "$ref": "#/definitions/aRInvoiceType"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "overrideCreditHoldCheck": {
          "type": "boolean"
        }
      }
    },
    "chargesCriteriaType": {
      "type": "array",
      "description": "Collection of Charges to be posted.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/chargeCriteriaType"
      }
    },
    "chargeCriteriaType": {
      "type": "object",
      "description": "Criteria information for posting a charge.",
      "properties": {
        "transactionCode": {
          "description": "Transaction Code to post.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "articleCode": {
          "description": "Article ID.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "price": {
          "description": "Amount to post to the folio.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postingQuantity": {
          "description": "Quantity to post to the folio.",
          "type": "integer"
        },
        "postingReference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "postingRemark": {
          "description": "User-defined posting remark.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "checkNumber": {
          "description": "Indicates the Cheque number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "arrangementCode": {
          "description": "Corrected arrangement code from the package associated to this transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "applyRoutingInstructions": {
          "description": "Apply room routing when making this posting.",
          "type": "boolean"
        },
        "usePackageAllowance": {
          "description": "Use the applicable package allowance when making this posting.",
          "type": "boolean"
        },
        "autoPosting": {
          "description": "True indicates the Transaction Code is allowed to be posted automatically.",
          "type": "boolean"
        },
        "financialTransactionIdList": {
          "description": "Collection of unique identifiers of the financial transactions.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "folioWindowNo": {
          "type": "integer"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "covers": {
          "description": "POS covers.Api will only accept numeric values for Covers and if decimal values are passed will be ignored and rounded",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        }
      }
    },
    "uniqueIDListType": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "accountComment": {
      "type": "object",
      "description": "Request to create a Comment for an Account.",
      "properties": {
        "commentInfo": {
          "description": "Comment information to be added to the Account.",
          "$ref": "#/definitions/aRAccountCommentCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "aRAccountCommentCriteriaType": {
      "type": "object",
      "description": "The comments on the AR Account.",
      "properties": {
        "comment": {
          "description": "Comment details for the comment. It will be empty in case of delete comment.",
          "$ref": "#/definitions/commentType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hotelId": {
          "description": "The resort where the AR Account exists.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "accountId": {
          "description": "The internal unique ID for the AR Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountNo": {
          "description": "Account Number for the AR Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "profileId": {
          "description": "Internal Profile ID for the AR Account.",
          "$ref": "#/definitions/profileId"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "arCompressInvoices": {
      "type": "object",
      "description": "Request to compress two or more invoices for an Account",
      "properties": {
        "criteria": {
          "description": "Details for the invoices which have to be compressed and the new Parent Invoice which will be created.",
          "$ref": "#/definitions/aRCompressInvoicesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "aRCompressInvoicesType": {
      "type": "object",
      "description": "Criteria type compressing invoices i.e grouping multiple invoices into one,for an Account.",
      "properties": {
        "account": {
          "description": "Account for which the invoices are compressed.",
          "$ref": "#/definitions/aRAccountCriteriaType"
        },
        "invoices": {
          "description": "List of Invoices which have to be compressed.",
          "$ref": "#/definitions/aRInvoicesType"
        },
        "reference": {
          "description": "Reference Text for the Master Invoice which will be created.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "remark": {
          "description": "Remarks for the Master Invoice which will be created.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "folioTypeName": {
          "description": "Folio Type for the Master Invoice which will be created.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        }
      }
    },
    "compressedARInvoices": {
      "type": "object",
      "description": "Response for the request to compress two or more invoices.",
      "properties": {
        "invoice": {
          "description": "Details of the Parent invoice which was created, when the invoices were compressed.",
          "$ref": "#/definitions/aRInvoiceType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "arAccountCopy": {
      "type": "object",
      "description": "Request to copy AR Account",
      "properties": {
        "criteria": {
          "description": "Criteria for copying AR Account",
          "$ref": "#/definitions/copyARAccountCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyARAccountCriteriaType": {
      "type": "object",
      "description": "Criteria for copying AR account.",
      "properties": {
        "targetHotels": {
          "description": "Hotel code.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "sourceAccount": {
          "description": "Account to be copied",
          "$ref": "#/definitions/aRAccountCriteriaType"
        }
      }
    },
    "accountFixedCharge": {
      "type": "object",
      "description": "Request to create a Fixed Charge for an Account.",
      "properties": {
        "fixedChargeInfo": {
          "description": "Fixed charge information to be added to the Account.",
          "$ref": "#/definitions/aRAccountFixedChargeCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "aRAccountFixedChargeCriteriaType": {
      "type": "object",
      "description": "The traces on the AR Account.",
      "properties": {
        "schedule": {
          "description": "Holds schedule of fixed charge.",
          "$ref": "#/definitions/fixedChargeScheduleType"
        },
        "charge": {
          "description": "Holds specific details of fixed charge.",
          "$ref": "#/definitions/fixedChargeDetailType"
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "hotelId": {
          "description": "The resort where the AR Account exists.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "accountId": {
          "description": "The internal unique ID for the AR Account.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "arFolioPrinters": {
      "type": "object",
      "description": "Response to the request to fetch the Folio Printers applicable for a Folio, based on the",
      "properties": {
        "printers": {
          "description": "List of Printers which are applicable for this Folio.",
          "$ref": "#/definitions/folioPrintersType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "folioPrintersType": {
      "type": "object",
      "description": "List of Folio Printers.",
      "properties": {
        "folioTypeName": {
          "description": "Name of the Folio Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "printer": {
          "description": "Folio Printer Information.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/folioPrinterType"
          }
        }
      }
    },
    "folioPrinterType": {
      "type": "object",
      "description": "Information about a Printer which can be used to print a Folio.",
      "properties": {
        "printerName": {
          "description": "Description of the Printer",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "device": {
          "description": "The Printer Device name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "folioType": {
          "description": "The Folio Type for which this printer is being used.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "folioQueueName": {
          "description": "Folio Queue name for which this printer is being used.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "arInvoice": {
      "type": "object",
      "description": "Request to create a new Invoice for an Account.",
      "properties": {
        "invoice": {
          "description": "Invoice criteria for the creation of the invoice. Includes the transactions which are part of the Invoice.",
          "$ref": "#/definitions/createARInvoiceCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "createARInvoiceCriteriaType": {
      "type": "object",
      "description": "Criteria to Create a new AR Invoice.",
      "properties": {
        "folioNameValue": {
          "description": "Custom Folio Name Value Information to be saved",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/nameValueHeaderDetailType"
          }
        },
        "account": {
          "description": "Account details for whom the invoice is being created.",
          "$ref": "#/definitions/aRAccountCriteriaType"
        },
        "guestProfileId": {
          "description": "Guest Profile ID of the invoice.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "charges": {
          "description": "Information regarding the charges which have to be posted.",
          "$ref": "#/definitions/chargesCriteriaType"
        },
        "reference": {
          "description": "User-defined invoice reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "remark": {
          "description": "User-defined invoice remark.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "market": {
          "description": "Invoice market code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomClass": {
          "description": "Invoice room class code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "source": {
          "description": "Invoice source code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "fiscalFolioInfo": {
          "description": "Generate Fiscal Folio Criteria type to be used for fiscal folio generation.",
          "$ref": "#/definitions/fiscalServiceType"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "overrideCreditHoldCheck": {
          "type": "boolean"
        },
        "reason": {
          "description": "The Reason Code and Reason Text which is required when a folio is generated. This input is mandatory when the parameter Credit Bill Reason is active for Credit Bills",
          "$ref": "#/definitions/folioReasonType"
        }
      }
    },
    "nameValueHeaderDetailType": {
      "type": "object",
      "description": "Name value details collected before Folio Settlement",
      "properties": {
        "nameValueHeader": {
          "description": "Name Value Header Information",
          "$ref": "#/definitions/nameValueBaseSearchType"
        },
        "nameValueDetails": {
          "description": "Name Value Detail Information",
          "$ref": "#/definitions/nameValueDetailType"
        }
      }
    },
    "nameValueBaseSearchType": {
      "type": "object",
      "description": "Contains name value information search criteria.",
      "properties": {
        "hotelId": {
          "description": "Specifies the hotel code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "moduleName": {
          "description": "Contains model name i.e. Reservation, Profile, Folio or FinTrx.",
          "$ref": "#/definitions/nameValueModuleType"
        },
        "nameValueType": {
          "description": "Contains name value type value i.e. AFTER_SETTLEMENT, BEFORE_SETTLEMENT, RESERVATION, etc.",
          "$ref": "#/definitions/nameValueTypeType"
        },
        "sequence": {
          "description": "Indicates configuration sequence number.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "configName": {
          "description": "Custom Name value Config Name.",
          "$ref": "#/definitions/customNameValueConfigType"
        }
      }
    },
    "nameValueModuleType": {
      "type": "string",
      "enum": [
        "Reservation",
        "Folio",
        "Profile",
        "Fintrix"
      ]
    },
    "nameValueTypeType": {
      "type": "string",
      "enum": [
        "ReservationOptions",
        "AfterSettlement",
        "BeforeSettlement",
        "AfterPayment",
        "ProfileOptions"
      ]
    },
    "customNameValueConfigType": {
      "type": "string",
      "description": "Italian Lottery Number.",
      "enum": [
        "ItalianFattura",
        "Folio",
        "FinancialTransaction",
        "TaiwanInvoice",
        "SaudiCustomerType",
        "ItalianLotteryNumber"
      ]
    },
    "nameValueDetailType": {
      "type": "object",
      "description": "Detailed information returned during name value search.",
      "properties": {
        "nameValues": {
          "description": "Name Value List.",
          "$ref": "#/definitions/nameValuesType"
        }
      }
    },
    "nameValuesType": {
      "type": "array",
      "description": "List of name value pairs.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/nameValueType"
      }
    },
    "nameValueType": {
      "type": "object",
      "description": "Contains name value pair.",
      "properties": {
        "name": {
          "description": "Contains unique key which represents for record field.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "value": {
          "description": "Contains value for the record/column.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "formatString": {
          "description": "Contains format string for values.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "dataType": {
          "description": "Contains data type for values.",
          "$ref": "#/definitions/nameValueDataTypeType"
        },
        "origin": {
          "description": "Contains Origin information.",
          "$ref": "#/definitions/nameValueOriginType"
        },
        "usageInstruction": {
          "description": "Contains value(s) to identify the reports to include the collected information in e.g. PFH=Print Folio Header, PFD=Print Folio Detail.",
          "$ref": "#/definitions/codeListType"
        }
      }
    },
    "nameValueDataTypeType": {
      "type": "string",
      "enum": [
        "String",
        "Number",
        "Date",
        "Datetime",
        "Time",
        "Integer"
      ]
    },
    "nameValueOriginType": {
      "type": "object",
      "description": "Contains origin details.",
      "properties": {
        "originName": {
          "description": "Contains origin i.e. Reseravtion, Profile, Folio or FinTrx.",
          "$ref": "#/definitions/nameValueModuleType"
        },
        "destination": {
          "description": "Contains destination column for Origin.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "codeListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "minLength": 0,
        "maxLength": 20
      }
    },
    "fiscalServiceType": {
      "type": "object",
      "description": "Generate Fiscal Folio Criteria type to be used for fiscal folio generation",
      "properties": {
        "fiscalTerminal": {
          "description": "Applicable for Fiscal Terminal. The ID of the terminal where the fiscal device is connected.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "invoiceCurrencyCode": {
          "description": "Fiscal Invoicing Currency code to be used by the Fiscal Service.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instructions": {
          "description": "Defines the action of the generate folio process.",
          "$ref": "#/definitions/fiscalFolioInstruction"
        },
        "folioQueueName": {
          "description": "Folio Type , Queue name , Fiscal Flag to be used in folio generation This is a country requirement.",
          "$ref": "#/definitions/folioQueueType"
        },
        "folioSeqId": {
          "description": "Fiscal Folio sequence ID stored in queue table.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "fiscalFolioInstruction": {
      "type": "string",
      "description": "Action to generate Offline folio when no reponse is received from fiscal service.",
      "enum": [
        "Retry",
        "New",
        "Void",
        "Offline"
      ]
    },
    "folioQueueType": {
      "type": "object",
      "description": "List of charges that will be posted against the transaction code based from the test criteria.",
      "properties": {
        "folioType": {
          "description": "Folio Type to be assigned to generated folio. This is a country requirement.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "queueName": {
          "description": "Folio Queue name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "generateFiscalFolio": {
          "description": "Fiscal folio flag to call fiscal folio web service after folio generation.",
          "type": "boolean"
        }
      }
    },
    "arInvoiceDetails": {
      "type": "object",
      "description": "Response to the request to create an invoice for an Account.",
      "properties": {
        "invoice": {
          "description": "Details of the invoices which was created.",
          "$ref": "#/definitions/aRInvoicesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "statementsToBeGenerated": {
      "type": "object",
      "description": "Operation to generate AR Statements. This will validate and check if there exists any invoices to be included in the Statement based on the criteria used. If Statement Numbering is used, this will return a statement number to use in report as well as report sequence id to identify statement's invoices.",
      "properties": {
        "criteria": {
          "description": "Criteria for generating AR Statements",
          "$ref": "#/definitions/aRGenerateStatementCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "aRGenerateStatementCriteriaType": {
      "type": "object",
      "description": "Criteria to process AR Printed Statements - create history and update invoices.",
      "properties": {
        "statements": {
          "description": "Details of printed Statements received by Fetch Operation and sent to be printed. Statements type includes report sequence number and report file name.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/aRStatementType"
          }
        },
        "statementCriteria": {
          "description": "Statement criteria for invoices which are to be included in the Statement.",
          "$ref": "#/definitions/aRStatementCriteriaType"
        }
      }
    },
    "aRStatementCriteriaType": {
      "type": "object",
      "description": "Statements criteria for AR Accounts.",
      "properties": {
        "filterDate": {
          "description": "Date Range Filter for the Invoices which are to be included in the Statement.",
          "$ref": "#/definitions/dateRangeType"
        },
        "statementText": {
          "description": "Text which will be printed on the Invoice.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "inclZero": {
          "description": "Flag to indicate if Zero Balances Invoices are to be included in the Statement.",
          "type": "boolean"
        },
        "inclPrinted": {
          "description": "Flag to indicate if Previousely Printed Invoices are to be included in the Statement. This is based on the Functionality for AR PRINTED INVOICES.",
          "type": "boolean"
        },
        "balanceForwardDate": {
          "description": "The date specified in this field determines the balance forward date and balance forward total that is printed on the statement. (A balance forward shows the net amount for all invoices and payments (debits and credits) prior to the balance forward date as a single total, rather than itemizing them individually on the statement.)",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "inclFolios": {
          "description": "Flag to indicate if the associated Folios for the Invoices are to be included along with the the Statement.",
          "type": "boolean"
        }
      }
    },
    "accountTrace": {
      "type": "object",
      "description": "Request to create a Trace for an Account.",
      "properties": {
        "traceInfo": {
          "description": "Trace information to be added to the Account.",
          "$ref": "#/definitions/aRAccountTraceCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "aRAccountTraceCriteriaType": {
      "type": "object",
      "description": "The traces on the AR Account.",
      "properties": {
        "timeInfo": {
          "description": "Date of the trace.",
          "$ref": "#/definitions/traceTimeInfoType"
        },
        "reservationId": {
          "description": "Reservation ID of the reservation for which the traces are to be retrieved.",
          "$ref": "#/definitions/reservationId"
        },
        "departmentId": {
          "description": "Indicates the Department code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "traceText": {
          "description": "The information this trace contains.",
          "type": "string"
        },
        "resolveInfo": {
          "description": "Information regarding the status of the trace",
          "$ref": "#/definitions/traceResolveType"
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "hotelId": {
          "description": "The resort where the AR Account exists.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "accountId": {
          "description": "The internal unique ID for the AR Account.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "invoicePayment": {
      "type": "object",
      "properties": {
        "details": {
          "description": "Invoice and Payment Details for the Account.",
          "$ref": "#/definitions/aRAccountsInvoicesPaymentsType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in the response invoices/payments.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "invoice": {
      "type": "object",
      "description": "Response to the request to change invoice",
      "properties": {
        "invoiceDetails": {
          "description": "Invoice and Payment Details for the Account(s).",
          "$ref": "#/definitions/aRInvoiceCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "aRInvoiceCriteriaType": {
      "type": "object",
      "description": "Details of an AR Invoice.",
      "properties": {
        "hotelId": {
          "description": "Property where the invoice exists.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "Reservation ID of the invoice.",
          "$ref": "#/definitions/reservationId"
        },
        "guestProfileId": {
          "description": "Guest Profile ID of the invoice.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "age": {
          "description": "The Aging age of the invoice",
          "type": "integer"
        },
        "guestName": {
          "description": "Name of the Guest who consumed these transactions.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "originalAmount": {
          "description": "Original Amount of the Invoice",
          "$ref": "#/definitions/currencyAmountType"
        },
        "amount": {
          "description": "Current Amount of the Invoice.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "payments": {
          "description": "Total Payments made to this Invoice.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Amount still open which has not been paid",
          "$ref": "#/definitions/currencyAmountType"
        },
        "reference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "remark": {
          "description": "User-defined posting remark.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "adjusted": {
          "type": "boolean"
        },
        "parentInvoiceNo": {
          "type": "number"
        },
        "compressed": {
          "type": "boolean"
        },
        "compressedDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transferredOut": {
          "type": "boolean"
        },
        "transferredIn": {
          "type": "boolean"
        },
        "market": {
          "description": "Invoice market code.",
          "$ref": "#/definitions/marketCodeInfoType"
        },
        "roomClass": {
          "description": "Invoice room class code.",
          "$ref": "#/definitions/roomClassCodeInfoType"
        },
        "source": {
          "description": "Invoice source code.",
          "$ref": "#/definitions/sourceCodeInfoType"
        },
        "reservationInfo": {
          "description": "Reservation guest details.",
          "$ref": "#/definitions/reservationInfoType"
        },
        "cashierInfo": {
          "description": "Cashier information. Contains Id and Name details of the cashier.",
          "$ref": "#/definitions/cashierInfoType"
        },
        "transactionInfo": {
          "description": "Transaction information .",
          "$ref": "#/definitions/trxInfoType"
        },
        "paymentCard": {
          "description": "Payment card details.",
          "$ref": "#/definitions/resPaymentCardType"
        },
        "addresseeInfo": {
          "description": "Addressee Information for the folio. This is available when the Addressee functionality is used and and Addressee is attached to the folio of the Invoice.",
          "$ref": "#/definitions/profileInfoType"
        },
        "allowPartialTransferYn": {
          "description": "Flag to check Partail Transfer Allowed.",
          "type": "boolean"
        },
        "printed": {
          "description": "Flag to check Invoice Statement is Printed.",
          "type": "boolean"
        },
        "printedDate": {
          "description": "Invoice Statement Printed Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "storedFolioId": {
          "description": "ID of the Stored Folio.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "storedFolioName": {
          "description": "Name of the Stored Folio.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "storedDebitFolioId": {
          "description": "ID of the Stored Debit Folio.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "storedDebitFolioName": {
          "description": "Name of the Stored Debit Folio.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "folioTexts": {
          "description": "Additional text fields to display on the folio.",
          "$ref": "#/definitions/folioTextsType"
        },
        "customNumbers": {
          "description": "Unique Custom Numbers associated with this record.",
          "type": "array",
          "maxItems": 5,
          "items": {
            "$ref": "#/definitions/customNumberType"
          }
        },
        "fiscalResponseType": {
          "description": "Provides information which is used for fiscal response processing.",
          "$ref": "#/definitions/fiscalResponseType"
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier of the Invoice.",
          "type": "number"
        },
        "transactionDate": {
          "description": "Transaction Date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "status": {
          "description": "Status of the invoice.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionCode": {
          "description": "Transaction code of the invoice.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioNo": {
          "description": "Folio Number.",
          "type": "number"
        },
        "invoiceNo": {
          "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
          "type": "number"
        },
        "fiscalBillNo": {
          "description": "The Fiscal Bill number of this posting",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "folioTypeName": {
          "description": "The name of the Folio Type used for the Folio Number sequence.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "internalFolioWindowID": {
          "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioDate": {
          "description": "Date of Folio Generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "folioStatus": {
          "$ref": "#/definitions/folioStatusType"
        },
        "folioNoWithPrefix": {
          "description": "The folio number with prefix value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "invoiceType": {
          "description": "Invoice code of the invoice.",
          "$ref": "#/definitions/aRInvoiceCategory"
        },
        "statementNo": {
          "description": "Statementno of the invoice.",
          "type": "integer"
        },
        "revenueDate": {
          "description": "Revenue date ID of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "closeDate": {
          "description": "Close date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "postingDate": {
          "description": "Posting date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transferDate": {
          "description": "Transfer date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "canBeModified": {
          "description": "Flag to indicate if postings or adjustments can be made to the invoice.",
          "type": "boolean"
        },
        "accountId": {
          "description": "The internal unique ID for the AR Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountNo": {
          "description": "The Account Number for the Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "profileId": {
          "description": "Profile ID of the invoice.",
          "$ref": "#/definitions/profileId"
        },
        "additionalFilter": {
          "description": "To apply additional filter on the posting of an invoice",
          "type": "object",
          "properties": {
            "cashierId": {
              "description": "Cashier Id of the Cashier.",
              "type": "number"
            },
            "transactionCode": {
              "description": "Transaction number of the transactions.",
              "$ref": "#/definitions/codeListType"
            },
            "transactionSubGroup": {
              "description": "Transaction sub group of the transactions.",
              "$ref": "#/definitions/codeListType"
            },
            "dateRange": {
              "description": "The period start and end date.",
              "$ref": "#/definitions/dateRangeType"
            },
            "referenceWildCard": {
              "description": "Filters the results for reference.",
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "supplementWildCard": {
              "description": "Filter the results for supplement.",
              "type": "string",
              "minLength": 0,
              "maxLength": 200
            },
            "checkNumberWildCard": {
              "description": "Lookup string which will try to match an existing Cheque number's.",
              "type": "string",
              "minLength": 0,
              "maxLength": 200
            }
          }
        },
        "cashierId": {
          "description": "The Cashier who is posting.",
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "arAgingCycles": {
      "type": "object",
      "description": "Response for Fetch AR Aging Cycles.",
      "properties": {
        "agingCycles": {
          "description": "Aging Cycles for the selected Hotel",
          "$ref": "#/definitions/aRAgingCyclesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "aRAgingCyclesType": {
      "type": "array",
      "description": "Collections of AR Aging Cycles.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/aRAgingType"
      }
    },
    "batchChargesToPost": {
      "type": "object",
      "description": "Request for posting a charge in a batch to list of accounts.",
      "properties": {
        "criteria": {
          "$ref": "#/definitions/aRPostChargesInBatchCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "aRPostChargesInBatchCriteriaType": {
      "type": "object",
      "description": "Criteria for posting a charge to list of accounts.",
      "properties": {
        "accountIdList": {
          "description": "The list of internal unique ID for AR Accounts.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "chargeInfo": {
          "description": "The charge information to be applied to ar accounts.",
          "$ref": "#/definitions/chargeCriteriaType"
        },
        "cashierId": {
          "description": "The Cashier who is posting.",
          "$ref": "#/definitions/cashierId"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "transferDirectBillsToAr": {
      "type": "object",
      "description": "Request for Transfer Directs bill to AR.",
      "properties": {
        "criteria": {
          "description": "Criteria in transferring direct bills to account receivable.",
          "$ref": "#/definitions/transferDirectBillsToArCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transferDirectBillsToArCriteriaType": {
      "type": "object",
      "description": "Provides information about Transfer Direct Bills To Ar Criteria Type.",
      "properties": {
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "invoiceNo": {
          "description": "List of Invoice Numbers.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "number"
          }
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "invoiceAppliedPayments": {
      "type": "object",
      "description": "Response to the applied payment details,Contains errors or warnings if any.",
      "properties": {
        "details": {
          "description": "Details for the applied payments.",
          "$ref": "#/definitions/aRAppliedPaymentsType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in the response invoices/payments.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "aRAppliedPaymentsType": {
      "type": "array",
      "description": "Applied Payment record.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/aRAppliedPaymentType"
      }
    },
    "aRAppliedPaymentType": {
      "type": "object",
      "description": "Details of an AR Invoice.",
      "properties": {
        "hotelId": {
          "description": "Property where the invoice exists.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "Reservation ID of the invoice.",
          "$ref": "#/definitions/reservationId"
        },
        "guestProfileId": {
          "description": "Guest Profile ID of the invoice.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "age": {
          "description": "The Aging age of the invoice",
          "type": "integer"
        },
        "guestName": {
          "description": "Name of the Guest who consumed these transactions.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "originalAmount": {
          "description": "Original Amount of the Invoice",
          "$ref": "#/definitions/currencyAmountType"
        },
        "amount": {
          "description": "Current Amount of the Invoice.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "payments": {
          "description": "Total Payments made to this Invoice.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Amount still open which has not been paid",
          "$ref": "#/definitions/currencyAmountType"
        },
        "reference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "remark": {
          "description": "User-defined posting remark.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "adjusted": {
          "type": "boolean"
        },
        "parentInvoiceNo": {
          "type": "number"
        },
        "compressed": {
          "type": "boolean"
        },
        "compressedDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transferredOut": {
          "type": "boolean"
        },
        "transferredIn": {
          "type": "boolean"
        },
        "market": {
          "description": "Invoice market code.",
          "$ref": "#/definitions/marketCodeInfoType"
        },
        "roomClass": {
          "description": "Invoice room class code.",
          "$ref": "#/definitions/roomClassCodeInfoType"
        },
        "source": {
          "description": "Invoice source code.",
          "$ref": "#/definitions/sourceCodeInfoType"
        },
        "reservationInfo": {
          "description": "Reservation guest details.",
          "$ref": "#/definitions/reservationInfoType"
        },
        "cashierInfo": {
          "description": "Cashier information. Contains Id and Name details of the cashier.",
          "$ref": "#/definitions/cashierInfoType"
        },
        "transactionInfo": {
          "description": "Transaction information .",
          "$ref": "#/definitions/trxInfoType"
        },
        "paymentCard": {
          "description": "Payment card details.",
          "$ref": "#/definitions/resPaymentCardType"
        },
        "addresseeInfo": {
          "description": "Addressee Information for the folio. This is available when the Addressee functionality is used and and Addressee is attached to the folio of the Invoice.",
          "$ref": "#/definitions/profileInfoType"
        },
        "allowPartialTransferYn": {
          "description": "Flag to check Partail Transfer Allowed.",
          "type": "boolean"
        },
        "printed": {
          "description": "Flag to check Invoice Statement is Printed.",
          "type": "boolean"
        },
        "printedDate": {
          "description": "Invoice Statement Printed Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "storedFolioId": {
          "description": "ID of the Stored Folio.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "storedFolioName": {
          "description": "Name of the Stored Folio.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "storedDebitFolioId": {
          "description": "ID of the Stored Debit Folio.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "storedDebitFolioName": {
          "description": "Name of the Stored Debit Folio.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "folioTexts": {
          "description": "Additional text fields to display on the folio.",
          "$ref": "#/definitions/folioTextsType"
        },
        "customNumbers": {
          "description": "Unique Custom Numbers associated with this record.",
          "type": "array",
          "maxItems": 5,
          "items": {
            "$ref": "#/definitions/customNumberType"
          }
        },
        "fiscalResponseType": {
          "description": "Provides information which is used for fiscal response processing.",
          "$ref": "#/definitions/fiscalResponseType"
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier of the Invoice.",
          "type": "number"
        },
        "transactionDate": {
          "description": "Transaction Date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "status": {
          "description": "Status of the invoice.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionCode": {
          "description": "Transaction code of the invoice.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioNo": {
          "description": "Folio Number.",
          "type": "number"
        },
        "invoiceNo": {
          "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
          "type": "number"
        },
        "fiscalBillNo": {
          "description": "The Fiscal Bill number of this posting",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "folioTypeName": {
          "description": "The name of the Folio Type used for the Folio Number sequence.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "internalFolioWindowID": {
          "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "folioDate": {
          "description": "Date of Folio Generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "folioStatus": {
          "$ref": "#/definitions/folioStatusType"
        },
        "folioNoWithPrefix": {
          "description": "The folio number with prefix value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "invoiceType": {
          "description": "Invoice code of the invoice.",
          "$ref": "#/definitions/aRInvoiceCategory"
        },
        "statementNo": {
          "description": "Statementno of the invoice.",
          "type": "integer"
        },
        "revenueDate": {
          "description": "Revenue date ID of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "closeDate": {
          "description": "Close date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "postingDate": {
          "description": "Posting date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transferDate": {
          "description": "Transfer date of the invoice.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "canBeModified": {
          "description": "Flag to indicate if postings or adjustments can be made to the invoice.",
          "type": "boolean"
        },
        "appliedAmount": {
          "description": "Applied Amount of the Invoice",
          "$ref": "#/definitions/currencyAmountType"
        },
        "paymentTrxNo": {
          "description": "Transaction no of the Payment.",
          "type": "number"
        }
      }
    },
    "arPaymentsToBeCreated": {
      "type": "object",
      "description": "Request to post a payment to an AR Account and apply the payment to Invoices..",
      "properties": {
        "criteria": {
          "description": "Criteria for the payment information to be posted.",
          "$ref": "#/definitions/aRPaymentsCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "aRPaymentsCriteriaType": {
      "type": "object",
      "properties": {
        "payment": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/aRPaymentCriteria"
          }
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "aRPaymentCriteria": {
      "type": "object",
      "description": "Criteria for applying payments to invoices or posting an unallocated payment to an AR Account.",
      "properties": {
        "hotelId": {
          "description": "Property code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "paymentMethod": {
          "description": "Payment method used by the payee.",
          "$ref": "#/definitions/cashieringPaymentMethodType"
        },
        "postingAmount": {
          "description": "Amount to post to the folio.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postingReference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "postingRemark": {
          "description": "User-defined posting remark.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "comments": {
          "description": "User Defined Comments. Used for Deposit Payment postings.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "applyCCSurcharge": {
          "description": "Flag to indicate if Credit Card Surcharge has to be applied to this payment, when the functionality for Credit Card Surcharge is available.",
          "type": "boolean"
        },
        "manualPaymentTaxInfo": {
          "description": "The Payment Tax information for Thailand Tax functionality. The invoice number and the date will be used.",
          "$ref": "#/definitions/paymentTaxType"
        },
        "creditablePaymentTaxes": {
          "description": "Used for Thailand Tax Functionality.The payment tax records that can be used for a Credit Note for this reservation.",
          "$ref": "#/definitions/paymentTaxesType"
        },
        "terminalId": {
          "description": "Applicable for chip and pin. The ID of the terminal where the chip and pin device is connected and where the payment is made.",
          "type": "string"
        },
        "overrideInsufficientCC": {
          "description": "Flag to allow a rebate by Credit Card",
          "type": "boolean"
        },
        "changeDueAmount": {
          "description": "Amount of change given to guest.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "compRedemptions": {
          "description": "Comp redemption information used to post as payment.",
          "$ref": "#/definitions/compRedemptionsType"
        },
        "overrideARCreditLimit": {
          "description": "Flag to override account receivable credit limit",
          "type": "boolean"
        },
        "applyCurrencyTaxes": {
          "description": "Flag to indidcate if currency taxes need to be applied or not. For ex, in case of Chile, it depends upon nationality of the guest.",
          "type": "boolean"
        },
        "vATOffset": {
          "description": "Flag to indidcate if currency taxes need to be applied or not. For ex, in case of Chile, it depends upon nationality of the guest.",
          "type": "boolean"
        },
        "action": {
          "description": "Payment action to know from where the payment has been made.",
          "$ref": "#/definitions/postPaymentActionType"
        },
        "prepaidCardRedemptions": {
          "description": "Prepaid Card redemption information used to post as payment.",
          "$ref": "#/definitions/prepaidCardRedemptionsType"
        },
        "folioWindowNo": {
          "type": "integer"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        },
        "account": {
          "description": "Account to which the payment will be posted .",
          "$ref": "#/definitions/aRAccountCriteriaType"
        },
        "invoices": {
          "description": "List of Invoices to which the payment may be applied.",
          "$ref": "#/definitions/aRPaymentInvoicesType"
        },
        "applyType": {
          "description": "Defines how the payment has to be applied.",
          "$ref": "#/definitions/aRApplyType"
        },
        "sequenceNo": {
          "description": "Sequence of the payment in a batch request.",
          "type": "integer"
        },
        "generateFiscalPayload": {
          "description": "Flag to indicate if a fiscal payload should be generated for the Payment.",
          "type": "boolean"
        },
        "fiscalTerminalId": {
          "description": "Applicable for Fiscal Terminal. The ID of the terminal where the fiscal device is connected.",
          "type": "string"
        }
      }
    },
    "cashieringPaymentMethodType": {
      "type": "object",
      "properties": {
        "paymentCard": {
          "$ref": "#/definitions/resPaymentCardType"
        },
        "balance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "authorizationRule": {
          "$ref": "#/definitions/authorizationRuleType"
        },
        "emailFolioInfo": {
          "description": "Information on an email for the customer.",
          "type": "object",
          "properties": {
            "email": {
              "description": "eMail deatils for the profile.",
              "$ref": "#/definitions/emailType"
            },
            "emailFolio": {
              "type": "boolean"
            },
            "id": {
              "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "type": {
              "description": "A reference to the type of object defined by the UniqueID element.",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            }
          }
        },
        "paymentMethod": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "folioView": {
          "type": "integer"
        },
        "authorizationApproval": {
          "description": "Authorization approval record.",
          "$ref": "#/definitions/authorizationInfoType"
        },
        "track2Data": {
          "description": "Track2 data for the card which would be sent to the CC vendor as part of the authorization.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "authorizationInfoType": {
      "type": "object",
      "properties": {
        "approvalAmount": {
          "description": "Approved amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "approvalCode": {
          "description": "The approval code authenticates the authorization.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "originalAuthSequence": {
          "description": "Unique Authorization Sequence for the authorization and settlement.",
          "type": "integer"
        },
        "vendorTranId": {
          "description": "Vendor transaction id for the authorization.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "paymentTaxType": {
      "type": "object",
      "description": "Information regarding payments made which have Payment Tax.",
      "properties": {
        "taxInvoiceNo": {
          "description": "The Tax Invoice for this payment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "paymentType": {
          "description": "The Type of Payment transaction.",
          "$ref": "#/definitions/paymentTax"
        },
        "amount": {
          "description": "The payment amount/",
          "$ref": "#/definitions/currencyAmountType"
        },
        "taxableAmount": {
          "description": "The amount that is taxable.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "nonTaxableAmount": {
          "description": "Documentation goes here",
          "$ref": "#/definitions/currencyAmountType"
        },
        "availableCredit": {
          "description": "The amount that is not taxable.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "paymentDate": {
          "description": "The Payment Invoice date",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier.",
          "type": "number"
        },
        "transactionDate": {
          "description": "Transaction Date of the Payment.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionCode": {
          "description": "Billing Transaction Code of the Payment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "transactionDescription": {
          "description": "Billing Transaction Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "folioWindowNo": {
          "type": "integer"
        }
      }
    },
    "paymentTax": {
      "type": "string",
      "description": "The types of Payment Tax transactions.",
      "enum": [
        "Deposit",
        "FrontOffice",
        "CreditNote",
        "CityLedger",
        "AccountsReceivables",
        "NonVat"
      ]
    },
    "paymentTaxesType": {
      "type": "array",
      "description": "Payment Tax record.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/paymentTaxType"
      }
    },
    "compRedemptionsType": {
      "type": "array",
      "description": "Information regarding Complimentary Bucket Redemption object.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/redemptionType"
      }
    },
    "redemptionType": {
      "type": "object",
      "description": "Redemption information.",
      "properties": {
        "amount": {
          "description": "The amount to redeem when posting a payment.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "code": {
          "description": "The associated redemption code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "supplement": {
          "description": "Additional information regarding the redemption.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "description": {
          "description": "Description of the Complimentary Bucket Redemption.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionCode": {
          "description": "Transaction code of the Complimentary Bucket Redemption.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "availableAmount": {
          "description": "Available Amount of the Complimentary Bucket Redemption.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "transactionNo": {
          "description": "Transaction Number of the Complimentary Bucket Redemption.",
          "type": "number"
        },
        "approvalCode": {
          "description": "Approval Code of the Complimentary Bucket Redemption.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "postPaymentActionType": {
      "type": "string",
      "description": "Prepaid Card Redemption Action.",
      "enum": [
        "Billing",
        "Settlefolio",
        "Deposit",
        "Compredemption",
        "Prepaidcardredemption"
      ]
    },
    "prepaidCardRedemptionsType": {
      "type": "array",
      "description": "A prepaid redemption info object to be used for posting a payment.",
      "maxItems": 1000,
      "items": {
        "$ref": "#/definitions/prepaidCardRedemptionType"
      }
    },
    "prepaidCardRedemptionType": {
      "type": "object",
      "description": "Redemption information.",
      "properties": {
        "cardNo": {
          "description": "Prepaid card number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "pin": {
          "description": "Prepaid card number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "interfaceId": {
          "description": "The unique ID of the Interface.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "amount": {
          "description": "The amount to redeem when posting a payment.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "transactionCode": {
          "description": "The associated redemption transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reference": {
          "description": "Additional information regarding the redemption.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "arPayments": {
      "type": "object",
      "description": "Response notifying if the posting of a payment to an AR Account.",
      "properties": {
        "payments": {
          "description": "List of Postings produced by Post AR Payment Request.",
          "$ref": "#/definitions/aRPaymentsType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in response postings.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "statementHistory": {
      "type": "object",
      "description": "Statement History.",
      "properties": {
        "aRStatementHistory": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/aRStatementHistoryType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "aRStatementHistoryType": {
      "type": "object",
      "description": "Report History Type used as based type for Remiders and Statements History types.",
      "properties": {
        "reportName": {
          "description": "Report Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "reportFileName": {
          "description": "Report file name when exists to allow report re-printing.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "dateSent": {
          "description": "The Reminder Letter name which is to be used for this Reminder based on the setup on the Account Type.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "statementNo": {
          "description": "When using Statement Numbering, a unique number is associated to the Statement.",
          "type": "integer"
        }
      }
    },
    "reversePayment": {
      "type": "object",
      "description": "Request for reverse AR payment",
      "properties": {
        "arPayment": {
          "$ref": "#/definitions/reversePaymentCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reversePaymentCriteriaType": {
      "type": "object",
      "description": "Criteria type for an AR Account.",
      "properties": {
        "hotelId": {
          "description": "Property where the AR Account exists. This is required.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "profileId": {
          "description": "Profile ID of the account",
          "$ref": "#/definitions/profileId"
        },
        "accountId": {
          "description": "The internal unique ID for the AR Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountNo": {
          "description": "Account Number for the AR Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "accountName": {
          "description": "Account Name for the AR Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "transactionNo": {
          "type": "number"
        }
      }
    },
    "arCreditCardPayments": {
      "type": "object",
      "description": "Response after fetching AR credit card payments.",
      "properties": {
        "aRCreditCardPaymentsDetails": {
          "description": "AR Credit Card Payment Details for the Account.",
          "$ref": "#/definitions/aRCreditCardPaymentsInfoType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "aRCreditCardPaymentsInfoType": {
      "type": "object",
      "description": "Collection of AR Credit Card payments Details.",
      "properties": {
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "aRCreditCardPayments": {
          "description": "AR Credit Card Payments info .",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/aRCreditCardPaymentInfoType"
          }
        }
      }
    },
    "aRCreditCardPaymentInfoType": {
      "type": "object",
      "description": "AR Credit Card payment information.",
      "properties": {
        "guestName": {
          "description": "Guest Name .",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "profileId": {
          "description": "Guest profile ID.",
          "$ref": "#/definitions/profileId"
        },
        "amount": {
          "description": "Posted Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postingDate": {
          "description": "Date of posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reference": {
          "description": "Reference Text for the payment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "remark": {
          "description": "Remarks for payment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "folioNo": {
          "description": "The Folio number of this posting, if there was a Folio already generated.",
          "type": "number"
        },
        "fiscalFolioNo": {
          "description": "Bill Number returned by the Fiscal Printer.",
          "type": "number"
        },
        "transactionNo": {
          "description": "Transaction number of the payment.",
          "type": "number"
        },
        "transactionDate": {
          "description": "Transaction Date of the payment.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "unlinkInvoiceFromStatement": {
      "type": "object",
      "description": "Request to unlink invoice from statement",
      "properties": {
        "criteria": {
          "description": "Criteria for unlinking invoice from statement",
          "$ref": "#/definitions/unlinkStatementCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "unlinkStatementCriteriaType": {
      "type": "object",
      "description": "Criteria for unlinking invoice from statement.",
      "properties": {
        "invoiceTrxNoList": {
          "description": "Transaction number list of invoices.",
          "$ref": "#/definitions/invoiceTrxNoList"
        },
        "hotelId": {
          "description": "Hotel code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "invoiceTrxNoList": {
      "type": "array",
      "description": "Transaction Number .",
      "maxItems": 4000,
      "items": {
        "type": "number"
      }
    },
    "invoicesPayments": {
      "type": "object",
      "description": "Response for the fetch invoice and payments details request.",
      "properties": {
        "details": {
          "description": "Invoice and Payment Details for the Account(s).",
          "$ref": "#/definitions/aRAccountsInvoicesPaymentsType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in the response invoices/payments.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "invoicePostings": {
      "type": "object",
      "description": "Response to the request to fetch postings for an invoice",
      "properties": {
        "invoicePostingsDetails": {
          "description": "A collection of the invoice posting records.",
          "$ref": "#/definitions/aRInvoicePostingsType"
        },
        "trxCodesInfo": {
          "description": "Transaction codes information which are in the response invoices/payments.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "aRInvoicePostingsType": {
      "type": "array",
      "description": "Invoice posting detail.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/aRInvoicePostingType"
      }
    },
    "aRInvoicePostingType": {
      "type": "object",
      "description": "Posting details.",
      "properties": {
        "referenceTransactionNo": {
          "description": "Generate transaction number for the Posting.",
          "type": "number"
        },
        "remark": {
          "description": "Posting remarks.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "reference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "checkNo": {
          "description": "Check number for the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "checkCount": {
          "description": "Check number count for the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "postedAmount": {
          "description": "Actual currency amount posted.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "price": {
          "description": "Indicates the unit price of the consumption.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "quantity": {
          "description": "Indicates Quantity.",
          "type": "number"
        },
        "transactionType": {
          "description": "This is the transaction type which says whether it is a Consumption(C), Payment (FC) or Package (PK) and it is inherited from transaction code.",
          "$ref": "#/definitions/cashieringTransactionTypeType"
        },
        "creditAmount": {
          "description": "The amount posted as credit to the ledger.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "debitAmount": {
          "description": "The amount posted as debit to the ledger.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "articleCode": {
          "description": "Information regarding the Article(Using Articles Functionality) of this transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cashierInfo": {
          "$ref": "#/definitions/cashierInfoType"
        },
        "paidOut": {
          "description": "Indicates if this transaction is a paid out transaction.",
          "type": "boolean"
        },
        "arrangementCode": {
          "description": "Corrected arrangement code from the package associated to this transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "groupTypeInfo": {
          "description": "Information related to transaction grouping.",
          "$ref": "#/definitions/postingGroupType"
        },
        "rateCode": {
          "description": "Rate code associated to this transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "compRedemptionCode": {
          "description": "Comp redemption code assiciated to the transaction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "updateInfo": {
          "description": "Update info associated to this transaction.",
          "type": "object",
          "properties": {
            "updateDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "updateBy": {
              "type": "string"
            }
          }
        },
        "fbaCertificate": {
          "description": "Flag indicates that the posting is Flexible Benefits Awards Certificate",
          "type": "boolean"
        },
        "taxInvoiceNo": {
          "description": "Tax invoice number generated by payment tax.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "serviceRecovery": {
          "description": "Flag to indicates service recovery",
          "type": "boolean"
        },
        "compPostingsInfo": {
          "description": "Comp Postings information for the folio.",
          "$ref": "#/definitions/compPostingsType"
        },
        "financialTransactionIdList": {
          "description": "Collection of unique identifiers of the financial transactions.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "exchange": {
          "description": "Available when the Fetch Folio Search Type requests the amounts to be converted to a currency different from the Resort currency.",
          "$ref": "#/definitions/exchangeAmounts"
        },
        "approvalCode": {
          "description": "Approval code of the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "approvalStatus": {
          "description": "Approval status of the posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "stampDuty": {
          "description": "Flag to identify a Stamp Duty Transaction.",
          "type": "boolean"
        },
        "transactionNo": {
          "description": "Unique Transaction Identifier.",
          "type": "number"
        },
        "transactionDate": {
          "description": "Transaction Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionCode": {
          "description": "Billing Transaction Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "transactionDescription": {
          "description": "Billing Transaction Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionAmount": {
          "description": "The amount of the transaction.",
          "type": "number"
        },
        "postingDate": {
          "description": "Date and time of posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "revenueDate": {
          "description": "The date on which the transaction has its revenue effect.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "receiptNo": {
          "description": "The receipt number of the transaction, if there is a receipt generated.",
          "type": "number"
        },
        "roundingDifferenceTrx": {
          "description": "Indicator to determine if the posting was a posting for the Rounding Difference.",
          "type": "boolean"
        },
        "commissionable": {
          "description": "Indicator to determine if the transaction is commissionable.",
          "type": "boolean"
        },
        "reversePaymentTransactionNo": {
          "description": "Reverse payment transaction unique identifier.",
          "type": "number"
        },
        "canAdjustInvoice": {
          "description": "Indicator to determine if the transaction can be adjusted.",
          "type": "boolean"
        },
        "depositTransactionId": {
          "description": "Tax Service Accounting Codes used.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "groupByCount": {
          "description": "When some SummaryPostingsGroupBy element is send as request ,then this element will represent how many transactions rolled up into this Summary Posting Type.",
          "type": "number"
        },
        "creditInvoiceGuestName": {
          "description": "Guest Name of the Credit Invoice. For other invoices, this element will be empty.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "cashieringTransactionTypeType": {
      "type": "string",
      "description": "Wrapper Transaction Type.",
      "enum": [
        "Revenue",
        "Payment",
        "Wrapper"
      ]
    },
    "postingGroupType": {
      "type": "object",
      "description": "Transaction group information. Ever posting could represent a. Regular transaction b. Group header - has Group Id, Count, Descripton and Includes Group Memebers elements c. Group transaction - has SubGroupId element pointing to Group Header Id",
      "properties": {
        "groupId": {
          "description": "Group Id.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "groupCount": {
          "description": "Number of transactions in group.",
          "type": "integer"
        },
        "groupDescription": {
          "description": "Group Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "subGroupId": {
          "description": "Indicates to which group transaction belongs.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "compPostingsType": {
      "type": "object",
      "description": "Collection of comp postings.",
      "properties": {
        "authorizer": {
          "description": "Authorizer name of the Comp Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "approvalStatus": {
          "description": "Approval status of the comp account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "exchangeAmounts": {
      "type": "object",
      "description": "Converted values for the Exchange Currency requested.",
      "properties": {
        "debitAmount": {
          "description": "The converted Guest Ledger Debit Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "creditAmount": {
          "description": "The converted Guest Ledger Credit Amount.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "invoices": {
      "type": "object",
      "description": "Request to close invoice(s)",
      "properties": {
        "invoices": {
          "description": "Invoices Detail for the Account.",
          "$ref": "#/definitions/aRInvoicesCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "aRInvoicesCriteriaType": {
      "type": "array",
      "description": "Criteria for searching Invoices.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/aRInvoiceCriteriaType"
      }
    },
    "arInvoicesAccount": {
      "type": "object",
      "description": "Request to change AR invoice(s) account in AR.",
      "properties": {
        "criteria": {
          "description": "Criteria for changing invoice(s) account.",
          "$ref": "#/definitions/changeARInvoicesAccountCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changeARInvoicesAccountCriteriaType": {
      "type": "object",
      "description": "Criteria for changing AR invoice(s) account.",
      "properties": {
        "invoices": {
          "description": "AR Invoice(s) to be changed.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/aRInvoiceType"
          }
        },
        "toAccount": {
          "description": "The Account which will be assigned to selected invoices.",
          "$ref": "#/definitions/aRAccountCriteriaType"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "arOldBalances": {
      "type": "object",
      "description": "Request to Post AR Old Balances",
      "properties": {
        "oldBalances": {
          "description": "Details for Posting AR Old Balance Single Postings",
          "$ref": "#/definitions/aROldBalancePostingsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "aROldBalancePostingsType": {
      "type": "array",
      "description": "Collections of Old Balance Postings",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/aROldBalancePostingType"
      }
    },
    "aROldBalancePostingType": {
      "type": "object",
      "description": "AR Old Balances Base Posting Type.",
      "properties": {
        "accountId": {
          "description": "The Criteria for finding the Account.",
          "$ref": "#/definitions/aRAccountCriteriaType"
        },
        "posting": {
          "description": "The values for posting a single charge to the account.",
          "$ref": "#/definitions/aROldBalanceChargeType"
        },
        "aging": {
          "description": "The values for posting charges to an Aging Cycle",
          "$ref": "#/definitions/aRAgingInfoType"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "aROldBalanceChargeType": {
      "type": "object",
      "description": "AR Old Balances Single Posting Type.",
      "properties": {
        "postingReference": {
          "description": "User-defined posting reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "postingRemark": {
          "description": "User-defined Supplement.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "date": {
          "description": "Date of the Posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "folioNo": {
          "description": "The Folio number of this posting, if there was a Folio entered.",
          "type": "number"
        },
        "fiscalBillNo": {
          "description": "The Fiscal Bill number of this posting",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "amount": {
          "description": "Posted Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "taxCodes": {
          "description": "Tax Codes details.",
          "$ref": "#/definitions/aRTaxCodesType"
        },
        "paid": {
          "description": "Amount paid in resort currency.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "aRTaxCodesType": {
      "type": "array",
      "description": "Values of atmost 20 Taxes entered.",
      "maxItems": 20,
      "items": {
        "$ref": "#/definitions/aRTaxCodeType"
      }
    },
    "aRTaxCodeType": {
      "type": "object",
      "description": "AR Old Balances Single Posting Type - Tax and Transaction Code details.",
      "properties": {
        "taxCode": {
          "description": "Tax Code number",
          "type": "integer",
          "minimum": 1,
          "maximum": 20
        },
        "transactionCode": {
          "description": "Transaction Code Value",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "taxAmount": {
          "description": "Value of the Tax entered.",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "profileAging": {
      "type": "object",
      "description": "Response to the request to fetch the total Aging information for a Profile.",
      "properties": {
        "aging": {
          "description": "The Aging Totals information for the Profile and the resorts requested.",
          "$ref": "#/definitions/aRProfileAgingInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "aRProfileAgingInfoType": {
      "type": "object",
      "description": "Aging information for a profile. Includes information for the profile for all accounts across properties.",
      "properties": {
        "totalProfileAging": {
          "description": "Aging bucket information for the Property, based on the criteria selected.",
          "$ref": "#/definitions/aRAgingInfoType"
        },
        "hotel": {
          "description": "Aging bucket information for the Property, based on the criteria selected.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "object",
            "properties": {
              "totalHotelAging": {
                "description": "Aging bucket information for the Property, based on the criteria selected.",
                "$ref": "#/definitions/aRAgingInfoType"
              },
              "accountAging": {
                "description": "Account Aging details for Accounts which belong to this Property.",
                "$ref": "#/definitions/aRAccountsType"
              },
              "hotelId": {
                "description": "Property Code for the Aging information.",
                "type": "string",
                "minLength": 0,
                "maxLength": 20
              }
            }
          }
        }
      }
    },
    "profileYearView": {
      "type": "object",
      "description": "Response to the request to fetch the total Year View information for a Profile.",
      "properties": {
        "aRProfileYearView": {
          "description": "The Year View Totals information for the Profile and the resorts requested.",
          "$ref": "#/definitions/aRProfileYearViewInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "aRProfileYearViewInfoType": {
      "type": "object",
      "description": "Year View information for a profile. Includes information for the profile for all accounts across properties.",
      "properties": {
        "totalProfileYearView": {
          "description": "Year View information for the Property, based on the criteria selected.",
          "$ref": "#/definitions/aRYearViewInfoType"
        },
        "hotel": {
          "description": "Year View information for the Property, based on the criteria selected.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "object",
            "properties": {
              "totalHotelYearView": {
                "description": "Year View information for the Property, based on the criteria selected.",
                "$ref": "#/definitions/aRYearViewInfoType"
              },
              "account": {
                "description": "Account Year View details for Accounts which belong to this Property.",
                "$ref": "#/definitions/aRAccountsType"
              },
              "hotelId": {
                "description": "Property Code for the Year Veiw information.",
                "type": "string",
                "minLength": 0,
                "maxLength": 20
              }
            }
          }
        }
      }
    },
    "invoicesAndPaymentsToTransfer": {
      "type": "object",
      "description": "Request for transferring invoice(s) in AR.",
      "properties": {
        "criteria": {
          "description": "Criteria in transferring invoice(s) to another account.",
          "$ref": "#/definitions/transferARInvoicesCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "transferARInvoicesCriteriaType": {
      "type": "object",
      "description": "Criteria for transferring invoice(s) to another account.",
      "properties": {
        "invoicesTransferType": {
          "description": "AR Invoice(s) to be transferred.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/aRInvoiceType"
          }
        },
        "fromAccount": {
          "description": "The Account for whom the Invoice(s) are currently associated with.",
          "$ref": "#/definitions/aRAccountCriteriaType"
        },
        "toAccount": {
          "description": "The Account for whom the Invoice(s) are to be transferred upon.",
          "$ref": "#/definitions/aRAccountCriteriaType"
        },
        "transferAmount": {
          "description": "Partial amount to be transferred. Partial amounts will not be allowed when multiple invoices are to be transferred.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "remarks": {
          "description": "User defined Remarks for this transfer",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "overrideCreditHoldCheck": {
          "type": "boolean"
        },
        "cashierId": {
          "$ref": "#/definitions/cashierId"
        }
      }
    },
    "transferPostings": {
      "type": "object",
      "description": "Request for transferring invoice posting(s)in AR.",
      "properties": {
        "criteria": {
          "description": "Criteria to transfer invoice posting(s) to another invoice.",
          "$ref": "#/definitions/aRTransferPostingsCriteriaType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "aRTransferPostingsCriteriaType": {
      "type": "object",
      "description": "",
      "properties": {
        "fromInvoice": {
          "description": "From Invoice and Invoice posting detail.",
          "type": "object",
          "properties": {
            "invoice": {
              "description": "Invoice detail.",
              "$ref": "#/definitions/aRInvoiceCriteriaType"
            },
            "invoicePostings": {
              "description": "Invoice postings detail.",
              "$ref": "#/definitions/aRInvoicePostingsType"
            }
          }
        },
        "toInvoice": {
          "description": "To Invoice detail.",
          "type": "object",
          "properties": {
            "invoice": {
              "description": "Invoice detail.",
              "$ref": "#/definitions/aRInvoiceCriteriaType"
            }
          }
        }
      }
    },
    "folioReasonType": {
      "type": "object",
      "description": "Type for Folio Reason and Text.",
      "properties": {
        "code": {
          "description": "The Folio Reason Code.Currently Applicable only for Credit Bills.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "text": {
          "description": "The Folio Reason Text.Currently Applicable only for Credit Bills.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    }
  },
  "tags": [
    {
      "name": "AccountsReceivables",
      "description": "The REST API's will allow you to create, manage, or delete accounts, add comments, traces, reminders, create or close invoices for example."
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}
{
  "swagger": "2.0",
  "info": {
    "title": "OPERA Cloud Integration Configuration API",
    "description": "APIs catering to Integration Configuration in OPERA Cloud.  Operations such as get Hotel Interface Types, or get UDF mappings can be found in this module.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>",
    "version": "24.4",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality_apis_ww_grp@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "schemes": [
    "https"
  ],
  "basePath": "/int/config/v1",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/configuredExternalDevices": {
      "get": {
        "summary": "Operation to fetch configured external devices.",
        "description": " <p><strong>OperationId:</strong>getConfiguredExternalDevices</p>",
        "operationId": "getConfiguredExternalDevices",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "active",
            "in": "query",
            "required": false,
            "description": "Flag that indicates whether the device is active.",
            "type": "boolean"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "idEditable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "label",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "deviceType",
            "in": "query",
            "required": false,
            "type": "string",
            "uniqueItems": true,
            "enum": [
              "Scanner",
              "CreditCard",
              "Fiscal",
              "Device"
            ]
          },
          {
            "name": "deviceCode",
            "in": "query",
            "required": false,
            "type": "string",
            "uniqueItems": true,
            "enum": [
              "TtiScannerMobile",
              "TtiScannerDesktop",
              "SamsotechScanner",
              "GenScannerDesktop",
              "GenScannerMobile",
              "ChipAndPin",
              "FiscalTerminal",
              "Device"
            ]
          },
          {
            "name": "deviceArea",
            "in": "query",
            "required": false,
            "description": "The area where the device is installed",
            "type": "string"
          },
          {
            "name": "displayName",
            "in": "query",
            "required": false,
            "description": "External device display name.",
            "type": "string"
          },
          {
            "name": "mobileYN",
            "in": "query",
            "required": false,
            "description": "Indicator if device type is mobile or desktop.",
            "type": "boolean"
          },
          {
            "name": "desktopYN",
            "in": "query",
            "required": false,
            "description": "Indicator if device type is mobile or desktop.",
            "type": "boolean"
          },
          {
            "name": "registerAddress",
            "in": "query",
            "required": false,
            "description": "The address which the Cash Register ID ( Device ID ) is associated with.",
            "type": "string"
          },
          {
            "name": "deviceValue",
            "in": "query",
            "required": false,
            "description": "External device Value.",
            "type": "string"
          },
          {
            "name": "parameterName",
            "in": "query",
            "required": false,
            "description": "Name of the parameter.",
            "type": "string"
          },
          {
            "name": "parameterValue",
            "in": "query",
            "required": false,
            "description": "Value of the parameter.",
            "type": "string"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "Flag to choose to include inactive external devices or not.",
            "type": "boolean"
          },
          {
            "name": "fiscalPartnerCode",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Used for fiscal partner codes. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          },
          {
            "name": "partnerCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used for fiscal partner codes. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "fetchInstruction",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Fetch instructions that can be used for all or partner specific.",
            "uniqueItems": true,
            "enum": [
              "Default",
              "Partner"
            ]
          },
          {
            "name": "partnerPayloadType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Used for searching a partner code configured with the specified fiscal payload type.",
            "uniqueItems": true,
            "enum": [
              "CheckOut",
              "FolioGeneration"
            ]
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for Ping operation.",
            "schema": {
              "$ref": "#/definitions/fetchedConfiguredExternalDevices"
            }
          },
          "204": {
            "description": "ConfiguredExternalDevices not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      }
    },
    "/deliveryMethods": {
      "get": {
        "summary": "Operation to fetch delivery methods.",
        "description": " <p><strong>OperationId:</strong>getDeliveryMethods</p>",
        "operationId": "getDeliveryMethods",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Property code.",
            "type": "string"
          },
          {
            "name": "croCode",
            "in": "query",
            "required": false,
            "description": "CRO code.",
            "type": "string"
          },
          {
            "name": "usages",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Settings for Text Message Delivery of Queue Reservation status",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "General",
                "QueueReservation",
                "Confirmation",
                "GuestMessage",
                "BillingFolio",
                "QueueRush",
                "AR",
                "OtherFolio",
                "PayByLink"
              ]
            },
            "required": false
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "If true this will include inactive records(This is only applicable for general SMTP delivery method ).",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response to request to fetch the delivery method for a property/HUB/Chain and its configurations.",
            "schema": {
              "$ref": "#/definitions/fetchedDeliveryMethods"
            }
          },
          "204": {
            "description": "DeliveryMethods not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      },
      "put": {
        "summary": "Operation to change delivery methods.",
        "description": " <p><strong>OperationId:</strong>putDeliveryMethods</p>",
        "operationId": "putDeliveryMethods",
        "parameters": [
          {
            "name": "changeDeliveryMethods",
            "in": "body",
            "required": true,
            "description": "Request to change the delivery method for a property/HUB/Chain and its configurations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/changeDeliveryMethods"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/changedDeliveryMethods"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      },
      "delete": {
        "summary": "Operation to remove delivery methods.",
        "description": " <p><strong>OperationId:</strong>deleteDeliveryMethods</p>",
        "operationId": "deleteDeliveryMethods",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Settings for Text Message Delivery of Queue Reservation status",
            "uniqueItems": true,
            "enum": [
              "General",
              "QueueReservation",
              "Confirmation",
              "GuestMessage",
              "BillingFolio",
              "QueueRush",
              "AR",
              "OtherFolio"
            ]
          },
          {
            "name": "options",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "SFTP delivery configurations",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Email",
                "Fax",
                "TextMessage",
                "Sftp"
              ]
            },
            "required": false
          },
          {
            "name": "configurationId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique id associated with this configuration",
            "items": {
              "type": "integer"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      },
      "post": {
        "summary": "Operation to create delivery methods.",
        "description": " <p><strong>OperationId:</strong>postDeliveryMethods</p>",
        "operationId": "postDeliveryMethods",
        "parameters": [
          {
            "name": "createDeliveryMethods",
            "in": "body",
            "required": true,
            "description": "Request to create the delivery method for a property/HUB/Chain and its configurations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/createDeliveryMethods"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      }
    },
    "/deviceLocations": {
      "get": {
        "summary": "Get the template device locations",
        "description": "Use this API to get the template device locations. <p><strong>OperationId:</strong>getTemplateDeviceLocations</p>",
        "operationId": "getTemplateDeviceLocations",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "default": "false",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching template Device locations.",
            "schema": {
              "$ref": "#/definitions/templateDeviceLocationsDetails"
            }
          },
          "204": {
            "description": "TemplateDeviceLocations not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create the template device locations",
        "description": "Use this API to create the template device locations. <p><strong>OperationId:</strong>postTemplateDeviceLocations</p>",
        "operationId": "postTemplateDeviceLocations",
        "parameters": [
          {
            "name": "templateDeviceLocationsCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating template Device locations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateDeviceLocationsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/deviceLocations/{deviceLocationId}": {
      "put": {
        "summary": "Change the template device locations",
        "description": "Use this API to update the template device locations. <p><strong>OperationId:</strong>changeTemplateDeviceLocations</p>",
        "operationId": "changeTemplateDeviceLocations",
        "parameters": [
          {
            "name": "deviceLocationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of device location."
          },
          {
            "name": "templateDeviceLocationsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing template Device locations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateDeviceLocationsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete the template device locations",
        "description": "Use this API to delete the template device locations. <p><strong>OperationId:</strong>removeTemplateDeviceLocations</p>",
        "operationId": "removeTemplateDeviceLocations",
        "parameters": [
          {
            "name": "deviceLocationId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of device location."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/externalDevices/configurations": {
      "get": {
        "summary": "Operation to fetch external device configurations.",
        "description": " <p><strong>OperationId:</strong>getExternalDeviceConfigurations</p>",
        "operationId": "getExternalDeviceConfigurations",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "active",
            "in": "query",
            "required": false,
            "description": "Flag that indicates whether the device is active.",
            "type": "boolean"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "idEditable",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "label",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "deviceType",
            "in": "query",
            "required": false,
            "type": "string",
            "uniqueItems": true,
            "enum": [
              "Scanner",
              "CreditCard",
              "Fiscal",
              "Device"
            ]
          },
          {
            "name": "deviceCode",
            "in": "query",
            "required": false,
            "type": "string",
            "uniqueItems": true,
            "enum": [
              "TtiScannerMobile",
              "TtiScannerDesktop",
              "SamsotechScanner",
              "GenScannerDesktop",
              "GenScannerMobile",
              "ChipAndPin",
              "FiscalTerminal",
              "Device"
            ]
          },
          {
            "name": "deviceArea",
            "in": "query",
            "required": false,
            "description": "The area where the device is installed",
            "type": "string"
          },
          {
            "name": "displayName",
            "in": "query",
            "required": false,
            "description": "External device display name.",
            "type": "string"
          },
          {
            "name": "mobileYN",
            "in": "query",
            "required": false,
            "description": "Indicator if device type is mobile or desktop.",
            "type": "boolean"
          },
          {
            "name": "desktopYN",
            "in": "query",
            "required": false,
            "description": "Indicator if device type is mobile or desktop.",
            "type": "boolean"
          },
          {
            "name": "registerAddress",
            "in": "query",
            "required": false,
            "description": "The address which the Cash Register ID ( Device ID ) is associated with.",
            "type": "string"
          },
          {
            "name": "deviceValue",
            "in": "query",
            "required": false,
            "description": "External device Value.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for Ping operation.",
            "schema": {
              "$ref": "#/definitions/fetchedExternalDeviceConfigurations"
            }
          },
          "204": {
            "description": "ExternalDeviceConfigurations not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      },
      "put": {
        "summary": "Operation to change external device configurations.",
        "description": " <p><strong>OperationId:</strong>putExternalDeviceConfigurations</p>",
        "operationId": "putExternalDeviceConfigurations",
        "parameters": [
          {
            "name": "changeExternalDeviceConfigurations",
            "in": "body",
            "required": true,
            "description": "Request to change the external device activated for the hotel and its configurations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/changeExternalDeviceConfigurations"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/changedExternalDeviceConfigurations"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      }
    },
    "/externalSystems/config/cache": {
      "delete": {
        "summary": "Operation to clear cache.",
        "description": " <p><strong>OperationId:</strong>clearCache</p>",
        "operationId": "clearCache",
        "parameters": [
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      }
    },
    "/externalSystems/config/ping": {
      "get": {
        "summary": "Operation to ping.",
        "description": " <p><strong>OperationId:</strong>ping</p>",
        "operationId": "ping",
        "parameters": [
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for Ping operation.",
            "schema": {
              "$ref": "#/definitions/operaVersion"
            }
          },
          "204": {
            "description": "ping not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      }
    },
    "/externalSystems/{externalSystemCode}/hotels/{hotelId}/publishers": {
      "post": {
        "summary": "Operation to create publishers.",
        "description": " <p><strong>OperationId:</strong>postPublishers</p>",
        "operationId": "postPublishers",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA Id used to find a property in OPERA."
          },
          {
            "name": "externalSystemCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA Code used to find External System in OPERA."
          },
          {
            "name": "createPublishers",
            "in": "body",
            "required": true,
            "description": "Request to create publishers.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/createPublishers"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      },
      "delete": {
        "summary": "Operation to remove publisher.",
        "description": " <p><strong>OperationId:</strong>deletePublisher</p>",
        "operationId": "deletePublisher",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA Id used to find a property in OPERA."
          },
          {
            "name": "externalSystemCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA Code used to find External System in OPERA."
          },
          {
            "name": "subscriberHotelId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      }
    },
    "/externalSystems/{externalSystemCode}/publishers": {
      "get": {
        "summary": "Operation to fetch publishers.",
        "description": " <p><strong>OperationId:</strong>getPublishers</p>",
        "operationId": "getPublishers",
        "parameters": [
          {
            "name": "externalSystemCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique OPERA Code used to find External System in OPERA."
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response to request to fetch the external systems",
            "schema": {
              "$ref": "#/definitions/fetchedPublishers"
            }
          },
          "204": {
            "description": "Publishers not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      }
    },
    "/hotelInerface": {
      "post": {
        "summary": "Operation to create hotel interface.",
        "description": " <p><strong>OperationId:</strong>postHotelInterface</p>",
        "operationId": "postHotelInterface",
        "parameters": [
          {
            "name": "hotelInterface",
            "in": "body",
            "required": true,
            "description": "Request object for creating a new Hotel Interface.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelInterface"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      },
      "put": {
        "summary": "Operation to change hotel interface.",
        "description": " <p><strong>OperationId:</strong>putHotelInterface</p>",
        "operationId": "putHotelInterface",
        "parameters": [
          {
            "name": "hotelInterface",
            "in": "body",
            "required": true,
            "description": "Request object for updating a Hotel Interface.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelInterface"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      }
    },
    "/hotelInterfaceTypes": {
      "get": {
        "summary": "Operation to fetch hotel interfaces.",
        "description": " <p><strong>OperationId:</strong>getHotelInterfaces</p>",
        "operationId": "getHotelInterfaces",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "interfaceTypes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "uniqueItems": true,
            "description": "XML Posting Interface",
            "items": {
              "type": "string",
              "enum": [
                "Bms",
                "Cas",
                "Ccw",
                "Dls",
                "Eft",
                "Exp",
                "Mak",
                "Mbs",
                "Msc",
                "Pbx",
                "Pos",
                "Svs",
                "Tik",
                "Vid",
                "Vms",
                "Www",
                "Xml"
              ]
            },
            "required": false
          },
          {
            "name": "logosCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "If true this will set the criteria to include inactive records.",
            "type": "boolean"
          },
          {
            "name": "includeOutboundCode",
            "in": "query",
            "required": false,
            "description": "If true this will set the criteria to include interfaces that are configured to use outbound code.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for retrieving Hotel Interfaces.",
            "schema": {
              "$ref": "#/definitions/fetchedHotelInterfaces"
            }
          },
          "204": {
            "description": "HotelInterfaces not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      }
    },
    "/hotels/{hotelId}/hotelInerface": {
      "delete": {
        "summary": "Operation to remove hotel interface.",
        "description": " <p><strong>OperationId:</strong>deleteHotelInterface</p>",
        "operationId": "deleteHotelInterface",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          {
            "name": "logo",
            "in": "query",
            "required": false,
            "description": "Hotel Interface Logo. On the database, this is also referred as DBF Logo. This is a three letter code followed by an underscore(_). This tells us which DBF files and log files with the prefix that IFC7 is going to create.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      }
    },
    "/hotels/{hotelId}/interfaces/{interfaceId}/accounts": {
      "post": {
        "summary": "Operation to create interface account.",
        "description": " <p><strong>OperationId:</strong>postInterfaceAccount</p>",
        "operationId": "postInterfaceAccount",
        "parameters": [
          {
            "name": "interfaceId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OPERA Id for Logo"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OPERA Id for Property"
          },
          {
            "name": "createInterfaceAccount",
            "in": "body",
            "required": true,
            "description": "Request object for creating an Interface Account of a Hotel Interface record.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/createInterfaceAccount"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      }
    },
    "/hotels/{hotelId}/interfaces/{interfaceId}/accounts/{accountId}": {
      "put": {
        "summary": "Operation to change interface account.",
        "description": " <p><strong>OperationId:</strong>putInterfaceAccount</p>",
        "operationId": "putInterfaceAccount",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OPERA Id for Account"
          },
          {
            "name": "interfaceId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OPERA Id for Logo"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OPERA Id for Property"
          },
          {
            "name": "changeInterfaceAccount",
            "in": "body",
            "required": true,
            "description": "Request object for updating an Interface Account of a Hotel Interface record.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/changeInterfaceAccount"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/changedInterfaceAccount"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      },
      "delete": {
        "summary": "Operation to remove interface account.",
        "description": " <p><strong>OperationId:</strong>deleteInterfaceAccount</p>",
        "operationId": "deleteInterfaceAccount",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OPERA Id for Account"
          },
          {
            "name": "interfaceId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OPERA Id for Logo"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OPERA Id for Property"
          },
          {
            "name": "autoBalance",
            "in": "query",
            "required": false,
            "description": "Auto balance flag of postings setup.",
            "type": "boolean"
          },
          {
            "name": "paymentMethod",
            "in": "query",
            "required": false,
            "description": "Payment method of posting accounts in transaction codes setup.",
            "type": "string"
          },
          {
            "name": "account",
            "in": "query",
            "required": false,
            "description": "Account of posting accounts in transaction codes setup.",
            "type": "string"
          },
          {
            "name": "accountDescription",
            "in": "query",
            "required": false,
            "description": "Account description of posting accounts in transaction codes setup.",
            "type": "string"
          },
          {
            "name": "salesOutlet",
            "in": "query",
            "required": false,
            "description": "Sales outlet of posting accounts in transaction codes setup.",
            "type": "string"
          },
          {
            "name": "trxCode",
            "in": "query",
            "required": false,
            "description": "Transaction code of posting accounts in transaction codes setup.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of posting accounts in transaction codes setup.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      }
    },
    "/hotels/{hotelId}/interfaces/{interfaceId}/roomStatus": {
      "get": {
        "summary": "Operation to fetch interface room statuses.",
        "description": " <p><strong>OperationId:</strong>getInterfaceRoomStatuses</p>",
        "operationId": "getInterfaceRoomStatuses",
        "parameters": [
          {
            "name": "interfaceId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OPERA id for Property"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OPERA id for Property"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Collection of Hotel Interface Room Statuses.",
            "schema": {
              "$ref": "#/definitions/fetchedInterfaceRoomStatuses"
            }
          },
          "204": {
            "description": "InterfaceRoomStatuses not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      },
      "put": {
        "summary": "Operation to change interface room status.",
        "description": " <p><strong>OperationId:</strong>putInterfaceRoomStatus</p>",
        "operationId": "putInterfaceRoomStatus",
        "parameters": [
          {
            "name": "interfaceId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OPERA id for Property"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OPERA id for Property"
          },
          {
            "name": "changeInterfaceRoomStatus",
            "in": "body",
            "required": true,
            "description": "Request object for updating a Hotel Interface Room Status. If it does not exist, then creates the Hotel Interface Room Status.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/changeInterfaceRoomStatus"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/changedInterfaceRoomStatus"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      },
      "delete": {
        "summary": "Operation to remove interface room status.",
        "description": " <p><strong>OperationId:</strong>deleteInterfaceRoomStatus</p>",
        "operationId": "deleteInterfaceRoomStatus",
        "parameters": [
          {
            "name": "interfaceId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OPERA id for Property"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OPERA id for Property"
          },
          {
            "name": "entryCode",
            "in": "query",
            "required": false,
            "description": "Entry code of a Hotel Interface Room Status.",
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "description": "Room Status which is either Vacant (V) or Occupied (O).",
            "type": "string"
          },
          {
            "name": "housekeepingStatus",
            "in": "query",
            "required": false,
            "description": "Housekeeping status of a room.",
            "type": "string"
          },
          {
            "name": "customRoomTranslation",
            "in": "query",
            "required": false,
            "description": "Custom Room Translation of a Hotel Interface. It is a concatenation of a Status (V-Vacant or O-Occupied) and Housekeeping Status (IS-Inspected, CL-Clean, etc.) The delimiter is a period. Sample values are V.IS, V.CL, O.IS, O.CL.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the Hotel Interface Room Status.",
            "type": "string"
          },
          {
            "name": "interfaceRoomStatusId",
            "in": "query",
            "required": false,
            "description": "Row number to identify all the records belonging to a single group of Hotel Interface Room Status.",
            "type": "integer"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      }
    },
    "/hotels/{hotelId}/interfaces/{interfaceId}/rooms": {
      "get": {
        "summary": "Operation to fetch interface rooms.",
        "description": " <p><strong>OperationId:</strong>getInterfaceRooms</p>",
        "operationId": "getInterfaceRooms",
        "parameters": [
          {
            "name": "interfaceId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OPERA Id for Logo"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OPERA Id for Property"
          },
          {
            "name": "fromRoom",
            "in": "query",
            "required": false,
            "type": "string",
            "minLength": 1,
            "maxLength": 20,
            "description": "From Room Number"
          },
          {
            "name": "toRoom",
            "in": "query",
            "required": false,
            "type": "string",
            "minLength": 1,
            "maxLength": 20,
            "description": "To Room Number"
          },
          {
            "name": "fromLineType",
            "in": "query",
            "required": false,
            "type": "string",
            "minLength": 1,
            "maxLength": 20,
            "description": "From Line Type"
          },
          {
            "name": "toLineType",
            "in": "query",
            "required": false,
            "type": "string",
            "minLength": 1,
            "maxLength": 20,
            "description": "To Line Type"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Collection of Hotel Interface Rooms.",
            "schema": {
              "$ref": "#/definitions/fetchedInterfaceRooms"
            }
          },
          "204": {
            "description": "InterfaceRooms not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      },
      "post": {
        "summary": "Operation to create interface room.",
        "description": " <p><strong>OperationId:</strong>postInterfaceRoom</p>",
        "operationId": "postInterfaceRoom",
        "parameters": [
          {
            "name": "interfaceId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OPERA Id for Logo"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OPERA Id for Property"
          },
          {
            "name": "createInterfaceRoom",
            "in": "body",
            "required": true,
            "description": "Request object for creating an Interface Room of a Hotel Interface record.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/createInterfaceRoom"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      },
      "delete": {
        "summary": "Operation to remove interface room.",
        "description": " <p><strong>OperationId:</strong>deleteInterfaceRoom</p>",
        "operationId": "deleteInterfaceRoom",
        "parameters": [
          {
            "name": "interfaceId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OPERA Id for Logo"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OPERA Id for Property"
          },
          {
            "name": "roomType",
            "in": "query",
            "required": false,
            "description": "Front Office Room Type.",
            "type": "string"
          },
          {
            "name": "roomNumber",
            "in": "query",
            "required": false,
            "description": "Front Office Room Number.",
            "type": "string"
          },
          {
            "name": "lineNumber",
            "in": "query",
            "required": false,
            "description": "External System's extension number.",
            "type": "string"
          },
          {
            "name": "oldLineNumber",
            "in": "query",
            "required": false,
            "description": "External System's extension number. It is used for editing a record. It is logically part of the record ID, and can actually be updated.",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "Line Type of an Interface Room.",
            "type": "string"
          },
          {
            "name": "dataLine",
            "in": "query",
            "required": false,
            "type": "string",
            "uniqueItems": true,
            "enum": [
              "In",
              "Out"
            ],
            "description": "Line Out"
          },
          {
            "name": "dataLineId",
            "in": "query",
            "required": false,
            "description": "Translation Table Id as defined in the IFC_CTRL table. It is also referred as Xlat Id.",
            "type": "string"
          },
          {
            "name": "wakeUpCall",
            "in": "query",
            "required": false,
            "description": "Value to set/check if the wake up call funtionality is enabled/disabled for the particular line number.",
            "type": "boolean"
          },
          {
            "name": "doNotDisturb",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Do Not Disturb is set to available and freely switchable.",
            "uniqueItems": true,
            "enum": [
              "NotAvailable",
              "AlwaysOn",
              "AlwaysOff",
              "FreelySwitchable"
            ]
          },
          {
            "name": "classOfService",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Class Of Service is set to available and freely switchable.",
            "uniqueItems": true,
            "enum": [
              "NotAvailable",
              "AlwaysOn",
              "AlwaysOff",
              "FreelySwitchable"
            ]
          },
          {
            "name": "directInwardDial",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Direct Inward Dial is set to available and freely switchable.",
            "uniqueItems": true,
            "enum": [
              "NotAvailable",
              "AlwaysOn",
              "AlwaysOff",
              "FreelySwitchable"
            ]
          },
          {
            "name": "messageWaiting",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Message Waiting is set to available and freely switchable.",
            "uniqueItems": true,
            "enum": [
              "NotAvailable",
              "AlwaysOn",
              "AlwaysOff",
              "FreelySwitchable"
            ]
          },
          {
            "name": "maskDialNumber",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Mask the dialled digits as per the room configuration.",
            "uniqueItems": true,
            "enum": [
              "NoMasking",
              "MaskLast2Digits",
              "MaskLast4Digits",
              "Mask4DigitsLeaveLast2Intact",
              "MaskAllExceptFirst2",
              "MaskAll",
              "MaskingPerRoom"
            ]
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      }
    },
    "/hotels/{hotelId}/interfaces/{interfaceId}/rooms/import": {
      "post": {
        "summary": "Operation to import interface rooms.",
        "description": " <p><strong>OperationId:</strong>importInterfaceRooms</p>",
        "operationId": "importInterfaceRooms",
        "parameters": [
          {
            "name": "interfaceId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OPERA Id for Logo"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OPERA Id for Property"
          },
          {
            "name": "importInterfaceRooms",
            "in": "body",
            "required": true,
            "description": "Request object for importing the Interface Rooms for a Hotel Interface record.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/importInterfaceRooms"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      }
    },
    "/hotels/{hotelId}/interfaces/{interfaceId}/rooms/{roomId}": {
      "put": {
        "summary": "Operation to change interface room.",
        "description": " <p><strong>OperationId:</strong>putInterfaceRoom</p>",
        "operationId": "putInterfaceRoom",
        "parameters": [
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "interfaceId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OPERA Id for Logo"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OPERA Id for Property"
          },
          {
            "name": "changeInterfaceRoom",
            "in": "body",
            "required": true,
            "description": "Request object for updating an Interface Room of a Hotel Interface record.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/changeInterfaceRoom"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/changedInterfaceRoom"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      }
    },
    "/hotels/{hotelId}/interfaces/{interfaceId}/unitCharges": {
      "get": {
        "summary": "Operation to fetch interface unit charges.",
        "description": " <p><strong>OperationId:</strong>getInterfaceUnitCharges</p>",
        "operationId": "getInterfaceUnitCharges",
        "parameters": [
          {
            "name": "interfaceId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OPERA id for Property"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OPERA id for Property"
          },
          {
            "name": "logo",
            "in": "query",
            "required": false,
            "description": "Hotel Interface Logo. On the database, this is also referred as DBF Logo. This is a three letter code followed by an underscore(_). This tells us which DBF files and log files with the prefix that IFC7 is going to create.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for retrieving the Interface Unit Charges.",
            "schema": {
              "$ref": "#/definitions/fetchedInterfaceUnitCharges"
            }
          },
          "204": {
            "description": "InterfaceUnitCharges not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      },
      "put": {
        "summary": "Operation to change interface unit charges.",
        "description": " <p><strong>OperationId:</strong>putInterfaceUnitCharges</p>",
        "operationId": "putInterfaceUnitCharges",
        "parameters": [
          {
            "name": "interfaceId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OPERA id for Property"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OPERA id for Property"
          },
          {
            "name": "changeInterfaceUnitCharges",
            "in": "body",
            "required": true,
            "description": "Request object for updating Hotel Interface Unit Charges.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/changeInterfaceUnitCharges"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/changedInterfaceUnitCharges"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      }
    },
    "/hotels/{hotelId}/logos/{logo}": {
      "get": {
        "summary": "Operation to fetch hotel interface details.",
        "description": " <p><strong>OperationId:</strong>getHotelInterfaceDetails</p>",
        "operationId": "getHotelInterfaceDetails",
        "parameters": [
          {
            "name": "logo",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OPERA Id for Logo"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OPERA Id for Property"
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "uniqueItems": true,
            "description": "Transaction codes of a Hotel Interface.",
            "items": {
              "type": "string",
              "enum": [
                "PrimaryInfo",
                "AdditionalInfo",
                "GeneralInfo",
                "CommunicationInfo",
                "IfcTranslation",
                "IfcClassOfService",
                "IfcImportRooms",
                "WorkstationSetupInfo",
                "PostingsInfo",
                "CustomDataInfo",
                "ExportDataInfo",
                "TransactionCodesInfo"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for retrieving the details of a Hotel Interface.",
            "schema": {
              "$ref": "#/definitions/fetchedHotelInterfaceDetails"
            }
          },
          "204": {
            "description": "HotelInterfaceDetails not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      }
    },
    "/interfaceControllerRegistry": {
      "get": {
        "summary": "Operation to fetch hotel interface controller registry.",
        "description": " <p><strong>OperationId:</strong>getHotelInterfaceControllerRegistry</p>",
        "operationId": "getHotelInterfaceControllerRegistry",
        "parameters": [
          {
            "name": "machine",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Used for Character Strings, length 0 to 40."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for retrieving Hotel Interface Controller Registry.",
            "schema": {
              "$ref": "#/definitions/fetchedHotelInterfaceControllerRegistry"
            }
          },
          "204": {
            "description": "HotelInterfaceControllerRegistry not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      }
    },
    "/interfaceErrors": {
      "get": {
        "summary": "Operation to fetch hotel interface errors.",
        "description": " <p><strong>OperationId:</strong>getHotelInterfaceErrors</p>",
        "operationId": "getHotelInterfaceErrors",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "interfaceTypes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "uniqueItems": true,
            "description": "XML Posting Interface",
            "items": {
              "type": "string",
              "enum": [
                "Bms",
                "Cas",
                "Ccw",
                "Dls",
                "Eft",
                "Exp",
                "Mak",
                "Mbs",
                "Msc",
                "Pbx",
                "Pos",
                "Svs",
                "Tik",
                "Vid",
                "Vms",
                "Www",
                "Xml"
              ]
            },
            "required": false
          },
          {
            "name": "logoCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "If true this will set the criteria to include inactive records.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for retrieving Hotel Interface Errors.",
            "schema": {
              "$ref": "#/definitions/fetchedHotelInterfaceErrors"
            }
          },
          "204": {
            "description": "HotelInterfaceErrors not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      }
    },
    "/interfaceFailedMessages": {
      "get": {
        "summary": "Operation to fetch hotel interface failed messages.",
        "description": " <p><strong>OperationId:</strong>getHotelInterfaceFailedMessages</p>",
        "operationId": "getHotelInterfaceFailedMessages",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "interfaceTypes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "uniqueItems": true,
            "description": "XML Posting Interface",
            "items": {
              "type": "string",
              "enum": [
                "Bms",
                "Cas",
                "Ccw",
                "Dls",
                "Eft",
                "Exp",
                "Mak",
                "Mbs",
                "Msc",
                "Pbx",
                "Pos",
                "Svs",
                "Tik",
                "Vid",
                "Vms",
                "Www",
                "Xml"
              ]
            },
            "required": false
          },
          {
            "name": "logoCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "If true this will set the criteria to include inactive records.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for retrieving Hotel Interface Failed Messages.",
            "schema": {
              "$ref": "#/definitions/fetchedHotelInterfaceFailedMessages"
            }
          },
          "204": {
            "description": "HotelInterfaceFailedMessages not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      }
    },
    "/interfaceRights": {
      "put": {
        "summary": "Operation to change interface right.",
        "description": " <p><strong>OperationId:</strong>putInterfaceRight</p>",
        "operationId": "putInterfaceRight",
        "parameters": [
          {
            "name": "changeInterfaceRight",
            "in": "body",
            "required": true,
            "description": "Request object for updating a Hotel Interface Right. It will create the Hotel Interface Right if it does not exist on the database.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/changeInterfaceRight"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/changedInterfaceRight"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      },
      "delete": {
        "summary": "Operation to remove interface right.",
        "description": " <p><strong>OperationId:</strong>deleteInterfaceRight</p>",
        "operationId": "deleteInterfaceRight",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Hotel Code to which the Interface Right belongs to.",
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "idExtension",
            "in": "query",
            "required": false,
            "description": "Additional identifying value assigned by the creating system.",
            "type": "integer"
          },
          {
            "name": "idContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "name": "right",
            "in": "query",
            "required": false,
            "description": "Internal code for each allowed right of a Hotel Interface record.",
            "type": "integer"
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "description": "User defined code for an Interface Right.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "User defined description for an Interface Right.",
            "type": "string"
          },
          {
            "name": "interfaceRightDescription",
            "in": "query",
            "required": false,
            "description": "System Description of an allowed Interface Right.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      },
      "get": {
        "summary": "Operation to fetch interface rights.",
        "description": " <p><strong>OperationId:</strong>getInterfaceRights</p>",
        "operationId": "getInterfaceRights",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "idExtension",
            "in": "query",
            "required": false,
            "description": "Additional identifying value assigned by the creating system.",
            "type": "integer"
          },
          {
            "name": "idContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID element.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Collection of Hotel Interface Tasks.",
            "schema": {
              "$ref": "#/definitions/fetchedInterfaceRights"
            }
          },
          "204": {
            "description": "InterfaceRights not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      }
    },
    "/interfaceSchemas": {
      "get": {
        "summary": "Operation to fetch hotel interface schemas.",
        "description": " <p><strong>OperationId:</strong>getHotelInterfaceSchemas</p>",
        "operationId": "getHotelInterfaceSchemas",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "interfaceTypes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "uniqueItems": true,
            "description": "XML Posting Interface",
            "items": {
              "type": "string",
              "enum": [
                "Bms",
                "Cas",
                "Ccw",
                "Dls",
                "Eft",
                "Exp",
                "Mak",
                "Mbs",
                "Msc",
                "Pbx",
                "Pos",
                "Svs",
                "Tik",
                "Vid",
                "Vms",
                "Www",
                "Xml"
              ]
            },
            "required": false
          },
          {
            "name": "logoCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "If true this will set the criteria to include inactive records.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for retrieving Hotel Interface Schemas.",
            "schema": {
              "$ref": "#/definitions/fetchedHotelInterfaceSchemas"
            }
          },
          "204": {
            "description": "HotelInterfaceSchemas not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      }
    },
    "/interfaces/{interfaceId}/databases/{databaseId}/availableResorts": {
      "get": {
        "summary": "Operation to fetch external database available properties.",
        "description": " <p><strong>OperationId:</strong>getExternalDatabaseAvailableProperties</p>",
        "operationId": "getExternalDatabaseAvailableProperties",
        "parameters": [
          {
            "name": "databaseId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OPERA Id for Databsase"
          },
          {
            "name": "interfaceId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OPERA Id for interface"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "Flag that indicates to include inactive records.",
            "type": "boolean"
          },
          {
            "name": "interfaceCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for retrieving the Available properties for External Databases.",
            "schema": {
              "$ref": "#/definitions/fetchedExternalDatabaseAvailableProperties"
            }
          },
          "204": {
            "description": "ExternalDatabaseAvailableProperties not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      }
    },
    "/machines": {
      "get": {
        "summary": "Operation to fetch interface machines.",
        "description": " <p><strong>OperationId:</strong>getInterfaceMachines</p>",
        "operationId": "getInterfaceMachines",
        "parameters": [
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Collection of Hotel Interface Machines.",
            "schema": {
              "$ref": "#/definitions/fetchedInterfaceMachines"
            }
          },
          "204": {
            "description": "InterfaceMachines not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      }
    },
    "/machines/{machineId}": {
      "put": {
        "summary": "Operation to change interface machine.",
        "description": " <p><strong>OperationId:</strong>putInterfaceMachine</p>",
        "operationId": "putInterfaceMachine",
        "parameters": [
          {
            "name": "machineId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OPERA Id for machine"
          },
          {
            "name": "changeInterfaceMachine",
            "in": "body",
            "required": true,
            "description": "Request object for updating a Hotel Interface Machine. If it does not exist, then creates the Hotel Interface Machine.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/changeInterfaceMachine"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/changedInterfaceMachine"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      },
      "delete": {
        "summary": "Operation to remove interface machine.",
        "description": " <p><strong>OperationId:</strong>deleteInterfaceMachine</p>",
        "operationId": "deleteInterfaceMachine",
        "parameters": [
          {
            "name": "machineId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "OPERA Id for machine"
          },
          {
            "name": "machine",
            "in": "query",
            "required": false,
            "description": "Unique Machine name of the running Interface.",
            "type": "string"
          },
          {
            "name": "program",
            "in": "query",
            "required": false,
            "description": "Path and name of the Interface program running on every Machine.",
            "type": "string"
          },
          {
            "name": "controllerPort",
            "in": "query",
            "required": false,
            "description": "Opera Interface controller (server) port for the connecting clients.",
            "type": "integer"
          },
          {
            "name": "vncPort",
            "in": "query",
            "required": false,
            "description": "VNC server port for connecting to the VNC server.",
            "type": "integer"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      }
    },
    "/udfMappings": {
      "get": {
        "summary": "Operation to send a response to the Look up of UDFs.",
        "description": "Operation to send a response to the Look-up of UDFs. <p><strong>OperationId:</strong>getUDFMappings</p>",
        "operationId": "getUDFMappings",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the Type for Reservation and Profile Type.",
            "type": "string"
          },
          {
            "name": "uDFName",
            "in": "query",
            "required": false,
            "description": "Name of the user-defined function (UDF) field.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Message received on an UDFs Lookup.",
            "schema": {
              "$ref": "#/definitions/fetchedUDFMappings"
            }
          },
          "204": {
            "description": "UDFMappings not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      },
      "put": {
        "summary": "Operation to send a response to the Change in UDF.",
        "description": "Operation to send a response to the Change in UDF. <p><strong>OperationId:</strong>putUDFMapping</p>",
        "operationId": "putUDFMapping",
        "parameters": [
          {
            "name": "changeUDFMapping",
            "in": "body",
            "required": true,
            "description": "Self-contained Request object that is used when Updating UDFMapping.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/changeUDFMapping"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/changedUDFMapping"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ExternalSystemsConfig"
        ]
      }
    }
  },
  "parameters": {
    "authKey": {
      "name": "authorization",
      "description": "Bearer token that needs to be passed which is generated post user authentication",
      "type": "string",
      "in": "header",
      "required": true
    },
    "x-app-key": {
      "name": "x-app-key",
      "description": "Client or Partner's Application Key",
      "type": "string",
      "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
      "in": "header",
      "required": true
    },
    "x-hotelid": {
      "name": "x-hotelid",
      "type": "string",
      "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
      "in": "header",
      "required": true
    },
    "x-externalsystem": {
      "name": "x-externalsystem",
      "type": "string",
      "maxLength": 80,
      "description": "External system code.",
      "in": "header",
      "x-example": "EXTERNALSYSTEMCODE"
    },
    "Accept-Language": {
      "name": "Accept-Language",
      "type": "string",
      "description": "Language code",
      "in": "header"
    },
    "x-hubid": {
      "name": "x-hubid",
      "type": "string",
      "description": "x-hubid is a logical grouping of multiple properties that allows api consumers to manage data from a group of properties. This x-hubid is a valid list of hub codes configured in OPERA to which the user has access. Rest APIs without hotelId in the operation path can support hub level integration using x-hubid",
      "in": "header"
    }
  },
  "responses": {
    "400": {
      "description": "Bad Request",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "401": {
      "description": "Unauthorized"
    },
    "403": {
      "description": "Forbidden"
    },
    "404": {
      "description": "Resource not found",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "405": {
      "description": "Method not allowed"
    },
    "406": {
      "description": "Not acceptable."
    },
    "413": {
      "description": "Request Entity Too Large"
    },
    "414": {
      "description": "Request URI Too Large"
    },
    "415": {
      "description": "Unsupported Media Type"
    },
    "500": {
      "description": "System Error",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "502": {
      "description": "Bad Gateway"
    },
    "503": {
      "description": "Service Unavailable"
    }
  },
  "definitions": {
    "status": {
      "type": "object",
      "description": "Response Body.",
      "properties": {
        "warnings": {
          "$ref": "#/definitions/warningsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      }
    },
    "warningsType": {
      "type": "array",
      "description": "Used in conjunction with the Success element to define a business error.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    },
    "warningType": {
      "type": "object",
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "minLength": 1,
          "maxLength": 8
        }
      }
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "instanceLink": {
      "type": "object",
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      }
    },
    "exceptionDetailType": {
      "title": "Error Detail",
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "errorInstance": {
      "title": "Error Instance Details",
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "operaVersion": {
      "type": "object",
      "description": "Response for Ping operation.",
      "properties": {
        "operaVersion": {
          "description": "Opera version number.",
          "$ref": "#/definitions/operaVersionNumberType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "operaVersionNumberType": {
      "type": "string",
      "description": "Current Opera Version Number",
      "minLength": 0,
      "maxLength": 40
    },
    "fetchedDeliveryMethods": {
      "type": "object",
      "description": "Response to request to fetch the delivery method for a property/HUB/Chain and its configurations.",
      "properties": {
        "deliveryMethods": {
          "description": "Collection of all delivery method types.",
          "$ref": "#/definitions/configuredExternalDeliveryMethodsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "configuredExternalDeliveryMethodsType": {
      "type": "object",
      "description": "External system configuration delivery methods for a property(chain or hub).",
      "properties": {
        "general": {
          "$ref": "#/definitions/generalDeliveryMethodType"
        },
        "queueReservation": {
          "$ref": "#/definitions/queueReservationDeliveryMethodType"
        },
        "confirmation": {
          "$ref": "#/definitions/confirmationDeliveryMethodType"
        },
        "guestMessage": {
          "$ref": "#/definitions/guestMessageDeliveryMethodType"
        },
        "billingFolio": {
          "$ref": "#/definitions/billingFolioDeliveryMethodType"
        },
        "queueRush": {
          "$ref": "#/definitions/queueRushDeliveryMethodType"
        },
        "ar": {
          "$ref": "#/definitions/arDeliveryMethodType"
        },
        "otherFolios": {
          "$ref": "#/definitions/otherFolioDeliveryMethodType"
        },
        "payByLink": {
          "$ref": "#/definitions/payByLinkDeliveryMethodType"
        }
      }
    },
    "generalDeliveryMethodType": {
      "type": "object",
      "description": "General delivery method SFTPConfigurationType configuration, settings for Email and Fax Delivery of General Letters",
      "properties": {
        "email": {
          "$ref": "#/definitions/emailDeliveryConfigurationType"
        },
        "fax": {
          "$ref": "#/definitions/faxDeliveryConfigurationType"
        },
        "sftpConfigurations": {
          "$ref": "#/definitions/sftpConfigurationsListType"
        }
      }
    },
    "emailDeliveryConfigurationType": {
      "type": "object",
      "description": "Email content configuration template",
      "properties": {
        "fromAddress": {
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "userId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "userPassword": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "serverName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "subject": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "body": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "format": {
          "description": "EMAIL Format: HTML, RTF, PDF. Fax Format: TIF",
          "$ref": "#/definitions/emailDeliveryFormatType"
        },
        "type": {
          "description": "Deliver Type, possible values: AR, BILLING, CONFIRMATION, LEADS, OWS, OVOS.",
          "$ref": "#/definitions/emailDeliveryMethodType"
        },
        "hotelId": {
          "description": "Hotel code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "activateDelivery": {
          "description": "This option must be selected in order to activate emailing from an SMTP compliant email server",
          "type": "boolean"
        },
        "hTMLFormatDelivery": {
          "description": "Available for Confirmation Letters only and when Activate Email Delivery is selected",
          "type": "boolean"
        },
        "attachICalender": {
          "type": "boolean"
        },
        "outboundCode": {
          "description": "Outbound Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "emailDeliveryFormatType": {
      "type": "string",
      "description": "Email delivery format",
      "enum": [
        "Htmlcss",
        "Pdf",
        "Rtf",
        "Tif"
      ]
    },
    "emailDeliveryMethodType": {
      "type": "string",
      "description": "Email delivery method type",
      "enum": [
        "Billing",
        "Confirmation",
        "General",
        "Other",
        "AR",
        "PayByLink"
      ]
    },
    "faxDeliveryConfigurationType": {
      "type": "object",
      "description": "Email content configuration template",
      "properties": {
        "fromAddress": {
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "userId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "userPassword": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "serverName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "subject": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "body": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "format": {
          "description": "EMAIL Format: HTML, RTF, PDF. Fax Format: TIF",
          "$ref": "#/definitions/emailDeliveryFormatType"
        },
        "type": {
          "description": "Deliver Type, possible values: AR, BILLING, CONFIRMATION, LEADS, OWS, OVOS.",
          "$ref": "#/definitions/emailDeliveryMethodType"
        },
        "hotelId": {
          "description": "Hotel code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "faxPrefix": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "faxSuffix": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "faxDomain": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "activateEmailToFax": {
          "description": "This option must be selected in order to activate faxing from an SMTP compliant fax server",
          "type": "boolean"
        }
      }
    },
    "sftpConfigurationsListType": {
      "type": "array",
      "description": "Type that holds sftp configurations",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/sftpConfigurationType"
      }
    },
    "sftpConfigurationType": {
      "type": "object",
      "description": "Information which uniquely identifies SFTP Configuration",
      "properties": {
        "configurationId": {
          "description": "Unique id associated with this configuration",
          "type": "integer"
        },
        "destination": {
          "description": "SFTP destination",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the destination, such as Shift Reports.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "inactive": {
          "description": "Indicates whether the configuration is inactive or not.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "queueReservationDeliveryMethodType": {
      "type": "object",
      "description": "Queue reservation delivery method configuration, settings for Text Message Delivery of Queue Reservation status",
      "properties": {
        "textMessage": {
          "$ref": "#/definitions/textMessageDeliveryConfigurationType"
        }
      }
    },
    "textMessageDeliveryConfigurationType": {
      "type": "object",
      "description": "Text message delivery configuration",
      "properties": {
        "userId": {
          "description": "Partner or User ID, Text field for Partner ID or User ID for the delivery provider, Name of the Text Messaging Provider.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "serverName": {
          "description": "Text field for Service type or email server address for the SMTP.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "account": {
          "description": "Text field for Service ID or email account for the SMTP as advised by Text Messaging Provider.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "password": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "timeOut": {
          "description": "Number field for Delivery time out in seconds for the message. Any message exceeding this limit will be timed out. Add word Seconds using small grey font next to the number box.",
          "type": "integer"
        },
        "url": {
          "description": "Text field for URL address or the Text Messaging Provider.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "uRLParameter": {
          "description": "Url parameter(format) is supported by Text Messaging Provider, it can be either an XML or TEXT format.",
          "$ref": "#/definitions/urlFormatType"
        },
        "format": {
          "description": "Text field for entering any special formatting for the delivery, or multi select LOV type, for example the one used for Address Format for selection of SID fields, to allow users choosing from a list of tags that may be used to customize this field.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "message": {
          "description": "Text field for entering the Text Message for delivery.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "type": {
          "description": "Type of Delivery Method HTTP/SMTP: HTTP for URL, SMTP for Email",
          "$ref": "#/definitions/textDeliveryMethodType"
        },
        "hotelId": {
          "description": "Hotel code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "urlFormatType": {
      "type": "string",
      "description": "Url content format",
      "enum": [
        "Xml",
        "Text"
      ]
    },
    "textDeliveryMethodType": {
      "type": "string",
      "description": "Text delivery method type",
      "enum": [
        "Url",
        "Email"
      ]
    },
    "confirmationDeliveryMethodType": {
      "type": "object",
      "description": "Confirmation letter delivery method configuration, settings for Text Message, Email and Fax Delivery of Confirmation Letters",
      "properties": {
        "email": {
          "$ref": "#/definitions/emailDeliveryConfigurationType"
        },
        "fax": {
          "$ref": "#/definitions/faxDeliveryConfigurationType"
        },
        "textMessage": {
          "$ref": "#/definitions/textMessageDeliveryConfigurationType"
        }
      }
    },
    "guestMessageDeliveryMethodType": {
      "type": "object",
      "description": "Guest text message configuration, settings for Text Message Delivery of Guest Messages",
      "properties": {
        "textMessage": {
          "$ref": "#/definitions/textMessageDeliveryConfigurationType"
        }
      }
    },
    "billingFolioDeliveryMethodType": {
      "type": "object",
      "description": "Billing folio delivery method configuration, settings for Email and Fax Delivery of Guest Folios",
      "properties": {
        "email": {
          "$ref": "#/definitions/emailDeliveryConfigurationType"
        },
        "fax": {
          "$ref": "#/definitions/faxDeliveryConfigurationType"
        }
      }
    },
    "queueRushDeliveryMethodType": {
      "type": "object",
      "description": "Queue rush delivery method configuration, settings for Text Message Delivery of Queue Reservation status",
      "properties": {
        "textMessage": {
          "$ref": "#/definitions/textMessageDeliveryConfigurationType"
        }
      }
    },
    "changeDeliveryMethods": {
      "type": "object",
      "description": "Request to change the delivery method for a property/HUB/Chain and its configurations.",
      "properties": {
        "deliveryMethods": {
          "description": "Collection of delivery method types to change.",
          "$ref": "#/definitions/configuredExternalDeliveryMethodsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changedDeliveryMethods": {
      "type": "object",
      "description": "Response Body.",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "createDeliveryMethods": {
      "type": "object",
      "description": "Request to create the delivery method for a property/HUB/Chain and its configurations.",
      "properties": {
        "deliveryMethods": {
          "description": "Collection of delivery method types to create.",
          "$ref": "#/definitions/configuredExternalDeliveryMethodsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateDeviceLocationsDetails": {
      "type": "object",
      "description": "Response object for fetching template Device locations.",
      "properties": {
        "templateDeviceLocations": {
          "description": "Collection of template Device locations.",
          "$ref": "#/definitions/templateDeviceLocationsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateDeviceLocationsType": {
      "type": "array",
      "description": "List of Device locations at template level.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/templateDeviceLocationType"
      }
    },
    "templateDeviceLocationType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "translationTextType2000": {
      "type": "object",
      "description": "Contains Multiple translated texts and language codes.",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 2000.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "translationsTextType": {
      "type": "array",
      "description": "Language code for the translation.",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Used for Character Strings, length 0 to 2000.",
            "minLength": 0,
            "maxLength": 2000
          },
          "language": {
            "description": "Language identification.",
            "type": "string",
            "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          }
        },
        "description": "Language code for the translation."
      }
    },
    "templateDeviceLocationsCriteria": {
      "type": "object",
      "description": "Request object for creating template Device locations.",
      "properties": {
        "templateDeviceLocations": {
          "description": "Template Device locations to be created.",
          "$ref": "#/definitions/templateDeviceLocationsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateDeviceLocationsToBeChanged": {
      "type": "object",
      "description": "Request object for changing template Device locations.",
      "properties": {
        "templateDeviceLocations": {
          "description": "Template Device locations to be changed.",
          "$ref": "#/definitions/templateDeviceLocationsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "createPublishers": {
      "type": "object",
      "description": "Request to create publishers.",
      "properties": {
        "subscriber": {
          "description": "Subcriber external system information.",
          "$ref": "#/definitions/externalSystemType"
        },
        "publishers": {
          "description": "Collection of publisher external systems information.",
          "$ref": "#/definitions/publishersType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "externalSystemType": {
      "type": "object",
      "description": "External System Information",
      "properties": {
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "externalSystemCode": {
          "$ref": "#/definitions/externalSystemCodeType"
        }
      }
    },
    "externalSystemCodeType": {
      "type": "object",
      "description": "External System Code",
      "properties": {
        "code": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "publishersType": {
      "type": "array",
      "description": "Information of all the publishers for a given subscriber.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/externalSystemType"
      }
    },
    "fetchedPublishers": {
      "type": "object",
      "description": "Response to request to fetch the external systems",
      "properties": {
        "publishers": {
          "description": "Collection of publisher external systems information.",
          "$ref": "#/definitions/publishersType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fetchedHotelInterfaces": {
      "type": "object",
      "description": "Response object for retrieving Hotel Interfaces.",
      "properties": {
        "hotelInterfaces": {
          "description": "Collection of Hotel Interfaces.",
          "$ref": "#/definitions/hotelInterfacesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelInterfacesType": {
      "type": "array",
      "description": "Collection of Hotel Interfaces.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelInterfaceType"
      }
    },
    "hotelInterfaceType": {
      "type": "object",
      "properties": {
        "interfaceId": {
          "description": "Unique DB internal number of a Hotel Interface record.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "Hotel Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "interfaceName": {
          "description": "Name of the Hotel Interface",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "interfaceType": {
          "description": "Three letter code for each interface that identifies the interface.",
          "$ref": "#/definitions/hotelInterfaceTypeType"
        },
        "logo": {
          "description": "Hotel Interface Logo. On the database, this is also referred as DBF Logo. This is a three letter code followed by an underscore(_). This tells us which DBF files and log files with the prefix that IFC7 is going to create.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "machineName": {
          "description": "Unique machine name of the running IFC.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "status": {
          "description": "The current status of the IFC.",
          "$ref": "#/definitions/hotelInterfaceStatusType"
        },
        "activeFlag": {
          "description": "Indicator if the Hotel Interface is active or not. This is different from the Interface Status, which is either STOPPED or RUNNING.",
          "type": "boolean"
        },
        "outboundCode": {
          "description": "Stores the Outbound Code to identify the target system.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "uniqueID_Type": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "hotelInterfaceTypeType": {
      "type": "string",
      "enum": [
        "Bms",
        "Cas",
        "Ccw",
        "Dls",
        "Eft",
        "Exp",
        "Mak",
        "Mbs",
        "Msc",
        "Pbx",
        "Pos",
        "Svs",
        "Tik",
        "Vid",
        "Vms",
        "Www",
        "Xml"
      ],
      "description": "XML Posting Interface"
    },
    "hotelInterfaceStatusType": {
      "type": "string",
      "description": "Status of the Hotel Interface either STOPPED or RUNNING.",
      "enum": [
        "Stopped",
        "Running",
        "Waiting",
        "StopInitiated",
        "StartInitiated",
        "RebootInitiated",
        "Other"
      ]
    },
    "changeInterfaceRight": {
      "type": "object",
      "description": "Request object for updating a Hotel Interface Right. It will create the Hotel Interface Right if it does not exist on the database.",
      "properties": {
        "details": {
          "$ref": "#/definitions/interfaceRightType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "interfaceRightType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel Code to which the Interface Right belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "interfaceId": {
          "description": "Unique DB internal number of a Hotel Interface record.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "right": {
          "description": "Internal code for each allowed right of a Hotel Interface record.",
          "type": "integer"
        },
        "code": {
          "description": "User defined code for an Interface Right.",
          "type": "string",
          "minLength": 0,
          "maxLength": 5
        },
        "description": {
          "description": "User defined description for an Interface Right.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "interfaceRightDescription": {
          "description": "System Description of an allowed Interface Right.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "changedInterfaceRight": {
      "type": "object",
      "description": "Response Body.",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fetchedInterfaceRights": {
      "type": "array",
      "description": "Collection of Hotel Interface Rights.",
      "items": {
        "$ref": "#/definitions/interfaceRightType"
      }
    },
    "fetchedExternalDatabaseAvailableProperties": {
      "type": "object",
      "description": "Response object for retrieving the Available properties for External Databases.",
      "properties": {
        "availailableProperties": {
          "$ref": "#/definitions/externalDatabaseAssociatedHotelsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "externalDatabaseAssociatedHotelsType": {
      "type": "array",
      "description": "Collection of Hotel for external database.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/externalDatabaseAssociatedHotelType"
      }
    },
    "externalDatabaseAssociatedHotelType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Pertain associated hotel code for external database.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelName": {
          "description": "Pertain associated hotel code for external database.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "fetchedUDFMappings": {
      "type": "object",
      "description": "Message received on an UDFs Lookup.",
      "properties": {
        "uDFMappings": {
          "description": "Criteria for fetching UDFs.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/uDFMappingType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "uDFMappingType": {
      "type": "object",
      "description": "Generic self-contained request object that is used when updating and fetching UDFs.",
      "properties": {
        "uDFName": {
          "description": "Name of the user-defined function (UDF) field.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "uDFLabel": {
          "description": "Label the user-defined function (UDF) field shared with external system which will be send in the request message for mapping of actual UDF Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "active": {
          "description": "A flag to indicate whether the UDF mapping is active in the Interface system or not.",
          "type": "boolean"
        },
        "updateAllowed": {
          "description": "A flag to indicate whether the update is allowed in the Interface system or not.",
          "type": "boolean"
        },
        "type": {
          "description": "A reference to the type of object defined by the Type for Reservation and Profile Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "changeUDFMapping": {
      "type": "object",
      "description": "Self-contained Request object that is used when Updating UDFMapping.",
      "properties": {
        "uDFMapping": {
          "$ref": "#/definitions/uDFMappingType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changedUDFMapping": {
      "type": "object",
      "description": "Response Body.",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "conditionGroupType": {
      "type": "object",
      "properties": {
        "condition": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/conditionType"
          }
        },
        "conditionGroup": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/conditionGroupType"
          }
        },
        "logicalOperator": {
          "$ref": "#/definitions/logicalOperatorType"
        }
      }
    },
    "logicalOperatorType": {
      "type": "string",
      "enum": [
        "And",
        "Or"
      ]
    },
    "conditionType": {
      "type": "object",
      "properties": {
        "leftExpression": {
          "$ref": "#/definitions/expressionFieldType"
        },
        "operator": {
          "$ref": "#/definitions/expressionOperatorType"
        },
        "rightExpression": {
          "$ref": "#/definitions/expressionParameterType"
        },
        "logicalOperator": {
          "$ref": "#/definitions/logicalOperatorType"
        }
      }
    },
    "expressionFieldType": {
      "type": "object",
      "properties": {
        "fieldName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "fieldDescription": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "tableName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "virtual": {
          "type": "boolean"
        },
        "dataType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "lovSelected": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "expressionParameterType": {
      "type": "object",
      "properties": {
        "parameter": {
          "type": "array",
          "maxItems": 3,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 40
          }
        },
        "functionIdOne": {
          "type": "number"
        },
        "functionIdTwo": {
          "type": "number"
        }
      }
    },
    "expressionOperatorType": {
      "type": "object",
      "properties": {
        "operatorName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "operatorDescription": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "parameterSize": {
          "type": "number"
        }
      }
    },
    "hotelInterfaceSchemasType": {
      "type": "array",
      "description": "Collection of Hotel Interface Schemas.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelInterfaceSchemaType"
      }
    },
    "hotelInterfaceSchemaType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "logo": {
          "description": "Hotel Interface Logo. On the database, this is also referred as DBF Logo. This is a three letter code followed by an underscore(_). This tells us which DBF files and log files with the prefix that IFC7 is going to create.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "actionName": {
          "description": "Action Name",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "schemaName": {
          "description": "Schema Name",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "schema": {
          "description": "Schema",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "insertDate": {
          "description": "Date time stamp of a Hotel Interface Schema.",
          "type": "string",
          "format": "date-time"
        },
        "ifcType": {
          "description": "ifcType",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        }
      }
    },
    "hotelInterfaceErrorsType": {
      "type": "array",
      "description": "Collection of Hotel Interface Errors.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelInterfaceErrorType"
      }
    },
    "hotelInterfaceErrorType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "logo": {
          "description": "Hotel Interface Logo. On the database, this is also referred as DBF Logo. This is a three letter code followed by an underscore(_). This tells us which DBF files and log files with the prefix that IFC7 is going to create.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "actionName": {
          "description": "Action Name",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "message": {
          "description": "Message",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "error": {
          "description": "Error",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "resvNameId": {
          "description": "Schema",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "insertDate": {
          "description": "Date time stamp of a Hotel Interface Schema.",
          "type": "string",
          "format": "date-time"
        },
        "ifcType": {
          "description": "ifcType",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        }
      }
    },
    "hotelInterfaceFailedMessagesType": {
      "type": "array",
      "description": "Collection of Hotel Interface Failed Messages.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelInterfaceFailedMessageType"
      }
    },
    "hotelInterfaceFailedMessageType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "logo": {
          "description": "Hotel Interface Logo. On the database, this is also referred as DBF Logo. This is a three letter code followed by an underscore(_). This tells us which DBF files and log files with the prefix that IFC7 is going to create.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "actionName": {
          "description": "Action Name",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "message": {
          "description": "Message",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "insertDate": {
          "description": "Date time stamp of a Hotel Interface Schema.",
          "type": "string",
          "format": "date-time"
        },
        "ifcType": {
          "description": "ifcType",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        }
      }
    },
    "hotelInterfaceControllerRegsType": {
      "type": "array",
      "description": "Collection of Hotel Interface Controller Registry.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelInterfaceControllerRegType"
      }
    },
    "hotelInterfaceControllerRegType": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Internal ID to reference the records.",
          "type": "number"
        },
        "machine": {
          "description": "Machine Name",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "cntrlRegSetting": {
          "description": "Controller Registry Setting",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "data": {
          "description": "Data",
          "type": "string",
          "minLength": 0,
          "maxLength": 400
        },
        "description": {
          "description": "Description",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        }
      }
    },
    "fetchedHotelInterfaceSchemas": {
      "type": "object",
      "description": "Response object for retrieving Hotel Interface Schemas.",
      "properties": {
        "schemas": {
          "description": "Collection of Hotel Interface Schemas.",
          "$ref": "#/definitions/hotelInterfaceSchemasType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fetchedHotelInterfaceErrors": {
      "type": "object",
      "description": "Response object for retrieving Hotel Interface Errors.",
      "properties": {
        "hotelInterfaceErrors": {
          "description": "Collection of Hotel Interface Errors.",
          "$ref": "#/definitions/hotelInterfaceErrorsType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fetchedHotelInterfaceFailedMessages": {
      "type": "object",
      "description": "Response object for retrieving Hotel Interface Failed Messages.",
      "properties": {
        "messages": {
          "description": "Collection of Hotel Interface Failed Messages.",
          "$ref": "#/definitions/hotelInterfaceFailedMessagesType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fetchedHotelInterfaceControllerRegistry": {
      "type": "object",
      "description": "Response object for retrieving Hotel Interface Controller Registry.",
      "properties": {
        "reg": {
          "description": "Collection of Hotel Interface Controller Registry.",
          "$ref": "#/definitions/hotelInterfaceControllerRegsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "arDeliveryMethodType": {
      "type": "object",
      "description": "Delivery Method configuration for Email and Fax Delivery for Accounts Receivables.",
      "properties": {
        "email": {
          "$ref": "#/definitions/emailDeliveryConfigurationType"
        },
        "fax": {
          "$ref": "#/definitions/faxDeliveryConfigurationType"
        }
      }
    },
    "otherFolioDeliveryMethodType": {
      "type": "object",
      "description": "Delivery Method configuration for Email and Fax Delivery for Other Folios",
      "properties": {
        "email": {
          "$ref": "#/definitions/emailDeliveryConfigurationType"
        },
        "fax": {
          "$ref": "#/definitions/faxDeliveryConfigurationType"
        }
      }
    },
    "configuredExternalDevices": {
      "type": "object",
      "description": "Collection of hotels and the external devices that were configured for the hotel.",
      "properties": {
        "deviceType": {
          "$ref": "#/definitions/deviceType"
        },
        "supportedExternalDevices": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/hotelExternalDevicesType"
          }
        }
      }
    },
    "deviceType": {
      "type": "string",
      "enum": [
        "Scanner",
        "CreditCard",
        "Fiscal",
        "Device"
      ]
    },
    "hotelExternalDevicesType": {
      "type": "object",
      "description": "Type for the external device supported by the hotel.",
      "properties": {
        "hotelId": {
          "description": "Property for which the device is configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "supportedDevices": {
          "$ref": "#/definitions/supportedExternalDevicesType"
        }
      }
    },
    "supportedExternalDevicesType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/supportedExternalDeviceType"
      }
    },
    "supportedExternalDeviceType": {
      "type": "object",
      "properties": {
        "deviceType": {
          "description": "Internal device type used to identify in which group the external device belongs to.",
          "$ref": "#/definitions/deviceType"
        },
        "deviceCode": {
          "description": "Internal device code used to identify the external device.",
          "$ref": "#/definitions/deviceCode"
        },
        "deviceArea": {
          "description": "The area where the device is installed",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "displayName": {
          "description": "External device display name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "mobileYN": {
          "description": "Indicator if device type is mobile or desktop.",
          "type": "boolean"
        },
        "desktopYN": {
          "description": "Indicator if device type is mobile or desktop.",
          "type": "boolean"
        },
        "registerAddress": {
          "description": "The address which the Cash Register ID ( Device ID ) is associated with.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "deviceValue": {
          "description": "External device Value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "fiscalPartnerCode": {
          "description": "Fiscal Partner associated with the terminal.",
          "$ref": "#/definitions/fiscalPartnerCodeType"
        },
        "primary": {
          "description": "Flag to designate the primary Fiscal Terminal.",
          "type": "boolean"
        },
        "active": {
          "description": "Flag that indicates whether the device is active.",
          "type": "boolean"
        },
        "id": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "label": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "translatableLabel": {
          "description": "Translatable Label for the external devices.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "iDEditable": {
          "type": "boolean"
        }
      },
      "description": "External device details."
    },
    "fiscalPartnerCodeType": {
      "type": "string",
      "description": "Used for fiscal partner codes. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
      "maxLength": 100,
      "minLength": 0
    },
    "deviceCode": {
      "type": "string",
      "enum": [
        "TtiScannerMobile",
        "TtiScannerDesktop",
        "SamsotechScanner",
        "GenScannerDesktop",
        "GenScannerMobile",
        "ChipAndPin",
        "FiscalTerminal",
        "Device"
      ]
    },
    "externalDeviceConfigurationType": {
      "type": "object",
      "description": "Type for the configurations available to the device.",
      "properties": {
        "hotelId": {
          "description": "Property for which the device is configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "device": {
          "description": "External device.",
          "$ref": "#/definitions/supportedExternalDeviceType"
        },
        "deviceConfigurations": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/deviceConfigurationType"
          }
        },
        "codeMappings": {
          "description": "Type that contains the mappings of the codes used in the external device to the code used in OPERA.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/deviceMappingType"
          }
        }
      }
    },
    "deviceMappingType": {
      "type": "object",
      "description": "Type that contains the codes used in/provided by the external device and their counterpart in OPERA.",
      "properties": {
        "codeType": {
          "description": "Internal code type of the mapping entry.",
          "type": "string",
          "minLength": 0,
          "maxLength": 800
        },
        "externalCode": {
          "description": "Code used/provided by the external device or application.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "displayName": {
          "description": "Display name of the code mapping.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "operaCode": {
          "description": "Corresponding code value in OPERA.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "deviceConfigurationType": {
      "type": "object",
      "description": "Type that contains the parameters and configurations used by the device.",
      "properties": {
        "name": {
          "description": "Internal name of the configuration.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "displayName": {
          "description": "Configuration display name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "value": {
          "description": "Value of the configuration.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "required": {
          "description": "Flag that indicates whether the configuration is required or not.",
          "type": "boolean"
        },
        "encrypted": {
          "description": "Flag that indicates whether the configuration value should be encrypted or not.",
          "type": "boolean"
        }
      }
    },
    "hotelInterfaceDetailType": {
      "type": "object",
      "properties": {
        "primaryInfo": {
          "description": "Primary information of a Hotel Interface.",
          "$ref": "#/definitions/interfacePrimaryInfoType"
        },
        "additionalInfo": {
          "description": "Additional information of a Hotel Interface.",
          "$ref": "#/definitions/interfaceAdditionalInfoType"
        },
        "generalInfo": {
          "description": "General information of a Hotel Interface.",
          "$ref": "#/definitions/generalInfoType"
        },
        "communicationInfo": {
          "description": "Communication related information of a Hotel Interface.",
          "$ref": "#/definitions/interfaceCommunicationInfoType"
        },
        "translationInfo": {
          "description": "Communication related information of a Hotel Interface.",
          "$ref": "#/definitions/translationType"
        },
        "classOfServiceInfo": {
          "description": "Information related to Class of Service of a Hotel Interface.",
          "$ref": "#/definitions/classOfServiceType"
        },
        "importRoomsInfo": {
          "description": "Information related to Import Rooms of a Hotel Interface.",
          "$ref": "#/definitions/importRoomsType"
        },
        "workstationSetupInfo": {
          "description": "Workstation setup of a hotel interface.",
          "$ref": "#/definitions/workstationSetupType"
        },
        "postingsInfo": {
          "description": "Postings of a hotel interface.",
          "$ref": "#/definitions/postingInfoType"
        },
        "customDataInfo": {
          "description": "Information related to Custom Data of a Hotel Interface.",
          "$ref": "#/definitions/interfaceCustomDataInfoType"
        },
        "exportDataInfo": {
          "description": "Information related to Export Data of a Hotel Interface.",
          "$ref": "#/definitions/interfaceExportDataInfoType"
        },
        "transactionsInfo": {
          "description": "Postings of a hotel interface.",
          "$ref": "#/definitions/transactionCodeInfoType"
        }
      }
    },
    "interfaceCustomDataInfoType": {
      "type": "object",
      "description": "This type holds the custom data of a hotel interface.",
      "properties": {
        "exportAsXml": {
          "description": "Specifies whether the details have to be exported as XML. If true, then the details are exported as XML else details are exported as text.",
          "type": "boolean"
        },
        "includeDoorcardField": {
          "description": "Specifies whether the Doorcard field details have to be included in the XML Export. If true, Doorcard field details will be included in the XML Export else details will not be included. This field is available only when the Export as XML field is selected.",
          "type": "boolean"
        },
        "interfaceCustomDataDetails": {
          "description": "Collection of custom data details of a hotel interface.",
          "$ref": "#/definitions/interfaceCustomDataDetailsType"
        }
      }
    },
    "interfaceCustomDataDetailsType": {
      "type": "array",
      "description": "Collection of custom data details of a hotel interface.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/interfaceCustomDataDetailType"
      }
    },
    "interfaceCustomDataDetailType": {
      "type": "object",
      "description": "This gives information of custom detail of a hotel interface.",
      "properties": {
        "customDataField": {
          "description": "Specifies the type of data stored.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "customDataValue": {
          "description": "Specifies the actual data corresponding to each value in the field.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "interfaceCommunicationInfoType": {
      "type": "object",
      "properties": {
        "tCPConfig": {
          "$ref": "#/definitions/tCPConfigType"
        }
      }
    },
    "tCPConfigType": {
      "type": "object",
      "properties": {
        "iPAddress": {
          "description": "IP address of the interface server",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "portNumber": {
          "description": "Logical Port assignment",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "workstationSetupType": {
      "type": "array",
      "description": "List of workstations of a hotel interface.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/interfaceWorkstationType"
      }
    },
    "interfaceWorkstationType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel Code of a workstation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "logo": {
          "description": "Logo of a workstation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "internalCode": {
          "description": "Internal code of a workstation.",
          "type": "integer"
        },
        "workstation": {
          "description": "Workstation of a hotel interface.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "deviceIp": {
          "description": "IP of a workstation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "location": {
          "description": "Location of a workstation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "type": {
          "description": "Type of a workstation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2
        },
        "deviceLocation": {
          "description": "Device Group / Area.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "importRoomsType": {
      "type": "object",
      "properties": {
        "requiresLineNumberSetup": {
          "description": "Indicator for Requires line number setup, from Import Rooms related information of a Hotel Interface.",
          "type": "boolean"
        },
        "virtualNumberSetup": {
          "description": "Indicator for Virtual number setup, from Import Rooms related information of a Hotel Interface.",
          "type": "boolean"
        },
        "ioLines": {
          "description": "Indicator for support of Input/Output Lines for Hotel Room Categories.",
          "type": "boolean"
        },
        "inXlatId": {
          "description": "Translation table for incoming messages.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "ouXlatId": {
          "description": "Translation table for outgoing messages.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "selectedRoomTypes": {
          "description": "Concatenated label of Hotel Room Categories for which SendToInterface flag should be set as true.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        }
      }
    },
    "interfacePrimaryInfoType": {
      "type": "object",
      "properties": {
        "interfaceId": {
          "description": "Unique DB internal number of a Hotel Interface record.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "Hotel Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "logo": {
          "description": "Hotel Interface Logo. On the database, this is also referred as DBF Logo. This is a three letter code followed by an underscore(_). This tells us which DBF files and log files with the prefix that IFC7 is going to create.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "interfaceName": {
          "description": "Name of the Hotel Interface",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "interfaceType": {
          "description": "Three letter code for each interface that identifies the interface.",
          "$ref": "#/definitions/hotelInterfaceTypeType"
        },
        "productCode": {
          "description": "Three letter code that uniquely identifies the external interface.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4
        },
        "licenseCode": {
          "description": "Interface License code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "machineId": {
          "description": "The ID stored in IFC_MACHINES table.",
          "type": "integer"
        },
        "machineName": {
          "description": "Unique machine name of the running IFC.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "interfaceProductCode": {
          "description": "FKT Logo required for the external interface.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "outboundCode": {
          "description": "Stores the Outbound Code to identify the target system.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "translationType": {
      "type": "object",
      "properties": {
        "guestNoLength": {
          "description": "Guest number length of a translation setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2
        },
        "guestMessageIdLength": {
          "description": "Guest message id length of a translation setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2
        },
        "groupNoLength": {
          "description": "Group number length of a translation setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2
        },
        "defaultCharge": {
          "description": "Default charge of a translation setup.",
          "type": "integer"
        },
        "configuation": {
          "description": "Translation configuration of a hotel interface.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/interfaceControlCfgType"
          }
        },
        "articles": {
          "description": "Translation article setup of a hotel interface.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/interfaceControlArticleType"
          }
        },
        "specifications": {
          "description": "Translation specifications setup of a hotel interface.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/interfaceControlSpecType"
          }
        },
        "languages": {
          "description": "Translation languages setup of a hotel interface.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/interfaceControlLangType"
          }
        }
      }
    },
    "interfaceControlCfgType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel Code of the hotel interface.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "logo": {
          "description": "Logo of the hotel interface.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "internalCode": {
          "description": "Internal code of a translation configuration setup.",
          "type": "integer"
        },
        "originCode": {
          "description": "Origin code of a translation configuration setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "merchantId": {
          "description": "Merchant Id of a translation configuration setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        }
      }
    },
    "interfaceControlSpecType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel Code of the hotel interface.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "logo": {
          "description": "Logo of the hotel interface.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "internalCode": {
          "description": "Internal code of a translation specification setup.",
          "type": "integer"
        },
        "selector": {
          "description": "Selector of a translation specification setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "specification": {
          "description": "Specification of a translation specification setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "priority": {
          "description": "Priority of a translation specification setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "position": {
          "description": "Position of a translation specification setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        }
      }
    },
    "interfaceControlLangType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel Code of the hotel interface.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "logo": {
          "description": "Logo of the hotel interface.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "internalCode": {
          "description": "Internal code of a translation language setup.",
          "type": "integer"
        },
        "selector": {
          "description": "Selector of a translation language setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "languageCode": {
          "description": "Language code of a translation language setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        }
      }
    },
    "interfaceControlArticleType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel Code of the hotel interface.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "logo": {
          "description": "Logo of the hotel interface.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "internalCode": {
          "description": "Internal code of a translation article setup.",
          "type": "integer"
        },
        "selector": {
          "description": "Selector of a translation article setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "articleNo": {
          "description": "Article Number of a translation article setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "description": {
          "description": "Description of a translation article setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        }
      }
    },
    "transactionCodeInfoType": {
      "type": "object",
      "properties": {
        "allChargesCode": {
          "description": "All charges code of transaction code setup",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "miniBarCode": {
          "description": "Minibar charges code of transaction code setup",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "cashCreditCardPosting": {
          "description": "Cash or credit card posting of transaction code setup",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "subtotalPosting": {
          "description": "Subtotal posting of transaction code setup",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "differencePosting": {
          "description": "Difference posting of transaction code setup",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "calcTrxCodePosting": {
          "description": "Calculated transaction code posting of transaction code setup",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "numberOfDialedDigits": {
          "description": "Number of dialed digits transaction code setup",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "postingAccounts": {
          "description": "Postings information of transaction codes setup.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/postingAccountType"
          }
        },
        "itemizers": {
          "description": "Split information of transaction code setup.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/itemizerType"
          }
        },
        "transactionCodes": {
          "description": "Split information of transaction code setup.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/transactionCodeDetailType"
          }
        }
      }
    },
    "itemizerType": {
      "type": "object",
      "properties": {
        "splitCode": {
          "description": "Split code of the itemizer setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "splitPost": {
          "description": "Split posting of the itemizer setup.",
          "type": "integer"
        },
        "splitText": {
          "description": "Split text of the itemizer setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "splitFactor": {
          "description": "Split factor of the itemizer setup.",
          "type": "integer"
        }
      }
    },
    "postingAccountType": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Internal ID to reference the records.",
          "type": "number"
        },
        "paymentMethod": {
          "description": "Payment method of posting accounts in transaction codes setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "account": {
          "description": "Account of posting accounts in transaction codes setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "accountDescription": {
          "description": "Account description of posting accounts in transaction codes setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "salesOutlet": {
          "description": "Sales outlet of posting accounts in transaction codes setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "transactionCode": {
          "description": "Transaction code of posting accounts in transaction codes setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of posting accounts in transaction codes setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "autoBalance": {
          "description": "Auto balance flag of postings setup.",
          "type": "boolean"
        }
      }
    },
    "transactionCodeDetailType": {
      "type": "object",
      "properties": {
        "servingPeriod": {
          "description": "Serving period of transaction code setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "rowNum": {
          "description": "Row number of transaction code setup.",
          "type": "integer"
        },
        "revenueCenter": {
          "description": "Revenue center of transaction code setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "terminal": {
          "description": "Terminal of transaction code setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "paymentNum": {
          "description": "Payment number of transaction code setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "userId": {
          "description": "User id of transaction code setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "postRoute": {
          "description": "Post route of transaction code setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "dialedDigits": {
          "description": "Dialed digits of transaction code setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "lineType": {
          "description": "Line type of transaction code setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "code": {
          "description": "Code of transaction code setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "tipCode": {
          "description": "Tip code of transaction code setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "description": {
          "description": "Description of transaction code setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "itemizersShortInfo": {
          "description": "Itemizer short info of transaction code setup.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/itemizerShortInfoType"
          }
        }
      }
    },
    "itemizerShortInfoType": {
      "type": "object",
      "properties": {
        "code": {
          "description": "Code of the itemizer on a transaction code setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "itemizerName": {
          "description": "Itemizer name on a transaction code setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "itemNumber": {
          "description": "Itemizer number which is the split post on a transaction code setup.",
          "type": "integer"
        }
      }
    },
    "generalInfoType": {
      "type": "object",
      "properties": {
        "createSVCheckIn": {
          "description": "Create stored value during checkin of a Hotel Interface",
          "type": "boolean"
        },
        "enableFailover": {
          "description": "Enable failover of a Hotel Interface",
          "type": "boolean"
        },
        "ccVaultFunction": {
          "description": "CC vault of a Hotel Interface",
          "type": "boolean"
        },
        "enableResend": {
          "description": "Enable resend of a Hotel Interface",
          "type": "boolean"
        },
        "sendARAuthType": {
          "description": "Send AR auth type of a Hotel Interface",
          "type": "boolean"
        },
        "enableDBVerification": {
          "description": "Enable DB verification of a Hotel Interface",
          "type": "boolean"
        },
        "allowCCCancelTransaction": {
          "description": "Allow CC cancel transactions of a Hotel Interface",
          "type": "boolean"
        },
        "showStoredValuePin": {
          "description": "Show stored value pin of a Hotel Interface",
          "type": "boolean"
        },
        "showSVTransaction": {
          "description": "Show SV transaction of a Hotel Interface",
          "$ref": "#/definitions/sVTransactionType"
        },
        "storedValueSystem": {
          "description": "Stored value system of a Hotel Interface",
          "type": "boolean"
        },
        "sendEnhancedFields": {
          "description": "Send enhanced fields of a Hotel Interface",
          "type": "boolean"
        },
        "cardPresentFlag": {
          "description": "Card present of a Hotel Interface",
          "type": "boolean"
        },
        "handleNightAudit": {
          "description": "Handle night audit command of a Hotel Interface",
          "type": "boolean"
        },
        "regularTransaction": {
          "description": "Regular transaction command of a Hotel Interface",
          "type": "boolean"
        },
        "courtesyCardHandling": {
          "description": "Courtesy card handling command of a Hotel Interface",
          "type": "boolean"
        },
        "sendEndOfDay": {
          "description": "Send end of day of a Hotel Interface",
          "type": "boolean"
        },
        "portNumber1": {
          "description": "Logical port number 1 of a the Hotel Interface",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "portNumber2": {
          "description": "Logical port number 2 of a the Hotel Interface",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "portNumber3": {
          "description": "Logical port number 3 of a the Hotel Interface",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "portNumber4": {
          "description": "Logical port number 4 of a the Hotel Interface",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "iPAddress": {
          "description": "IP Address of a the Hotel Interface",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "sVRedeemTrx": {
          "description": "Stored value reedeem transaction of a the Hotel Interface",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "device": {
          "description": "Device of a the Hotel Interface",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "departmentCode1": {
          "description": "Department code 1 of a the Hotel Interface",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "departmentCode2": {
          "description": "Department code 2 of a the Hotel Interface",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "rollupTransactions": {
          "description": "Rollup transactions flag of the Hotel Interface",
          "type": "boolean"
        },
        "allowVideoCheckout": {
          "description": "Indicator if video checkout is allowed or not.",
          "type": "boolean"
        },
        "checkCreditLimit": {
          "description": "One of the video checkout options whether to check the credit limit.",
          "type": "boolean"
        },
        "checkBalance": {
          "description": "One of the video checkout options whether to check the balance.",
          "type": "boolean"
        },
        "checkRouting": {
          "description": "One of the video checkout options whether to check the routing.",
          "type": "boolean"
        },
        "wakeupYn": {
          "description": "Indicator if the Hotel Interface handles wakeup calls.",
          "type": "boolean"
        },
        "wakeupHandledBy": {
          "description": "Determines who handles the wakeup calls, either by Opera (0) or a Vendor (1).",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "wakeRetry": {
          "description": "Wakeup retry limit of the Hotel Interface. Value range is 0 to 999.",
          "type": "integer"
        },
        "wakeDelay": {
          "description": "Wakeup delay value of the Hotel Interface.",
          "type": "integer"
        },
        "prevWake": {
          "description": "Used by the Interface module (IFC7.exe).",
          "type": "integer"
        },
        "folioDisplayOption": {
          "description": "Folio display option of the Hotel Interface applicable to VID and MSC. \"0\" means folio display option off. \"A\" means a guest folio display option. \"U\" means user defined folio display option.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "userDefinedFolio1": {
          "description": "Indicator if the User defined folio 1 is utilized.",
          "type": "boolean"
        },
        "userDefinedFolio2": {
          "description": "Indicator if the User defined folio 2 is utilized.",
          "type": "boolean"
        },
        "userDefinedFolio3": {
          "description": "Indicator if the User defined folio 3 is utilized.",
          "type": "boolean"
        },
        "userDefinedFolio4": {
          "description": "Indicator if the User defined folio 4 is utilized.",
          "type": "boolean"
        },
        "displayPhoneName": {
          "description": "Indicator if the phone name will be displayed.",
          "type": "boolean"
        },
        "keyPinActive": {
          "description": "Indicator if the Key Pin is active or not. It is supported only if OPERA Control Display Key Pin is active.",
          "type": "boolean"
        },
        "allPrintDetailOn": {
          "description": "Indicator for Default All Print Details On.",
          "type": "boolean"
        }
      }
    },
    "sVTransactionType": {
      "type": "string",
      "description": "Status of the Hotel Interface either STOPPED or RUNNING.",
      "enum": [
        "OperaTransaction",
        "VendorTransaction",
        "OperaAndVendorTransaction"
      ]
    },
    "interfaceExportDataInfoType": {
      "type": "object",
      "description": "This type holds the export data of a hotel interface.",
      "properties": {
        "interfaceExportDataDetails": {
          "description": "Collection which shows the manually selected columns for the export data of a hotel interface.",
          "$ref": "#/definitions/interfaceExportDataDetailsType"
        },
        "interfaceExportDataMandatoryDetails": {
          "description": "Collection which shows the mandatory columns for the export data of a hotel interface.",
          "$ref": "#/definitions/interfaceExportDataDetailsType"
        }
      }
    },
    "interfaceExportDataDetailsType": {
      "type": "array",
      "description": "Collection of export data details of a hotel interface.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/interfaceExportDataDetailType"
      }
    },
    "interfaceExportDataDetailType": {
      "type": "object",
      "description": "This gives information of export detail of a hotel interface.",
      "properties": {
        "sourceTableName": {
          "description": "Specifies the table where the event data is stored.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "columnName": {
          "description": "Specifies the column name found in the table.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "dataType": {
          "description": "Specifies the type of data in the column.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "dataLength": {
          "description": "Specifies the length of data in the column.",
          "type": "integer"
        },
        "xMLTagName": {
          "description": "Specifies the tag name found in the export.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "columnSelected": {
          "description": "Specifies whether the column is chosen to be included in the export.",
          "type": "boolean"
        }
      }
    },
    "interfaceAdditionalInfoType": {
      "type": "object",
      "properties": {
        "menuType": {
          "description": "Internal representation for Interface Type",
          "$ref": "#/definitions/ifcMenuTypeType"
        },
        "menuName": {
          "description": "Name of the Interface sub-menu",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "controllerPort": {
          "description": "Opera IFC controller (server) port for the connecting clients.",
          "type": "integer"
        },
        "vncPort": {
          "description": "VNC server port for connecting to a VNC server.",
          "type": "integer"
        },
        "cashierId": {
          "description": "Cashier Number.",
          "type": "integer"
        },
        "pathId1": {
          "description": "Used if interface has to support more than one front office system.",
          "type": "integer"
        },
        "timeout": {
          "description": "Used by the Interface module. ( IFC7.exe )",
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "displayFlag": {
          "description": "True if the interface will be displayed.",
          "type": "boolean"
        },
        "autoStartFlag": {
          "description": "Decides if the interface will be started automatically when the controller is restarted.",
          "type": "boolean"
        },
        "activeFlag": {
          "description": "Indicator if the Hotel Interface is active or not. This is different from the Interface Status, which is either STOPPED or RUNNING.",
          "type": "boolean"
        },
        "interfaceStatus": {
          "description": "Status if the Hotel Interface is STOPPED or RUNNING. This is different from the Active Flag, which is either 1 or 0.",
          "$ref": "#/definitions/hotelInterfaceStatusType"
        },
        "version": {
          "description": "Version no. of each external interface that is installed",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "msgExpiresAfter": {
          "description": "(Internal Use) Message Expires After",
          "type": "string",
          "minLength": 0,
          "maxLength": 8
        },
        "useDataThroughFlag": {
          "type": "boolean"
        },
        "nAStart": {
          "description": "Indicator if the Hotel Interface handles night audit commands.",
          "type": "boolean"
        },
        "multipleRoomKey": {
          "description": "Indicator if the Hotel Interface allows multiple room selection for keys.",
          "type": "boolean"
        },
        "onlineKeySystem": {
          "description": "Indicator if the Hotel Interface is an online key system.",
          "type": "boolean"
        },
        "deleteIfcKeysOnKeyDelete": {
          "description": "Indicator if the Interface Keys will be deleted on KeyDelete.",
          "type": "boolean"
        },
        "sendTrack1Data": {
          "description": "Indicator for Hotel Interface Send Track 1 Data.",
          "type": "boolean"
        },
        "sendTrack2Data": {
          "description": "Indicator for Hotel Interface Send Track 2 Data.",
          "type": "boolean"
        },
        "sendRoomStatus": {
          "description": "Indicator if the Room Status will be sent.",
          "type": "boolean"
        },
        "telephoneCharge": {
          "description": "Indicates on what the post unit charge is based on.",
          "$ref": "#/definitions/telephoneChargeType"
        },
        "additionalRoomsLimit": {
          "description": "Maximum number of additional rooms allowed.",
          "type": "integer",
          "minimum": 1,
          "maximum": 999
        },
        "sendValidStartDateTime": {
          "description": "Indicator if the DLS Interface allows to send valid start date and time.",
          "type": "boolean"
        }
      }
    },
    "telephoneChargeType": {
      "type": "string",
      "enum": [
        "0",
        "1",
        "2"
      ],
      "description": "Auto Choose"
    },
    "ifcMenuTypeType": {
      "type": "string",
      "enum": [
        "Cas",
        "Kss",
        "Mbs",
        "Pbx",
        "Pos",
        "Vss",
        "Dcs"
      ],
      "description": "Data Card System"
    },
    "classOfServiceType": {
      "type": "object",
      "properties": {
        "cosMsgLmpRg": {
          "description": "",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "cosChkRg": {
          "description": "",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "cosMsgCmdRg": {
          "description": "",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "roomEquipCi": {
          "description": "",
          "type": "boolean"
        },
        "roomEquipCo": {
          "description": "",
          "type": "boolean"
        },
        "guestDataChangeCo": {
          "description": "",
          "type": "boolean"
        },
        "standardNameFormat": {
          "description": "Standard name format in the class of service.",
          "type": "string",
          "minLength": 0,
          "maxLength": 5
        },
        "definedNameFormat": {
          "description": "Defined name format in the class of service.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/definedNameFormatType"
          }
        },
        "resvInQueue": {
          "description": "Indicates whethe a message will be triggered when a room/reservation is placed on QUEUE",
          "type": "boolean"
        }
      }
    },
    "definedNameFormatType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel Code where the defined name format is associated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "definedFormatId": {
          "description": "ID of the defined name format.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "expressionTable": {
          "description": "Table from which the info will be retrieved.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "expression": {
          "description": "Expression of the defined name format It basically contains all formats that are being set.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "logo": {
          "description": "Logo of the hotel interface.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "postingInfoType": {
      "type": "object",
      "properties": {
        "referenceField": {
          "description": "Reference field of postings setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "chargeScaling": {
          "description": "Charge scaling of postings setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "zeroChargePostings": {
          "description": "Zero charge posting of postings setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "postings": {
          "description": "Postings of postings setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "postType": {
          "description": "Post type of postings setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "conversion": {
          "description": "Conversion of postings setup.",
          "type": "integer"
        },
        "reference": {
          "description": "Reference of postings setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "supplement": {
          "description": "Supplement of postings setup.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "overrideCreditLimit": {
          "description": "Override credit limit of postings setup.",
          "type": "boolean"
        },
        "noPostFlag": {
          "description": "No post flag of postings setup.",
          "type": "boolean"
        },
        "generatesTax": {
          "description": "IFC generate tax of postings setup.",
          "type": "boolean"
        },
        "dialedNumberMasking": {
          "description": "Type of number masking used for the dialed numbers in the particular interface.",
          "$ref": "#/definitions/maskDialNumberType"
        },
        "articleNoPrefix": {
          "description": "Article Prefix of postings setup.",
          "type": "boolean"
        }
      }
    },
    "maskDialNumberType": {
      "type": "string",
      "description": "Mask the dialled digits as per the room configuration.",
      "enum": [
        "NoMasking",
        "MaskLast2Digits",
        "MaskLast4Digits",
        "Mask4DigitsLeaveLast2Intact",
        "MaskAllExceptFirst2",
        "MaskAll",
        "MaskingPerRoom"
      ]
    },
    "interfaceRoomType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel Code of the Interface Room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "logo": {
          "description": "Hotel Interface Logo. On the database, this is also referred as DBF Logo. This is a three letter code followed by an underscore(_). This tells us which DBF files and log files with the prefix that IFC7 is going to create.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "description": "Front Office Room Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomId": {
          "description": "Front Office Room Number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "lineNumber": {
          "description": "External System's extension number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "oldLineNumber": {
          "description": "External System's extension number. It is used for editing a record. It is logically part of the record ID, and can actually be updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "fromRoom": {
          "description": "From Room Number",
          "type": "string",
          "minLength": 1,
          "maxLength": 20
        },
        "toRoom": {
          "description": "To Room Number",
          "type": "string",
          "minLength": 1,
          "maxLength": 20
        },
        "fromLine": {
          "description": "From Line Number",
          "type": "string",
          "minLength": 1,
          "maxLength": 20
        },
        "toLine": {
          "description": "To Line Number",
          "type": "string",
          "minLength": 1,
          "maxLength": 20
        },
        "type": {
          "description": "Line Type of an Interface Room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "dataLine": {
          "description": "I/O Lines type, which is either IN or OUT.",
          "$ref": "#/definitions/dataLineType"
        },
        "dataLineId": {
          "description": "Translation Table Id as defined in the IFC_CTRL table. It is also referred as Xlat Id.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "wakeUpCall": {
          "description": "Value to set/check if the wake up call funtionality is enabled/disabled for the particular line number.",
          "type": "boolean"
        },
        "doNotDisturb": {
          "description": "Value to set/check if the Do Not Disturb funtionality is enabled/disabled/NA for the particular line number.",
          "$ref": "#/definitions/doNotDisturbType"
        },
        "classOfService": {
          "description": "Value to set/check if the Class of Service funtionality is enabled/disabled/NA for the particular line number.",
          "$ref": "#/definitions/classOfServiceConfigType"
        },
        "directInwardDial": {
          "description": "Value to set/check if the Direct Inward Dial funtionality is enabled/disabled/NA for the particular line number.",
          "$ref": "#/definitions/directInwardDialType"
        },
        "messageWaiting": {
          "description": "Value to set/check if the Message Waiting funtionality is enabled/disabled/NA for the particular line number.",
          "$ref": "#/definitions/messageWaitingType"
        },
        "maskDialNumber": {
          "description": "Value to set/check the type number masking used for the particular line number.",
          "$ref": "#/definitions/maskDialNumberType"
        }
      }
    },
    "dataLineType": {
      "type": "string",
      "enum": [
        "In",
        "Out"
      ],
      "description": "Line Out"
    },
    "doNotDisturbType": {
      "type": "string",
      "description": "Do Not Disturb is set to available and freely switchable.",
      "enum": [
        "NotAvailable",
        "AlwaysOn",
        "AlwaysOff",
        "FreelySwitchable"
      ]
    },
    "messageWaitingType": {
      "type": "string",
      "description": "Message Waiting is set to available and freely switchable.",
      "enum": [
        "NotAvailable",
        "AlwaysOn",
        "AlwaysOff",
        "FreelySwitchable"
      ]
    },
    "classOfServiceConfigType": {
      "type": "string",
      "description": "Class Of Service is set to available and freely switchable.",
      "enum": [
        "NotAvailable",
        "AlwaysOn",
        "AlwaysOff",
        "FreelySwitchable"
      ]
    },
    "directInwardDialType": {
      "type": "string",
      "description": "Direct Inward Dial is set to available and freely switchable.",
      "enum": [
        "NotAvailable",
        "AlwaysOn",
        "AlwaysOff",
        "FreelySwitchable"
      ]
    },
    "importInterfaceRoomsType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel Code to which the Interface Room belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "logo": {
          "description": "Hotel Interface Logo. On the database, this is also referred as DBF Logo. This is a three letter code followed by an underscore(_). This tells us which DBF files and log files with the prefix that IFC7 is going to create.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "dataLine": {
          "description": "I/O Lines type, which is either IN or OUT.",
          "$ref": "#/definitions/dataLineType"
        },
        "numberOfLines": {
          "description": "Number of lines to use for the import of a Hotel Interface Room.",
          "type": "integer"
        },
        "removeLeadingZeros": {
          "description": "Number of lines to use for the import of a Hotel Interface Room.",
          "type": "boolean"
        },
        "line1Prefix": {
          "description": "Prefix for the Hotel Interface Room number for Line 1.",
          "type": "integer"
        },
        "line1AddTo": {
          "description": "Numeric value to be summed with the Hotel Interface Room number for Line 1.",
          "type": "integer"
        },
        "line2Prefix": {
          "description": "Prefix for the Hotel Interface Room number for Line 2.",
          "type": "integer"
        },
        "line2AddTo": {
          "description": "Numeric value to be summed with the Hotel Interface Room number for Line 2.",
          "type": "integer"
        },
        "line3Prefix": {
          "description": "Prefix for the Hotel Interface Room number for Line 3.",
          "type": "integer"
        },
        "line3AddTo": {
          "description": "Numeric value to be summed with the Hotel Interface Room number for Line 3.",
          "type": "integer"
        },
        "line4Prefix": {
          "description": "Prefix for the Hotel Interface Room number for Line 4.",
          "type": "integer"
        },
        "line4AddTo": {
          "description": "Numeric value to be summed with the Hotel Interface Room number for Line 4.",
          "type": "integer"
        },
        "selectedRoomTypes": {
          "description": "Concatenated label of Hotel Room Categories, which will be imported to the Hotel Interface.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "maskLines": {
          "description": "Mask configurations for different line types.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomMaskSetupType"
          }
        }
      }
    },
    "roomMaskSetupType": {
      "type": "object",
      "properties": {
        "wakeUpCall": {
          "description": "Value to set/check if the wake up call funtionality is enabled/disabled for the particular line number.",
          "type": "boolean"
        },
        "doNotDisturb": {
          "description": "Value to set/check if the Do Not Disturb funtionality is enabled/disabled/NA for the particular line number.",
          "$ref": "#/definitions/doNotDisturbType"
        },
        "classOfService": {
          "description": "Value to set/check if the Class of Service funtionality is enabled/disabled/NA for the particular line number.",
          "$ref": "#/definitions/classOfServiceConfigType"
        },
        "directInwardDial": {
          "description": "Value to set/check if the Direct Inward Dial funtionality is enabled/disabled/NA for the particular line number.",
          "$ref": "#/definitions/directInwardDialType"
        },
        "messageWaiting": {
          "description": "Value to set/check if the Message Waiting funtionality is enabled/disabled/NA for the particular line number.",
          "$ref": "#/definitions/messageWaitingType"
        },
        "maskDialNumber": {
          "description": "Value to set/check the type number masking used for the particular line number.",
          "$ref": "#/definitions/maskDialNumberType"
        }
      }
    },
    "dMLCommandType": {
      "type": "string",
      "enum": [
        "Insert",
        "Update",
        "Delete"
      ],
      "description": "A data manipulation language command for deleting an existing record."
    },
    "interfaceAccountType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel Code of the Interface Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "logo": {
          "description": "Hotel Interface Logo. On the database, this is also referred as DBF Logo. This is a three letter code followed by an underscore(_). This tells us which DBF files and log files with the prefix that IFC7 is going to create.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "postingAccount": {
          "description": "Posting information of transaction codes setup.",
          "$ref": "#/definitions/postingAccountType"
        }
      }
    },
    "interfaceMachineType": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Unique Id for every interface machine.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "machine": {
          "description": "Unique Machine name of the running Interface.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "program": {
          "description": "Path and name of the Interface program running on every Machine.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "controllerPort": {
          "description": "Opera Interface controller (server) port for the connecting clients.",
          "type": "integer"
        },
        "vncPort": {
          "description": "VNC server port for connecting to the VNC server.",
          "type": "integer"
        }
      }
    },
    "interfaceRoomStatusType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "Hotel Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "logo": {
          "description": "Hotel Interface Logo. On the database, this is also referred as DBF Logo. This is a three letter code followed by an underscore(_). This tells us which DBF files and log files with the prefix that IFC7 is going to create.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "entryCode": {
          "description": "Entry code of a Hotel Interface Room Status.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "status": {
          "description": "Room Status which is either Vacant (V) or Occupied (O).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "housekeepingStatus": {
          "description": "Housekeeping status of a room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "customRoomTranslation": {
          "description": "Custom Room Translation of a Hotel Interface. It is a concatenation of a Status (V-Vacant or O-Occupied) and Housekeeping Status (IS-Inspected, CL-Clean, etc.) The delimiter is a period. Sample values are V.IS, V.CL, O.IS, O.CL.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "description": {
          "description": "Description of the Hotel Interface Room Status.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "interfaceRoomStatusId": {
          "description": "Row number to identify all the records belonging to a single group of Hotel Interface Room Status.",
          "type": "integer"
        }
      }
    },
    "interfaceUnitChargesType": {
      "type": "object",
      "description": "Collection of Hotel Interface Unit Charges.",
      "properties": {
        "hotelId": {
          "description": "Hotel Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "logo": {
          "description": "Hotel Interface Logo. On the database, this is also referred as DBF Logo. This is a three letter code followed by an underscore(_). This tells us which DBF files and log files with the prefix that IFC7 is going to create.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "unitCharges": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/interfaceUnitChargeType"
          }
        }
      }
    },
    "interfaceUnitChargeType": {
      "type": "object",
      "properties": {
        "trunkId": {
          "description": "Trunk ID of the CAS or PBX.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "lineType": {
          "description": "Line Types setup in IFC_ROOM table.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "vipCode": {
          "description": "Guest VIP Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "startUnit": {
          "description": "Starting number of units for the unit range.",
          "type": "integer"
        },
        "endUnit": {
          "description": "Ending number of units for the unit range.",
          "type": "integer"
        },
        "pricePerUnit": {
          "description": "Amount charged per unit.",
          "type": "integer"
        }
      }
    },
    "fetchedConfiguredExternalDevices": {
      "type": "object",
      "properties": {
        "configuredExternalDevices": {
          "description": "Collection of all active external devices.",
          "$ref": "#/definitions/configuredExternalDevices"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fetchedExternalDeviceConfigurations": {
      "type": "object",
      "properties": {
        "externalDeviceConfigurations": {
          "description": "Collection of configurations for the external device.",
          "$ref": "#/definitions/externalDeviceConfigurationType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changeExternalDeviceConfigurations": {
      "type": "object",
      "description": "Request to change the external device activated for the hotel and its configurations.",
      "properties": {
        "externalDeviceConfigurations": {
          "description": "Configuration details of the external device that will be enabled for the hotel.",
          "$ref": "#/definitions/externalDeviceConfigurationType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changedExternalDeviceConfigurations": {
      "type": "object",
      "description": "Response Body.",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelInterface": {
      "type": "object",
      "description": "Request object for creating a new Hotel Interface.",
      "properties": {
        "details": {
          "$ref": "#/definitions/hotelInterfaceDetailType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fetchedHotelInterfaceDetails": {
      "type": "object",
      "description": "Response object for retrieving the details of a Hotel Interface.",
      "properties": {
        "details": {
          "$ref": "#/definitions/hotelInterfaceDetailType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fetchedInterfaceRooms": {
      "type": "array",
      "description": "Collection of Hotel Interface Rooms.",
      "items": {
        "$ref": "#/definitions/interfaceRoomType"
      }
    },
    "createInterfaceRoom": {
      "type": "object",
      "description": "Request object for creating an Interface Room of a Hotel Interface record.",
      "properties": {
        "room": {
          "$ref": "#/definitions/interfaceRoomType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changeInterfaceRoom": {
      "type": "object",
      "description": "Request object for updating an Interface Room of a Hotel Interface record.",
      "properties": {
        "room": {
          "$ref": "#/definitions/interfaceRoomType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changedInterfaceRoom": {
      "type": "object",
      "description": "Response Body.",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "importInterfaceRooms": {
      "type": "object",
      "description": "Request object for importing the Interface Rooms for a Hotel Interface record.",
      "properties": {
        "details": {
          "$ref": "#/definitions/importInterfaceRoomsType"
        },
        "dMLCommand": {
          "$ref": "#/definitions/dMLCommandType"
        },
        "targetedImport": {
          "$ref": "#/definitions/interfaceRoomType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "createInterfaceAccount": {
      "type": "object",
      "description": "Request object for creating an Interface Account of a Hotel Interface record.",
      "properties": {
        "account": {
          "$ref": "#/definitions/interfaceAccountType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changeInterfaceAccount": {
      "type": "object",
      "description": "Request object for updating an Interface Account of a Hotel Interface record.",
      "properties": {
        "account": {
          "$ref": "#/definitions/interfaceAccountType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changedInterfaceAccount": {
      "type": "object",
      "description": "Response Body.",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fetchedInterfaceMachines": {
      "type": "array",
      "description": "Collection of Hotel Interface Machines.",
      "items": {
        "$ref": "#/definitions/interfaceMachineType"
      }
    },
    "changeInterfaceMachine": {
      "type": "object",
      "description": "Request object for updating a Hotel Interface Machine. If it does not exist, then creates the Hotel Interface Machine.",
      "properties": {
        "details": {
          "$ref": "#/definitions/interfaceMachineType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changedInterfaceMachine": {
      "type": "object",
      "description": "Response Body.",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fetchedInterfaceRoomStatuses": {
      "type": "array",
      "description": "Collection of Hotel Interface Room Statuses.",
      "items": {
        "$ref": "#/definitions/interfaceRoomStatusType"
      }
    },
    "changeInterfaceRoomStatus": {
      "type": "object",
      "description": "Request object for updating a Hotel Interface Room Status. If it does not exist, then creates the Hotel Interface Room Status.",
      "properties": {
        "details": {
          "$ref": "#/definitions/interfaceRoomStatusType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changedInterfaceRoomStatus": {
      "type": "object",
      "description": "Response Body.",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "fetchedInterfaceUnitCharges": {
      "type": "object",
      "description": "Response object for retrieving the Interface Unit Charges.",
      "properties": {
        "details": {
          "$ref": "#/definitions/interfaceUnitChargesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changeInterfaceUnitCharges": {
      "type": "object",
      "description": "Request object for updating Hotel Interface Unit Charges.",
      "properties": {
        "details": {
          "$ref": "#/definitions/interfaceUnitChargesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "changedInterfaceUnitCharges": {
      "type": "object",
      "description": "Response Body.",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "payByLinkDeliveryMethodType": {
      "type": "object",
      "description": "Pay By Link delivery method configuration, settings for Email containing payment url",
      "properties": {
        "email": {
          "$ref": "#/definitions/emailDeliveryConfigurationType"
        }
      }
    },
    "managedByOptions": {
      "description": "Describes of the Configuration is Managed by Enterprise or Property.",
      "type": "string",
      "enum": [
        "EnterpriseManaged",
        "PropertyManaged",
        "EnterpriseEnforced",
        "PropertyOverridden"
      ]
    }
  },
  "tags": [
    {
      "name": "ExternalSystemsConfig"
    },
    {
      "name": "ChainConfig",
      "description": "These APIs will allow you to do external configuration under Administration."
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}
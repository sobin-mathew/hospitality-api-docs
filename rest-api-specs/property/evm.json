{
  "swagger": "2.0",
  "info": {
    "title": "OPERA Cloud Sales Event Management API",
    "description": "APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>",
    "version": "24.4",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality_apis_ww_grp@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "schemes": [
    "https"
  ],
  "basePath": "/evm/v1",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/alternateEvents": {
      "put": {
        "summary": "Manage alternate events.",
        "description": " <p><strong>OperationId:</strong>manageAlternateEvents</p>",
        "operationId": "manageAlternateEvents",
        "parameters": [
          {
            "name": "manageAlternateEvents",
            "in": "body",
            "required": true,
            "description": "Request object for managing catering events those are alternate to other catering events.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/manageAlternateEvents"
                },
                {
                  "example": {
                    "manageAlternateEventsInstruction": "Copy",
                    "alternateEvents": [
                      {
                        "eventPrimaryInfo": {
                          "eventId": {
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0
                          },
                          "hotelId": "string",
                          "includeSubEvents": true
                        },
                        "eventDetail": {
                          "eventName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "eventType": "string",
                          "eventTimeSpan": {
                            "startDateTime": "2020-07-17T11:06:40.118Z",
                            "endDateTime": "2020-07-17T11:06:40.118Z"
                          },
                          "eventStatus": {
                            "status": {
                              "code": "string",
                              "description": "string"
                            },
                            "color": "White"
                          },
                          "waitlistReturnStatus": {
                            "status": {
                              "code": "string",
                              "description": "string"
                            },
                            "color": "White"
                          },
                          "cateringStatusType": "Waitlist",
                          "attendees": {
                            "expected": 0,
                            "guaranteed": 0,
                            "actual": 0,
                            "set": 0,
                            "billed": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0
                          },
                          "masterEventId": {
                            "id": "string",
                            "type": "string"
                          },
                          "doorcard": "string",
                          "eventLink": {
                            "id": {
                              "id": "string",
                              "type": "string"
                            },
                            "type": "SubEvent",
                            "masterEventDates": {
                              "startDateTime": "2020-07-17T11:06:40.118Z",
                              "endDateTime": "2020-07-17T11:06:40.118Z"
                            }
                          },
                          "inactiveDate": "2020-07-17",
                          "packageId": 0,
                          "packageName": "string",
                          "masterEvent": true,
                          "subEvent": true,
                          "packageEvent": true,
                          "alternateEvent": true,
                          "waitlisted": true,
                          "notMoveable": true,
                          "loudEvent": true,
                          "hasPostings": true,
                          "displayDoorcard": true,
                          "cateringDeductInventory": true,
                          "eventShared": true,
                          "createDateTime": "2020-07-17T11:06:40.118Z",
                          "creatorId": "string",
                          "lastModifyDateTime": "2020-07-17T11:06:40.118Z",
                          "lastModifierId": "string",
                          "purgeDate": "2020-07-17",
                          "includeSpaceInPackage": true,
                          "eventLevelRevenueActualization": true
                        },
                        "eventResources": [
                          {
                            "resourceId": {
                              "url": "string",
                              "type": "string",
                              "instance": "string",
                              "idContext": "string",
                              "id": "string",
                              "idExtension": 0
                            },
                            "resourceType": "FunctionSpace",
                            "resourceName": "string",
                            "setupCode": "string",
                            "itemAttribute": "string",
                            "quantity": 0,
                            "hours": 0,
                            "persons": 0,
                            "quantityIncluded": 0,
                            "quantityExcluded": 0,
                            "unitPrice": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "revenue": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "rentalCode": "string",
                            "discount": 0,
                            "eventResourceNotes": [
                              {
                                "noteId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "noteCode": "string",
                                "internal": true,
                                "noteTitle": "string",
                                "comment": "string",
                                "sequence": 0,
                                "createDateTime": "2020-07-17T11:06:40.118Z",
                                "creatorId": "string",
                                "lastModifyDateTime": "2020-07-17T11:06:40.118Z",
                                "lastModifierId": "string",
                                "purgeDate": "2020-07-17"
                              }
                            ],
                            "sellStartDate": "2020-07-17",
                            "sellEndDate": "2020-07-17",
                            "eventStartDate": "2020-07-17",
                            "eventEndDate": "2020-07-17",
                            "consumptionBased": true,
                            "multiChoice": true,
                            "hotelId": "string",
                            "order": "string",
                            "hasDiscountMenuItem": true,
                            "hasNotes": true,
                            "external": true,
                            "custom": true,
                            "packaged": true
                          }
                        ],
                        "processInstructions": {
                          "overrideCapacity": true,
                          "overbook": true,
                          "shareable": true,
                          "overrideMaxgroups": true,
                          "waitList": true,
                          "warnFunctionSpace": true
                        },
                        "eventBlockInfo": {
                          "blockIdList": [
                            {
                              "id": "string",
                              "type": "string"
                            }
                          ]
                        },
                        "functionSpaceInformation": {
                          "functionSpaceCode": "string",
                          "functionSpaceDescription": "string",
                          "setupCode": "string",
                          "setupDescription": "string",
                          "setupTime": 0,
                          "setdownTime": 0,
                          "rentalCode": "string",
                          "rateDesc": "string",
                          "rentalAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "discountPercentage": 0,
                          "minimumOccupancy": 0,
                          "maximumOccupancy": 0,
                          "shareable": true,
                          "comboSpace": true,
                          "elementSpace": true
                        },
                        "eventNotes": [
                          {
                            "noteId": {
                              "id": "string",
                              "type": "string"
                            },
                            "noteCode": "string",
                            "internal": true,
                            "noteTitle": "string",
                            "comment": "string",
                            "sequence": 0,
                            "createDateTime": "2020-07-17T11:06:40.138Z",
                            "creatorId": "string",
                            "lastModifyDateTime": "2020-07-17T11:06:40.138Z",
                            "lastModifierId": "string",
                            "purgeDate": "2020-07-17"
                          }
                        ],
                        "eventIndicators": [
                          {
                            "indicatorName": "string",
                            "count": 0
                          }
                        ],
                        "onTheBooksRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "subEventsDetail": [
                          {
                            "eventPrimaryInfo": {
                              "eventId": {
                                "url": "string",
                                "type": "string",
                                "instance": "string",
                                "idContext": "string",
                                "id": "string",
                                "idExtension": 0
                              },
                              "hotelId": "string",
                              "includeSubEvents": true
                            },
                            "eventDetail": {
                              "eventName": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "value": "string",
                                      "language": "string"
                                    }
                                  ]
                                }
                              },
                              "eventType": "string",
                              "eventTimeSpan": {
                                "startDateTime": "2020-07-17T11:06:40.138Z",
                                "endDateTime": "2020-07-17T11:06:40.138Z"
                              },
                              "eventStatus": {
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "color": "White"
                              },
                              "waitlistReturnStatus": {
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "color": "White"
                              },
                              "cateringStatusType": "Waitlist",
                              "attendees": {
                                "expected": 0,
                                "guaranteed": 0,
                                "actual": 0,
                                "set": 0,
                                "billed": 0,
                                "packageExpected": 0,
                                "packageGuaranteed": 0,
                                "packageActual": 0,
                                "packageBilled": 0
                              },
                              "masterEventId": {
                                "id": "string",
                                "type": "string"
                              },
                              "doorcard": "string",
                              "eventLink": {
                                "id": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "type": "SubEvent",
                                "masterEventDates": {
                                  "startDateTime": "2020-07-17T11:06:40.138Z",
                                  "endDateTime": "2020-07-17T11:06:40.138Z"
                                }
                              },
                              "inactiveDate": "2020-07-17",
                              "packageId": 0,
                              "packageName": "string",
                              "masterEvent": true,
                              "subEvent": true,
                              "packageEvent": true,
                              "alternateEvent": true,
                              "waitlisted": true,
                              "notMoveable": true,
                              "loudEvent": true,
                              "hasPostings": true,
                              "displayDoorcard": true,
                              "cateringDeductInventory": true,
                              "eventShared": true,
                              "createDateTime": "2020-07-17T11:06:40.138Z",
                              "creatorId": "string",
                              "lastModifyDateTime": "2020-07-17T11:06:40.138Z",
                              "lastModifierId": "string",
                              "purgeDate": "2020-07-17",
                              "includeSpaceInPackage": true,
                              "eventLevelRevenueActualization": true
                            },
                            "functionSpaceInformation": {
                              "functionSpaceCode": "string",
                              "functionSpaceDescription": "string",
                              "setupCode": "string",
                              "setupDescription": "string",
                              "setupTime": 0,
                              "setdownTime": 0,
                              "rentalCode": "string",
                              "rateDesc": "string",
                              "rentalAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "discountPercentage": 0,
                              "minimumOccupancy": 0,
                              "maximumOccupancy": 0,
                              "shareable": true,
                              "comboSpace": true,
                              "elementSpace": true
                            }
                          }
                        ],
                        "altEventsDetail": [
                          {
                            "eventPrimaryInfo": {
                              "eventId": {
                                "url": "string",
                                "type": "string",
                                "instance": "string",
                                "idContext": "string",
                                "id": "string",
                                "idExtension": 0
                              },
                              "hotelId": "string",
                              "includeSubEvents": true
                            },
                            "eventDetail": {
                              "eventName": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "value": "string",
                                      "language": "string"
                                    }
                                  ]
                                }
                              },
                              "eventType": "string",
                              "eventTimeSpan": {
                                "startDateTime": "2020-07-17T11:06:40.138Z",
                                "endDateTime": "2020-07-17T11:06:40.138Z"
                              },
                              "eventStatus": {
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "color": "White"
                              },
                              "waitlistReturnStatus": {
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "color": "White"
                              },
                              "cateringStatusType": "Waitlist",
                              "attendees": {
                                "expected": 0,
                                "guaranteed": 0,
                                "actual": 0,
                                "set": 0,
                                "billed": 0,
                                "packageExpected": 0,
                                "packageGuaranteed": 0,
                                "packageActual": 0,
                                "packageBilled": 0
                              },
                              "masterEventId": {
                                "id": "string",
                                "type": "string"
                              },
                              "doorcard": "string",
                              "eventLink": {
                                "id": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "type": "SubEvent",
                                "masterEventDates": {
                                  "startDateTime": "2020-07-17T11:06:40.138Z",
                                  "endDateTime": "2020-07-17T11:06:40.138Z"
                                }
                              },
                              "inactiveDate": "2020-07-17",
                              "packageId": 0,
                              "packageName": "string",
                              "masterEvent": true,
                              "subEvent": true,
                              "packageEvent": true,
                              "alternateEvent": true,
                              "waitlisted": true,
                              "notMoveable": true,
                              "loudEvent": true,
                              "hasPostings": true,
                              "displayDoorcard": true,
                              "cateringDeductInventory": true,
                              "eventShared": true,
                              "createDateTime": "2020-07-17T11:06:40.139Z",
                              "creatorId": "string",
                              "lastModifyDateTime": "2020-07-17T11:06:40.139Z",
                              "lastModifierId": "string",
                              "purgeDate": "2020-07-17",
                              "includeSpaceInPackage": true,
                              "eventLevelRevenueActualization": true
                            },
                            "functionSpaceInformation": {
                              "functionSpaceCode": "string",
                              "functionSpaceDescription": "string",
                              "setupCode": "string",
                              "setupDescription": "string",
                              "setupTime": 0,
                              "setdownTime": 0,
                              "rentalCode": "string",
                              "rateDesc": "string",
                              "rentalAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "discountPercentage": 0,
                              "minimumOccupancy": 0,
                              "maximumOccupancy": 0,
                              "shareable": true,
                              "comboSpace": true,
                              "elementSpace": true
                            }
                          }
                        ],
                        "masterEventDetail": {
                          "eventPrimaryInfo": {
                            "eventId": {
                              "url": "string",
                              "type": "string",
                              "instance": "string",
                              "idContext": "string",
                              "id": "string",
                              "idExtension": 0
                            },
                            "hotelId": "string",
                            "includeSubEvents": true
                          },
                          "eventDetail": {
                            "eventName": {
                              "defaultText": "string",
                              "translations": {
                                "text": [
                                  {
                                    "value": "string",
                                    "language": "string"
                                  }
                                ]
                              }
                            },
                            "eventType": "string",
                            "eventTimeSpan": {
                              "startDateTime": "2020-07-17T11:06:40.139Z",
                              "endDateTime": "2020-07-17T11:06:40.139Z"
                            },
                            "eventStatus": {
                              "status": {
                                "code": "string",
                                "description": "string"
                              },
                              "color": "White"
                            },
                            "waitlistReturnStatus": {
                              "status": {
                                "code": "string",
                                "description": "string"
                              },
                              "color": "White"
                            },
                            "cateringStatusType": "Waitlist",
                            "attendees": {
                              "expected": 0,
                              "guaranteed": 0,
                              "actual": 0,
                              "set": 0,
                              "billed": 0,
                              "packageExpected": 0,
                              "packageGuaranteed": 0,
                              "packageActual": 0,
                              "packageBilled": 0
                            },
                            "masterEventId": {
                              "id": "string",
                              "type": "string"
                            },
                            "doorcard": "string",
                            "eventLink": {
                              "id": {
                                "id": "string",
                                "type": "string"
                              },
                              "type": "SubEvent",
                              "masterEventDates": {
                                "startDateTime": "2020-07-17T11:06:40.139Z",
                                "endDateTime": "2020-07-17T11:06:40.139Z"
                              }
                            },
                            "inactiveDate": "2020-07-17",
                            "packageId": 0,
                            "packageName": "string",
                            "masterEvent": true,
                            "subEvent": true,
                            "packageEvent": true,
                            "alternateEvent": true,
                            "waitlisted": true,
                            "notMoveable": true,
                            "loudEvent": true,
                            "hasPostings": true,
                            "displayDoorcard": true,
                            "cateringDeductInventory": true,
                            "eventShared": true,
                            "createDateTime": "2020-07-17T11:06:40.139Z",
                            "creatorId": "string",
                            "lastModifyDateTime": "2020-07-17T11:06:40.139Z",
                            "lastModifierId": "string",
                            "purgeDate": "2020-07-17",
                            "includeSpaceInPackage": true,
                            "eventLevelRevenueActualization": true
                          },
                          "functionSpaceInformation": {
                            "functionSpaceCode": "string",
                            "functionSpaceDescription": "string",
                            "setupCode": "string",
                            "setupDescription": "string",
                            "setupTime": 0,
                            "setdownTime": 0,
                            "rentalCode": "string",
                            "rateDesc": "string",
                            "rentalAmount": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "discountPercentage": 0,
                            "minimumOccupancy": 0,
                            "maximumOccupancy": 0,
                            "shareable": true,
                            "comboSpace": true,
                            "elementSpace": true
                          }
                        },
                        "eventRevenues": {
                          "eventRevenueInformation": [
                            {
                              "revenueType": {
                                "code": "string",
                                "translatableDescription": {
                                  "defaultText": "string",
                                  "translations": {
                                    "text": [
                                      {
                                        "value": "string",
                                        "language": "string"
                                      }
                                    ]
                                  }
                                },
                                "displaySequence": 0,
                                "revenueGroup": "string",
                                "foodAndBeverage": true,
                                "inactive": true,
                                "revenueDetails": [
                                  {
                                    "hotelId": "string",
                                    "revenueMinimum": true,
                                    "tax": 0
                                  }
                                ]
                              },
                              "forecastRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "expectedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "guaranteedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "onTheBooksRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "billedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "actualRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "totalCost": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "flatForecastRevenue": true,
                              "custom": true,
                              "ignoreForecast": true,
                              "packaged": true,
                              "orderBy": 0
                            }
                          ],
                          "currencyCode": "string",
                          "excludeFromForecast": true,
                          "useForecastRevenue": true,
                          "eventLevelRevenueActualization": true
                        }
                      }
                    ],
                    "links": [
                      {
                        "href": "string",
                        "rel": "string",
                        "templated": false,
                        "method": "GET",
                        "targetSchema": "string",
                        "operationId": "string",
                        "title": "string"
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/manageAlternateEventsStatus"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      }
    },
    "/blocks/{blockId}/cateringPackages": {
      "post": {
        "summary": "Add catering packages to a block",
        "description": "Add an available catering package onto your block. <p><strong>OperationId:</strong>postCateringPackage</p>",
        "operationId": "postCateringPackage",
        "parameters": [
          {
            "name": "blockId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the block"
          },
          {
            "name": "blockCateringPackage",
            "in": "body",
            "required": true,
            "description": "Request object for adding Catering Package/Template Events to block .",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/blockCateringPackage"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response object for adding Catering Package/Template Events to block.",
            "schema": {
              "$ref": "#/definitions/blockCateringPackageDetails"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      },
      "get": {
        "summary": "Get Catering packages ",
        "description": "Retrieve the cateringPackages on the block <p><strong>OperationId:</strong>getCateringPackages</p> <p>The maximum allowable limit for this API is <strong>25</strong>.</p>",
        "operationId": "getCateringPackages",
        "parameters": [
          {
            "name": "blockId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the block"
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Block hotel code.",
            "type": "string"
          },
          {
            "name": "blockIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "blockIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching catering packages associated to block.",
            "schema": {
              "$ref": "#/definitions/cateringPackages"
            }
          },
          "204": {
            "description": "CateringPackages not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      },
      "put": {
        "summary": "Update a Catering packages",
        "description": "Update a Catering Package which already exists on the block. <p><strong>OperationId:</strong>changeCateringPackages</p>",
        "operationId": "changeCateringPackages",
        "parameters": [
          {
            "name": "blockId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the block"
          },
          {
            "name": "cateringPackages",
            "in": "body",
            "required": true,
            "description": "Request object for modifying details of associated catering packages.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/cateringPackages"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/cateringPackages"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      }
    },
    "/blocks/{blockId}/cateringPackages/{cateringpackageId}/copy": {
      "put": {
        "summary": "Copy a Catering package",
        "description": "Use this API to copy an existing Catering Package one the block to another date on the same block. <p><strong>OperationId:</strong>copyCateringPackage</p>",
        "operationId": "copyCateringPackage",
        "parameters": [
          {
            "name": "cateringpackageId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the catering package"
          },
          {
            "name": "blockId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the block"
          },
          {
            "name": "copyCateringPackage",
            "in": "body",
            "required": true,
            "description": "Request object for Copying Catering Package/Template to another block.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/copyCateringPackage"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response object for copying packages.",
            "schema": {
              "$ref": "#/definitions/copyCateringPackageResponse"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      }
    },
    "/blocks/{blockId}/cateringPackages/{cateringpackageId}/revenue": {
      "get": {
        "summary": "Get Catering package revenue",
        "description": "Retrieve catering package revenue on a block <p><strong>OperationId:</strong>getCateringPackageRevenue</p>",
        "operationId": "getCateringPackageRevenue",
        "parameters": [
          {
            "name": "cateringpackageId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the catering package"
          },
          {
            "name": "blockId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the block"
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Block hotel code.",
            "type": "string"
          },
          {
            "name": "idExtension",
            "in": "query",
            "required": false,
            "description": "Additional identifying value assigned by the creating system.",
            "type": "integer"
          },
          {
            "name": "blockIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "blockIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "packageIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "packageIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Fetch instructions that can be used in caterig Package Revenue maintenance.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "BlockInfo",
                "Pricing"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching revenue details of the associated catering package.",
            "schema": {
              "$ref": "#/definitions/cateringPackageRevenue"
            },
            "examples": {
              "application/json": {
                "cateringPackageRevenueDetails": {
                  "blockInfo": {
                    "blockIdList": [
                      {
                        "id": "string",
                        "type": "string"
                      }
                    ]
                  },
                  "packageId": {
                    "id": "string",
                    "type": "string"
                  },
                  "packageDetail": {
                    "pkgCode": "string",
                    "description": {
                      "defaultText": "string",
                      "translations": {
                        "text": [
                          {
                            "value": "string",
                            "language": "string"
                          }
                        ]
                      }
                    },
                    "duration": 0,
                    "webBookable": true,
                    "isTemplate": true
                  },
                  "priceCode": "string",
                  "priceDescription": "string",
                  "flatPrice": true,
                  "revenues": [
                    {
                      "packageEventId": {
                        "id": "string",
                        "type": "string"
                      },
                      "revType": "string",
                      "orderBy": 0,
                      "revForecast": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "revExpected": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "costExpected": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "eventName": "string",
                      "eventType": "string",
                      "eventTimeSpan": {
                        "startDateTime": "2020-07-17T09:13:02.425Z",
                        "endDateTime": "2020-07-17T09:13:02.425Z"
                      }
                    }
                  ]
                },
                "links": [
                  {
                    "href": "string",
                    "rel": "string",
                    "templated": false,
                    "method": "GET",
                    "targetSchema": "string",
                    "operationId": "string",
                    "title": "string"
                  }
                ]
              }
            }
          },
          "204": {
            "description": "CateringPackageRevenue not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      },
      "post": {
        "summary": "Add catering package revenue to a block",
        "description": "Add catering package revenue to a block <p><strong>OperationId:</strong>postCateringPackageRevenue</p>",
        "operationId": "postCateringPackageRevenue",
        "parameters": [
          {
            "name": "cateringpackageId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the catering package"
          },
          {
            "name": "blockId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the block"
          },
          {
            "name": "cateringPackageRevenue",
            "in": "body",
            "required": true,
            "description": "Request object for creating revenue details of the associated catering package.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/cateringPackageRevenue"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      }
    },
    "/blocks/{blockId}/events/{eventId}/resources/copy": {
      "put": {
        "summary": "Copy event resources",
        "description": "You can use this API to copy one/more existing event resources to one/more events for the same/different block. <p><strong>OperationId:</strong>copyEventResources</p>",
        "operationId": "copyEventResources",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the event"
          },
          {
            "name": "blockId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the block"
          },
          {
            "name": "eventResources",
            "in": "body",
            "required": true,
            "description": "Request object for copying event resources.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/eventResources"
                },
                {
                  "example": {
                    "eventsResourcesList": [
                      {
                        "eventPrimaryInfo": {
                          "eventId": {
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0
                          },
                          "hotelId": "string",
                          "includeSubEvents": true
                        },
                        "eventDetail": {
                          "eventName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "eventType": "string",
                          "eventTimeSpan": {
                            "startDateTime": "2020-07-16T16:22:23.437Z",
                            "endDateTime": "2020-07-16T16:22:23.437Z"
                          },
                          "eventStatus": {
                            "status": {
                              "code": "string",
                              "description": "string"
                            },
                            "color": "White"
                          },
                          "waitlistReturnStatus": {
                            "status": {
                              "code": "string",
                              "description": "string"
                            },
                            "color": "White"
                          },
                          "cateringStatusType": "Waitlist",
                          "attendees": {
                            "expected": 0,
                            "guaranteed": 0,
                            "actual": 0,
                            "set": 0,
                            "billed": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0
                          },
                          "masterEventId": {
                            "id": "string",
                            "type": "string"
                          },
                          "doorcard": "string",
                          "eventLink": {
                            "id": {
                              "id": "string",
                              "type": "string"
                            },
                            "type": "SubEvent",
                            "masterEventDates": {
                              "startDateTime": "2020-07-16T16:22:23.437Z",
                              "endDateTime": "2020-07-16T16:22:23.437Z"
                            }
                          },
                          "inactiveDate": "2020-07-16",
                          "packageId": 0,
                          "packageName": "string",
                          "masterEvent": true,
                          "subEvent": true,
                          "packageEvent": true,
                          "alternateEvent": true,
                          "waitlisted": true,
                          "notMoveable": true,
                          "loudEvent": true,
                          "hasPostings": true,
                          "displayDoorcard": true,
                          "cateringDeductInventory": true,
                          "eventShared": true,
                          "createDateTime": "2020-07-16T16:22:23.437Z",
                          "creatorId": "string",
                          "lastModifyDateTime": "2020-07-16T16:22:23.437Z",
                          "lastModifierId": "string",
                          "purgeDate": "2020-07-16",
                          "includeSpaceInPackage": true,
                          "eventLevelRevenueActualization": true
                        },
                        "eventResources": [
                          {
                            "resourceId": {
                              "url": "string",
                              "type": "string",
                              "instance": "string",
                              "idContext": "string",
                              "id": "string",
                              "idExtension": 0
                            },
                            "resourceType": "FunctionSpace",
                            "resourceName": "string",
                            "setupCode": "string",
                            "itemAttribute": "string",
                            "quantity": 0,
                            "hours": 0,
                            "persons": 0,
                            "quantityIncluded": 0,
                            "quantityExcluded": 0,
                            "unitPrice": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "revenue": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "rentalCode": "string",
                            "discount": 0,
                            "eventResourceNotes": [
                              {
                                "noteId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "noteCode": "string",
                                "internal": true,
                                "noteTitle": "string",
                                "comment": "string",
                                "sequence": 0,
                                "createDateTime": "2020-07-16T16:22:23.437Z",
                                "creatorId": "string",
                                "lastModifyDateTime": "2020-07-16T16:22:23.437Z",
                                "lastModifierId": "string",
                                "purgeDate": "2020-07-16"
                              }
                            ],
                            "sellStartDate": "2020-07-16",
                            "sellEndDate": "2020-07-16",
                            "eventStartDate": "2020-07-16",
                            "eventEndDate": "2020-07-16",
                            "consumptionBased": true,
                            "multiChoice": true,
                            "hotelId": "string",
                            "order": "string",
                            "hasDiscountMenuItem": true,
                            "hasNotes": true,
                            "external": true,
                            "custom": true,
                            "packaged": true
                          }
                        ],
                        "processInstructions": {
                          "overrideCapacity": true,
                          "overbook": true,
                          "shareable": true,
                          "overrideMaxgroups": true,
                          "waitList": true,
                          "warnFunctionSpace": true
                        },
                        "eventBlockInfo": {
                          "blockIdList": [
                            {
                              "id": "string",
                              "type": "string"
                            }
                          ]
                        },
                        "functionSpaceInformation": {
                          "functionSpaceCode": "string",
                          "functionSpaceDescription": "string",
                          "setupCode": "string",
                          "setupDescription": "string",
                          "setupTime": 0,
                          "setdownTime": 0,
                          "rentalCode": "string",
                          "rateDesc": "string",
                          "rentalAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "discountPercentage": 0,
                          "minimumOccupancy": 0,
                          "maximumOccupancy": 0,
                          "shareable": true,
                          "comboSpace": true,
                          "elementSpace": true
                        },
                        "eventNotes": [
                          {
                            "noteId": {
                              "id": "string",
                              "type": "string"
                            },
                            "noteCode": "string",
                            "internal": true,
                            "noteTitle": "string",
                            "comment": "string",
                            "sequence": 0,
                            "createDateTime": "2020-07-16T16:22:23.461Z",
                            "creatorId": "string",
                            "lastModifyDateTime": "2020-07-16T16:22:23.461Z",
                            "lastModifierId": "string",
                            "purgeDate": "2020-07-16"
                          }
                        ],
                        "eventIndicators": [
                          {
                            "indicatorName": "string",
                            "count": 0
                          }
                        ],
                        "onTheBooksRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "subEventsDetail": [
                          {
                            "eventPrimaryInfo": {
                              "eventId": {
                                "url": "string",
                                "type": "string",
                                "instance": "string",
                                "idContext": "string",
                                "id": "string",
                                "idExtension": 0
                              },
                              "hotelId": "string",
                              "includeSubEvents": true
                            },
                            "eventDetail": {
                              "eventName": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "value": "string",
                                      "language": "string"
                                    }
                                  ]
                                }
                              },
                              "eventType": "string",
                              "eventTimeSpan": {
                                "startDateTime": "2020-07-16T16:22:23.461Z",
                                "endDateTime": "2020-07-16T16:22:23.461Z"
                              },
                              "eventStatus": {
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "color": "White"
                              },
                              "waitlistReturnStatus": {
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "color": "White"
                              },
                              "cateringStatusType": "Waitlist",
                              "attendees": {
                                "expected": 0,
                                "guaranteed": 0,
                                "actual": 0,
                                "set": 0,
                                "billed": 0,
                                "packageExpected": 0,
                                "packageGuaranteed": 0,
                                "packageActual": 0,
                                "packageBilled": 0
                              },
                              "masterEventId": {
                                "id": "string",
                                "type": "string"
                              },
                              "doorcard": "string",
                              "eventLink": {
                                "id": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "type": "SubEvent",
                                "masterEventDates": {
                                  "startDateTime": "2020-07-16T16:22:23.461Z",
                                  "endDateTime": "2020-07-16T16:22:23.461Z"
                                }
                              },
                              "inactiveDate": "2020-07-16",
                              "packageId": 0,
                              "packageName": "string",
                              "masterEvent": true,
                              "subEvent": true,
                              "packageEvent": true,
                              "alternateEvent": true,
                              "waitlisted": true,
                              "notMoveable": true,
                              "loudEvent": true,
                              "hasPostings": true,
                              "displayDoorcard": true,
                              "cateringDeductInventory": true,
                              "eventShared": true,
                              "createDateTime": "2020-07-16T16:22:23.461Z",
                              "creatorId": "string",
                              "lastModifyDateTime": "2020-07-16T16:22:23.461Z",
                              "lastModifierId": "string",
                              "purgeDate": "2020-07-16",
                              "includeSpaceInPackage": true,
                              "eventLevelRevenueActualization": true
                            },
                            "functionSpaceInformation": {
                              "functionSpaceCode": "string",
                              "functionSpaceDescription": "string",
                              "setupCode": "string",
                              "setupDescription": "string",
                              "setupTime": 0,
                              "setdownTime": 0,
                              "rentalCode": "string",
                              "rateDesc": "string",
                              "rentalAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "discountPercentage": 0,
                              "minimumOccupancy": 0,
                              "maximumOccupancy": 0,
                              "shareable": true,
                              "comboSpace": true,
                              "elementSpace": true
                            }
                          }
                        ],
                        "altEventsDetail": [
                          {
                            "eventPrimaryInfo": {
                              "eventId": {
                                "url": "string",
                                "type": "string",
                                "instance": "string",
                                "idContext": "string",
                                "id": "string",
                                "idExtension": 0
                              },
                              "hotelId": "string",
                              "includeSubEvents": true
                            },
                            "eventDetail": {
                              "eventName": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "value": "string",
                                      "language": "string"
                                    }
                                  ]
                                }
                              },
                              "eventType": "string",
                              "eventTimeSpan": {
                                "startDateTime": "2020-07-16T16:22:23.462Z",
                                "endDateTime": "2020-07-16T16:22:23.462Z"
                              },
                              "eventStatus": {
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "color": "White"
                              },
                              "waitlistReturnStatus": {
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "color": "White"
                              },
                              "cateringStatusType": "Waitlist",
                              "attendees": {
                                "expected": 0,
                                "guaranteed": 0,
                                "actual": 0,
                                "set": 0,
                                "billed": 0,
                                "packageExpected": 0,
                                "packageGuaranteed": 0,
                                "packageActual": 0,
                                "packageBilled": 0
                              },
                              "masterEventId": {
                                "id": "string",
                                "type": "string"
                              },
                              "doorcard": "string",
                              "eventLink": {
                                "id": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "type": "SubEvent",
                                "masterEventDates": {
                                  "startDateTime": "2020-07-16T16:22:23.462Z",
                                  "endDateTime": "2020-07-16T16:22:23.462Z"
                                }
                              },
                              "inactiveDate": "2020-07-16",
                              "packageId": 0,
                              "packageName": "string",
                              "masterEvent": true,
                              "subEvent": true,
                              "packageEvent": true,
                              "alternateEvent": true,
                              "waitlisted": true,
                              "notMoveable": true,
                              "loudEvent": true,
                              "hasPostings": true,
                              "displayDoorcard": true,
                              "cateringDeductInventory": true,
                              "eventShared": true,
                              "createDateTime": "2020-07-16T16:22:23.462Z",
                              "creatorId": "string",
                              "lastModifyDateTime": "2020-07-16T16:22:23.462Z",
                              "lastModifierId": "string",
                              "purgeDate": "2020-07-16",
                              "includeSpaceInPackage": true,
                              "eventLevelRevenueActualization": true
                            },
                            "functionSpaceInformation": {
                              "functionSpaceCode": "string",
                              "functionSpaceDescription": "string",
                              "setupCode": "string",
                              "setupDescription": "string",
                              "setupTime": 0,
                              "setdownTime": 0,
                              "rentalCode": "string",
                              "rateDesc": "string",
                              "rentalAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "discountPercentage": 0,
                              "minimumOccupancy": 0,
                              "maximumOccupancy": 0,
                              "shareable": true,
                              "comboSpace": true,
                              "elementSpace": true
                            }
                          }
                        ],
                        "masterEventDetail": {
                          "eventPrimaryInfo": {
                            "eventId": {
                              "url": "string",
                              "type": "string",
                              "instance": "string",
                              "idContext": "string",
                              "id": "string",
                              "idExtension": 0
                            },
                            "hotelId": "string",
                            "includeSubEvents": true
                          },
                          "eventDetail": {
                            "eventName": {
                              "defaultText": "string",
                              "translations": {
                                "text": [
                                  {
                                    "value": "string",
                                    "language": "string"
                                  }
                                ]
                              }
                            },
                            "eventType": "string",
                            "eventTimeSpan": {
                              "startDateTime": "2020-07-16T16:22:23.462Z",
                              "endDateTime": "2020-07-16T16:22:23.462Z"
                            },
                            "eventStatus": {
                              "status": {
                                "code": "string",
                                "description": "string"
                              },
                              "color": "White"
                            },
                            "waitlistReturnStatus": {
                              "status": {
                                "code": "string",
                                "description": "string"
                              },
                              "color": "White"
                            },
                            "cateringStatusType": "Waitlist",
                            "attendees": {
                              "expected": 0,
                              "guaranteed": 0,
                              "actual": 0,
                              "set": 0,
                              "billed": 0,
                              "packageExpected": 0,
                              "packageGuaranteed": 0,
                              "packageActual": 0,
                              "packageBilled": 0
                            },
                            "masterEventId": {
                              "id": "string",
                              "type": "string"
                            },
                            "doorcard": "string",
                            "eventLink": {
                              "id": {
                                "id": "string",
                                "type": "string"
                              },
                              "type": "SubEvent",
                              "masterEventDates": {
                                "startDateTime": "2020-07-16T16:22:23.462Z",
                                "endDateTime": "2020-07-16T16:22:23.462Z"
                              }
                            },
                            "inactiveDate": "2020-07-16",
                            "packageId": 0,
                            "packageName": "string",
                            "masterEvent": true,
                            "subEvent": true,
                            "packageEvent": true,
                            "alternateEvent": true,
                            "waitlisted": true,
                            "notMoveable": true,
                            "loudEvent": true,
                            "hasPostings": true,
                            "displayDoorcard": true,
                            "cateringDeductInventory": true,
                            "eventShared": true,
                            "createDateTime": "2020-07-16T16:22:23.462Z",
                            "creatorId": "string",
                            "lastModifyDateTime": "2020-07-16T16:22:23.462Z",
                            "lastModifierId": "string",
                            "purgeDate": "2020-07-16",
                            "includeSpaceInPackage": true,
                            "eventLevelRevenueActualization": true
                          },
                          "functionSpaceInformation": {
                            "functionSpaceCode": "string",
                            "functionSpaceDescription": "string",
                            "setupCode": "string",
                            "setupDescription": "string",
                            "setupTime": 0,
                            "setdownTime": 0,
                            "rentalCode": "string",
                            "rateDesc": "string",
                            "rentalAmount": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "discountPercentage": 0,
                            "minimumOccupancy": 0,
                            "maximumOccupancy": 0,
                            "shareable": true,
                            "comboSpace": true,
                            "elementSpace": true
                          }
                        },
                        "eventRevenues": {
                          "eventRevenueInformation": [
                            {
                              "revenueType": {
                                "code": "string",
                                "translatableDescription": {
                                  "defaultText": "string",
                                  "translations": {
                                    "text": [
                                      {
                                        "value": "string",
                                        "language": "string"
                                      }
                                    ]
                                  }
                                },
                                "displaySequence": 0,
                                "revenueGroup": "string",
                                "foodAndBeverage": true,
                                "inactive": true,
                                "revenueDetails": [
                                  {
                                    "hotelId": "string",
                                    "revenueMinimum": true,
                                    "tax": 0
                                  }
                                ]
                              },
                              "forecastRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "expectedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "guaranteedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "onTheBooksRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "billedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "actualRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "totalCost": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "flatForecastRevenue": true,
                              "custom": true,
                              "ignoreForecast": true,
                              "packaged": true,
                              "orderBy": 0
                            }
                          ],
                          "currencyCode": "string",
                          "excludeFromForecast": true,
                          "useForecastRevenue": true,
                          "eventLevelRevenueActualization": true
                        }
                      }
                    ],
                    "links": [
                      {
                        "href": "string",
                        "rel": "string",
                        "templated": false,
                        "method": "GET",
                        "targetSchema": "string",
                        "operationId": "string",
                        "title": "string"
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response object for copying event resources.",
            "schema": {
              "$ref": "#/definitions/eventResourcesResponse"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      }
    },
    "/blocks/{blockId}/events/{eventId}/resources/move": {
      "put": {
        "summary": "Move event resources",
        "description": "You can use this API to move one/more existing event resources to an event for the same/different block. <p><strong>OperationId:</strong>moveEventResources</p>",
        "operationId": "moveEventResources",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the event"
          },
          {
            "name": "blockId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the block"
          },
          {
            "name": "eventResources",
            "in": "body",
            "required": true,
            "description": "Request object for moving event resources.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/eventResources"
                },
                {
                  "example": {
                    "eventsResourcesList": [
                      {
                        "eventPrimaryInfo": {
                          "eventId": {
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0
                          },
                          "hotelId": "string",
                          "includeSubEvents": true
                        },
                        "eventDetail": {
                          "eventName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "eventType": "string",
                          "eventTimeSpan": {
                            "startDateTime": "2020-07-16T16:22:23.437Z",
                            "endDateTime": "2020-07-16T16:22:23.437Z"
                          },
                          "eventStatus": {
                            "status": {
                              "code": "string",
                              "description": "string"
                            },
                            "color": "White"
                          },
                          "waitlistReturnStatus": {
                            "status": {
                              "code": "string",
                              "description": "string"
                            },
                            "color": "White"
                          },
                          "cateringStatusType": "Waitlist",
                          "attendees": {
                            "expected": 0,
                            "guaranteed": 0,
                            "actual": 0,
                            "set": 0,
                            "billed": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0
                          },
                          "masterEventId": {
                            "id": "string",
                            "type": "string"
                          },
                          "doorcard": "string",
                          "eventLink": {
                            "id": {
                              "id": "string",
                              "type": "string"
                            },
                            "type": "SubEvent",
                            "masterEventDates": {
                              "startDateTime": "2020-07-16T16:22:23.437Z",
                              "endDateTime": "2020-07-16T16:22:23.437Z"
                            }
                          },
                          "inactiveDate": "2020-07-16",
                          "packageId": 0,
                          "packageName": "string",
                          "masterEvent": true,
                          "subEvent": true,
                          "packageEvent": true,
                          "alternateEvent": true,
                          "waitlisted": true,
                          "notMoveable": true,
                          "loudEvent": true,
                          "hasPostings": true,
                          "displayDoorcard": true,
                          "cateringDeductInventory": true,
                          "eventShared": true,
                          "createDateTime": "2020-07-16T16:22:23.437Z",
                          "creatorId": "string",
                          "lastModifyDateTime": "2020-07-16T16:22:23.437Z",
                          "lastModifierId": "string",
                          "purgeDate": "2020-07-16",
                          "includeSpaceInPackage": true,
                          "eventLevelRevenueActualization": true
                        },
                        "eventResources": [
                          {
                            "resourceId": {
                              "url": "string",
                              "type": "string",
                              "instance": "string",
                              "idContext": "string",
                              "id": "string",
                              "idExtension": 0
                            },
                            "resourceType": "FunctionSpace",
                            "resourceName": "string",
                            "setupCode": "string",
                            "itemAttribute": "string",
                            "quantity": 0,
                            "hours": 0,
                            "persons": 0,
                            "quantityIncluded": 0,
                            "quantityExcluded": 0,
                            "unitPrice": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "revenue": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "rentalCode": "string",
                            "discount": 0,
                            "eventResourceNotes": [
                              {
                                "noteId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "noteCode": "string",
                                "internal": true,
                                "noteTitle": "string",
                                "comment": "string",
                                "sequence": 0,
                                "createDateTime": "2020-07-16T16:22:23.437Z",
                                "creatorId": "string",
                                "lastModifyDateTime": "2020-07-16T16:22:23.437Z",
                                "lastModifierId": "string",
                                "purgeDate": "2020-07-16"
                              }
                            ],
                            "sellStartDate": "2020-07-16",
                            "sellEndDate": "2020-07-16",
                            "eventStartDate": "2020-07-16",
                            "eventEndDate": "2020-07-16",
                            "consumptionBased": true,
                            "multiChoice": true,
                            "hotelId": "string",
                            "order": "string",
                            "hasDiscountMenuItem": true,
                            "hasNotes": true,
                            "external": true,
                            "custom": true,
                            "packaged": true
                          }
                        ],
                        "processInstructions": {
                          "overrideCapacity": true,
                          "overbook": true,
                          "shareable": true,
                          "overrideMaxgroups": true,
                          "waitList": true,
                          "warnFunctionSpace": true
                        },
                        "eventBlockInfo": {
                          "blockIdList": [
                            {
                              "id": "string",
                              "type": "string"
                            }
                          ]
                        },
                        "functionSpaceInformation": {
                          "functionSpaceCode": "string",
                          "functionSpaceDescription": "string",
                          "setupCode": "string",
                          "setupDescription": "string",
                          "setupTime": 0,
                          "setdownTime": 0,
                          "rentalCode": "string",
                          "rateDesc": "string",
                          "rentalAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "discountPercentage": 0,
                          "minimumOccupancy": 0,
                          "maximumOccupancy": 0,
                          "shareable": true,
                          "comboSpace": true,
                          "elementSpace": true
                        },
                        "eventNotes": [
                          {
                            "noteId": {
                              "id": "string",
                              "type": "string"
                            },
                            "noteCode": "string",
                            "internal": true,
                            "noteTitle": "string",
                            "comment": "string",
                            "sequence": 0,
                            "createDateTime": "2020-07-16T16:22:23.461Z",
                            "creatorId": "string",
                            "lastModifyDateTime": "2020-07-16T16:22:23.461Z",
                            "lastModifierId": "string",
                            "purgeDate": "2020-07-16"
                          }
                        ],
                        "eventIndicators": [
                          {
                            "indicatorName": "string",
                            "count": 0
                          }
                        ],
                        "onTheBooksRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "subEventsDetail": [
                          {
                            "eventPrimaryInfo": {
                              "eventId": {
                                "url": "string",
                                "type": "string",
                                "instance": "string",
                                "idContext": "string",
                                "id": "string",
                                "idExtension": 0
                              },
                              "hotelId": "string",
                              "includeSubEvents": true
                            },
                            "eventDetail": {
                              "eventName": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "value": "string",
                                      "language": "string"
                                    }
                                  ]
                                }
                              },
                              "eventType": "string",
                              "eventTimeSpan": {
                                "startDateTime": "2020-07-16T16:22:23.461Z",
                                "endDateTime": "2020-07-16T16:22:23.461Z"
                              },
                              "eventStatus": {
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "color": "White"
                              },
                              "waitlistReturnStatus": {
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "color": "White"
                              },
                              "cateringStatusType": "Waitlist",
                              "attendees": {
                                "expected": 0,
                                "guaranteed": 0,
                                "actual": 0,
                                "set": 0,
                                "billed": 0,
                                "packageExpected": 0,
                                "packageGuaranteed": 0,
                                "packageActual": 0,
                                "packageBilled": 0
                              },
                              "masterEventId": {
                                "id": "string",
                                "type": "string"
                              },
                              "doorcard": "string",
                              "eventLink": {
                                "id": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "type": "SubEvent",
                                "masterEventDates": {
                                  "startDateTime": "2020-07-16T16:22:23.461Z",
                                  "endDateTime": "2020-07-16T16:22:23.461Z"
                                }
                              },
                              "inactiveDate": "2020-07-16",
                              "packageId": 0,
                              "packageName": "string",
                              "masterEvent": true,
                              "subEvent": true,
                              "packageEvent": true,
                              "alternateEvent": true,
                              "waitlisted": true,
                              "notMoveable": true,
                              "loudEvent": true,
                              "hasPostings": true,
                              "displayDoorcard": true,
                              "cateringDeductInventory": true,
                              "eventShared": true,
                              "createDateTime": "2020-07-16T16:22:23.461Z",
                              "creatorId": "string",
                              "lastModifyDateTime": "2020-07-16T16:22:23.461Z",
                              "lastModifierId": "string",
                              "purgeDate": "2020-07-16",
                              "includeSpaceInPackage": true,
                              "eventLevelRevenueActualization": true
                            },
                            "functionSpaceInformation": {
                              "functionSpaceCode": "string",
                              "functionSpaceDescription": "string",
                              "setupCode": "string",
                              "setupDescription": "string",
                              "setupTime": 0,
                              "setdownTime": 0,
                              "rentalCode": "string",
                              "rateDesc": "string",
                              "rentalAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "discountPercentage": 0,
                              "minimumOccupancy": 0,
                              "maximumOccupancy": 0,
                              "shareable": true,
                              "comboSpace": true,
                              "elementSpace": true
                            }
                          }
                        ],
                        "altEventsDetail": [
                          {
                            "eventPrimaryInfo": {
                              "eventId": {
                                "url": "string",
                                "type": "string",
                                "instance": "string",
                                "idContext": "string",
                                "id": "string",
                                "idExtension": 0
                              },
                              "hotelId": "string",
                              "includeSubEvents": true
                            },
                            "eventDetail": {
                              "eventName": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "value": "string",
                                      "language": "string"
                                    }
                                  ]
                                }
                              },
                              "eventType": "string",
                              "eventTimeSpan": {
                                "startDateTime": "2020-07-16T16:22:23.462Z",
                                "endDateTime": "2020-07-16T16:22:23.462Z"
                              },
                              "eventStatus": {
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "color": "White"
                              },
                              "waitlistReturnStatus": {
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "color": "White"
                              },
                              "cateringStatusType": "Waitlist",
                              "attendees": {
                                "expected": 0,
                                "guaranteed": 0,
                                "actual": 0,
                                "set": 0,
                                "billed": 0,
                                "packageExpected": 0,
                                "packageGuaranteed": 0,
                                "packageActual": 0,
                                "packageBilled": 0
                              },
                              "masterEventId": {
                                "id": "string",
                                "type": "string"
                              },
                              "doorcard": "string",
                              "eventLink": {
                                "id": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "type": "SubEvent",
                                "masterEventDates": {
                                  "startDateTime": "2020-07-16T16:22:23.462Z",
                                  "endDateTime": "2020-07-16T16:22:23.462Z"
                                }
                              },
                              "inactiveDate": "2020-07-16",
                              "packageId": 0,
                              "packageName": "string",
                              "masterEvent": true,
                              "subEvent": true,
                              "packageEvent": true,
                              "alternateEvent": true,
                              "waitlisted": true,
                              "notMoveable": true,
                              "loudEvent": true,
                              "hasPostings": true,
                              "displayDoorcard": true,
                              "cateringDeductInventory": true,
                              "eventShared": true,
                              "createDateTime": "2020-07-16T16:22:23.462Z",
                              "creatorId": "string",
                              "lastModifyDateTime": "2020-07-16T16:22:23.462Z",
                              "lastModifierId": "string",
                              "purgeDate": "2020-07-16",
                              "includeSpaceInPackage": true,
                              "eventLevelRevenueActualization": true
                            },
                            "functionSpaceInformation": {
                              "functionSpaceCode": "string",
                              "functionSpaceDescription": "string",
                              "setupCode": "string",
                              "setupDescription": "string",
                              "setupTime": 0,
                              "setdownTime": 0,
                              "rentalCode": "string",
                              "rateDesc": "string",
                              "rentalAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "discountPercentage": 0,
                              "minimumOccupancy": 0,
                              "maximumOccupancy": 0,
                              "shareable": true,
                              "comboSpace": true,
                              "elementSpace": true
                            }
                          }
                        ],
                        "masterEventDetail": {
                          "eventPrimaryInfo": {
                            "eventId": {
                              "url": "string",
                              "type": "string",
                              "instance": "string",
                              "idContext": "string",
                              "id": "string",
                              "idExtension": 0
                            },
                            "hotelId": "string",
                            "includeSubEvents": true
                          },
                          "eventDetail": {
                            "eventName": {
                              "defaultText": "string",
                              "translations": {
                                "text": [
                                  {
                                    "value": "string",
                                    "language": "string"
                                  }
                                ]
                              }
                            },
                            "eventType": "string",
                            "eventTimeSpan": {
                              "startDateTime": "2020-07-16T16:22:23.462Z",
                              "endDateTime": "2020-07-16T16:22:23.462Z"
                            },
                            "eventStatus": {
                              "status": {
                                "code": "string",
                                "description": "string"
                              },
                              "color": "White"
                            },
                            "waitlistReturnStatus": {
                              "status": {
                                "code": "string",
                                "description": "string"
                              },
                              "color": "White"
                            },
                            "cateringStatusType": "Waitlist",
                            "attendees": {
                              "expected": 0,
                              "guaranteed": 0,
                              "actual": 0,
                              "set": 0,
                              "billed": 0,
                              "packageExpected": 0,
                              "packageGuaranteed": 0,
                              "packageActual": 0,
                              "packageBilled": 0
                            },
                            "masterEventId": {
                              "id": "string",
                              "type": "string"
                            },
                            "doorcard": "string",
                            "eventLink": {
                              "id": {
                                "id": "string",
                                "type": "string"
                              },
                              "type": "SubEvent",
                              "masterEventDates": {
                                "startDateTime": "2020-07-16T16:22:23.462Z",
                                "endDateTime": "2020-07-16T16:22:23.462Z"
                              }
                            },
                            "inactiveDate": "2020-07-16",
                            "packageId": 0,
                            "packageName": "string",
                            "masterEvent": true,
                            "subEvent": true,
                            "packageEvent": true,
                            "alternateEvent": true,
                            "waitlisted": true,
                            "notMoveable": true,
                            "loudEvent": true,
                            "hasPostings": true,
                            "displayDoorcard": true,
                            "cateringDeductInventory": true,
                            "eventShared": true,
                            "createDateTime": "2020-07-16T16:22:23.462Z",
                            "creatorId": "string",
                            "lastModifyDateTime": "2020-07-16T16:22:23.462Z",
                            "lastModifierId": "string",
                            "purgeDate": "2020-07-16",
                            "includeSpaceInPackage": true,
                            "eventLevelRevenueActualization": true
                          },
                          "functionSpaceInformation": {
                            "functionSpaceCode": "string",
                            "functionSpaceDescription": "string",
                            "setupCode": "string",
                            "setupDescription": "string",
                            "setupTime": 0,
                            "setdownTime": 0,
                            "rentalCode": "string",
                            "rateDesc": "string",
                            "rentalAmount": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "discountPercentage": 0,
                            "minimumOccupancy": 0,
                            "maximumOccupancy": 0,
                            "shareable": true,
                            "comboSpace": true,
                            "elementSpace": true
                          }
                        },
                        "eventRevenues": {
                          "eventRevenueInformation": [
                            {
                              "revenueType": {
                                "code": "string",
                                "translatableDescription": {
                                  "defaultText": "string",
                                  "translations": {
                                    "text": [
                                      {
                                        "value": "string",
                                        "language": "string"
                                      }
                                    ]
                                  }
                                },
                                "displaySequence": 0,
                                "revenueGroup": "string",
                                "foodAndBeverage": true,
                                "inactive": true,
                                "revenueDetails": [
                                  {
                                    "hotelId": "string",
                                    "revenueMinimum": true,
                                    "tax": 0
                                  }
                                ]
                              },
                              "forecastRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "expectedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "guaranteedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "onTheBooksRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "billedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "actualRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "totalCost": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "flatForecastRevenue": true,
                              "custom": true,
                              "ignoreForecast": true,
                              "packaged": true,
                              "orderBy": 0
                            }
                          ],
                          "currencyCode": "string",
                          "excludeFromForecast": true,
                          "useForecastRevenue": true,
                          "eventLevelRevenueActualization": true
                        }
                      }
                    ],
                    "links": [
                      {
                        "href": "string",
                        "rel": "string",
                        "templated": false,
                        "method": "GET",
                        "targetSchema": "string",
                        "operationId": "string",
                        "title": "string"
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response object for moving event resources.",
            "schema": {
              "$ref": "#/definitions/eventResourcesResponse"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      }
    },
    "/blocks/{blockId}/events/{eventId}/resources/{resourceId}": {
      "get": {
        "summary": "Get Resources for an Event",
        "description": "Retrieve a resource that exist for an Event, using block ID, event ID and resource ID as parameters in the path  This will give you information on the quantity, expected revenue, discounts, notes, and so on for that resource. <p><strong>OperationId:</strong>getEventResourceByMenu</p>",
        "operationId": "getEventResourceByMenu",
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the resource"
          },
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the event"
          },
          {
            "name": "blockId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the block"
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Hotel code of the Resource.",
            "type": "string"
          },
          {
            "name": "blockIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "blockIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "eventIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "eventIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "resourceIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "resourceIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Fetch instructions that can be used in Event Resource maintenance.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "BlockInfo",
                "Notes"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching event resource details.",
            "schema": {
              "$ref": "#/definitions/eventResource"
            },
            "examples": {
              "application/json": {
                "eventResourceDetails": {
                  "eventDetailInfo": {
                    "eventPrimaryInfo": {
                      "eventId": {
                        "url": "string",
                        "type": "string",
                        "instance": "string",
                        "idContext": "string",
                        "id": "string",
                        "idExtension": 0
                      },
                      "hotelId": "string",
                      "includeSubEvents": true
                    },
                    "eventDetail": {
                      "eventName": {
                        "defaultText": "string",
                        "translations": {
                          "text": [
                            {
                              "value": "string",
                              "language": "string"
                            }
                          ]
                        }
                      },
                      "eventType": "string",
                      "eventTimeSpan": {
                        "startDateTime": "2020-07-13T15:33:16.494Z",
                        "endDateTime": "2020-07-13T15:33:16.494Z"
                      },
                      "eventStatus": {
                        "status": {
                          "code": "string",
                          "description": "string"
                        },
                        "color": "White"
                      },
                      "waitlistReturnStatus": {
                        "status": {
                          "code": "string",
                          "description": "string"
                        },
                        "color": "White"
                      },
                      "cateringStatusType": "Waitlist",
                      "attendees": {
                        "expected": 0,
                        "guaranteed": 0,
                        "actual": 0,
                        "set": 0,
                        "billed": 0,
                        "packageExpected": 0,
                        "packageGuaranteed": 0,
                        "packageActual": 0,
                        "packageBilled": 0
                      },
                      "masterEventId": {
                        "id": "string",
                        "type": "string"
                      },
                      "doorcard": "string",
                      "eventLink": {
                        "id": {
                          "id": "string",
                          "type": "string"
                        },
                        "type": "SubEvent",
                        "masterEventDates": {
                          "startDateTime": "2020-07-13T15:33:16.494Z",
                          "endDateTime": "2020-07-13T15:33:16.494Z"
                        }
                      },
                      "inactiveDate": "2020-07-13",
                      "packageId": 0,
                      "packageName": "string",
                      "masterEvent": true,
                      "subEvent": true,
                      "packageEvent": true,
                      "alternateEvent": true,
                      "waitlisted": true,
                      "notMoveable": true,
                      "loudEvent": true,
                      "hasPostings": true,
                      "displayDoorcard": true,
                      "cateringDeductInventory": true,
                      "eventShared": true,
                      "createDateTime": "2020-07-13T15:33:16.494Z",
                      "creatorId": "string",
                      "lastModifyDateTime": "2020-07-13T15:33:16.494Z",
                      "lastModifierId": "string",
                      "purgeDate": "2020-07-13",
                      "includeSpaceInPackage": true,
                      "eventLevelRevenueActualization": true
                    },
                    "eventResources": [
                      {
                        "resourceId": {
                          "url": "string",
                          "type": "string",
                          "instance": "string",
                          "idContext": "string",
                          "id": "string",
                          "idExtension": 0
                        },
                        "resourceType": "FunctionSpace",
                        "resourceName": "string",
                        "setupCode": "string",
                        "itemAttribute": "string",
                        "quantity": 0,
                        "hours": 0,
                        "persons": 0,
                        "quantityIncluded": 0,
                        "quantityExcluded": 0,
                        "unitPrice": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "revenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "rentalCode": "string",
                        "discount": 0,
                        "eventResourceNotes": [
                          {
                            "noteId": {
                              "id": "string",
                              "type": "string"
                            },
                            "noteCode": "string",
                            "internal": true,
                            "noteTitle": "string",
                            "comment": "string",
                            "sequence": 0,
                            "createDateTime": "2020-07-13T15:33:16.494Z",
                            "creatorId": "string",
                            "lastModifyDateTime": "2020-07-13T15:33:16.494Z",
                            "lastModifierId": "string",
                            "purgeDate": "2020-07-13"
                          }
                        ],
                        "sellStartDate": "2020-07-13",
                        "sellEndDate": "2020-07-13",
                        "eventStartDate": "2020-07-13",
                        "eventEndDate": "2020-07-13",
                        "consumptionBased": true,
                        "multiChoice": true,
                        "hotelId": "string",
                        "order": "string",
                        "hasDiscountMenuItem": true,
                        "hasNotes": true,
                        "external": true,
                        "custom": true,
                        "packaged": true
                      }
                    ],
                    "processInstructions": {
                      "overrideCapacity": true,
                      "overbook": true,
                      "shareable": true,
                      "overrideMaxgroups": true,
                      "waitList": true,
                      "warnFunctionSpace": true
                    },
                    "eventBlockInfo": {
                      "blockIdList": [
                        {
                          "id": "string",
                          "type": "string"
                        }
                      ]
                    },
                    "functionSpaceInformation": {
                      "functionSpaceCode": "string",
                      "functionSpaceDescription": "string",
                      "setupCode": "string",
                      "setupDescription": "string",
                      "setupTime": 0,
                      "setdownTime": 0,
                      "rentalCode": "string",
                      "rateDesc": "string",
                      "rentalAmount": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "discountPercentage": 0,
                      "minimumOccupancy": 0,
                      "maximumOccupancy": 0,
                      "shareable": true,
                      "comboSpace": true,
                      "elementSpace": true
                    },
                    "eventNotes": [
                      {
                        "noteId": {
                          "id": "string",
                          "type": "string"
                        },
                        "noteCode": "string",
                        "internal": true,
                        "noteTitle": "string",
                        "comment": "string",
                        "sequence": 0,
                        "createDateTime": "2020-07-13T15:33:16.511Z",
                        "creatorId": "string",
                        "lastModifyDateTime": "2020-07-13T15:33:16.511Z",
                        "lastModifierId": "string",
                        "purgeDate": "2020-07-13"
                      }
                    ],
                    "eventIndicators": [
                      {
                        "indicatorName": "string",
                        "count": 0
                      }
                    ],
                    "onTheBooksRevenue": {
                      "amount": 0,
                      "currencyCode": "string"
                    },
                    "subEventsDetail": [
                      {
                        "eventPrimaryInfo": {
                          "eventId": {
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0
                          },
                          "hotelId": "string",
                          "includeSubEvents": true
                        },
                        "eventDetail": {
                          "eventName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "eventType": "string",
                          "eventTimeSpan": {
                            "startDateTime": "2020-07-13T15:33:16.512Z",
                            "endDateTime": "2020-07-13T15:33:16.512Z"
                          },
                          "eventStatus": {
                            "status": {
                              "code": "string",
                              "description": "string"
                            },
                            "color": "White"
                          },
                          "waitlistReturnStatus": {
                            "status": {
                              "code": "string",
                              "description": "string"
                            },
                            "color": "White"
                          },
                          "cateringStatusType": "Waitlist",
                          "attendees": {
                            "expected": 0,
                            "guaranteed": 0,
                            "actual": 0,
                            "set": 0,
                            "billed": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0
                          },
                          "masterEventId": {
                            "id": "string",
                            "type": "string"
                          },
                          "doorcard": "string",
                          "eventLink": {
                            "id": {
                              "id": "string",
                              "type": "string"
                            },
                            "type": "SubEvent",
                            "masterEventDates": {
                              "startDateTime": "2020-07-13T15:33:16.512Z",
                              "endDateTime": "2020-07-13T15:33:16.512Z"
                            }
                          },
                          "inactiveDate": "2020-07-13",
                          "packageId": 0,
                          "packageName": "string",
                          "masterEvent": true,
                          "subEvent": true,
                          "packageEvent": true,
                          "alternateEvent": true,
                          "waitlisted": true,
                          "notMoveable": true,
                          "loudEvent": true,
                          "hasPostings": true,
                          "displayDoorcard": true,
                          "cateringDeductInventory": true,
                          "eventShared": true,
                          "createDateTime": "2020-07-13T15:33:16.512Z",
                          "creatorId": "string",
                          "lastModifyDateTime": "2020-07-13T15:33:16.512Z",
                          "lastModifierId": "string",
                          "purgeDate": "2020-07-13",
                          "includeSpaceInPackage": true,
                          "eventLevelRevenueActualization": true
                        },
                        "functionSpaceInformation": {
                          "functionSpaceCode": "string",
                          "functionSpaceDescription": "string",
                          "setupCode": "string",
                          "setupDescription": "string",
                          "setupTime": 0,
                          "setdownTime": 0,
                          "rentalCode": "string",
                          "rateDesc": "string",
                          "rentalAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "discountPercentage": 0,
                          "minimumOccupancy": 0,
                          "maximumOccupancy": 0,
                          "shareable": true,
                          "comboSpace": true,
                          "elementSpace": true
                        }
                      }
                    ],
                    "altEventsDetail": [
                      {
                        "eventPrimaryInfo": {
                          "eventId": {
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0
                          },
                          "hotelId": "string",
                          "includeSubEvents": true
                        },
                        "eventDetail": {
                          "eventName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "eventType": "string",
                          "eventTimeSpan": {
                            "startDateTime": "2020-07-13T15:33:16.512Z",
                            "endDateTime": "2020-07-13T15:33:16.512Z"
                          },
                          "eventStatus": {
                            "status": {
                              "code": "string",
                              "description": "string"
                            },
                            "color": "White"
                          },
                          "waitlistReturnStatus": {
                            "status": {
                              "code": "string",
                              "description": "string"
                            },
                            "color": "White"
                          },
                          "cateringStatusType": "Waitlist",
                          "attendees": {
                            "expected": 0,
                            "guaranteed": 0,
                            "actual": 0,
                            "set": 0,
                            "billed": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0
                          },
                          "masterEventId": {
                            "id": "string",
                            "type": "string"
                          },
                          "doorcard": "string",
                          "eventLink": {
                            "id": {
                              "id": "string",
                              "type": "string"
                            },
                            "type": "SubEvent",
                            "masterEventDates": {
                              "startDateTime": "2020-07-13T15:33:16.512Z",
                              "endDateTime": "2020-07-13T15:33:16.512Z"
                            }
                          },
                          "inactiveDate": "2020-07-13",
                          "packageId": 0,
                          "packageName": "string",
                          "masterEvent": true,
                          "subEvent": true,
                          "packageEvent": true,
                          "alternateEvent": true,
                          "waitlisted": true,
                          "notMoveable": true,
                          "loudEvent": true,
                          "hasPostings": true,
                          "displayDoorcard": true,
                          "cateringDeductInventory": true,
                          "eventShared": true,
                          "createDateTime": "2020-07-13T15:33:16.512Z",
                          "creatorId": "string",
                          "lastModifyDateTime": "2020-07-13T15:33:16.512Z",
                          "lastModifierId": "string",
                          "purgeDate": "2020-07-13",
                          "includeSpaceInPackage": true,
                          "eventLevelRevenueActualization": true
                        },
                        "functionSpaceInformation": {
                          "functionSpaceCode": "string",
                          "functionSpaceDescription": "string",
                          "setupCode": "string",
                          "setupDescription": "string",
                          "setupTime": 0,
                          "setdownTime": 0,
                          "rentalCode": "string",
                          "rateDesc": "string",
                          "rentalAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "discountPercentage": 0,
                          "minimumOccupancy": 0,
                          "maximumOccupancy": 0,
                          "shareable": true,
                          "comboSpace": true,
                          "elementSpace": true
                        }
                      }
                    ],
                    "masterEventDetail": {
                      "eventPrimaryInfo": {
                        "eventId": {
                          "url": "string",
                          "type": "string",
                          "instance": "string",
                          "idContext": "string",
                          "id": "string",
                          "idExtension": 0
                        },
                        "hotelId": "string",
                        "includeSubEvents": true
                      },
                      "eventDetail": {
                        "eventName": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "value": "string",
                                "language": "string"
                              }
                            ]
                          }
                        },
                        "eventType": "string",
                        "eventTimeSpan": {
                          "startDateTime": "2020-07-13T15:33:16.512Z",
                          "endDateTime": "2020-07-13T15:33:16.512Z"
                        },
                        "eventStatus": {
                          "status": {
                            "code": "string",
                            "description": "string"
                          },
                          "color": "White"
                        },
                        "waitlistReturnStatus": {
                          "status": {
                            "code": "string",
                            "description": "string"
                          },
                          "color": "White"
                        },
                        "cateringStatusType": "Waitlist",
                        "attendees": {
                          "expected": 0,
                          "guaranteed": 0,
                          "actual": 0,
                          "set": 0,
                          "billed": 0,
                          "packageExpected": 0,
                          "packageGuaranteed": 0,
                          "packageActual": 0,
                          "packageBilled": 0
                        },
                        "masterEventId": {
                          "id": "string",
                          "type": "string"
                        },
                        "doorcard": "string",
                        "eventLink": {
                          "id": {
                            "id": "string",
                            "type": "string"
                          },
                          "type": "SubEvent",
                          "masterEventDates": {
                            "startDateTime": "2020-07-13T15:33:16.512Z",
                            "endDateTime": "2020-07-13T15:33:16.512Z"
                          }
                        },
                        "inactiveDate": "2020-07-13",
                        "packageId": 0,
                        "packageName": "string",
                        "masterEvent": true,
                        "subEvent": true,
                        "packageEvent": true,
                        "alternateEvent": true,
                        "waitlisted": true,
                        "notMoveable": true,
                        "loudEvent": true,
                        "hasPostings": true,
                        "displayDoorcard": true,
                        "cateringDeductInventory": true,
                        "eventShared": true,
                        "createDateTime": "2020-07-13T15:33:16.512Z",
                        "creatorId": "string",
                        "lastModifyDateTime": "2020-07-13T15:33:16.512Z",
                        "lastModifierId": "string",
                        "purgeDate": "2020-07-13",
                        "includeSpaceInPackage": true,
                        "eventLevelRevenueActualization": true
                      },
                      "functionSpaceInformation": {
                        "functionSpaceCode": "string",
                        "functionSpaceDescription": "string",
                        "setupCode": "string",
                        "setupDescription": "string",
                        "setupTime": 0,
                        "setdownTime": 0,
                        "rentalCode": "string",
                        "rateDesc": "string",
                        "rentalAmount": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "discountPercentage": 0,
                        "minimumOccupancy": 0,
                        "maximumOccupancy": 0,
                        "shareable": true,
                        "comboSpace": true,
                        "elementSpace": true
                      }
                    },
                    "eventRevenues": {
                      "eventRevenueInformation": [
                        {
                          "revenueType": {
                            "code": "string",
                            "translatableDescription": {
                              "defaultText": "string",
                              "translations": {
                                "text": [
                                  {
                                    "value": "string",
                                    "language": "string"
                                  }
                                ]
                              }
                            },
                            "displaySequence": 0,
                            "revenueGroup": "string",
                            "foodAndBeverage": true,
                            "inactive": true,
                            "revenueDetails": [
                              {
                                "hotelId": "string",
                                "revenueMinimum": true,
                                "tax": 0
                              }
                            ]
                          },
                          "forecastRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "expectedRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "guaranteedRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "onTheBooksRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "billedRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "actualRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "totalCost": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "flatForecastRevenue": true,
                          "custom": true,
                          "ignoreForecast": true,
                          "packaged": true,
                          "orderBy": 0
                        }
                      ],
                      "currencyCode": "string",
                      "excludeFromForecast": true,
                      "useForecastRevenue": true,
                      "eventLevelRevenueActualization": true
                    }
                  },
                  "menu": {
                    "eventMenuId": {
                      "id": "string",
                      "type": "string"
                    },
                    "eventMenu": {
                      "basicInfo": {
                        "className": "string",
                        "name": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "value": "string",
                                "language": "string"
                              }
                            ]
                          }
                        },
                        "restriction": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "value": "string",
                                "language": "string"
                              }
                            ]
                          }
                        },
                        "description": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "value": "string",
                                "language": "string"
                              }
                            ]
                          }
                        },
                        "dietaryList": [
                          "string"
                        ],
                        "eventTypes": [
                          "string"
                        ],
                        "type": "Food",
                        "quickInsertCode": "string",
                        "servingType": "Pp",
                        "servingSize": "string",
                        "includedInMenu": true,
                        "consumptionBased": true,
                        "sellDateRange": {
                          "eventStartDate": "2020-07-13",
                          "eventEndDate": "2020-07-13"
                        },
                        "eventDateRange": {
                          "eventStartDate": "2020-07-13",
                          "eventEndDate": "2020-07-13"
                        },
                        "menusSold": 0,
                        "webBookable": true,
                        "inactive": true,
                        "salesPrice": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "includedInPrice": true,
                        "multiChoice": true,
                        "courseCount": 0,
                        "menuId": {
                          "id": "string",
                          "type": "string"
                        },
                        "serveStartEndTime": {
                          "eventStartDate": "2020-07-13T15:33:16.512Z",
                          "eventEndDate": "2020-07-13T15:33:16.512Z"
                        },
                        "attendees": {
                          "expected": 0,
                          "guaranteed": 0,
                          "actual": 0,
                          "set": 0,
                          "billed": 0,
                          "packageExpected": 0,
                          "packageGuaranteed": 0,
                          "packageActual": 0,
                          "packageBilled": 0
                        },
                        "discountPercentage": 0,
                        "order": 0,
                        "hotelId": "string"
                      },
                      "revenues": [
                        {
                          "revenueType": "string",
                          "type": "Food",
                          "cost": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "internalQuote": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "costMargin": 0,
                          "price": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "priceMargin": 0,
                          "resourceId": {
                            "id": "string",
                            "type": "string"
                          },
                          "custom": true
                        }
                      ],
                      "menuItems": [
                        {
                          "id": {
                            "id": "string",
                            "type": "string"
                          },
                          "hotelId": "string",
                          "classInfo": {
                            "code": "string",
                            "description": "string"
                          },
                          "name1": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "name2": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "name3": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "origin1": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "origin2": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "menuType": "Food",
                          "custom": true,
                          "year": 0,
                          "restriction": "string",
                          "description": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "eventTypes": [
                            "string"
                          ],
                          "responsibleDepartments": [
                            "string"
                          ],
                          "quickInsertCode": "string",
                          "revenueType": "string",
                          "salesPrice": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "cost": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "itemConsumption": true,
                          "container": {
                            "code": "string",
                            "description": "string"
                          },
                          "portion": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "servings": 0,
                          "webBookable": true,
                          "print": true,
                          "inactive": true,
                          "includedYN": true,
                          "eventMenuDetailID": {
                            "id": "string",
                            "type": "string"
                          },
                          "course": 0,
                          "courseOrder": 0,
                          "attendees": {
                            "expected": 0,
                            "guaranteed": 0,
                            "actual": 0,
                            "set": 0,
                            "billed": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0
                          },
                          "discountPercentage": 0,
                          "demandFactor": 0,
                          "mandatoryYN": true
                        }
                      ],
                      "hotelId": "string"
                    }
                  },
                  "item": {
                    "eventItemId": {
                      "id": "string",
                      "type": "string"
                    },
                    "eventItem": {
                      "hotelId": "string",
                      "itemId": {
                        "id": "string",
                        "type": "string"
                      },
                      "itemClassId": {
                        "id": "string",
                        "type": "string"
                      },
                      "itemClassCode": "string",
                      "itemClassDescription": "string",
                      "itemName": {
                        "defaultText": "string",
                        "translations": {
                          "text": [
                            {
                              "value": "string",
                              "language": "string"
                            }
                          ]
                        }
                      },
                      "itemDescription": "string",
                      "itemCode": "string",
                      "revenueType": "string",
                      "revenueTypeEditable": true,
                      "externalOrder": true,
                      "print": true,
                      "sellInfo": {
                        "available": {
                          "startDateTime": "2020-07-13T15:33:16.512Z",
                          "endDateTime": "2020-07-13T15:33:16.512Z"
                        },
                        "availableQty": 0,
                        "qtyInStock": 0,
                        "defaultQty": 0,
                        "sellSeparate": true,
                        "sellControl": true,
                        "welcomeOffer": true,
                        "webBookable": true,
                        "itemClassWebBookable": true,
                        "outsideStay": true,
                        "fixedCharge": true,
                        "discountable": true,
                        "itemClassDiscountable": true,
                        "criticalInventory": true,
                        "price": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "defaultDuration": 0
                      },
                      "setupTime": 0,
                      "setdownTime": 0,
                      "traceText": "string",
                      "itemPool": "string",
                      "displaySequence": 0,
                      "eventTypes": [
                        "string"
                      ],
                      "departments": [
                        "string"
                      ],
                      "attributes": [
                        {
                          "itemAttributeId": {
                            "id": "string",
                            "type": "string"
                          },
                          "translatableName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "setupTime": 0,
                          "setdownTime": 0,
                          "default": true
                        }
                      ],
                      "rates": [
                        {
                          "itemRateId": {
                            "id": "string",
                            "type": "string"
                          },
                          "itemRateCode": "string",
                          "name": "string",
                          "price": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "hourly": true,
                          "default": true
                        }
                      ],
                      "vendors": [
                        {
                          "profileId": {
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0
                          },
                          "name": "string",
                          "leadTime": "string",
                          "price": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "priority": 0,
                          "phone": "string",
                          "fax": "string",
                          "email": "string"
                        }
                      ],
                      "resourceNotes": [
                        {
                          "noteId": {
                            "id": "string",
                            "type": "string"
                          },
                          "noteCode": "string",
                          "internal": true,
                          "noteTitle": "string",
                          "comment": "string",
                          "sequence": 0,
                          "createDateTime": "2020-07-13T15:33:16.512Z",
                          "creatorId": "string",
                          "lastModifyDateTime": "2020-07-13T15:33:16.512Z",
                          "lastModifierId": "string",
                          "purgeDate": "2020-07-13"
                        }
                      ],
                      "usedForEvents": true,
                      "usedForReservation": true,
                      "quantity": 0,
                      "attributeId": {
                        "id": "string",
                        "type": "string"
                      },
                      "itemRateId": {
                        "id": "string",
                        "type": "string"
                      },
                      "price": 0,
                      "discount": 0,
                      "priceCode": "string",
                      "internalQuantity": 0,
                      "externalQuantity": 0,
                      "actualInternalQuantity": 0,
                      "actualExternalQuantity": 0,
                      "internalCostPerUnit": 0,
                      "externalCostPerUnit": 0,
                      "actualInternalCostPerUnit": 0,
                      "actualExternalCostPerUnit": 0,
                      "order": 0,
                      "actualQuantity": 0,
                      "packageId": {
                        "id": "string",
                        "type": "string"
                      },
                      "isNameCustom": true,
                      "isExcludeNonDeduct": true,
                      "vendorPrice": 0,
                      "eventStartDate": "2020-07-13T15:33:16.512Z",
                      "eventEndDate": "2020-07-13T15:33:16.512Z"
                    }
                  }
                },
                "links": [
                  {
                    "href": "string",
                    "rel": "string",
                    "templated": false,
                    "method": "GET",
                    "targetSchema": "string",
                    "operationId": "string",
                    "title": "string"
                  }
                ]
              }
            }
          },
          "204": {
            "description": "EventResourceByMenu not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      }
    },
    "/cateringEvents": {
      "put": {
        "summary": "Update multiple catering events",
        "description": "You can use this API to update one/more catering events for the same block <p><strong>OperationId:</strong>cateringEventsBulkUpdate</p>",
        "operationId": "cateringEventsBulkUpdate",
        "parameters": [
          {
            "name": "cateringEventsBulkUpdate",
            "in": "body",
            "required": true,
            "description": "Request object that will Change a list of events.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/cateringEventsBulkUpdate"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Status/Info of the processed event(s).",
            "schema": {
              "$ref": "#/definitions/cateringEventsBulkUpdateStatus"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      }
    },
    "/cateringPackagesRevenue": {
      "put": {
        "summary": "Update Catering package revenue",
        "description": "Update the catering package revenue on a block. <p><strong>OperationId:</strong>changeCateringPackageRevenue</p>",
        "operationId": "changeCateringPackageRevenue",
        "parameters": [
          {
            "name": "cateringPackageRevenue",
            "in": "body",
            "required": true,
            "description": "Request object for changing revenue details of the associated catering package.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/cateringPackageRevenue"
                },
                {
                  "example": {
                    "cateringPackageRevenueDetails": {
                      "blockInfo": {
                        "blockIdList": [
                          {
                            "id": "string",
                            "type": "string"
                          }
                        ]
                      },
                      "packageId": {
                        "id": "string",
                        "type": "string"
                      },
                      "packageDetail": {
                        "pkgCode": "string",
                        "description": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "value": "string",
                                "language": "string"
                              }
                            ]
                          }
                        },
                        "duration": 0,
                        "webBookable": true,
                        "isTemplate": true
                      },
                      "priceCode": "string",
                      "priceDescription": "string",
                      "flatPrice": true,
                      "revenues": [
                        {
                          "packageEventId": {
                            "id": "string",
                            "type": "string"
                          },
                          "revType": "string",
                          "orderBy": 0,
                          "revForecast": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "revExpected": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "costExpected": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "eventName": "string",
                          "eventType": "string",
                          "eventTimeSpan": {
                            "startDateTime": "2020-07-17T09:13:02.425Z",
                            "endDateTime": "2020-07-17T09:13:02.425Z"
                          }
                        }
                      ]
                    },
                    "links": [
                      {
                        "href": "string",
                        "rel": "string",
                        "templated": false,
                        "method": "GET",
                        "targetSchema": "string",
                        "operationId": "string",
                        "title": "string"
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/cateringPackageRevenue"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      },
      "delete": {
        "summary": "Delete Catering package revenue",
        "description": "Delete the catering package revenue on a block. <p><strong>OperationId:</strong>deleteCateringPackageRevenue</p>",
        "operationId": "deleteCateringPackageRevenue",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "cateringPackageEventId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "cateringPackageRevenueType",
            "in": "query",
            "required": false,
            "description": "Revenue Type associated with the Catering Package Price Code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      }
    },
    "/eventResource": {
      "put": {
        "summary": "Update Event Resource ",
        "description": "Use this API to update the Event Resources by specifying the block ID, and event ID in the request. <p><strong>OperationId:</strong>changeEventResourceByMenu</p>",
        "operationId": "changeEventResourceByMenu",
        "parameters": [
          {
            "name": "eventResource",
            "in": "body",
            "required": true,
            "description": "Request object for modifying event resource details.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/eventResource"
                },
                {
                  "example": {
                    "eventResourceDetails": {
                      "eventDetailInfo": {
                        "eventPrimaryInfo": {
                          "eventId": {
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0
                          },
                          "hotelId": "string",
                          "includeSubEvents": true
                        },
                        "eventDetail": {
                          "eventName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "eventType": "string",
                          "eventTimeSpan": {
                            "startDateTime": "2020-07-13T15:33:16.494Z",
                            "endDateTime": "2020-07-13T15:33:16.494Z"
                          },
                          "eventStatus": {
                            "status": {
                              "code": "string",
                              "description": "string"
                            },
                            "color": "White"
                          },
                          "waitlistReturnStatus": {
                            "status": {
                              "code": "string",
                              "description": "string"
                            },
                            "color": "White"
                          },
                          "cateringStatusType": "Waitlist",
                          "attendees": {
                            "expected": 0,
                            "guaranteed": 0,
                            "actual": 0,
                            "set": 0,
                            "billed": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0
                          },
                          "masterEventId": {
                            "id": "string",
                            "type": "string"
                          },
                          "doorcard": "string",
                          "eventLink": {
                            "id": {
                              "id": "string",
                              "type": "string"
                            },
                            "type": "SubEvent",
                            "masterEventDates": {
                              "startDateTime": "2020-07-13T15:33:16.494Z",
                              "endDateTime": "2020-07-13T15:33:16.494Z"
                            }
                          },
                          "inactiveDate": "2020-07-13",
                          "packageId": 0,
                          "packageName": "string",
                          "masterEvent": true,
                          "subEvent": true,
                          "packageEvent": true,
                          "alternateEvent": true,
                          "waitlisted": true,
                          "notMoveable": true,
                          "loudEvent": true,
                          "hasPostings": true,
                          "displayDoorcard": true,
                          "cateringDeductInventory": true,
                          "eventShared": true,
                          "createDateTime": "2020-07-13T15:33:16.494Z",
                          "creatorId": "string",
                          "lastModifyDateTime": "2020-07-13T15:33:16.494Z",
                          "lastModifierId": "string",
                          "purgeDate": "2020-07-13",
                          "includeSpaceInPackage": true,
                          "eventLevelRevenueActualization": true
                        },
                        "eventResources": [
                          {
                            "resourceId": {
                              "url": "string",
                              "type": "string",
                              "instance": "string",
                              "idContext": "string",
                              "id": "string",
                              "idExtension": 0
                            },
                            "resourceType": "FunctionSpace",
                            "resourceName": "string",
                            "setupCode": "string",
                            "itemAttribute": "string",
                            "quantity": 0,
                            "hours": 0,
                            "persons": 0,
                            "quantityIncluded": 0,
                            "quantityExcluded": 0,
                            "unitPrice": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "revenue": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "rentalCode": "string",
                            "discount": 0,
                            "eventResourceNotes": [
                              {
                                "noteId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "noteCode": "string",
                                "internal": true,
                                "noteTitle": "string",
                                "comment": "string",
                                "sequence": 0,
                                "createDateTime": "2020-07-13T15:33:16.494Z",
                                "creatorId": "string",
                                "lastModifyDateTime": "2020-07-13T15:33:16.494Z",
                                "lastModifierId": "string",
                                "purgeDate": "2020-07-13"
                              }
                            ],
                            "sellStartDate": "2020-07-13",
                            "sellEndDate": "2020-07-13",
                            "eventStartDate": "2020-07-13",
                            "eventEndDate": "2020-07-13",
                            "consumptionBased": true,
                            "multiChoice": true,
                            "hotelId": "string",
                            "order": "string",
                            "hasDiscountMenuItem": true,
                            "hasNotes": true,
                            "external": true,
                            "custom": true,
                            "packaged": true
                          }
                        ],
                        "processInstructions": {
                          "overrideCapacity": true,
                          "overbook": true,
                          "shareable": true,
                          "overrideMaxgroups": true,
                          "waitList": true,
                          "warnFunctionSpace": true
                        },
                        "eventBlockInfo": {
                          "blockIdList": [
                            {
                              "id": "string",
                              "type": "string"
                            }
                          ]
                        },
                        "functionSpaceInformation": {
                          "functionSpaceCode": "string",
                          "functionSpaceDescription": "string",
                          "setupCode": "string",
                          "setupDescription": "string",
                          "setupTime": 0,
                          "setdownTime": 0,
                          "rentalCode": "string",
                          "rateDesc": "string",
                          "rentalAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "discountPercentage": 0,
                          "minimumOccupancy": 0,
                          "maximumOccupancy": 0,
                          "shareable": true,
                          "comboSpace": true,
                          "elementSpace": true
                        },
                        "eventNotes": [
                          {
                            "noteId": {
                              "id": "string",
                              "type": "string"
                            },
                            "noteCode": "string",
                            "internal": true,
                            "noteTitle": "string",
                            "comment": "string",
                            "sequence": 0,
                            "createDateTime": "2020-07-13T15:33:16.511Z",
                            "creatorId": "string",
                            "lastModifyDateTime": "2020-07-13T15:33:16.511Z",
                            "lastModifierId": "string",
                            "purgeDate": "2020-07-13"
                          }
                        ],
                        "eventIndicators": [
                          {
                            "indicatorName": "string",
                            "count": 0
                          }
                        ],
                        "onTheBooksRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "subEventsDetail": [
                          {
                            "eventPrimaryInfo": {
                              "eventId": {
                                "url": "string",
                                "type": "string",
                                "instance": "string",
                                "idContext": "string",
                                "id": "string",
                                "idExtension": 0
                              },
                              "hotelId": "string",
                              "includeSubEvents": true
                            },
                            "eventDetail": {
                              "eventName": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "value": "string",
                                      "language": "string"
                                    }
                                  ]
                                }
                              },
                              "eventType": "string",
                              "eventTimeSpan": {
                                "startDateTime": "2020-07-13T15:33:16.512Z",
                                "endDateTime": "2020-07-13T15:33:16.512Z"
                              },
                              "eventStatus": {
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "color": "White"
                              },
                              "waitlistReturnStatus": {
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "color": "White"
                              },
                              "cateringStatusType": "Waitlist",
                              "attendees": {
                                "expected": 0,
                                "guaranteed": 0,
                                "actual": 0,
                                "set": 0,
                                "billed": 0,
                                "packageExpected": 0,
                                "packageGuaranteed": 0,
                                "packageActual": 0,
                                "packageBilled": 0
                              },
                              "masterEventId": {
                                "id": "string",
                                "type": "string"
                              },
                              "doorcard": "string",
                              "eventLink": {
                                "id": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "type": "SubEvent",
                                "masterEventDates": {
                                  "startDateTime": "2020-07-13T15:33:16.512Z",
                                  "endDateTime": "2020-07-13T15:33:16.512Z"
                                }
                              },
                              "inactiveDate": "2020-07-13",
                              "packageId": 0,
                              "packageName": "string",
                              "masterEvent": true,
                              "subEvent": true,
                              "packageEvent": true,
                              "alternateEvent": true,
                              "waitlisted": true,
                              "notMoveable": true,
                              "loudEvent": true,
                              "hasPostings": true,
                              "displayDoorcard": true,
                              "cateringDeductInventory": true,
                              "eventShared": true,
                              "createDateTime": "2020-07-13T15:33:16.512Z",
                              "creatorId": "string",
                              "lastModifyDateTime": "2020-07-13T15:33:16.512Z",
                              "lastModifierId": "string",
                              "purgeDate": "2020-07-13",
                              "includeSpaceInPackage": true,
                              "eventLevelRevenueActualization": true
                            },
                            "functionSpaceInformation": {
                              "functionSpaceCode": "string",
                              "functionSpaceDescription": "string",
                              "setupCode": "string",
                              "setupDescription": "string",
                              "setupTime": 0,
                              "setdownTime": 0,
                              "rentalCode": "string",
                              "rateDesc": "string",
                              "rentalAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "discountPercentage": 0,
                              "minimumOccupancy": 0,
                              "maximumOccupancy": 0,
                              "shareable": true,
                              "comboSpace": true,
                              "elementSpace": true
                            }
                          }
                        ],
                        "altEventsDetail": [
                          {
                            "eventPrimaryInfo": {
                              "eventId": {
                                "url": "string",
                                "type": "string",
                                "instance": "string",
                                "idContext": "string",
                                "id": "string",
                                "idExtension": 0
                              },
                              "hotelId": "string",
                              "includeSubEvents": true
                            },
                            "eventDetail": {
                              "eventName": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "value": "string",
                                      "language": "string"
                                    }
                                  ]
                                }
                              },
                              "eventType": "string",
                              "eventTimeSpan": {
                                "startDateTime": "2020-07-13T15:33:16.512Z",
                                "endDateTime": "2020-07-13T15:33:16.512Z"
                              },
                              "eventStatus": {
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "color": "White"
                              },
                              "waitlistReturnStatus": {
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "color": "White"
                              },
                              "cateringStatusType": "Waitlist",
                              "attendees": {
                                "expected": 0,
                                "guaranteed": 0,
                                "actual": 0,
                                "set": 0,
                                "billed": 0,
                                "packageExpected": 0,
                                "packageGuaranteed": 0,
                                "packageActual": 0,
                                "packageBilled": 0
                              },
                              "masterEventId": {
                                "id": "string",
                                "type": "string"
                              },
                              "doorcard": "string",
                              "eventLink": {
                                "id": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "type": "SubEvent",
                                "masterEventDates": {
                                  "startDateTime": "2020-07-13T15:33:16.512Z",
                                  "endDateTime": "2020-07-13T15:33:16.512Z"
                                }
                              },
                              "inactiveDate": "2020-07-13",
                              "packageId": 0,
                              "packageName": "string",
                              "masterEvent": true,
                              "subEvent": true,
                              "packageEvent": true,
                              "alternateEvent": true,
                              "waitlisted": true,
                              "notMoveable": true,
                              "loudEvent": true,
                              "hasPostings": true,
                              "displayDoorcard": true,
                              "cateringDeductInventory": true,
                              "eventShared": true,
                              "createDateTime": "2020-07-13T15:33:16.512Z",
                              "creatorId": "string",
                              "lastModifyDateTime": "2020-07-13T15:33:16.512Z",
                              "lastModifierId": "string",
                              "purgeDate": "2020-07-13",
                              "includeSpaceInPackage": true,
                              "eventLevelRevenueActualization": true
                            },
                            "functionSpaceInformation": {
                              "functionSpaceCode": "string",
                              "functionSpaceDescription": "string",
                              "setupCode": "string",
                              "setupDescription": "string",
                              "setupTime": 0,
                              "setdownTime": 0,
                              "rentalCode": "string",
                              "rateDesc": "string",
                              "rentalAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "discountPercentage": 0,
                              "minimumOccupancy": 0,
                              "maximumOccupancy": 0,
                              "shareable": true,
                              "comboSpace": true,
                              "elementSpace": true
                            }
                          }
                        ],
                        "masterEventDetail": {
                          "eventPrimaryInfo": {
                            "eventId": {
                              "url": "string",
                              "type": "string",
                              "instance": "string",
                              "idContext": "string",
                              "id": "string",
                              "idExtension": 0
                            },
                            "hotelId": "string",
                            "includeSubEvents": true
                          },
                          "eventDetail": {
                            "eventName": {
                              "defaultText": "string",
                              "translations": {
                                "text": [
                                  {
                                    "value": "string",
                                    "language": "string"
                                  }
                                ]
                              }
                            },
                            "eventType": "string",
                            "eventTimeSpan": {
                              "startDateTime": "2020-07-13T15:33:16.512Z",
                              "endDateTime": "2020-07-13T15:33:16.512Z"
                            },
                            "eventStatus": {
                              "status": {
                                "code": "string",
                                "description": "string"
                              },
                              "color": "White"
                            },
                            "waitlistReturnStatus": {
                              "status": {
                                "code": "string",
                                "description": "string"
                              },
                              "color": "White"
                            },
                            "cateringStatusType": "Waitlist",
                            "attendees": {
                              "expected": 0,
                              "guaranteed": 0,
                              "actual": 0,
                              "set": 0,
                              "billed": 0,
                              "packageExpected": 0,
                              "packageGuaranteed": 0,
                              "packageActual": 0,
                              "packageBilled": 0
                            },
                            "masterEventId": {
                              "id": "string",
                              "type": "string"
                            },
                            "doorcard": "string",
                            "eventLink": {
                              "id": {
                                "id": "string",
                                "type": "string"
                              },
                              "type": "SubEvent",
                              "masterEventDates": {
                                "startDateTime": "2020-07-13T15:33:16.512Z",
                                "endDateTime": "2020-07-13T15:33:16.512Z"
                              }
                            },
                            "inactiveDate": "2020-07-13",
                            "packageId": 0,
                            "packageName": "string",
                            "masterEvent": true,
                            "subEvent": true,
                            "packageEvent": true,
                            "alternateEvent": true,
                            "waitlisted": true,
                            "notMoveable": true,
                            "loudEvent": true,
                            "hasPostings": true,
                            "displayDoorcard": true,
                            "cateringDeductInventory": true,
                            "eventShared": true,
                            "createDateTime": "2020-07-13T15:33:16.512Z",
                            "creatorId": "string",
                            "lastModifyDateTime": "2020-07-13T15:33:16.512Z",
                            "lastModifierId": "string",
                            "purgeDate": "2020-07-13",
                            "includeSpaceInPackage": true,
                            "eventLevelRevenueActualization": true
                          },
                          "functionSpaceInformation": {
                            "functionSpaceCode": "string",
                            "functionSpaceDescription": "string",
                            "setupCode": "string",
                            "setupDescription": "string",
                            "setupTime": 0,
                            "setdownTime": 0,
                            "rentalCode": "string",
                            "rateDesc": "string",
                            "rentalAmount": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "discountPercentage": 0,
                            "minimumOccupancy": 0,
                            "maximumOccupancy": 0,
                            "shareable": true,
                            "comboSpace": true,
                            "elementSpace": true
                          }
                        },
                        "eventRevenues": {
                          "eventRevenueInformation": [
                            {
                              "revenueType": {
                                "code": "string",
                                "translatableDescription": {
                                  "defaultText": "string",
                                  "translations": {
                                    "text": [
                                      {
                                        "value": "string",
                                        "language": "string"
                                      }
                                    ]
                                  }
                                },
                                "displaySequence": 0,
                                "revenueGroup": "string",
                                "foodAndBeverage": true,
                                "inactive": true,
                                "revenueDetails": [
                                  {
                                    "hotelId": "string",
                                    "revenueMinimum": true,
                                    "tax": 0
                                  }
                                ]
                              },
                              "forecastRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "expectedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "guaranteedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "onTheBooksRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "billedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "actualRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "totalCost": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "flatForecastRevenue": true,
                              "custom": true,
                              "ignoreForecast": true,
                              "packaged": true,
                              "orderBy": 0
                            }
                          ],
                          "currencyCode": "string",
                          "excludeFromForecast": true,
                          "useForecastRevenue": true,
                          "eventLevelRevenueActualization": true
                        }
                      },
                      "menu": {
                        "eventMenuId": {
                          "id": "string",
                          "type": "string"
                        },
                        "eventMenu": {
                          "basicInfo": {
                            "className": "string",
                            "name": {
                              "defaultText": "string",
                              "translations": {
                                "text": [
                                  {
                                    "value": "string",
                                    "language": "string"
                                  }
                                ]
                              }
                            },
                            "restriction": {
                              "defaultText": "string",
                              "translations": {
                                "text": [
                                  {
                                    "value": "string",
                                    "language": "string"
                                  }
                                ]
                              }
                            },
                            "description": {
                              "defaultText": "string",
                              "translations": {
                                "text": [
                                  {
                                    "value": "string",
                                    "language": "string"
                                  }
                                ]
                              }
                            },
                            "dietaryList": [
                              "string"
                            ],
                            "eventTypes": [
                              "string"
                            ],
                            "type": "Food",
                            "quickInsertCode": "string",
                            "servingType": "Pp",
                            "servingSize": "string",
                            "includedInMenu": true,
                            "consumptionBased": true,
                            "sellDateRange": {
                              "eventStartDate": "2020-07-13",
                              "eventEndDate": "2020-07-13"
                            },
                            "eventDateRange": {
                              "eventStartDate": "2020-07-13",
                              "eventEndDate": "2020-07-13"
                            },
                            "menusSold": 0,
                            "webBookable": true,
                            "inactive": true,
                            "salesPrice": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "includedInPrice": true,
                            "multiChoice": true,
                            "courseCount": 0,
                            "menuId": {
                              "id": "string",
                              "type": "string"
                            },
                            "serveStartEndTime": {
                              "eventStartDate": "2020-07-13T15:33:16.512Z",
                              "eventEndDate": "2020-07-13T15:33:16.512Z"
                            },
                            "attendees": {
                              "expected": 0,
                              "guaranteed": 0,
                              "actual": 0,
                              "set": 0,
                              "billed": 0,
                              "packageExpected": 0,
                              "packageGuaranteed": 0,
                              "packageActual": 0,
                              "packageBilled": 0
                            },
                            "discountPercentage": 0,
                            "order": 0,
                            "hotelId": "string"
                          },
                          "revenues": [
                            {
                              "revenueType": "string",
                              "type": "Food",
                              "cost": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "internalQuote": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "costMargin": 0,
                              "price": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "priceMargin": 0,
                              "resourceId": {
                                "id": "string",
                                "type": "string"
                              },
                              "custom": true
                            }
                          ],
                          "menuItems": [
                            {
                              "id": {
                                "id": "string",
                                "type": "string"
                              },
                              "hotelId": "string",
                              "classInfo": {
                                "code": "string",
                                "description": "string"
                              },
                              "name1": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "value": "string",
                                      "language": "string"
                                    }
                                  ]
                                }
                              },
                              "name2": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "value": "string",
                                      "language": "string"
                                    }
                                  ]
                                }
                              },
                              "name3": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "value": "string",
                                      "language": "string"
                                    }
                                  ]
                                }
                              },
                              "origin1": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "value": "string",
                                      "language": "string"
                                    }
                                  ]
                                }
                              },
                              "origin2": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "value": "string",
                                      "language": "string"
                                    }
                                  ]
                                }
                              },
                              "menuType": "Food",
                              "custom": true,
                              "year": 0,
                              "restriction": "string",
                              "description": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "value": "string",
                                      "language": "string"
                                    }
                                  ]
                                }
                              },
                              "eventTypes": [
                                "string"
                              ],
                              "responsibleDepartments": [
                                "string"
                              ],
                              "quickInsertCode": "string",
                              "revenueType": "string",
                              "salesPrice": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "cost": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "itemConsumption": true,
                              "container": {
                                "code": "string",
                                "description": "string"
                              },
                              "portion": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "value": "string",
                                      "language": "string"
                                    }
                                  ]
                                }
                              },
                              "servings": 0,
                              "webBookable": true,
                              "print": true,
                              "inactive": true,
                              "includedYN": true,
                              "eventMenuDetailID": {
                                "id": "string",
                                "type": "string"
                              },
                              "course": 0,
                              "courseOrder": 0,
                              "attendees": {
                                "expected": 0,
                                "guaranteed": 0,
                                "actual": 0,
                                "set": 0,
                                "billed": 0,
                                "packageExpected": 0,
                                "packageGuaranteed": 0,
                                "packageActual": 0,
                                "packageBilled": 0
                              },
                              "discountPercentage": 0,
                              "demandFactor": 0,
                              "mandatoryYN": true
                            }
                          ],
                          "hotelId": "string"
                        }
                      },
                      "item": {
                        "eventItemId": {
                          "id": "string",
                          "type": "string"
                        },
                        "eventItem": {
                          "hotelId": "string",
                          "itemId": {
                            "id": "string",
                            "type": "string"
                          },
                          "itemClassId": {
                            "id": "string",
                            "type": "string"
                          },
                          "itemClassCode": "string",
                          "itemClassDescription": "string",
                          "itemName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "itemDescription": "string",
                          "itemCode": "string",
                          "revenueType": "string",
                          "revenueTypeEditable": true,
                          "externalOrder": true,
                          "print": true,
                          "sellInfo": {
                            "available": {
                              "startDateTime": "2020-07-13T15:33:16.512Z",
                              "endDateTime": "2020-07-13T15:33:16.512Z"
                            },
                            "availableQty": 0,
                            "qtyInStock": 0,
                            "defaultQty": 0,
                            "sellSeparate": true,
                            "sellControl": true,
                            "welcomeOffer": true,
                            "webBookable": true,
                            "itemClassWebBookable": true,
                            "outsideStay": true,
                            "fixedCharge": true,
                            "discountable": true,
                            "itemClassDiscountable": true,
                            "criticalInventory": true,
                            "price": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "defaultDuration": 0
                          },
                          "setupTime": 0,
                          "setdownTime": 0,
                          "traceText": "string",
                          "itemPool": "string",
                          "displaySequence": 0,
                          "eventTypes": [
                            "string"
                          ],
                          "departments": [
                            "string"
                          ],
                          "attributes": [
                            {
                              "itemAttributeId": {
                                "id": "string",
                                "type": "string"
                              },
                              "translatableName": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "value": "string",
                                      "language": "string"
                                    }
                                  ]
                                }
                              },
                              "setupTime": 0,
                              "setdownTime": 0,
                              "default": true
                            }
                          ],
                          "rates": [
                            {
                              "itemRateId": {
                                "id": "string",
                                "type": "string"
                              },
                              "itemRateCode": "string",
                              "name": "string",
                              "price": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "hourly": true,
                              "default": true
                            }
                          ],
                          "vendors": [
                            {
                              "profileId": {
                                "url": "string",
                                "type": "string",
                                "instance": "string",
                                "idContext": "string",
                                "id": "string",
                                "idExtension": 0
                              },
                              "name": "string",
                              "leadTime": "string",
                              "price": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "priority": 0,
                              "phone": "string",
                              "fax": "string",
                              "email": "string"
                            }
                          ],
                          "resourceNotes": [
                            {
                              "noteId": {
                                "id": "string",
                                "type": "string"
                              },
                              "noteCode": "string",
                              "internal": true,
                              "noteTitle": "string",
                              "comment": "string",
                              "sequence": 0,
                              "createDateTime": "2020-07-13T15:33:16.512Z",
                              "creatorId": "string",
                              "lastModifyDateTime": "2020-07-13T15:33:16.512Z",
                              "lastModifierId": "string",
                              "purgeDate": "2020-07-13"
                            }
                          ],
                          "usedForEvents": true,
                          "usedForReservation": true,
                          "quantity": 0,
                          "attributeId": {
                            "id": "string",
                            "type": "string"
                          },
                          "itemRateId": {
                            "id": "string",
                            "type": "string"
                          },
                          "price": 0,
                          "discount": 0,
                          "priceCode": "string",
                          "internalQuantity": 0,
                          "externalQuantity": 0,
                          "actualInternalQuantity": 0,
                          "actualExternalQuantity": 0,
                          "internalCostPerUnit": 0,
                          "externalCostPerUnit": 0,
                          "actualInternalCostPerUnit": 0,
                          "actualExternalCostPerUnit": 0,
                          "order": 0,
                          "actualQuantity": 0,
                          "packageId": {
                            "id": "string",
                            "type": "string"
                          },
                          "isNameCustom": true,
                          "isExcludeNonDeduct": true,
                          "vendorPrice": 0,
                          "eventStartDate": "2020-07-13T15:33:16.512Z",
                          "eventEndDate": "2020-07-13T15:33:16.512Z"
                        }
                      }
                    },
                    "links": [
                      {
                        "href": "string",
                        "rel": "string",
                        "templated": false,
                        "method": "GET",
                        "targetSchema": "string",
                        "operationId": "string",
                        "title": "string"
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/eventResource"
            },
            "examples": {
              "application/json": {
                "eventResourceDetails": {
                  "eventDetailInfo": {
                    "eventPrimaryInfo": {
                      "eventId": {
                        "url": "string",
                        "type": "string",
                        "instance": "string",
                        "idContext": "string",
                        "id": "string",
                        "idExtension": 0
                      },
                      "hotelId": "string",
                      "includeSubEvents": true
                    },
                    "eventDetail": {
                      "eventName": {
                        "defaultText": "string",
                        "translations": {
                          "text": [
                            {
                              "value": "string",
                              "language": "string"
                            }
                          ]
                        }
                      },
                      "eventType": "string",
                      "eventTimeSpan": {
                        "startDateTime": "2020-07-13T15:33:16.494Z",
                        "endDateTime": "2020-07-13T15:33:16.494Z"
                      },
                      "eventStatus": {
                        "status": {
                          "code": "string",
                          "description": "string"
                        },
                        "color": "White"
                      },
                      "waitlistReturnStatus": {
                        "status": {
                          "code": "string",
                          "description": "string"
                        },
                        "color": "White"
                      },
                      "cateringStatusType": "Waitlist",
                      "attendees": {
                        "expected": 0,
                        "guaranteed": 0,
                        "actual": 0,
                        "set": 0,
                        "billed": 0,
                        "packageExpected": 0,
                        "packageGuaranteed": 0,
                        "packageActual": 0,
                        "packageBilled": 0
                      },
                      "masterEventId": {
                        "id": "string",
                        "type": "string"
                      },
                      "doorcard": "string",
                      "eventLink": {
                        "id": {
                          "id": "string",
                          "type": "string"
                        },
                        "type": "SubEvent",
                        "masterEventDates": {
                          "startDateTime": "2020-07-13T15:33:16.494Z",
                          "endDateTime": "2020-07-13T15:33:16.494Z"
                        }
                      },
                      "inactiveDate": "2020-07-13",
                      "packageId": 0,
                      "packageName": "string",
                      "masterEvent": true,
                      "subEvent": true,
                      "packageEvent": true,
                      "alternateEvent": true,
                      "waitlisted": true,
                      "notMoveable": true,
                      "loudEvent": true,
                      "hasPostings": true,
                      "displayDoorcard": true,
                      "cateringDeductInventory": true,
                      "eventShared": true,
                      "createDateTime": "2020-07-13T15:33:16.494Z",
                      "creatorId": "string",
                      "lastModifyDateTime": "2020-07-13T15:33:16.494Z",
                      "lastModifierId": "string",
                      "purgeDate": "2020-07-13",
                      "includeSpaceInPackage": true,
                      "eventLevelRevenueActualization": true
                    },
                    "eventResources": [
                      {
                        "resourceId": {
                          "url": "string",
                          "type": "string",
                          "instance": "string",
                          "idContext": "string",
                          "id": "string",
                          "idExtension": 0
                        },
                        "resourceType": "FunctionSpace",
                        "resourceName": "string",
                        "setupCode": "string",
                        "itemAttribute": "string",
                        "quantity": 0,
                        "hours": 0,
                        "persons": 0,
                        "quantityIncluded": 0,
                        "quantityExcluded": 0,
                        "unitPrice": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "revenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "rentalCode": "string",
                        "discount": 0,
                        "eventResourceNotes": [
                          {
                            "noteId": {
                              "id": "string",
                              "type": "string"
                            },
                            "noteCode": "string",
                            "internal": true,
                            "noteTitle": "string",
                            "comment": "string",
                            "sequence": 0,
                            "createDateTime": "2020-07-13T15:33:16.494Z",
                            "creatorId": "string",
                            "lastModifyDateTime": "2020-07-13T15:33:16.494Z",
                            "lastModifierId": "string",
                            "purgeDate": "2020-07-13"
                          }
                        ],
                        "sellStartDate": "2020-07-13",
                        "sellEndDate": "2020-07-13",
                        "eventStartDate": "2020-07-13",
                        "eventEndDate": "2020-07-13",
                        "consumptionBased": true,
                        "multiChoice": true,
                        "hotelId": "string",
                        "order": "string",
                        "hasDiscountMenuItem": true,
                        "hasNotes": true,
                        "external": true,
                        "custom": true,
                        "packaged": true
                      }
                    ],
                    "processInstructions": {
                      "overrideCapacity": true,
                      "overbook": true,
                      "shareable": true,
                      "overrideMaxgroups": true,
                      "waitList": true,
                      "warnFunctionSpace": true
                    },
                    "eventBlockInfo": {
                      "blockIdList": [
                        {
                          "id": "string",
                          "type": "string"
                        }
                      ]
                    },
                    "functionSpaceInformation": {
                      "functionSpaceCode": "string",
                      "functionSpaceDescription": "string",
                      "setupCode": "string",
                      "setupDescription": "string",
                      "setupTime": 0,
                      "setdownTime": 0,
                      "rentalCode": "string",
                      "rateDesc": "string",
                      "rentalAmount": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "discountPercentage": 0,
                      "minimumOccupancy": 0,
                      "maximumOccupancy": 0,
                      "shareable": true,
                      "comboSpace": true,
                      "elementSpace": true
                    },
                    "eventNotes": [
                      {
                        "noteId": {
                          "id": "string",
                          "type": "string"
                        },
                        "noteCode": "string",
                        "internal": true,
                        "noteTitle": "string",
                        "comment": "string",
                        "sequence": 0,
                        "createDateTime": "2020-07-13T15:33:16.511Z",
                        "creatorId": "string",
                        "lastModifyDateTime": "2020-07-13T15:33:16.511Z",
                        "lastModifierId": "string",
                        "purgeDate": "2020-07-13"
                      }
                    ],
                    "eventIndicators": [
                      {
                        "indicatorName": "string",
                        "count": 0
                      }
                    ],
                    "onTheBooksRevenue": {
                      "amount": 0,
                      "currencyCode": "string"
                    },
                    "subEventsDetail": [
                      {
                        "eventPrimaryInfo": {
                          "eventId": {
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0
                          },
                          "hotelId": "string",
                          "includeSubEvents": true
                        },
                        "eventDetail": {
                          "eventName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "eventType": "string",
                          "eventTimeSpan": {
                            "startDateTime": "2020-07-13T15:33:16.512Z",
                            "endDateTime": "2020-07-13T15:33:16.512Z"
                          },
                          "eventStatus": {
                            "status": {
                              "code": "string",
                              "description": "string"
                            },
                            "color": "White"
                          },
                          "waitlistReturnStatus": {
                            "status": {
                              "code": "string",
                              "description": "string"
                            },
                            "color": "White"
                          },
                          "cateringStatusType": "Waitlist",
                          "attendees": {
                            "expected": 0,
                            "guaranteed": 0,
                            "actual": 0,
                            "set": 0,
                            "billed": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0
                          },
                          "masterEventId": {
                            "id": "string",
                            "type": "string"
                          },
                          "doorcard": "string",
                          "eventLink": {
                            "id": {
                              "id": "string",
                              "type": "string"
                            },
                            "type": "SubEvent",
                            "masterEventDates": {
                              "startDateTime": "2020-07-13T15:33:16.512Z",
                              "endDateTime": "2020-07-13T15:33:16.512Z"
                            }
                          },
                          "inactiveDate": "2020-07-13",
                          "packageId": 0,
                          "packageName": "string",
                          "masterEvent": true,
                          "subEvent": true,
                          "packageEvent": true,
                          "alternateEvent": true,
                          "waitlisted": true,
                          "notMoveable": true,
                          "loudEvent": true,
                          "hasPostings": true,
                          "displayDoorcard": true,
                          "cateringDeductInventory": true,
                          "eventShared": true,
                          "createDateTime": "2020-07-13T15:33:16.512Z",
                          "creatorId": "string",
                          "lastModifyDateTime": "2020-07-13T15:33:16.512Z",
                          "lastModifierId": "string",
                          "purgeDate": "2020-07-13",
                          "includeSpaceInPackage": true,
                          "eventLevelRevenueActualization": true
                        },
                        "functionSpaceInformation": {
                          "functionSpaceCode": "string",
                          "functionSpaceDescription": "string",
                          "setupCode": "string",
                          "setupDescription": "string",
                          "setupTime": 0,
                          "setdownTime": 0,
                          "rentalCode": "string",
                          "rateDesc": "string",
                          "rentalAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "discountPercentage": 0,
                          "minimumOccupancy": 0,
                          "maximumOccupancy": 0,
                          "shareable": true,
                          "comboSpace": true,
                          "elementSpace": true
                        }
                      }
                    ],
                    "altEventsDetail": [
                      {
                        "eventPrimaryInfo": {
                          "eventId": {
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0
                          },
                          "hotelId": "string",
                          "includeSubEvents": true
                        },
                        "eventDetail": {
                          "eventName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "eventType": "string",
                          "eventTimeSpan": {
                            "startDateTime": "2020-07-13T15:33:16.512Z",
                            "endDateTime": "2020-07-13T15:33:16.512Z"
                          },
                          "eventStatus": {
                            "status": {
                              "code": "string",
                              "description": "string"
                            },
                            "color": "White"
                          },
                          "waitlistReturnStatus": {
                            "status": {
                              "code": "string",
                              "description": "string"
                            },
                            "color": "White"
                          },
                          "cateringStatusType": "Waitlist",
                          "attendees": {
                            "expected": 0,
                            "guaranteed": 0,
                            "actual": 0,
                            "set": 0,
                            "billed": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0
                          },
                          "masterEventId": {
                            "id": "string",
                            "type": "string"
                          },
                          "doorcard": "string",
                          "eventLink": {
                            "id": {
                              "id": "string",
                              "type": "string"
                            },
                            "type": "SubEvent",
                            "masterEventDates": {
                              "startDateTime": "2020-07-13T15:33:16.512Z",
                              "endDateTime": "2020-07-13T15:33:16.512Z"
                            }
                          },
                          "inactiveDate": "2020-07-13",
                          "packageId": 0,
                          "packageName": "string",
                          "masterEvent": true,
                          "subEvent": true,
                          "packageEvent": true,
                          "alternateEvent": true,
                          "waitlisted": true,
                          "notMoveable": true,
                          "loudEvent": true,
                          "hasPostings": true,
                          "displayDoorcard": true,
                          "cateringDeductInventory": true,
                          "eventShared": true,
                          "createDateTime": "2020-07-13T15:33:16.512Z",
                          "creatorId": "string",
                          "lastModifyDateTime": "2020-07-13T15:33:16.512Z",
                          "lastModifierId": "string",
                          "purgeDate": "2020-07-13",
                          "includeSpaceInPackage": true,
                          "eventLevelRevenueActualization": true
                        },
                        "functionSpaceInformation": {
                          "functionSpaceCode": "string",
                          "functionSpaceDescription": "string",
                          "setupCode": "string",
                          "setupDescription": "string",
                          "setupTime": 0,
                          "setdownTime": 0,
                          "rentalCode": "string",
                          "rateDesc": "string",
                          "rentalAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "discountPercentage": 0,
                          "minimumOccupancy": 0,
                          "maximumOccupancy": 0,
                          "shareable": true,
                          "comboSpace": true,
                          "elementSpace": true
                        }
                      }
                    ],
                    "masterEventDetail": {
                      "eventPrimaryInfo": {
                        "eventId": {
                          "url": "string",
                          "type": "string",
                          "instance": "string",
                          "idContext": "string",
                          "id": "string",
                          "idExtension": 0
                        },
                        "hotelId": "string",
                        "includeSubEvents": true
                      },
                      "eventDetail": {
                        "eventName": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "value": "string",
                                "language": "string"
                              }
                            ]
                          }
                        },
                        "eventType": "string",
                        "eventTimeSpan": {
                          "startDateTime": "2020-07-13T15:33:16.512Z",
                          "endDateTime": "2020-07-13T15:33:16.512Z"
                        },
                        "eventStatus": {
                          "status": {
                            "code": "string",
                            "description": "string"
                          },
                          "color": "White"
                        },
                        "waitlistReturnStatus": {
                          "status": {
                            "code": "string",
                            "description": "string"
                          },
                          "color": "White"
                        },
                        "cateringStatusType": "Waitlist",
                        "attendees": {
                          "expected": 0,
                          "guaranteed": 0,
                          "actual": 0,
                          "set": 0,
                          "billed": 0,
                          "packageExpected": 0,
                          "packageGuaranteed": 0,
                          "packageActual": 0,
                          "packageBilled": 0
                        },
                        "masterEventId": {
                          "id": "string",
                          "type": "string"
                        },
                        "doorcard": "string",
                        "eventLink": {
                          "id": {
                            "id": "string",
                            "type": "string"
                          },
                          "type": "SubEvent",
                          "masterEventDates": {
                            "startDateTime": "2020-07-13T15:33:16.512Z",
                            "endDateTime": "2020-07-13T15:33:16.512Z"
                          }
                        },
                        "inactiveDate": "2020-07-13",
                        "packageId": 0,
                        "packageName": "string",
                        "masterEvent": true,
                        "subEvent": true,
                        "packageEvent": true,
                        "alternateEvent": true,
                        "waitlisted": true,
                        "notMoveable": true,
                        "loudEvent": true,
                        "hasPostings": true,
                        "displayDoorcard": true,
                        "cateringDeductInventory": true,
                        "eventShared": true,
                        "createDateTime": "2020-07-13T15:33:16.512Z",
                        "creatorId": "string",
                        "lastModifyDateTime": "2020-07-13T15:33:16.512Z",
                        "lastModifierId": "string",
                        "purgeDate": "2020-07-13",
                        "includeSpaceInPackage": true,
                        "eventLevelRevenueActualization": true
                      },
                      "functionSpaceInformation": {
                        "functionSpaceCode": "string",
                        "functionSpaceDescription": "string",
                        "setupCode": "string",
                        "setupDescription": "string",
                        "setupTime": 0,
                        "setdownTime": 0,
                        "rentalCode": "string",
                        "rateDesc": "string",
                        "rentalAmount": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "discountPercentage": 0,
                        "minimumOccupancy": 0,
                        "maximumOccupancy": 0,
                        "shareable": true,
                        "comboSpace": true,
                        "elementSpace": true
                      }
                    },
                    "eventRevenues": {
                      "eventRevenueInformation": [
                        {
                          "revenueType": {
                            "code": "string",
                            "translatableDescription": {
                              "defaultText": "string",
                              "translations": {
                                "text": [
                                  {
                                    "value": "string",
                                    "language": "string"
                                  }
                                ]
                              }
                            },
                            "displaySequence": 0,
                            "revenueGroup": "string",
                            "foodAndBeverage": true,
                            "inactive": true,
                            "revenueDetails": [
                              {
                                "hotelId": "string",
                                "revenueMinimum": true,
                                "tax": 0
                              }
                            ]
                          },
                          "forecastRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "expectedRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "guaranteedRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "onTheBooksRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "billedRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "actualRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "totalCost": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "flatForecastRevenue": true,
                          "custom": true,
                          "ignoreForecast": true,
                          "packaged": true,
                          "orderBy": 0
                        }
                      ],
                      "currencyCode": "string",
                      "excludeFromForecast": true,
                      "useForecastRevenue": true,
                      "eventLevelRevenueActualization": true
                    }
                  },
                  "menu": {
                    "eventMenuId": {
                      "id": "string",
                      "type": "string"
                    },
                    "eventMenu": {
                      "basicInfo": {
                        "className": "string",
                        "name": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "value": "string",
                                "language": "string"
                              }
                            ]
                          }
                        },
                        "restriction": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "value": "string",
                                "language": "string"
                              }
                            ]
                          }
                        },
                        "description": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "value": "string",
                                "language": "string"
                              }
                            ]
                          }
                        },
                        "dietaryList": [
                          "string"
                        ],
                        "eventTypes": [
                          "string"
                        ],
                        "type": "Food",
                        "quickInsertCode": "string",
                        "servingType": "Pp",
                        "servingSize": "string",
                        "includedInMenu": true,
                        "consumptionBased": true,
                        "sellDateRange": {
                          "eventStartDate": "2020-07-13",
                          "eventEndDate": "2020-07-13"
                        },
                        "eventDateRange": {
                          "eventStartDate": "2020-07-13",
                          "eventEndDate": "2020-07-13"
                        },
                        "menusSold": 0,
                        "webBookable": true,
                        "inactive": true,
                        "salesPrice": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "includedInPrice": true,
                        "multiChoice": true,
                        "courseCount": 0,
                        "menuId": {
                          "id": "string",
                          "type": "string"
                        },
                        "serveStartEndTime": {
                          "eventStartDate": "2020-07-13T15:33:16.512Z",
                          "eventEndDate": "2020-07-13T15:33:16.512Z"
                        },
                        "attendees": {
                          "expected": 0,
                          "guaranteed": 0,
                          "actual": 0,
                          "set": 0,
                          "billed": 0,
                          "packageExpected": 0,
                          "packageGuaranteed": 0,
                          "packageActual": 0,
                          "packageBilled": 0
                        },
                        "discountPercentage": 0,
                        "order": 0,
                        "hotelId": "string"
                      },
                      "revenues": [
                        {
                          "revenueType": "string",
                          "type": "Food",
                          "cost": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "internalQuote": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "costMargin": 0,
                          "price": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "priceMargin": 0,
                          "resourceId": {
                            "id": "string",
                            "type": "string"
                          },
                          "custom": true
                        }
                      ],
                      "menuItems": [
                        {
                          "id": {
                            "id": "string",
                            "type": "string"
                          },
                          "hotelId": "string",
                          "classInfo": {
                            "code": "string",
                            "description": "string"
                          },
                          "name1": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "name2": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "name3": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "origin1": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "origin2": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "menuType": "Food",
                          "custom": true,
                          "year": 0,
                          "restriction": "string",
                          "description": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "eventTypes": [
                            "string"
                          ],
                          "responsibleDepartments": [
                            "string"
                          ],
                          "quickInsertCode": "string",
                          "revenueType": "string",
                          "salesPrice": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "cost": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "itemConsumption": true,
                          "container": {
                            "code": "string",
                            "description": "string"
                          },
                          "portion": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "servings": 0,
                          "webBookable": true,
                          "print": true,
                          "inactive": true,
                          "includedYN": true,
                          "eventMenuDetailID": {
                            "id": "string",
                            "type": "string"
                          },
                          "course": 0,
                          "courseOrder": 0,
                          "attendees": {
                            "expected": 0,
                            "guaranteed": 0,
                            "actual": 0,
                            "set": 0,
                            "billed": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0
                          },
                          "discountPercentage": 0,
                          "demandFactor": 0,
                          "mandatoryYN": true
                        }
                      ],
                      "hotelId": "string"
                    }
                  },
                  "item": {
                    "eventItemId": {
                      "id": "string",
                      "type": "string"
                    },
                    "eventItem": {
                      "hotelId": "string",
                      "itemId": {
                        "id": "string",
                        "type": "string"
                      },
                      "itemClassId": {
                        "id": "string",
                        "type": "string"
                      },
                      "itemClassCode": "string",
                      "itemClassDescription": "string",
                      "itemName": {
                        "defaultText": "string",
                        "translations": {
                          "text": [
                            {
                              "value": "string",
                              "language": "string"
                            }
                          ]
                        }
                      },
                      "itemDescription": "string",
                      "itemCode": "string",
                      "revenueType": "string",
                      "revenueTypeEditable": true,
                      "externalOrder": true,
                      "print": true,
                      "sellInfo": {
                        "available": {
                          "startDateTime": "2020-07-13T15:33:16.512Z",
                          "endDateTime": "2020-07-13T15:33:16.512Z"
                        },
                        "availableQty": 0,
                        "qtyInStock": 0,
                        "defaultQty": 0,
                        "sellSeparate": true,
                        "sellControl": true,
                        "welcomeOffer": true,
                        "webBookable": true,
                        "itemClassWebBookable": true,
                        "outsideStay": true,
                        "fixedCharge": true,
                        "discountable": true,
                        "itemClassDiscountable": true,
                        "criticalInventory": true,
                        "price": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "defaultDuration": 0
                      },
                      "setupTime": 0,
                      "setdownTime": 0,
                      "traceText": "string",
                      "itemPool": "string",
                      "displaySequence": 0,
                      "eventTypes": [
                        "string"
                      ],
                      "departments": [
                        "string"
                      ],
                      "attributes": [
                        {
                          "itemAttributeId": {
                            "id": "string",
                            "type": "string"
                          },
                          "translatableName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "setupTime": 0,
                          "setdownTime": 0,
                          "default": true
                        }
                      ],
                      "rates": [
                        {
                          "itemRateId": {
                            "id": "string",
                            "type": "string"
                          },
                          "itemRateCode": "string",
                          "name": "string",
                          "price": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "hourly": true,
                          "default": true
                        }
                      ],
                      "vendors": [
                        {
                          "profileId": {
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0
                          },
                          "name": "string",
                          "leadTime": "string",
                          "price": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "priority": 0,
                          "phone": "string",
                          "fax": "string",
                          "email": "string"
                        }
                      ],
                      "resourceNotes": [
                        {
                          "noteId": {
                            "id": "string",
                            "type": "string"
                          },
                          "noteCode": "string",
                          "internal": true,
                          "noteTitle": "string",
                          "comment": "string",
                          "sequence": 0,
                          "createDateTime": "2020-07-13T15:33:16.512Z",
                          "creatorId": "string",
                          "lastModifyDateTime": "2020-07-13T15:33:16.512Z",
                          "lastModifierId": "string",
                          "purgeDate": "2020-07-13"
                        }
                      ],
                      "usedForEvents": true,
                      "usedForReservation": true,
                      "quantity": 0,
                      "attributeId": {
                        "id": "string",
                        "type": "string"
                      },
                      "itemRateId": {
                        "id": "string",
                        "type": "string"
                      },
                      "price": 0,
                      "discount": 0,
                      "priceCode": "string",
                      "internalQuantity": 0,
                      "externalQuantity": 0,
                      "actualInternalQuantity": 0,
                      "actualExternalQuantity": 0,
                      "internalCostPerUnit": 0,
                      "externalCostPerUnit": 0,
                      "actualInternalCostPerUnit": 0,
                      "actualExternalCostPerUnit": 0,
                      "order": 0,
                      "actualQuantity": 0,
                      "packageId": {
                        "id": "string",
                        "type": "string"
                      },
                      "isNameCustom": true,
                      "isExcludeNonDeduct": true,
                      "vendorPrice": 0,
                      "eventStartDate": "2020-07-13T15:33:16.512Z",
                      "eventEndDate": "2020-07-13T15:33:16.512Z"
                    }
                  }
                },
                "links": [
                  {
                    "href": "string",
                    "rel": "string",
                    "templated": false,
                    "method": "GET",
                    "targetSchema": "string",
                    "operationId": "string",
                    "title": "string"
                  }
                ]
              }
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      }
    },
    "/eventcalendar": {
      "get": {
        "summary": "Get the event calendar for Multiple Properties",
        "description": "You will be able to retrieve all events on the calendar for a specified property.  Narrow the results down by using the available parameters, such as Event Status, Event eventStartDate date, Location, Number of Attendees and so on. <p><strong>OperationId:</strong>getEventCalendarMultipleHotelIds</p> <p>This API allows a time span of <strong>21</strong> days.</p>",
        "operationId": "getEventCalendarMultipleHotelIds",
        "parameters": [
          {
            "name": "eventEndDate",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "includeHidden",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeOpportunities",
            "in": "query",
            "required": false,
            "description": "If set to true, the results will include opportunities. If this flag is not provided it will be considered false and exclude opportunities.",
            "type": "boolean"
          },
          {
            "name": "showAvailableRooms",
            "in": "query",
            "required": false,
            "description": "Determines whether to fetch only available rooms(Spaces with NON-DEDUCT events) or not.",
            "type": "boolean"
          },
          {
            "name": "showReservations",
            "in": "query",
            "required": false,
            "description": "Determines whether to fetch guest reservations or not.",
            "type": "boolean"
          },
          {
            "name": "isHotelSort",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "isSortDescending",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pageIndex",
            "in": "query",
            "required": false,
            "description": "Page index to be retrieved.",
            "type": "integer"
          },
          {
            "name": "recordsPerPage",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "sortingBy",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A collection of supported sorting for Event Calendar Function Space.",
            "uniqueItems": true,
            "enum": [
              "Name",
              "AttendeeCapacity",
              "AreaSize",
              "CustomOrder1",
              "CustomOrder2",
              "CustomOrder3"
            ]
          },
          {
            "name": "eventStartDate",
            "in": "query",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "functionSpaceDetails",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Room filter for the events returned.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "status",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Status filter for the events returned.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "setupStyle",
            "in": "query",
            "required": false,
            "description": "Setup Style filter for the events returned.",
            "type": "string"
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "description": "Function space location filter for the events returned.",
            "type": "string"
          },
          {
            "name": "eventLabel",
            "in": "query",
            "required": false,
            "description": "Event Bar Label filter for the events returned.",
            "type": "string"
          },
          {
            "name": "spaceType",
            "in": "query",
            "required": false,
            "description": "Room type filter for the events returned.",
            "type": "string"
          },
          {
            "name": "areaMeasurement",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Determines the measuring unit.",
            "uniqueItems": true,
            "enum": [
              "Sqft",
              "Sqm"
            ]
          },
          {
            "name": "minimumArea",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "display",
            "in": "query",
            "required": false,
            "description": "Type of function space filter for the events returned. Possible values include Individual, Combo and All.",
            "type": "string"
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "friday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "monday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "saturday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sunday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "thursday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "tuesday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "wednesday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "eventHints",
            "in": "query",
            "required": false,
            "type": "array",
            "collectionFormat": "multi",
            "description": "A collection of supported event hint values in UI for Events.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Account",
                "Attendees",
                "BlockCode",
                "BlockName",
                "BlockNonCompete",
                "BlockRateProtect",
                "CateringDecisionDate",
                "CateringFollowupDate",
                "CateringOwner",
                "CateringStatus",
                "Contact",
                "CreationDate",
                "EventCategory",
                "EventDuration",
                "EventLabel",
                "EventName",
                "EventStatus",
                "EventType",
                "FunctionSpace",
                "RoomStatus",
                "RoomsCount",
                "RoomsFollowupDate",
                "RoomsOwner",
                "SetupStyle",
                "SpaceCode"
              ]
            }
          },
          {
            "name": "includeAdvancedHints",
            "in": "query",
            "description": "Determines whether to fetch profile and room related details.",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Return object to the request for the Events Booked/Scheduled for the function spaces in the Hotel for the particular time period.",
            "schema": {
              "$ref": "#/definitions/eventCalendar"
            }
          },
          "204": {
            "description": "EventCalendarMultipleHotelIds not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      }
    },
    "/events": {
      "get": {
        "summary": "Get Events ",
        "description": "This API fetches catering events for multiple hotels, based on search criteria such as dates, linked block, status, function space, and more. The data returned in the result contains, event type, description, dates and times, attendees, function space, setup style and more. <p><strong>OperationId:</strong>getEventsMultipleHotels</p>",
        "operationId": "getEventsMultipleHotels",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "This is the Hotel Code of the Event",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "x-example": [
              "BHOTEL",
              "WORLDHOTEL"
            ],
            "required": false
          },
          {
            "name": "eventStartDate",
            "in": "query",
            "x-example": "2020-12-30",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "eventEndDate",
            "in": "query",
            "x-example": "2020-12-30",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "blockId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Block ID linked to the Catering Event",
            "items": {
              "type": "string"
            },
            "x-example": [
              "52346234"
            ],
            "required": false
          },
          {
            "name": "eventId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique ID for the catering event",
            "items": {
              "type": "string"
            },
            "x-example": [
              "823814534"
            ],
            "required": false
          },
          {
            "name": "category",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Simple type for block instructions to be used in requests for fetching blocks. Valid status values are Group, Source, TravelAgent, Contact, Company.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Group",
                "Source",
                "Agent",
                "Contact",
                "Company",
                "Account"
              ]
            },
            "required": false
          },
          {
            "name": "name",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Attached profile name",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "attachedProfileId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying numeric value assigned to a profile utilized to fetch events associated to blocks linked to the profile.",
            "items": {
              "type": "string"
            },
            "x-example": [
              "323816531"
            ],
            "required": false
          },
          {
            "name": "blockName",
            "in": "query",
            "required": false,
            "description": "Block Name.",
            "type": "string"
          },
          {
            "name": "eventStatusCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "x-example": [
              "ACT",
              "DEF"
            ],
            "required": false,
            "description": "Status Codes associated with the events to be fetched."
          },
          {
            "name": "eventTypeCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "x-example": [
              "BRK",
              "COF"
            ],
            "required": false,
            "description": "Event Type Codes associated with the events to be fetched."
          },
          {
            "name": "functionSpaceCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "x-example": [
              "SPACE01",
              "SPACE02"
            ],
            "required": false
          },
          {
            "name": "includeInactive",
            "in": "query",
            "default": false,
            "x-example": false,
            "required": false,
            "description": "Indicates whether to include inactive events in search result.",
            "type": "boolean"
          },
          {
            "name": "includeAlternateEvents",
            "in": "query",
            "default": false,
            "x-example": false,
            "required": false,
            "description": "Indicates whether to include the alternate events in the search result.",
            "type": "boolean"
          },
          {
            "name": "includeOpportunities",
            "in": "query",
            "default": false,
            "x-example": false,
            "required": false,
            "description": "If set to true, the results will include opportunities. If this flag is not provided it will be considered false and exclude opportunities.",
            "type": "boolean"
          },
          {
            "name": "includeSubEvents",
            "in": "query",
            "default": false,
            "x-example": false,
            "required": false,
            "description": "Indicates whether to include the sub events in the search result.",
            "type": "boolean"
          },
          {
            "name": "cateringEventOrderBy",
            "in": "query",
            "default": "StartDateTimeAsc",
            "x-example": "StartDateTimeAsc",
            "required": false,
            "type": "string",
            "description": "A collection of supported list of order by for search catering events.",
            "uniqueItems": true,
            "enum": [
              "StartDateTimeAsc",
              "StartDateTimeMasterSubAsc"
            ]
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Instructions to fetch details information about the selected event. The BlocksInfo fetch instructions will retain a limited amount of data for the associated block.  The Indicators instruction will provide a count. The EventResources fetch instruction if passed with eventId will return the required page number and records on it, i.e. it will return same page records which has the passed eventId.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "EventDetails",
                "BlocksInfo",
                "Indicators",
                "Notes",
                "SubEventsInfo",
                "AlternateEventsInfo",
                "MasterEventInfo",
                "Revenues",
                "IncludeInactiveSubEventsInfo",
                "IncludeInactiveMasterEventInfo",
                "ActualEventDetails",
                "EligibleMasterEventDetails",
                "EventResources"
              ]
            },
            "x-example": [
              "Indicators"
            ],
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "default": 200,
            "x-example": 200,
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "x-example": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "cateringOwners",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "x-example": [
              "ABC",
              "EOF"
            ],
            "required": false,
            "description": "Catering Owner Codes associated with the events to be fetched."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching events.",
            "schema": {
              "$ref": "#/definitions/events"
            },
            "examples": {
              "application/json": {
                "eventSummaries": {
                  "eventSummary": [
                    {
                      "eventId": {
                        "id": "121294"
                      },
                      "blockIdList": [
                        {
                          "id": "18450"
                        }
                      ],
                      "blockName": "ACME Convention",
                      "attendees": "10",
                      "eventStatus": {
                        "status": {
                          "code": "INQ",
                          "description": "Inquiry"
                        },
                        "color": "Cyan"
                      },
                      "cateringStatusType": "Inquiry",
                      "cateringStatusDeductInventory": false,
                      "cateringStatusReturnToInventory": false,
                      "masterEvent": true,
                      "subEvent": false,
                      "packageEvent": true,
                      "alternateEvent": false,
                      "displayDoorCard": true,
                      "doorCard": "ACME Convention",
                      "excludeFromForecast": false,
                      "useForecastRevenue": true,
                      "loudEvent": false,
                      "eventShared": false,
                      "shareable": false,
                      "packageCode": "MTGBRK",
                      "packageName": "Meeting Break Package",
                      "hotelId": "TOKYO",
                      "blockHotelCode": "TAIPEI",
                      "hasPostings": false,
                      "blockHasPostings": false,
                      "hasPartialPostings": false,
                      "allPosted": false,
                      "nothingPosted": false,
                      "eventStartDate": "2014-10-07 09:00:00.0",
                      "eventEndDate": "2014-10-07 18:00:00.0",
                      "type": "MTG",
                      "eventName": "Meeting",
                      "cateringCurrency": "USD",
                      "cateringQuotedCurrency": "USD"
                    },
                    {
                      "eventId": {
                        "id": "108541"
                      },
                      "eventLink": {
                        "id": {
                          "id": "1090"
                        },
                        "type": "SubEvent",
                        "masterEventDates": {
                          "startDateTime": "2015-12-05 12:00:00.0",
                          "endDateTime": "2015-12-05 13:00:00.0"
                        }
                      },
                      "blockIdList": [
                        {
                          "id": "11298"
                        }
                      ],
                      "blockName": "The Convention",
                      "attendees": "1",
                      "functionSpaceCode": {
                        "code": "ANNA",
                        "description": "Annapolis Room"
                      },
                      "rentalAmount": "20",
                      "functionSpaceSetup": {
                        "code": "BOA",
                        "description": "Boardroom Style"
                      },
                      "eventStatus": {
                        "status": {
                          "code": "DEF",
                          "description": "Definite-1"
                        },
                        "color": "Red"
                      },
                      "cateringStatusDeductInventory": true,
                      "cateringStatusReturnToInventory": false,
                      "setupTime": "5",
                      "tearDownTime": "5",
                      "masterEvent": false,
                      "subEvent": true,
                      "packageEvent": false,
                      "alternateEvent": false,
                      "displayDoorCard": true,
                      "excludeFromForecast": false,
                      "useForecastRevenue": true,
                      "loudEvent": false,
                      "rentalCode": "FULL",
                      "eventShared": false,
                      "shareable": false,
                      "hotelId": "TOKYO",
                      "blockHotelCode": "TOKYO",
                      "hasPostings": false,
                      "blockHasPostings": false,
                      "hasPartialPostings": false,
                      "allPosted": false,
                      "nothingPosted": false,
                      "eventStartDate": "2015-12-05 09:00:00.0",
                      "eventEndDate": "2015-12-05 18:00:00.0",
                      "type": "MTG",
                      "eventName": "Meeting",
                      "cateringCurrency": "USD",
                      "cateringQuotedCurrency": "USD"
                    },
                    {
                      "eventId": {
                        "id": "1090"
                      },
                      "blockIdList": [
                        {
                          "id": "11298"
                        }
                      ],
                      "blockName": "The Convention",
                      "attendees": "1",
                      "eventStatus": {
                        "status": {
                          "code": "DEF",
                          "description": "Definite-1"
                        },
                        "color": "Red"
                      },
                      "cateringStatusDeductInventory": true,
                      "cateringStatusReturnToInventory": false,
                      "masterEvent": true,
                      "subEvent": false,
                      "packageEvent": false,
                      "alternateEvent": false,
                      "displayDoorCard": true,
                      "doorCard": "The Convention",
                      "excludeFromForecast": false,
                      "useForecastRevenue": false,
                      "loudEvent": false,
                      "eventShared": false,
                      "shareable": false,
                      "hotelId": "TOKYO",
                      "blockHotelCode": "TOKYO",
                      "hasPostings": false,
                      "blockHasPostings": false,
                      "hasPartialPostings": false,
                      "allPosted": false,
                      "nothingPosted": false,
                      "eventStartDate": "2015-12-05 12:00:00.0",
                      "eventEndDate": "2015-12-05 13:00:00.0",
                      "type": "LUN",
                      "eventName": "Lunch",
                      "cateringCurrency": "USD",
                      "cateringQuotedCurrency": "USD"
                    },
                    {
                      "eventId": {
                        "type": "EventId",
                        "idContext": "OPERA",
                        "id": "401315"
                      },
                      "blockIdList": [
                        {
                          "id": "251730",
                          "type": "Block"
                        }
                      ],
                      "blockName": "27 issue",
                      "attendees": "11",
                      "functionSpaceDetails": {
                        "code": "ANNA",
                        "description": "Annapolis Room"
                      },
                      "rentalAmount": "122",
                      "functionSpaceSetup": {
                        "code": "CON",
                        "description": "Conference"
                      },
                      "eventStatus": {
                        "status": {
                          "code": "ACT",
                          "description": "Actual"
                        },
                        "color": "Brown"
                      },
                      "cateringStatusType": "Actual",
                      "cateringStatusDeductInventory": true,
                      "cateringStatusReturnToInventory": false,
                      "setupTime": "0",
                      "tearDownTime": "0",
                      "masterEvent": false,
                      "subEvent": false,
                      "packageEvent": false,
                      "alternateEvent": false,
                      "displayDoorCard": true,
                      "doorCard": "27 issue",
                      "excludeFromForecast": false,
                      "minimumOccupancy": "1",
                      "maximumOccupancy": "55",
                      "loudEvent": false,
                      "rentalCode": "CMP",
                      "eventShared": false,
                      "shareable": false,
                      "hotelId": "TOKYO",
                      "blockHotelCode": "TOKYO",
                      "hasPostings": false,
                      "blockHasPostings": false,
                      "hasPartialPostings": false,
                      "allPosted": false,
                      "nothingPosted": true,
                      "eventStartDate": "2017-01-06 09:00:00.0",
                      "eventEndDate": "2017-01-06 18:00:00.0",
                      "type": "MTG",
                      "eventName": "Meeting",
                      "cateringCurrency": "USD",
                      "cateringQuotedCurrency": "EUR"
                    }
                  ],
                  "totalPages": "1000",
                  "offset": "4",
                  "limit": "4",
                  "hasMore": false,
                  "totalResults": "1000"
                }
              }
            }
          },
          "204": {
            "description": "EventsMultipleHotels not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      },
      "post": {
        "summary": "Create an Event",
        "description": "This API allows the creation of a catering event with event type, description, start date / time. end date / time, attendees, function space, setup style, rate, and more. A catering event must always be linked to a block. It cannot exist on its own. <p><strong>OperationId:</strong>postEvents</p>",
        "operationId": "postEvents",
        "parameters": [
          {
            "name": "event",
            "in": "body",
            "required": true,
            "description": "Request object for creating new event.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/event"
                },
                {
                  "example": {
                    "eventDetails": [
                      {
                        "eventPrimaryInfo": {
                          "eventId": {
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0
                          },
                          "hotelId": "string",
                          "includeSubEvents": true
                        },
                        "eventDetail": {
                          "eventName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "eventType": "string",
                          "eventTimeSpan": {
                            "startDateTime": "2020-07-17T09:19:00.356Z",
                            "endDateTime": "2020-07-17T09:19:00.356Z"
                          },
                          "eventStatus": {
                            "status": {
                              "code": "string",
                              "description": "string"
                            },
                            "color": "White"
                          },
                          "waitlistReturnStatus": {
                            "status": {
                              "code": "string",
                              "description": "string"
                            },
                            "color": "White"
                          },
                          "cateringStatusType": "Waitlist",
                          "attendees": {
                            "expected": 0,
                            "guaranteed": 0,
                            "actual": 0,
                            "set": 0,
                            "billed": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0
                          },
                          "masterEventId": {
                            "id": "string",
                            "type": "string"
                          },
                          "doorcard": "string",
                          "eventLink": {
                            "id": {
                              "id": "string",
                              "type": "string"
                            },
                            "type": "SubEvent",
                            "masterEventDates": {
                              "startDateTime": "2020-07-17T09:19:00.356Z",
                              "endDateTime": "2020-07-17T09:19:00.356Z"
                            }
                          },
                          "inactiveDate": "2020-07-17",
                          "packageId": 0,
                          "packageName": "string",
                          "masterEvent": true,
                          "subEvent": true,
                          "packageEvent": true,
                          "alternateEvent": true,
                          "waitlisted": true,
                          "notMoveable": true,
                          "loudEvent": true,
                          "hasPostings": true,
                          "displayDoorcard": true,
                          "cateringDeductInventory": true,
                          "eventShared": true,
                          "createDateTime": "2020-07-17T09:19:00.356Z",
                          "creatorId": "string",
                          "lastModifyDateTime": "2020-07-17T09:19:00.356Z",
                          "lastModifierId": "string",
                          "purgeDate": "2020-07-17",
                          "includeSpaceInPackage": true,
                          "eventLevelRevenueActualization": true
                        },
                        "eventResources": [
                          {
                            "resourceId": {
                              "url": "string",
                              "type": "string",
                              "instance": "string",
                              "idContext": "string",
                              "id": "string",
                              "idExtension": 0
                            },
                            "resourceType": "FunctionSpace",
                            "resourceName": "string",
                            "setupCode": "string",
                            "itemAttribute": "string",
                            "quantity": 0,
                            "hours": 0,
                            "persons": 0,
                            "quantityIncluded": 0,
                            "quantityExcluded": 0,
                            "unitPrice": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "revenue": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "rentalCode": "string",
                            "discount": 0,
                            "eventResourceNotes": [
                              {
                                "noteId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "noteCode": "string",
                                "internal": true,
                                "noteTitle": "string",
                                "comment": "string",
                                "sequence": 0,
                                "createDateTime": "2020-07-17T09:19:00.356Z",
                                "creatorId": "string",
                                "lastModifyDateTime": "2020-07-17T09:19:00.356Z",
                                "lastModifierId": "string",
                                "purgeDate": "2020-07-17"
                              }
                            ],
                            "sellStartDate": "2020-07-17",
                            "sellEndDate": "2020-07-17",
                            "eventStartDate": "2020-07-17",
                            "eventEndDate": "2020-07-17",
                            "consumptionBased": true,
                            "multiChoice": true,
                            "hotelId": "string",
                            "order": "string",
                            "hasDiscountMenuItem": true,
                            "hasNotes": true,
                            "external": true,
                            "custom": true,
                            "packaged": true
                          }
                        ],
                        "processInstructions": {
                          "overrideCapacity": true,
                          "overbook": true,
                          "shareable": true,
                          "overrideMaxgroups": true,
                          "waitList": true,
                          "warnFunctionSpace": true,
                          "quickEvent": true
                        },
                        "eventBlockInfo": {
                          "blockIdList": [
                            {
                              "id": "string",
                              "type": "string"
                            }
                          ],
                          "blockDetails": {
                            "blockCode": "180220DIVB",
                            "blockName": "Name of the  Block",
                            "blockDates": {
                              "startDate": "2021-06-01",
                              "endDate": "2021-06-01"
                            },
                            "marketCode": {
                              "marketCode": "CORPC1"
                            },
                            "sourceOfSale": {
                              "sourceCode": {
                                "sourceCode": "REF"
                              }
                            }
                          },
                          "hotelId": "TOKYO",
                          "blockProfiles": {
                            "blockProfile": [
                              {
                                "profileIdList": [
                                  {
                                    "id": "122515",
                                    "type": "ContactId"
                                  }
                                ],
                                "profile": {
                                  "company": {
                                    "companyName": "company name"
                                  },
                                  "profileType": "Guest"
                                },
                                "primary": true,
                                "blockProfileType": "Company"
                              }
                            ]
                          }
                        },
                        "functionSpaceInformation": {
                          "functionSpaceCode": "string",
                          "functionSpaceDescription": "string",
                          "setupCode": "string",
                          "setupDescription": "string",
                          "setupTime": 0,
                          "setdownTime": 0,
                          "rentalCode": "string",
                          "rateDesc": "string",
                          "rentalAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "discountPercentage": 0,
                          "minimumOccupancy": 0,
                          "maximumOccupancy": 0,
                          "shareable": true,
                          "comboSpace": true,
                          "elementSpace": true
                        },
                        "eventNotes": [
                          {
                            "noteId": {
                              "id": "string",
                              "type": "string"
                            },
                            "noteCode": "string",
                            "internal": true,
                            "noteTitle": "string",
                            "comment": "string",
                            "sequence": 0,
                            "createDateTime": "2020-07-17T09:19:00.372Z",
                            "creatorId": "string",
                            "lastModifyDateTime": "2020-07-17T09:19:00.372Z",
                            "lastModifierId": "string",
                            "purgeDate": "2020-07-17"
                          }
                        ],
                        "eventIndicators": [
                          {
                            "indicatorName": "string",
                            "count": 0
                          }
                        ],
                        "onTheBooksRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "subEventsDetail": [
                          {
                            "eventPrimaryInfo": {
                              "eventId": {
                                "url": "string",
                                "type": "string",
                                "instance": "string",
                                "idContext": "string",
                                "id": "string",
                                "idExtension": 0
                              },
                              "hotelId": "string",
                              "includeSubEvents": true
                            },
                            "eventDetail": {
                              "eventName": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "value": "string",
                                      "language": "string"
                                    }
                                  ]
                                }
                              },
                              "eventType": "string",
                              "eventTimeSpan": {
                                "startDateTime": "2020-07-17T09:19:00.372Z",
                                "endDateTime": "2020-07-17T09:19:00.372Z"
                              },
                              "eventStatus": {
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "color": "White"
                              },
                              "waitlistReturnStatus": {
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "color": "White"
                              },
                              "cateringStatusType": "Waitlist",
                              "attendees": {
                                "expected": 0,
                                "guaranteed": 0,
                                "actual": 0,
                                "set": 0,
                                "billed": 0,
                                "packageExpected": 0,
                                "packageGuaranteed": 0,
                                "packageActual": 0,
                                "packageBilled": 0
                              },
                              "masterEventId": {
                                "id": "string",
                                "type": "string"
                              },
                              "doorcard": "string",
                              "eventLink": {
                                "id": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "type": "SubEvent",
                                "masterEventDates": {
                                  "startDateTime": "2020-07-17T09:19:00.372Z",
                                  "endDateTime": "2020-07-17T09:19:00.372Z"
                                }
                              },
                              "inactiveDate": "2020-07-17",
                              "packageId": 0,
                              "packageName": "string",
                              "masterEvent": true,
                              "subEvent": true,
                              "packageEvent": true,
                              "alternateEvent": true,
                              "waitlisted": true,
                              "notMoveable": true,
                              "loudEvent": true,
                              "hasPostings": true,
                              "displayDoorcard": true,
                              "cateringDeductInventory": true,
                              "eventShared": true,
                              "createDateTime": "2020-07-17T09:19:00.372Z",
                              "creatorId": "string",
                              "lastModifyDateTime": "2020-07-17T09:19:00.372Z",
                              "lastModifierId": "string",
                              "purgeDate": "2020-07-17",
                              "includeSpaceInPackage": true,
                              "eventLevelRevenueActualization": true
                            },
                            "functionSpaceInformation": {
                              "functionSpaceCode": "string",
                              "functionSpaceDescription": "string",
                              "setupCode": "string",
                              "setupDescription": "string",
                              "setupTime": 0,
                              "setdownTime": 0,
                              "rentalCode": "string",
                              "rateDesc": "string",
                              "rentalAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "discountPercentage": 0,
                              "minimumOccupancy": 0,
                              "maximumOccupancy": 0,
                              "shareable": true,
                              "comboSpace": true,
                              "elementSpace": true
                            }
                          }
                        ],
                        "altEventsDetail": [
                          {
                            "eventPrimaryInfo": {
                              "eventId": {
                                "url": "string",
                                "type": "string",
                                "instance": "string",
                                "idContext": "string",
                                "id": "string",
                                "idExtension": 0
                              },
                              "hotelId": "string",
                              "includeSubEvents": true
                            },
                            "eventDetail": {
                              "eventName": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "value": "string",
                                      "language": "string"
                                    }
                                  ]
                                }
                              },
                              "eventType": "string",
                              "eventTimeSpan": {
                                "startDateTime": "2020-07-17T09:19:00.372Z",
                                "endDateTime": "2020-07-17T09:19:00.372Z"
                              },
                              "eventStatus": {
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "color": "White"
                              },
                              "waitlistReturnStatus": {
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "color": "White"
                              },
                              "cateringStatusType": "Waitlist",
                              "attendees": {
                                "expected": 0,
                                "guaranteed": 0,
                                "actual": 0,
                                "set": 0,
                                "billed": 0,
                                "packageExpected": 0,
                                "packageGuaranteed": 0,
                                "packageActual": 0,
                                "packageBilled": 0
                              },
                              "masterEventId": {
                                "id": "string",
                                "type": "string"
                              },
                              "doorcard": "string",
                              "eventLink": {
                                "id": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "type": "SubEvent",
                                "masterEventDates": {
                                  "startDateTime": "2020-07-17T09:19:00.373Z",
                                  "endDateTime": "2020-07-17T09:19:00.373Z"
                                }
                              },
                              "inactiveDate": "2020-07-17",
                              "packageId": 0,
                              "packageName": "string",
                              "masterEvent": true,
                              "subEvent": true,
                              "packageEvent": true,
                              "alternateEvent": true,
                              "waitlisted": true,
                              "notMoveable": true,
                              "loudEvent": true,
                              "hasPostings": true,
                              "displayDoorcard": true,
                              "cateringDeductInventory": true,
                              "eventShared": true,
                              "createDateTime": "2020-07-17T09:19:00.373Z",
                              "creatorId": "string",
                              "lastModifyDateTime": "2020-07-17T09:19:00.373Z",
                              "lastModifierId": "string",
                              "purgeDate": "2020-07-17",
                              "includeSpaceInPackage": true,
                              "eventLevelRevenueActualization": true
                            },
                            "functionSpaceInformation": {
                              "functionSpaceCode": "string",
                              "functionSpaceDescription": "string",
                              "setupCode": "string",
                              "setupDescription": "string",
                              "setupTime": 0,
                              "setdownTime": 0,
                              "rentalCode": "string",
                              "rateDesc": "string",
                              "rentalAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "discountPercentage": 0,
                              "minimumOccupancy": 0,
                              "maximumOccupancy": 0,
                              "shareable": true,
                              "comboSpace": true,
                              "elementSpace": true
                            }
                          }
                        ],
                        "masterEventDetail": {
                          "eventPrimaryInfo": {
                            "eventId": {
                              "url": "string",
                              "type": "string",
                              "instance": "string",
                              "idContext": "string",
                              "id": "string",
                              "idExtension": 0
                            },
                            "hotelId": "string",
                            "includeSubEvents": true
                          },
                          "eventDetail": {
                            "eventName": {
                              "defaultText": "string",
                              "translations": {
                                "text": [
                                  {
                                    "value": "string",
                                    "language": "string"
                                  }
                                ]
                              }
                            },
                            "eventType": "string",
                            "eventTimeSpan": {
                              "startDateTime": "2020-07-17T09:19:00.373Z",
                              "endDateTime": "2020-07-17T09:19:00.373Z"
                            },
                            "eventStatus": {
                              "status": {
                                "code": "string",
                                "description": "string"
                              },
                              "color": "White"
                            },
                            "waitlistReturnStatus": {
                              "status": {
                                "code": "string",
                                "description": "string"
                              },
                              "color": "White"
                            },
                            "cateringStatusType": "Waitlist",
                            "attendees": {
                              "expected": 0,
                              "guaranteed": 0,
                              "actual": 0,
                              "set": 0,
                              "billed": 0,
                              "packageExpected": 0,
                              "packageGuaranteed": 0,
                              "packageActual": 0,
                              "packageBilled": 0
                            },
                            "masterEventId": {
                              "id": "string",
                              "type": "string"
                            },
                            "doorcard": "string",
                            "eventLink": {
                              "id": {
                                "id": "string",
                                "type": "string"
                              },
                              "type": "SubEvent",
                              "masterEventDates": {
                                "startDateTime": "2020-07-17T09:19:00.373Z",
                                "endDateTime": "2020-07-17T09:19:00.373Z"
                              }
                            },
                            "inactiveDate": "2020-07-17",
                            "packageId": 0,
                            "packageName": "string",
                            "masterEvent": true,
                            "subEvent": true,
                            "packageEvent": true,
                            "alternateEvent": true,
                            "waitlisted": true,
                            "notMoveable": true,
                            "loudEvent": true,
                            "hasPostings": true,
                            "displayDoorcard": true,
                            "cateringDeductInventory": true,
                            "eventShared": true,
                            "createDateTime": "2020-07-17T09:19:00.373Z",
                            "creatorId": "string",
                            "lastModifyDateTime": "2020-07-17T09:19:00.373Z",
                            "lastModifierId": "string",
                            "purgeDate": "2020-07-17",
                            "includeSpaceInPackage": true,
                            "eventLevelRevenueActualization": true
                          },
                          "functionSpaceInformation": {
                            "functionSpaceCode": "string",
                            "functionSpaceDescription": "string",
                            "setupCode": "string",
                            "setupDescription": "string",
                            "setupTime": 0,
                            "setdownTime": 0,
                            "rentalCode": "string",
                            "rateDesc": "string",
                            "rentalAmount": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "discountPercentage": 0,
                            "minimumOccupancy": 0,
                            "maximumOccupancy": 0,
                            "shareable": true,
                            "comboSpace": true,
                            "elementSpace": true
                          }
                        },
                        "eventRevenues": {
                          "eventRevenueInformation": [
                            {
                              "revenueType": {
                                "code": "string",
                                "translatableDescription": {
                                  "defaultText": "string",
                                  "translations": {
                                    "text": [
                                      {
                                        "value": "string",
                                        "language": "string"
                                      }
                                    ]
                                  }
                                },
                                "displaySequence": 0,
                                "revenueGroup": "string",
                                "foodAndBeverage": true,
                                "inactive": true,
                                "revenueDetails": [
                                  {
                                    "hotelId": "string",
                                    "revenueMinimum": true,
                                    "tax": 0
                                  }
                                ]
                              },
                              "forecastRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "expectedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "guaranteedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "onTheBooksRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "billedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "actualRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "totalCost": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "flatForecastRevenue": true,
                              "custom": true,
                              "ignoreForecast": true,
                              "packaged": true,
                              "orderBy": 0
                            }
                          ],
                          "currencyCode": "string",
                          "excludeFromForecast": true,
                          "useForecastRevenue": true,
                          "eventLevelRevenueActualization": true
                        }
                      }
                    ],
                    "links": [
                      {
                        "href": "string",
                        "rel": "string",
                        "templated": false,
                        "method": "GET",
                        "targetSchema": "string",
                        "operationId": "string",
                        "title": "string"
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response object for creating new event.",
            "schema": {
              "$ref": "#/definitions/event"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      },
      "delete": {
        "summary": "Delete Multiple Events",
        "description": "This API will delete multiple existing events <p><strong>OperationId:</strong>deleteMultipleEvents</p>",
        "operationId": "deleteMultipleEvents",
        "parameters": [
          {
            "name": "eventIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "minItems": 1,
            "required": true
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel code where event will be organized.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "includeSubEvents",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Indicates whether to delete/inactive the sub event(s) of the master event.",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      }
    },
    "/events/{eventId}/splitQuantity": {
      "get": {
        "summary": "Get Event item split quantity",
        "description": "Retrieve the event item split quantity for an event. <p><strong>OperationId:</strong>getEventItemSplitQuantity</p> <p>This API allows a time span of <strong>1</strong> days.</p>",
        "operationId": "getEventItemSplitQuantity",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the event"
          },
          {
            "name": "eventPrimaryHotelId",
            "in": "query",
            "required": false,
            "description": "Hotel code where event will be organized.",
            "type": "string"
          },
          {
            "name": "eventItemId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "eventEndDate",
            "in": "query",
            "required": false,
            "description": "The ending value of the time span.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "eventStartDate",
            "in": "query",
            "required": false,
            "description": "The starting value of the time span.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "itemId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "quantity",
            "in": "query",
            "required": false,
            "description": "The quantity of this item required by the event.",
            "type": "number"
          },
          {
            "name": "isExcludeNonDeduct",
            "in": "query",
            "required": false,
            "description": "Flag to check if the Event Item is ExcludeNonDeduct",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching event resource details.",
            "schema": {
              "$ref": "#/definitions/eventResource"
            },
            "examples": {
              "application/json": {
                "eventResourceDetails": {
                  "eventDetailInfo": {
                    "eventPrimaryInfo": {
                      "eventId": {
                        "url": "string",
                        "type": "string",
                        "instance": "string",
                        "idContext": "string",
                        "id": "string",
                        "idExtension": 0
                      },
                      "hotelId": "string",
                      "includeSubEvents": true
                    },
                    "eventDetail": {
                      "eventName": {
                        "defaultText": "string",
                        "translations": {
                          "text": [
                            {
                              "value": "string",
                              "language": "string"
                            }
                          ]
                        }
                      },
                      "eventType": "string",
                      "eventTimeSpan": {
                        "startDateTime": "2020-07-13T15:33:16.494Z",
                        "endDateTime": "2020-07-13T15:33:16.494Z"
                      },
                      "eventStatus": {
                        "status": {
                          "code": "string",
                          "description": "string"
                        },
                        "color": "White"
                      },
                      "waitlistReturnStatus": {
                        "status": {
                          "code": "string",
                          "description": "string"
                        },
                        "color": "White"
                      },
                      "cateringStatusType": "Waitlist",
                      "attendees": {
                        "expected": 0,
                        "guaranteed": 0,
                        "actual": 0,
                        "set": 0,
                        "billed": 0,
                        "packageExpected": 0,
                        "packageGuaranteed": 0,
                        "packageActual": 0,
                        "packageBilled": 0
                      },
                      "masterEventId": {
                        "id": "string",
                        "type": "string"
                      },
                      "doorcard": "string",
                      "eventLink": {
                        "id": {
                          "id": "string",
                          "type": "string"
                        },
                        "type": "SubEvent",
                        "masterEventDates": {
                          "startDateTime": "2020-07-13T15:33:16.494Z",
                          "endDateTime": "2020-07-13T15:33:16.494Z"
                        }
                      },
                      "inactiveDate": "2020-07-13",
                      "packageId": 0,
                      "packageName": "string",
                      "masterEvent": true,
                      "subEvent": true,
                      "packageEvent": true,
                      "alternateEvent": true,
                      "waitlisted": true,
                      "notMoveable": true,
                      "loudEvent": true,
                      "hasPostings": true,
                      "displayDoorcard": true,
                      "cateringDeductInventory": true,
                      "eventShared": true,
                      "createDateTime": "2020-07-13T15:33:16.494Z",
                      "creatorId": "string",
                      "lastModifyDateTime": "2020-07-13T15:33:16.494Z",
                      "lastModifierId": "string",
                      "purgeDate": "2020-07-13",
                      "includeSpaceInPackage": true,
                      "eventLevelRevenueActualization": true
                    },
                    "eventResources": [
                      {
                        "resourceId": {
                          "url": "string",
                          "type": "string",
                          "instance": "string",
                          "idContext": "string",
                          "id": "string",
                          "idExtension": 0
                        },
                        "resourceType": "FunctionSpace",
                        "resourceName": "string",
                        "setupCode": "string",
                        "itemAttribute": "string",
                        "quantity": 0,
                        "hours": 0,
                        "persons": 0,
                        "quantityIncluded": 0,
                        "quantityExcluded": 0,
                        "unitPrice": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "revenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "rentalCode": "string",
                        "discount": 0,
                        "eventResourceNotes": [
                          {
                            "noteId": {
                              "id": "string",
                              "type": "string"
                            },
                            "noteCode": "string",
                            "internal": true,
                            "noteTitle": "string",
                            "comment": "string",
                            "sequence": 0,
                            "createDateTime": "2020-07-13T15:33:16.494Z",
                            "creatorId": "string",
                            "lastModifyDateTime": "2020-07-13T15:33:16.494Z",
                            "lastModifierId": "string",
                            "purgeDate": "2020-07-13"
                          }
                        ],
                        "sellStartDate": "2020-07-13",
                        "sellEndDate": "2020-07-13",
                        "eventStartDate": "2020-07-13",
                        "eventEndDate": "2020-07-13",
                        "consumptionBased": true,
                        "multiChoice": true,
                        "hotelId": "string",
                        "order": "string",
                        "hasDiscountMenuItem": true,
                        "hasNotes": true,
                        "external": true,
                        "custom": true,
                        "packaged": true
                      }
                    ],
                    "processInstructions": {
                      "overrideCapacity": true,
                      "overbook": true,
                      "shareable": true,
                      "overrideMaxgroups": true,
                      "waitList": true,
                      "warnFunctionSpace": true
                    },
                    "eventBlockInfo": {
                      "blockIdList": [
                        {
                          "id": "string",
                          "type": "string"
                        }
                      ]
                    },
                    "functionSpaceInformation": {
                      "functionSpaceCode": "string",
                      "functionSpaceDescription": "string",
                      "setupCode": "string",
                      "setupDescription": "string",
                      "setupTime": 0,
                      "setdownTime": 0,
                      "rentalCode": "string",
                      "rateDesc": "string",
                      "rentalAmount": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "discountPercentage": 0,
                      "minimumOccupancy": 0,
                      "maximumOccupancy": 0,
                      "shareable": true,
                      "comboSpace": true,
                      "elementSpace": true
                    },
                    "eventNotes": [
                      {
                        "noteId": {
                          "id": "string",
                          "type": "string"
                        },
                        "noteCode": "string",
                        "internal": true,
                        "noteTitle": "string",
                        "comment": "string",
                        "sequence": 0,
                        "createDateTime": "2020-07-13T15:33:16.511Z",
                        "creatorId": "string",
                        "lastModifyDateTime": "2020-07-13T15:33:16.511Z",
                        "lastModifierId": "string",
                        "purgeDate": "2020-07-13"
                      }
                    ],
                    "eventIndicators": [
                      {
                        "indicatorName": "string",
                        "count": 0
                      }
                    ],
                    "onTheBooksRevenue": {
                      "amount": 0,
                      "currencyCode": "string"
                    },
                    "subEventsDetail": [
                      {
                        "eventPrimaryInfo": {
                          "eventId": {
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0
                          },
                          "hotelId": "string",
                          "includeSubEvents": true
                        },
                        "eventDetail": {
                          "eventName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "eventType": "string",
                          "eventTimeSpan": {
                            "startDateTime": "2020-07-13T15:33:16.512Z",
                            "endDateTime": "2020-07-13T15:33:16.512Z"
                          },
                          "eventStatus": {
                            "status": {
                              "code": "string",
                              "description": "string"
                            },
                            "color": "White"
                          },
                          "waitlistReturnStatus": {
                            "status": {
                              "code": "string",
                              "description": "string"
                            },
                            "color": "White"
                          },
                          "cateringStatusType": "Waitlist",
                          "attendees": {
                            "expected": 0,
                            "guaranteed": 0,
                            "actual": 0,
                            "set": 0,
                            "billed": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0
                          },
                          "masterEventId": {
                            "id": "string",
                            "type": "string"
                          },
                          "doorcard": "string",
                          "eventLink": {
                            "id": {
                              "id": "string",
                              "type": "string"
                            },
                            "type": "SubEvent",
                            "masterEventDates": {
                              "startDateTime": "2020-07-13T15:33:16.512Z",
                              "endDateTime": "2020-07-13T15:33:16.512Z"
                            }
                          },
                          "inactiveDate": "2020-07-13",
                          "packageId": 0,
                          "packageName": "string",
                          "masterEvent": true,
                          "subEvent": true,
                          "packageEvent": true,
                          "alternateEvent": true,
                          "waitlisted": true,
                          "notMoveable": true,
                          "loudEvent": true,
                          "hasPostings": true,
                          "displayDoorcard": true,
                          "cateringDeductInventory": true,
                          "eventShared": true,
                          "createDateTime": "2020-07-13T15:33:16.512Z",
                          "creatorId": "string",
                          "lastModifyDateTime": "2020-07-13T15:33:16.512Z",
                          "lastModifierId": "string",
                          "purgeDate": "2020-07-13",
                          "includeSpaceInPackage": true,
                          "eventLevelRevenueActualization": true
                        },
                        "functionSpaceInformation": {
                          "functionSpaceCode": "string",
                          "functionSpaceDescription": "string",
                          "setupCode": "string",
                          "setupDescription": "string",
                          "setupTime": 0,
                          "setdownTime": 0,
                          "rentalCode": "string",
                          "rateDesc": "string",
                          "rentalAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "discountPercentage": 0,
                          "minimumOccupancy": 0,
                          "maximumOccupancy": 0,
                          "shareable": true,
                          "comboSpace": true,
                          "elementSpace": true
                        }
                      }
                    ],
                    "altEventsDetail": [
                      {
                        "eventPrimaryInfo": {
                          "eventId": {
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0
                          },
                          "hotelId": "string",
                          "includeSubEvents": true
                        },
                        "eventDetail": {
                          "eventName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "eventType": "string",
                          "eventTimeSpan": {
                            "startDateTime": "2020-07-13T15:33:16.512Z",
                            "endDateTime": "2020-07-13T15:33:16.512Z"
                          },
                          "eventStatus": {
                            "status": {
                              "code": "string",
                              "description": "string"
                            },
                            "color": "White"
                          },
                          "waitlistReturnStatus": {
                            "status": {
                              "code": "string",
                              "description": "string"
                            },
                            "color": "White"
                          },
                          "cateringStatusType": "Waitlist",
                          "attendees": {
                            "expected": 0,
                            "guaranteed": 0,
                            "actual": 0,
                            "set": 0,
                            "billed": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0
                          },
                          "masterEventId": {
                            "id": "string",
                            "type": "string"
                          },
                          "doorcard": "string",
                          "eventLink": {
                            "id": {
                              "id": "string",
                              "type": "string"
                            },
                            "type": "SubEvent",
                            "masterEventDates": {
                              "startDateTime": "2020-07-13T15:33:16.512Z",
                              "endDateTime": "2020-07-13T15:33:16.512Z"
                            }
                          },
                          "inactiveDate": "2020-07-13",
                          "packageId": 0,
                          "packageName": "string",
                          "masterEvent": true,
                          "subEvent": true,
                          "packageEvent": true,
                          "alternateEvent": true,
                          "waitlisted": true,
                          "notMoveable": true,
                          "loudEvent": true,
                          "hasPostings": true,
                          "displayDoorcard": true,
                          "cateringDeductInventory": true,
                          "eventShared": true,
                          "createDateTime": "2020-07-13T15:33:16.512Z",
                          "creatorId": "string",
                          "lastModifyDateTime": "2020-07-13T15:33:16.512Z",
                          "lastModifierId": "string",
                          "purgeDate": "2020-07-13",
                          "includeSpaceInPackage": true,
                          "eventLevelRevenueActualization": true
                        },
                        "functionSpaceInformation": {
                          "functionSpaceCode": "string",
                          "functionSpaceDescription": "string",
                          "setupCode": "string",
                          "setupDescription": "string",
                          "setupTime": 0,
                          "setdownTime": 0,
                          "rentalCode": "string",
                          "rateDesc": "string",
                          "rentalAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "discountPercentage": 0,
                          "minimumOccupancy": 0,
                          "maximumOccupancy": 0,
                          "shareable": true,
                          "comboSpace": true,
                          "elementSpace": true
                        }
                      }
                    ],
                    "masterEventDetail": {
                      "eventPrimaryInfo": {
                        "eventId": {
                          "url": "string",
                          "type": "string",
                          "instance": "string",
                          "idContext": "string",
                          "id": "string",
                          "idExtension": 0
                        },
                        "hotelId": "string",
                        "includeSubEvents": true
                      },
                      "eventDetail": {
                        "eventName": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "value": "string",
                                "language": "string"
                              }
                            ]
                          }
                        },
                        "eventType": "string",
                        "eventTimeSpan": {
                          "startDateTime": "2020-07-13T15:33:16.512Z",
                          "endDateTime": "2020-07-13T15:33:16.512Z"
                        },
                        "eventStatus": {
                          "status": {
                            "code": "string",
                            "description": "string"
                          },
                          "color": "White"
                        },
                        "waitlistReturnStatus": {
                          "status": {
                            "code": "string",
                            "description": "string"
                          },
                          "color": "White"
                        },
                        "cateringStatusType": "Waitlist",
                        "attendees": {
                          "expected": 0,
                          "guaranteed": 0,
                          "actual": 0,
                          "set": 0,
                          "billed": 0,
                          "packageExpected": 0,
                          "packageGuaranteed": 0,
                          "packageActual": 0,
                          "packageBilled": 0
                        },
                        "masterEventId": {
                          "id": "string",
                          "type": "string"
                        },
                        "doorcard": "string",
                        "eventLink": {
                          "id": {
                            "id": "string",
                            "type": "string"
                          },
                          "type": "SubEvent",
                          "masterEventDates": {
                            "startDateTime": "2020-07-13T15:33:16.512Z",
                            "endDateTime": "2020-07-13T15:33:16.512Z"
                          }
                        },
                        "inactiveDate": "2020-07-13",
                        "packageId": 0,
                        "packageName": "string",
                        "masterEvent": true,
                        "subEvent": true,
                        "packageEvent": true,
                        "alternateEvent": true,
                        "waitlisted": true,
                        "notMoveable": true,
                        "loudEvent": true,
                        "hasPostings": true,
                        "displayDoorcard": true,
                        "cateringDeductInventory": true,
                        "eventShared": true,
                        "createDateTime": "2020-07-13T15:33:16.512Z",
                        "creatorId": "string",
                        "lastModifyDateTime": "2020-07-13T15:33:16.512Z",
                        "lastModifierId": "string",
                        "purgeDate": "2020-07-13",
                        "includeSpaceInPackage": true,
                        "eventLevelRevenueActualization": true
                      },
                      "functionSpaceInformation": {
                        "functionSpaceCode": "string",
                        "functionSpaceDescription": "string",
                        "setupCode": "string",
                        "setupDescription": "string",
                        "setupTime": 0,
                        "setdownTime": 0,
                        "rentalCode": "string",
                        "rateDesc": "string",
                        "rentalAmount": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "discountPercentage": 0,
                        "minimumOccupancy": 0,
                        "maximumOccupancy": 0,
                        "shareable": true,
                        "comboSpace": true,
                        "elementSpace": true
                      }
                    },
                    "eventRevenues": {
                      "eventRevenueInformation": [
                        {
                          "revenueType": {
                            "code": "string",
                            "translatableDescription": {
                              "defaultText": "string",
                              "translations": {
                                "text": [
                                  {
                                    "value": "string",
                                    "language": "string"
                                  }
                                ]
                              }
                            },
                            "displaySequence": 0,
                            "revenueGroup": "string",
                            "foodAndBeverage": true,
                            "inactive": true,
                            "revenueDetails": [
                              {
                                "hotelId": "string",
                                "revenueMinimum": true,
                                "tax": 0
                              }
                            ]
                          },
                          "forecastRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "expectedRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "guaranteedRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "onTheBooksRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "billedRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "actualRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "totalCost": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "flatForecastRevenue": true,
                          "custom": true,
                          "ignoreForecast": true,
                          "packaged": true,
                          "orderBy": 0
                        }
                      ],
                      "currencyCode": "string",
                      "excludeFromForecast": true,
                      "useForecastRevenue": true,
                      "eventLevelRevenueActualization": true
                    }
                  },
                  "menu": {
                    "eventMenuId": {
                      "id": "string",
                      "type": "string"
                    },
                    "eventMenu": {
                      "basicInfo": {
                        "className": "string",
                        "name": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "value": "string",
                                "language": "string"
                              }
                            ]
                          }
                        },
                        "restriction": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "value": "string",
                                "language": "string"
                              }
                            ]
                          }
                        },
                        "description": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "value": "string",
                                "language": "string"
                              }
                            ]
                          }
                        },
                        "dietaryList": [
                          "string"
                        ],
                        "eventTypes": [
                          "string"
                        ],
                        "type": "Food",
                        "quickInsertCode": "string",
                        "servingType": "Pp",
                        "servingSize": "string",
                        "includedInMenu": true,
                        "consumptionBased": true,
                        "sellDateRange": {
                          "eventStartDate": "2020-07-13",
                          "eventEndDate": "2020-07-13"
                        },
                        "eventDateRange": {
                          "eventStartDate": "2020-07-13",
                          "eventEndDate": "2020-07-13"
                        },
                        "menusSold": 0,
                        "webBookable": true,
                        "inactive": true,
                        "salesPrice": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "includedInPrice": true,
                        "multiChoice": true,
                        "courseCount": 0,
                        "menuId": {
                          "id": "string",
                          "type": "string"
                        },
                        "serveStartEndTime": {
                          "eventStartDate": "2020-07-13T15:33:16.512Z",
                          "eventEndDate": "2020-07-13T15:33:16.512Z"
                        },
                        "attendees": {
                          "expected": 0,
                          "guaranteed": 0,
                          "actual": 0,
                          "set": 0,
                          "billed": 0,
                          "packageExpected": 0,
                          "packageGuaranteed": 0,
                          "packageActual": 0,
                          "packageBilled": 0
                        },
                        "discountPercentage": 0,
                        "order": 0,
                        "hotelId": "string"
                      },
                      "revenues": [
                        {
                          "revenueType": "string",
                          "type": "Food",
                          "cost": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "internalQuote": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "costMargin": 0,
                          "price": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "priceMargin": 0,
                          "resourceId": {
                            "id": "string",
                            "type": "string"
                          },
                          "custom": true
                        }
                      ],
                      "menuItems": [
                        {
                          "id": {
                            "id": "string",
                            "type": "string"
                          },
                          "hotelId": "string",
                          "classInfo": {
                            "code": "string",
                            "description": "string"
                          },
                          "name1": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "name2": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "name3": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "origin1": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "origin2": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "menuType": "Food",
                          "custom": true,
                          "year": 0,
                          "restriction": "string",
                          "description": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "eventTypes": [
                            "string"
                          ],
                          "responsibleDepartments": [
                            "string"
                          ],
                          "quickInsertCode": "string",
                          "revenueType": "string",
                          "salesPrice": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "cost": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "itemConsumption": true,
                          "container": {
                            "code": "string",
                            "description": "string"
                          },
                          "portion": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "servings": 0,
                          "webBookable": true,
                          "print": true,
                          "inactive": true,
                          "includedYN": true,
                          "eventMenuDetailID": {
                            "id": "string",
                            "type": "string"
                          },
                          "course": 0,
                          "courseOrder": 0,
                          "attendees": {
                            "expected": 0,
                            "guaranteed": 0,
                            "actual": 0,
                            "set": 0,
                            "billed": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0
                          },
                          "discountPercentage": 0,
                          "demandFactor": 0,
                          "mandatoryYN": true
                        }
                      ],
                      "hotelId": "string"
                    }
                  },
                  "item": {
                    "eventItemId": {
                      "id": "string",
                      "type": "string"
                    },
                    "eventItem": {
                      "hotelId": "string",
                      "itemId": {
                        "id": "string",
                        "type": "string"
                      },
                      "itemClassId": {
                        "id": "string",
                        "type": "string"
                      },
                      "itemClassCode": "string",
                      "itemClassDescription": "string",
                      "itemName": {
                        "defaultText": "string",
                        "translations": {
                          "text": [
                            {
                              "value": "string",
                              "language": "string"
                            }
                          ]
                        }
                      },
                      "itemDescription": "string",
                      "itemCode": "string",
                      "revenueType": "string",
                      "revenueTypeEditable": true,
                      "externalOrder": true,
                      "print": true,
                      "sellInfo": {
                        "available": {
                          "startDateTime": "2020-07-13T15:33:16.512Z",
                          "endDateTime": "2020-07-13T15:33:16.512Z"
                        },
                        "availableQty": 0,
                        "qtyInStock": 0,
                        "defaultQty": 0,
                        "sellSeparate": true,
                        "sellControl": true,
                        "welcomeOffer": true,
                        "webBookable": true,
                        "itemClassWebBookable": true,
                        "outsideStay": true,
                        "fixedCharge": true,
                        "discountable": true,
                        "itemClassDiscountable": true,
                        "criticalInventory": true,
                        "price": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "defaultDuration": 0
                      },
                      "setupTime": 0,
                      "setdownTime": 0,
                      "traceText": "string",
                      "itemPool": "string",
                      "displaySequence": 0,
                      "eventTypes": [
                        "string"
                      ],
                      "departments": [
                        "string"
                      ],
                      "attributes": [
                        {
                          "itemAttributeId": {
                            "id": "string",
                            "type": "string"
                          },
                          "translatableName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "setupTime": 0,
                          "setdownTime": 0,
                          "default": true
                        }
                      ],
                      "rates": [
                        {
                          "itemRateId": {
                            "id": "string",
                            "type": "string"
                          },
                          "itemRateCode": "string",
                          "name": "string",
                          "price": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "hourly": true,
                          "default": true
                        }
                      ],
                      "vendors": [
                        {
                          "profileId": {
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0
                          },
                          "name": "string",
                          "leadTime": "string",
                          "price": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "priority": 0,
                          "phone": "string",
                          "fax": "string",
                          "email": "string"
                        }
                      ],
                      "resourceNotes": [
                        {
                          "noteId": {
                            "id": "string",
                            "type": "string"
                          },
                          "noteCode": "string",
                          "internal": true,
                          "noteTitle": "string",
                          "comment": "string",
                          "sequence": 0,
                          "createDateTime": "2020-07-13T15:33:16.512Z",
                          "creatorId": "string",
                          "lastModifyDateTime": "2020-07-13T15:33:16.512Z",
                          "lastModifierId": "string",
                          "purgeDate": "2020-07-13"
                        }
                      ],
                      "usedForEvents": true,
                      "usedForReservation": true,
                      "quantity": 0,
                      "attributeId": {
                        "id": "string",
                        "type": "string"
                      },
                      "itemRateId": {
                        "id": "string",
                        "type": "string"
                      },
                      "price": 0,
                      "discount": 0,
                      "priceCode": "string",
                      "internalQuantity": 0,
                      "externalQuantity": 0,
                      "actualInternalQuantity": 0,
                      "actualExternalQuantity": 0,
                      "internalCostPerUnit": 0,
                      "externalCostPerUnit": 0,
                      "actualInternalCostPerUnit": 0,
                      "actualExternalCostPerUnit": 0,
                      "order": 0,
                      "actualQuantity": 0,
                      "packageId": {
                        "id": "string",
                        "type": "string"
                      },
                      "isNameCustom": true,
                      "isExcludeNonDeduct": true,
                      "vendorPrice": 0,
                      "eventStartDate": "2020-07-13T15:33:16.512Z",
                      "eventEndDate": "2020-07-13T15:33:16.512Z"
                    }
                  }
                },
                "links": [
                  {
                    "href": "string",
                    "rel": "string",
                    "templated": false,
                    "method": "GET",
                    "targetSchema": "string",
                    "operationId": "string",
                    "title": "string"
                  }
                ]
              }
            }
          },
          "204": {
            "description": "EventItemSplitQuantity not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      }
    },
    "/eventsResources": {
      "put": {
        "summary": "Update Events Resources by chain",
        "description": "Update the details of an existing event resource on an event in OPERA Cloud. <p><strong>OperationId:</strong>changeEventsResourcesByChain</p>",
        "operationId": "changeEventsResourcesByChain",
        "parameters": [
          {
            "name": "manageEventsResources",
            "in": "body",
            "required": true,
            "description": "Request object for managing events resources.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/manageEventsResources"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/manageEventsResources"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      }
    },
    "/hotels/{hotelId}/blocks/{blockId}/cateringEvents/copy": {
      "put": {
        "summary": "Copy Catering Event",
        "description": "Copy an existing catering event on a block to new dates on that block.  For example there is a catering Event called Lunch for 1st May, select this event, and copy it to a new date within the block date range.  This will result in a second catering event existing on this block.  You can choose to copy certain elements such as event notes, event resources and so on. <p><strong>OperationId:</strong>copyCateringEvents</p>",
        "operationId": "copyCateringEvents",
        "parameters": [
          {
            "name": "blockId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the block"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "copyCateringEvents",
            "in": "body",
            "required": true,
            "description": "Request object for copying events.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/copyCateringEvents"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response object for copying events.",
            "schema": {
              "$ref": "#/definitions/copyCateringEventsResponse"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      }
    },
    "/hotels/{hotelId}/blocks/{blockId}/cateringPackages": {
      "delete": {
        "summary": "Delete one or more catering package(s)",
        "description": "This allows you to remove an existing catering package from the Block <p><strong>OperationId:</strong>deleteCateringPackages</p>",
        "operationId": "deleteCateringPackages",
        "parameters": [
          {
            "name": "blockId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the block"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "cateringPackageId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": true
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      }
    },
    "/hotels/{hotelId}/blocks/{blockId}/cateringPackages/{cateringPackageId}": {
      "delete": {
        "summary": "Delete Catering package",
        "description": "This allows you to remove an existing catering package from the Block <p><strong>OperationId:</strong>deleteCateringPackage</p>",
        "operationId": "deleteCateringPackage",
        "parameters": [
          {
            "name": "cateringPackageId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the Catering Package"
          },
          {
            "name": "blockId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the block"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      }
    },
    "/hotels/{hotelId}/cateringEventChanges": {
      "get": {
        "summary": "Get Catering Event changes",
        "description": "Retrieve the catering event changes on an event. <p><strong>OperationId:</strong>getCateringEventChanges</p> <p>The maximum allowable limit for this API is <strong>20</strong>.</p> <p>This API allows a time span of <strong>90</strong> days.</p>",
        "operationId": "getCateringEventChanges",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A collection of supported list of actions.",
            "uniqueItems": true,
            "enum": [
              "EventChanges",
              "StatusChanges",
              "RevenueChanges",
              "AllChanges"
            ]
          },
          {
            "name": "eventId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "eventIdContext",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "eventIdType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "blockId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "blockIdContext",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "blockIdType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "changeSource",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "List of sources that can cause the event change",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Attendee",
                "Event",
                "Item",
                "Menu",
                "Menuitem",
                "Space"
              ]
            },
            "required": false
          },
          {
            "name": "action",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A collection of supported list of actions.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "New",
                "Update",
                "Delete",
                "Inactivate"
              ]
            },
            "required": false
          },
          {
            "name": "resourceDescription",
            "in": "query",
            "required": false,
            "description": "Description of the Resource",
            "type": "string"
          },
          {
            "name": "fieldNameListCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "userListCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "eventDate",
            "in": "query",
            "required": false,
            "description": "Date of the Events whose details are fetched",
            "type": "string",
            "format": "date"
          },
          {
            "name": "eventEndDate",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "eventStartDate",
            "in": "query",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "priorStatus",
            "in": "query",
            "required": false,
            "description": "Prior Status of the events whose details are fetched",
            "type": "string"
          },
          {
            "name": "currentStatus",
            "in": "query",
            "required": false,
            "description": "Current Status of the events whose details are fetched",
            "type": "string"
          },
          {
            "name": "revenueTypeListCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching event change logs.",
            "schema": {
              "$ref": "#/definitions/cateringEventChanges"
            }
          },
          "204": {
            "description": "CateringEventChanges not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      }
    },
    "/hotels/{hotelId}/eventcalendar": {
      "get": {
        "summary": "Get the event calendar",
        "description": "You will be able to retrieve all events on the calendar for a specified property.  Narrow the results down by using the available parameters, such as Event Status, Event eventStartDate date, Location, Number of Attendees and so on. <p><strong>OperationId:</strong>getEventCalendar</p> <p>This API allows a time span of <strong>21</strong> days.</p>",
        "operationId": "getEventCalendar",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "eventEndDate",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "includeHidden",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "includeOpportunities",
            "in": "query",
            "required": false,
            "description": "If set to true, the results will include opportunities. If this flag is not provided it will be considered false and exclude opportunities.",
            "type": "boolean"
          },
          {
            "name": "showAvailableRooms",
            "in": "query",
            "required": false,
            "description": "Determines whether to fetch only available rooms(Spaces with NON-DEDUCT events) or not.",
            "type": "boolean"
          },
          {
            "name": "showReservations",
            "in": "query",
            "required": false,
            "description": "Determines whether to fetch guest reservations or not.",
            "type": "boolean"
          },
          {
            "name": "isHotelSort",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "isSortDescending",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pageIndex",
            "in": "query",
            "required": false,
            "description": "Page index to be retrieved.",
            "type": "integer"
          },
          {
            "name": "recordsPerPage",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "sortingBy",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A collection of supported sorting for Event Calendar Function Space.",
            "uniqueItems": true,
            "enum": [
              "Name",
              "AttendeeCapacity",
              "AreaSize",
              "CustomOrder1",
              "CustomOrder2",
              "CustomOrder3"
            ]
          },
          {
            "name": "eventStartDate",
            "in": "query",
            "required": false,
            "description": "The starting value of the date/time range.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "functionSpaceDetails",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Room filter for the events returned.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "status",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Status filter for the events returned.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "setupStyle",
            "in": "query",
            "required": false,
            "description": "Setup Style filter for the events returned.",
            "type": "string"
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "description": "Function space location filter for the events returned.",
            "type": "string"
          },
          {
            "name": "eventLabel",
            "in": "query",
            "required": false,
            "description": "Event Bar Label filter for the events returned.",
            "type": "string"
          },
          {
            "name": "spaceType",
            "in": "query",
            "required": false,
            "description": "Room type filter for the events returned.",
            "type": "string"
          },
          {
            "name": "areaMeasurement",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Determines the measuring unit.",
            "uniqueItems": true,
            "enum": [
              "Sqft",
              "Sqm"
            ]
          },
          {
            "name": "minimumArea",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "display",
            "in": "query",
            "required": false,
            "description": "Type of function space filter for the events returned. Possible values include Individual, Combo and All.",
            "type": "string"
          },
          {
            "name": "from",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "to",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "friday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "monday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "saturday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sunday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "thursday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "tuesday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "wednesday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "eventHints",
            "in": "query",
            "required": false,
            "type": "array",
            "collectionFormat": "multi",
            "description": "A collection of supported event hint values in UI for Events.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Account",
                "Attendees",
                "BlockCode",
                "BlockName",
                "BlockNonCompete",
                "BlockRateProtect",
                "CateringDecisionDate",
                "CateringFollowupDate",
                "CateringOwner",
                "CateringStatus",
                "Contact",
                "CreationDate",
                "EventCategory",
                "EventDuration",
                "EventLabel",
                "EventName",
                "EventStatus",
                "EventType",
                "FunctionSpace",
                "RoomStatus",
                "RoomsCount",
                "RoomsFollowupDate",
                "RoomsOwner",
                "SetupStyle",
                "SpaceCode"
              ]
            }
          },
          {
            "name": "includeAdvancedHints",
            "in": "query",
            "description": "Determines whether to fetch profile and room related details.",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Return object to the request for the Events Booked/Scheduled for the function spaces in the Hotel for the particular time period.",
            "schema": {
              "$ref": "#/definitions/eventCalendar"
            },
            "examples": {
              "application/json": {
                "eventCalendarDetails": {
                  "eventSpace": [
                    {
                      "description": "string",
                      "eventSpaceAttributes": {
                        "spaceArea": {
                          "area": 0,
                          "unit": "SqFeet"
                        },
                        "shareable": true,
                        "comboSpace": true,
                        "alternate": true,
                        "maximumOccupancy": 0,
                        "comboElement": true,
                        "comboRoom": "string"
                      },
                      "events": {
                        "relatedEvents": "string",
                        "event": [
                          {
                            "eventName": "string",
                            "eventType": "string",
                            "eventBookingInfo": {
                              "catOwner": 0,
                              "catOwnerName": "string",
                              "salesOwner": 0,
                              "salesOwnerName": "string",
                              "eventStatus": {
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "color": "White"
                              },
                              "deductInvYn": "string",
                              "rateProtect": true,
                              "nonCompete": true,
                              "nonCompeteCode": "string",
                              "nonCompeteIndustry": "string",
                              "blockDates": [
                                {
                                  "startDate": "2020-07-16",
                                  "endDate": "2020-07-16",
                                  "duration": "string"
                                }
                              ],
                              "vipStatus": {
                                "value": "string",
                                "code": "string"
                              },
                              "guarantee": {
                                "guaranteeCode": "string",
                                "shortDescription": "string",
                                "onHold": true
                              },
                              "resvNameId": 0,
                              "bookHotelCode": "string",
                              "bookId": 0,
                              "masterNameId": 0,
                              "companyNameId": 0
                            },
                            "masterEventId": {
                              "id": "string",
                              "type": "string"
                            },
                            "attendees": 0,
                            "spaceTimeSpan": {
                              "startDate": "2020-07-16",
                              "endDate": "2020-07-16",
                              "duration": "string"
                            },
                            "eventTimeSpan": {
                              "startDateTime": "2020-07-16T15:57:18.826Z",
                              "endDateTime": "2020-07-16T15:57:18.826Z"
                            },
                            "setupTime": 0,
                            "setdownTime": 0,
                            "setupCode": "string",
                            "setupDescription": "string",
                            "eventDisplay": {
                              "bookingName": "string",
                              "cateringOnlyYn": "string",
                              "sharedYn": "string",
                              "masterYn": "string",
                              "loudEventYn": "string",
                              "waitlistedYn": "string",
                              "exclusiveYn": "string",
                              "alternateMasterYn": "string",
                              "dontMoveYn": "string"
                            },
                            "space": {
                              "code": "string",
                              "description": "string"
                            },
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0,
                            "createdOn": "2020-07-16",
                            "isComboRoomEventRef": true,
                            "waitListEventsCount": 0,
                            "overbookEventsCount": 0,
                            "prospectiveEventsCount": 0
                          }
                        ]
                      },
                      "hotelId": "string",
                      "roomId": "string",
                      "name": "string",
                      "building": "string",
                      "roomOrder": 0
                    }
                  ],
                  "eventCodes": [
                    {
                      "date": "2020-07-16",
                      "event": {
                        "code": "string",
                        "description": "string"
                      },
                      "color": "White",
                      "eventCodeType": "EventCode",
                      "hotelId": "string"
                    }
                  ],
                  "totalRooms": 0,
                  "pageIndex": 0,
                  "recordsPerPage": 0
                },
                "links": [
                  {
                    "href": "string",
                    "rel": "string",
                    "templated": false,
                    "method": "GET",
                    "targetSchema": "string",
                    "operationId": "string",
                    "title": "string"
                  }
                ]
              }
            }
          },
          "204": {
            "description": "EventCalendar not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      }
    },
    "/hotels/{hotelId}/events": {
      "get": {
        "summary": "Get Events ",
        "description": "This API fetches catering events for a specific hotel, based on search criteria such as dates, linked block, status, function space, and more. The data returned in the result contains, event type, description, dates and times, attendees, function space, setup style and more. <p><strong>OperationId:</strong>getEventsOneHotel</p>",
        "operationId": "getEventsOneHotel",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 20,
            "description": "Unique ID of a hotel",
            "x-example": "BHOTEL"
          },
          {
            "name": "eventStartDate",
            "in": "query",
            "x-example": "2020-12-30",
            "required": false,
            "description": "The starting value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "eventEndDate",
            "in": "query",
            "x-example": "2020-12-30",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "blockId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Block ID linked to the Catering Event",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "eventId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Unique ID for the catering event",
            "items": {
              "type": "string"
            },
            "x-example": [
              "823814534"
            ],
            "required": false
          },
          {
            "name": "attachedProfileId",
            "in": "query",
            "x-example": "323816531",
            "required": false,
            "description": "A unique identifying numeric value assigned to a profile utilized to fetch events associated to blocks linked to the profile.",
            "type": "string"
          },
          {
            "name": "blockName",
            "in": "query",
            "required": false,
            "description": "Block Name.",
            "type": "string"
          },
          {
            "name": "eventStatusCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "x-example": [
              "ACT",
              "DEF"
            ],
            "required": false,
            "description": "Status Codes associated with the events to be fetched."
          },
          {
            "name": "eventTypeCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "x-example": [
              "BRK",
              "COF"
            ],
            "required": false,
            "description": "Event Type Codes associated with the events to be fetched."
          },
          {
            "name": "functionSpaceCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "x-example": [
              "SPACE01",
              "SPACE02"
            ],
            "required": false
          },
          {
            "name": "includeInactive",
            "in": "query",
            "default": false,
            "x-example": false,
            "required": false,
            "description": "Indicates whether to include inactive events in search result.",
            "type": "boolean"
          },
          {
            "name": "includeAlternateEvents",
            "in": "query",
            "default": false,
            "x-example": false,
            "required": false,
            "description": "Indicates whether to include the alternate events in the search result.",
            "type": "boolean"
          },
          {
            "name": "includeOpportunities",
            "in": "query",
            "default": false,
            "x-example": false,
            "required": false,
            "description": "If set to true, the results will include opportunities. If this flag is not provided it will be considered false and exclude opportunities.",
            "type": "boolean"
          },
          {
            "name": "includeSubEvents",
            "in": "query",
            "default": false,
            "x-example": false,
            "required": false,
            "description": "Indicates whether to include the sub events in the search result.",
            "type": "boolean"
          },
          {
            "name": "cateringEventOrderBy",
            "in": "query",
            "default": "StartDateTimeAsc",
            "x-example": "StartDateTimeAsc",
            "required": false,
            "type": "string",
            "description": "A collection of supported list of order by for search catering events.",
            "uniqueItems": true,
            "enum": [
              "StartDateTimeAsc",
              "StartDateTimeMasterSubAsc"
            ]
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Instruction to fetch all eligible master events for the selected event",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "EventDetails",
                "BlocksInfo",
                "Indicators",
                "Notes",
                "SubEventsInfo",
                "AlternateEventsInfo",
                "MasterEventInfo",
                "Revenues",
                "IncludeInactiveSubEventsInfo",
                "IncludeInactiveMasterEventInfo",
                "ActualEventDetails",
                "EligibleMasterEventDetails"
              ]
            },
            "x-example": [
              "Indicators"
            ],
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "default": 200,
            "x-example": 200,
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "x-example": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching events.",
            "schema": {
              "$ref": "#/definitions/events"
            },
            "examples": {
              "application/json": {
                "eventSummaries": {
                  "eventSummary": [
                    {
                      "eventId": {
                        "id": "121294"
                      },
                      "blockIdList": [
                        {
                          "id": "18450"
                        }
                      ],
                      "blockName": "ACME Convention",
                      "attendees": "10",
                      "eventStatus": {
                        "status": {
                          "code": "INQ",
                          "description": "Inquiry"
                        },
                        "color": "Cyan"
                      },
                      "cateringStatusType": "Inquiry",
                      "cateringStatusDeductInventory": false,
                      "cateringStatusReturnToInventory": false,
                      "masterEvent": true,
                      "subEvent": false,
                      "packageEvent": true,
                      "alternateEvent": false,
                      "displayDoorCard": true,
                      "doorCard": "ACME Convention",
                      "excludeFromForecast": false,
                      "useForecastRevenue": true,
                      "loudEvent": false,
                      "eventShared": false,
                      "shareable": false,
                      "packageCode": "MTGBRK",
                      "packageName": "Meeting Break Package",
                      "hotelId": "TOKYO",
                      "blockHotelCode": "TAIPEI",
                      "hasPostings": false,
                      "blockHasPostings": false,
                      "hasPartialPostings": false,
                      "allPosted": false,
                      "nothingPosted": false,
                      "eventStartDate": "2014-10-07 09:00:00.0",
                      "eventEndDate": "2014-10-07 18:00:00.0",
                      "type": "MTG",
                      "eventName": "Meeting",
                      "cateringCurrency": "USD",
                      "cateringQuotedCurrency": "USD"
                    },
                    {
                      "eventId": {
                        "id": "108541"
                      },
                      "eventLink": {
                        "id": {
                          "id": "1090"
                        },
                        "type": "SubEvent",
                        "masterEventDates": {
                          "startDateTime": "2015-12-05 12:00:00.0",
                          "endDateTime": "2015-12-05 13:00:00.0"
                        }
                      },
                      "blockIdList": [
                        {
                          "id": "11298"
                        }
                      ],
                      "blockName": "The Convention",
                      "attendees": "1",
                      "functionSpaceCode": {
                        "code": "ANNA",
                        "description": "Annapolis Room"
                      },
                      "rentalAmount": "20",
                      "functionSpaceSetup": {
                        "code": "BOA",
                        "description": "Boardroom Style"
                      },
                      "eventStatus": {
                        "status": {
                          "code": "DEF",
                          "description": "Definite-1"
                        },
                        "color": "Red"
                      },
                      "cateringStatusDeductInventory": true,
                      "cateringStatusReturnToInventory": false,
                      "setupTime": "5",
                      "tearDownTime": "5",
                      "masterEvent": false,
                      "subEvent": true,
                      "packageEvent": false,
                      "alternateEvent": false,
                      "displayDoorCard": true,
                      "excludeFromForecast": false,
                      "useForecastRevenue": true,
                      "loudEvent": false,
                      "rentalCode": "FULL",
                      "eventShared": false,
                      "shareable": false,
                      "hotelId": "TOKYO",
                      "blockHotelCode": "TOKYO",
                      "hasPostings": false,
                      "blockHasPostings": false,
                      "hasPartialPostings": false,
                      "allPosted": false,
                      "nothingPosted": false,
                      "eventStartDate": "2015-12-05 09:00:00.0",
                      "eventEndDate": "2015-12-05 18:00:00.0",
                      "type": "MTG",
                      "eventName": "Meeting",
                      "cateringCurrency": "USD",
                      "cateringQuotedCurrency": "USD"
                    },
                    {
                      "eventId": {
                        "id": "1090"
                      },
                      "blockIdList": [
                        {
                          "id": "11298"
                        }
                      ],
                      "blockName": "The Convention",
                      "attendees": "1",
                      "eventStatus": {
                        "status": {
                          "code": "DEF",
                          "description": "Definite-1"
                        },
                        "color": "Red"
                      },
                      "cateringStatusDeductInventory": true,
                      "cateringStatusReturnToInventory": false,
                      "masterEvent": true,
                      "subEvent": false,
                      "packageEvent": false,
                      "alternateEvent": false,
                      "displayDoorCard": true,
                      "doorCard": "The Convention",
                      "excludeFromForecast": false,
                      "useForecastRevenue": false,
                      "loudEvent": false,
                      "eventShared": false,
                      "shareable": false,
                      "hotelId": "TOKYO",
                      "blockHotelCode": "TOKYO",
                      "hasPostings": false,
                      "blockHasPostings": false,
                      "hasPartialPostings": false,
                      "allPosted": false,
                      "nothingPosted": false,
                      "eventStartDate": "2015-12-05 12:00:00.0",
                      "eventEndDate": "2015-12-05 13:00:00.0",
                      "type": "LUN",
                      "eventName": "Lunch",
                      "cateringCurrency": "USD",
                      "cateringQuotedCurrency": "USD"
                    },
                    {
                      "eventId": {
                        "type": "EventId",
                        "idContext": "OPERA",
                        "id": "401315"
                      },
                      "blockIdList": [
                        {
                          "id": "251730",
                          "type": "Block"
                        }
                      ],
                      "blockName": "27 issue",
                      "attendees": "11",
                      "functionSpaceDetails": {
                        "code": "ANNA",
                        "description": "Annapolis Room"
                      },
                      "rentalAmount": "122",
                      "functionSpaceSetup": {
                        "code": "CON",
                        "description": "Conference"
                      },
                      "eventStatus": {
                        "status": {
                          "code": "ACT",
                          "description": "Actual"
                        },
                        "color": "Brown"
                      },
                      "cateringStatusType": "Actual",
                      "cateringStatusDeductInventory": true,
                      "cateringStatusReturnToInventory": false,
                      "setupTime": "0",
                      "tearDownTime": "0",
                      "masterEvent": false,
                      "subEvent": false,
                      "packageEvent": false,
                      "alternateEvent": false,
                      "displayDoorCard": true,
                      "doorCard": "27 issue",
                      "excludeFromForecast": false,
                      "minimumOccupancy": "1",
                      "maximumOccupancy": "55",
                      "loudEvent": false,
                      "rentalCode": "CMP",
                      "eventShared": false,
                      "shareable": false,
                      "hotelId": "TOKYO",
                      "blockHotelCode": "TOKYO",
                      "hasPostings": false,
                      "blockHasPostings": false,
                      "hasPartialPostings": false,
                      "allPosted": false,
                      "nothingPosted": true,
                      "eventStartDate": "2017-01-06 09:00:00.0",
                      "eventEndDate": "2017-01-06 18:00:00.0",
                      "type": "MTG",
                      "eventName": "Meeting",
                      "cateringCurrency": "USD",
                      "cateringQuotedCurrency": "EUR"
                    }
                  ],
                  "totalPages": "1000",
                  "offset": "4",
                  "limit": "4",
                  "hasMore": false,
                  "totalResults": "1000"
                }
              }
            }
          },
          "204": {
            "description": "EventsOneHotel not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      }
    },
    "/hotels/{hotelId}/events/{eventId}": {
      "get": {
        "summary": "Get an Event",
        "description": "This API will allow you to retrieve the details of one event by specifying the event ID in the path. Event details such as event type, event description, start date / time and end date time, attendees, function space, setup style, function space rate, and more  will be returned. You can also add fetch instructions to specify what additional event data, such as block information, revenue information, event notes, and master / sub event information you would like returned in the response. If you don&apos;t know the eventID, please use getEvents API to find the event and its respective eventID. <p><strong>OperationId:</strong>getEvent</p>",
        "operationId": "getEvent",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the event",
            "x-example": "3700516"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 20,
            "description": "Unique ID of a hotel",
            "x-example": "BHOTEL"
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Instruction to fetch all eligible master events for the selected event",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "EventDetails",
                "BlocksInfo",
                "Indicators",
                "Notes",
                "AlternateEventsInfo",
                "SubEventsInfo",
                "MasterEventInfo",
                "Revenues",
                "IncludeInactiveSubEventsInfo",
                "IncludeInactiveMasterEventInfo",
                "ActualEventDetails",
                "EligibleMasterEventDetails"
              ]
            },
            "x-example": [
              "Indicators",
              "Notes"
            ],
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching event.",
            "schema": {
              "$ref": "#/definitions/event"
            },
            "examples": {
              "application/json": {
                "eventDetails": [
                  {
                    "eventPrimaryInfo": {
                      "eventId": {
                        "id": "238039"
                      },
                      "hotelId": "HOTEL1"
                    },
                    "eventDetail": {
                      "eventName": {
                        "defaultText": "Breakfast - Buffet and Meeting"
                      },
                      "eventType": "BRKFTB",
                      "eventTimeSpan": {
                        "startDateTime": "2020-02-20 06:00:00.0",
                        "endDateTime": "2020-02-20 07:00:00.0"
                      },
                      "eventStatus": {
                        "status": {
                          "code": "INQ"
                        }
                      },
                      "attendees": {
                        "expected": "10"
                      },
                      "doorcard": "Buffet Breakfast",
                      "masterEvent": true,
                      "subEvent": false,
                      "packageEvent": false,
                      "alternateEvent": false,
                      "notMoveable": false,
                      "loudEvent": false,
                      "hasPostings": false,
                      "displayDoorcard": true,
                      "cateringDeductInventory": false,
                      "eventShared": false,
                      "createDateTime": "2020-03-31 10:30:38.0",
                      "creatorId": "BEN@SFIRST",
                      "lastModifyDateTime": "2020-07-13 01:47:29.0",
                      "lastModifierId": "SAM@VAFIRST",
                      "includeSpaceInPackage": false,
                      "eventLevelRevenueActualization": true
                    },
                    "eventBlockInfo": {
                      "blockIdList": [
                        {
                          "id": "427673"
                        }
                      ],
                      "blockDetails": {
                        "blockCode": "180220DIVB",
                        "blockName": "First Company Block with Events",
                        "blockDates": {
                          "startDate": "2020-02-20",
                          "endDate": "2020-02-26"
                        }
                      },
                      "blockProfiles": {
                        "fullOverlay": false
                      },
                      "hotelId": "HOTEL1"
                    },
                    "functionSpaceInformation": {
                      "functionSpaceCode": "103",
                      "functionSpaceDescription": "Conway Room",
                      "setupCode": "CON",
                      "setupDescription": "Conference Room",
                      "setupTime": "7",
                      "setdownTime": "0",
                      "rentalCode": "CUSTOM",
                      "minimumOccupancy": "1",
                      "maximumOccupancy": "20",
                      "shareable": false
                    },
                    "eventNotes": [
                      {
                        "noteId": {
                          "id": "57013"
                        },
                        "noteCode": "CH",
                        "internal": true,
                        "noteTitle": "Change",
                        "comment": "Change Notes",
                        "createDateTime": "2020-05-14 02:23:23.0",
                        "creatorId": "JEN@SFIRST",
                        "lastModifyDateTime": "2020-05-14 02:23:23.0",
                        "lastModifierId": "JEN@SFIRST"
                      },
                      {
                        "noteId": {
                          "id": "57014"
                        },
                        "noteCode": "CH",
                        "internal": false,
                        "noteTitle": "Change",
                        "comment": "Change comment: non internal Event",
                        "createDateTime": "2020-05-14 02:23:50.0",
                        "creatorId": "JEN@SFIRST",
                        "lastModifyDateTime": "2020-05-14 02:23:50.0",
                        "lastModifierId": "JEN@SFIRST"
                      }
                    ],
                    "onTheBooksRevenue": {
                      "amount": "250"
                    }
                  }
                ]
              }
            }
          },
          "204": {
            "description": "Event not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      },
      "put": {
        "summary": "Update an Event",
        "description": "You can use this API to update an existing Event by using the Event ID.A,  If you don't know the vent ID, use getEvents API to search for an event first. <p><strong>OperationId:</strong>changeEvents</p>",
        "operationId": "changeEvents",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the event"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 20,
            "description": "Unique ID of a hotel",
            "x-example": "BHOTEL"
          },
          {
            "name": "event",
            "in": "body",
            "required": true,
            "description": "Request object for changing event.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/event"
                },
                {
                  "example": {
                    "eventDetails": [
                      {
                        "eventPrimaryInfo": {
                          "eventId": {
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0
                          },
                          "hotelId": "string",
                          "includeSubEvents": true
                        },
                        "eventDetail": {
                          "eventName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "eventType": "string",
                          "eventTimeSpan": {
                            "startDateTime": "2020-07-17T09:19:00.356Z",
                            "endDateTime": "2020-07-17T09:19:00.356Z"
                          },
                          "eventStatus": {
                            "status": {
                              "code": "string",
                              "description": "string"
                            },
                            "color": "White"
                          },
                          "waitlistReturnStatus": {
                            "status": {
                              "code": "string",
                              "description": "string"
                            },
                            "color": "White"
                          },
                          "cateringStatusType": "Waitlist",
                          "attendees": {
                            "expected": 0,
                            "guaranteed": 0,
                            "actual": 0,
                            "set": 0,
                            "billed": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0
                          },
                          "masterEventId": {
                            "id": "string",
                            "type": "string"
                          },
                          "doorcard": "string",
                          "eventLink": {
                            "id": {
                              "id": "string",
                              "type": "string"
                            },
                            "type": "SubEvent",
                            "masterEventDates": {
                              "startDateTime": "2020-07-17T09:19:00.356Z",
                              "endDateTime": "2020-07-17T09:19:00.356Z"
                            }
                          },
                          "inactiveDate": "2020-07-17",
                          "packageId": 0,
                          "packageName": "string",
                          "masterEvent": true,
                          "subEvent": true,
                          "packageEvent": true,
                          "alternateEvent": true,
                          "waitlisted": true,
                          "notMoveable": true,
                          "loudEvent": true,
                          "hasPostings": true,
                          "displayDoorcard": true,
                          "cateringDeductInventory": true,
                          "eventShared": true,
                          "createDateTime": "2020-07-17T09:19:00.356Z",
                          "creatorId": "string",
                          "lastModifyDateTime": "2020-07-17T09:19:00.356Z",
                          "lastModifierId": "string",
                          "purgeDate": "2020-07-17",
                          "includeSpaceInPackage": true,
                          "eventLevelRevenueActualization": true
                        },
                        "eventResources": [
                          {
                            "resourceId": {
                              "url": "string",
                              "type": "string",
                              "instance": "string",
                              "idContext": "string",
                              "id": "string",
                              "idExtension": 0
                            },
                            "resourceType": "FunctionSpace",
                            "resourceName": "string",
                            "setupCode": "string",
                            "itemAttribute": "string",
                            "quantity": 0,
                            "hours": 0,
                            "persons": 0,
                            "quantityIncluded": 0,
                            "quantityExcluded": 0,
                            "unitPrice": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "revenue": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "rentalCode": "string",
                            "discount": 0,
                            "eventResourceNotes": [
                              {
                                "noteId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "noteCode": "string",
                                "internal": true,
                                "noteTitle": "string",
                                "comment": "string",
                                "sequence": 0,
                                "createDateTime": "2020-07-17T09:19:00.356Z",
                                "creatorId": "string",
                                "lastModifyDateTime": "2020-07-17T09:19:00.356Z",
                                "lastModifierId": "string",
                                "purgeDate": "2020-07-17"
                              }
                            ],
                            "sellStartDate": "2020-07-17",
                            "sellEndDate": "2020-07-17",
                            "eventStartDate": "2020-07-17",
                            "eventEndDate": "2020-07-17",
                            "consumptionBased": true,
                            "multiChoice": true,
                            "hotelId": "string",
                            "order": "string",
                            "hasDiscountMenuItem": true,
                            "hasNotes": true,
                            "external": true,
                            "custom": true,
                            "packaged": true
                          }
                        ],
                        "processInstructions": {
                          "overrideCapacity": true,
                          "overbook": true,
                          "shareable": true,
                          "overrideMaxgroups": true,
                          "waitList": true,
                          "warnFunctionSpace": true
                        },
                        "eventBlockInfo": {
                          "blockIdList": [
                            {
                              "id": "string",
                              "type": "string"
                            }
                          ]
                        },
                        "functionSpaceInformation": {
                          "functionSpaceCode": "string",
                          "functionSpaceDescription": "string",
                          "setupCode": "string",
                          "setupDescription": "string",
                          "setupTime": 0,
                          "setdownTime": 0,
                          "rentalCode": "string",
                          "rateDesc": "string",
                          "rentalAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "discountPercentage": 0,
                          "minimumOccupancy": 0,
                          "maximumOccupancy": 0,
                          "shareable": true,
                          "comboSpace": true,
                          "elementSpace": true
                        },
                        "eventNotes": [
                          {
                            "noteId": {
                              "id": "string",
                              "type": "string"
                            },
                            "noteCode": "string",
                            "internal": true,
                            "noteTitle": "string",
                            "comment": "string",
                            "sequence": 0,
                            "createDateTime": "2020-07-17T09:19:00.372Z",
                            "creatorId": "string",
                            "lastModifyDateTime": "2020-07-17T09:19:00.372Z",
                            "lastModifierId": "string",
                            "purgeDate": "2020-07-17"
                          }
                        ],
                        "eventIndicators": [
                          {
                            "indicatorName": "string",
                            "count": 0
                          }
                        ],
                        "onTheBooksRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "subEventsDetail": [
                          {
                            "eventPrimaryInfo": {
                              "eventId": {
                                "url": "string",
                                "type": "string",
                                "instance": "string",
                                "idContext": "string",
                                "id": "string",
                                "idExtension": 0
                              },
                              "hotelId": "string",
                              "includeSubEvents": true
                            },
                            "eventDetail": {
                              "eventName": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "value": "string",
                                      "language": "string"
                                    }
                                  ]
                                }
                              },
                              "eventType": "string",
                              "eventTimeSpan": {
                                "startDateTime": "2020-07-17T09:19:00.372Z",
                                "endDateTime": "2020-07-17T09:19:00.372Z"
                              },
                              "eventStatus": {
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "color": "White"
                              },
                              "waitlistReturnStatus": {
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "color": "White"
                              },
                              "cateringStatusType": "Waitlist",
                              "attendees": {
                                "expected": 0,
                                "guaranteed": 0,
                                "actual": 0,
                                "set": 0,
                                "billed": 0,
                                "packageExpected": 0,
                                "packageGuaranteed": 0,
                                "packageActual": 0,
                                "packageBilled": 0
                              },
                              "masterEventId": {
                                "id": "string",
                                "type": "string"
                              },
                              "doorcard": "string",
                              "eventLink": {
                                "id": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "type": "SubEvent",
                                "masterEventDates": {
                                  "startDateTime": "2020-07-17T09:19:00.372Z",
                                  "endDateTime": "2020-07-17T09:19:00.372Z"
                                }
                              },
                              "inactiveDate": "2020-07-17",
                              "packageId": 0,
                              "packageName": "string",
                              "masterEvent": true,
                              "subEvent": true,
                              "packageEvent": true,
                              "alternateEvent": true,
                              "waitlisted": true,
                              "notMoveable": true,
                              "loudEvent": true,
                              "hasPostings": true,
                              "displayDoorcard": true,
                              "cateringDeductInventory": true,
                              "eventShared": true,
                              "createDateTime": "2020-07-17T09:19:00.372Z",
                              "creatorId": "string",
                              "lastModifyDateTime": "2020-07-17T09:19:00.372Z",
                              "lastModifierId": "string",
                              "purgeDate": "2020-07-17",
                              "includeSpaceInPackage": true,
                              "eventLevelRevenueActualization": true
                            },
                            "functionSpaceInformation": {
                              "functionSpaceCode": "string",
                              "functionSpaceDescription": "string",
                              "setupCode": "string",
                              "setupDescription": "string",
                              "setupTime": 0,
                              "setdownTime": 0,
                              "rentalCode": "string",
                              "rateDesc": "string",
                              "rentalAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "discountPercentage": 0,
                              "minimumOccupancy": 0,
                              "maximumOccupancy": 0,
                              "shareable": true,
                              "comboSpace": true,
                              "elementSpace": true
                            }
                          }
                        ],
                        "altEventsDetail": [
                          {
                            "eventPrimaryInfo": {
                              "eventId": {
                                "url": "string",
                                "type": "string",
                                "instance": "string",
                                "idContext": "string",
                                "id": "string",
                                "idExtension": 0
                              },
                              "hotelId": "string",
                              "includeSubEvents": true
                            },
                            "eventDetail": {
                              "eventName": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "value": "string",
                                      "language": "string"
                                    }
                                  ]
                                }
                              },
                              "eventType": "string",
                              "eventTimeSpan": {
                                "startDateTime": "2020-07-17T09:19:00.372Z",
                                "endDateTime": "2020-07-17T09:19:00.372Z"
                              },
                              "eventStatus": {
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "color": "White"
                              },
                              "waitlistReturnStatus": {
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "color": "White"
                              },
                              "cateringStatusType": "Waitlist",
                              "attendees": {
                                "expected": 0,
                                "guaranteed": 0,
                                "actual": 0,
                                "set": 0,
                                "billed": 0,
                                "packageExpected": 0,
                                "packageGuaranteed": 0,
                                "packageActual": 0,
                                "packageBilled": 0
                              },
                              "masterEventId": {
                                "id": "string",
                                "type": "string"
                              },
                              "doorcard": "string",
                              "eventLink": {
                                "id": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "type": "SubEvent",
                                "masterEventDates": {
                                  "startDateTime": "2020-07-17T09:19:00.373Z",
                                  "endDateTime": "2020-07-17T09:19:00.373Z"
                                }
                              },
                              "inactiveDate": "2020-07-17",
                              "packageId": 0,
                              "packageName": "string",
                              "masterEvent": true,
                              "subEvent": true,
                              "packageEvent": true,
                              "alternateEvent": true,
                              "waitlisted": true,
                              "notMoveable": true,
                              "loudEvent": true,
                              "hasPostings": true,
                              "displayDoorcard": true,
                              "cateringDeductInventory": true,
                              "eventShared": true,
                              "createDateTime": "2020-07-17T09:19:00.373Z",
                              "creatorId": "string",
                              "lastModifyDateTime": "2020-07-17T09:19:00.373Z",
                              "lastModifierId": "string",
                              "purgeDate": "2020-07-17",
                              "includeSpaceInPackage": true,
                              "eventLevelRevenueActualization": true
                            },
                            "functionSpaceInformation": {
                              "functionSpaceCode": "string",
                              "functionSpaceDescription": "string",
                              "setupCode": "string",
                              "setupDescription": "string",
                              "setupTime": 0,
                              "setdownTime": 0,
                              "rentalCode": "string",
                              "rateDesc": "string",
                              "rentalAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "discountPercentage": 0,
                              "minimumOccupancy": 0,
                              "maximumOccupancy": 0,
                              "shareable": true,
                              "comboSpace": true,
                              "elementSpace": true
                            }
                          }
                        ],
                        "masterEventDetail": {
                          "eventPrimaryInfo": {
                            "eventId": {
                              "url": "string",
                              "type": "string",
                              "instance": "string",
                              "idContext": "string",
                              "id": "string",
                              "idExtension": 0
                            },
                            "hotelId": "string",
                            "includeSubEvents": true
                          },
                          "eventDetail": {
                            "eventName": {
                              "defaultText": "string",
                              "translations": {
                                "text": [
                                  {
                                    "value": "string",
                                    "language": "string"
                                  }
                                ]
                              }
                            },
                            "eventType": "string",
                            "eventTimeSpan": {
                              "startDateTime": "2020-07-17T09:19:00.373Z",
                              "endDateTime": "2020-07-17T09:19:00.373Z"
                            },
                            "eventStatus": {
                              "status": {
                                "code": "string",
                                "description": "string"
                              },
                              "color": "White"
                            },
                            "waitlistReturnStatus": {
                              "status": {
                                "code": "string",
                                "description": "string"
                              },
                              "color": "White"
                            },
                            "cateringStatusType": "Waitlist",
                            "attendees": {
                              "expected": 0,
                              "guaranteed": 0,
                              "actual": 0,
                              "set": 0,
                              "billed": 0,
                              "packageExpected": 0,
                              "packageGuaranteed": 0,
                              "packageActual": 0,
                              "packageBilled": 0
                            },
                            "masterEventId": {
                              "id": "string",
                              "type": "string"
                            },
                            "doorcard": "string",
                            "eventLink": {
                              "id": {
                                "id": "string",
                                "type": "string"
                              },
                              "type": "SubEvent",
                              "masterEventDates": {
                                "startDateTime": "2020-07-17T09:19:00.373Z",
                                "endDateTime": "2020-07-17T09:19:00.373Z"
                              }
                            },
                            "inactiveDate": "2020-07-17",
                            "packageId": 0,
                            "packageName": "string",
                            "masterEvent": true,
                            "subEvent": true,
                            "packageEvent": true,
                            "alternateEvent": true,
                            "waitlisted": true,
                            "notMoveable": true,
                            "loudEvent": true,
                            "hasPostings": true,
                            "displayDoorcard": true,
                            "cateringDeductInventory": true,
                            "eventShared": true,
                            "createDateTime": "2020-07-17T09:19:00.373Z",
                            "creatorId": "string",
                            "lastModifyDateTime": "2020-07-17T09:19:00.373Z",
                            "lastModifierId": "string",
                            "purgeDate": "2020-07-17",
                            "includeSpaceInPackage": true,
                            "eventLevelRevenueActualization": true
                          },
                          "functionSpaceInformation": {
                            "functionSpaceCode": "string",
                            "functionSpaceDescription": "string",
                            "setupCode": "string",
                            "setupDescription": "string",
                            "setupTime": 0,
                            "setdownTime": 0,
                            "rentalCode": "string",
                            "rateDesc": "string",
                            "rentalAmount": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "discountPercentage": 0,
                            "minimumOccupancy": 0,
                            "maximumOccupancy": 0,
                            "shareable": true,
                            "comboSpace": true,
                            "elementSpace": true
                          }
                        },
                        "eventRevenues": {
                          "eventRevenueInformation": [
                            {
                              "revenueType": {
                                "code": "string",
                                "translatableDescription": {
                                  "defaultText": "string",
                                  "translations": {
                                    "text": [
                                      {
                                        "value": "string",
                                        "language": "string"
                                      }
                                    ]
                                  }
                                },
                                "displaySequence": 0,
                                "revenueGroup": "string",
                                "foodAndBeverage": true,
                                "inactive": true,
                                "revenueDetails": [
                                  {
                                    "hotelId": "string",
                                    "revenueMinimum": true,
                                    "tax": 0
                                  }
                                ]
                              },
                              "forecastRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "expectedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "guaranteedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "onTheBooksRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "billedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "actualRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "totalCost": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "flatForecastRevenue": true,
                              "custom": true,
                              "ignoreForecast": true,
                              "packaged": true,
                              "orderBy": 0
                            }
                          ],
                          "currencyCode": "string",
                          "excludeFromForecast": true,
                          "useForecastRevenue": true,
                          "eventLevelRevenueActualization": true
                        }
                      }
                    ],
                    "links": [
                      {
                        "href": "string",
                        "rel": "string",
                        "templated": false,
                        "method": "GET",
                        "targetSchema": "string",
                        "operationId": "string",
                        "title": "string"
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/event"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      },
      "delete": {
        "summary": "Delete an Event",
        "description": "This API will delete an existing event <p><strong>OperationId:</strong>deleteEvents</p>",
        "operationId": "deleteEvents",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the event"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 20,
            "description": "Unique ID of a hotel",
            "x-example": "BHOTEL"
          },
          {
            "name": "includeSubEvents",
            "in": "query",
            "required": false,
            "description": "Indicates whether to delete/inactive the sub event(s) of the master event.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      }
    },
    "/hotels/{hotelId}/events/{eventId}/cateringEventPostings": {
      "get": {
        "summary": "Get Catering Event postings",
        "description": "Retrieve the catering event posting on an event. <p><strong>OperationId:</strong>getCateringEventPostings</p>",
        "operationId": "getCateringEventPostings",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": ""
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "includeSubEvents",
            "in": "query",
            "required": false,
            "description": "Indicates whether to delete/inactive the sub event(s) of the master event.",
            "type": "boolean"
          },
          {
            "name": "blockId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "blockIdContext",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "blockIdType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Instruction to fetch all eligible master events for the selected event",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "EventDetails",
                "BlocksInfo",
                "Indicators",
                "Notes",
                "SubEventsInfo",
                "AlternateEventsInfo",
                "MasterEventInfo",
                "Revenues",
                "IncludeInactiveSubEventsInfo",
                "IncludeInactiveMasterEventInfo",
                "ActualEventDetails",
                "EligibleMasterEventDetails"
              ]
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for retrieving catering events postings.",
            "schema": {
              "$ref": "#/definitions/cateringEventPostingsDetail"
            }
          },
          "204": {
            "description": "CateringEventPostings not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      },
      "put": {
        "summary": "Manage Catering Event postings",
        "description": "Update and manage the catering event changes on an event. <p><strong>OperationId:</strong>manageCateringEventPostings</p>",
        "operationId": "manageCateringEventPostings",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "cateringEventPostings",
            "in": "body",
            "required": true,
            "description": "Request object for retrieving catering events postings.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/cateringEventPostings"
                },
                {
                  "example": {
                    "postingMasterReservations": {
                      "reservation": [
                        {
                          "hotelReservation": {
                            "reservationIdList": [
                              {
                                "id": "string",
                                "type": "string"
                              }
                            ]
                          },
                          "routingInstructions": [
                            {
                              "folio": {
                                "guestInfo": {
                                  "profileIdList": [
                                    {
                                      "id": "string",
                                      "type": "string"
                                    }
                                  ]
                                },
                                "payeeInfo": {
                                  "payeeId": {
                                    "id": "string",
                                    "type": "string"
                                  },
                                  "payeeName": "string",
                                  "payeeAddress": {
                                    "address": {
                                      "addressLine": [
                                        "string"
                                      ],
                                      "cityName": "string",
                                      "postalCode": "string",
                                      "cityExtension": "string",
                                      "county": "string",
                                      "state": "string",
                                      "country": {
                                        "value": "string",
                                        "code": "string"
                                      },
                                      "language": "string",
                                      "type": "string",
                                      "typeDescription": "string",
                                      "primaryInd": true,
                                      "updateReservations": true,
                                      "barCode": "string",
                                      "createDateTime": "2020-07-13T15:23:14.694Z",
                                      "creatorId": "string",
                                      "lastModifyDateTime": "2020-07-13T15:23:14.694Z",
                                      "lastModifierId": "string",
                                      "purgeDate": "2020-07-13"
                                    },
                                    "id": "string",
                                    "type": "string"
                                  },
                                  "payeeAddressCount": 0,
                                  "payeeReferenceCurrency": "string",
                                  "payeeAccountInfo": {
                                    "accountName": "string",
                                    "accountId": {
                                      "id": "string",
                                      "type": "string"
                                    },
                                    "accountNo": "string",
                                    "status": {
                                      "restriction": "string",
                                      "description": "string",
                                      "restricted": true
                                    }
                                  },
                                  "payeeTaxNumber": "string"
                                },
                                "aRNumber": "string",
                                "instructions": [
                                  {
                                    "duration": {
                                      "blockDates": {
                                        "startDate": "2020-07-13",
                                        "endDate": "2020-07-13",
                                        "duration": "string"
                                      },
                                      "sunday": true,
                                      "monday": true,
                                      "tuesday": true,
                                      "wednesday": true,
                                      "thursday": true,
                                      "friday": true,
                                      "saturday": true,
                                      "daily": true
                                    },
                                    "transactionCodes": [
                                      {
                                        "description": "string",
                                        "transactionGroup": "string",
                                        "transactionSubGroup": "string",
                                        "universalProductCode": "string",
                                        "routingInstructionsId": 0,
                                        "articles": [
                                          {
                                            "description": "string",
                                            "transactionCode": "string",
                                            "price": {
                                              "amount": 0,
                                              "currencyCode": "string"
                                            },
                                            "postIt": {
                                              "availableForPostIt": true,
                                              "color": "Red"
                                            },
                                            "universalProductCode": "string",
                                            "hotelId": "string",
                                            "articleCode": "string",
                                            "inactive": true,
                                            "orderSequence": 0
                                          }
                                        ],
                                        "transactionCode": "string",
                                        "hotelId": "string",
                                        "printTrxReceipt": true
                                      }
                                    ],
                                    "billingInstructions": [
                                      {
                                        "desc": "string",
                                        "routingInstructionsId": 0,
                                        "billingCode": "string",
                                        "hotelId": "string"
                                      }
                                    ],
                                    "creditLimit": 0,
                                    "percentageLimit": 0,
                                    "covers": 0,
                                    "limitUsed": 0,
                                    "routingLinkId": {
                                      "id": "string",
                                      "type": "string"
                                    }
                                  }
                                ],
                                "folioWindowNo": 0,
                                "paymentMethod": "string"
                              },
                              "functionSpaceDetails": {
                                "roomId": "string",
                                "guestNameId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "guestDisplayName": "string",
                                "reservationNameId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "instructions": [
                                  {
                                    "duration": {
                                      "blockDates": {
                                        "startDate": "2020-07-13",
                                        "endDate": "2020-07-13",
                                        "duration": "string"
                                      },
                                      "sunday": true,
                                      "monday": true,
                                      "tuesday": true,
                                      "wednesday": true,
                                      "thursday": true,
                                      "friday": true,
                                      "saturday": true,
                                      "daily": true
                                    },
                                    "transactionCodes": [
                                      {
                                        "description": "string",
                                        "transactionGroup": "string",
                                        "transactionSubGroup": "string",
                                        "universalProductCode": "string",
                                        "routingInstructionsId": 0,
                                        "articles": [
                                          {
                                            "description": "string",
                                            "transactionCode": "string",
                                            "price": {
                                              "amount": 0,
                                              "currencyCode": "string"
                                            },
                                            "postIt": {
                                              "availableForPostIt": true,
                                              "color": "Red"
                                            },
                                            "universalProductCode": "string",
                                            "hotelId": "string",
                                            "articleCode": "string",
                                            "inactive": true,
                                            "orderSequence": 0
                                          }
                                        ],
                                        "transactionCode": "string",
                                        "hotelId": "string",
                                        "printTrxReceipt": true
                                      }
                                    ],
                                    "billingInstructions": [
                                      {
                                        "desc": "string",
                                        "routingInstructionsId": 0,
                                        "billingCode": "string",
                                        "hotelId": "string"
                                      }
                                    ],
                                    "creditLimit": 0,
                                    "percentageLimit": 0,
                                    "covers": 0,
                                    "limitUsed": 0,
                                    "routingLinkId": {
                                      "id": "string",
                                      "type": "string"
                                    }
                                  }
                                ]
                              },
                              "request": {
                                "compRequestInfo": {
                                  "requestedBy": {
                                    "userId": 0,
                                    "userName": "string"
                                  },
                                  "comments": "string",
                                  "declinedBy": {
                                    "userId": 0,
                                    "userName": "string"
                                  },
                                  "status": "Request"
                                },
                                "instructions": [
                                  {
                                    "duration": {
                                      "blockDates": {
                                        "startDate": "2020-07-13",
                                        "endDate": "2020-07-13",
                                        "duration": "string"
                                      },
                                      "sunday": true,
                                      "monday": true,
                                      "tuesday": true,
                                      "wednesday": true,
                                      "thursday": true,
                                      "friday": true,
                                      "saturday": true,
                                      "daily": true
                                    },
                                    "transactionCodes": [
                                      {
                                        "description": "string",
                                        "transactionGroup": "string",
                                        "transactionSubGroup": "string",
                                        "universalProductCode": "string",
                                        "routingInstructionsId": 0,
                                        "articles": [
                                          {
                                            "description": "string",
                                            "transactionCode": "string",
                                            "price": {
                                              "amount": 0,
                                              "currencyCode": "string"
                                            },
                                            "postIt": {
                                              "availableForPostIt": true,
                                              "color": "Red"
                                            },
                                            "universalProductCode": "string",
                                            "hotelId": "string",
                                            "articleCode": "string",
                                            "inactive": true,
                                            "orderSequence": 0
                                          }
                                        ],
                                        "transactionCode": "string",
                                        "hotelId": "string",
                                        "printTrxReceipt": true
                                      }
                                    ],
                                    "billingInstructions": [
                                      {
                                        "desc": "string",
                                        "routingInstructionsId": 0,
                                        "billingCode": "string",
                                        "hotelId": "string"
                                      }
                                    ],
                                    "creditLimit": 0,
                                    "percentageLimit": 0,
                                    "covers": 0,
                                    "limitUsed": 0,
                                    "routingLinkId": {
                                      "id": "string",
                                      "type": "string"
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      ],
                      "hasMore": true,
                      "totalResults": 0,
                      "count": 0
                    },
                    "cateringEventPostings": [
                      {
                        "postId": {
                          "id": "string",
                          "type": "string"
                        },
                        "posted": true,
                        "revenueType": "string",
                        "includedRevenue": true,
                        "revenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "chequeNumber": "string",
                        "transactionCode": "string",
                        "resourceName": "string"
                      }
                    ],
                    "links": [
                      {
                        "href": "string",
                        "rel": "string",
                        "templated": false,
                        "method": "GET",
                        "targetSchema": "string",
                        "operationId": "string",
                        "title": "string"
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response object for retrieving catering events posting after manage them.",
            "schema": {
              "$ref": "#/definitions/cateringEventPostings"
            },
            "examples": {
              "application/json": {
                "postingMasterReservations": {
                  "reservation": [
                    {
                      "hotelReservation": {
                        "reservationIdList": [
                          {
                            "id": "string",
                            "type": "string"
                          }
                        ]
                      },
                      "routingInstructions": [
                        {
                          "folio": {
                            "guestInfo": {
                              "profileIdList": [
                                {
                                  "id": "string",
                                  "type": "string"
                                }
                              ]
                            },
                            "payeeInfo": {
                              "payeeId": {
                                "id": "string",
                                "type": "string"
                              },
                              "payeeName": "string",
                              "payeeAddress": {
                                "address": {
                                  "addressLine": [
                                    "string"
                                  ],
                                  "cityName": "string",
                                  "postalCode": "string",
                                  "cityExtension": "string",
                                  "county": "string",
                                  "state": "string",
                                  "country": {
                                    "value": "string",
                                    "code": "string"
                                  },
                                  "language": "string",
                                  "type": "string",
                                  "typeDescription": "string",
                                  "primaryInd": true,
                                  "updateReservations": true,
                                  "barCode": "string",
                                  "createDateTime": "2020-07-13T15:23:14.694Z",
                                  "creatorId": "string",
                                  "lastModifyDateTime": "2020-07-13T15:23:14.694Z",
                                  "lastModifierId": "string",
                                  "purgeDate": "2020-07-13"
                                },
                                "id": "string",
                                "type": "string"
                              },
                              "payeeAddressCount": 0,
                              "payeeReferenceCurrency": "string",
                              "payeeAccountInfo": {
                                "accountName": "string",
                                "accountId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "accountNo": "string",
                                "status": {
                                  "restriction": "string",
                                  "description": "string",
                                  "restricted": true
                                }
                              },
                              "payeeTaxNumber": "string"
                            },
                            "aRNumber": "string",
                            "instructions": [
                              {
                                "duration": {
                                  "blockDates": {
                                    "startDate": "2020-07-13",
                                    "endDate": "2020-07-13",
                                    "duration": "string"
                                  },
                                  "sunday": true,
                                  "monday": true,
                                  "tuesday": true,
                                  "wednesday": true,
                                  "thursday": true,
                                  "friday": true,
                                  "saturday": true,
                                  "daily": true
                                },
                                "transactionCodes": [
                                  {
                                    "description": "string",
                                    "transactionGroup": "string",
                                    "transactionSubGroup": "string",
                                    "universalProductCode": "string",
                                    "routingInstructionsId": 0,
                                    "articles": [
                                      {
                                        "description": "string",
                                        "transactionCode": "string",
                                        "price": {
                                          "amount": 0,
                                          "currencyCode": "string"
                                        },
                                        "postIt": {
                                          "availableForPostIt": true,
                                          "color": "Red"
                                        },
                                        "universalProductCode": "string",
                                        "hotelId": "string",
                                        "articleCode": "string",
                                        "inactive": true,
                                        "orderSequence": 0
                                      }
                                    ],
                                    "transactionCode": "string",
                                    "hotelId": "string",
                                    "printTrxReceipt": true
                                  }
                                ],
                                "billingInstructions": [
                                  {
                                    "desc": "string",
                                    "routingInstructionsId": 0,
                                    "billingCode": "string",
                                    "hotelId": "string"
                                  }
                                ],
                                "creditLimit": 0,
                                "percentageLimit": 0,
                                "covers": 0,
                                "limitUsed": 0,
                                "routingLinkId": {
                                  "id": "string",
                                  "type": "string"
                                }
                              }
                            ],
                            "folioWindowNo": 0,
                            "paymentMethod": "string"
                          },
                          "functionSpaceDetails": {
                            "roomId": "string",
                            "guestNameId": {
                              "id": "string",
                              "type": "string"
                            },
                            "guestDisplayName": "string",
                            "reservationNameId": {
                              "id": "string",
                              "type": "string"
                            },
                            "instructions": [
                              {
                                "duration": {
                                  "blockDates": {
                                    "startDate": "2020-07-13",
                                    "endDate": "2020-07-13",
                                    "duration": "string"
                                  },
                                  "sunday": true,
                                  "monday": true,
                                  "tuesday": true,
                                  "wednesday": true,
                                  "thursday": true,
                                  "friday": true,
                                  "saturday": true,
                                  "daily": true
                                },
                                "transactionCodes": [
                                  {
                                    "description": "string",
                                    "transactionGroup": "string",
                                    "transactionSubGroup": "string",
                                    "universalProductCode": "string",
                                    "routingInstructionsId": 0,
                                    "articles": [
                                      {
                                        "description": "string",
                                        "transactionCode": "string",
                                        "price": {
                                          "amount": 0,
                                          "currencyCode": "string"
                                        },
                                        "postIt": {
                                          "availableForPostIt": true,
                                          "color": "Red"
                                        },
                                        "universalProductCode": "string",
                                        "hotelId": "string",
                                        "articleCode": "string",
                                        "inactive": true,
                                        "orderSequence": 0
                                      }
                                    ],
                                    "transactionCode": "string",
                                    "hotelId": "string",
                                    "printTrxReceipt": true
                                  }
                                ],
                                "billingInstructions": [
                                  {
                                    "desc": "string",
                                    "routingInstructionsId": 0,
                                    "billingCode": "string",
                                    "hotelId": "string"
                                  }
                                ],
                                "creditLimit": 0,
                                "percentageLimit": 0,
                                "covers": 0,
                                "limitUsed": 0,
                                "routingLinkId": {
                                  "id": "string",
                                  "type": "string"
                                }
                              }
                            ]
                          },
                          "request": {
                            "compRequestInfo": {
                              "requestedBy": {
                                "userId": 0,
                                "userName": "string"
                              },
                              "comments": "string",
                              "declinedBy": {
                                "userId": 0,
                                "userName": "string"
                              },
                              "status": "Request"
                            },
                            "instructions": [
                              {
                                "duration": {
                                  "blockDates": {
                                    "startDate": "2020-07-13",
                                    "endDate": "2020-07-13",
                                    "duration": "string"
                                  },
                                  "sunday": true,
                                  "monday": true,
                                  "tuesday": true,
                                  "wednesday": true,
                                  "thursday": true,
                                  "friday": true,
                                  "saturday": true,
                                  "daily": true
                                },
                                "transactionCodes": [
                                  {
                                    "description": "string",
                                    "transactionGroup": "string",
                                    "transactionSubGroup": "string",
                                    "universalProductCode": "string",
                                    "routingInstructionsId": 0,
                                    "articles": [
                                      {
                                        "description": "string",
                                        "transactionCode": "string",
                                        "price": {
                                          "amount": 0,
                                          "currencyCode": "string"
                                        },
                                        "postIt": {
                                          "availableForPostIt": true,
                                          "color": "Red"
                                        },
                                        "universalProductCode": "string",
                                        "hotelId": "string",
                                        "articleCode": "string",
                                        "inactive": true,
                                        "orderSequence": 0
                                      }
                                    ],
                                    "transactionCode": "string",
                                    "hotelId": "string",
                                    "printTrxReceipt": true
                                  }
                                ],
                                "billingInstructions": [
                                  {
                                    "desc": "string",
                                    "routingInstructionsId": 0,
                                    "billingCode": "string",
                                    "hotelId": "string"
                                  }
                                ],
                                "creditLimit": 0,
                                "percentageLimit": 0,
                                "covers": 0,
                                "limitUsed": 0,
                                "routingLinkId": {
                                  "id": "string",
                                  "type": "string"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ],
                  "hasMore": true,
                  "totalResults": 0,
                  "count": 0
                },
                "cateringEventPostings": [
                  {
                    "postId": {
                      "id": "string",
                      "type": "string"
                    },
                    "posted": true,
                    "revenueType": "string",
                    "includedRevenue": true,
                    "revenue": {
                      "amount": 0,
                      "currencyCode": "string"
                    },
                    "chequeNumber": "string",
                    "transactionCode": "string",
                    "resourceName": "string"
                  }
                ],
                "links": [
                  {
                    "href": "string",
                    "rel": "string",
                    "templated": false,
                    "method": "GET",
                    "targetSchema": "string",
                    "operationId": "string",
                    "title": "string"
                  }
                ]
              }
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      }
    },
    "/hotels/{hotelId}/events/{eventId}/eventResources/{quickInsertId}": {
      "post": {
        "summary": "Add Resource to an Event in a hotel by ID",
        "description": "Use this to add a configured resource to a Catering Event. The Catering Event ID and Quick Insert number of a Catering Menu or Miscellaneous Item or a Template name must be provided. <p><strong>OperationId:</strong>postQuickInsertResources</p>",
        "operationId": "postQuickInsertResources",
        "parameters": [
          {
            "name": "quickInsertId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Menu/Item quick insert ID or Item Template name"
          },
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the event"
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "quickInsertResources",
            "in": "body",
            "required": true,
            "description": "Request object for quick insert of menu(s),item(s) or item template(s).",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/quickInsertResources"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response object for quick insert of menu(s), item(s) or item template(s).",
            "schema": {
              "$ref": "#/definitions/quickInsertResourceStatus"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      }
    },
    "/hotels/{hotelId}/eventsResources": {
      "get": {
        "summary": "Get Event Resources",
        "description": "Event Resources are the items and menus the property provides as part of its events offerings. Use this API to retrieve the Event resources as per your requested parameters. <p><strong>OperationId:</strong>getEventsResources</p>",
        "operationId": "getEventsResources",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "blockId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "eventIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching event resources.",
            "schema": {
              "$ref": "#/definitions/eventsResources"
            }
          },
          "204": {
            "description": "EventsResources not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      },
      "put": {
        "summary": "Update Events Resources",
        "description": "Update the details of an existing event resource on an event in OPERA Cloud. <p><strong>OperationId:</strong>changeEventsResources</p>",
        "operationId": "changeEventsResources",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "manageEventsResources",
            "in": "body",
            "required": true,
            "description": "Request object for managing events resources.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/manageEventsResources"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/manageEventsResources"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      }
    },
    "/hotels/{hotelId}/fetchBlockPostingAccountReservations": {
      "get": {
        "summary": "Get Catering Event postings",
        "description": "Retrieve the catering event posting on an event. <p><strong>OperationId:</strong>getBlockPostingAccountReservations</p>",
        "operationId": "getBlockPostingAccountReservations",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "blockId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for retrieving block Posting account reservations.",
            "schema": {
              "$ref": "#/definitions/blockPostingAccountReservationsInfo"
            }
          },
          "204": {
            "description": "BlockPostingAccountReservations not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      }
    },
    "/hotels/{hotelId}/functionalSpace": {
      "get": {
        "summary": "Get hotel's function space availability",
        "description": "Find the availability of a properties function space. <p><strong>OperationId:</strong>getFunctionSpaceAvailability</p> <p>This API allows a time span of <strong>21</strong> days.</p>",
        "operationId": "getFunctionSpaceAvailability",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "checkInventory",
            "in": "query",
            "required": false,
            "description": "Flag that indicates if when quering for availability inventory should be checked or not.",
            "type": "boolean"
          },
          {
            "name": "eventEndDate",
            "in": "query",
            "required": false,
            "description": "The ending value of the time span.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "physicalRoom",
            "in": "query",
            "required": false,
            "description": "Determines whether to fetch only physical meeting rooms or not.",
            "type": "boolean"
          },
          {
            "name": "showForceAlternate",
            "in": "query",
            "required": false,
            "description": "Flag that indicates if the result includes force alternate function spaces.",
            "type": "boolean"
          },
          {
            "name": "eventStartDate",
            "in": "query",
            "required": false,
            "description": "The starting value of the time span.",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "roomCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 40
            },
            "required": false
          },
          {
            "name": "roomType",
            "in": "query",
            "required": false,
            "description": "Room Type where function space belongs to",
            "type": "string"
          },
          {
            "name": "spaceType",
            "in": "query",
            "required": false,
            "description": "Space Type where function space belongs to",
            "type": "string"
          },
          {
            "name": "functionSpaceWildcard",
            "in": "query",
            "required": false,
            "description": "Wild search on Room Code and Function Name.",
            "type": "string"
          },
          {
            "name": "floorCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 40
            },
            "required": false
          },
          {
            "name": "locationCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 40
            },
            "required": false
          },
          {
            "name": "spaceTypes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 40
            },
            "required": false
          },
          {
            "name": "fetchInstructions",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Instruction to fetch only function space count.",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "FunctionSpaceCount"
              ]
            },
            "required": false
          },
          {
            "name": "functionSpaceSearchMode",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A collection of prime search modes for fetching Function Space availability",
            "uniqueItems": true,
            "enum": [
              "Share",
              "Noshare",
              "Both"
            ]
          },
          {
            "name": "functionSpaceAdditionalSearchMode",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A collection of additional search modes for fetching Function Space availability.",
            "uniqueItems": true,
            "enum": [
              "Individual",
              "Combo",
              "Both"
            ]
          },
          {
            "name": "attendeesFrom",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "attendeesTo",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "areaFrom",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "areaTo",
            "in": "query",
            "required": false,
            "type": "number"
          },
          {
            "name": "setupCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 40
            },
            "required": false
          },
          {
            "name": "masterRateCode",
            "in": "query",
            "required": false,
            "description": "Rate Code used by master function space.",
            "type": "string"
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "description": "A monetary amount.",
            "type": "number"
          },
          {
            "name": "currencyCode",
            "in": "query",
            "required": false,
            "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
            "type": "string"
          },
          {
            "name": "masterSetupCode",
            "in": "query",
            "required": false,
            "description": "Setup Code used by master function space.",
            "type": "string"
          },
          {
            "name": "setupTime",
            "in": "query",
            "required": false,
            "description": "Setup time in minutes.",
            "type": "integer"
          },
          {
            "name": "setdownTime",
            "in": "query",
            "required": false,
            "description": "Setdown time in minutes.",
            "type": "integer"
          },
          {
            "name": "resvNameId",
            "in": "query",
            "required": false,
            "description": "Internal ID of reservation, which currently holds the Function Space and which needs to be excluded while checking the Function Space availability",
            "type": "number"
          },
          {
            "name": "eventTypeCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 40
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for retrieving availability for catering function spaces.",
            "schema": {
              "$ref": "#/definitions/functionSpaceAvailabilityDetails"
            }
          },
          "204": {
            "description": "FunctionSpaceAvailability not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      }
    },
    "/hotels/{hotelId}/functionalSpaceEvents": {
      "get": {
        "summary": "Get shared function space events",
        "description": "This API will allow you to see if events are booked into the same space at the same or overlapping time. <p><strong>OperationId:</strong>getSharedFunctionSpaceEvents</p> <p>This API allows a time span of <strong>21</strong> days.</p>",
        "operationId": "getSharedFunctionSpaceEvents",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "functionSpaceCode",
            "in": "query",
            "required": false,
            "description": "Function space from which shared events will be fetched.",
            "type": "string"
          },
          {
            "name": "startDateTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDateTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching events shared by function space.",
            "schema": {
              "$ref": "#/definitions/functionSpaceEvents"
            }
          },
          "204": {
            "description": "SharedFunctionSpaceEvents not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      }
    },
    "/hotels/{hotelId}/waitListedEvents": {
      "get": {
        "summary": "Retreve Waitlisted Events ",
        "description": "Search for waitlisted events for a specified property.  You can narrow down the results by using filters in the request. <p><strong>OperationId:</strong>getWaitlistedEvents</p> <p>This API allows a time span of <strong>21</strong> days.</p>",
        "operationId": "getWaitlistedEvents",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "functionSpaceCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "accountName",
            "in": "query",
            "required": false,
            "description": "Search a specific account's waitlisted events.",
            "type": "string"
          },
          {
            "name": "blockName",
            "in": "query",
            "required": false,
            "description": "Search a specific block's waitlisted events.",
            "type": "string"
          },
          {
            "name": "blockId",
            "in": "query",
            "required": false,
            "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
            "type": "string"
          },
          {
            "name": "blockIdContext",
            "in": "query",
            "required": false,
            "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
            "type": "string"
          },
          {
            "name": "blockIdType",
            "in": "query",
            "required": false,
            "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
            "type": "string"
          },
          {
            "name": "startDateTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDateTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for retrieving waitlisted and current events holding the function space.",
            "schema": {
              "$ref": "#/definitions/waitlistedEvents"
            },
            "examples": {
              "application/json": {
                "eventResourceDetails": {
                  "eventDetailInfo": {
                    "eventPrimaryInfo": {
                      "eventId": {
                        "url": "string",
                        "type": "string",
                        "instance": "string",
                        "idContext": "string",
                        "id": "string",
                        "idExtension": 0
                      },
                      "hotelId": "string",
                      "includeSubEvents": true
                    },
                    "eventDetail": {
                      "eventName": {
                        "defaultText": "string",
                        "translations": {
                          "text": [
                            {
                              "value": "string",
                              "language": "string"
                            }
                          ]
                        }
                      },
                      "eventType": "string",
                      "eventTimeSpan": {
                        "startDateTime": "2020-07-13T15:32:09.635Z",
                        "endDateTime": "2020-07-13T15:32:09.635Z"
                      },
                      "eventStatus": {
                        "status": {
                          "code": "string",
                          "description": "string"
                        },
                        "color": "White"
                      },
                      "waitlistReturnStatus": {
                        "status": {
                          "code": "string",
                          "description": "string"
                        },
                        "color": "White"
                      },
                      "cateringStatusType": "Waitlist",
                      "attendees": {
                        "expected": 0,
                        "guaranteed": 0,
                        "actual": 0,
                        "set": 0,
                        "billed": 0,
                        "packageExpected": 0,
                        "packageGuaranteed": 0,
                        "packageActual": 0,
                        "packageBilled": 0
                      },
                      "masterEventId": {
                        "id": "string",
                        "type": "string"
                      },
                      "doorcard": "string",
                      "eventLink": {
                        "id": {
                          "id": "string",
                          "type": "string"
                        },
                        "type": "SubEvent",
                        "masterEventDates": {
                          "startDateTime": "2020-07-13T15:32:09.635Z",
                          "endDateTime": "2020-07-13T15:32:09.635Z"
                        }
                      },
                      "inactiveDate": "2020-07-13",
                      "packageId": 0,
                      "packageName": "string",
                      "masterEvent": true,
                      "subEvent": true,
                      "packageEvent": true,
                      "alternateEvent": true,
                      "waitlisted": true,
                      "notMoveable": true,
                      "loudEvent": true,
                      "hasPostings": true,
                      "displayDoorcard": true,
                      "cateringDeductInventory": true,
                      "eventShared": true,
                      "createDateTime": "2020-07-13T15:32:09.635Z",
                      "creatorId": "string",
                      "lastModifyDateTime": "2020-07-13T15:32:09.635Z",
                      "lastModifierId": "string",
                      "purgeDate": "2020-07-13",
                      "includeSpaceInPackage": true,
                      "eventLevelRevenueActualization": true
                    },
                    "eventResources": [
                      {
                        "resourceId": {
                          "url": "string",
                          "type": "string",
                          "instance": "string",
                          "idContext": "string",
                          "id": "string",
                          "idExtension": 0
                        },
                        "resourceType": "FunctionSpace",
                        "resourceName": "string",
                        "setupCode": "string",
                        "itemAttribute": "string",
                        "quantity": 0,
                        "hours": 0,
                        "persons": 0,
                        "quantityIncluded": 0,
                        "quantityExcluded": 0,
                        "unitPrice": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "revenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "rentalCode": "string",
                        "discount": 0,
                        "eventResourceNotes": [
                          {
                            "noteId": {
                              "id": "string",
                              "type": "string"
                            },
                            "noteCode": "string",
                            "internal": true,
                            "noteTitle": "string",
                            "comment": "string",
                            "sequence": 0,
                            "createDateTime": "2020-07-13T15:32:09.635Z",
                            "creatorId": "string",
                            "lastModifyDateTime": "2020-07-13T15:32:09.635Z",
                            "lastModifierId": "string",
                            "purgeDate": "2020-07-13"
                          }
                        ],
                        "sellStartDate": "2020-07-13",
                        "sellEndDate": "2020-07-13",
                        "eventStartDate": "2020-07-13",
                        "eventEndDate": "2020-07-13",
                        "consumptionBased": true,
                        "multiChoice": true,
                        "hotelId": "string",
                        "order": "string",
                        "hasDiscountMenuItem": true,
                        "hasNotes": true,
                        "external": true,
                        "custom": true,
                        "packaged": true
                      }
                    ],
                    "processInstructions": {
                      "overrideCapacity": true,
                      "overbook": true,
                      "shareable": true,
                      "overrideMaxgroups": true,
                      "waitList": true,
                      "warnFunctionSpace": true
                    },
                    "eventBlockInfo": {
                      "blockIdList": [
                        {
                          "id": "string",
                          "type": "string"
                        }
                      ]
                    },
                    "functionSpaceInformation": {
                      "functionSpaceCode": "string",
                      "functionSpaceDescription": "string",
                      "setupCode": "string",
                      "setupDescription": "string",
                      "setupTime": 0,
                      "setdownTime": 0,
                      "rentalCode": "string",
                      "rateDesc": "string",
                      "rentalAmount": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "discountPercentage": 0,
                      "minimumOccupancy": 0,
                      "maximumOccupancy": 0,
                      "shareable": true,
                      "comboSpace": true,
                      "elementSpace": true
                    },
                    "eventNotes": [
                      {
                        "noteId": {
                          "id": "string",
                          "type": "string"
                        },
                        "noteCode": "string",
                        "internal": true,
                        "noteTitle": "string",
                        "comment": "string",
                        "sequence": 0,
                        "createDateTime": "2020-07-13T15:32:09.654Z",
                        "creatorId": "string",
                        "lastModifyDateTime": "2020-07-13T15:32:09.654Z",
                        "lastModifierId": "string",
                        "purgeDate": "2020-07-13"
                      }
                    ],
                    "eventIndicators": [
                      {
                        "indicatorName": "string",
                        "count": 0
                      }
                    ],
                    "onTheBooksRevenue": {
                      "amount": 0,
                      "currencyCode": "string"
                    },
                    "subEventsDetail": [
                      {
                        "eventPrimaryInfo": {
                          "eventId": {
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0
                          },
                          "hotelId": "string",
                          "includeSubEvents": true
                        },
                        "eventDetail": {
                          "eventName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "eventType": "string",
                          "eventTimeSpan": {
                            "startDateTime": "2020-07-13T15:32:09.654Z",
                            "endDateTime": "2020-07-13T15:32:09.654Z"
                          },
                          "eventStatus": {
                            "status": {
                              "code": "string",
                              "description": "string"
                            },
                            "color": "White"
                          },
                          "waitlistReturnStatus": {
                            "status": {
                              "code": "string",
                              "description": "string"
                            },
                            "color": "White"
                          },
                          "cateringStatusType": "Waitlist",
                          "attendees": {
                            "expected": 0,
                            "guaranteed": 0,
                            "actual": 0,
                            "set": 0,
                            "billed": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0
                          },
                          "masterEventId": {
                            "id": "string",
                            "type": "string"
                          },
                          "doorcard": "string",
                          "eventLink": {
                            "id": {
                              "id": "string",
                              "type": "string"
                            },
                            "type": "SubEvent",
                            "masterEventDates": {
                              "startDateTime": "2020-07-13T15:32:09.654Z",
                              "endDateTime": "2020-07-13T15:32:09.654Z"
                            }
                          },
                          "inactiveDate": "2020-07-13",
                          "packageId": 0,
                          "packageName": "string",
                          "masterEvent": true,
                          "subEvent": true,
                          "packageEvent": true,
                          "alternateEvent": true,
                          "waitlisted": true,
                          "notMoveable": true,
                          "loudEvent": true,
                          "hasPostings": true,
                          "displayDoorcard": true,
                          "cateringDeductInventory": true,
                          "eventShared": true,
                          "createDateTime": "2020-07-13T15:32:09.654Z",
                          "creatorId": "string",
                          "lastModifyDateTime": "2020-07-13T15:32:09.654Z",
                          "lastModifierId": "string",
                          "purgeDate": "2020-07-13",
                          "includeSpaceInPackage": true,
                          "eventLevelRevenueActualization": true
                        },
                        "functionSpaceInformation": {
                          "functionSpaceCode": "string",
                          "functionSpaceDescription": "string",
                          "setupCode": "string",
                          "setupDescription": "string",
                          "setupTime": 0,
                          "setdownTime": 0,
                          "rentalCode": "string",
                          "rateDesc": "string",
                          "rentalAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "discountPercentage": 0,
                          "minimumOccupancy": 0,
                          "maximumOccupancy": 0,
                          "shareable": true,
                          "comboSpace": true,
                          "elementSpace": true
                        }
                      }
                    ],
                    "altEventsDetail": [
                      {
                        "eventPrimaryInfo": {
                          "eventId": {
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0
                          },
                          "hotelId": "string",
                          "includeSubEvents": true
                        },
                        "eventDetail": {
                          "eventName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "eventType": "string",
                          "eventTimeSpan": {
                            "startDateTime": "2020-07-13T15:32:09.654Z",
                            "endDateTime": "2020-07-13T15:32:09.654Z"
                          },
                          "eventStatus": {
                            "status": {
                              "code": "string",
                              "description": "string"
                            },
                            "color": "White"
                          },
                          "waitlistReturnStatus": {
                            "status": {
                              "code": "string",
                              "description": "string"
                            },
                            "color": "White"
                          },
                          "cateringStatusType": "Waitlist",
                          "attendees": {
                            "expected": 0,
                            "guaranteed": 0,
                            "actual": 0,
                            "set": 0,
                            "billed": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0
                          },
                          "masterEventId": {
                            "id": "string",
                            "type": "string"
                          },
                          "doorcard": "string",
                          "eventLink": {
                            "id": {
                              "id": "string",
                              "type": "string"
                            },
                            "type": "SubEvent",
                            "masterEventDates": {
                              "startDateTime": "2020-07-13T15:32:09.654Z",
                              "endDateTime": "2020-07-13T15:32:09.654Z"
                            }
                          },
                          "inactiveDate": "2020-07-13",
                          "packageId": 0,
                          "packageName": "string",
                          "masterEvent": true,
                          "subEvent": true,
                          "packageEvent": true,
                          "alternateEvent": true,
                          "waitlisted": true,
                          "notMoveable": true,
                          "loudEvent": true,
                          "hasPostings": true,
                          "displayDoorcard": true,
                          "cateringDeductInventory": true,
                          "eventShared": true,
                          "createDateTime": "2020-07-13T15:32:09.654Z",
                          "creatorId": "string",
                          "lastModifyDateTime": "2020-07-13T15:32:09.654Z",
                          "lastModifierId": "string",
                          "purgeDate": "2020-07-13",
                          "includeSpaceInPackage": true,
                          "eventLevelRevenueActualization": true
                        },
                        "functionSpaceInformation": {
                          "functionSpaceCode": "string",
                          "functionSpaceDescription": "string",
                          "setupCode": "string",
                          "setupDescription": "string",
                          "setupTime": 0,
                          "setdownTime": 0,
                          "rentalCode": "string",
                          "rateDesc": "string",
                          "rentalAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "discountPercentage": 0,
                          "minimumOccupancy": 0,
                          "maximumOccupancy": 0,
                          "shareable": true,
                          "comboSpace": true,
                          "elementSpace": true
                        }
                      }
                    ],
                    "masterEventDetail": {
                      "eventPrimaryInfo": {
                        "eventId": {
                          "url": "string",
                          "type": "string",
                          "instance": "string",
                          "idContext": "string",
                          "id": "string",
                          "idExtension": 0
                        },
                        "hotelId": "string",
                        "includeSubEvents": true
                      },
                      "eventDetail": {
                        "eventName": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "value": "string",
                                "language": "string"
                              }
                            ]
                          }
                        },
                        "eventType": "string",
                        "eventTimeSpan": {
                          "startDateTime": "2020-07-13T15:32:09.654Z",
                          "endDateTime": "2020-07-13T15:32:09.654Z"
                        },
                        "eventStatus": {
                          "status": {
                            "code": "string",
                            "description": "string"
                          },
                          "color": "White"
                        },
                        "waitlistReturnStatus": {
                          "status": {
                            "code": "string",
                            "description": "string"
                          },
                          "color": "White"
                        },
                        "cateringStatusType": "Waitlist",
                        "attendees": {
                          "expected": 0,
                          "guaranteed": 0,
                          "actual": 0,
                          "set": 0,
                          "billed": 0,
                          "packageExpected": 0,
                          "packageGuaranteed": 0,
                          "packageActual": 0,
                          "packageBilled": 0
                        },
                        "masterEventId": {
                          "id": "string",
                          "type": "string"
                        },
                        "doorcard": "string",
                        "eventLink": {
                          "id": {
                            "id": "string",
                            "type": "string"
                          },
                          "type": "SubEvent",
                          "masterEventDates": {
                            "startDateTime": "2020-07-13T15:32:09.654Z",
                            "endDateTime": "2020-07-13T15:32:09.654Z"
                          }
                        },
                        "inactiveDate": "2020-07-13",
                        "packageId": 0,
                        "packageName": "string",
                        "masterEvent": true,
                        "subEvent": true,
                        "packageEvent": true,
                        "alternateEvent": true,
                        "waitlisted": true,
                        "notMoveable": true,
                        "loudEvent": true,
                        "hasPostings": true,
                        "displayDoorcard": true,
                        "cateringDeductInventory": true,
                        "eventShared": true,
                        "createDateTime": "2020-07-13T15:32:09.654Z",
                        "creatorId": "string",
                        "lastModifyDateTime": "2020-07-13T15:32:09.654Z",
                        "lastModifierId": "string",
                        "purgeDate": "2020-07-13",
                        "includeSpaceInPackage": true,
                        "eventLevelRevenueActualization": true
                      },
                      "functionSpaceInformation": {
                        "functionSpaceCode": "string",
                        "functionSpaceDescription": "string",
                        "setupCode": "string",
                        "setupDescription": "string",
                        "setupTime": 0,
                        "setdownTime": 0,
                        "rentalCode": "string",
                        "rateDesc": "string",
                        "rentalAmount": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "discountPercentage": 0,
                        "minimumOccupancy": 0,
                        "maximumOccupancy": 0,
                        "shareable": true,
                        "comboSpace": true,
                        "elementSpace": true
                      }
                    },
                    "eventRevenues": {
                      "eventRevenueInformation": [
                        {
                          "revenueType": {
                            "code": "string",
                            "translatableDescription": {
                              "defaultText": "string",
                              "translations": {
                                "text": [
                                  {
                                    "value": "string",
                                    "language": "string"
                                  }
                                ]
                              }
                            },
                            "displaySequence": 0,
                            "revenueGroup": "string",
                            "foodAndBeverage": true,
                            "inactive": true,
                            "revenueDetails": [
                              {
                                "hotelId": "string",
                                "revenueMinimum": true,
                                "tax": 0
                              }
                            ]
                          },
                          "forecastRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "expectedRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "guaranteedRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "onTheBooksRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "billedRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "actualRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "totalCost": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "flatForecastRevenue": true,
                          "custom": true,
                          "ignoreForecast": true,
                          "packaged": true,
                          "orderBy": 0
                        }
                      ],
                      "currencyCode": "string",
                      "excludeFromForecast": true,
                      "useForecastRevenue": true,
                      "eventLevelRevenueActualization": true
                    }
                  },
                  "menu": {
                    "eventMenuId": {
                      "id": "string",
                      "type": "string"
                    },
                    "eventMenu": {
                      "basicInfo": {
                        "className": "string",
                        "name": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "value": "string",
                                "language": "string"
                              }
                            ]
                          }
                        },
                        "restriction": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "value": "string",
                                "language": "string"
                              }
                            ]
                          }
                        },
                        "description": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "value": "string",
                                "language": "string"
                              }
                            ]
                          }
                        },
                        "dietaryList": [
                          "string"
                        ],
                        "eventTypes": [
                          "string"
                        ],
                        "type": "Food",
                        "quickInsertCode": "string",
                        "servingType": "Pp",
                        "servingSize": "string",
                        "includedInMenu": true,
                        "consumptionBased": true,
                        "sellDateRange": {
                          "eventStartDate": "2020-07-13",
                          "eventEndDate": "2020-07-13"
                        },
                        "eventDateRange": {
                          "eventStartDate": "2020-07-13",
                          "eventEndDate": "2020-07-13"
                        },
                        "menusSold": 0,
                        "webBookable": true,
                        "inactive": true,
                        "salesPrice": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "includedInPrice": true,
                        "multiChoice": true,
                        "courseCount": 0,
                        "menuId": {
                          "id": "string",
                          "type": "string"
                        },
                        "serveStartEndTime": {
                          "eventStartDate": "2020-07-13T15:32:09.655Z",
                          "eventEndDate": "2020-07-13T15:32:09.655Z"
                        },
                        "attendees": {
                          "expected": 0,
                          "guaranteed": 0,
                          "actual": 0,
                          "set": 0,
                          "billed": 0,
                          "packageExpected": 0,
                          "packageGuaranteed": 0,
                          "packageActual": 0,
                          "packageBilled": 0
                        },
                        "discountPercentage": 0,
                        "order": 0,
                        "hotelId": "string"
                      },
                      "revenues": [
                        {
                          "revenueType": "string",
                          "type": "Food",
                          "cost": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "internalQuote": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "costMargin": 0,
                          "price": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "priceMargin": 0,
                          "resourceId": {
                            "id": "string",
                            "type": "string"
                          },
                          "custom": true
                        }
                      ],
                      "menuItems": [
                        {
                          "id": {
                            "id": "string",
                            "type": "string"
                          },
                          "hotelId": "string",
                          "classInfo": {
                            "code": "string",
                            "description": "string"
                          },
                          "name1": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "name2": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "name3": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "origin1": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "origin2": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "menuType": "Food",
                          "custom": true,
                          "year": 0,
                          "restriction": "string",
                          "description": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "eventTypes": [
                            "string"
                          ],
                          "responsibleDepartments": [
                            "string"
                          ],
                          "quickInsertCode": "string",
                          "revenueType": "string",
                          "salesPrice": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "cost": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "itemConsumption": true,
                          "container": {
                            "code": "string",
                            "description": "string"
                          },
                          "portion": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "servings": 0,
                          "webBookable": true,
                          "print": true,
                          "inactive": true,
                          "includedYN": true,
                          "eventMenuDetailID": {
                            "id": "string",
                            "type": "string"
                          },
                          "course": 0,
                          "courseOrder": 0,
                          "attendees": {
                            "expected": 0,
                            "guaranteed": 0,
                            "actual": 0,
                            "set": 0,
                            "billed": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0
                          },
                          "discountPercentage": 0,
                          "demandFactor": 0,
                          "mandatoryYN": true
                        }
                      ],
                      "hotelId": "string"
                    }
                  },
                  "item": {
                    "eventItemId": {
                      "id": "string",
                      "type": "string"
                    },
                    "eventItem": {
                      "hotelId": "string",
                      "itemId": {
                        "id": "string",
                        "type": "string"
                      },
                      "itemClassId": {
                        "id": "string",
                        "type": "string"
                      },
                      "itemClassCode": "string",
                      "itemClassDescription": "string",
                      "itemName": {
                        "defaultText": "string",
                        "translations": {
                          "text": [
                            {
                              "value": "string",
                              "language": "string"
                            }
                          ]
                        }
                      },
                      "itemDescription": "string",
                      "itemCode": "string",
                      "revenueType": "string",
                      "revenueTypeEditable": true,
                      "externalOrder": true,
                      "print": true,
                      "sellInfo": {
                        "available": {
                          "startDateTime": "2020-07-13T15:32:09.655Z",
                          "endDateTime": "2020-07-13T15:32:09.655Z"
                        },
                        "availableQty": 0,
                        "qtyInStock": 0,
                        "defaultQty": 0,
                        "sellSeparate": true,
                        "sellControl": true,
                        "welcomeOffer": true,
                        "webBookable": true,
                        "itemClassWebBookable": true,
                        "outsideStay": true,
                        "fixedCharge": true,
                        "discountable": true,
                        "itemClassDiscountable": true,
                        "criticalInventory": true,
                        "price": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "defaultDuration": 0
                      },
                      "setupTime": 0,
                      "setdownTime": 0,
                      "traceText": "string",
                      "itemPool": "string",
                      "displaySequence": 0,
                      "eventTypes": [
                        "string"
                      ],
                      "departments": [
                        "string"
                      ],
                      "attributes": [
                        {
                          "itemAttributeId": {
                            "id": "string",
                            "type": "string"
                          },
                          "translatableName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "setupTime": 0,
                          "setdownTime": 0,
                          "default": true
                        }
                      ],
                      "rates": [
                        {
                          "itemRateId": {
                            "id": "string",
                            "type": "string"
                          },
                          "itemRateCode": "string",
                          "name": "string",
                          "price": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "hourly": true,
                          "default": true
                        }
                      ],
                      "vendors": [
                        {
                          "profileId": {
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0
                          },
                          "name": "string",
                          "leadTime": "string",
                          "price": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "priority": 0,
                          "phone": "string",
                          "fax": "string",
                          "email": "string"
                        }
                      ],
                      "resourceNotes": [
                        {
                          "noteId": {
                            "id": "string",
                            "type": "string"
                          },
                          "noteCode": "string",
                          "internal": true,
                          "noteTitle": "string",
                          "comment": "string",
                          "sequence": 0,
                          "createDateTime": "2020-07-13T15:32:09.655Z",
                          "creatorId": "string",
                          "lastModifyDateTime": "2020-07-13T15:32:09.655Z",
                          "lastModifierId": "string",
                          "purgeDate": "2020-07-13"
                        }
                      ],
                      "usedForEvents": true,
                      "usedForReservation": true,
                      "quantity": 0,
                      "attributeId": {
                        "id": "string",
                        "type": "string"
                      },
                      "itemRateId": {
                        "id": "string",
                        "type": "string"
                      },
                      "price": 0,
                      "discount": 0,
                      "priceCode": "string",
                      "internalQuantity": 0,
                      "externalQuantity": 0,
                      "actualInternalQuantity": 0,
                      "actualExternalQuantity": 0,
                      "internalCostPerUnit": 0,
                      "externalCostPerUnit": 0,
                      "actualInternalCostPerUnit": 0,
                      "actualExternalCostPerUnit": 0,
                      "order": 0,
                      "actualQuantity": 0,
                      "packageId": {
                        "id": "string",
                        "type": "string"
                      },
                      "isNameCustom": true,
                      "isExcludeNonDeduct": true,
                      "vendorPrice": 0,
                      "eventStartDate": "2020-07-13T15:32:09.655Z",
                      "eventEndDate": "2020-07-13T15:32:09.655Z"
                    }
                  }
                },
                "links": [
                  {
                    "href": "string",
                    "rel": "string",
                    "templated": false,
                    "method": "GET",
                    "targetSchema": "string",
                    "operationId": "string",
                    "title": "string"
                  }
                ]
              }
            }
          },
          "204": {
            "description": "WaitlistedEvents not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      },
      "put": {
        "summary": "Manage Waitlisted Events",
        "description": "You can update the waitlisted events such as changing priority of the events on the waitlist. <p><strong>OperationId:</strong>manageWaitlistedEvents</p>",
        "operationId": "manageWaitlistedEvents",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of the hotel"
          },
          {
            "name": "manageWaitlistedEvents",
            "in": "body",
            "required": true,
            "description": "Request object for managing waitlisted catering events.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/manageWaitlistedEvents"
                },
                {
                  "example": {
                    "processingInstructions": "IncreasePriority",
                    "waitlistedEvents": [
                      {
                        "eventPrimaryInfo": {
                          "eventId": {
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0
                          },
                          "hotelId": "string",
                          "includeSubEvents": true
                        },
                        "eventDetail": {
                          "eventName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "eventType": "string",
                          "eventTimeSpan": {
                            "startDateTime": "2020-07-20T14:10:20.655Z",
                            "endDateTime": "2020-07-20T14:10:20.655Z"
                          },
                          "eventStatus": {
                            "status": {
                              "code": "string",
                              "description": "string"
                            },
                            "color": "White"
                          },
                          "waitlistReturnStatus": {
                            "status": {
                              "code": "string",
                              "description": "string"
                            },
                            "color": "White"
                          },
                          "cateringStatusType": "Waitlist",
                          "attendees": {
                            "expected": 0,
                            "guaranteed": 0,
                            "actual": 0,
                            "set": 0,
                            "billed": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0
                          },
                          "masterEventId": {
                            "id": "string",
                            "type": "string"
                          },
                          "doorcard": "string",
                          "eventLink": {
                            "id": {
                              "id": "string",
                              "type": "string"
                            },
                            "type": "SubEvent",
                            "masterEventDates": {
                              "startDateTime": "2020-07-20T14:10:20.655Z",
                              "endDateTime": "2020-07-20T14:10:20.655Z"
                            }
                          },
                          "inactiveDate": "2020-07-20",
                          "packageId": 0,
                          "packageName": "string",
                          "masterEvent": true,
                          "subEvent": true,
                          "packageEvent": true,
                          "alternateEvent": true,
                          "waitlisted": true,
                          "notMoveable": true,
                          "loudEvent": true,
                          "hasPostings": true,
                          "displayDoorcard": true,
                          "cateringDeductInventory": true,
                          "eventShared": true,
                          "createDateTime": "2020-07-20T14:10:20.655Z",
                          "creatorId": "string",
                          "lastModifyDateTime": "2020-07-20T14:10:20.655Z",
                          "lastModifierId": "string",
                          "purgeDate": "2020-07-20",
                          "includeSpaceInPackage": true,
                          "eventLevelRevenueActualization": true
                        },
                        "eventResources": [
                          {
                            "resourceId": {
                              "url": "string",
                              "type": "string",
                              "instance": "string",
                              "idContext": "string",
                              "id": "string",
                              "idExtension": 0
                            },
                            "resourceType": "FunctionSpace",
                            "resourceName": "string",
                            "setupCode": "string",
                            "itemAttribute": "string",
                            "quantity": 0,
                            "hours": 0,
                            "persons": 0,
                            "quantityIncluded": 0,
                            "quantityExcluded": 0,
                            "unitPrice": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "revenue": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "rentalCode": "string",
                            "discount": 0,
                            "eventResourceNotes": [
                              {
                                "noteId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "noteCode": "string",
                                "internal": true,
                                "noteTitle": "string",
                                "comment": "string",
                                "sequence": 0,
                                "createDateTime": "2020-07-20T14:10:20.655Z",
                                "creatorId": "string",
                                "lastModifyDateTime": "2020-07-20T14:10:20.655Z",
                                "lastModifierId": "string",
                                "purgeDate": "2020-07-20"
                              }
                            ],
                            "sellStartDate": "2020-07-20",
                            "sellEndDate": "2020-07-20",
                            "eventStartDate": "2020-07-20",
                            "eventEndDate": "2020-07-20",
                            "consumptionBased": true,
                            "multiChoice": true,
                            "hotelId": "string",
                            "order": "string",
                            "hasDiscountMenuItem": true,
                            "hasNotes": true,
                            "external": true,
                            "custom": true,
                            "packaged": true
                          }
                        ],
                        "processInstructions": {
                          "overrideCapacity": true,
                          "overbook": true,
                          "shareable": true,
                          "overrideMaxgroups": true,
                          "waitList": true,
                          "warnFunctionSpace": true
                        },
                        "eventBlockInfo": {
                          "blockIdList": [
                            {
                              "id": "string",
                              "type": "string"
                            }
                          ]
                        },
                        "functionSpaceInformation": {
                          "functionSpaceCode": "string",
                          "functionSpaceDescription": "string",
                          "setupCode": "string",
                          "setupDescription": "string",
                          "setupTime": 0,
                          "setdownTime": 0,
                          "rentalCode": "string",
                          "rateDesc": "string",
                          "rentalAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "discountPercentage": 0,
                          "minimumOccupancy": 0,
                          "maximumOccupancy": 0,
                          "shareable": true,
                          "comboSpace": true,
                          "elementSpace": true
                        },
                        "eventNotes": [
                          {
                            "noteId": {
                              "id": "string",
                              "type": "string"
                            },
                            "noteCode": "string",
                            "internal": true,
                            "noteTitle": "string",
                            "comment": "string",
                            "sequence": 0,
                            "createDateTime": "2020-07-20T14:10:20.672Z",
                            "creatorId": "string",
                            "lastModifyDateTime": "2020-07-20T14:10:20.672Z",
                            "lastModifierId": "string",
                            "purgeDate": "2020-07-20"
                          }
                        ],
                        "eventIndicators": [
                          {
                            "indicatorName": "string",
                            "count": 0
                          }
                        ],
                        "onTheBooksRevenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "subEventsDetail": [
                          {
                            "eventPrimaryInfo": {
                              "eventId": {
                                "url": "string",
                                "type": "string",
                                "instance": "string",
                                "idContext": "string",
                                "id": "string",
                                "idExtension": 0
                              },
                              "hotelId": "string",
                              "includeSubEvents": true
                            },
                            "eventDetail": {
                              "eventName": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "value": "string",
                                      "language": "string"
                                    }
                                  ]
                                }
                              },
                              "eventType": "string",
                              "eventTimeSpan": {
                                "startDateTime": "2020-07-20T14:10:20.672Z",
                                "endDateTime": "2020-07-20T14:10:20.672Z"
                              },
                              "eventStatus": {
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "color": "White"
                              },
                              "waitlistReturnStatus": {
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "color": "White"
                              },
                              "cateringStatusType": "Waitlist",
                              "attendees": {
                                "expected": 0,
                                "guaranteed": 0,
                                "actual": 0,
                                "set": 0,
                                "billed": 0,
                                "packageExpected": 0,
                                "packageGuaranteed": 0,
                                "packageActual": 0,
                                "packageBilled": 0
                              },
                              "masterEventId": {
                                "id": "string",
                                "type": "string"
                              },
                              "doorcard": "string",
                              "eventLink": {
                                "id": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "type": "SubEvent",
                                "masterEventDates": {
                                  "startDateTime": "2020-07-20T14:10:20.672Z",
                                  "endDateTime": "2020-07-20T14:10:20.672Z"
                                }
                              },
                              "inactiveDate": "2020-07-20",
                              "packageId": 0,
                              "packageName": "string",
                              "masterEvent": true,
                              "subEvent": true,
                              "packageEvent": true,
                              "alternateEvent": true,
                              "waitlisted": true,
                              "notMoveable": true,
                              "loudEvent": true,
                              "hasPostings": true,
                              "displayDoorcard": true,
                              "cateringDeductInventory": true,
                              "eventShared": true,
                              "createDateTime": "2020-07-20T14:10:20.672Z",
                              "creatorId": "string",
                              "lastModifyDateTime": "2020-07-20T14:10:20.672Z",
                              "lastModifierId": "string",
                              "purgeDate": "2020-07-20",
                              "includeSpaceInPackage": true,
                              "eventLevelRevenueActualization": true
                            },
                            "functionSpaceInformation": {
                              "functionSpaceCode": "string",
                              "functionSpaceDescription": "string",
                              "setupCode": "string",
                              "setupDescription": "string",
                              "setupTime": 0,
                              "setdownTime": 0,
                              "rentalCode": "string",
                              "rateDesc": "string",
                              "rentalAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "discountPercentage": 0,
                              "minimumOccupancy": 0,
                              "maximumOccupancy": 0,
                              "shareable": true,
                              "comboSpace": true,
                              "elementSpace": true
                            }
                          }
                        ],
                        "altEventsDetail": [
                          {
                            "eventPrimaryInfo": {
                              "eventId": {
                                "url": "string",
                                "type": "string",
                                "instance": "string",
                                "idContext": "string",
                                "id": "string",
                                "idExtension": 0
                              },
                              "hotelId": "string",
                              "includeSubEvents": true
                            },
                            "eventDetail": {
                              "eventName": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "value": "string",
                                      "language": "string"
                                    }
                                  ]
                                }
                              },
                              "eventType": "string",
                              "eventTimeSpan": {
                                "startDateTime": "2020-07-20T14:10:20.672Z",
                                "endDateTime": "2020-07-20T14:10:20.672Z"
                              },
                              "eventStatus": {
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "color": "White"
                              },
                              "waitlistReturnStatus": {
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "color": "White"
                              },
                              "cateringStatusType": "Waitlist",
                              "attendees": {
                                "expected": 0,
                                "guaranteed": 0,
                                "actual": 0,
                                "set": 0,
                                "billed": 0,
                                "packageExpected": 0,
                                "packageGuaranteed": 0,
                                "packageActual": 0,
                                "packageBilled": 0
                              },
                              "masterEventId": {
                                "id": "string",
                                "type": "string"
                              },
                              "doorcard": "string",
                              "eventLink": {
                                "id": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "type": "SubEvent",
                                "masterEventDates": {
                                  "startDateTime": "2020-07-20T14:10:20.672Z",
                                  "endDateTime": "2020-07-20T14:10:20.672Z"
                                }
                              },
                              "inactiveDate": "2020-07-20",
                              "packageId": 0,
                              "packageName": "string",
                              "masterEvent": true,
                              "subEvent": true,
                              "packageEvent": true,
                              "alternateEvent": true,
                              "waitlisted": true,
                              "notMoveable": true,
                              "loudEvent": true,
                              "hasPostings": true,
                              "displayDoorcard": true,
                              "cateringDeductInventory": true,
                              "eventShared": true,
                              "createDateTime": "2020-07-20T14:10:20.672Z",
                              "creatorId": "string",
                              "lastModifyDateTime": "2020-07-20T14:10:20.672Z",
                              "lastModifierId": "string",
                              "purgeDate": "2020-07-20",
                              "includeSpaceInPackage": true,
                              "eventLevelRevenueActualization": true
                            },
                            "functionSpaceInformation": {
                              "functionSpaceCode": "string",
                              "functionSpaceDescription": "string",
                              "setupCode": "string",
                              "setupDescription": "string",
                              "setupTime": 0,
                              "setdownTime": 0,
                              "rentalCode": "string",
                              "rateDesc": "string",
                              "rentalAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "discountPercentage": 0,
                              "minimumOccupancy": 0,
                              "maximumOccupancy": 0,
                              "shareable": true,
                              "comboSpace": true,
                              "elementSpace": true
                            }
                          }
                        ],
                        "masterEventDetail": {
                          "eventPrimaryInfo": {
                            "eventId": {
                              "url": "string",
                              "type": "string",
                              "instance": "string",
                              "idContext": "string",
                              "id": "string",
                              "idExtension": 0
                            },
                            "hotelId": "string",
                            "includeSubEvents": true
                          },
                          "eventDetail": {
                            "eventName": {
                              "defaultText": "string",
                              "translations": {
                                "text": [
                                  {
                                    "value": "string",
                                    "language": "string"
                                  }
                                ]
                              }
                            },
                            "eventType": "string",
                            "eventTimeSpan": {
                              "startDateTime": "2020-07-20T14:10:20.672Z",
                              "endDateTime": "2020-07-20T14:10:20.673Z"
                            },
                            "eventStatus": {
                              "status": {
                                "code": "string",
                                "description": "string"
                              },
                              "color": "White"
                            },
                            "waitlistReturnStatus": {
                              "status": {
                                "code": "string",
                                "description": "string"
                              },
                              "color": "White"
                            },
                            "cateringStatusType": "Waitlist",
                            "attendees": {
                              "expected": 0,
                              "guaranteed": 0,
                              "actual": 0,
                              "set": 0,
                              "billed": 0,
                              "packageExpected": 0,
                              "packageGuaranteed": 0,
                              "packageActual": 0,
                              "packageBilled": 0
                            },
                            "masterEventId": {
                              "id": "string",
                              "type": "string"
                            },
                            "doorcard": "string",
                            "eventLink": {
                              "id": {
                                "id": "string",
                                "type": "string"
                              },
                              "type": "SubEvent",
                              "masterEventDates": {
                                "startDateTime": "2020-07-20T14:10:20.673Z",
                                "endDateTime": "2020-07-20T14:10:20.673Z"
                              }
                            },
                            "inactiveDate": "2020-07-20",
                            "packageId": 0,
                            "packageName": "string",
                            "masterEvent": true,
                            "subEvent": true,
                            "packageEvent": true,
                            "alternateEvent": true,
                            "waitlisted": true,
                            "notMoveable": true,
                            "loudEvent": true,
                            "hasPostings": true,
                            "displayDoorcard": true,
                            "cateringDeductInventory": true,
                            "eventShared": true,
                            "createDateTime": "2020-07-20T14:10:20.673Z",
                            "creatorId": "string",
                            "lastModifyDateTime": "2020-07-20T14:10:20.673Z",
                            "lastModifierId": "string",
                            "purgeDate": "2020-07-20",
                            "includeSpaceInPackage": true,
                            "eventLevelRevenueActualization": true
                          },
                          "functionSpaceInformation": {
                            "functionSpaceCode": "string",
                            "functionSpaceDescription": "string",
                            "setupCode": "string",
                            "setupDescription": "string",
                            "setupTime": 0,
                            "setdownTime": 0,
                            "rentalCode": "string",
                            "rateDesc": "string",
                            "rentalAmount": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "discountPercentage": 0,
                            "minimumOccupancy": 0,
                            "maximumOccupancy": 0,
                            "shareable": true,
                            "comboSpace": true,
                            "elementSpace": true
                          }
                        },
                        "eventRevenues": {
                          "eventRevenueInformation": [
                            {
                              "revenueType": {
                                "code": "string",
                                "translatableDescription": {
                                  "defaultText": "string",
                                  "translations": {
                                    "text": [
                                      {
                                        "value": "string",
                                        "language": "string"
                                      }
                                    ]
                                  }
                                },
                                "displaySequence": 0,
                                "revenueGroup": "string",
                                "foodAndBeverage": true,
                                "inactive": true,
                                "revenueDetails": [
                                  {
                                    "hotelId": "string",
                                    "revenueMinimum": true,
                                    "tax": 0
                                  }
                                ]
                              },
                              "forecastRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "expectedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "guaranteedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "onTheBooksRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "billedRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "actualRevenue": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "totalCost": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "flatForecastRevenue": true,
                              "custom": true,
                              "ignoreForecast": true,
                              "packaged": true,
                              "orderBy": 0
                            }
                          ],
                          "currencyCode": "string",
                          "excludeFromForecast": true,
                          "useForecastRevenue": true,
                          "eventLevelRevenueActualization": true
                        },
                        "waitlistId": {
                          "id": "string",
                          "type": "string"
                        },
                        "priority": 0,
                        "currentEventsHoldingFunctionSpace": [
                          {
                            "eventPrimaryInfo": {
                              "eventId": {
                                "url": "string",
                                "type": "string",
                                "instance": "string",
                                "idContext": "string",
                                "id": "string",
                                "idExtension": 0
                              },
                              "hotelId": "string",
                              "includeSubEvents": true
                            },
                            "eventDetail": {
                              "eventName": {
                                "defaultText": "string",
                                "translations": {
                                  "text": [
                                    {
                                      "value": "string",
                                      "language": "string"
                                    }
                                  ]
                                }
                              },
                              "eventType": "string",
                              "eventTimeSpan": {
                                "startDateTime": "2020-07-20T14:10:20.673Z",
                                "endDateTime": "2020-07-20T14:10:20.673Z"
                              },
                              "eventStatus": {
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "color": "White"
                              },
                              "waitlistReturnStatus": {
                                "status": {
                                  "code": "string",
                                  "description": "string"
                                },
                                "color": "White"
                              },
                              "cateringStatusType": "Waitlist",
                              "attendees": {
                                "expected": 0,
                                "guaranteed": 0,
                                "actual": 0,
                                "set": 0,
                                "billed": 0,
                                "packageExpected": 0,
                                "packageGuaranteed": 0,
                                "packageActual": 0,
                                "packageBilled": 0
                              },
                              "masterEventId": {
                                "id": "string",
                                "type": "string"
                              },
                              "doorcard": "string",
                              "eventLink": {
                                "id": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "type": "SubEvent",
                                "masterEventDates": {
                                  "startDateTime": "2020-07-20T14:10:20.673Z",
                                  "endDateTime": "2020-07-20T14:10:20.673Z"
                                }
                              },
                              "inactiveDate": "2020-07-20",
                              "packageId": 0,
                              "packageName": "string",
                              "masterEvent": true,
                              "subEvent": true,
                              "packageEvent": true,
                              "alternateEvent": true,
                              "waitlisted": true,
                              "notMoveable": true,
                              "loudEvent": true,
                              "hasPostings": true,
                              "displayDoorcard": true,
                              "cateringDeductInventory": true,
                              "eventShared": true,
                              "createDateTime": "2020-07-20T14:10:20.673Z",
                              "creatorId": "string",
                              "lastModifyDateTime": "2020-07-20T14:10:20.673Z",
                              "lastModifierId": "string",
                              "purgeDate": "2020-07-20",
                              "includeSpaceInPackage": true,
                              "eventLevelRevenueActualization": true
                            },
                            "eventResources": [
                              {
                                "resourceId": {
                                  "url": "string",
                                  "type": "string",
                                  "instance": "string",
                                  "idContext": "string",
                                  "id": "string",
                                  "idExtension": 0
                                },
                                "resourceType": "FunctionSpace",
                                "resourceName": "string",
                                "setupCode": "string",
                                "itemAttribute": "string",
                                "quantity": 0,
                                "hours": 0,
                                "persons": 0,
                                "quantityIncluded": 0,
                                "quantityExcluded": 0,
                                "unitPrice": {
                                  "amount": 0,
                                  "currencyCode": "string"
                                },
                                "revenue": {
                                  "amount": 0,
                                  "currencyCode": "string"
                                },
                                "rentalCode": "string",
                                "discount": 0,
                                "eventResourceNotes": [
                                  {
                                    "noteId": {
                                      "id": "string",
                                      "type": "string"
                                    },
                                    "noteCode": "string",
                                    "internal": true,
                                    "noteTitle": "string",
                                    "comment": "string",
                                    "sequence": 0,
                                    "createDateTime": "2020-07-20T14:10:20.673Z",
                                    "creatorId": "string",
                                    "lastModifyDateTime": "2020-07-20T14:10:20.673Z",
                                    "lastModifierId": "string",
                                    "purgeDate": "2020-07-20"
                                  }
                                ],
                                "sellStartDate": "2020-07-20",
                                "sellEndDate": "2020-07-20",
                                "eventStartDate": "2020-07-20",
                                "eventEndDate": "2020-07-20",
                                "consumptionBased": true,
                                "multiChoice": true,
                                "hotelId": "string",
                                "order": "string",
                                "hasDiscountMenuItem": true,
                                "hasNotes": true,
                                "external": true,
                                "custom": true,
                                "packaged": true
                              }
                            ],
                            "processInstructions": {
                              "overrideCapacity": true,
                              "overbook": true,
                              "shareable": true,
                              "overrideMaxgroups": true,
                              "waitList": true,
                              "warnFunctionSpace": true
                            },
                            "eventBlockInfo": {
                              "blockIdList": [
                                {
                                  "id": "string",
                                  "type": "string"
                                }
                              ]
                            },
                            "functionSpaceInformation": {
                              "functionSpaceCode": "string",
                              "functionSpaceDescription": "string",
                              "setupCode": "string",
                              "setupDescription": "string",
                              "setupTime": 0,
                              "setdownTime": 0,
                              "rentalCode": "string",
                              "rateDesc": "string",
                              "rentalAmount": {
                                "amount": 0,
                                "currencyCode": "string"
                              },
                              "discountPercentage": 0,
                              "minimumOccupancy": 0,
                              "maximumOccupancy": 0,
                              "shareable": true,
                              "comboSpace": true,
                              "elementSpace": true
                            },
                            "eventNotes": [
                              {
                                "noteId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "noteCode": "string",
                                "internal": true,
                                "noteTitle": "string",
                                "comment": "string",
                                "sequence": 0,
                                "createDateTime": "2020-07-20T14:10:20.692Z",
                                "creatorId": "string",
                                "lastModifyDateTime": "2020-07-20T14:10:20.692Z",
                                "lastModifierId": "string",
                                "purgeDate": "2020-07-20"
                              }
                            ],
                            "eventIndicators": [
                              {
                                "indicatorName": "string",
                                "count": 0
                              }
                            ],
                            "onTheBooksRevenue": {
                              "amount": 0,
                              "currencyCode": "string"
                            },
                            "subEventsDetail": [
                              {
                                "eventPrimaryInfo": {
                                  "eventId": {
                                    "url": "string",
                                    "type": "string",
                                    "instance": "string",
                                    "idContext": "string",
                                    "id": "string",
                                    "idExtension": 0
                                  },
                                  "hotelId": "string",
                                  "includeSubEvents": true
                                },
                                "eventDetail": {
                                  "eventName": {
                                    "defaultText": "string",
                                    "translations": {
                                      "text": [
                                        {
                                          "value": "string",
                                          "language": "string"
                                        }
                                      ]
                                    }
                                  },
                                  "eventType": "string",
                                  "eventTimeSpan": {
                                    "startDateTime": "2020-07-20T14:10:20.692Z",
                                    "endDateTime": "2020-07-20T14:10:20.692Z"
                                  },
                                  "eventStatus": {
                                    "status": {
                                      "code": "string",
                                      "description": "string"
                                    },
                                    "color": "White"
                                  },
                                  "waitlistReturnStatus": {
                                    "status": {
                                      "code": "string",
                                      "description": "string"
                                    },
                                    "color": "White"
                                  },
                                  "cateringStatusType": "Waitlist",
                                  "attendees": {
                                    "expected": 0,
                                    "guaranteed": 0,
                                    "actual": 0,
                                    "set": 0,
                                    "billed": 0,
                                    "packageExpected": 0,
                                    "packageGuaranteed": 0,
                                    "packageActual": 0,
                                    "packageBilled": 0
                                  },
                                  "masterEventId": {
                                    "id": "string",
                                    "type": "string"
                                  },
                                  "doorcard": "string",
                                  "eventLink": {
                                    "id": {
                                      "id": "string",
                                      "type": "string"
                                    },
                                    "type": "SubEvent",
                                    "masterEventDates": {
                                      "startDateTime": "2020-07-20T14:10:20.692Z",
                                      "endDateTime": "2020-07-20T14:10:20.692Z"
                                    }
                                  },
                                  "inactiveDate": "2020-07-20",
                                  "packageId": 0,
                                  "packageName": "string",
                                  "masterEvent": true,
                                  "subEvent": true,
                                  "packageEvent": true,
                                  "alternateEvent": true,
                                  "waitlisted": true,
                                  "notMoveable": true,
                                  "loudEvent": true,
                                  "hasPostings": true,
                                  "displayDoorcard": true,
                                  "cateringDeductInventory": true,
                                  "eventShared": true,
                                  "createDateTime": "2020-07-20T14:10:20.692Z",
                                  "creatorId": "string",
                                  "lastModifyDateTime": "2020-07-20T14:10:20.692Z",
                                  "lastModifierId": "string",
                                  "purgeDate": "2020-07-20",
                                  "includeSpaceInPackage": true,
                                  "eventLevelRevenueActualization": true
                                },
                                "functionSpaceInformation": {
                                  "functionSpaceCode": "string",
                                  "functionSpaceDescription": "string",
                                  "setupCode": "string",
                                  "setupDescription": "string",
                                  "setupTime": 0,
                                  "setdownTime": 0,
                                  "rentalCode": "string",
                                  "rateDesc": "string",
                                  "rentalAmount": {
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "discountPercentage": 0,
                                  "minimumOccupancy": 0,
                                  "maximumOccupancy": 0,
                                  "shareable": true,
                                  "comboSpace": true,
                                  "elementSpace": true
                                }
                              }
                            ],
                            "altEventsDetail": [
                              {
                                "eventPrimaryInfo": {
                                  "eventId": {
                                    "url": "string",
                                    "type": "string",
                                    "instance": "string",
                                    "idContext": "string",
                                    "id": "string",
                                    "idExtension": 0
                                  },
                                  "hotelId": "string",
                                  "includeSubEvents": true
                                },
                                "eventDetail": {
                                  "eventName": {
                                    "defaultText": "string",
                                    "translations": {
                                      "text": [
                                        {
                                          "value": "string",
                                          "language": "string"
                                        }
                                      ]
                                    }
                                  },
                                  "eventType": "string",
                                  "eventTimeSpan": {
                                    "startDateTime": "2020-07-20T14:10:20.693Z",
                                    "endDateTime": "2020-07-20T14:10:20.693Z"
                                  },
                                  "eventStatus": {
                                    "status": {
                                      "code": "string",
                                      "description": "string"
                                    },
                                    "color": "White"
                                  },
                                  "waitlistReturnStatus": {
                                    "status": {
                                      "code": "string",
                                      "description": "string"
                                    },
                                    "color": "White"
                                  },
                                  "cateringStatusType": "Waitlist",
                                  "attendees": {
                                    "expected": 0,
                                    "guaranteed": 0,
                                    "actual": 0,
                                    "set": 0,
                                    "billed": 0,
                                    "packageExpected": 0,
                                    "packageGuaranteed": 0,
                                    "packageActual": 0,
                                    "packageBilled": 0
                                  },
                                  "masterEventId": {
                                    "id": "string",
                                    "type": "string"
                                  },
                                  "doorcard": "string",
                                  "eventLink": {
                                    "id": {
                                      "id": "string",
                                      "type": "string"
                                    },
                                    "type": "SubEvent",
                                    "masterEventDates": {
                                      "startDateTime": "2020-07-20T14:10:20.693Z",
                                      "endDateTime": "2020-07-20T14:10:20.693Z"
                                    }
                                  },
                                  "inactiveDate": "2020-07-20",
                                  "packageId": 0,
                                  "packageName": "string",
                                  "masterEvent": true,
                                  "subEvent": true,
                                  "packageEvent": true,
                                  "alternateEvent": true,
                                  "waitlisted": true,
                                  "notMoveable": true,
                                  "loudEvent": true,
                                  "hasPostings": true,
                                  "displayDoorcard": true,
                                  "cateringDeductInventory": true,
                                  "eventShared": true,
                                  "createDateTime": "2020-07-20T14:10:20.693Z",
                                  "creatorId": "string",
                                  "lastModifyDateTime": "2020-07-20T14:10:20.693Z",
                                  "lastModifierId": "string",
                                  "purgeDate": "2020-07-20",
                                  "includeSpaceInPackage": true,
                                  "eventLevelRevenueActualization": true
                                },
                                "functionSpaceInformation": {
                                  "functionSpaceCode": "string",
                                  "functionSpaceDescription": "string",
                                  "setupCode": "string",
                                  "setupDescription": "string",
                                  "setupTime": 0,
                                  "setdownTime": 0,
                                  "rentalCode": "string",
                                  "rateDesc": "string",
                                  "rentalAmount": {
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "discountPercentage": 0,
                                  "minimumOccupancy": 0,
                                  "maximumOccupancy": 0,
                                  "shareable": true,
                                  "comboSpace": true,
                                  "elementSpace": true
                                }
                              }
                            ],
                            "masterEventDetail": {
                              "eventPrimaryInfo": {
                                "eventId": {
                                  "url": "string",
                                  "type": "string",
                                  "instance": "string",
                                  "idContext": "string",
                                  "id": "string",
                                  "idExtension": 0
                                },
                                "hotelId": "string",
                                "includeSubEvents": true
                              },
                              "eventDetail": {
                                "eventName": {
                                  "defaultText": "string",
                                  "translations": {
                                    "text": [
                                      {
                                        "value": "string",
                                        "language": "string"
                                      }
                                    ]
                                  }
                                },
                                "eventType": "string",
                                "eventTimeSpan": {
                                  "startDateTime": "2020-07-20T14:10:20.693Z",
                                  "endDateTime": "2020-07-20T14:10:20.693Z"
                                },
                                "eventStatus": {
                                  "status": {
                                    "code": "string",
                                    "description": "string"
                                  },
                                  "color": "White"
                                },
                                "waitlistReturnStatus": {
                                  "status": {
                                    "code": "string",
                                    "description": "string"
                                  },
                                  "color": "White"
                                },
                                "cateringStatusType": "Waitlist",
                                "attendees": {
                                  "expected": 0,
                                  "guaranteed": 0,
                                  "actual": 0,
                                  "set": 0,
                                  "billed": 0,
                                  "packageExpected": 0,
                                  "packageGuaranteed": 0,
                                  "packageActual": 0,
                                  "packageBilled": 0
                                },
                                "masterEventId": {
                                  "id": "string",
                                  "type": "string"
                                },
                                "doorcard": "string",
                                "eventLink": {
                                  "id": {
                                    "id": "string",
                                    "type": "string"
                                  },
                                  "type": "SubEvent",
                                  "masterEventDates": {
                                    "startDateTime": "2020-07-20T14:10:20.693Z",
                                    "endDateTime": "2020-07-20T14:10:20.693Z"
                                  }
                                },
                                "inactiveDate": "2020-07-20",
                                "packageId": 0,
                                "packageName": "string",
                                "masterEvent": true,
                                "subEvent": true,
                                "packageEvent": true,
                                "alternateEvent": true,
                                "waitlisted": true,
                                "notMoveable": true,
                                "loudEvent": true,
                                "hasPostings": true,
                                "displayDoorcard": true,
                                "cateringDeductInventory": true,
                                "eventShared": true,
                                "createDateTime": "2020-07-20T14:10:20.693Z",
                                "creatorId": "string",
                                "lastModifyDateTime": "2020-07-20T14:10:20.693Z",
                                "lastModifierId": "string",
                                "purgeDate": "2020-07-20",
                                "includeSpaceInPackage": true,
                                "eventLevelRevenueActualization": true
                              },
                              "functionSpaceInformation": {
                                "functionSpaceCode": "string",
                                "functionSpaceDescription": "string",
                                "setupCode": "string",
                                "setupDescription": "string",
                                "setupTime": 0,
                                "setdownTime": 0,
                                "rentalCode": "string",
                                "rateDesc": "string",
                                "rentalAmount": {
                                  "amount": 0,
                                  "currencyCode": "string"
                                },
                                "discountPercentage": 0,
                                "minimumOccupancy": 0,
                                "maximumOccupancy": 0,
                                "shareable": true,
                                "comboSpace": true,
                                "elementSpace": true
                              }
                            },
                            "eventRevenues": {
                              "eventRevenueInformation": [
                                {
                                  "revenueType": {
                                    "code": "string",
                                    "translatableDescription": {
                                      "defaultText": "string",
                                      "translations": {
                                        "text": [
                                          {
                                            "value": "string",
                                            "language": "string"
                                          }
                                        ]
                                      }
                                    },
                                    "displaySequence": 0,
                                    "revenueGroup": "string",
                                    "foodAndBeverage": true,
                                    "inactive": true,
                                    "revenueDetails": [
                                      {
                                        "hotelId": "string",
                                        "revenueMinimum": true,
                                        "tax": 0
                                      }
                                    ]
                                  },
                                  "forecastRevenue": {
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "expectedRevenue": {
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "guaranteedRevenue": {
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "onTheBooksRevenue": {
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "billedRevenue": {
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "actualRevenue": {
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "totalCost": {
                                    "amount": 0,
                                    "currencyCode": "string"
                                  },
                                  "flatForecastRevenue": true,
                                  "custom": true,
                                  "ignoreForecast": true,
                                  "packaged": true,
                                  "orderBy": 0
                                }
                              ],
                              "currencyCode": "string",
                              "excludeFromForecast": true,
                              "useForecastRevenue": true,
                              "eventLevelRevenueActualization": true
                            }
                          }
                        ],
                        "waitlistDate": "2020-07-20",
                        "updateUser": 0,
                        "updateDate": "2020-07-20"
                      }
                    ],
                    "criteria": {
                      "hotelId": "string",
                      "functionSpaceCode": [
                        "string"
                      ],
                      "accountName": "string",
                      "blockName": "string",
                      "blockId": {
                        "id": "string",
                        "type": "string"
                      },
                      "waitlistedTimeSpan": {
                        "startDateTime": "2020-07-20T14:10:20.694Z",
                        "endDateTime": "2020-07-20T14:10:20.694Z"
                      }
                    },
                    "links": [
                      {
                        "href": "string",
                        "rel": "string",
                        "templated": false,
                        "method": "GET",
                        "targetSchema": "string",
                        "operationId": "string",
                        "title": "string"
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response object to know outcome if manage waitlisted catering events.",
            "schema": {
              "$ref": "#/definitions/waitlistedEvents"
            },
            "examples": {
              "application/json": {
                "eventResourceDetails": {
                  "eventDetailInfo": {
                    "eventPrimaryInfo": {
                      "eventId": {
                        "url": "string",
                        "type": "string",
                        "instance": "string",
                        "idContext": "string",
                        "id": "string",
                        "idExtension": 0
                      },
                      "hotelId": "string",
                      "includeSubEvents": true
                    },
                    "eventDetail": {
                      "eventName": {
                        "defaultText": "string",
                        "translations": {
                          "text": [
                            {
                              "value": "string",
                              "language": "string"
                            }
                          ]
                        }
                      },
                      "eventType": "string",
                      "eventTimeSpan": {
                        "startDateTime": "2020-07-13T15:32:09.635Z",
                        "endDateTime": "2020-07-13T15:32:09.635Z"
                      },
                      "eventStatus": {
                        "status": {
                          "code": "string",
                          "description": "string"
                        },
                        "color": "White"
                      },
                      "waitlistReturnStatus": {
                        "status": {
                          "code": "string",
                          "description": "string"
                        },
                        "color": "White"
                      },
                      "cateringStatusType": "Waitlist",
                      "attendees": {
                        "expected": 0,
                        "guaranteed": 0,
                        "actual": 0,
                        "set": 0,
                        "billed": 0,
                        "packageExpected": 0,
                        "packageGuaranteed": 0,
                        "packageActual": 0,
                        "packageBilled": 0
                      },
                      "masterEventId": {
                        "id": "string",
                        "type": "string"
                      },
                      "doorcard": "string",
                      "eventLink": {
                        "id": {
                          "id": "string",
                          "type": "string"
                        },
                        "type": "SubEvent",
                        "masterEventDates": {
                          "startDateTime": "2020-07-13T15:32:09.635Z",
                          "endDateTime": "2020-07-13T15:32:09.635Z"
                        }
                      },
                      "inactiveDate": "2020-07-13",
                      "packageId": 0,
                      "packageName": "string",
                      "masterEvent": true,
                      "subEvent": true,
                      "packageEvent": true,
                      "alternateEvent": true,
                      "waitlisted": true,
                      "notMoveable": true,
                      "loudEvent": true,
                      "hasPostings": true,
                      "displayDoorcard": true,
                      "cateringDeductInventory": true,
                      "eventShared": true,
                      "createDateTime": "2020-07-13T15:32:09.635Z",
                      "creatorId": "string",
                      "lastModifyDateTime": "2020-07-13T15:32:09.635Z",
                      "lastModifierId": "string",
                      "purgeDate": "2020-07-13",
                      "includeSpaceInPackage": true,
                      "eventLevelRevenueActualization": true
                    },
                    "eventResources": [
                      {
                        "resourceId": {
                          "url": "string",
                          "type": "string",
                          "instance": "string",
                          "idContext": "string",
                          "id": "string",
                          "idExtension": 0
                        },
                        "resourceType": "FunctionSpace",
                        "resourceName": "string",
                        "setupCode": "string",
                        "itemAttribute": "string",
                        "quantity": 0,
                        "hours": 0,
                        "persons": 0,
                        "quantityIncluded": 0,
                        "quantityExcluded": 0,
                        "unitPrice": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "revenue": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "rentalCode": "string",
                        "discount": 0,
                        "eventResourceNotes": [
                          {
                            "noteId": {
                              "id": "string",
                              "type": "string"
                            },
                            "noteCode": "string",
                            "internal": true,
                            "noteTitle": "string",
                            "comment": "string",
                            "sequence": 0,
                            "createDateTime": "2020-07-13T15:32:09.635Z",
                            "creatorId": "string",
                            "lastModifyDateTime": "2020-07-13T15:32:09.635Z",
                            "lastModifierId": "string",
                            "purgeDate": "2020-07-13"
                          }
                        ],
                        "sellStartDate": "2020-07-13",
                        "sellEndDate": "2020-07-13",
                        "eventStartDate": "2020-07-13",
                        "eventEndDate": "2020-07-13",
                        "consumptionBased": true,
                        "multiChoice": true,
                        "hotelId": "string",
                        "order": "string",
                        "hasDiscountMenuItem": true,
                        "hasNotes": true,
                        "external": true,
                        "custom": true,
                        "packaged": true
                      }
                    ],
                    "processInstructions": {
                      "overrideCapacity": true,
                      "overbook": true,
                      "shareable": true,
                      "overrideMaxgroups": true,
                      "waitList": true,
                      "warnFunctionSpace": true
                    },
                    "eventBlockInfo": {
                      "blockIdList": [
                        {
                          "id": "string",
                          "type": "string"
                        }
                      ]
                    },
                    "functionSpaceInformation": {
                      "functionSpaceCode": "string",
                      "functionSpaceDescription": "string",
                      "setupCode": "string",
                      "setupDescription": "string",
                      "setupTime": 0,
                      "setdownTime": 0,
                      "rentalCode": "string",
                      "rateDesc": "string",
                      "rentalAmount": {
                        "amount": 0,
                        "currencyCode": "string"
                      },
                      "discountPercentage": 0,
                      "minimumOccupancy": 0,
                      "maximumOccupancy": 0,
                      "shareable": true,
                      "comboSpace": true,
                      "elementSpace": true
                    },
                    "eventNotes": [
                      {
                        "noteId": {
                          "id": "string",
                          "type": "string"
                        },
                        "noteCode": "string",
                        "internal": true,
                        "noteTitle": "string",
                        "comment": "string",
                        "sequence": 0,
                        "createDateTime": "2020-07-13T15:32:09.654Z",
                        "creatorId": "string",
                        "lastModifyDateTime": "2020-07-13T15:32:09.654Z",
                        "lastModifierId": "string",
                        "purgeDate": "2020-07-13"
                      }
                    ],
                    "eventIndicators": [
                      {
                        "indicatorName": "string",
                        "count": 0
                      }
                    ],
                    "onTheBooksRevenue": {
                      "amount": 0,
                      "currencyCode": "string"
                    },
                    "subEventsDetail": [
                      {
                        "eventPrimaryInfo": {
                          "eventId": {
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0
                          },
                          "hotelId": "string",
                          "includeSubEvents": true
                        },
                        "eventDetail": {
                          "eventName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "eventType": "string",
                          "eventTimeSpan": {
                            "startDateTime": "2020-07-13T15:32:09.654Z",
                            "endDateTime": "2020-07-13T15:32:09.654Z"
                          },
                          "eventStatus": {
                            "status": {
                              "code": "string",
                              "description": "string"
                            },
                            "color": "White"
                          },
                          "waitlistReturnStatus": {
                            "status": {
                              "code": "string",
                              "description": "string"
                            },
                            "color": "White"
                          },
                          "cateringStatusType": "Waitlist",
                          "attendees": {
                            "expected": 0,
                            "guaranteed": 0,
                            "actual": 0,
                            "set": 0,
                            "billed": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0
                          },
                          "masterEventId": {
                            "id": "string",
                            "type": "string"
                          },
                          "doorcard": "string",
                          "eventLink": {
                            "id": {
                              "id": "string",
                              "type": "string"
                            },
                            "type": "SubEvent",
                            "masterEventDates": {
                              "startDateTime": "2020-07-13T15:32:09.654Z",
                              "endDateTime": "2020-07-13T15:32:09.654Z"
                            }
                          },
                          "inactiveDate": "2020-07-13",
                          "packageId": 0,
                          "packageName": "string",
                          "masterEvent": true,
                          "subEvent": true,
                          "packageEvent": true,
                          "alternateEvent": true,
                          "waitlisted": true,
                          "notMoveable": true,
                          "loudEvent": true,
                          "hasPostings": true,
                          "displayDoorcard": true,
                          "cateringDeductInventory": true,
                          "eventShared": true,
                          "createDateTime": "2020-07-13T15:32:09.654Z",
                          "creatorId": "string",
                          "lastModifyDateTime": "2020-07-13T15:32:09.654Z",
                          "lastModifierId": "string",
                          "purgeDate": "2020-07-13",
                          "includeSpaceInPackage": true,
                          "eventLevelRevenueActualization": true
                        },
                        "functionSpaceInformation": {
                          "functionSpaceCode": "string",
                          "functionSpaceDescription": "string",
                          "setupCode": "string",
                          "setupDescription": "string",
                          "setupTime": 0,
                          "setdownTime": 0,
                          "rentalCode": "string",
                          "rateDesc": "string",
                          "rentalAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "discountPercentage": 0,
                          "minimumOccupancy": 0,
                          "maximumOccupancy": 0,
                          "shareable": true,
                          "comboSpace": true,
                          "elementSpace": true
                        }
                      }
                    ],
                    "altEventsDetail": [
                      {
                        "eventPrimaryInfo": {
                          "eventId": {
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0
                          },
                          "hotelId": "string",
                          "includeSubEvents": true
                        },
                        "eventDetail": {
                          "eventName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "eventType": "string",
                          "eventTimeSpan": {
                            "startDateTime": "2020-07-13T15:32:09.654Z",
                            "endDateTime": "2020-07-13T15:32:09.654Z"
                          },
                          "eventStatus": {
                            "status": {
                              "code": "string",
                              "description": "string"
                            },
                            "color": "White"
                          },
                          "waitlistReturnStatus": {
                            "status": {
                              "code": "string",
                              "description": "string"
                            },
                            "color": "White"
                          },
                          "cateringStatusType": "Waitlist",
                          "attendees": {
                            "expected": 0,
                            "guaranteed": 0,
                            "actual": 0,
                            "set": 0,
                            "billed": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0
                          },
                          "masterEventId": {
                            "id": "string",
                            "type": "string"
                          },
                          "doorcard": "string",
                          "eventLink": {
                            "id": {
                              "id": "string",
                              "type": "string"
                            },
                            "type": "SubEvent",
                            "masterEventDates": {
                              "startDateTime": "2020-07-13T15:32:09.654Z",
                              "endDateTime": "2020-07-13T15:32:09.654Z"
                            }
                          },
                          "inactiveDate": "2020-07-13",
                          "packageId": 0,
                          "packageName": "string",
                          "masterEvent": true,
                          "subEvent": true,
                          "packageEvent": true,
                          "alternateEvent": true,
                          "waitlisted": true,
                          "notMoveable": true,
                          "loudEvent": true,
                          "hasPostings": true,
                          "displayDoorcard": true,
                          "cateringDeductInventory": true,
                          "eventShared": true,
                          "createDateTime": "2020-07-13T15:32:09.654Z",
                          "creatorId": "string",
                          "lastModifyDateTime": "2020-07-13T15:32:09.654Z",
                          "lastModifierId": "string",
                          "purgeDate": "2020-07-13",
                          "includeSpaceInPackage": true,
                          "eventLevelRevenueActualization": true
                        },
                        "functionSpaceInformation": {
                          "functionSpaceCode": "string",
                          "functionSpaceDescription": "string",
                          "setupCode": "string",
                          "setupDescription": "string",
                          "setupTime": 0,
                          "setdownTime": 0,
                          "rentalCode": "string",
                          "rateDesc": "string",
                          "rentalAmount": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "discountPercentage": 0,
                          "minimumOccupancy": 0,
                          "maximumOccupancy": 0,
                          "shareable": true,
                          "comboSpace": true,
                          "elementSpace": true
                        }
                      }
                    ],
                    "masterEventDetail": {
                      "eventPrimaryInfo": {
                        "eventId": {
                          "url": "string",
                          "type": "string",
                          "instance": "string",
                          "idContext": "string",
                          "id": "string",
                          "idExtension": 0
                        },
                        "hotelId": "string",
                        "includeSubEvents": true
                      },
                      "eventDetail": {
                        "eventName": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "value": "string",
                                "language": "string"
                              }
                            ]
                          }
                        },
                        "eventType": "string",
                        "eventTimeSpan": {
                          "startDateTime": "2020-07-13T15:32:09.654Z",
                          "endDateTime": "2020-07-13T15:32:09.654Z"
                        },
                        "eventStatus": {
                          "status": {
                            "code": "string",
                            "description": "string"
                          },
                          "color": "White"
                        },
                        "waitlistReturnStatus": {
                          "status": {
                            "code": "string",
                            "description": "string"
                          },
                          "color": "White"
                        },
                        "cateringStatusType": "Waitlist",
                        "attendees": {
                          "expected": 0,
                          "guaranteed": 0,
                          "actual": 0,
                          "set": 0,
                          "billed": 0,
                          "packageExpected": 0,
                          "packageGuaranteed": 0,
                          "packageActual": 0,
                          "packageBilled": 0
                        },
                        "masterEventId": {
                          "id": "string",
                          "type": "string"
                        },
                        "doorcard": "string",
                        "eventLink": {
                          "id": {
                            "id": "string",
                            "type": "string"
                          },
                          "type": "SubEvent",
                          "masterEventDates": {
                            "startDateTime": "2020-07-13T15:32:09.654Z",
                            "endDateTime": "2020-07-13T15:32:09.654Z"
                          }
                        },
                        "inactiveDate": "2020-07-13",
                        "packageId": 0,
                        "packageName": "string",
                        "masterEvent": true,
                        "subEvent": true,
                        "packageEvent": true,
                        "alternateEvent": true,
                        "waitlisted": true,
                        "notMoveable": true,
                        "loudEvent": true,
                        "hasPostings": true,
                        "displayDoorcard": true,
                        "cateringDeductInventory": true,
                        "eventShared": true,
                        "createDateTime": "2020-07-13T15:32:09.654Z",
                        "creatorId": "string",
                        "lastModifyDateTime": "2020-07-13T15:32:09.654Z",
                        "lastModifierId": "string",
                        "purgeDate": "2020-07-13",
                        "includeSpaceInPackage": true,
                        "eventLevelRevenueActualization": true
                      },
                      "functionSpaceInformation": {
                        "functionSpaceCode": "string",
                        "functionSpaceDescription": "string",
                        "setupCode": "string",
                        "setupDescription": "string",
                        "setupTime": 0,
                        "setdownTime": 0,
                        "rentalCode": "string",
                        "rateDesc": "string",
                        "rentalAmount": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "discountPercentage": 0,
                        "minimumOccupancy": 0,
                        "maximumOccupancy": 0,
                        "shareable": true,
                        "comboSpace": true,
                        "elementSpace": true
                      }
                    },
                    "eventRevenues": {
                      "eventRevenueInformation": [
                        {
                          "revenueType": {
                            "code": "string",
                            "translatableDescription": {
                              "defaultText": "string",
                              "translations": {
                                "text": [
                                  {
                                    "value": "string",
                                    "language": "string"
                                  }
                                ]
                              }
                            },
                            "displaySequence": 0,
                            "revenueGroup": "string",
                            "foodAndBeverage": true,
                            "inactive": true,
                            "revenueDetails": [
                              {
                                "hotelId": "string",
                                "revenueMinimum": true,
                                "tax": 0
                              }
                            ]
                          },
                          "forecastRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "expectedRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "guaranteedRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "onTheBooksRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "billedRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "actualRevenue": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "totalCost": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "flatForecastRevenue": true,
                          "custom": true,
                          "ignoreForecast": true,
                          "packaged": true,
                          "orderBy": 0
                        }
                      ],
                      "currencyCode": "string",
                      "excludeFromForecast": true,
                      "useForecastRevenue": true,
                      "eventLevelRevenueActualization": true
                    }
                  },
                  "menu": {
                    "eventMenuId": {
                      "id": "string",
                      "type": "string"
                    },
                    "eventMenu": {
                      "basicInfo": {
                        "className": "string",
                        "name": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "value": "string",
                                "language": "string"
                              }
                            ]
                          }
                        },
                        "restriction": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "value": "string",
                                "language": "string"
                              }
                            ]
                          }
                        },
                        "description": {
                          "defaultText": "string",
                          "translations": {
                            "text": [
                              {
                                "value": "string",
                                "language": "string"
                              }
                            ]
                          }
                        },
                        "dietaryList": [
                          "string"
                        ],
                        "eventTypes": [
                          "string"
                        ],
                        "type": "Food",
                        "quickInsertCode": "string",
                        "servingType": "Pp",
                        "servingSize": "string",
                        "includedInMenu": true,
                        "consumptionBased": true,
                        "sellDateRange": {
                          "eventStartDate": "2020-07-13",
                          "eventEndDate": "2020-07-13"
                        },
                        "eventDateRange": {
                          "eventStartDate": "2020-07-13",
                          "eventEndDate": "2020-07-13"
                        },
                        "menusSold": 0,
                        "webBookable": true,
                        "inactive": true,
                        "salesPrice": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "includedInPrice": true,
                        "multiChoice": true,
                        "courseCount": 0,
                        "menuId": {
                          "id": "string",
                          "type": "string"
                        },
                        "serveStartEndTime": {
                          "eventStartDate": "2020-07-13T15:32:09.655Z",
                          "eventEndDate": "2020-07-13T15:32:09.655Z"
                        },
                        "attendees": {
                          "expected": 0,
                          "guaranteed": 0,
                          "actual": 0,
                          "set": 0,
                          "billed": 0,
                          "packageExpected": 0,
                          "packageGuaranteed": 0,
                          "packageActual": 0,
                          "packageBilled": 0
                        },
                        "discountPercentage": 0,
                        "order": 0,
                        "hotelId": "string"
                      },
                      "revenues": [
                        {
                          "revenueType": "string",
                          "type": "Food",
                          "cost": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "internalQuote": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "costMargin": 0,
                          "price": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "priceMargin": 0,
                          "resourceId": {
                            "id": "string",
                            "type": "string"
                          },
                          "custom": true
                        }
                      ],
                      "menuItems": [
                        {
                          "id": {
                            "id": "string",
                            "type": "string"
                          },
                          "hotelId": "string",
                          "classInfo": {
                            "code": "string",
                            "description": "string"
                          },
                          "name1": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "name2": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "name3": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "origin1": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "origin2": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "menuType": "Food",
                          "custom": true,
                          "year": 0,
                          "restriction": "string",
                          "description": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "eventTypes": [
                            "string"
                          ],
                          "responsibleDepartments": [
                            "string"
                          ],
                          "quickInsertCode": "string",
                          "revenueType": "string",
                          "salesPrice": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "cost": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "itemConsumption": true,
                          "container": {
                            "code": "string",
                            "description": "string"
                          },
                          "portion": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "servings": 0,
                          "webBookable": true,
                          "print": true,
                          "inactive": true,
                          "includedYN": true,
                          "eventMenuDetailID": {
                            "id": "string",
                            "type": "string"
                          },
                          "course": 0,
                          "courseOrder": 0,
                          "attendees": {
                            "expected": 0,
                            "guaranteed": 0,
                            "actual": 0,
                            "set": 0,
                            "billed": 0,
                            "packageExpected": 0,
                            "packageGuaranteed": 0,
                            "packageActual": 0,
                            "packageBilled": 0
                          },
                          "discountPercentage": 0,
                          "demandFactor": 0,
                          "mandatoryYN": true
                        }
                      ],
                      "hotelId": "string"
                    }
                  },
                  "item": {
                    "eventItemId": {
                      "id": "string",
                      "type": "string"
                    },
                    "eventItem": {
                      "hotelId": "string",
                      "itemId": {
                        "id": "string",
                        "type": "string"
                      },
                      "itemClassId": {
                        "id": "string",
                        "type": "string"
                      },
                      "itemClassCode": "string",
                      "itemClassDescription": "string",
                      "itemName": {
                        "defaultText": "string",
                        "translations": {
                          "text": [
                            {
                              "value": "string",
                              "language": "string"
                            }
                          ]
                        }
                      },
                      "itemDescription": "string",
                      "itemCode": "string",
                      "revenueType": "string",
                      "revenueTypeEditable": true,
                      "externalOrder": true,
                      "print": true,
                      "sellInfo": {
                        "available": {
                          "startDateTime": "2020-07-13T15:32:09.655Z",
                          "endDateTime": "2020-07-13T15:32:09.655Z"
                        },
                        "availableQty": 0,
                        "qtyInStock": 0,
                        "defaultQty": 0,
                        "sellSeparate": true,
                        "sellControl": true,
                        "welcomeOffer": true,
                        "webBookable": true,
                        "itemClassWebBookable": true,
                        "outsideStay": true,
                        "fixedCharge": true,
                        "discountable": true,
                        "itemClassDiscountable": true,
                        "criticalInventory": true,
                        "price": {
                          "amount": 0,
                          "currencyCode": "string"
                        },
                        "defaultDuration": 0
                      },
                      "setupTime": 0,
                      "setdownTime": 0,
                      "traceText": "string",
                      "itemPool": "string",
                      "displaySequence": 0,
                      "eventTypes": [
                        "string"
                      ],
                      "departments": [
                        "string"
                      ],
                      "attributes": [
                        {
                          "itemAttributeId": {
                            "id": "string",
                            "type": "string"
                          },
                          "translatableName": {
                            "defaultText": "string",
                            "translations": {
                              "text": [
                                {
                                  "value": "string",
                                  "language": "string"
                                }
                              ]
                            }
                          },
                          "setupTime": 0,
                          "setdownTime": 0,
                          "default": true
                        }
                      ],
                      "rates": [
                        {
                          "itemRateId": {
                            "id": "string",
                            "type": "string"
                          },
                          "itemRateCode": "string",
                          "name": "string",
                          "price": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "hourly": true,
                          "default": true
                        }
                      ],
                      "vendors": [
                        {
                          "profileId": {
                            "url": "string",
                            "type": "string",
                            "instance": "string",
                            "idContext": "string",
                            "id": "string",
                            "idExtension": 0
                          },
                          "name": "string",
                          "leadTime": "string",
                          "price": {
                            "amount": 0,
                            "currencyCode": "string"
                          },
                          "priority": 0,
                          "phone": "string",
                          "fax": "string",
                          "email": "string"
                        }
                      ],
                      "resourceNotes": [
                        {
                          "noteId": {
                            "id": "string",
                            "type": "string"
                          },
                          "noteCode": "string",
                          "internal": true,
                          "noteTitle": "string",
                          "comment": "string",
                          "sequence": 0,
                          "createDateTime": "2020-07-13T15:32:09.655Z",
                          "creatorId": "string",
                          "lastModifyDateTime": "2020-07-13T15:32:09.655Z",
                          "lastModifierId": "string",
                          "purgeDate": "2020-07-13"
                        }
                      ],
                      "usedForEvents": true,
                      "usedForReservation": true,
                      "quantity": 0,
                      "attributeId": {
                        "id": "string",
                        "type": "string"
                      },
                      "itemRateId": {
                        "id": "string",
                        "type": "string"
                      },
                      "price": 0,
                      "discount": 0,
                      "priceCode": "string",
                      "internalQuantity": 0,
                      "externalQuantity": 0,
                      "actualInternalQuantity": 0,
                      "actualExternalQuantity": 0,
                      "internalCostPerUnit": 0,
                      "externalCostPerUnit": 0,
                      "actualInternalCostPerUnit": 0,
                      "actualExternalCostPerUnit": 0,
                      "order": 0,
                      "actualQuantity": 0,
                      "packageId": {
                        "id": "string",
                        "type": "string"
                      },
                      "isNameCustom": true,
                      "isExcludeNonDeduct": true,
                      "vendorPrice": 0,
                      "eventStartDate": "2020-07-13T15:32:09.655Z",
                      "eventEndDate": "2020-07-13T15:32:09.655Z"
                    }
                  }
                },
                "links": [
                  {
                    "href": "string",
                    "rel": "string",
                    "templated": false,
                    "method": "GET",
                    "targetSchema": "string",
                    "operationId": "string",
                    "title": "string"
                  }
                ]
              }
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      }
    },
    "/opportunityEvents": {
      "post": {
        "summary": "Create Events for Opportunity Block",
        "description": "You can use this API to add Events for an Opportunity Block. <p><strong>OperationId:</strong>postOpportunityEvents</p>",
        "operationId": "postOpportunityEvents",
        "parameters": [
          {
            "name": "opportunityEvents",
            "in": "body",
            "required": true,
            "description": "Request object for adding Events for an Opportunity Block.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/opportunityEvents"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response object for creating new event.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "EventManagement"
        ]
      }
    }
  },
  "parameters": {
    "authKey": {
      "name": "authorization",
      "description": "Bearer token that needs to be passed which is generated post user authentication",
      "type": "string",
      "in": "header",
      "required": true
    },
    "x-app-key": {
      "name": "x-app-key",
      "description": "Client or PartnerAC/a,!a,,C/s Application Key",
      "type": "string",
      "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
      "in": "header",
      "required": true
    },
    "x-hotelid": {
      "name": "x-hotelid",
      "type": "string",
      "description": "Mandatory parameter to identify the hotel code where the eventEndDate user is logged in",
      "in": "header",
      "required": true
    },
    "x-externalsystem": {
      "name": "x-externalsystem",
      "type": "string",
      "maxLength": 80,
      "description": "External system code.",
      "in": "header",
      "x-example": "EXTERNALSYSTEMCODE"
    },
    "Accept-Language": {
      "name": "Accept-Language",
      "type": "string",
      "description": "Language code",
      "in": "header"
    },
    "x-hubid": {
      "name": "x-hubid",
      "type": "string",
      "description": "x-hubid is a logical grouping of multiple properties that allows api consumers to manage data from a group of properties. This x-hubid is a valid list of hub codes configured in OPERA to which the user has access. Rest APIs without hotelId in the operation path can support hub level integration using x-hubid",
      "in": "header"
    }
  },
  "responses": {
    "400": {
      "description": "Bad Request",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "401": {
      "description": "Unauthorized"
    },
    "403": {
      "description": "Forbidden"
    },
    "404": {
      "description": "Resource not found",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "405": {
      "description": "Method not allowed"
    },
    "406": {
      "description": "Not acceptable."
    },
    "413": {
      "description": "Request Entity Too Large"
    },
    "414": {
      "description": "Request URI Too Large"
    },
    "415": {
      "description": "Unsupported Media Type"
    },
    "500": {
      "description": "System Error",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "502": {
      "description": "Bad Gateway"
    },
    "503": {
      "description": "Service Unavailable"
    }
  },
  "definitions": {
    "manageAlternateEvents": {
      "type": "object",
      "description": "Request object for managing catering events those are alternate to other catering events.",
      "properties": {
        "manageAlternateEventsInstruction": {
          "description": "An instruction for managing catering events those are alternate to other catering events.",
          "$ref": "#/definitions/manageAlternateEventsInstructionType"
        },
        "alternateEvents": {
          "description": "Collection of alternate events to be managed.",
          "$ref": "#/definitions/eventsInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "manageAlternateEventsInstructionType": {
      "type": "string",
      "description": "Collection of instructions for managing catering events those are alternate to other catering events.",
      "enum": [
        "Copy",
        "Delete",
        "ConvertToRegular"
      ]
    },
    "eventsInfoType": {
      "type": "array",
      "description": "Pertain event information.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/eventInfoType"
      }
    },
    "eventInfoType": {
      "type": "object",
      "description": "Catering Event information.",
      "properties": {
        "eventPrimaryInfo": {
          "description": "Pertain event primary information.",
          "$ref": "#/definitions/eventPrimaryInfoType"
        },
        "eventDetail": {
          "description": "Pertain detail event's information.",
          "$ref": "#/definitions/eventDetailType"
        },
        "eventResources": {
          "description": "Pertain detail event's information.",
          "$ref": "#/definitions/eventResourcesListType"
        },
        "processInstructions": {
          "description": "Instructions to control how the event is created.",
          "$ref": "#/definitions/eventProcessInstructionsType"
        },
        "eventBlockInfo": {
          "description": "Pertain information for block where event belongs to.",
          "$ref": "#/definitions/blockType"
        },
        "functionSpaceInformation": {
          "description": "Pertain event's function space information.",
          "$ref": "#/definitions/eventFunctionSpaceType"
        },
        "eventNotes": {
          "description": "Pertain event's notes.",
          "$ref": "#/definitions/eventNotesType"
        },
        "eventIndicators": {
          "description": "Indicators of additional information attached to the event",
          "$ref": "#/definitions/indicatorsType"
        },
        "onTheBooksRevenue": {
          "description": "On The Books (OTB) catering revenue for the event.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "subEventsDetail": {
          "description": "Pertain detail information of sub event/events.",
          "$ref": "#/definitions/lightEventsDetailType"
        },
        "altEventsDetail": {
          "description": "Pertain detail information of alternate event/events in case functionspace for current event becomes unavailable",
          "$ref": "#/definitions/lightEventsDetailType"
        },
        "masterEventDetail": {
          "description": "Pertain detail information of master event.",
          "$ref": "#/definitions/lightEventDetailType"
        },
        "eventRevenues": {
          "description": "Pertain event revenues.",
          "$ref": "#/definitions/eventRevenuesInformationType"
        }
      }
    },
    "eventPrimaryInfoType": {
      "type": "object",
      "description": "Pertain event identifications.",
      "properties": {
        "eventId": {
          "description": "Unique identifier for the event.",
          "$ref": "#/definitions/eventId"
        },
        "hotelId": {
          "description": "Hotel code where event will be organized.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "includeSubEvents": {
          "description": "Indicates whether to delete/inactive the sub event(s) of the master event.",
          "type": "boolean"
        }
      }
    },
    "eventId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "eventDetailType": {
      "type": "object",
      "description": "Pertain Information about the Event Details",
      "properties": {
        "eventName": {
          "description": "Name of event.",
          "$ref": "#/definitions/translationTextType60"
        },
        "eventType": {
          "description": "Type of event.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "eventTimeSpan": {
          "description": "Pertain event duration from eventStartDate and eventEndDate date and time.",
          "$ref": "#/definitions/dateTimeSpanType"
        },
        "eventStatus": {
          "description": "Status details of the Event.",
          "$ref": "#/definitions/bookingStatusType"
        },
        "waitlistReturnStatus": {
          "description": "This is to show the turned status of an event",
          "$ref": "#/definitions/bookingStatusType"
        },
        "cateringStatusType": {
          "description": "Event Status Type Flag to identify if the Catering event is cancelled or lost. Examples are C(Cancelled), L (Lost), R (Refused).",
          "$ref": "#/definitions/cateringStatusTypeType"
        },
        "attendees": {
          "description": "Attendees defined in the catering event.",
          "$ref": "#/definitions/cateringEventsAttendeesType"
        },
        "masterEventId": {
          "description": "Master event identifier.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "doorcard": {
          "description": "It is the group details to display on the outside of a meeting functionSpaceDetails.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "eventLink": {
          "description": "Link information with other event(s).",
          "$ref": "#/definitions/cateringEventLinkType"
        },
        "inactiveDate": {
          "description": "Inactivation date of the event.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "packageId": {
          "description": "Package Id of the Event.",
          "type": "integer"
        },
        "packageCode": {
          "description": "Package Code of the Event if it has a Package Enabled in it.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "packageName": {
          "description": "Package Name of the Event.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "masterEvent": {
          "description": "Indicates whether event is master event.",
          "type": "boolean"
        },
        "subEvent": {
          "description": "Flag to indicate if the event is a sub event.",
          "type": "boolean"
        },
        "packageEvent": {
          "description": "Flag to indicate if the event is part of a package.",
          "type": "boolean"
        },
        "alternateEvent": {
          "description": "Flag to indicate if the event is booked as a backup for another event.",
          "type": "boolean"
        },
        "waitlisted": {
          "description": "Indicates whether event is wait listed.",
          "type": "boolean"
        },
        "notMoveable": {
          "description": "Indicates whether event dates and functionSpaceDetails are move able.",
          "type": "boolean"
        },
        "loudEvent": {
          "description": "Indicates whether the event is expected to be noisy and might possibly disturb other events.",
          "type": "boolean"
        },
        "hasPostings": {
          "description": "Indicates whether the events has postings.",
          "type": "boolean"
        },
        "displayDoorcard": {
          "description": "Indicates whether display the doorcard information on the Event Overview report.",
          "type": "boolean"
        },
        "cateringDeductInventory": {
          "description": "Indicates if catering event's spaces are deducted from inventory",
          "type": "boolean"
        },
        "eventShared": {
          "description": "Flag to indicate if the event is shareable with other events.",
          "type": "boolean"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "includeSpaceInPackage": {
          "description": "Flag to indicate if the event space is associated from the Package",
          "type": "boolean"
        },
        "eventLevelRevenueActualization": {
          "description": "Flag that indicates if actual revenue can be manually edited.",
          "type": "boolean"
        },
        "externalURL": {
          "description": "Field to save the external URL Enterted by the user in the event Overview Section.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "translationTextType60": {
      "type": "object",
      "description": "Contains Multiple translated texts and language codes.",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 60.",
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        },
        "translations": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "translationsTextType": {
      "type": "array",
      "description": "Language code for the translation.",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Used for Character Strings, length 0 to 2000.",
            "minLength": 0,
            "maxLength": 2000
          },
          "language": {
            "description": "Language identification.",
            "type": "string",
            "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          }
        },
        "description": "Language code for the translation."
      }
    },
    "dateTimeSpanType": {
      "type": "object",
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield eventEndDate date.",
      "properties": {
        "startDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "endDateTime": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "bookingStatusType": {
      "type": "object",
      "description": "Booking status code, description and configured color of the status. This will be used for block and event statuses.",
      "properties": {
        "status": {
          "description": "Status code and description.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "color": {
          "description": "Color from status configuration.",
          "$ref": "#/definitions/statusColorType"
        }
      }
    },
    "codeDescriptionType": {
      "type": "object",
      "description": "This contains a generic code and description information.",
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "statusColorType": {
      "type": "string",
      "description": "Status code color configuration type.",
      "enum": [
        "White",
        "Red",
        "Blue",
        "Cyan",
        "Magenta",
        "Green",
        "Brown",
        "Black",
        "Yellow",
        "Gray"
      ]
    },
    "cateringStatusTypeType": {
      "type": "string",
      "description": "List of Event Status Types to identify the current status of catering events.",
      "enum": [
        "Waitlist",
        "Regret",
        "Inquiry",
        "Cancel",
        "Actual",
        "Referral",
        "Lost"
      ]
    },
    "cateringEventsAttendeesType": {
      "type": "object",
      "description": "All different attendees that a catering event can have.",
      "properties": {
        "expected": {
          "description": "Number of expected attendees for the catering event.",
          "type": "integer",
          "minimum": 0
        },
        "guaranteed": {
          "description": "Number of guaranteed attendees for the catering event.",
          "type": "integer",
          "minimum": 0
        },
        "actual": {
          "description": "Number of actual attendees attending to the catering event.",
          "type": "integer",
          "minimum": 0
        },
        "set": {
          "description": "Setup for number of event attendees for resources (i.e. water, pads, tables, etc.).",
          "type": "integer",
          "minimum": 0
        },
        "billed": {
          "description": "This defines the count of billed attendees with respect to the menu.",
          "type": "integer",
          "minimum": 0
        },
        "packageExpected": {
          "description": "Number of package expected attendees for the catering event.",
          "type": "integer",
          "minimum": 0
        },
        "packageGuaranteed": {
          "description": "Number of package guaranteed attendees for the catering event.",
          "type": "integer",
          "minimum": 0
        },
        "packageActual": {
          "description": "Number of actual package attendees attending the catering event.",
          "type": "integer",
          "minimum": 0
        },
        "packageBilled": {
          "description": "This defines the count of package billed attendees with respect to the menu.",
          "type": "integer",
          "minimum": 0
        }
      }
    },
    "uniqueID_Type": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "cateringEventLinkType": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "type": {
          "$ref": "#/definitions/cateringEventLinkTypeType"
        },
        "masterEventDates": {
          "$ref": "#/definitions/dateTimeSpanType"
        }
      }
    },
    "cateringEventLinkTypeType": {
      "type": "string",
      "description": "A collection of supported list of link types for catering events.",
      "enum": [
        "SubEvent",
        "Alternate"
      ]
    },
    "eventResourcesListType": {
      "type": "array",
      "description": "Event resources information.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cateringEventResourceType"
      }
    },
    "cateringEventResourceType": {
      "type": "object",
      "description": "Event resource information.",
      "properties": {
        "resourceId": {
          "description": "Unique identifier for an event resource.",
          "$ref": "#/definitions/resourceId"
        },
        "resourceType": {
          "description": "Type of event resource.",
          "$ref": "#/definitions/resourceType"
        },
        "resourceName": {
          "description": "Resource name, this could be a resource item or a menu.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "setupCode": {
          "description": "Setup style for the function space.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "itemAttribute": {
          "description": "Item attribute name for non Food and Beverage item.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "quantity": {
          "description": "The required quantity of the resource.",
          "type": "number"
        },
        "hours": {
          "description": "The number of charged hours for the resource.",
          "type": "number"
        },
        "persons": {
          "description": "The number of charged persons for the resource.",
          "type": "number"
        },
        "quantityIncluded": {
          "description": "The attendees/quantity of an item INCLUDED in a package price.",
          "type": "number"
        },
        "quantityExcluded": {
          "description": "The attendees/quantity charged extra, EXCLUDED from the package price.",
          "type": "number"
        },
        "unitPrice": {
          "description": "Price per unit of the resource.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "revenue": {
          "description": "Total revenue on the books.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "rentalCode": {
          "description": "Rate Code that is attached to the function spaces and non Food and Beverage items",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "discount": {
          "description": "The menu discount percentage.",
          "type": "number"
        },
        "eventResourceNotes": {
          "description": "Pertains to the event resource's notes.",
          "$ref": "#/definitions/eventResourceNotesType"
        },
        "sellStartDate": {
          "description": "Sell Start Date of resource of type Menu.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "sellEndDate": {
          "description": "Sell End Date of resource of type Menu.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "eventStartDate": {
          "description": "Event Start Date of resource of type Menu.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "eventEndDate": {
          "description": "Event End Date of resource of type Menu.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "consumptionBased": {
          "description": "Indicates that this resource is consumption based in a catering package",
          "type": "boolean"
        },
        "multiChoice": {
          "description": "Indicates that this resource is a MultiChoice Menu or not",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel code which the event resource belong to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "order": {
          "description": "The order of the resource in the Banquet Event Order within their specific resource group.",
          "type": "string"
        },
        "hasDiscountMenuItem": {
          "description": "Flag that indicates if at least one menu item has a discount.",
          "type": "boolean"
        },
        "hasNotes": {
          "description": "Flag that indicates the resource has notes associated with it.",
          "type": "boolean"
        },
        "external": {
          "description": "Indicates that item must be ordered externally.",
          "type": "boolean"
        },
        "custom": {
          "description": "Indicates that this resource item is a custom item added for this event.",
          "type": "boolean"
        },
        "packaged": {
          "description": "Indicates that this resource is included in a catering package.",
          "type": "boolean"
        }
      }
    },
    "resourceId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "resourceType": {
      "type": "string",
      "description": "List of resource types.",
      "enum": [
        "FunctionSpace",
        "Menu",
        "Item"
      ]
    },
    "currencyAmountType": {
      "type": "object",
      "description": "A monetary value expressed with a currency code.",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "eventResourceNotesType": {
      "type": "array",
      "description": "Contains event resource comment information.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/eventResourceNoteType"
      }
    },
    "eventResourceNoteType": {
      "type": "object",
      "description": "Contains the event resource's comment information.",
      "properties": {
        "noteId": {
          "description": "Unique identifier for event resource comment. If it is missing, this indicate that it is a new comment. If only NoteID is provided then it is a delete operation",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "noteCode": {
          "description": "Note code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "internal": {
          "description": "Indicates if the comment is internal use only.",
          "type": "boolean"
        },
        "noteTitle": {
          "description": "Contains comment title.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "comment": {
          "description": "Contains comment text.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "sequence": {
          "description": "Contains display sequence.",
          "type": "integer"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "eventProcessInstructionsType": {
      "type": "object",
      "description": "Instructions to control how the event is created.",
      "properties": {
        "overrideCapacity": {
          "description": "Flag to indicate if configured function space capacity can be overriden.",
          "type": "boolean"
        },
        "overbook": {
          "description": "Flag to indicate if the function space can be booked when it is occupied by another event.",
          "type": "boolean"
        },
        "shareable": {
          "description": "Flag to indicate if the function space can be booked as shareable with another event.",
          "type": "boolean"
        },
        "overrideMaxgroups": {
          "description": "Flag to indicate if maximum group configured in function space can be overriden.",
          "type": "boolean"
        },
        "waitList": {
          "description": "Flag to indicate if the event can be waitlisted when function space is not available.",
          "type": "boolean"
        },
        "warnFunctionSpace": {
          "description": "Flag to return a warning when the functionspace is being used by other catering event.",
          "type": "boolean"
        },
        "convertToSubEvent": {
          "description": "Flag to indicate that the Event is being converted from Regular Event as a Sub Event linking to a Master Event.",
          "type": "boolean"
        },
        "convertToRegularEvent": {
          "description": "Flag to indicate that the Event is being converted from Sub Event as a Regular Event.",
          "type": "boolean"
        },
        "quickEvent": {
          "description": "Flag to indicate that both Block and Event would be created as part of the Quick Event process.",
          "type": "boolean"
        }
      }
    },
    "blockType": {
      "type": "object",
      "properties": {
        "blockIdList": {
          "description": "Collection of unique block identifiers.",
          "$ref": "#/definitions/blockIdList"
        },
        "externalReferences": {
          "description": "External Reference information for Reservation.",
          "$ref": "#/definitions/externalReferencesType"
        },
        "blockDetails": {
          "description": "Detailed Block information for this block.",
          "$ref": "#/definitions/blockDetailsType"
        },
        "blockOwners": {
          "description": "Criteria to assign the owners of a business block.",
          "$ref": "#/definitions/blockOwnersType"
        },
        "catering": {
          "description": "Details of catering Information for the Block.",
          "$ref": "#/definitions/cateringType"
        },
        "blockProfiles": {
          "description": "A collection of all the profiles associated to this block. Please comment that during a change operation this performs a full overlay if the attribute FullOverlay is set to true. In a full overlay, all the profiles that should be associated to the block should be provided during a change operation. Any profiles not provided will be detached from this block. By default the full overlay is considered false if this tag is left blank. If values are provided for profiles, only the full overlay functionality is provided at this time.",
          "type": "object",
          "properties": {
            "blockProfile": {
              "description": "The list of profiles associated with the block.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/blockProfilesType"
              }
            },
            "fullOverlay": {
              "description": "Indicates whether to perform a full overlay for the profiles. Currently only the Fulloverlay functionality is provided.",
              "type": "boolean"
            }
          }
        },
        "inventoryItems": {
          "description": "A collection of inventory items attached to a block.",
          "$ref": "#/definitions/blockInventoryItemsType"
        },
        "blockStatistics": {
          "description": "Indicates the functionSpaceDetails and revenue statistics of the block.",
          "$ref": "#/definitions/blockStatisticsType"
        },
        "comments": {
          "description": "List of notes for the Block.",
          "type": "object",
          "properties": {
            "commentInfo": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/commentInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "blockIndicators": {
          "description": "Indicators of additional information attached to the block",
          "$ref": "#/definitions/indicatorsType"
        },
        "traces": {
          "description": "List of block traces.",
          "$ref": "#/definitions/blockTracesType"
        },
        "statistics": {
          "description": "Statistics summary information including Rooms Sold, Room Revenue, Food and Beverage Revenue, Average Room Rate,etc.",
          "type": "array",
          "maxItems": 3,
          "items": {
            "$ref": "#/definitions/blockStatisticsSummaryType"
          }
        },
        "blockSecurity": {
          "description": "Block security information used for an external system. Only available if configured in OPERA Cloud.",
          "type": "object",
          "properties": {
            "securedFromDIdisplayYn": {
              "description": "Secured from DI Display.",
              "type": "boolean"
            },
            "allDescriptionDDSecuredYn": {
              "description": "All Description DD Secured.",
              "type": "boolean"
            },
            "ratesSecuredfromGNRYn": {
              "description": "Rates Secured from GNR.",
              "type": "boolean"
            },
            "ratesSecuredfromAllDisplaysYn": {
              "description": "Rates Secured from All Displays.",
              "type": "boolean"
            },
            "housingInformationSecuredYn": {
              "description": "Housing Information Secured.",
              "type": "boolean"
            },
            "daysDepositRequired": {
              "description": "Number of Days Deposit due to guarantee the guest booking.",
              "type": "number"
            },
            "advanceCancelDays": {
              "description": "Number of days before the arrival date a reservation can be canceled without losing the deposit.",
              "type": "number"
            },
            "returnOneDayAtTimeYn": {
              "description": "Return One Day at a time.",
              "type": "boolean"
            },
            "commissionableYn": {
              "description": "Determines if Travel Agent commission will be paid on reservations booked through the HOLIDEX Plus TACP program.",
              "type": "boolean"
            }
          }
        },
        "sellMessages": {
          "description": "List of sell messages for the Block.",
          "$ref": "#/definitions/sellMessageConfigsType"
        },
        "attachments": {
          "description": "List of attachments for the Block.",
          "$ref": "#/definitions/attachmentsType"
        },
        "washSchedules": {
          "description": "List of wash schedules for the Block.",
          "$ref": "#/definitions/blockWashSchedulesType"
        },
        "restrictions": {
          "description": "List of restrictions for the Block.",
          "$ref": "#/definitions/blockRestrictionsType"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "markAsRecentlyAccessed": {
          "description": "Mark this block as recently accessed.",
          "type": "boolean"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "blockIdList": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "externalReferencesType": {
      "type": "array",
      "description": "This type contains unique information of external reference.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/externalReferenceType"
      }
    },
    "externalReferenceType": {
      "type": "object",
      "description": "This type contains unique information of external reference.",
      "properties": {
        "id": {
          "description": "Unique ID of external reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "ID extension for external reference.",
          "type": "integer"
        },
        "idContext": {
          "description": "ID context for external reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "blockDetailsType": {
      "type": "object",
      "description": "Information about the Block Details",
      "properties": {
        "blockCode": {
          "description": "Block code for the block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "blockName": {
          "description": "Name of the block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "blockDates": {
          "description": "The Time Span(Arrival, Departure) which covers the Block Span.",
          "$ref": "#/definitions/timeSpanType"
        },
        "shoulderDates": {
          "description": "The Shoulder Dates (Arrival, Departure) which covers the Block Shoulder Span.",
          "$ref": "#/definitions/timeSpanType"
        },
        "blockStatus": {
          "description": "Current status of the block.",
          "$ref": "#/definitions/bookingStatusDetailType"
        },
        "reservationType": {
          "description": "Reservation Type info of the block.",
          "$ref": "#/definitions/reservationTypeInfoType"
        },
        "marketCode": {
          "description": "Market code info of the block.",
          "$ref": "#/definitions/marketCodeInfoType"
        },
        "sourceOfSale": {
          "description": "Point of Sale of block. Identifies the entity/channel who made the block reservation.",
          "$ref": "#/definitions/blockSourceOfSaleType"
        },
        "bookingType": {
          "description": "Business Block Type field on the Business Block",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "status": {
          "description": "Internal status for the block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "blockType": {
          "description": "Internal type of the block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "conversionCode": {
          "description": "Indicates the likelihood description of the block moving to the next active block status.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "conversionCodeDescription": {
          "description": "Indicates the likelihood of the block moving to the next active block status.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "rateProtectionDetails": {
          "description": "Indicates the Rate Protection details for the block.",
          "$ref": "#/definitions/blockRateProtectionType"
        },
        "nonCompeteDetails": {
          "description": "Indicates the non-competing industry details.",
          "$ref": "#/definitions/blockNonCompeteType"
        },
        "rankingCode": {
          "description": "Indicates the ranking of the block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rankingCodeDescription": {
          "description": "Indicates the ranking description of the block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "currencyCode": {
          "description": "Currency Code attached to the business block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelName": {
          "description": "A text field used to communicate the proper name of the hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "blockClassification": {
          "description": "Indicate Block Classification.",
          "$ref": "#/definitions/blockClassificationType"
        },
        "primaryOwners": {
          "description": "Primary owners for the block.",
          "type": "object",
          "properties": {
            "blockOwner": {
              "description": "Primary Block Owner",
              "$ref": "#/definitions/blockOwnerType"
            },
            "roomsOwner": {
              "description": "Primary Rooms Owner",
              "$ref": "#/definitions/blockOwnerType"
            },
            "cateringOwner": {
              "description": "Primary Catering Owner",
              "$ref": "#/definitions/blockOwnerType"
            },
            "blockOwnerCount": {
              "description": "Total number of Block Owners.",
              "type": "number"
            },
            "roomsOwnerCount": {
              "description": "Total number of Rooms Owners.",
              "type": "number"
            },
            "cateringOwnerCount": {
              "description": "Total number of Catering Owners.",
              "type": "number"
            }
          }
        },
        "primaryProfiles": {
          "description": "Primary account and contact for the block.",
          "type": "object",
          "properties": {
            "account": {
              "description": "Primary Account",
              "$ref": "#/definitions/blockProfilesType"
            },
            "contact": {
              "description": "Primary Contact",
              "$ref": "#/definitions/blockProfilesType"
            },
            "image": {
              "description": "The primary profile image. If primary contact exists, Contact Image, otherwise primary Account Image",
              "$ref": "#/definitions/imageSetType"
            }
          }
        },
        "cateringOnlyBlock": {
          "description": "Indicates if this is a catering only block.",
          "type": "boolean"
        },
        "flexibleDates": {
          "description": "Indicates if alternate dates are allowed for the booking.",
          "type": "boolean"
        },
        "externalLocked": {
          "description": "Indicates if the block is locked by an external system.",
          "type": "boolean"
        }
      }
    },
    "timeSpanType": {
      "type": "object",
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield eventEndDate date.",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "duration": {
          "type": "string"
        }
      }
    },
    "bookingStatusDetailType": {
      "type": "object",
      "description": "Booking Status details of the business block.",
      "properties": {
        "bookingStatus": {
          "description": "Booking Status of the business block.",
          "$ref": "#/definitions/bookingStatusType"
        },
        "deductInventory": {
          "description": "Indicates if blocked rooms are deducted from inventory.",
          "type": "boolean"
        },
        "cateringDeductInventory": {
          "description": "Indicates if catering event's spaces are deducted from inventory",
          "type": "boolean"
        },
        "returnToInventory": {
          "description": "Indicates if blocked rooms will be returned to availability or not.",
          "type": "boolean"
        },
        "statusType": {
          "description": "Indicates status type Inquiry, Actual, Cancel, etc.",
          "$ref": "#/definitions/blockStatusTypeType"
        },
        "catStatusType": {
          "description": "Indicates status type Inquiry, Actual, Cancel, etc.",
          "$ref": "#/definitions/blockStatusTypeType"
        }
      }
    },
    "blockStatusTypeType": {
      "type": "string",
      "description": "Simple type for specifying the block status type.",
      "enum": [
        "Inquiry",
        "Actual",
        "Waitlist",
        "Cancel",
        "Referral"
      ]
    },
    "reservationTypeInfoType": {
      "type": "object",
      "properties": {
        "reservationType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "chainCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "marketCodeInfoType": {
      "type": "object",
      "properties": {
        "marketCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "marketGroup": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "blockSourceOfSaleType": {
      "type": "object",
      "description": "Point of Sale of Block. Identifies the entity/channel who made the block reservation.",
      "properties": {
        "sourceCode": {
          "description": "Identifies how this block came into the property.",
          "$ref": "#/definitions/sourceCodeInfoType"
        }
      }
    },
    "sourceCodeInfoType": {
      "type": "object",
      "properties": {
        "sourceCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceGroup": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "blockRateProtectionType": {
      "type": "object",
      "description": "Block Rate Protection code information.",
      "properties": {
        "criteria": {
          "description": "Indicates the type of rate protection. 'All' means all dates are rate protected. 'None' specifies no rate protection. 'Selected' specifies few dates are rate protected.",
          "$ref": "#/definitions/rateProtectionType"
        },
        "protectedDates": {
          "description": "Specifies all the Rate protected dates in the selected range.",
          "$ref": "#/definitions/datesType"
        }
      }
    },
    "rateProtectionType": {
      "type": "string",
      "description": "Simple type for specifying the block protection type.",
      "enum": [
        "All",
        "Selected",
        "None"
      ]
    },
    "datesType": {
      "type": "array",
      "description": "Specifies a single date.",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "format": "date",
        "maxLength": 8
      }
    },
    "blockNonCompeteType": {
      "type": "object",
      "description": "Block Non Compete code information.",
      "properties": {
        "industry": {
          "description": "Specifies the Non-Compete Industry.>",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "industryDescription": {
          "description": "Specifies the Non-Compete Industry description.>",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "criteria": {
          "description": "Indicates the type of Non-Compete. 'All' means all dates are Non-Compete. 'None' specifies Non-Compete is disabled. 'Selected' specifies few dates are Non-Compete.",
          "$ref": "#/definitions/rateProtectionType"
        },
        "protectedDates": {
          "description": "Specifies all the Non-Compete dates in the selected date range.",
          "$ref": "#/definitions/datesType"
        }
      }
    },
    "blockClassificationType": {
      "type": "string",
      "description": "Simple type for block instructions to be used in requests for fetching blocks. Valid status values are MASTER_BLOCK, MASTER_TOUR, FIT_MASTER, MASTER_ALLOCATION, MASTER_ITINERARY, LEAD_MASTER, REGULAR_BOOKING, SUB_BLOCK, SUB_TOUR, FIT_CONTRACT, SUB_ALLOCATION, SUB_ITINERARY, LEAD.",
      "enum": [
        "MasterBlock",
        "MasterTour",
        "MasterAllocation",
        "MasterItinerary",
        "LeadMaster",
        "RegularBooking",
        "SubBlock",
        "SubTour",
        "FitContract",
        "SubAllocation",
        "SubItinerary",
        "Lead",
        "FitMaster",
        "Opportunity"
      ]
    },
    "blockOwnerType": {
      "type": "object",
      "description": "Generic type for information about an owner.",
      "properties": {
        "hotel": {
          "description": "Hotel to which the owner belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "userId": {
          "description": "Unique application user ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "userName": {
          "description": "Unique application user name of the owner.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "ownerCode": {
          "description": "Unique Code to identify the owner.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "profileId": {
          "description": "Unique owner profile information.",
          "$ref": "#/definitions/profileId"
        },
        "name": {
          "description": "Provides name information of the owner.",
          "$ref": "#/definitions/personNameType"
        },
        "department": {
          "description": "Department to which the owner belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "email": {
          "description": "Email information of the owner.",
          "$ref": "#/definitions/emailInfoType"
        },
        "phone": {
          "description": "Information on the telephone number of the owner.",
          "$ref": "#/definitions/telephoneInfoType"
        },
        "relationship": {
          "description": "Relationship of the owner within the profile or block.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "primary": {
          "description": "When true, this is a primary owner.",
          "type": "boolean"
        },
        "ownership": {
          "description": "Specifies the business block ownership type.",
          "$ref": "#/definitions/blockOwnershipType"
        }
      }
    },
    "profileId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "personNameType": {
      "type": "object",
      "description": "This provides name information for a person.",
      "properties": {
        "namePrefix": {
          "description": "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "givenName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "middleName": {
          "description": "The middle name of the person name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "surname": {
          "description": "Family name, last name. May also be used for full name if the sending system does not have the ability to separate a full name into its parts, e.g. the surname elementSpace may be used to pass the full name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "nameTitleSuffix": {
          "description": "Title Suffix. Must be populated if ADVANCED_TITLE is on.",
          "type": "integer"
        },
        "nameType": {
          "description": "Type of name of the individual, such as former, nickname, alternate or alias name.",
          "$ref": "#/definitions/personNameTypeType"
        }
      }
    },
    "personNameTypeType": {
      "type": "string",
      "description": "Person's name in an external system.",
      "enum": [
        "Primary",
        "Alternate",
        "Incognito",
        "External",
        "Phonetic"
      ]
    },
    "emailInfoType": {
      "type": "object",
      "description": "Information on an email for the customer.",
      "properties": {
        "email": {
          "description": "eMail deatils for the profile.",
          "$ref": "#/definitions/emailType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "emailType": {
      "type": "object",
      "description": "Information on an email for the customer.",
      "properties": {
        "emailAddress": {
          "description": "Defines the e-mail address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "type": {
          "description": "Defines the purpose of the e-mail address (e.g. personal, business, listserve).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Describes the Type code",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "emailFormat": {
          "description": "Supported Email format.",
          "type": "string",
          "enum": [
            "Html",
            "Text"
          ]
        }
      }
    },
    "telephoneInfoType": {
      "type": "object",
      "description": "Information on a telephone number for the customer.",
      "properties": {
        "telephone": {
          "description": "Phone details for the profile.",
          "$ref": "#/definitions/telephoneType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "telephoneType": {
      "type": "object",
      "description": "Information on a telephone number for the customer.",
      "properties": {
        "phoneTechType": {
          "description": "Indicates type of technology associated with this telephone number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "phoneUseType": {
          "description": "Describes the type of telephone number, in the context of its general use (e.g. Home, Business, Emergency Contact, Travel Arranger, Day, Evening).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "phoneUseTypeDescription": {
          "description": "Description of the PhoneUseType code",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "phoneNumber": {
          "description": "Telephone number assigned to a single location.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "blockOwnershipType": {
      "type": "string",
      "description": "Specifies the type of the owner associated with the business block(Block/Rooms/Catering).",
      "enum": [
        "Block",
        "Rooms",
        "Catering"
      ]
    },
    "blockProfilesType": {
      "type": "object",
      "description": "A collection of Profile objects or Unique IDs of Profiles.",
      "properties": {
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "profile": {
          "description": "Provides detailed information regarding either a company or a customer profile.",
          "$ref": "#/definitions/profileType"
        },
        "primary": {
          "description": "Is this profile attached to block is primary?",
          "type": "boolean"
        },
        "blockProfileType": {
          "description": "Determines the type of the block profile.",
          "$ref": "#/definitions/blockProfileTypeType"
        }
      }
    },
    "uniqueIDListType": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "profileType": {
      "type": "object",
      "description": "Type provides the detailed information about the profile and its children.",
      "properties": {
        "customer": {
          "description": "Detailed customer information for this profile.",
          "$ref": "#/definitions/customerType"
        },
        "company": {
          "description": "Detailed company information for this profile.",
          "$ref": "#/definitions/companyType"
        },
        "profileImage": {
          "description": "The profile image.",
          "$ref": "#/definitions/imageSetType"
        },
        "addresses": {
          "description": "List of customer addresses.",
          "type": "object",
          "properties": {
            "addressInfo": {
              "description": "Collection of Detailed information on an address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/addressInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "ownerCode": {
          "description": "Owner Code associated to the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "uRLs": {
          "description": "List of Information on a URL for the customer.",
          "type": "object",
          "properties": {
            "uRLInfo": {
              "description": "Collection of Detailed information on web url/address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/uRLInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "comments": {
          "description": "List of Notes for the customer.",
          "type": "object",
          "properties": {
            "commentInfo": {
              "description": "Collection of Detailed information on comments for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/commentInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "relationships": {
          "description": "Contains a collection of profiles that have a relationship with this profile.",
          "type": "object",
          "properties": {
            "relationship": {
              "description": "A collection of the profiles that have a relationship with this profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/relationshipInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "relationshipsSummary": {
          "description": "Contains a collection of profiles that have a relationship with this profile.",
          "type": "object",
          "properties": {
            "relationship": {
              "description": "A collection of the profiles summary that have a relationship with this profile.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/relationshipInfoSummaryType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "stayReservationInfoList": {
          "description": "Collection of Detailed information on history and future reservations associated with the profile.",
          "$ref": "#/definitions/reservationStayHistoryFutureInfoType"
        },
        "roomOwnershipsList": {
          "description": "Room Ownership records.",
          "type": "object",
          "properties": {
            "roomOwnershipInfo": {
              "description": "Collection of Detailed information on Room Ownership records.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/roomOwnershipType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        },
        "statusCode": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "registeredProperty": {
          "description": "Hotel which this profile is registered with. This attribute is not used for configuration.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "requestForHotel": {
          "description": "Hotel which this profile is to be registered. This attribute is only used during creation of profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "showInactiveRoomOwners": {
          "description": "Flag to show inactive Room Owners.",
          "type": "boolean"
        }
      }
    },
    "customerType": {
      "type": "object",
      "description": "Contains basic data on the customer's identity, location, relationships, finances, memberships, etc.",
      "properties": {
        "personName": {
          "description": "Detailed name information for the customer.",
          "type": "array",
          "maxItems": 5,
          "items": {
            "$ref": "#/definitions/personNameType"
          }
        },
        "genderCode": {
          "description": "Identifies the profile gender code based from configured gender list of values.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vipStatus": {
          "description": "VIP status of the customer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vipDescription": {
          "description": "Description of the VIP status.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "companyType": {
      "type": "object",
      "properties": {
        "companyName": {
          "description": "Name of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nationality": {
          "description": "Nationality code identification",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "nationalityDescription": {
          "description": "Nationality code description",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "vipStatus": {
          "description": "VIP status of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vipDescription": {
          "description": "Description of the VIP status.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "imageSetType": {
      "type": "object",
      "description": "Represents on image set record.",
      "properties": {
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "imageSet": {
          "description": "The image set name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 800
        },
        "sequenceId": {
          "description": "The image set sequence ID.",
          "type": "integer"
        },
        "imageStyle": {
          "description": "The image set enumerated style.",
          "$ref": "#/definitions/imageStyleType"
        },
        "imageType": {
          "description": "The image set type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "hotelId": {
          "description": "The image set hotel code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "chainCode": {
          "description": "The image set chain code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "imageURL": {
          "description": "The image set URL.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "description": {
          "description": "The image set description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "imageOrder": {
          "description": "The image set order.",
          "type": "integer"
        },
        "website": {
          "description": "The image set website.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "imageStyleType": {
      "type": "string",
      "description": "An enumeration of image styles.",
      "enum": [
        "Full",
        "Thumbnail",
        "Icon",
        "Square",
        "Banner",
        "Button",
        "Lowres",
        "Highres"
      ]
    },
    "addressInfoType": {
      "type": "object",
      "description": "Provides address information.",
      "properties": {
        "address": {
          "description": "Address details for the profile.",
          "$ref": "#/definitions/addressType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "addressType": {
      "type": "object",
      "description": "Provides address information.",
      "properties": {
        "isValidated": {
          "description": "Indicator to define if the Address is validated by the Address Validation System.",
          "type": "boolean"
        },
        "addressLine": {
          "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "type": "array",
          "maxItems": 4,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 80
          }
        },
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "cityExtension": {
          "description": "Post Office City Extension Code number. City Extension mainly used for UK addresses.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "county": {
          "description": "County or District Name (e.g., Fairfax). This is read only.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "type": {
          "description": "Defines the type of address (e.g. home, business, other).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Describes the type code",
          "type": "string"
        }
      }
    },
    "countryNameType": {
      "type": "object",
      "description": "Code for a country or a nationality.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Used for Character Strings, length 0 to 200.",
          "minLength": 0,
          "maxLength": 200
        },
        "code": {
          "description": "Code for a country or a nationality.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "uRLInfoType": {
      "type": "object",
      "description": "Web site address.",
      "properties": {
        "url": {
          "description": "Provides URL information.",
          "$ref": "#/definitions/uRLType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "uRLType": {
      "type": "object",
      "description": "Web site address, in IETF(The Internet Engineering Task Force) specified format.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "type": {
          "description": "Defines the purpose of the URL address, such as personal, business, public, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Describes the Type code",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "primaryInd": {
          "description": "When true, indicates a primary information.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        }
      }
    },
    "commentInfoType": {
      "type": "object",
      "description": "Comment related to the profile/reservation.",
      "properties": {
        "comment": {
          "description": "Comment details for the comment. It will be empty in case of delete comment.",
          "$ref": "#/definitions/commentType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "commentType": {
      "type": "object",
      "description": "An indication of a new paragraph for a sub-section of a formatted text message.",
      "properties": {
        "text": {
          "description": "Formatted text content.",
          "$ref": "#/definitions/formattedTextTextType"
        },
        "image": {
          "description": "An image for this paragraph.",
          "type": "string"
        },
        "url": {
          "description": "A URL for this paragraph.",
          "type": "string"
        },
        "commentTitle": {
          "description": "Specifies Comment's Title.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "notificationLocation": {
          "description": "Notification Location associated with the Note.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "type": {
          "description": "Specifies type of the comment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "typeDescription": {
          "description": "Comment type Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "internal": {
          "description": "When true, the comment may not be shown to the consumer. When false, the comment may be shown to the consumer.",
          "type": "boolean"
        },
        "confidential": {
          "description": "When true, the comment may be confidential.",
          "type": "boolean"
        },
        "overrideInternal": {
          "description": "When true, the comment internal could be modified.",
          "type": "boolean"
        },
        "protectDescription": {
          "description": "When true, the comment title will be populated from the comment type description and couldn't be modified.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "If specified comment belongs to the Hotel, otherwise it is a global comment.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "actionType": {
          "description": "Specifies type of action described in the comments.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "actionDate": {
          "description": "Indicates at which date an action described in the comment must be taken.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "formattedTextTextType": {
      "type": "object",
      "description": "Provides text and indicates whether it is formatted or not.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        }
      }
    },
    "relationshipInfoType": {
      "type": "object",
      "description": "Relationship Type contains information about the associations between and among individuals, companies, travel agents, groups, sources, and contact profiles.",
      "properties": {
        "changeRelationship": {
          "description": "Information about the changes in relationship for the profile",
          "$ref": "#/definitions/changeRelationsType"
        },
        "relationshipProfile": {
          "description": "Refer to Relationship Profile type document.",
          "$ref": "#/definitions/relationshipProfileType"
        },
        "masterAccountInfo": {
          "description": "Refer to Master Profile type document.",
          "$ref": "#/definitions/masterAccountInfoType"
        },
        "id": {
          "description": "Relationship identifier.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "relation": {
          "description": "Indicates the type of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "relationDescription": {
          "description": "Displays the description of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "targetRelation": {
          "description": "Displays the type of relationship the Related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "targetRelationDescription": {
          "description": "Displays the description of the target relation(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "changeRelationsType": {
      "type": "object",
      "description": "Detailed information regarding the changes made to relationships for the profile.",
      "properties": {
        "id": {
          "description": "Relationship identifier.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "relation": {
          "description": "Indicates the type of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "relationDescription": {
          "description": "Displays the description of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "targetRelation": {
          "description": "Displays the type of relationship the Related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "targetRelationDescription": {
          "description": "Displays the description of the target relation(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "relationshipProfileType": {
      "type": "object",
      "properties": {
        "customer": {
          "description": "Detailed information of the customer",
          "$ref": "#/definitions/customerType"
        },
        "company": {
          "description": "Detailed information of the Company.",
          "$ref": "#/definitions/companyType"
        },
        "telephone": {
          "description": "Information on telephone details for the customer/company",
          "$ref": "#/definitions/telephoneInfoType"
        },
        "address": {
          "description": "Information on address details for the customer/company",
          "$ref": "#/definitions/addressInfoType"
        },
        "email": {
          "description": "Information on email address for the customer/company",
          "$ref": "#/definitions/emailInfoType"
        },
        "uRLs": {
          "description": "Information on web url/address for the customer/company",
          "$ref": "#/definitions/uRLInfoType"
        },
        "primaryOwner": {
          "description": "Primary Owner of the profile",
          "$ref": "#/definitions/ownerType"
        },
        "profileIdList": {
          "description": "Original profile details for which the relationships was created",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "changeProfileIdList": {
          "description": "Updated/changed profile details for the relationships created",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "primary": {
          "description": "Indicates if this relationship is the primary relationship.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "id": {
          "description": "Relationship identifier.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "statusCode": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        }
      }
    },
    "ownerType": {
      "type": "object",
      "description": "Generic type for information about an owner.",
      "properties": {
        "hotel": {
          "description": "Hotel to which the owner belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "userId": {
          "description": "Unique application user ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "userName": {
          "description": "Unique application user name of the owner.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "ownerCode": {
          "description": "Unique Code to identify the owner.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "profileId": {
          "description": "Unique owner profile information.",
          "$ref": "#/definitions/profileId"
        },
        "name": {
          "description": "Provides name information of the owner.",
          "$ref": "#/definitions/personNameType"
        },
        "department": {
          "description": "Department to which the owner belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "email": {
          "description": "Email information of the owner.",
          "$ref": "#/definitions/emailInfoType"
        },
        "phone": {
          "description": "Information on the telephone number of the owner.",
          "$ref": "#/definitions/telephoneInfoType"
        },
        "relationship": {
          "description": "Relationship of the owner within the profile or block.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "primary": {
          "description": "When true, this is a primary owner.",
          "type": "boolean"
        }
      }
    },
    "profileStatusType": {
      "type": "string",
      "enum": [
        "Active",
        "Inactive"
      ]
    },
    "profileTypeType": {
      "type": "string",
      "description": "The types of Profile handled by the web service.",
      "enum": [
        "Guest",
        "Agent",
        "Company",
        "Group",
        "Source",
        "Employee",
        "Hotel",
        "Vendor",
        "Contact",
        "Purge",
        "BusinessHeader",
        "BillingAccount",
        "Activity",
        "Potential",
        "Account"
      ]
    },
    "masterAccountInfoType": {
      "type": "object",
      "properties": {
        "masterAccountId": {
          "description": "Unique ID of the Master account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "masterAccountName": {
          "description": "Name of the Master account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "relationshipInfoSummaryType": {
      "type": "object",
      "description": "RelationshipInfoSummaryType contains information about the associations between and among individuals, companies, travel agents, groups, sources, and contact profiles.",
      "properties": {
        "relationshipProfile": {
          "description": "Refer to Relationship Profile Summary type document.",
          "$ref": "#/definitions/relationshipProfileSummaryType"
        },
        "masterAccountDetails": {
          "description": "Refer to Master Profile type document.",
          "$ref": "#/definitions/masterAccountInfoType"
        },
        "relationshipID": {
          "description": "Relationship identifier.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "sourceRelation": {
          "description": "Indicates the type of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceRelationDescription": {
          "description": "Displays the description of relationship the current profile(Source Profile) has with the related profile(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "targetRelation": {
          "description": "Displays the type of relationship the Related profile(Target Profile) has with the current profile(Source Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "targetRelationDescription": {
          "description": "Displays the description of the target relation(Target Profile).",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "relationshipProfileSummaryType": {
      "type": "object",
      "properties": {
        "customerName": {
          "description": "Name of the customer",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "companyName": {
          "description": "Name of the company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "telephoneNumber": {
          "description": "Telephone number assigned to a single location",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "address": {
          "description": "Information on address details for the customer/company",
          "$ref": "#/definitions/relationshipAddressType"
        },
        "emailAddress": {
          "description": "Defines the e-mail address.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "ownerCode": {
          "description": "Unique Code to identify the owner.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "profileIdList": {
          "description": "Original profile details for which the relationships was created",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "primary": {
          "description": "Indicates if this relationship is the primary relationship.",
          "type": "boolean"
        },
        "profileStatus": {
          "description": "Status of the profile. Active/Inactive",
          "$ref": "#/definitions/profileStatusType"
        },
        "primaryOwnerCode": {
          "description": "When true, this is a primary owner.",
          "type": "boolean"
        },
        "profileType": {
          "description": "Type of profile such as Guest, Agent, Company, Group, Source, Employee, Hotel, Vendor or Contact.",
          "$ref": "#/definitions/profileTypeType"
        }
      }
    },
    "relationshipAddressType": {
      "type": "object",
      "description": "Provides address information for a Relationship.",
      "properties": {
        "addressLine": {
          "description": "When the address is unformatted (FormattedInd=\"false\") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.",
          "type": "array",
          "maxItems": 4,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 80
          }
        },
        "city": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "reservationStayHistoryFutureInfoType": {
      "type": "object",
      "description": "Information of History and Future Reservation details attached to Profiles.",
      "properties": {
        "historyList": {
          "description": "Refer to History list type document.",
          "$ref": "#/definitions/stayHistoryListType"
        },
        "futureList": {
          "description": "Refer to Future list type document.",
          "$ref": "#/definitions/stayFutureListType"
        }
      }
    },
    "stayHistoryListType": {
      "type": "object",
      "description": "A collection of reservation history details attached to Profiles.",
      "properties": {
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : History reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/stayReservationInfoType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "stayReservationInfoType": {
      "type": "object",
      "description": "The Reservation class contains the current reservation being created or altered.",
      "properties": {
        "reservationIdList": {
          "description": "Unique identifiers for the reservation for both internal and external systems",
          "$ref": "#/definitions/reservationIdList"
        },
        "roomStay": {
          "description": "Collection of functionSpaceDetails stays.",
          "$ref": "#/definitions/stayInfoType"
        },
        "attachedProfiles": {
          "description": "List of attached profiles",
          "$ref": "#/definitions/resAttachedProfileListType"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "computedReservationStatus": {
          "description": "Indicates the status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        }
      }
    },
    "reservationIdList": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "stayInfoType": {
      "type": "object",
      "description": "Details on the Room Stay including Guest Counts, Time Span of this Room Stay, pointers to Res Guests, guest Memberships, Comments and Special Requests pertaining to this particular Room Stay and finally financial information related to the Room Stay, including Guarantee, Deposit and Payment and Cancellation Penalties.",
      "properties": {
        "arrivalDate": {
          "type": "string",
          "format": "date"
        },
        "departureDate": {
          "type": "string",
          "format": "date"
        },
        "originalTimeSpan": {
          "description": "The Original Time Span covers the Room Stay dates of the original reservation.",
          "$ref": "#/definitions/timeSpanType"
        },
        "expectedTimes": {
          "description": "The expected arrival, return and departure times of the guest.",
          "$ref": "#/definitions/resExpectedTimesType"
        },
        "adultCount": {
          "description": "A collection of Guest Counts associated with Room Stay.",
          "type": "integer"
        },
        "childCount": {
          "description": "A collection of Child Counts associated with Room Stay.",
          "type": "integer"
        },
        "roomClass": {
          "description": "Room class code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "description": "Room type code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "componentRoomType": {
          "description": "True indicates functionSpaceDetails type is a component type.",
          "type": "boolean"
        },
        "numberOfRooms": {
          "description": "Room Id",
          "type": "integer"
        },
        "roomId": {
          "description": "Room Id",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCode": {
          "description": "Rate plan code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateAmount": {
          "description": "Rate amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "points": {
          "description": "The Points contains the number of points used to book a particular functionSpaceDetails type.",
          "$ref": "#/definitions/pointsType"
        },
        "rateSuppressed": {
          "description": "Whether this rate should be suppressed from view",
          "type": "boolean"
        },
        "reservationBlock": {
          "description": "Key information about the block for this reservation.",
          "$ref": "#/definitions/reservationBlockType"
        },
        "bookingChannelCode": {
          "description": "Booking channel code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "linkCode": {
          "description": "Party code",
          "type": "string",
          "maxLength": 2000
        },
        "fixedRate": {
          "description": "True if the rate is a fixed rate, otherwise false",
          "type": "boolean"
        },
        "totalAmount": {
          "description": "The total amount charged for the Room Stay including additional occupant amounts and fees. If TaxInclusive is set to True, then taxes are included in the total amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "guarantee": {
          "description": "The guarantee information associated to the Room Stay. A maximum of 5 occurances are available for use depending on the context.",
          "$ref": "#/definitions/resGuaranteeType"
        },
        "promotion": {
          "description": "Promotion Codes",
          "$ref": "#/definitions/promotionType"
        },
        "marketCode": {
          "description": "Market code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "marketDescription": {
          "description": "Description of Market code",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "sourceCode": {
          "description": "Source of business",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceCodeDescription": {
          "description": "Description of the source of business.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "balance": {
          "description": "Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        },
        "roomTypeCharged": {
          "description": "Room type code that was charged",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "depositPayments": {
          "description": "A collection of deposit and/or payments for the Room Stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "guestServiceStatus": {
          "description": "Service Status of In House guest like DND or MUP",
          "$ref": "#/definitions/guestHousekeepingServiceRequestType"
        },
        "scheduledCheckoutTime": {
          "description": "Indicates that this reservation is scheduled for automated check out.",
          "type": "string",
          "format": "date"
        },
        "roomNumberLocked": {
          "description": "When true, indicates a functionSpaceDetails number cannot be changed. When false, indicates a functionSpaceDetails number may be changed.",
          "type": "boolean"
        },
        "pseudoRoom": {
          "description": "True indicates as pseudo functionSpaceDetails type. This is usually used for a posting master reservation.",
          "type": "boolean"
        },
        "assignedByAI": {
          "description": "Represents the functionSpaceDetails was assigned by AI Room Assignment.",
          "type": "boolean"
        },
        "upgradedByAI": {
          "description": "Represents the functionSpaceDetails was assigned by AI Room Assignment.",
          "type": "boolean"
        }
      }
    },
    "resExpectedTimesType": {
      "type": "object",
      "description": "Holds the Arrival and Departure Time Information",
      "properties": {
        "reservationExpectedArrivalTime": {
          "description": "Arrival Time",
          "type": "string",
          "format": "date-time"
        },
        "reservationExpectedDepartureTime": {
          "description": "Departure Time",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "pointsType": {
      "type": "object",
      "description": "The Redeem Points contains the number of points required to book a functionSpaceDetails type.",
      "properties": {
        "awardsType": {
          "description": "Awards type for the award type rate code.",
          "type": "string"
        },
        "points": {
          "description": "No of points required to book this Room Stay.",
          "type": "integer"
        }
      }
    },
    "reservationBlockType": {
      "type": "object",
      "description": "Key information about the block for a reservation.",
      "properties": {
        "blockIdList": {
          "description": "Collection of unique block identifiers for the reservation.",
          "$ref": "#/definitions/blockIdList"
        },
        "blockName": {
          "description": "The Name of the block that is attached to the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "hotelId": {
          "description": "This is the HotelCode of the Block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "resGuaranteeType": {
      "type": "object",
      "description": "Validations type record returned after Validations are done.",
      "properties": {
        "guaranteeCode": {
          "description": "Guarantee Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "shortDescription": {
          "description": "Guarantee Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "onHold": {
          "description": "Guarantee Code.",
          "type": "boolean"
        }
      }
    },
    "promotionType": {
      "type": "object",
      "description": "Type to specify a rate promotion. Usually attached to a reservation to indicate a specific promotion is applied to the reservation.",
      "properties": {
        "promotionCode": {
          "description": "Promotion code associated with the rate plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "promotionName": {
          "description": "Promotion code Name associated with the rate plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "couponCode": {
          "description": "Promotion Coupon Code when promotion is setupCode to have a valid coupon code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "guestHousekeepingServiceRequestType": {
      "type": "string",
      "description": "Possible values for the Guest Service Status.",
      "enum": [
        "DoNotDisturb",
        "MakeUpRoom",
        "NoStatusSelected"
      ]
    },
    "resAttachedProfileListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAttachedProfileType"
      }
    },
    "resAttachedProfileType": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Attached profile name",
          "type": "string"
        },
        "profileIdList": {
          "description": "Collection of unique profile identifiers",
          "$ref": "#/definitions/profileIdList"
        },
        "reservationProfileType": {
          "$ref": "#/definitions/resProfileTypeType"
        }
      }
    },
    "profileIdList": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "resProfileTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Group",
        "TravelAgent",
        "Source",
        "ReservationContact",
        "BillingContact",
        "Addressee"
      ]
    },
    "pMS_ResStatusType": {
      "type": "string",
      "description": "This reservation is in checked in status and the business date is past departure date. This could occur when ORS and PMS are in same environment.",
      "enum": [
        "Reserved",
        "Requested",
        "NoShow",
        "Cancelled",
        "InHouse",
        "CheckedOut",
        "Waitlisted",
        "DueIn",
        "DueOut",
        "Walkin",
        "PendingCheckout"
      ]
    },
    "stayFutureListType": {
      "type": "object",
      "description": "A collection of reservation history details attached to Profiles.",
      "properties": {
        "reservationInfo": {
          "description": "Additional reservation information attached to the profile . Eg : Future reservation details",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/stayReservationInfoType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "roomOwnershipType": {
      "type": "object",
      "description": "Define the search criteria for retrieving functionSpaceDetails ownership records",
      "properties": {
        "roomOwnershipId": {
          "description": "Unique Id for Room Owner record.",
          "type": "integer"
        },
        "contractNumber": {
          "description": "Contract number for room owner.",
          "type": "string"
        },
        "roomId": {
          "description": "Room Id of room owner.",
          "type": "string"
        },
        "roomCategory": {
          "description": "Room Category of the functionSpaceDetails ownership record.",
          "type": "string"
        },
        "roomType": {
          "description": "Room Type of the functionSpaceDetails ownership record.",
          "type": "string"
        },
        "startDate": {
          "description": "Start Date of the functionSpaceDetails ownership record.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "description": "End Date of the functionSpaceDetails ownership record.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "profileId": {
          "description": "Profile ID of the functionSpaceDetails ownership record.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "status": {
          "description": "Status of the functionSpaceDetails ownership record.",
          "type": "string"
        }
      }
    },
    "blockProfileTypeType": {
      "type": "string",
      "description": "Simple type for block profile types.",
      "enum": [
        "Company",
        "Group",
        "Agent",
        "Source",
        "CompanyContact",
        "AgentContact",
        "SourceContact"
      ]
    },
    "blockOwnersType": {
      "type": "object",
      "description": "Contains a list of block owners.",
      "properties": {
        "owner": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/blockOwnerType"
          }
        },
        "lockBlockOwners": {
          "description": "When this flag is true, the logged in user cannot modify the existing block owners for the current block.",
          "type": "boolean"
        },
        "lockRoomsOwners": {
          "description": "When this flag is true, the logged in user cannot modify the existing functionSpaceDetails owners for the current block.",
          "type": "boolean"
        },
        "lockCateringOwners": {
          "description": "When this flag is true, the logged in user cannot modify the existing catering owners for the current block.",
          "type": "boolean"
        }
      }
    },
    "cateringType": {
      "type": "object",
      "description": "Contains catering related information for the block.",
      "properties": {
        "cateringStatus": {
          "description": "Catering Status details of the block.",
          "$ref": "#/definitions/bookingStatusDetailType"
        },
        "cateringInternalStatus": {
          "description": "Internal status for the catering.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cateringNextStatusList": {
          "description": "Catering Status details of the block.",
          "$ref": "#/definitions/cateringNextStatusListType"
        },
        "cateringStatusChangeHistory": {
          "description": "List of catering status changes.",
          "$ref": "#/definitions/cateringStatusChangeHistoryType"
        },
        "cateringOwner": {
          "description": "Catering Owner of the block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "eventAttendees": {
          "description": "The catering attendees information for events associated with the block.",
          "$ref": "#/definitions/eventAttendeesType"
        },
        "boardInfo": {
          "description": "The name by which the group wishes to be identified in the hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "onSiteName": {
          "description": "The name of the customer's in-house representative or contact on the day of the catering event.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "contractNumber": {
          "description": "Catering contract number for the block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "functionInfo": {
          "description": "This provides more detail the type of function for which the event is held. For example, Trade Show, Meeting, or Annual Convention.",
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        },
        "trackChanges": {
          "description": "Indicates whether the catering change logging for the booking is active or not. Any change made to catering events and resources will be logged when this is true.",
          "type": "boolean"
        },
        "eventOrder": {
          "description": "Indicates if the Banquet Event Orders have been distributed.",
          "$ref": "#/definitions/eventOrderType"
        },
        "cateringRevenue": {
          "description": "Information about catering revenue.",
          "$ref": "#/definitions/cateringRevenueType"
        },
        "followUpDate": {
          "description": "Date used by catering manager or coordinator to follow up on the event.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "decisionDate": {
          "description": "Date by which event group must make a decision on the booking.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "pkgsTmplt": {
          "description": "Indicates whether event packages or templates can be applied to the block.",
          "type": "boolean"
        },
        "cancellationDetails": {
          "description": "Information on the catering cancellation.",
          "$ref": "#/definitions/cancellationDetailsType"
        },
        "resourceDiscountPercentage": {
          "description": "Indicates the resource discount percentage to be applied to resource items associated with the catering event.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "hasPackageEvents": {
          "description": "Indicates if the block has any package events.",
          "type": "boolean"
        },
        "applyBoardInfoToAllEvents": {
          "description": "Indicates whether BoardInfo changes can be applied to all events of the block.",
          "type": "boolean"
        },
        "overrideEventsProcessingWarnings": {
          "description": "Indicates whether to ignore any warning during applying the changes to the events associated with the current block.",
          "type": "boolean"
        },
        "applyEventsGuaranteeToAllEvents": {
          "description": "Indicates whether Guarantee changes can be applied to all events of the block.",
          "type": "boolean"
        },
        "applyEventAttendeesChangesToEvents": {
          "description": "Indicates to which the events of the block can the attendees changes be applied.",
          "$ref": "#/definitions/applyEventAttendeesChangesToEventsType"
        },
        "resourceDiscountType": {
          "description": "Attibute that indicates to which type of resource the discount should be applied to.",
          "$ref": "#/definitions/resourceDiscountTypeType"
        }
      }
    },
    "cateringNextStatusListType": {
      "type": "array",
      "description": "Next catering status of the business block.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/bookingStatusDetailType"
      }
    },
    "cateringStatusChangeHistoryType": {
      "type": "array",
      "description": "Collection of catering status history.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/bookingStatusHistoryType"
      }
    },
    "bookingStatusHistoryType": {
      "type": "object",
      "properties": {
        "sequence": {
          "description": "Number indicating the sequence of status change.",
          "type": "integer"
        },
        "bookingStatus": {
          "description": "Booking status of the business block.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "modifyDateTime": {
          "description": "Date and time of the status change.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "modifierId": {
          "description": "User who modified the status.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "eventAttendeesType": {
      "type": "object",
      "description": "Event attendees information.",
      "properties": {
        "noOfAttendees": {
          "description": "The maximum number of attendees for Catering events associated with the block.",
          "type": "integer"
        },
        "attendeesGuaranteed": {
          "description": "This denotes that the number of Attendees are the minimum guaranteed by the customer.",
          "type": "boolean"
        }
      }
    },
    "eventOrderType": {
      "type": "object",
      "description": "Event order distribution information.",
      "properties": {
        "distributed": {
          "description": "Indicates if the Banquet Event Orders have been distributed.",
          "type": "boolean"
        },
        "distributedDate": {
          "description": "This indicates which exchange rate date will be used for blocks when printing Banquet Event Orders. When the Distributed attribute is true this contains the date stamp of when the Distributed attribute was updated. When Distributed attribute is false, this is left blank. This date can also be taken into consideration as the 'Exchange Rate Date' when, for instance, converting catering revenue to base currency.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "distributedDateTime": {
          "description": "This indicates which exchange rate date will be used for blocks when printing Banquet Event Orders. When the Distributed attribute is true this contains the date/time stamp of when the Distributed attribute was updated. When Distributed attribute is false, this is left blank. This date can also be taken into consideration as the 'Exchange Rate Date' when, for instance, converting catering revenue to base currency.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "cateringRevenueType": {
      "type": "object",
      "description": "Information about Catering Revenue.",
      "properties": {
        "serviceCharge": {
          "description": "The service charge for the Catering Events that will be added to the business block.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "taxAmount": {
          "description": "The tax amount for the Catering Events that will be added to the business block.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "itemDiscount": {
          "description": "Item discount for the block.",
          "type": "number"
        },
        "itemDiscountPercentage": {
          "description": "The discount percentage to be applied to resource items associated with catering events.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        }
      }
    },
    "cancellationDetailsType": {
      "type": "object",
      "description": "This type holds information regarding booking status change to Cancel/ Lost.",
      "properties": {
        "cancellationNumber": {
          "description": "Cancellation number of the block.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "cancellationCode": {
          "description": "Code and description for cancellation reason.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "cancellationDate": {
          "description": "Date on which block was canceled.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "cancellationInfo": {
          "description": "Cancellation information provided by the customer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "destination": {
          "description": "Alternate destination where the business is being taken.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "lostToProperty": {
          "description": "Holds the name of the property or competitor brand business was lost to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        }
      }
    },
    "applyEventAttendeesChangesToEventsType": {
      "type": "string",
      "description": "Non-Pkg Events on the same date.",
      "enum": [
        "All",
        "None",
        "Same",
        "NonPackage",
        "MatchingNonPackage",
        "Package",
        "Date"
      ]
    },
    "resourceDiscountTypeType": {
      "type": "string",
      "description": "Indicates the option to select resources that will be discounted with the Resource Discount Percentage.",
      "enum": [
        "AllDiscountableResources",
        "ResourcesWithSameDiscountPercentage",
        "AllDiscountableItems",
        "ItemsWithSameDiscountPercentage",
        "AllDiscountableMenusAndMenuItems",
        "MenusAndMenuItemsWithSameDiscountPercentage",
        "AllDiscountableSpaces",
        "SpacesWithSameDiscountPercentage",
        "None"
      ]
    },
    "blockInventoryItemsType": {
      "type": "array",
      "description": "Inventory item attached to a block.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/blockInventoryItemType"
      }
    },
    "blockInventoryItemType": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "item": {
          "description": "Specifies Items and its attributes. When used for data manipulation for Items setupCode on reservation, etc only code is considered. Other Attributes are for used to provide information during fetch operation.",
          "$ref": "#/definitions/itemInfoType"
        },
        "quantity": {
          "description": "Number of items booked.",
          "type": "integer"
        },
        "blockDates": {
          "description": "Begin and eventEndDate date and time of the items applicability.",
          "$ref": "#/definitions/dateRangeType"
        },
        "source": {
          "description": "If exists specifies whether the item is setupCode due to a Rate Plan, Package or a Block.",
          "$ref": "#/definitions/blockInventoryItemSourceType"
        }
      }
    },
    "itemInfoType": {
      "type": "object",
      "description": "Basic information regarding an Item.",
      "properties": {
        "description": {
          "description": "Detail description of an item.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "availabilityPeriod": {
          "description": "Defines a Time period when the item is available.",
          "$ref": "#/definitions/timeWindowType"
        },
        "blockDates": {
          "description": "Date Range to get the inventories of the items.",
          "$ref": "#/definitions/timeSpanType"
        },
        "quantity": {
          "description": "Quantity of hold Item",
          "type": "integer"
        },
        "itemHoldId": {
          "description": "ID reference for the hold Item",
          "type": "number"
        },
        "code": {
          "description": "Item Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "name": {
          "description": "Name of an item.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "itemPool": {
          "description": "Indicates if it is an item pool. Not applicable for Item within the Item Pool.",
          "type": "boolean"
        },
        "sellSeparate": {
          "description": "If true indicates that item is allowed to sell separately.",
          "type": "boolean"
        },
        "sellInReservation": {
          "description": "If true indicates that item can be sold in reservation.",
          "type": "boolean"
        },
        "sellInEvent": {
          "description": "If true indicates that item can be sold in event.",
          "type": "boolean"
        },
        "requiredForBooking": {
          "description": "If true indicates that item is required for the reservation.",
          "type": "boolean"
        },
        "fixedCharge": {
          "description": "If true indicates that item has fixed charge when it is attached to a reservation.",
          "type": "boolean"
        },
        "outsideStay": {
          "description": "If true indicates that item could be held outside of the reservation stay days.",
          "type": "boolean"
        },
        "defaultDuration": {
          "description": "Define the default duration in days when booking the item.",
          "type": "integer"
        }
      }
    },
    "timeWindowType": {
      "type": "object",
      "description": "Defines a Time period with eventStartDate time and an eventEndDate time.",
      "properties": {
        "startTime": {
          "description": "Start Time of the Time window.",
          "type": "string"
        },
        "endTime": {
          "description": "End Time of the Time window.",
          "type": "string"
        }
      }
    },
    "dateRangeType": {
      "type": "object",
      "description": "Date Range with Start and End dates.",
      "properties": {
        "eventStartDate": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "eventEndDate": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "blockInventoryItemSourceType": {
      "type": "object",
      "description": "Defines whether the item is setupCode due to a Rate Plan, Package or a Block.",
      "properties": {
        "ratePlanCode": {
          "description": "Rate Plan Code, If populated specifies that the item is setupCode due to a Rate Plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "packageCode": {
          "description": "Package Code, If populated specifies that the item is setupCode due to a Package.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "blockId": {
          "description": "Block Unique ID, If populated specifies that the item is setupCode due to a Block.",
          "$ref": "#/definitions/blockId"
        }
      }
    },
    "blockId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "blockStatisticsType": {
      "type": "object",
      "properties": {
        "allocatedRoomStatistics": {
          "description": "Indicates the functionSpaceDetails statistics for allocated rooms.",
          "$ref": "#/definitions/roomStatisticsType"
        },
        "actualRoomStatistics": {
          "description": "Indicates the functionSpaceDetails statistics for actualized rooms.",
          "$ref": "#/definitions/roomStatisticsType"
        },
        "cateringRevenueOnBooks": {
          "description": "Indicates the catering revenue on the books.",
          "type": "number"
        },
        "actualCateringRevenue": {
          "description": "Indicates actualized catering revenue.",
          "type": "number"
        }
      }
    },
    "roomStatisticsType": {
      "type": "object",
      "properties": {
        "roomCount": {
          "description": "The total number of rooms.",
          "type": "number"
        },
        "roomRevenue": {
          "description": "The total revenue for the rooms.",
          "type": "number"
        },
        "averageRate": {
          "description": "The average rate per functionSpaceDetails.",
          "type": "number"
        }
      }
    },
    "indicatorsType": {
      "type": "array",
      "description": "Collection of lamp indicators.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/indicatorType"
      }
    },
    "indicatorType": {
      "type": "object",
      "description": "Lamp indicator Type.",
      "properties": {
        "indicatorName": {
          "description": "Name of the indicator.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "count": {
          "description": "Indicates number of occurrences of the indicator.",
          "type": "integer"
        }
      }
    },
    "blockTracesType": {
      "type": "array",
      "description": "List of Block traces.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/blockTraceType"
      }
    },
    "blockTraceType": {
      "type": "object",
      "description": "Extended Trace object to hold information for a block.",
      "properties": {
        "timeInfo": {
          "description": "Date of the trace.",
          "$ref": "#/definitions/traceTimeInfoType"
        },
        "reservationId": {
          "description": "Reservation ID of the reservation for which the traces are to be retrieved.",
          "$ref": "#/definitions/reservationId"
        },
        "departmentId": {
          "description": "Indicates the Department code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "traceText": {
          "description": "The information this trace contains.",
          "type": "string"
        },
        "resolveInfo": {
          "description": "Information regarding the status of the trace",
          "$ref": "#/definitions/traceResolveType"
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "traceTimeInfoType": {
      "type": "object",
      "properties": {
        "dateTimeSpan": {
          "description": "Time span for the trace.",
          "$ref": "#/definitions/dateTimeSpanType"
        },
        "traceOn": {
          "description": "Date of the trace.",
          "type": "string",
          "format": "date-time"
        },
        "traceTime": {
          "description": "Time of the trace",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "enteredBy": {
          "description": "User that entered this trace.",
          "type": "string"
        }
      }
    },
    "reservationId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "traceResolveType": {
      "type": "object",
      "properties": {
        "resolvedOn": {
          "description": "Date the trace was resolved",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "resolvedBy": {
          "description": "User that resolved the trace",
          "type": "string"
        }
      }
    },
    "blockStatisticsSummaryType": {
      "type": "object",
      "description": "Type to store summary detail like rooms sold, average functionSpaceDetails rate and revenue for a statistic type.",
      "properties": {
        "roomsSold": {
          "description": "Total Number of Rooms Picked Up.",
          "type": "integer"
        },
        "revenueSummary": {
          "$ref": "#/definitions/revenueSummaryType"
        },
        "avgRoomRate": {
          "type": "number"
        },
        "statisticType": {
          "$ref": "#/definitions/statisticsSummaryType"
        }
      }
    },
    "revenueSummaryType": {
      "type": "object",
      "description": "Summary information pertaining to revenue like Room, Food and Beverage, Catering, Other, Catering Other and Total Revenue.",
      "properties": {
        "roomRevenue": {
          "type": "number"
        },
        "foodAndBeverageRevenue": {
          "type": "number"
        },
        "otherRevenue": {
          "type": "number"
        },
        "cateringRevenue": {
          "type": "number"
        },
        "cateringOtherRevenue": {
          "type": "number"
        },
        "totalRevenue": {
          "type": "number"
        },
        "nonRevenue": {
          "type": "number"
        }
      }
    },
    "statisticsSummaryType": {
      "type": "string",
      "description": "Type of statistic for which summary information is populated.",
      "enum": [
        "Potential",
        "Actual",
        "Variance"
      ]
    },
    "sellMessageConfigsType": {
      "type": "object",
      "description": "The SellMessageConfigsType is the list of sell messages, each comprising of all the sell message attributes and other details.",
      "properties": {
        "sellMessageConfig": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/sellMessageConfigType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "sellMessageConfigType": {
      "type": "object",
      "description": "Only one of the following can hold a value: HotelCode, CROCode or ChainCode",
      "properties": {
        "message": {
          "description": "Sell message text.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "blockId": {
          "description": "Unique OPERA Block ID which is used to find a Block from OPERA. This ID is a primary identification of a Block in OPERA.",
          "$ref": "#/definitions/blockId"
        },
        "blockCode": {
          "description": "Block Code to which the sell message is defined.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "timespan": {
          "description": "Begin and End date for the sell message.",
          "$ref": "#/definitions/timeSpanType"
        },
        "hotelId": {
          "description": "Hotel Code for which the sell message is defined.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "croCode": {
          "description": "CRO Code for which the sell message is defined.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "chainCode": {
          "description": "Chain Code for which the sell message is defined.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "description": "Room type for which the sell message is defined.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCode": {
          "description": "Rate Plan Code for which the sell message is defined.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "languageCode": {
          "description": "Language in which the sell message is defined.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "stickyFlag": {
          "description": "Sticky flag is used to define if the sell message should display on the block screen by default.",
          "type": "boolean"
        },
        "sellSequence": {
          "description": "This number indicates the display order of the sell message.",
          "type": "number"
        },
        "usedInModule": {
          "description": "This represents the moduleType where we want to display this SellMessage.",
          "type": "array",
          "maxItems": 10,
          "items": {
            "$ref": "#/definitions/usedInModuleType"
          }
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "usedInModuleType": {
      "type": "string",
      "description": "Simple type for indicating the module for which user wants to create the SellMessage. Valid module types are Look To Book Sales,Reservations,Blocks,Function Diary and Group Rooms Control.",
      "enum": [
        "Blocks",
        "Reservations",
        "FunctionDiary",
        "LookToBookSales",
        "GroupRoomsControl"
      ]
    },
    "attachmentsType": {
      "type": "array",
      "description": "Attachment List.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/attachmentType"
      }
    },
    "attachmentType": {
      "type": "object",
      "description": "Attached files.",
      "properties": {
        "fileName": {
          "description": "Name of the file.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "fileSize": {
          "description": "Size of the file.",
          "type": "integer"
        },
        "description": {
          "description": "Description for the file.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "global": {
          "description": "Flag to say if attachment is available across properties.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "history": {
          "description": "History data associated with Attachment.",
          "$ref": "#/definitions/dateTimeStampGroupType"
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "dateTimeStampGroupType": {
      "type": "object",
      "properties": {
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "blockWashSchedulesType": {
      "type": "array",
      "description": "Wash Schedule attached to the block, which allows to release inventory based on selected wash schedule type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/blockWashScheduleType"
      }
    },
    "blockWashScheduleType": {
      "type": "object",
      "description": "Allows to select type of wash schedule: by number of rooms or by percentage.",
      "properties": {
        "washDate": {
          "description": "Date on which the block wash operation will be performed.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "roomTypes": {
          "description": "A single functionSpaceDetails type on which wash operation should be performed.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "washByRooms": {
          "description": "Wash by rooms contains the occupany details and sell values for a specific block wash schedule.",
          "$ref": "#/definitions/blockGridInvType"
        },
        "washByPercent": {
          "description": "When using the Wash by % option, indicate a wash percentage that will be applied it to the whole block.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        }
      }
    },
    "blockGridInvType": {
      "type": "object",
      "description": "Indicates the inventory values ( occupancy or availability ) per person occupancy.",
      "properties": {
        "onePerson": {
          "description": "Indicates the one person inventory value ( occupancy or availability ).",
          "type": "integer"
        },
        "twoPerson": {
          "description": "Indicates the two person inventory value ( occupancy or availability ).",
          "type": "integer"
        },
        "threePerson": {
          "description": "Indicates the three person inventory value ( occupancy or availability ).",
          "type": "integer"
        },
        "fourPerson": {
          "description": "Indicates the four person inventory value ( occupancy or availability ).",
          "type": "integer"
        },
        "sellLimit": {
          "description": "Indicates the sell limit",
          "type": "integer"
        },
        "cutoffDate": {
          "description": "Indicates the cutoff date.Date when inventory left in the block will be cut-off.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "blockRestrictionsType": {
      "type": "object",
      "description": "List of restrictions belonging to a block.",
      "properties": {
        "blockId": {
          "description": "Unique OPERA Block ID which is used to find a Block from OPERA. This ID is a primary identification of a Block in OPERA.",
          "$ref": "#/definitions/blockId"
        },
        "blockRestriction": {
          "description": "Block restriction details.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/blockRestrictionType"
          }
        },
        "hotelId": {
          "description": "Hotel to which the block belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "blockRestrictionType": {
      "type": "object",
      "description": "Restriction details for a block.",
      "properties": {
        "restrictionDate": {
          "description": "Date for which the restriction applies.",
          "$ref": "#/definitions/timeSpanDaysOfWeekType"
        },
        "roomType": {
          "description": "Room Type selected for the block restriction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "blockRestrictionStatus": {
          "description": "Indicates the type of restriction along with parameters for restriction, if any.",
          "$ref": "#/definitions/restrictionStatusType"
        },
        "actualTimeSpan": {
          "description": "Actual time span of the restriction.",
          "$ref": "#/definitions/timeSpanType"
        }
      }
    },
    "timeSpanDaysOfWeekType": {
      "type": "object",
      "description": "Container for Time span with days of week.",
      "properties": {
        "blockDates": {
          "$ref": "#/definitions/timeSpanType"
        },
        "sunday": {
          "type": "boolean"
        },
        "monday": {
          "type": "boolean"
        },
        "tuesday": {
          "type": "boolean"
        },
        "wednesday": {
          "type": "boolean"
        },
        "thursday": {
          "type": "boolean"
        },
        "friday": {
          "type": "boolean"
        },
        "saturday": {
          "type": "boolean"
        }
      }
    },
    "restrictionStatusType": {
      "type": "object",
      "description": "The RestrictionStatusType is used to indicate the type of restriction applied. An enumerated restriction type is defined in the attribute group.",
      "properties": {
        "code": {
          "description": "Identifies the type of restriction. I.E. Closed, ClosedForArrival, etc.",
          "$ref": "#/definitions/restrictionStatusesType"
        },
        "unit": {
          "description": "Defines restriction in conjunction with Restriction Code. Value must be specified for Restriction Codes MinimumStayThrough, MaximumStayThrough, MinimumLengthOfStay, MaximumLengthOfStay, MinimumAdvanceBooking, MaximumAdvanceBooking.",
          "type": "integer"
        },
        "lOS1": {
          "description": "Indicates Length of Stay 1 is not available. Defines restriction in conjunction with Restriction Code LOSNotAvailable.",
          "type": "boolean"
        },
        "lOS2": {
          "description": "Indicates Length of Stay 2 is not available. Defines restriction in conjunction with Restriction Code LOSNotAvailable.",
          "type": "boolean"
        },
        "lOS3": {
          "description": "Indicates Length of Stay 3 is not available. Defines restriction in conjunction with Restriction Code LOSNotAvailable.",
          "type": "boolean"
        },
        "lOS4": {
          "description": "Indicates Length of Stay 4 is not available. Defines restriction in conjunction with Restriction Code LOSNotAvailable.",
          "type": "boolean"
        },
        "lOS5": {
          "description": "Indicates Length of Stay 5 is not available. Defines restriction in conjunction with Restriction Code LOSNotAvailable.",
          "type": "boolean"
        },
        "lOS6": {
          "description": "Indicates Length of Stay 6 is not available. Defines restriction in conjunction with Restriction Code LOSNotAvailable.",
          "type": "boolean"
        },
        "lOS7": {
          "description": "Indicates Length of Stay 7 or more is not available. Defines restriction in conjunction with Restriction Code LOSNotAvailable.",
          "type": "boolean"
        }
      }
    },
    "restrictionStatusesType": {
      "type": "string",
      "enum": [
        "Closed",
        "ClosedForArrival",
        "ClosedForDeparture",
        "MinimumStayThrough",
        "MaximumStayThrough",
        "MinimumLengthOfStay",
        "MaximumLengthOfStay",
        "LOSNotAvailable",
        "MinimumAdvanceBooking",
        "MaximumAdvanceBooking",
        "Open",
        "OpenForArrival",
        "OpenForDeparture"
      ]
    },
    "eventFunctionSpaceType": {
      "type": "object",
      "description": "Pertain Information about the Function Space for events.",
      "properties": {
        "functionSpaceCode": {
          "description": "Function Space (event functionSpaceDetails) code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "functionSpaceDescription": {
          "description": "Function Space description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "setupCode": {
          "description": "Setup style code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "setupDescription": {
          "description": "Setup Style description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "setupTime": {
          "description": "Setup time in minutes.",
          "type": "integer"
        },
        "setdownTime": {
          "description": "Setdown time in minutes.",
          "type": "integer"
        },
        "rentalCode": {
          "description": "Rate Code for function space.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateDesc": {
          "description": "Function Space Rate description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "rentalAmount": {
          "description": "The functionSpaceDetails rent amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "discountPercentage": {
          "description": "Discount Percentage applied to Rent Amount.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "minimumOccupancy": {
          "description": "Minimum Occupancy for the SetupCode of Catring Event.",
          "type": "integer"
        },
        "maximumOccupancy": {
          "description": "Maximum Occupancy for the SetupCode of Catring Event.",
          "type": "integer"
        },
        "shareable": {
          "description": "Flag to indicate if the event functionSpaceDetails is shareable.",
          "type": "boolean"
        },
        "comboSpace": {
          "description": "Flag to indicate if the function space is a combination functionSpaceDetails.",
          "type": "boolean"
        },
        "elementSpace": {
          "description": "Flag to indicate if the function space is an elementSpace of a comboSpace function space.",
          "type": "boolean"
        }
      }
    },
    "eventNotesType": {
      "type": "array",
      "description": "Pertain event information.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/eventNoteType"
      }
    },
    "eventNoteType": {
      "type": "object",
      "description": "Pertain event's comment information.",
      "properties": {
        "noteId": {
          "description": "Unique identifier for event comment. If it is missing, this indicate that it is a new comment. If only NotID is provided then it is a delete operation",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "noteCode": {
          "description": "Note code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "internal": {
          "description": "Indicates if comment are internal use only.",
          "type": "boolean"
        },
        "noteTitle": {
          "description": "Pertain comment tile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "comment": {
          "description": "Pertain comment text.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "sequence": {
          "description": "Pertain display sequence.",
          "type": "integer"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "lightEventsDetailType": {
      "type": "array",
      "description": "Pertain event few information about events.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/lightEventDetailType"
      }
    },
    "lightEventDetailType": {
      "type": "object",
      "description": "Light Event Details.",
      "properties": {
        "eventPrimaryInfo": {
          "description": "Pertain event primary information.",
          "$ref": "#/definitions/eventPrimaryInfoType"
        },
        "eventDetail": {
          "description": "Pertain event information.",
          "$ref": "#/definitions/eventDetailType"
        },
        "functionSpaceInformation": {
          "description": "Pertain event's function space information.",
          "$ref": "#/definitions/eventFunctionSpaceType"
        }
      }
    },
    "eventRevenuesInformationType": {
      "type": "object",
      "description": "Collection of revenue information about a catering event.",
      "properties": {
        "eventRevenueInformation": {
          "description": "Revenue information about a catering event.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/eventRevenueInformationType"
          }
        },
        "currencyCode": {
          "description": "Currency code when base currency of the property is different than the catering currency.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        },
        "excludeFromForecast": {
          "description": "Flag to indicate if the event revenue should be excluded from the forecast.",
          "type": "boolean"
        },
        "useForecastRevenue": {
          "description": "Flag to indicate whether to only use the forecasted values when reporting, regardless of whether resources are booked on an event.",
          "type": "boolean"
        },
        "eventLevelRevenueActualization": {
          "description": "Flag that indicates if actual revenue can be manually edited.",
          "type": "boolean"
        }
      }
    },
    "eventRevenueInformationType": {
      "type": "object",
      "description": "Pertain event's revenue information.",
      "properties": {
        "revenueType": {
          "description": "Revenue type",
          "$ref": "#/definitions/revenueTypeType"
        },
        "forecastRevenue": {
          "description": "Forecasted revenue.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "expectedRevenue": {
          "description": "Expected revenue.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "guaranteedRevenue": {
          "description": "Guaranteed revenue.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "onTheBooksRevenue": {
          "description": "On the books revenue.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "billedRevenue": {
          "description": "Billed revenue.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "actualRevenue": {
          "description": "Actual revenue.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalCost": {
          "description": "Total cost involved on this revenue.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "flatForecastRevenue": {
          "description": "Flag to indicate forecast revenue is a flat amount, therefore NOT per person.",
          "type": "boolean"
        },
        "custom": {
          "description": "Flag indicating revenues are from a custom revenue type.",
          "type": "boolean"
        },
        "ignoreForecast": {
          "description": "Flag indicating to ignore forecast figures.",
          "type": "boolean"
        },
        "packaged": {
          "description": "Flag indicating if the revenues are generated by a catering package.",
          "type": "boolean"
        },
        "orderBy": {
          "description": "Sort order for revenues.",
          "type": "integer"
        }
      }
    },
    "revenueTypeType": {
      "type": "object",
      "description": "Base type provides information about Catering Revenue Types Configuration.",
      "properties": {
        "code": {
          "description": "Code is used to identify a Catering Revenue Type/Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "translatableDescription": {
          "description": "Translatable Description of the Catering Revenue Types.",
          "$ref": "#/definitions/translationTextType200"
        },
        "displaySequence": {
          "description": "Revenue Types display sequence Number",
          "type": "number"
        },
        "revenueGroup": {
          "description": "Revenue Group",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "foodAndBeverage": {
          "description": "Flag for Food and Beverages.",
          "type": "boolean"
        },
        "inactive": {
          "description": "Indicates if the Revenue type Code is inactive.",
          "type": "boolean"
        },
        "revenueDetails": {
          "description": "Collection of Revenue details assoicated to a Revenue Type (Additional Details)",
          "$ref": "#/definitions/revenueTypeDetailsType"
        }
      }
    },
    "translationTextType200": {
      "type": "object",
      "description": "Contains Multiple translated texts and language codes.",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 200.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "translations": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "revenueTypeDetailsType": {
      "type": "array",
      "description": "List of Revenue details assoicated to a Revenue Type (Additional Details)",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/revenueTypeDetailType"
      }
    },
    "revenueTypeDetailType": {
      "type": "object",
      "description": "Details type provides information about Catering Revenue Type Details.",
      "properties": {
        "hotelId": {
          "description": "Hotel Code is used to set associated revenue type details.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "instanceLink": {
      "type": "object",
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      },
      "required": [
        "href",
        "rel",
        "method",
        "operationId"
      ]
    },
    "warningsType": {
      "type": "array",
      "description": "Used in conjunction with the Success elementSpace to define a business error.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    },
    "warningType": {
      "type": "object",
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning elementSpace MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "minLength": 1,
          "maxLength": 8
        }
      }
    },
    "manageAlternateEventsStatus": {
      "type": "object",
      "description": "Response Body.",
      "properties": {
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "exceptionDetailType": {
      "title": "Error Detail",
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "errorInstance": {
      "title": "Error Instance Details",
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "blockCateringPackage": {
      "type": "object",
      "description": "Request object for adding Catering Package/Template Events to block .",
      "properties": {
        "criteria": {
          "description": "Details for adding Catering Package/Template Events .",
          "$ref": "#/definitions/blockCateringPackageType"
        },
        "requestCount": {
          "description": "Indicates what number of retry attempt this request represents. If this is the original request, RetryCount should be set to 0.",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "blockCateringPackageType": {
      "type": "object",
      "description": "Details of Catering Package Type.",
      "properties": {
        "hotelId": {
          "description": "Hotel Code of the Block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "blockId": {
          "description": "Block ID to which catering package events will be added.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "packageCode": {
          "description": "Package Code which will be added to the block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "priceCode": {
          "description": "Price Code of the package.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "status": {
          "description": "Status of the catering block",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rentalCode": {
          "description": "Rate code of the associated package",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "beginDate": {
          "description": "Begin Date for package/template events",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "packageHotelCode": {
          "description": "Hotel Code of the associated package.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "packageId": {
          "description": "Catering Package ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "translatableDescription": {
          "description": "Translatable description to elaborate Catering Package description.",
          "$ref": "#/definitions/translationTextType200"
        },
        "flatRate": {
          "description": "Defines if Flat Rate is applicable for the package.",
          "type": "boolean"
        },
        "duration": {
          "description": "Catering Package duration.",
          "type": "integer"
        },
        "attendees": {
          "description": "Block attendees.",
          "$ref": "#/definitions/cateringEventsAttendeesType"
        },
        "packageActual": {
          "description": "Indicates whether all event from the package is in Actual Status.",
          "type": "boolean"
        },
        "price": {
          "description": "Price of the catering package.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "priceDescription": {
          "description": "Price Code description of the associated package.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "cateringPackageRemovable": {
          "description": "Notifies whether this catering package can be deleted or not.",
          "type": "boolean"
        },
        "nonPackagedResourcesExist": {
          "description": "Flat to determine if the events the events associated with this package has non packaged resources",
          "type": "boolean"
        }
      }
    },
    "blockCateringPackageDetails": {
      "type": "object",
      "description": "Response object for adding Catering Package/Template Events to block.",
      "properties": {
        "createCateringPackageProcessedInfoList": {
          "description": "Status/Info of the processed package.",
          "$ref": "#/definitions/createCateringPackageProcessedInfoList"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "createCateringPackageProcessedInfoList": {
      "type": "array",
      "description": "Status/Info of the processed package.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cateringEventsProcessedInfoType"
      }
    },
    "cateringEventsProcessedInfoType": {
      "type": "object",
      "description": "Status/Info of the processed events.",
      "properties": {
        "hotelId": {
          "description": "Hotel code where event will be copied.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "blockId": {
          "description": "BlockID of the event.",
          "$ref": "#/definitions/blockId"
        },
        "eventName": {
          "description": "Name of event.",
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        },
        "eventType": {
          "description": "Type of event.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "eventDate": {
          "description": "Date of the event",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "functionSpaceDetails": {
          "description": "The function space functionSpaceDetails where the event takes place .",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "status": {
          "description": "Status of the processed event. e.g Completed, Not Processed.",
          "type": "string"
        },
        "reason": {
          "description": "Reason for not processing the event.",
          "type": "string"
        },
        "processingInfoType": {
          "description": "Flag to indicate the warning messages from the API",
          "type": "string"
        },
        "processingInfoCode": {
          "description": "Erorr/Warning code for not processing th event.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        }
      }
    },
    "cateringPackages": {
      "type": "object",
      "description": "Object containing list of catering packages associated to block.",
      "properties": {
        "cateringPackageList": {
          "description": "Catering Packages for the block.",
          "$ref": "#/definitions/blockCateringPackageListType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "blockCateringPackageListType": {
      "type": "array",
      "description": "Collection of multiple Catering Packages.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/blockCateringPackageType"
      }
    },
    "copyCateringPackage": {
      "type": "object",
      "description": "Request object for Copying Catering Package/Template to another block.",
      "properties": {
        "criteria": {
          "description": "Details for copying Catering Package/Templates.",
          "$ref": "#/definitions/copyCateringPkgType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyCateringPkgType": {
      "type": "object",
      "description": "Criteria to copy catering packages",
      "properties": {
        "hotelId": {
          "description": "Hotel code where the package will be copied.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceBlockId": {
          "description": "Source Block that the Package belongs to.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "copyToDates": {
          "description": "List of dates that the package needs to be copied.",
          "$ref": "#/definitions/datesType"
        },
        "packageId": {
          "description": "Package ID to be copied",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "targetBlockId": {
          "description": "Target Block that the Package should be copied to.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "copyInstructions": {
          "description": "Indicate weather to include Non Package resources, source status etc.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/cateringPackageCopyInstructionType"
          }
        },
        "copyStatusMode": {
          "description": "Indicates which status to copy.",
          "$ref": "#/definitions/copyStatusModeType"
        },
        "copyAsSnapshot": {
          "description": "Indicates wether to perform pre-cahnge or post-change snapshot of the copied events. By default, it is always considered as false and will provide post-change snapshot.",
          "type": "boolean"
        },
        "continue": {
          "description": "Indicates wether to to continue upon getting error processing screen. If this is true, error processing screen won't be shown.",
          "type": "boolean"
        }
      }
    },
    "cateringPackageCopyInstructionType": {
      "type": "string",
      "description": "Include Source status.",
      "enum": [
        "NonPackageResources",
        "ResourceNotes",
        "EventNotes",
        "ForecastFigures",
        "SourceStatus"
      ]
    },
    "copyStatusModeType": {
      "type": "string",
      "description": "Indicates to pick the default status based on the parameter for event.",
      "enum": [
        "SameStatus",
        "DefaultStatus"
      ]
    },
    "copyCateringPackageResponse": {
      "type": "object",
      "description": "Response object for copying packages.",
      "properties": {
        "copyCateringPackageProcessedInfoList": {
          "description": "Status/Info of the copied catering packages.",
          "$ref": "#/definitions/copyCateringPackageProcessedInfoList"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyCateringPackageProcessedInfoList": {
      "type": "array",
      "description": "Status/Info of the processed packages.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cateringEventsProcessedInfoType"
      }
    },
    "cateringPackageRevenue": {
      "type": "object",
      "description": "Object containing revenue details of the associated catering package.",
      "properties": {
        "cateringPackageRevenueDetails": {
          "description": "Catering Package revenue for the block.",
          "$ref": "#/definitions/blockCateringPackageRevenueBaseType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "blockCateringPackageRevenueBaseType": {
      "type": "object",
      "description": "Pricing detail of associated catering package.",
      "properties": {
        "blockInfo": {
          "description": "Block Information of the associated package.",
          "$ref": "#/definitions/blockType"
        },
        "packageId": {
          "description": "Unique Identifier for a Catering Package associated to block.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "packageDetail": {
          "description": "Provides information about the Catering Package.",
          "$ref": "#/definitions/cateringPackageInfoType"
        },
        "priceCode": {
          "description": "Price Code of the associated package.",
          "type": "string"
        },
        "priceDescription": {
          "description": "Price Code description of the associated package.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "flatPrice": {
          "description": "Defines if Flat Rate is applicable for the package.",
          "type": "boolean"
        },
        "revenues": {
          "description": "Collection of revenues for the associated package.",
          "$ref": "#/definitions/revenueListType"
        }
      }
    },
    "cateringPackageInfoType": {
      "type": "object",
      "description": "Catering Package details.",
      "properties": {
        "pkgCode": {
          "description": "Package Code associated with the Catering Package.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description/Name of the Catering Package.",
          "$ref": "#/definitions/translationTextType200"
        },
        "duration": {
          "description": "Duration (in days) of the Catering Package.",
          "type": "integer"
        },
        "webBookable": {
          "description": "Defines if web booking is allowed.",
          "type": "boolean"
        },
        "isTemplate": {
          "description": "Defines if Catering Package is a Template or not.",
          "type": "boolean"
        }
      }
    },
    "revenueListType": {
      "type": "array",
      "description": "Collection of revenues associated with packaged event.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/blockCateringPackageRevenueType"
      }
    },
    "blockCateringPackageRevenueType": {
      "type": "object",
      "description": "Type used for managing Revenue Details associated with a particular Catering Package Price Code.",
      "properties": {
        "packageEventId": {
          "description": "The Catering Package Event Id asscoaited with Revenue.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "revType": {
          "description": "Revenue Type associated with the Catering Package Price Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "orderBy": {
          "description": "Sorting Order.",
          "type": "integer"
        },
        "revForecast": {
          "description": "Forecasted Revenue.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "revExpected": {
          "description": "Expected Revenue.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "costExpected": {
          "description": "Expected Cost.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "eventName": {
          "description": "Name of event.",
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        },
        "eventType": {
          "description": "Type of event.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "eventTimeSpan": {
          "description": "Pertain event duration from eventStartDate and eventEndDate date and time.",
          "$ref": "#/definitions/dateTimeSpanType"
        }
      }
    },
    "status": {
      "type": "object",
      "description": "Response Body.",
      "properties": {
        "warnings": {
          "$ref": "#/definitions/warningsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      }
    },
    "eventResources": {
      "type": "object",
      "description": "Request object for copying/moving event resources.",
      "properties": {
        "criteria": {
          "description": "Criteria for copying/moving event resources.",
          "$ref": "#/definitions/copyAndMoveEventResourcesType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyAndMoveEventResourcesType": {
      "type": "object",
      "description": "Criteria to copy/move event resources",
      "properties": {
        "hotelId": {
          "description": "Hotel code where event resources will be copied/moved.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "blockId": {
          "description": "Block that the Event Resources belong to.",
          "$ref": "#/definitions/blockId"
        },
        "eventId": {
          "description": "Event that the Resources belong to.",
          "$ref": "#/definitions/eventId"
        },
        "resourceIdList": {
          "description": "List of resource Ids which needs to be copied/moved.",
          "$ref": "#/definitions/resourceCopyAndMoveListType"
        },
        "targetBlockId": {
          "description": "Targeted Block where information needs to be copied/moved.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "targetEventIdList": {
          "description": "List of target event Ids where information needs to be copied/moved.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "overrideCopyAndMoveResourceProcessWarnings": {
          "description": "Indicates whether to override warnings for copying/moving resources. By default, it is always considered as false and will provide post-change warnings.",
          "type": "boolean"
        },
        "includeAsPackage": {
          "description": "Flag to indicate if the resources have to be copied as a package.",
          "type": "boolean"
        }
      }
    },
    "resourceCopyAndMoveListType": {
      "type": "array",
      "description": "Resource Type and its UniqueID.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resourceCopyAndMoveType"
      }
    },
    "resourceCopyAndMoveType": {
      "type": "object",
      "description": "Holds Resource Type and its UniqueID",
      "properties": {
        "resourceId": {
          "description": "Unique identifier for an event resource.",
          "$ref": "#/definitions/resourceId"
        },
        "resourceType": {
          "description": "Type of event resource.",
          "$ref": "#/definitions/resourceType"
        }
      }
    },
    "eventResourcesResponse": {
      "type": "object",
      "description": "Response object for copying/moving event resources.",
      "properties": {
        "eventResourcesProcessedInfoList": {
          "description": "Status/Info of the copied/moved event resources.",
          "$ref": "#/definitions/copyCateringEventResourcesProcessedInfoList"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyCateringEventResourcesProcessedInfoList": {
      "type": "object",
      "description": "Status/Info list of the processed event resources.",
      "properties": {
        "menusProcessedInfo": {
          "description": "Status/Info of the processed event menus.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/cateringEventsProcessedInfoType"
          }
        },
        "itemsProcessedInfo": {
          "description": "Status/Info of the processed event items.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/cateringEventItemsProcessedInfoType"
          }
        }
      }
    },
    "cateringEventItemsProcessedInfoType": {
      "type": "object",
      "description": "Status/Info of the processed items.",
      "properties": {
        "hotelId": {
          "description": "Hotel code where item will be copied.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "blockId": {
          "description": "BlockID of the event where item will be copied.",
          "$ref": "#/definitions/blockId"
        },
        "eventName": {
          "description": "Name of event where item will be copied.",
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        },
        "itemName": {
          "description": "Name of Item.",
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        },
        "quantity": {
          "description": "Quantity of Item.",
          "type": "integer"
        },
        "internalQty": {
          "description": "Internal Quantity of Item.",
          "type": "integer"
        },
        "externalQty": {
          "description": "External Quantity of Item.",
          "type": "integer"
        },
        "status": {
          "description": "Status of the processed event. e.g Completed, Not Processed.",
          "type": "string"
        },
        "reason": {
          "description": "Reason for not processing the item.",
          "type": "string"
        }
      }
    },
    "eventResource": {
      "type": "object",
      "description": "Object containing event resource details.",
      "properties": {
        "eventResourceDetails": {
          "description": "Event resources information for the specific resource Id.",
          "$ref": "#/definitions/eventResourceDetailType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "eventResourceDetailType": {
      "type": "object",
      "description": "Detail information of resource which can be a Menu, Item or Space.",
      "properties": {
        "eventDetailInfo": {
          "description": "Block Information to which the resource belongs to.",
          "$ref": "#/definitions/eventInfoType"
        },
        "menu": {
          "description": "Menu detail information for the associated resource.",
          "$ref": "#/definitions/eventMenuInfoType"
        },
        "item": {
          "description": "Item detail information for the associated resource.",
          "$ref": "#/definitions/eventItemInfoType"
        }
      }
    },
    "eventMenuInfoType": {
      "type": "object",
      "description": "Information about event menu.",
      "properties": {
        "eventMenuId": {
          "description": "Event menu ID, it will be empty in case of adding a new menu to event.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "eventMenu": {
          "description": "Event menu details. It will be empty in case of deleting a menu from event.",
          "$ref": "#/definitions/eventMenuType"
        }
      }
    },
    "eventMenuType": {
      "type": "object",
      "description": "Information about event menu.",
      "properties": {
        "basicInfo": {
          "description": "Event resource detail information.",
          "$ref": "#/definitions/eventMenuBasicInfoType"
        },
        "revenues": {
          "description": "List of revenues for this menu.",
          "$ref": "#/definitions/eventMenuRevenuesType"
        },
        "menuItems": {
          "description": "List menu items.",
          "$ref": "#/definitions/eventMenuItemsType"
        },
        "hotelId": {
          "description": "Hotel code of the Resource.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "eventMenuBasicInfoType": {
      "type": "object",
      "description": "Pertain Details Information of Menu.",
      "properties": {
        "className": {
          "description": "This type holds name of Menu Class Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        },
        "name": {
          "description": "This type holds name of Menu Name.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "restriction": {
          "description": "This type holds Restrictionn for the given Menu.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "description": {
          "description": "This type holds Description for the given Menu.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "dietaryList": {
          "description": "This type holds DietaryList values for the given Menu.",
          "$ref": "#/definitions/codeListType"
        },
        "eventTypes": {
          "description": "This type holds Event list associated with menu.",
          "$ref": "#/definitions/codeListType"
        },
        "type": {
          "description": "This type holds value of Menu type FOOD ,BEVERAGE for the given Menu.",
          "$ref": "#/definitions/menuTypeType"
        },
        "quickInsertCode": {
          "description": "This type holds quick insert value, v5 functionality as Article Number for the Menu.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "servingType": {
          "description": "This type holds serving type value per person , per table for the given Menu.",
          "$ref": "#/definitions/servingType"
        },
        "servingSize": {
          "description": "This type holds TableCapacity for the given Menu.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "includedInMenu": {
          "description": "Return true, when all Menu Items added will be marked as Included and there will be a Global Price for this menu",
          "type": "boolean"
        },
        "consumptionBased": {
          "description": "This type holds value of consumption, Menu items will be charged on a consumption basis.",
          "type": "boolean"
        },
        "sellDateRange": {
          "description": "Menu will be available to sell for an Event for date range.",
          "$ref": "#/definitions/dateRangeType"
        },
        "eventDateRange": {
          "description": "Date period which the Event will take place.",
          "$ref": "#/definitions/dateRangeType"
        },
        "menusSold": {
          "description": "The total number of menus sold for the day on which the event takes place.",
          "type": "integer"
        },
        "webBookable": {
          "description": "This type tells about whether menu is book through web or not.",
          "type": "boolean"
        },
        "inactive": {
          "description": "Selection will comment this Menu is Inactive and unable to be added to a Catering Event.",
          "type": "boolean"
        },
        "salesPrice": {
          "description": "Sales Price for Menu Item in Menu Item Configuration.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "includedInPrice": {
          "description": "Return true means, menu item as Included in the Menu Price",
          "type": "boolean"
        },
        "multiChoice": {
          "description": "Indicator of this being a multi-choice menu",
          "type": "boolean"
        },
        "courseCount": {
          "description": "Define the Courses populated into the Multi Choice Menu Configuration",
          "type": "integer"
        },
        "menuId": {
          "description": "Identifier for this menu in configuration. Note: This is not the same as EventMenuID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "serveStartEndTime": {
          "description": "This defines the event eventStartDate and eventEndDate time.",
          "$ref": "#/definitions/dateTimeRangeType"
        },
        "attendees": {
          "description": "Attendees defined in the catering event.",
          "$ref": "#/definitions/cateringEventsAttendeesType"
        },
        "discountPercentage": {
          "description": "Discount Percentage applied to Menu Amount.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "order": {
          "description": "This field determines the order in which the menu has to be displayed on the manage resources screen.",
          "type": "integer"
        },
        "hotelId": {
          "description": "Hotel code where event will be organized.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "translationTextType2000": {
      "type": "object",
      "description": "Contains Multiple translated texts and language codes.",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 2000.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "translations": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "codeListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "minLength": 0,
        "maxLength": 20
      }
    },
    "menuTypeType": {
      "type": "string",
      "description": "Defines values for Menu Type",
      "enum": [
        "Food",
        "Beverage"
      ]
    },
    "servingType": {
      "type": "string",
      "description": "Serving",
      "enum": [
        "Pp",
        "Pt"
      ]
    },
    "dateTimeRangeType": {
      "type": "object",
      "description": "Date Range with Start and End dates.",
      "properties": {
        "eventStartDate": {
          "description": "The starting value of the time span.",
          "type": "string",
          "format": "date-time"
        },
        "eventEndDate": {
          "description": "The ending value of the time span.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "eventMenuRevenuesType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/eventMenuRevenueType"
      }
    },
    "eventMenuRevenueType": {
      "type": "object",
      "description": "Pertain Revenue Detail Information of the Menu.",
      "properties": {
        "revenueType": {
          "description": "This supports all Revenue Types",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        },
        "type": {
          "description": "This type holds value of Menu type FOOD ,BEVERAGE for the given Menu.",
          "$ref": "#/definitions/menuTypeType"
        },
        "cost": {
          "description": "This type holds cost of the Menu.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "internalQuote": {
          "description": "This type holds internal quote for the Menu.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "costMargin": {
          "description": "This type holds cost of the Menu.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "price": {
          "description": "This type holds Price of the Menu.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "priceMargin": {
          "description": "This type holds price margin for the given Menu.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "resourceId": {
          "description": "Unique identifier for the resource.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "custom": {
          "description": "Indicates that this resource item is a custom item added for this event.",
          "type": "boolean"
        }
      }
    },
    "eventMenuItemsType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/eventMenuItemType"
      }
    },
    "eventMenuItemType": {
      "type": "object",
      "description": "Detailed attributes of Menu Item.",
      "properties": {
        "id": {
          "description": "The menu item class unique ID",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "The Hotel code which the menu item class belongs to",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "classInfo": {
          "description": "Displays the Menu Item Name noted in the Menu Item Configuration.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "displayOrder": {
          "description": "Defines the Display Order of the menu item class, to which the menu item is attached",
          "type": "integer"
        },
        "name1": {
          "description": "First value of menu item which belongs to a menu item class",
          "$ref": "#/definitions/translationTextType2000"
        },
        "name2": {
          "description": "Seond value of menu item which belongs to a menu item class",
          "$ref": "#/definitions/translationTextType2000"
        },
        "name3": {
          "description": "Third value of menu item which belongs to a menu item class",
          "$ref": "#/definitions/translationTextType2000"
        },
        "origin1": {
          "description": "The values entered here most commonly reference a Wine, Meat origin if Restaurant features a Local Farm",
          "$ref": "#/definitions/translationTextType2000"
        },
        "origin2": {
          "description": "The values entered here most commonly reference a Wine, Meat origin if Restaurant features a Local Farm",
          "$ref": "#/definitions/translationTextType2000"
        },
        "menuType": {
          "description": "Type of Menu -Food or Beverage",
          "$ref": "#/definitions/menuTypeType"
        },
        "custom": {
          "description": "Indicates whether this menu item is custom",
          "type": "boolean"
        },
        "year": {
          "description": "This value is typically the year of the Wine",
          "type": "integer"
        },
        "restriction": {
          "description": "Any particular restriction description in 2000 characters",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "description": {
          "description": "Detailed description of menu items in 100 characters",
          "$ref": "#/definitions/translationTextType2000"
        },
        "dietaryPreferenceList": {
          "description": "list of configured Dietary preferences",
          "$ref": "#/definitions/dietaryPrefListType"
        },
        "eventTypes": {
          "description": "Field will be inherited values from the Menu Item Class associated for Event Types.",
          "$ref": "#/definitions/codeListType"
        },
        "responsibleDepartments": {
          "description": "Department Code(s) will be displayed in the field for a particular menu item",
          "$ref": "#/definitions/codeListType"
        },
        "quickInsertCode": {
          "description": "Article number in Caps of menu item",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "revenueType": {
          "description": "RevenueType of Menu Item",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "salesPrice": {
          "description": "Price of Menu Item , Numeric currency value field conforming to Currency Format for the selected Property.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "cost": {
          "description": "Actual Cost of Menu Item",
          "$ref": "#/definitions/currencyAmountType"
        },
        "itemConsumption": {
          "description": "Selection of this notes that the price defined is charged 'as-consumed' basis",
          "type": "boolean"
        },
        "container": {
          "description": "Code and description of the container to be used by Menu Item",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "portion": {
          "description": "Portion of the menu item",
          "$ref": "#/definitions/translationTextType2000"
        },
        "servings": {
          "description": "Numeric value of servings of Menu item",
          "type": "integer"
        },
        "webBookable": {
          "description": "Check of Menu Item if it is web bookable",
          "type": "boolean"
        },
        "print": {
          "description": "check if Print action is required for menu item",
          "type": "boolean"
        },
        "inactive": {
          "description": "Check for the status of menu item",
          "type": "boolean"
        },
        "includedYN": {
          "description": "Included flag",
          "type": "boolean"
        },
        "eventMenuDetailID": {
          "description": "Determines Unique identifier for the event menu details.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "course": {
          "description": "Determines the order of menu course.",
          "type": "number"
        },
        "courseOrder": {
          "description": "Determines the order of menu item within the course.",
          "type": "number"
        },
        "attendees": {
          "description": "Attendees defined in the catering event.",
          "$ref": "#/definitions/cateringEventsAttendeesType"
        },
        "discountPercentage": {
          "description": "Discount Percentage applied to Rent Amount.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "demandFactor": {
          "description": "Demand Factor of the Menu item.",
          "type": "number"
        },
        "mandatoryYN": {
          "description": "Determines if the Menu Item is mandatory or not",
          "type": "boolean"
        }
      }
    },
    "dietaryPrefListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/dietaryPrefType"
      }
    },
    "dietaryPrefType": {
      "type": "object",
      "description": "Base type provides information about Catering Revenue Types Configuration.",
      "properties": {
        "code": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "type": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "eventItemInfoType": {
      "type": "object",
      "description": "Information about event item.",
      "properties": {
        "eventItemId": {
          "description": "Event item ID, it will be empty in case of adding a new item to event.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "eventItem": {
          "description": "Event item details. It will be empty in case of deleting an item from event.",
          "$ref": "#/definitions/eventItemType"
        }
      }
    },
    "eventItemType": {
      "type": "object",
      "description": "Inventory Items identification details.",
      "properties": {
        "hotelId": {
          "description": "The Hotel code which the item belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "itemId": {
          "description": "The id of the Item class.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "itemClassId": {
          "description": "The Item Class ID which the item belongs to.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "itemClassCode": {
          "description": "The Item Class Code which the item belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "itemClassDescription": {
          "description": "The Description of the Item Class.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "itemName": {
          "description": "The Name of the Item.",
          "$ref": "#/definitions/translationTextType200"
        },
        "itemDescription": {
          "description": "The Description of the Item.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "itemCode": {
          "description": "The Article Number of the Item.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "revenueType": {
          "description": "The Revenue Type of the Item.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "revenueTypeEditable": {
          "description": "If true, the revenue could be changed.",
          "type": "boolean"
        },
        "externalOrder": {
          "description": "Flag to define if the inventory item can be ordered externally when the item is marked as critical.",
          "type": "boolean"
        },
        "print": {
          "description": "The Revenue Type of the Item.",
          "type": "boolean"
        },
        "sellInfo": {
          "description": "The Sell Information of the Item.",
          "type": "object",
          "properties": {
            "available": {
              "description": "The available period of the Item.",
              "$ref": "#/definitions/dateTimeSpanType"
            },
            "availableQty": {
              "description": "Available quantity during a period of time.",
              "type": "number"
            },
            "qtyInStock": {
              "description": "Item quantity in Stock.",
              "type": "number"
            },
            "defaultQty": {
              "description": "Defines the default quantity when booking the Item.",
              "type": "number"
            },
            "sellSeparate": {
              "description": "If true, the item could be sold separately.",
              "type": "boolean"
            },
            "sellControl": {
              "description": "If true, item is mandatory for booking.",
              "type": "boolean"
            },
            "welcomeOffer": {
              "description": "If true, the item can be attached as part of a Welcome Offer",
              "type": "boolean"
            },
            "webBookable": {
              "description": "If true, web booking is allowed.",
              "type": "boolean"
            },
            "itemClassWebBookable": {
              "description": "Specifies if web booking is allowed for the Item Class.",
              "type": "boolean"
            },
            "outsideStay": {
              "description": "Define if the the Item could be held outside of the reservation stay days.",
              "type": "boolean"
            },
            "fixedCharge": {
              "description": "If true, the Fixed Charges screen will be automatically displayed when this item gets attached to a reservation.",
              "type": "boolean"
            },
            "discountable": {
              "description": "Specifies if a discount is allowed for this item.",
              "type": "boolean"
            },
            "itemClassDiscountable": {
              "description": "Specifies if a discount is allowed for the Item Class.",
              "type": "boolean"
            },
            "criticalInventory": {
              "description": "Flag to issue a warning if this inventory item is overbooked.",
              "type": "boolean"
            },
            "price": {
              "description": "The Cost of the Item.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "defaultDuration": {
              "description": "Define the default duration days when booking the Item.",
              "type": "integer"
            }
          }
        },
        "setupTime": {
          "description": "Setup Time of the Item in minutes.",
          "type": "number"
        },
        "setdownTime": {
          "description": "Setdown Time of the Item in minutes.",
          "type": "number"
        },
        "traceText": {
          "description": "The Trace Text of the Item.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "itemPool": {
          "description": "The Item Pool description of the Item.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "displaySequence": {
          "description": "The display sequence of the Item.",
          "type": "number"
        },
        "eventTypes": {
          "description": "List of Event Types for the Item.",
          "$ref": "#/definitions/codeListType"
        },
        "departments": {
          "description": "List of Departments for the Item.",
          "$ref": "#/definitions/codeListType"
        },
        "attributes": {
          "description": "List of Attributes of the Item.",
          "$ref": "#/definitions/itemAttributesType"
        },
        "rates": {
          "description": "List of Rates of the Item.",
          "$ref": "#/definitions/itemRatesType"
        },
        "vendors": {
          "description": "List of Vendors of the Item.",
          "$ref": "#/definitions/itemVendorsType"
        },
        "resourceNotes": {
          "description": "Collection of notes which belongs to a resource (either Item or Menu or FunctionSpace).",
          "$ref": "#/definitions/eventResourceNotesType"
        },
        "itemClassDisplaySequence": {
          "description": "Display sequence of Item Class.",
          "type": "number"
        },
        "usedForEvents": {
          "description": "If true, the item is used for events.",
          "type": "boolean"
        },
        "usedForReservation": {
          "description": "If true, the item is used for reservation.",
          "type": "boolean"
        },
        "itemFromTemplate": {
          "description": "Indicates whether Item is from a Template or not.",
          "type": "boolean"
        },
        "quantity": {
          "description": "The quantity of this item required by the event.",
          "type": "number"
        },
        "attributeId": {
          "description": "The ID of the Item Attribute.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "itemRateId": {
          "description": "The Rate ID of the item.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "price": {
          "description": "For Custom rate codes, this indicates the item price.",
          "type": "number"
        },
        "discount": {
          "description": "Discount to be applied to the price.",
          "type": "number"
        },
        "priceCode": {
          "description": "Price Code to be selected from the list of configured codes available for this item",
          "type": "string"
        },
        "internalQuantity": {
          "description": "Internal Quantity can be all or part of the total quantity",
          "type": "number"
        },
        "externalQuantity": {
          "description": "External Quantity can be all or part of the total quantity of this item needs to be booked through external sources, this field shows the number booked",
          "type": "number"
        },
        "actualInternalQuantity": {
          "description": "Actual quantity of the item booked from internal resources",
          "type": "number"
        },
        "actualExternalQuantity": {
          "description": "Actual quantity of the item booked through external sources with corresponding cost",
          "type": "number"
        },
        "internalCostPerUnit": {
          "description": "Shows the internal cost of the item.If a cost has been configured for the item it will be automatically populated into this field",
          "type": "number"
        },
        "externalCostPerUnit": {
          "description": "Shows the price the external source charges for the item",
          "type": "number"
        },
        "actualInternalCostPerUnit": {
          "description": "Shows the internal cost of the item. If a booked internal cost has been entered for the item, it will be automatically populated into this field",
          "type": "number"
        },
        "actualExternalCostPerUnit": {
          "description": "Shows the external cost of the item. If a booked external cost has been entered for the item, it will be automatically populated into this field",
          "type": "number"
        },
        "order": {
          "description": "Order in which the item is displayed and printed within the non-Food and Beverage item group and its Item Class.Defaults to the sequence number in which the item was attached to the Event.",
          "type": "integer"
        },
        "actualQuantity": {
          "description": "The total actual quantity of the item on event actualization.",
          "type": "number"
        },
        "packageId": {
          "description": "The ID of the Item Package.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "isNameCustom": {
          "description": "Flag to check if the Event Item Name is a Custom Name",
          "type": "boolean"
        },
        "isExcludeNonDeduct": {
          "description": "Flag to check if the Event Item is ExcludeNonDeduct",
          "type": "boolean"
        },
        "vendorPrice": {
          "description": "This indicates the vendor price.",
          "type": "number"
        },
        "eventStartDate": {
          "description": "The starting value of the time span.",
          "type": "string",
          "format": "date-time"
        },
        "eventEndDate": {
          "description": "The ending value of the time span.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "itemAttributesType": {
      "type": "array",
      "description": "List of Item Attributes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/itemAttributeType"
      }
    },
    "itemAttributeType": {
      "type": "object",
      "description": "Details of the Item Attribute.",
      "properties": {
        "itemAttributeId": {
          "description": "The ID of the Item Attribute.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "translatableName": {
          "description": "Translatable Name of the Item Attribute.",
          "$ref": "#/definitions/translationTextType200"
        },
        "setupTime": {
          "description": "The Setup Time of the Item Attribute in minutes.",
          "type": "number"
        },
        "setdownTime": {
          "description": "The Setdown Time of the Item Attribute in minutes.",
          "type": "number"
        },
        "default": {
          "description": "If true, it's the default Attribute for the Item.",
          "type": "boolean"
        }
      }
    },
    "itemRatesType": {
      "type": "array",
      "description": "List of Item Rates.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/itemRateType"
      }
    },
    "itemRateType": {
      "type": "object",
      "description": "Details of the Item Rate.",
      "properties": {
        "itemRateId": {
          "description": "The ID of the Item Rate.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "itemRateCode": {
          "description": "The Rate Code of the Item Rate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "name": {
          "description": "The Name of the Item Rate.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "price": {
          "description": "The Price of the Item.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "hourly": {
          "description": "If true, it's hourly rate.",
          "type": "boolean"
        },
        "default": {
          "description": "If true, it's the default Rate for the Item.",
          "type": "boolean"
        }
      }
    },
    "itemVendorsType": {
      "type": "array",
      "description": "List of Item Vendors.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/itemVendorType"
      }
    },
    "itemVendorType": {
      "type": "object",
      "description": "Details of the Item Vendor.",
      "properties": {
        "profileId": {
          "description": "The ID of the vendor.",
          "$ref": "#/definitions/profileId"
        },
        "name": {
          "description": "The Name of the vendor.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "leadTime": {
          "description": "Lead time for ordering.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "price": {
          "description": "Purchase Price.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "priority": {
          "description": "The Priority of the Vendor.",
          "type": "number"
        },
        "phone": {
          "description": "The phone number of the Vendor.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "fax": {
          "description": "The fax number of the Vendor.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "email": {
          "description": "The email address of the Vendor.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "cateringEventsBulkUpdate": {
      "type": "object",
      "description": "Request object that will Change a list of events.",
      "properties": {
        "cateringEventsBulkUpdate": {
          "description": "Event(s) information, that is going to be updated in batch.",
          "$ref": "#/definitions/cateringEventsBulkUpdateType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cateringEventsBulkUpdateType": {
      "type": "object",
      "description": "Collection of Event/Function Space Details and their Event IDs to be updated.",
      "properties": {
        "eventIdList": {
          "description": "Selected event(s) Unique identifier.",
          "$ref": "#/definitions/eventIdList"
        },
        "eventRec": {
          "description": "Selected catering event(s) to be updated with these event details.",
          "$ref": "#/definitions/cateringEventBulkUpdateDetailType"
        },
        "functionSpaceRec": {
          "description": "Selected catering event(s) to be updated with these function space details.",
          "$ref": "#/definitions/cateringEventBulkUpdateFunctionSpaceType"
        },
        "overrideProcessWarnings": {
          "description": "Indicates whether to override warnings for editing multiple events. By default, it is always considered as false and will provide post-change warnings.",
          "type": "boolean"
        }
      }
    },
    "eventIdList": {
      "type": "array",
      "description": "Unique Id that references an object uniquely in the system.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/uniqueID_Type"
      }
    },
    "cateringEventBulkUpdateDetailType": {
      "type": "object",
      "description": "Catering Event detail type.",
      "properties": {
        "eventName": {
          "description": "Name of event.",
          "$ref": "#/definitions/translationTextType60"
        },
        "eventType": {
          "description": "Type of event.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "eventStatus": {
          "description": "Status details of the Event.",
          "$ref": "#/definitions/bookingStatusType"
        },
        "expectedAttendees": {
          "description": "Number of expected attendees for the event.",
          "type": "integer"
        },
        "guaranteedAttendees": {
          "description": "Number of guaranteed attendees for the event.",
          "type": "integer"
        },
        "actualAttendees": {
          "description": "Number of actual attendees attending the event.",
          "type": "integer"
        },
        "doorcard": {
          "description": "Group details to display on the outside of a meeting functionSpaceDetails.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "eventStartDate": {
          "description": "Event eventStartDate date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "eventStartTime": {
          "description": "Event eventStartDate time.",
          "type": "string"
        },
        "eventEndDate": {
          "description": "Event eventEndDate date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "eventEndTime": {
          "description": "Event eventEndDate time.",
          "type": "string"
        },
        "displayDoorcard": {
          "description": "Indicates whether the doorcard information is displayed.",
          "type": "boolean"
        },
        "notMoveable": {
          "description": "Indicates whether event dates and functionSpaceDetails are move able.",
          "type": "boolean"
        },
        "loudEvent": {
          "description": "Indicates whether the event is expected to be noisy and might possibly disturb other events.",
          "type": "boolean"
        },
        "exclude": {
          "description": "Indicates whether the event is excluded from forecast reports.",
          "type": "boolean"
        },
        "useForecast": {
          "description": "Indicates whether the event revenue has to be forecasted.",
          "type": "boolean"
        },
        "revenueActualization": {
          "description": "Flag that indicates if actual revenue can be manually edited.",
          "type": "boolean"
        }
      }
    },
    "cateringEventBulkUpdateFunctionSpaceType": {
      "type": "object",
      "description": "Function Space info type.",
      "properties": {
        "functionSpaceCode": {
          "description": "Function Space code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "setupCode": {
          "description": "Setup style code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "setupTime": {
          "description": "Setup time in minutes.",
          "type": "integer"
        },
        "setdownTime": {
          "description": "Setdown time in minutes.",
          "type": "integer"
        },
        "rentalCode": {
          "description": "Rate Code for function space.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rentalAmount": {
          "description": "The functionSpaceDetails rent amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "discountPercentage": {
          "description": "Discount Percentage applied to Rent Amount.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        }
      }
    },
    "cateringEventsBulkUpdateStatus": {
      "type": "array",
      "description": "Status/Info of the processed event(s).",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cateringEventsProcessedInfoType"
      }
    },
    "eventCalendar": {
      "type": "object",
      "description": "Return object to the request for the Events Booked/Scheduled for the function spaces in the Hotel for the particular time period.",
      "properties": {
        "eventCalendarDetails": {
          "description": "Collection of the Events Booked/Scheduled for the function spaces in the Hotel for the particular time period as per the criteria in the fetch request.",
          "$ref": "#/definitions/eventCalendarType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "eventCalendarType": {
      "type": "object",
      "description": "Collection of the Events Booked/Scheduled for the function spaces in the Hotel for the particular time period.",
      "properties": {
        "eventSpace": {
          "description": "Collection of the Events Booked/Scheduled for the function space/functionSpaceDetails for the particular time period.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/eventSpaceScheduleType"
          }
        },
        "eventCodes": {
          "description": "Collection of Event Codes for a property for the particular time period.",
          "$ref": "#/definitions/eventCodeDetailListType"
        },
        "sellMessages": {
          "description": "Function Diary Sell Messages configured for a particular date range.",
          "$ref": "#/definitions/sellMessagesType"
        },
        "totalRooms": {
          "description": "Total Number of Rooms.",
          "type": "integer"
        },
        "pageIndex": {
          "description": "Current Page the group of Rooms is included in.",
          "type": "integer"
        },
        "recordsPerPage": {
          "description": "Number of records per page.",
          "type": "integer"
        }
      }
    },
    "eventSpaceScheduleType": {
      "type": "object",
      "description": "Collection of the Events Booked/Scheduled for the function spaces in the Hotel for the particular time period.",
      "properties": {
        "description": {
          "description": "Description for the Function Room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "eventSpaceAttributes": {
          "description": "Collection of the Events Booked/Scheduled for the function space/functionSpaceDetails for the particular time period.",
          "$ref": "#/definitions/eventSpaceAttributesType"
        },
        "events": {
          "description": "Collection of the Events Booked/Scheduled for the function space/functionSpaceDetails for the particular time period.",
          "type": "object",
          "properties": {
            "relatedEvents": {
              "description": "Collection of the Refernced event ids for the Function Space",
              "type": "string"
            },
            "event": {
              "description": "Collection of the Events Booked/Scheduled for the function space/functionSpaceDetails for the particular time period.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/calendarEventInfoType"
              }
            }
          }
        },
        "hotelId": {
          "description": "Hotel Code associated with the Function Space.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomId": {
          "description": "Function Room Number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "name": {
          "description": "Name of the Function Room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "building": {
          "description": "Building name where this Room is.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomOrder": {
          "description": "Order the Room is displayed based on the settings selected by the user.",
          "type": "integer"
        }
      }
    },
    "eventSpaceAttributesType": {
      "type": "object",
      "description": "Collection of the Events Booked/Scheduled for the function spaces in the Hotel for the particular time period.",
      "properties": {
        "spaceArea": {
          "description": "Room Area in Square Feet/Meters.",
          "$ref": "#/definitions/spaceAreaType"
        },
        "shareable": {
          "description": "Flag that tells whether the functionSpaceDetails is Shareable or not.",
          "type": "boolean"
        },
        "comboSpace": {
          "description": "Flag that tells whether the functionSpaceDetails is a Combo or not.",
          "type": "boolean"
        },
        "alternate": {
          "description": "Flag that tells whether the functionSpaceDetails is an Alternate Room or not.",
          "type": "boolean"
        },
        "maximumOccupancy": {
          "description": "Specifies the maximum occupancy this functionSpaceDetails can handle.",
          "type": "integer"
        },
        "comboElement": {
          "description": "Flag that tells whether the functionSpaceDetails is a Combo Element or not.",
          "type": "boolean"
        },
        "comboRoom": {
          "description": "Combo Room Number if the functionSpaceDetails is a Combo Element.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "spaceAreaType": {
      "type": "object",
      "description": "Collection of the Events Booked/Scheduled for the function spaces in the Hotel for the particular time period.",
      "properties": {
        "area": {
          "description": "Room Area in Square Feet.",
          "type": "number"
        },
        "unit": {
          "description": "Room Area in Meters.",
          "$ref": "#/definitions/spaceAreaUnitType"
        }
      }
    },
    "spaceAreaUnitType": {
      "type": "string",
      "description": "Room Area in Square Meters.",
      "enum": [
        "SqFeet",
        "SqMeters"
      ]
    },
    "calendarEventInfoType": {
      "type": "object",
      "description": "Contains Function Diary Events information.",
      "properties": {
        "eventName": {
          "description": "Name of event.",
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        },
        "eventType": {
          "description": "Type of event.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "eventBookingInfo": {
          "description": "Information about booking.",
          "$ref": "#/definitions/eventBookingInfoType"
        },
        "masterEventId": {
          "description": "Master ID to represent the event.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "attendees": {
          "description": "Number of event attendees.",
          "type": "integer"
        },
        "spaceTimeSpan": {
          "$ref": "#/definitions/timeSpanType"
        },
        "eventTimeSpan": {
          "$ref": "#/definitions/dateTimeSpanType"
        },
        "setupTime": {
          "description": "Setup time in minutes.",
          "type": "integer"
        },
        "setdownTime": {
          "description": "Setdown time in minutes.",
          "type": "integer"
        },
        "setupCode": {
          "description": "Setup Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "setupDescription": {
          "description": "Setup Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "eventDisplay": {
          "$ref": "#/definitions/eventDisplayType"
        },
        "space": {
          "description": "The space to which the event belongs to.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "createdOn": {
          "description": "Date the event was created.",
          "type": "string",
          "format": "date-time",
          "maxLength": 8
        },
        "isComboRoomEventRef": {
          "description": "Flag which is set to true when this Calendar Event Info is simply a copy of an event occurring in a Combo Element of this Room.",
          "type": "boolean"
        },
        "waitListEventsCount": {
          "description": "Evaluates total waitlist events count for this event.",
          "type": "integer"
        },
        "overbookEventsCount": {
          "description": "Evaluates total overbook events count for this event.",
          "type": "integer"
        },
        "prospectiveEventsCount": {
          "description": "Evaluates total prospective events count for this event.",
          "type": "integer"
        }
      }
    },
    "eventBookingInfoType": {
      "type": "object",
      "description": "Booking information about the Function Diary Event.",
      "properties": {
        "blockCode": {
          "description": "Business Block Code.",
          "type": "string"
        },
        "blockName": {
          "description": "Business Block Name.",
          "type": "string"
        },
        "roomStatus": {
          "description": "Room Status of the Block.",
          "type": "string"
        },
        "cateringStatus": {
          "description": "Catering Status of the Block.",
          "type": "string"
        },
        "catDecisionDate": {
          "description": "Catering Decision Date of the Block.",
          "type": "string",
          "format": "date"
        },
        "catFollowUpDate": {
          "description": "Catering Follow Up Date of the Block.",
          "type": "string",
          "format": "date"
        },
        "roomFollowUpDate": {
          "description": "Room Follow Up Date of the Block.",
          "type": "string",
          "format": "date"
        },
        "account": {
          "description": "Account attached to the block.",
          "type": "string"
        },
        "contact": {
          "description": "Contact attached to the block.",
          "type": "string"
        },
        "roomNights": {
          "description": "Boolean to indicate whether rooms are booked for the block.",
          "type": "boolean"
        },
        "originalRooms": {
          "description": "Original number of rooms booked for the block.",
          "type": "number"
        },
        "catOwner": {
          "description": "Catering Sales Manager ID.",
          "type": "number"
        },
        "catOwnerName": {
          "description": "Catering Sales Manager Name.",
          "type": "string"
        },
        "salesOwner": {
          "description": "Room Manager ID.",
          "type": "number"
        },
        "salesOwnerName": {
          "description": "Room Manager Name.",
          "type": "string"
        },
        "eventStatus": {
          "description": "Catering Status Type describes Inventory behavior.",
          "$ref": "#/definitions/bookingStatusType"
        },
        "deductInvYn": {
          "description": "Flag to indicate Deduct Inventory.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "rateProtect": {
          "description": "Flag to indicate block is rate protected.",
          "type": "boolean"
        },
        "nonCompete": {
          "description": "Flag to indicate block is non-compete protected.",
          "type": "boolean"
        },
        "nonCompeteCode": {
          "description": "Holds the industry code if non-compete is enabled.",
          "type": "string"
        },
        "nonCompeteIndustry": {
          "description": "Holds the industry description.",
          "type": "string"
        },
        "blockDates": {
          "description": "The Time Span(Arrival, Departure) which covers the Block Span.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/timeSpanType"
          }
        },
        "vipStatus": {
          "description": "VIP status of the customer.",
          "$ref": "#/definitions/vIPStatusType"
        },
        "guarantee": {
          "description": "Guarantee Code of the reservation.",
          "$ref": "#/definitions/resGuaranteeType"
        },
        "resvNameId": {
          "description": "Reservation Name ID.",
          "type": "number"
        },
        "bookHotelCode": {
          "description": "Hotel code of the Block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bookId": {
          "description": "Business Block ID.",
          "type": "number"
        },
        "masterNameId": {
          "description": "Master Name ID.",
          "type": "number"
        },
        "companyNameId": {
          "description": "Company Name ID.",
          "type": "number"
        }
      }
    },
    "vIPStatusType": {
      "type": "object",
      "description": "VIP status of the customer.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Used for Character Strings, length 0 to 2000.",
          "minLength": 0,
          "maxLength": 2000
        },
        "code": {
          "description": "VIP status of the customer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "eventDisplayType": {
      "type": "object",
      "description": "Display Information for the Function Diary Event.",
      "properties": {
        "bookingName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "cateringOnlyYn": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "sharedYn": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "masterYn": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "loudEventYn": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "waitlistedYn": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "exclusiveYn": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "alternateMasterYn": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "dontMoveYn": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        }
      }
    },
    "eventCodeDetailListType": {
      "type": "array",
      "description": "Collection of the Event Codes in a Property for a particular time period.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/eventCodeDetailType"
      }
    },
    "eventCodeDetailType": {
      "type": "object",
      "description": "Event Code details for a given date.",
      "properties": {
        "date": {
          "description": "Date for which the event code is applicable.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "event": {
          "description": "Event code and Description.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "color": {
          "description": "Color associated to the event code.",
          "$ref": "#/definitions/statusColorType"
        },
        "eventCodeType": {
          "description": "Determines the type of event code.",
          "$ref": "#/definitions/eventCodeTypeType"
        },
        "blockStatus": {
          "description": "Status of the catering block",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "blockName": {
          "description": "Block Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "nonCompeteIndustry": {
          "description": "Holds the industry description.",
          "type": "string"
        },
        "hotelId": {
          "description": "Hotel Code associated with the Event Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "eventCodeTypeType": {
      "type": "string",
      "description": "Determines if the block has any Non Compete configured",
      "enum": [
        "EventCode",
        "DayType",
        "RateProtect",
        "NonCompete"
      ]
    },
    "sellMessagesType": {
      "type": "object",
      "description": "The SellMessagesType is the list of message and attributes returned by web service.",
      "properties": {
        "sellMessage": {
          "description": "This is the message text.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/sellMessageType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "sellMessageType": {
      "type": "object",
      "description": "The SellMessagesType defines the standard attributes that will be retrieved with the sell message.",
      "properties": {
        "message": {
          "description": "This is the message text.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "croCode": {
          "description": "This is the Central Reservation office code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "chainCode": {
          "description": "This is the chain code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "This is the hotel code or resort.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "description": "This represents the functionSpaceDetails type code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCode": {
          "description": "This represents the rate plan code of the functionSpaceDetails type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "languageCode": {
          "description": "This is the language code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "stickyFlagYn": {
          "description": "Flag which tells if this message is Sticky (Y/N).",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "usedInModule": {
          "description": "This represents the correct moduletype which should be used for fetching SellMessages.",
          "$ref": "#/definitions/usedInModuleType"
        },
        "beginDate": {
          "description": "This is the Begin date for the configured SellMessage.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "events": {
      "type": "object",
      "description": "Response object for fetching events.",
      "properties": {
        "eventSummaries": {
          "description": "Events matching the search criteria.",
          "$ref": "#/definitions/eventSummariesInfoType"
        },
        "blockInfo": {
          "description": "Type contains the primary details for a block and it's children details.",
          "$ref": "#/definitions/blocksType"
        },
        "masterInfoList": {
          "description": "Refer to Generic common types document",
          "type": "array",
          "items": {
            "$ref": "#/definitions/masterInfoType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "eventSummariesInfoType": {
      "type": "object",
      "description": "Collection of events.",
      "properties": {
        "eventSummary": {
          "description": "Contains master/sub-events or standalone events summary information",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/eventSummaryInfoType"
          }
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "eventSummaryInfoType": {
      "type": "object",
      "description": "Contains information about an event.",
      "properties": {
        "eventId": {
          "description": "Unique identifier of the event.",
          "$ref": "#/definitions/eventId"
        },
        "eventLink": {
          "description": "Link information with other event(s).",
          "$ref": "#/definitions/cateringEventLinkType"
        },
        "blockIdList": {
          "description": "Unique ID to represent the block that the event belongs to.",
          "$ref": "#/definitions/blockIdList"
        },
        "blockName": {
          "description": "Name of the block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "attendees": {
          "description": "Number of event attendees.",
          "type": "integer"
        },
        "functionSpaceDetails": {
          "description": "The function space functionSpaceDetails where the event takes place.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "rentalAmount": {
          "description": "Rental amount for the event function space.",
          "type": "number"
        },
        "functionSpaceSetup": {
          "description": "Setup Style selected for the Function Space.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "indicators": {
          "description": "Indicators for additional event information.",
          "$ref": "#/definitions/indicatorsType"
        },
        "eventStatus": {
          "description": "Status of the event. Examples are INQ, TEN, DEF, etc.",
          "$ref": "#/definitions/bookingStatusType"
        },
        "waitlistReturnStatus": {
          "description": "This is to show the turned status of an event",
          "$ref": "#/definitions/bookingStatusType"
        },
        "cateringStatusType": {
          "description": "Event Status Type Flag to identify if the Catering event is cancelled, lost, actual, etc. Examples are C(Cancelled), L (Lost), R (Refused), A (Actual).",
          "$ref": "#/definitions/cateringStatusTypeType"
        },
        "cateringStatusDeductInventory": {
          "description": "Flag to indicate if the Catering event deducts resources from inventory.",
          "type": "boolean"
        },
        "cateringStatusReturnToInventory": {
          "description": "Flag to indicate if the Catering event returns resources to inventory.",
          "type": "boolean"
        },
        "setupTime": {
          "description": "Event space setupCode time in minutes.",
          "type": "integer"
        },
        "tearDownTime": {
          "description": "Event space tear down time in minutes.",
          "type": "integer"
        },
        "masterEvent": {
          "description": "Flag to indicate if the event is a master event.",
          "type": "boolean"
        },
        "subEvent": {
          "description": "Flag to indicate if the event is a sub event.",
          "type": "boolean"
        },
        "packageEvent": {
          "description": "Flag to indicate if the event is part of a package.",
          "type": "boolean"
        },
        "alternateEvent": {
          "description": "Flag to indicate if the event is booked as a backup for another event.",
          "type": "boolean"
        },
        "displayDoorCard": {
          "description": "Flag to indicate if the doorcard has been selected to display on reports or external readerboard systems.",
          "type": "boolean"
        },
        "doorCard": {
          "description": "The doorcard to be displayed on reports or external readerboard systems.",
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        },
        "excludeFromForecast": {
          "description": "Flag to indicate if the event revenue should be excluded from the forecast.",
          "type": "boolean"
        },
        "useForecastRevenue": {
          "description": "Flag to indicate whether to only use the forecasted values when reporting, regardless of whether resources are booked on an event.",
          "type": "boolean"
        },
        "setupCode": {
          "description": "Setup style code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "minimumOccupancy": {
          "description": "Minimum Occupancy for the SetupCode of Catring Event.",
          "type": "integer"
        },
        "maximumOccupancy": {
          "description": "Maximum Occupancy for the SetupCode of Catring Event.",
          "type": "integer"
        },
        "discountPercentage": {
          "description": "Discount Percentage applied to Rent Amount.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "loudEvent": {
          "description": "Indicates whether the event is expected to be noisy and might possibly disturb other events.",
          "type": "boolean"
        },
        "rentalCode": {
          "description": "Rate Code for function space.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "eventShared": {
          "description": "Flag to indicate if the event is shareable with other events.",
          "type": "boolean"
        },
        "shareable": {
          "description": "Flag to indicate if the event functionSpaceDetails is shareable.",
          "type": "boolean"
        },
        "inactiveDate": {
          "description": "Inactivation date of the event.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "packageCode": {
          "description": "Package Code of the Event if it has a Package Enabled in it.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "packageName": {
          "description": "Package Name of the Event.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "packageId": {
          "description": "Package Id of the Event.",
          "type": "integer"
        },
        "includeSpaceInPackage": {
          "description": "Flag to indicate if the event space is associated from the Package.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel where the event is booked.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "blockHotelCode": {
          "description": "Hotel where the Block is created for the event.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hasPostings": {
          "description": "Indicates whether the event has postings.",
          "type": "boolean"
        },
        "blockHasPostings": {
          "description": "Indicates whether any event in the block has postings.",
          "type": "boolean"
        },
        "hasPartialPostings": {
          "description": "Indicates whether the event has posted some charges, but not all.",
          "type": "boolean"
        },
        "allPosted": {
          "description": "Indicates whether the event has posted all charges.",
          "type": "boolean"
        },
        "nothingPosted": {
          "description": "Indicates that none of the charges on the event have been posted.",
          "type": "boolean"
        },
        "eventStartDate": {
          "description": "The starting value of the time span.",
          "type": "string",
          "format": "date-time"
        },
        "eventEndDate": {
          "description": "The ending value of the time span.",
          "type": "string",
          "format": "date-time"
        },
        "type": {
          "description": "Type of event. Examples are LUN, DIN, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "eventName": {
          "description": "Name of event. This is used to describe the event.",
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        },
        "cateringCurrency": {
          "description": "Currency code when base currency of the property is different than the catering currency.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        },
        "cateringQuotedCurrency": {
          "description": "Currency code which is been quoted for Catering Events",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        },
        "eventIndicators": {
          "description": "Indicators of additional information attached to the event",
          "$ref": "#/definitions/indicatorsType"
        }
      }
    },
    "masterInfoType": {
      "type": "object",
      "properties": {
        "codeInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeInfoType"
          }
        },
        "codeType": {
          "$ref": "#/definitions/masterType"
        }
      }
    },
    "codeInfoType": {
      "type": "object",
      "description": "",
      "properties": {
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "addtionalCodeInfo": {
          "$ref": "#/definitions/addtionalCodeInfoType"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "addtionalCodeInfoType": {
      "type": "array",
      "description": "Holds name of additional code information",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Holds name of additional code information",
            "$ref": "#/definitions/masterInfoCodeDetailType"
          },
          "value": {
            "description": "Holds value of additional code information",
            "type": "string",
            "minLength": 0,
            "maxLength": 2000
          }
        }
      }
    },
    "masterInfoCodeDetailType": {
      "type": "string",
      "enum": [
        "LongDescription",
        "ShortDescription"
      ]
    },
    "masterType": {
      "type": "string",
      "enum": [
        "Country",
        "State",
        "AddressType",
        "PhoneType",
        "RateCategory",
        "CalculationRule",
        "PostingRythym",
        "BillingInstruction",
        "TransactionCode",
        "DisplaySet",
        "MailingActions",
        "DistanceType",
        "District",
        "Territory",
        "FiscalRegion",
        "InventoryItem",
        "Package",
        "RoomFeaturePreference",
        "SpecialPreference",
        "Promotion",
        "Department",
        "ReservationPreference",
        "FacilityTask",
        "RoomType",
        "RateCode",
        "OutOfOrderReason",
        "Block"
      ]
    },
    "event": {
      "type": "object",
      "description": "Object containing details of the event.",
      "properties": {
        "eventDetails": {
          "description": "Event information.",
          "$ref": "#/definitions/eventsInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "manageEventsResources": {
      "type": "object",
      "description": "Object containing details for managing events resources.",
      "properties": {
        "eventDetails": {
          "description": "Event information.",
          "$ref": "#/definitions/eventsInfoType"
        },
        "eventItems": {
          "description": "Event items information",
          "$ref": "#/definitions/eventItemsType"
        },
        "eventMenus": {
          "description": "Event menus information.",
          "$ref": "#/definitions/eventMenusType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "eventItemsType": {
      "type": "object",
      "description": "List of event items",
      "properties": {
        "eventItemInfo": {
          "description": "Collection of Detailed information about event items.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/eventItemInfoType"
          }
        },
        "includedInPackage": {
          "description": "Flag to indicate all inventory items are part of a package.",
          "type": "boolean"
        },
        "critical": {
          "description": "Flag to indicate all inventory items are critical.",
          "type": "boolean"
        }
      }
    },
    "eventMenusType": {
      "type": "object",
      "description": "List of event menus.",
      "properties": {
        "eventMenuInfo": {
          "description": "Collection of Detailed information about event menus.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/eventMenuInfoType"
          }
        },
        "includedInPackage": {
          "description": "Flag to indicate all event menus are part of a package.",
          "type": "boolean"
        },
        "critical": {
          "description": "Flag to indicate all event menus are critical.",
          "type": "boolean"
        }
      }
    },
    "copyCateringEvents": {
      "type": "object",
      "description": "Request object for copying events.",
      "properties": {
        "criteria": {
          "description": "Criteria for copying events.",
          "$ref": "#/definitions/copyCateringEventsType"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyCateringEventsType": {
      "type": "object",
      "description": "Criteria to copy events",
      "properties": {
        "hotelId": {
          "description": "Hotel code where event will be copied.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "blockId": {
          "description": "Block that the Events belongs to.",
          "$ref": "#/definitions/blockId"
        },
        "copyToDates": {
          "description": "List of dates that events needs to be copied.",
          "$ref": "#/definitions/datesType"
        },
        "eventIdList": {
          "description": "List of event Ids which needs to be copied.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "copyToPackageId": {
          "description": "Catering Event Package ID to be applied to the copied events.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "copyInstructions": {
          "description": "Indicate weather to include Catering Event Copy Options. e.g. sub events, notes.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/cateringEventCopyInstructionType"
          }
        },
        "copyStatusMode": {
          "description": "Indicates which status to copy.",
          "$ref": "#/definitions/copyStatusModeType"
        },
        "copyAsSnapshot": {
          "description": "Indicates wether to perform pre-cahnge or post-change snapshot of the copied events. By default, it is always considered as false and will provide post-change snapshot.",
          "type": "boolean"
        }
      }
    },
    "cateringEventCopyInstructionType": {
      "type": "string",
      "description": "Include Event Forecast Figures.",
      "enum": [
        "SubEvents",
        "EventNotes",
        "EventResources",
        "EventResourceNotes",
        "EventResourcePrices",
        "EventChangeNotes",
        "EventForecastFigures"
      ]
    },
    "copyCateringEventsResponse": {
      "type": "object",
      "description": "Response object for copying events.",
      "properties": {
        "copyCateringEventsProcessedInfoList": {
          "description": "Status/Info of the copied events.",
          "$ref": "#/definitions/copyCateringEventsProcessedInfoList"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyCateringEventsProcessedInfoList": {
      "type": "array",
      "description": "Status/Info of the processed events.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cateringEventsProcessedInfoType"
      }
    },
    "cateringEventChanges": {
      "type": "object",
      "description": "Response object for fetching event change logs.",
      "properties": {
        "eventChanges": {
          "description": "Event Changes Log.",
          "$ref": "#/definitions/cateringEventChangeType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "cateringEventChangeType": {
      "type": "object",
      "properties": {
        "changeList": {
          "$ref": "#/definitions/cateringEventChangeListType"
        },
        "statusChangeList": {
          "$ref": "#/definitions/cateringEventStatusChangeListType"
        },
        "revenueChangeList": {
          "$ref": "#/definitions/cateringEventRevenueChangeListType"
        }
      }
    },
    "cateringEventChangeListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cateringEventChangeInfoType"
      }
    },
    "cateringEventChangeInfoType": {
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "HotelCode associated with the event",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "changeId": {
          "description": "Unique Event Change Identifier",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "eventId": {
          "description": "Unique Event Identifiers",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "eventName": {
          "description": "Name of the event",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "changeSource": {
          "description": "Source of the change",
          "$ref": "#/definitions/cateringEventChangeSources"
        },
        "resourceName": {
          "description": "Description of the Resource",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "action": {
          "description": "Hard coded Action(s) list(NEW,UPDATE,DELETE)",
          "$ref": "#/definitions/cateringEventChangeActions"
        },
        "changeUserInfo": {
          "description": "Log time and detiails of the user who made changes",
          "$ref": "#/definitions/logUserInfoType"
        },
        "eventChangeDetailList": {
          "$ref": "#/definitions/cateringEventChangeDetailListType"
        }
      }
    },
    "cateringEventChangeSources": {
      "type": "string",
      "description": "List of sources that can cause the event change",
      "enum": [
        "Attendee",
        "Event",
        "Item",
        "Menu",
        "Menuitem",
        "Space"
      ]
    },
    "cateringEventChangeActions": {
      "type": "string",
      "description": "A collection of supported list of actions.",
      "enum": [
        "New",
        "Update",
        "Delete",
        "Inactivate"
      ]
    },
    "logUserInfoType": {
      "type": "object",
      "properties": {
        "userInfo": {
          "description": "User details for Log changes",
          "$ref": "#/definitions/userInfoType"
        },
        "logDateTime": {
          "description": "User Log Changes Time Stamp details",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "userInfoType": {
      "type": "object",
      "description": "Opera User Information",
      "properties": {
        "userId": {
          "description": "User Id of the Opera User",
          "type": "integer"
        },
        "userName": {
          "description": "Name of the Opera User",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "cateringEventChangeDetailListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/cateringEventChangeDetailType"
      }
    },
    "cateringEventChangeDetailType": {
      "type": "object",
      "properties": {
        "fieldName": {
          "description": "List of Field Names for the Type(s) Selection",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "oldValue": {
          "description": "Old Value of the respective field",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "newValue": {
          "description": "New Value of the respective field",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "changeId": {
          "description": "Unique Event Change Identifier",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "cateringEventStatusChangeListType": {
      "type": "array",
      "description": "Event Status Changes Details",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/eventStatusChangeType"
      }
    },
    "eventStatusChangeType": {
      "type": "object",
      "properties": {
        "eventChangeId": {
          "description": "Unique EventChangeID for which the details are requested",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "blockId": {
          "description": "Block ID for which the details are requested",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "eventId": {
          "description": "ID of this event",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "priorStatus": {
          "description": "Prior Status of this event",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currentStatus": {
          "description": "Current Status of this event",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "changeUserInfo": {
          "description": "Log time and detiails of the user who made changes .",
          "$ref": "#/definitions/logUserInfoType"
        }
      }
    },
    "cateringEventRevenueChangeListType": {
      "type": "array",
      "description": "Event Revenue Changes Details",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/eventRevenueChangeType"
      }
    },
    "eventRevenueChangeType": {
      "type": "object",
      "properties": {
        "eventChangeId": {
          "description": "Unique EventChangeID for which the details are requested",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "blockId": {
          "description": "Block ID for which the details are requested",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "eventId": {
          "description": "ID of this event",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "attendees": {
          "description": "Number of attendees for this event",
          "type": "integer"
        },
        "eventDate": {
          "description": "Date of this event",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "revenueChange": {
          "description": "Type of Revenue for this event",
          "$ref": "#/definitions/eventRevenueType"
        },
        "eventStatus": {
          "description": "Status of this event",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "changeUserInfo": {
          "description": "Log time and detiails of the user who made changes .",
          "$ref": "#/definitions/logUserInfoType"
        }
      }
    },
    "eventRevenueType": {
      "type": "object",
      "properties": {
        "revenueType": {
          "description": "Type of Revenue",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "revenue": {
          "description": "Revenue Change Amount",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "cateringEventPostingsDetail": {
      "type": "object",
      "description": "Object for retrieving catering events postings.",
      "properties": {
        "postingMasterReservations": {
          "description": "Collection of posting master reservations to be used for manage catering event postings collection.",
          "$ref": "#/definitions/blockPostingAccountReservationsType"
        },
        "cateringEventPostings": {
          "description": "Collection of catering events postings.",
          "$ref": "#/definitions/cateringEventPostingsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "blockPostingAccountReservationsType": {
      "type": "array",
      "description": "Fetch block's posting account reservations information.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/blockPostingReservationsType"
      }
    },
    "blockPostingReservationsType": {
      "type": "object",
      "description": "Contains the block's posting account reservation information.",
      "properties": {
        "hotelId": {
          "description": "Hotel Code of the Block.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "confirmationNumber": {
          "description": "Confirmation Number of the Posting Account Reservation.",
          "type": "integer"
        },
        "guestName": {
          "description": "Posting Account guest name.",
          "type": "string"
        },
        "arrivalDate": {
          "description": "Arrival date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "departureDate": {
          "description": "Departure date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reservationStatus": {
          "description": "Reservation Status of the Posting Account.",
          "$ref": "#/definitions/bookingStatusType"
        },
        "roomHotelCode": {
          "description": "Hotel Code of the Room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationNameId": {
          "description": "Unique identifier for reservation.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "guestFirstName": {
          "description": "Posting Account guest's first name..",
          "type": "string"
        },
        "eventId": {
          "description": "Unique Event Identifiers",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "blockId": {
          "description": "Block ID of the Posting account reservation account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "defaultPostingAccount": {
          "description": "Default posting account for the block.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "size": {
          "description": "Number of Posting account reservations per block.",
          "type": "integer"
        },
        "roomId": {
          "description": "Room Number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "noPost": {
          "description": "Flag to indicate whether posting charges is allowed.",
          "type": "boolean"
        }
      }
    },
    "cateringEventPostingsType": {
      "type": "object",
      "description": "Collection of catering event postings.",
      "properties": {
        "cateringEventPosting": {
          "description": "Pertain catering event's posting information.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/cateringEventPostingType"
          }
        },
        "eventId": {
          "description": "Unique Event Identifiers",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "cateringEventPostingType": {
      "type": "object",
      "description": "Pertain catering event's posting information.",
      "properties": {
        "postId": {
          "description": "Unique identifier for catering event posting.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "posted": {
          "description": "Flag to determine if the revenue has been posted.",
          "type": "boolean"
        },
        "revenueType": {
          "description": "The revenue type associated with the resource.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "includedRevenue": {
          "description": "Flag to determine if the posted revenue is Included. If not Included it is considered as Extra posted revenue.",
          "type": "boolean"
        },
        "revenue": {
          "description": "Posted revenue.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postedRevenue": {
          "description": "Revenue calculated as per the property configured Catering currency.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "chequeNumber": {
          "description": "An additional identifier for this resource on the folio.",
          "type": "string",
          "minLength": 0,
          "maxLength": 240
        },
        "transactionCode": {
          "description": "Transaction Code used for posting revenue.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "resourceName": {
          "description": "Resource description for this posting.",
          "type": "string",
          "minLength": 0,
          "maxLength": 240
        }
      }
    },
    "cateringEventPostings": {
      "type": "object",
      "description": "Object for retrieving catering events postings.",
      "properties": {
        "postingMasterReservations": {
          "description": "Collection of posting master reservations to be used for manage catering event postings collection.",
          "$ref": "#/definitions/reservationSnapshotsType"
        },
        "cateringEventPostings": {
          "description": "Collection of catering events postings.",
          "$ref": "#/definitions/cateringEventPostingsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "reservationSnapshotsType": {
      "type": "object",
      "description": "A collection of Reservation snapshot objects.",
      "properties": {
        "reservation": {
          "description": "A reservation snapshot object.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationSnapshotType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "reservationSnapshotType": {
      "type": "object",
      "description": "This is used when changing block reservations in bulk.",
      "properties": {
        "hotelReservation": {
          "description": "Contains detailed information about the snapshot reservation",
          "$ref": "#/definitions/hotelReservationType"
        },
        "routingInstructions": {
          "description": "Contains the routing instructions of the reservation.",
          "$ref": "#/definitions/routingInfoListType"
        }
      }
    },
    "hotelReservationType": {
      "type": "object",
      "description": "The Reservation class contains the current reservation being created or altered.",
      "properties": {
        "reservationIdList": {
          "description": "Used to provide PMS and/or CRS identifiers.",
          "$ref": "#/definitions/reservationIdList"
        },
        "externalReferences": {
          "description": "External Reference information for Reservation.",
          "$ref": "#/definitions/externalReferencesType"
        },
        "associatedReservations": {
          "description": "Information regarding associated reservations.",
          "$ref": "#/definitions/associatedResType"
        },
        "sourceOfSale": {
          "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
          "$ref": "#/definitions/sourceOfSaleType"
        },
        "roomStay": {
          "description": "Room stays information.",
          "$ref": "#/definitions/roomStayType"
        },
        "compAuthorizer": {
          "description": "Reservation Comp Authorizer.",
          "$ref": "#/definitions/compAuthorizerInfoType"
        },
        "reservationGuests": {
          "description": "Collection of guests associated with the reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/resGuestType"
          }
        },
        "sharedGuests": {
          "description": "Collection of guests who share this reservation.",
          "$ref": "#/definitions/resSharedGuestListType"
        },
        "additionalGuestInfo": {
          "description": "Entry Date into the country. (Croatian Requirements).",
          "$ref": "#/definitions/resGuestAdditionalInfoType"
        },
        "reservationProfiles": {
          "description": "Collection of guests associated with the reservation.",
          "type": "object",
          "properties": {
            "reservationProfile": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/reservationProfileType"
              }
            },
            "commissionPayoutTo": {
              "description": "If not null, reservation is considered to pay out commission to either Travel Agent, Source or both.",
              "$ref": "#/definitions/commissionPayoutToType"
            }
          }
        },
        "reservationCommunication": {
          "description": "Collection of reservation communication details.",
          "$ref": "#/definitions/resCommunicationType"
        },
        "reservationAwards": {
          "description": "Collection of Awards,Certificates for the guest profile.",
          "$ref": "#/definitions/awardsType"
        },
        "trackItItems": {
          "description": "Collection of TrackIt Items available for that reservation",
          "$ref": "#/definitions/trackItItemsType"
        },
        "shares": {
          "description": "Collection of share reservation available for that reservation",
          "$ref": "#/definitions/hotelReservationsType"
        },
        "locators": {
          "description": "Collection of Locators available for that reservation",
          "$ref": "#/definitions/reservationLocatorsType"
        },
        "attachments": {
          "description": "Collection of attachments available for that reservation",
          "$ref": "#/definitions/attachmentsType"
        },
        "webRegistrationCards": {
          "description": "Collection of Web Registration Cards available for that reservation",
          "$ref": "#/definitions/attachmentsType"
        },
        "serviceRequests": {
          "description": "Collection of Service Requests available for that reservation",
          "$ref": "#/definitions/serviceRequests"
        },
        "prepaidCards": {
          "description": "Collection of Prepaid Cards available for that reservation",
          "$ref": "#/definitions/prepaidCardsType"
        },
        "profileAwards": {
          "description": "Collection of profile awards available for that reservation",
          "$ref": "#/definitions/awardsType"
        },
        "reservationPackages": {
          "description": "A Service object represents a non-functionSpaceDetails product provided to guests. Service products may have associated inventory and charges.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationPackageType"
          }
        },
        "inventoryItems": {
          "description": "A collection of inventory items attached to a reservation.",
          "$ref": "#/definitions/resInventoryItemsType"
        },
        "comments": {
          "description": "List of Notes for the Guest related to the reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/commentInfoType"
          }
        },
        "guestComments": {
          "description": "List of Notes for the Guest related to the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/commentInfoType"
          }
        },
        "guestMemberships": {
          "description": "List of Memberships for the Guest related to the reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/membershipType"
          }
        },
        "preferenceCollection": {
          "description": "Collection of reservation preferences.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/preferenceTypeType"
          }
        },
        "reservationMemberships": {
          "description": "List of reservation memberships.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationMembershipType"
          }
        },
        "reservationPaymentMethods": {
          "description": "A collection of Payment Method objects.",
          "$ref": "#/definitions/reservationPaymentMethodsType"
        },
        "routingInstructions": {
          "description": "Set of Routing Instructions.",
          "$ref": "#/definitions/routingInfoListType"
        },
        "reservationPolicies": {
          "description": "A collection of Cancellation Penalties objects.",
          "$ref": "#/definitions/reservationPoliciesType"
        },
        "cashiering": {
          "description": "Holds cashiering related information for the reservation.",
          "$ref": "#/definitions/resCashieringType"
        },
        "housekeeping": {
          "description": "Holds rooms housekeeping information.",
          "$ref": "#/definitions/resHousekeepingType"
        },
        "linkedReservation": {
          "description": "Reservations related to the current Reservation.",
          "$ref": "#/definitions/linkedReservationsInfoType"
        },
        "extSystemSync": {
          "type": "boolean"
        },
        "userDefinedFields": {
          "description": "Collections of user defined fields.",
          "$ref": "#/definitions/userDefinedFieldsType"
        },
        "reservationIndicators": {
          "description": "Indicators of additional information attached to the reservation",
          "$ref": "#/definitions/indicatorsType"
        },
        "waitlist": {
          "description": "Information regarding why reservation has been/was waitlisted. This could hold information as history even if reservation is no more in Waitlist status.",
          "$ref": "#/definitions/waitlistResType"
        },
        "cancellation": {
          "description": "Information regarding why reservation has been/was cancelled. This could hold information as history even if reservation is no more in in Cancelled status.",
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "code": {
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "cancellationNo": {
              "description": "Cancellation Number given when reservation was last cancelled.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "date": {
              "description": "Date when reservation was last cancelled.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            }
          }
        },
        "catering": {
          "description": "Catering event information if reservation is associated with the catering event.",
          "$ref": "#/definitions/cateringResInfoType"
        },
        "statisticalClassification": {
          "description": "Catering event information if reservation is associated with the catering event.",
          "$ref": "#/definitions/resStatClassificationType"
        },
        "alerts": {
          "description": "List of reservation alerts.",
          "$ref": "#/definitions/alertsType"
        },
        "traces": {
          "description": "List of reservation Traces.",
          "$ref": "#/definitions/hotelReservationTracesType"
        },
        "callHistory": {
          "description": "List of reservation calls.",
          "$ref": "#/definitions/callHistoryType"
        },
        "fixedCharges": {
          "description": "List of reservation fixed charges.",
          "$ref": "#/definitions/fixedChargesType"
        },
        "guestMessages": {
          "description": "List of Messages.",
          "$ref": "#/definitions/guestMessagesType"
        },
        "lockHandle": {
          "description": "An id representing the record lock for this reservation. When passed, update operation will verify that this lock is still valid.",
          "type": "number"
        },
        "overrideInstructions": {
          "description": "List of overrides done for the reservation.",
          "$ref": "#/definitions/overrideInstructionsType"
        },
        "queue": {
          "description": "Information about the time and duration this reservation was on Queue for Checkin.",
          "$ref": "#/definitions/reservationQueueInformationType"
        },
        "allowedActions": {
          "description": "Collection of allowed actions for the reservation.",
          "$ref": "#/definitions/reservationAllowedActionsType"
        },
        "eCoupons": {
          "description": "List of eCoupons.",
          "$ref": "#/definitions/eCouponsType"
        },
        "transactionDiversions": {
          "description": "List of transaction diversions attached to the reservation.",
          "type": "object",
          "properties": {
            "transactionDiversions": {
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/reservationTransactionDiversionsType"
              }
            },
            "actionType": {
              "type": "string",
              "maxLength": 2000
            }
          }
        },
        "advanceCheckIn": {
          "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
          "$ref": "#/definitions/advanceCheckInType"
        },
        "tickets": {
          "description": "List of Reservation Tickets.",
          "$ref": "#/definitions/ticketsType"
        },
        "accessRestrictionMessage": {
          "description": "Configurable Access Restriction Message for Excluded Block or Rate Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "eCertificates": {
          "description": "List of ECertificates attached to the reservation.",
          "$ref": "#/definitions/reservationECertificatesType"
        },
        "customNameValueDetail": {
          "description": "List of Custom Name Value Information attached to the reservation.",
          "$ref": "#/definitions/nameValueDetailType"
        },
        "customChargeExemptionDetails": {
          "description": "List of Custom Charge Exemptions attached to the reservation.",
          "$ref": "#/definitions/customChargeExemptionsType"
        },
        "folios": {
          "description": "This elementSpace returns any automatically generated folios during check-in, based on the Fetch Instruction \"AutoFolios\". When the parameter \"Auto Generate Credit Bill for Deposit upon Check In\" is enabled, during check-in credit bills are automatically generated for the deposits. The generated credit bill details are returned so that user can preview/print the folio. For some countries like Portugal, it is mandatory to print the folio and hence this information is needed",
          "$ref": "#/definitions/foliosShortInfoType"
        },
        "autoBorrowFromHouse": {
          "description": "This flag will force to borrow from house if borrow required for number of rooms requested, this will only applicable when reservation is attached to a Block.",
          "type": "boolean"
        },
        "overrideExternalChecks": {
          "description": "Forcefully override the create/update action on the Reservation. For real-time CRS interfaces, this elementSpace is used as force selling indicator in case of Create or Update Reservation",
          "type": "boolean"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomStayReservation": {
          "description": "Boolean True if this reservation is reserving rooms. False if it is only reserving services.",
          "type": "boolean"
        },
        "reservationStatus": {
          "description": "Indicates the Actual status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "computedReservationStatus": {
          "description": "Indicates the Computed status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "walkIn": {
          "description": "When true, indicates the reservation is for a guest that walks-in without a reservation. When false, the reservation is not a walk-in.",
          "type": "boolean"
        },
        "printRate": {
          "description": "Indicates whether to show the rate or not on a printed document which includes the rate.",
          "type": "boolean"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "createBusinessDate": {
          "description": "Business Date when the reservation was created.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reinstateDate": {
          "description": "Business Date when the reservation was last reinstated.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "party": {
          "description": "Party/PartyCode when reservation is part of a party(a small group).",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "primaryEnrollmentResort": {
          "description": "Name Of the Resort/Hotel for the primary enrollment",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "primaryEnrollmentChain": {
          "description": "Name of the Chain for the primary enrollment",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "customReference": {
          "description": "Custom Reference to identify reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "displayColor": {
          "description": "The color to display this reservation on functionSpaceDetails grid displays.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "markAsRecentlyAccessed": {
          "description": "Mark this reservation as recently accessed.",
          "type": "boolean"
        },
        "overrideInventoryCheck": {
          "description": "Indicates to Override the Room Inventory Check if applicable.",
          "type": "boolean"
        },
        "accessRestriction": {
          "description": "Indicates user restriction on the reservation based on the Access exclusion functionality such as Restriction on Changes, Cancellation or both.",
          "$ref": "#/definitions/resAccessRestrictionType"
        },
        "preRegistered": {
          "description": "Is the reservation pre-registered.",
          "type": "boolean"
        },
        "upgradeEligible": {
          "description": "Indicates whether the reservation is eligible for upgrade.",
          "type": "boolean"
        },
        "overrideBlockRestriction": {
          "type": "boolean"
        },
        "allowAutoCheckin": {
          "description": "Flag to allow auto checkin",
          "type": "boolean"
        },
        "hasOpenFolio": {
          "type": "boolean"
        },
        "allowMobileCheckout": {
          "description": "Flag containing true or false value for reservation to be eligible for self-checkout by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile checkout yes / no. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "allowMobileViewFolio": {
          "description": "Attribute AllowMobileViewFolio is set to true when the reservation is eligible for viewing folio using mobile device.",
          "type": "boolean"
        },
        "allowPreRegistration": {
          "description": "Flag containing true or false value for reservation to be eligible for prior check in by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile check in yes / no. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "optedForCommunication": {
          "description": "Flag containing true or false value to determine if the guest has opted for communications pertaining to this reservation.Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is marked for communication. Upon fetch, the current state of the flag will show true or false.",
          "type": "boolean"
        },
        "chargeCardNumber": {
          "description": "This attribute represents Hotel charge card number. This number is generated automatically in OPERA when a reservation is created in OPERA. It is part of a functionality that provide the guest with the convenience of placing all their charges directly on their reservation folio.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "overrideOutOfServiceCheck": {
          "description": "Indicates to Override the Room Out Of Service Check if applicable.",
          "type": "boolean"
        }
      }
    },
    "associatedResType": {
      "type": "object",
      "description": "Information regarding associated reservations to the reservation.",
      "properties": {
        "parentReservation": {
          "description": "Stores Unique ID of the parent reservation.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "originalMultiRoomRes": {
          "description": "Stores Unique ID of the original multi functionSpaceDetails reservation from which this reservation is split off.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "sourceOfSaleType": {
      "type": "object",
      "description": "Point of Sale of reservation. Identifies the entity/channel who made the reservation.",
      "properties": {
        "sourceType": {
          "description": "Type of entity/channel who made the reservation..",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "sourceCode": {
          "description": "The entity/channel who made the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "roomStayType": {
      "type": "object",
      "properties": {
        "registrationNumber": {
          "description": "Registration Number of the reservation for the current day.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "currentRoomInfo": {
          "description": "Room information of the reservation for the current day.",
          "$ref": "#/definitions/currentRoomInfoType"
        },
        "roomRates": {
          "description": "A collection of Room Rates associated with a particular Room Stay. Each Room Rate combination can have multiple rates. Example King functionSpaceDetails, Rack rate plan, Monday through Thursday, weekday amount, Friday and Saturday, weekend amount.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomRateType"
          }
        },
        "guestCounts": {
          "$ref": "#/definitions/guestCountsType"
        },
        "arrivalDate": {
          "type": "string",
          "format": "date"
        },
        "departureDate": {
          "type": "string",
          "format": "date"
        },
        "expectedTimes": {
          "description": "The Expected Arrival and Departure Times.",
          "$ref": "#/definitions/resExpectedTimesType"
        },
        "originalTimeSpan": {
          "description": "The Original Time Span(Arrival, Departure) which covers the Room Stay. In case of Rolling No Show TimeSpan's StratDate moves forward but OriginalTimeSpan's StratDate remains the same.",
          "$ref": "#/definitions/timeSpanType"
        },
        "guarantee": {
          "description": "The guarantee information associated to the Room Stay. A maximum of 5 occurances are available for use depending on the context.",
          "$ref": "#/definitions/resGuaranteeType"
        },
        "promotion": {
          "description": "Promotions applied to the reservation to get the promotional rate.",
          "$ref": "#/definitions/promotionType"
        },
        "suiteWith": {
          "description": "Connecting Rooms.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "total": {
          "description": "The total amount charged for the Room Stay.",
          "$ref": "#/definitions/totalType"
        },
        "totalPoints": {
          "description": "The total number of Points charged for the Room Stay.",
          "$ref": "#/definitions/pointsType"
        },
        "multiValueAttrs": {
          "description": "Informative indicators indicating different values of an attribute exists over the stay.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "maxLength": 2000
          }
        },
        "upsellInfo": {
          "description": "Indicates Upsell Information to be applied on Reservation.",
          "$ref": "#/definitions/upsellInfoType"
        },
        "mobileNotifications": {
          "description": "Denotes the status of Room Ready and Key Ready messages.",
          "$ref": "#/definitions/resMobileNotificationsType"
        },
        "roomNumberLocked": {
          "description": "When true, indicates a functionSpaceDetails number cannot be changed. When false, indicates a functionSpaceDetails number may be changed.",
          "type": "boolean"
        },
        "printRate": {
          "description": "This control whether rate info will be printed in confirmation letter.",
          "type": "boolean"
        },
        "ownerReservationType": {
          "description": "Indicates whether reservation is for Unit/Room Owner or Authorized User. If this attribute is not define it is a regular/rental reservation.",
          "$ref": "#/definitions/ownerResTypeType"
        },
        "primaryShareType": {
          "description": "This is populated in case of primary share scenario. This indicates whether this reservation is primary or non primary. Changes or postings to the 'non-primary' share reservation is not allowed.",
          "$ref": "#/definitions/primaryShareTypeType"
        },
        "remoteCheckInAllowed": {
          "description": "Indicates whether the reservation is pre-registered for internet check-in or not.",
          "type": "boolean"
        },
        "bookingMedium": {
          "description": "Classifies the medium(Channel field on reservation screen) through which the reservation is made.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bookingMediumDescription": {
          "description": "Description of the booking medium.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "availableUpsellOfferCount": {
          "description": "Number of Upsell Offers Available for this stay. This will only be populated if the Upsell Instruction is included in the Allowed Instruction request",
          "type": "integer"
        }
      }
    },
    "currentRoomInfoType": {
      "type": "object",
      "description": "Room information of the reservation for the current day.",
      "properties": {
        "roomType": {
          "description": "Current functionSpaceDetails type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomId": {
          "description": "Current functionSpaceDetails number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "suggestedRoomNumbers": {
          "description": "Suggested functionSpaceDetails numbers.",
          "$ref": "#/definitions/codeListType"
        },
        "roomDescription": {
          "description": "Current functionSpaceDetails description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "roomViewCode": {
          "description": "Represents the functionSpaceDetails view code like City view, River view, Ocean view etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "assignedByAI": {
          "description": "Represents the functionSpaceDetails was assigned by AI Room Assignment.",
          "type": "boolean"
        },
        "upgradedByAI": {
          "description": "Represents the functionSpaceDetails was upgraded by AI Room Assignment.",
          "type": "boolean"
        }
      }
    },
    "roomRateType": {
      "type": "object",
      "properties": {
        "total": {
          "$ref": "#/definitions/totalType"
        },
        "totalPoints": {
          "$ref": "#/definitions/pointsType"
        },
        "rates": {
          "$ref": "#/definitions/ratesType"
        },
        "packages": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/packageElementType"
          }
        },
        "stayProfiles": {
          "description": "Profile associated with the functionSpaceDetails Stay.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationProfileType"
          }
        },
        "guestCounts": {
          "description": "A collection of Guest Counts associated with the functionSpaceDetails rate.",
          "$ref": "#/definitions/guestCountsType"
        },
        "taxFreeGuestCounts": {
          "description": "A collection of Tax Free Guest Counts associated with the functionSpaceDetails rate. This list does not add to the guest count but just indicates number of tax free guests out of guest counts.",
          "$ref": "#/definitions/guestCountsType"
        },
        "awards": {
          "description": "Membership Awards code applied on the reservation.",
          "$ref": "#/definitions/resAwardsType"
        },
        "foreignExchange": {
          "description": "Exchange Type information for the postings.",
          "$ref": "#/definitions/foreignExchangeType"
        },
        "reservationBlock": {
          "description": "Key information about the block for this reservation.",
          "$ref": "#/definitions/reservationBlockType"
        },
        "roomRateInfo": {
          "description": "Information about the Room Rate Combination.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "mealPlans": {
          "description": "Meal plan codes for rate plan code.",
          "$ref": "#/definitions/mealPlansType"
        },
        "roomType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "promotionCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "eventStartDate": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "eventEndDate": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "availability": {
          "description": "Used to specify an availability status for the functionSpaceDetails rate. When available value could be either not specified or \"Available\".",
          "$ref": "#/definitions/roomRateAvailReasonType"
        },
        "suppressRate": {
          "type": "boolean"
        },
        "marketCode": {
          "description": "The code that relates to the market being sold to (e.g., the corporate market, packages).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "marketCodeDescription": {
          "description": "Description of the market code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "sourceCode": {
          "description": "To specify where the business came from e.g. radio, newspaper ad, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceCodeDescription": {
          "description": "Description of the source of business.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "numberOfUnits": {
          "description": "The number of rooms.",
          "type": "integer"
        },
        "roomId": {
          "description": "A string value representing the unique identification of a functionSpaceDetails.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "pseudoRoom": {
          "description": "True indicates as pseudo functionSpaceDetails type. This is usually used for a posting master reservation.",
          "type": "boolean"
        },
        "roomTypeCharged": {
          "description": "Room Type used for the Rate calculation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "commissionCode": {
          "description": "Commission Code applicable for commission calculation for Travel Agent/Company.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "commissionable": {
          "description": "Indicates Commission is applicable for commission calculation for Travel Agent/Company.",
          "type": "boolean"
        },
        "houseUseOnly": {
          "description": "Indicates this reservation is for House use.",
          "type": "boolean"
        },
        "complimentary": {
          "description": "Indicates this reservation rate is complimentary.",
          "type": "boolean"
        },
        "inventoryLender": {
          "description": "Indicates whether the functionSpaceDetails type inventory was taken from the allotment or House availability.",
          "type": "string"
        },
        "fixedRate": {
          "description": "Fixed Rate Indicator.",
          "type": "boolean"
        },
        "barRanking": {
          "description": "Best Available rates ranking.",
          "type": "integer"
        },
        "rateGroup": {
          "description": "For RatePlanSet equals BESTAVAILABLERATE, in case Rate Groups are enabled the elementSpace provides the rate group for the rate plan code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "discountAllowed": {
          "description": "Indicates if the Rate Code is discountable i.e discounts are allowed on the rate code.",
          "type": "boolean"
        },
        "bogoDiscount": {
          "description": "Indicates if the Rate Code has BOGO(Bye one Get one) indicator.",
          "type": "boolean"
        },
        "rateLevel": {
          "description": "Rate plan type like Corporate,Regular,Military,Weekend etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "commissionPercentage": {
          "description": "Indicates commission percentage used by the rate plan.",
          "type": "integer"
        },
        "commissionAmount": {
          "description": "Indicates commission amount used by the rate plan.",
          "type": "integer"
        },
        "credentialsRequired": {
          "description": "If true, indicates that credentials is required to sell the rate code.",
          "type": "boolean"
        },
        "taxIncluded": {
          "description": "If true, indicates if tax is included in the rate code.",
          "type": "boolean"
        },
        "rateDescription": {
          "description": "Rate code description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        }
      }
    },
    "totalType": {
      "type": "object",
      "description": "The total amount charged for the service including additional amounts and fees.",
      "properties": {
        "taxes": {
          "description": "A collection of taxes.",
          "$ref": "#/definitions/taxesType"
        },
        "fees": {
          "description": "A collection of fees or service charges.",
          "$ref": "#/definitions/feesType"
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "amountBeforeTax": {
          "description": "The total amount not including any associated tax (e.g., sales tax, VAT, GST or any associated tax).",
          "type": "number"
        },
        "amountAfterTax": {
          "description": "The total amount including all associated taxes (e.g., sales tax, VAT, GST or any associated tax).",
          "type": "number"
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "code": {
          "description": "Type of charge.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateOverride": {
          "description": "When true indicates that the rate amount has been overridden.",
          "type": "boolean"
        },
        "baseAmount": {
          "description": "The rate's base price. Amount excluding price for any add to rate combine line package attached to the rate.Also excludes any discounts",
          "type": "number"
        }
      }
    },
    "taxesType": {
      "type": "object",
      "description": "A collection of taxes.",
      "properties": {
        "tax": {
          "description": "An individual tax.",
          "type": "array",
          "maxItems": 99,
          "items": {
            "$ref": "#/definitions/taxType"
          }
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "taxType": {
      "type": "object",
      "description": "Applicable tax elementSpace. This elementSpace allows for both percentages and flat amounts. If one field is used, the other should be zero since logically, taxes should be calculated in only one of the two ways.",
      "properties": {
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "type": {
          "description": "Used to indicate if the amount is inclusive or exclusive of other charges, such as taxes, or is cumulative (amounts have been added to each other).",
          "$ref": "#/definitions/amountDeterminationType"
        },
        "code": {
          "description": "Code identifying the fee (e.g.,agency fee, municipality fee).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "amountDeterminationType": {
      "type": "string",
      "description": "Used to indicate if an amount is inclusive or exclusive of other charges, such as taxes.",
      "enum": [
        "Inclusive",
        "Exclusive"
      ]
    },
    "feesType": {
      "type": "object",
      "description": "A collection of fees or service charges.",
      "properties": {
        "fee": {
          "description": "An individual fee or service charge.",
          "type": "array",
          "maxItems": 99,
          "items": {
            "$ref": "#/definitions/feeType"
          }
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "feeType": {
      "type": "object",
      "description": "Applicable service charges or fees.",
      "properties": {
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "type": {
          "description": "Used to indicate if the amount is inclusive or exclusive of other charges, such as taxes, or is cumulative (amounts have been added to each other).",
          "$ref": "#/definitions/amountDeterminationType"
        },
        "code": {
          "description": "Code identifying the fee (e.g.,agency fee, municipality fee).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "ratesType": {
      "type": "object",
      "description": "Individual rate amount.",
      "properties": {
        "rate": {
          "description": "The Rate contains a collection of elements that define the amount of the rate, associated fees, additional occupant amounts. Taxes can be broken out or included within the various amounts. A currency can be associated to each amount.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/amountType"
          }
        },
        "rateRange": {
          "description": "Rate Range details like maximum rate amount and minimum rate amount in each available rate category.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/rateRangeType"
          }
        }
      }
    },
    "amountType": {
      "type": "object",
      "description": "Base charge and additional charges related to a functionSpaceDetails that includes such things as additional guest amounts, cancel fees, etc. Also includes Discount percentages, total amount, and the rate description.",
      "properties": {
        "base": {
          "description": "The base amount charged for the accommodation or service per unit of time (ex: Nightly, Weekly, etc). If TaxInclusive is set to True, then taxes are included in the base amount. Note that any additional charges should itemized in the other elements.",
          "$ref": "#/definitions/totalType"
        },
        "additionalGuestAmounts": {
          "description": "Collection of incremental charges per age qualifying code for additional guests. Amount charged for additional occupant is with respect to age group of the base guests.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/additionalGuestAmountType"
          }
        },
        "discount": {
          "description": "Discount percentage and/or Amount, code and textual reason for discount",
          "$ref": "#/definitions/discountType"
        },
        "shareRatePercentage": {
          "description": "Indicates the share rate percentage for the reservation if set to CUSTOMSPLIT.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "shareDistributionInstruction": {
          "description": "Last rate share distribution instruction applied on share reservation daily rate segment.",
          "$ref": "#/definitions/shareDistributionInstructionType"
        },
        "total": {
          "description": "The total amount charged for this rate including additional occupant amounts and fees.",
          "$ref": "#/definitions/totalType"
        },
        "requiredPoints": {
          "description": "The Points contains the number of points required to book a particular functionSpaceDetails type.",
          "$ref": "#/definitions/pointsType"
        },
        "effectiveRate": {
          "description": "The reservation effective amount charged for the accommodation or service (i.e. base amount + amount for Add to Rate Combine Line packages) per unit of time",
          "$ref": "#/definitions/totalType"
        },
        "eventStartDate": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "eventEndDate": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "additionalGuestAmountType": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/totalType"
        },
        "ageQualifyingCode": {
          "type": "string",
          "enum": [
            "ADULT",
            "CHILD",
            "OTHER",
            "CHILDBUCKET1",
            "CHILDBUCKET2",
            "CHILDBUCKET3",
            "CHILDBUCKET4",
            "CHILDBUCKET5"
          ]
        }
      }
    },
    "discountType": {
      "type": "object",
      "description": "Identifies and provides details about the discount. This allows for both percentages and flat amounts. If one field is used, the other should be zero/not specified since logically.",
      "properties": {
        "discountReason": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "percent": {
          "description": "Percentage discount.",
          "type": "number"
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        },
        "discountCode": {
          "description": "Specifies the type of discount (e.g., No condition, LOS, Deposit or Total amount spent).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "shareDistributionInstructionType": {
      "type": "string",
      "description": "The type of Rate Amount Change to be done on the Sharer reservation. This can be FULL -> Full Rate for each Sharer. SPLIT-> Split the Rate amount between Sharer Reservations. ENTIRE -> This Sharer will get the total amount of the rate code for all the Sharer Reservations.",
      "enum": [
        "Full",
        "Entire",
        "Split",
        "CustomSplit"
      ]
    },
    "rateRangeType": {
      "type": "object",
      "description": "Rate Range details like maximum rate amount and minimum rate amount in each available rate category.",
      "properties": {
        "base": {
          "description": "The base amount charged for the accommodation or service.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/totalType"
          }
        },
        "rateChange": {
          "description": "Rate Change Indicator.",
          "type": "boolean"
        }
      }
    },
    "packageElementType": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "allowance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "description": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 2000
          }
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "packageCode": {
          "type": "string"
        },
        "calculationRule": {
          "type": "string"
        },
        "postingRhythm": {
          "type": "string"
        },
        "quantity": {
          "type": "integer"
        },
        "includedInRate": {
          "type": "boolean"
        },
        "addRateSeprateLine": {
          "type": "boolean"
        },
        "addRateCombinedLine": {
          "type": "boolean"
        },
        "startTime": {
          "type": "string"
        },
        "endTime": {
          "type": "string"
        },
        "sellSeparate": {
          "type": "boolean"
        }
      }
    },
    "reservationProfileType": {
      "type": "object",
      "properties": {
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
          "$ref": "#/definitions/profileIdList"
        },
        "profile": {
          "description": "Provides detailed information regarding either a company or a customer profile.",
          "$ref": "#/definitions/profileType"
        },
        "reservationProfileType": {
          "$ref": "#/definitions/resProfileTypeType"
        }
      }
    },
    "guestCountsType": {
      "type": "object",
      "description": "A collection of GuestCount by age group.",
      "properties": {
        "childAges": {
          "description": "Defines Children's Ages. Number of children ages mentioned may mot match with children counts.",
          "$ref": "#/definitions/childAgesType"
        },
        "childBuckets": {
          "description": "Defines children counts with Age Qualifying Group(Child Bucket#1) classification.",
          "$ref": "#/definitions/childBucketsType"
        },
        "adults": {
          "description": "Defines the number of Adults.",
          "type": "integer"
        },
        "children": {
          "description": "Defines the number of Children.",
          "type": "integer"
        }
      }
    },
    "childAgesType": {
      "type": "array",
      "description": "Age of a child in years.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/childAgeType"
      }
    },
    "childAgeType": {
      "type": "object",
      "description": "Defines Child's Age.",
      "properties": {
        "age": {
          "description": "Age of a child in years.",
          "type": "integer"
        }
      }
    },
    "childBucketsType": {
      "type": "object",
      "description": "Defines children counts with Age Qualifying Group(Child Bucket) classification.",
      "properties": {
        "bucket1Count": {
          "description": "Number of children classified under the first Age Qualifying Group(Child Bucket#1).",
          "type": "integer"
        },
        "bucket2Count": {
          "description": "Number of children classified under the second Age Qualifying Group(Child Bucket#2).",
          "type": "integer"
        },
        "bucket3Count": {
          "description": "Number of children classified under the third Age Qualifying Group(Child Bucket#3).",
          "type": "integer"
        },
        "bucket4Count": {
          "description": "Number of children classified under the fourth Age Qualifying Group(Child Bucket#4).",
          "type": "integer"
        },
        "bucket5Count": {
          "description": "Number of children classified under the fifth Age Qualifying Group(Child Bucket#5).",
          "type": "integer"
        }
      }
    },
    "resAwardsType": {
      "type": "object",
      "description": "Membership Awards code applied on the reservation.",
      "properties": {
        "membershipNo": {
          "description": "Membership program under which the award is applied.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "awardVouchers": {
          "$ref": "#/definitions/awardVouchersType"
        },
        "originalRoomType": {
          "description": "Room Type before the Upgrade Award.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "upgradeRoomType": {
          "description": "Room Type after the Upgrade Award.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "awardVouchersType": {
      "type": "array",
      "description": "This stores the Membership Awards code applied on the reservation.",
      "maxItems": 5,
      "items": {
        "type": "object",
        "properties": {
          "awardCode": {
            "description": "Membership Award code applied on the reservation.",
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          },
          "voucherNo": {
            "description": "Membership Award number.",
            "type": "string",
            "minLength": 0,
            "maxLength": 80
          }
        }
      }
    },
    "foreignExchangeType": {
      "type": "object",
      "description": "Foreign Exchange info.",
      "properties": {
        "type": {
          "description": "Exchange Type for the postings.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "effectiveDate": {
          "description": "Effective Exchange date for the foreign currency posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "mealPlansType": {
      "type": "array",
      "description": "Meal plan codes associated with the rate codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/mealPlanCodeType"
      }
    },
    "mealPlanCodeType": {
      "type": "object",
      "description": "Meal plan codes associated with the rate codes.",
      "properties": {
        "code": {
          "description": "Meal plan code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "included": {
          "description": "Represents if the meal plan code is included in rate code or not.",
          "type": "boolean"
        },
        "breakfastIncluded": {
          "description": "Represents if the meal plan code is available for breakfast or not.",
          "type": "boolean"
        },
        "lunchIncluded": {
          "description": "Represents if the meal plan code is available for lunch or not.",
          "type": "boolean"
        },
        "dinnerIncluded": {
          "description": "Represents if the meal plan code is available for dinner or not.",
          "type": "boolean"
        }
      }
    },
    "roomRateAvailReasonType": {
      "type": "string",
      "description": "Indicates the Room Rate is not available due to unavailability of enough items for the rate code.",
      "enum": [
        "Available",
        "Restricted",
        "RestrictedDueToInventory",
        "RestrictedDueToOccupancy",
        "RestrictedDueToItemInventory"
      ]
    },
    "upsellInfoType": {
      "type": "object",
      "description": "Information regarding upsell for a reservation.",
      "properties": {
        "originalInfo": {
          "description": "Original Values of the reservation prior to upgrade.",
          "type": "object",
          "properties": {
            "rentalCode": {
              "description": "The Rate Code of the Reservation before it was upgraded",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "totalAmount": {
              "description": "Total Amount of the reservation before it was upgraded.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "roomType": {
              "description": "Original Reservation Room Type before being upgraded.",
              "$ref": "#/definitions/codeDescriptionType"
            },
            "nights": {
              "description": "The number of nights of the reservation before being upgraded.",
              "type": "integer"
            }
          }
        },
        "upsellInfo": {
          "description": "Information of a reservation during the process of upgrade.",
          "type": "object",
          "properties": {
            "totalUpsellCharge": {
              "description": "Amount that was charged for the upsell.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "totalUpsellMoneyAmount": {
              "description": "Total Amount that was charged including upsell.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "firstNightUpsellAmount": {
              "description": "First Night Total Amount including Upsell.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "firstNightUpsellCharge": {
              "description": "First Night Upsell Charges.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "totalUpsellPoints": {
              "description": "Total Upsell Points.",
              "type": "integer"
            },
            "totalActualRateAmount": {
              "description": "Actual Total Room Rate for the Target Upsell Room Type.",
              "$ref": "#/definitions/currencyAmountType"
            },
            "roomType": {
              "description": "Reservation Room Type for Upsell.",
              "$ref": "#/definitions/codeDescriptionType"
            },
            "roomLongDescription": {
              "description": "Detail description of the Room Type.",
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "ruleId": {
              "description": "Upsell Rule Id.",
              "type": "integer"
            },
            "ruleCode": {
              "description": "Upsell rule code",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "ruleDescription": {
              "description": "Upsell rule description",
              "type": "string",
              "minLength": 0,
              "maxLength": 2000
            },
            "percentageSavings": {
              "description": "Percentage savings resulting from accepting upsell offer. This will be calculated as the ratio of the amount saved by accepting the upsell offer to the actual functionSpaceDetails rate (i.e. functionSpaceDetails rate when upsell is not offered)",
              "type": "number",
              "minimum": 0,
              "maximum": 100
            },
            "upsellDate": {
              "description": "The date on which reservation is upgraded.",
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "upsellUser": {
              "description": "User who upgraded the reservation.",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            }
          }
        }
      }
    },
    "resMobileNotificationsType": {
      "type": "object",
      "description": "Contains the status of Room Ready and Key Ready messages.",
      "properties": {
        "roomReady": {
          "description": "Denotes the status of Room Ready message. It can have one of the values:PENDING, COMPLETED or FAILED",
          "$ref": "#/definitions/communicationStatusType"
        },
        "keyReady": {
          "description": "Denotes the status of Key Ready message. It can have one of the values:PENDING, COMPLETED or FAILED",
          "$ref": "#/definitions/communicationStatusType"
        },
        "checkoutMessageReceived": {
          "description": "Indicates if the Mobile checkout message is received.",
          "type": "boolean"
        },
        "requiresAction": {
          "description": "Indicates if user action is required. The action could be for sending Room Ready or Key Ready Notification. It could also be for initiating Checkout",
          "type": "boolean"
        },
        "errorMessage": {
          "description": "Error message when Mobile Notification has failed.",
          "type": "string"
        }
      }
    },
    "communicationStatusType": {
      "type": "string",
      "description": "Enum to denote the Status of Readiness messages sent to Guest Devices.",
      "enum": [
        "Pending",
        "Completed",
        "Failed",
        "Sent",
        "Received",
        "Cancelled",
        "PendingAvailability"
      ]
    },
    "ownerResTypeType": {
      "type": "string",
      "enum": [
        "Owner",
        "AuthorizedUser"
      ]
    },
    "primaryShareTypeType": {
      "type": "string",
      "enum": [
        "Primary",
        "NonPrimary"
      ]
    },
    "compAuthorizerInfoType": {
      "type": "object",
      "description": "Authorizer Information",
      "properties": {
        "authorizerId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "authorizerUserName": {
          "description": "Application user name of the authorizer",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "authorizerName": {
          "description": "Full name of the authorizer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        }
      }
    },
    "resGuestType": {
      "type": "object",
      "description": "A collection of ResGuest objects, identifying the guests associated with this reservation. Which guests are in which functionSpaceDetails is determined by each RoomStays ResGuestRPHs collection.",
      "properties": {
        "profileInfo": {
          "description": "A collection of Profiles or Unique IDs of Profiles.",
          "type": "object",
          "properties": {
            "profileIdList": {
              "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
              "$ref": "#/definitions/profileIdList"
            },
            "profile": {
              "description": "Provides detailed information regarding either a company or a customer profile.",
              "$ref": "#/definitions/profileType"
            },
            "profileCashieringDetail": {
              "description": "Cashiering details for the profile.",
              "$ref": "#/definitions/profileCashieringDetailType"
            },
            "registrationCardNo": {
              "description": "Unique identifier of the police registration card number.",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            }
          }
        },
        "arrivalTransport": {
          "$ref": "#/definitions/transportInfoType"
        },
        "departureTransport": {
          "$ref": "#/definitions/transportInfoType"
        },
        "visaInfo": {
          "$ref": "#/definitions/visaInfoType"
        },
        "reservationGuestRPH": {
          "description": "This is a reference placeholder, used as an index for this guest in this reservation. In the ResGuest object it is used like all other RPH attributes to send the delta of a reservation. It is used by the RoomStay and Service objects to indicate which guests are associated with that functionSpaceDetails stay or service.",
          "type": "string",
          "minLength": 1,
          "maxLength": 8
        },
        "primary": {
          "description": "When true indicates this is the primary guest.",
          "type": "boolean"
        }
      }
    },
    "profileCashieringDetailType": {
      "type": "object",
      "description": "The type contains routing instructions for the profile.",
      "properties": {
        "paymentMethod": {
          "description": "Payment Method Details.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "eCommerceId": {
          "description": "E-Commerce ID of the Profile",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "routingInstructions": {
          "description": "Set of preconfigured transaction codes.",
          "$ref": "#/definitions/profileRoutingInstructionsType"
        },
        "taxType": {
          "description": "Tax type code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "fiscalGuestType": {
          "description": "Guest type code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel Code for which the routing instructions are provided for a profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "profileRoutingInstructionsType": {
      "type": "object",
      "description": "The type contains routing instructions for the profile.",
      "properties": {
        "transactionCodes": {
          "description": "Set of preconfigured transaction codes.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "billingInstructions": {
          "description": "Set of preconfigured Billing Instruction results.",
          "$ref": "#/definitions/billingInstructionsType"
        },
        "autoPopulateRouting": {
          "description": "A flag which determines whether the instructions has to be automatically populated for this profile or not.",
          "type": "boolean"
        }
      }
    },
    "trxCodesInfoType": {
      "type": "array",
      "description": "List of Transaction codes info.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trxInfoType"
      }
    },
    "trxInfoType": {
      "type": "object",
      "description": "Transaction codes info.",
      "properties": {
        "description": {
          "description": "Transaction codes info.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionGroup": {
          "description": "Category of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionSubGroup": {
          "description": "Sub category of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "routingInstructionsId": {
          "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
          "type": "number"
        },
        "articles": {
          "description": "The List of Articles defined for this transaction code, when using the Articles functionality.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/articleInfoType"
          }
        },
        "trxServiceType": {
          "description": "Contains service type for transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionCode": {
          "description": "Unique identifier for the Transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel context of the Transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "printTrxReceipt": {
          "description": "Print receipt flag that tells whether the transaction receipt is to be printed or not. This is based on the transaction code.",
          "type": "boolean"
        }
      }
    },
    "articleInfoType": {
      "type": "object",
      "description": "Information regarding an article.",
      "properties": {
        "description": {
          "description": "Description of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "transactionCode": {
          "description": "Transaction code to which the article belongs.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "price": {
          "description": "Default price of the article.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "postIt": {
          "description": "Post it information of the article.",
          "$ref": "#/definitions/articlePostItType"
        },
        "universalProductCode": {
          "description": "Unique Universal product code of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel code to which the article belongs.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "articleCode": {
          "description": "Unique code of the article.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "inactive": {
          "description": "Indicates whether the article is inactive or not.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        }
      }
    },
    "articlePostItType": {
      "type": "object",
      "description": "Post it information of an article.",
      "properties": {
        "availableForPostIt": {
          "description": "Indicates whether the article is available for post it.",
          "type": "boolean"
        },
        "color": {
          "description": "Color indicator which is only configurable if article is available for post it.",
          "$ref": "#/definitions/colorType"
        }
      }
    },
    "colorType": {
      "type": "string",
      "description": "Color configuration type. This color configuration provides a visual category of entities.",
      "enum": [
        "Red",
        "DarkRed",
        "Green",
        "DarkGreen",
        "LightGreen",
        "Orange",
        "White",
        "Yellow",
        "DarkYellow",
        "Purple",
        "Brown",
        "Gray",
        "Aqua",
        "Chocolate",
        "Blue",
        "LightBlue",
        "DarkBlue",
        "Cyan",
        "DarkCyan",
        "Magenta",
        "DarkMagenta",
        "Black"
      ]
    },
    "billingInstructionsType": {
      "type": "array",
      "description": "Set of Billing Instruction codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/billingInstructionType"
      }
    },
    "billingInstructionType": {
      "type": "object",
      "description": "Configured Billing Instruction which represents a set of Transaction Codes.",
      "properties": {
        "desc": {
          "description": "Billing Instruction code description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "routingInstructionsId": {
          "description": "This is the Routing Instruction Id attached with Reservation. It is only used for internal purpose. It should not be used by external vendor or consumer.",
          "type": "number"
        },
        "billingCode": {
          "description": "Unique identifier for the Billing Instruction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "description": "Hotel context of the Billing Instruction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "transportInfoType": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "type": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transportCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "carrierCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "stationCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "dateTime": {
          "type": "string",
          "format": "date-time"
        },
        "transportationReqd": {
          "type": "boolean"
        }
      }
    },
    "visaInfoType": {
      "type": "object",
      "properties": {
        "visaIssueDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaExpiryDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaNumber": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "resSharedGuestListType": {
      "type": "array",
      "description": "Collection of shared guest reservations.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resSharedGuestInfoType"
      }
    },
    "resSharedGuestInfoType": {
      "type": "object",
      "description": "Contains information regarding the share reservation.",
      "properties": {
        "profileId": {
          "$ref": "#/definitions/profileId"
        },
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        }
      }
    },
    "resGuestAdditionalInfoType": {
      "type": "object",
      "properties": {
        "portOfEntry": {
          "description": "Entry point into the country. (Croatian Requirements).",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "dateOfEntry": {
          "description": "Entry Date into the country. (Croatian Requirements).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "nextDestination": {
          "description": "Entry Date into the country. (Croatian Requirements).",
          "type": "string"
        },
        "preferredRoomType": {
          "description": "Preferred Room Type of the guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "lastStay": {
          "description": "Last Stay information of the guest.",
          "$ref": "#/definitions/guestLastStayInfoType"
        },
        "purposeOfStay": {
          "description": "Purpose of stay.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "guestClassification": {
          "description": "Guest Classification for the data export.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "guestStatus": {
          "description": "Guest Status for the data export.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "guestLastStayInfoType": {
      "type": "object",
      "description": "Contains last stay related details of the guest.",
      "properties": {
        "lastStayDate": {
          "description": "Guest's last stay date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastStayRoom": {
          "description": "Room Number where the guest stayed.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "lastStayRate": {
          "description": "The Rate amount of the guest's last stay.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalStay": {
          "description": "The total number of previous stay of the guest.",
          "type": "integer"
        }
      }
    },
    "commissionPayoutToType": {
      "type": "string",
      "enum": [
        "TravelAgent",
        "Source",
        "TravelAgentSource",
        "None"
      ]
    },
    "resCommunicationType": {
      "type": "object",
      "description": "Communication details for a reservation.",
      "properties": {
        "telephones": {
          "description": "List of Telephone Number Information",
          "type": "object",
          "properties": {
            "telephoneInfo": {
              "description": "Collection of Detailed information on telephone/fax for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/telephoneInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "emails": {
          "description": "List of email address for the customer.",
          "type": "object",
          "properties": {
            "emailInfo": {
              "description": "Collection of Detailed information on an eMail address for the customer.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/emailInfoType"
              }
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        }
      }
    },
    "awardsType": {
      "type": "array",
      "description": "List of awards.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/awardType"
      }
    },
    "awardType": {
      "type": "object",
      "description": "Detailed information of the awards.",
      "properties": {
        "awardCode": {
          "description": "Award category.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "awardType": {
          "description": "Can be P (Paper) or E (E-Certificate).",
          "$ref": "#/definitions/awardKindType"
        },
        "description": {
          "description": "Description of the award/certificate.",
          "type": "string"
        },
        "certificateNo": {
          "description": "Certificate No.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "masterCertificiateNo": {
          "description": "Master Certificate No.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "membershipNo": {
          "description": "Membership No.",
          "type": "string"
        },
        "hotelId": {
          "description": "Hotel Code for which the routing instructions are provided for a profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelCategory": {
          "description": "Indicates the lowest hotel category for which the certificate is valid.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "externalHotelCode": {
          "description": "Hotel Code of the CRS application that this certificate belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "externalConfirmationNo": {
          "description": "Confirmation Number given by a CRS application for this reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "categoryValid": {
          "description": "Indicates whether the category of certificate is valid or not for this resort.",
          "type": "boolean"
        },
        "reservationCertificateType": {
          "description": "[R]=Reward, [I]=Incentive.",
          "$ref": "#/definitions/reservationCertificateType"
        },
        "rewardCertificateType": {
          "description": "[RE]=Regular Certificate, [SA]=Stay Anytime Certificate, [PS]=Point Saver Certificate.",
          "$ref": "#/definitions/rewardCertificateType"
        },
        "status": {
          "description": "Status of the award aka available.",
          "$ref": "#/definitions/awardStatusType"
        },
        "expirationDate": {
          "description": "Expiration Date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "gift": {
          "description": "Signifies whether award is gift or not.",
          "type": "boolean"
        },
        "upgrade": {
          "description": "Signifies whether upgrade award or not.",
          "type": "boolean"
        },
        "package": {
          "description": "Signifies whether upgrade is package or not.",
          "type": "boolean"
        },
        "instantlyRedeemable": {
          "description": "Indicates if the award is an Instant Redemption award.",
          "type": "boolean"
        },
        "paidUpgrade": {
          "description": "Indicates if this certificate was ordered using the \"Paid Upgrade\" option in the E-Certs screen.",
          "type": "boolean"
        },
        "detailedCertificate": {
          "description": "Indicates if this certificate is detailed or not.",
          "type": "boolean"
        },
        "nights": {
          "description": "Award Nights.",
          "type": "integer"
        },
        "sourceType": {
          "description": "MRW : From MRW MAN:Entered manually.",
          "type": "string"
        },
        "points": {
          "description": "No. of points used to order this award.",
          "type": "number"
        },
        "fBAInfo": {
          "description": "FBA related fields.",
          "$ref": "#/definitions/fBAInfoType"
        },
        "reservationId": {
          "description": "Reservation IDs will be empty if award is not attached.",
          "$ref": "#/definitions/reservationId"
        },
        "profileId": {
          "description": "Unique profile identifier requested to be fetched.",
          "$ref": "#/definitions/profileId"
        },
        "quantity": {
          "description": "Quantity of such awards needed to be ordered.",
          "type": "integer"
        },
        "displaySequence": {
          "description": "Indicates the order in which the certificates received from MRW.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "awardKindType": {
      "type": "string",
      "description": "Indicates that this is electronic certificate.",
      "enum": [
        "Paper",
        "ECertificate"
      ]
    },
    "reservationCertificateType": {
      "type": "string",
      "description": "Certificate is incentive.",
      "enum": [
        "Reward",
        "Incentive"
      ]
    },
    "rewardCertificateType": {
      "type": "string",
      "description": "Point Saver reward.",
      "enum": [
        "Regular",
        "StayAnytime",
        "PointSaver"
      ]
    },
    "awardStatusType": {
      "type": "string",
      "description": "Indicates that certificate is in use.",
      "enum": [
        "Available",
        "NotAvailable",
        "InUse"
      ]
    },
    "fBAInfoType": {
      "type": "object",
      "description": "FBA ( Flexible Benefits Awards ) related fields.",
      "properties": {
        "status": {
          "description": "Possible FBA statuses.",
          "$ref": "#/definitions/fBAStatusType"
        },
        "monetaryValue": {
          "description": "Award's FBA monetary values.",
          "type": "number"
        },
        "amount": {
          "description": "Award's FBA amount.",
          "type": "number"
        },
        "postedAmount": {
          "description": "Award's FBA posted amount.",
          "type": "number"
        },
        "reimbursedAmount": {
          "description": "Award's FBA reimbursed amount.",
          "type": "number"
        },
        "postingDateTime": {
          "description": "Date and time of the FBA posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "postingBusinessDate": {
          "description": "Business date of the FBA posting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "settlementDateTime": {
          "description": "Date and time of the FBA settlement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "settlementBusinessDate": {
          "description": "Business date of the FBA settlement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reimbursementDateTime": {
          "description": "Date and time of the FBA reimbursement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reimbursementBusinessDate": {
          "description": "Business date of the FBA reimbursement.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "fbaBillGenDate": {
          "description": "Business date of the FBA bill generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "currencyCode": {
          "description": "The code specifying a monetary unit. Use ISO 4217, three alpha code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencySymbol": {
          "description": "The symbol for the currency, e.g, for currencyCode USD the symbol is $.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "decimalPlaces": {
          "description": "Indicates the number of decimal places for a particular currency. This is equivalent to the ISO 4217 standard \"minor unit\". Typically used when the amount provided includes the minor unit of currency without a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent $85).",
          "type": "integer"
        },
        "flexibleBenefitAward": {
          "description": "Indicates if this certificate is a Flexible Benefit Award certificate.",
          "type": "boolean"
        },
        "posted": {
          "description": "Indicates whether FBA has been posted.",
          "type": "boolean"
        },
        "settled": {
          "description": "Indicates whether FBA has been settled.",
          "type": "boolean"
        },
        "reimbursed": {
          "description": "Indicates whether FBA has been reimbursed.",
          "type": "boolean"
        },
        "resettleAllowed": {
          "description": "Marks if the certificate is eligible for resettlement",
          "type": "boolean"
        },
        "reimburseAllowed": {
          "description": "Marks if the certificate is eligible for reimbursement.",
          "type": "boolean"
        },
        "orphanCertificate": {
          "description": "Indicates whether the certificate is Orphan or not.",
          "type": "boolean"
        }
      }
    },
    "fBAStatusType": {
      "type": "string",
      "description": "Flexible benefit award has been reimbursed.",
      "enum": [
        "Ordered",
        "Attached",
        "Posted",
        "Settled",
        "Reimbursed"
      ]
    },
    "trackItItemsType": {
      "type": "array",
      "description": "",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trackItItemType"
      }
    },
    "trackItItemType": {
      "type": "object",
      "description": "Detailed information of a Track It item.",
      "properties": {
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "trackItId": {
          "$ref": "#/definitions/trackItId"
        },
        "group": {
          "$ref": "#/definitions/trackItGroup"
        },
        "ticketNumber": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "referenceNumber": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "type": {
          "$ref": "#/definitions/trackItType"
        },
        "action": {
          "$ref": "#/definitions/trackItActionType"
        },
        "location": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "quantity": {
          "type": "integer"
        },
        "followUpDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "assignedTo": {
          "$ref": "#/definitions/applicationUserType"
        },
        "reservationInfo": {
          "$ref": "#/definitions/trackItReservationInfoType"
        },
        "trackItLogList": {
          "$ref": "#/definitions/trackItLogListType"
        }
      }
    },
    "trackItId": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "trackItGroup": {
      "type": "string",
      "description": "Group to which the Track It items belong.",
      "enum": [
        "Parcel",
        "Valet",
        "Baggage",
        "Lost"
      ]
    },
    "trackItType": {
      "type": "object",
      "description": "Identifies the kind of Parcel, Baggage, or Lost items or Valet-managed vehicles or services.",
      "properties": {
        "type": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "url": {
          "$ref": "#/definitions/uRLType"
        }
      }
    },
    "trackItActionType": {
      "type": "object",
      "description": "Identifies the response expected from staff or other parties relative to a Track It ticket.",
      "properties": {
        "trackItAction": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "status": {
          "$ref": "#/definitions/actionStatusType"
        }
      }
    },
    "actionStatusType": {
      "type": "string",
      "description": "Action status of the Track It item(Open, Closed).",
      "enum": [
        "Open",
        "Closed"
      ]
    },
    "applicationUserType": {
      "type": "object",
      "properties": {
        "hotel": {
          "description": "Hotel where user belongs.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "appUser": {
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        },
        "lDAPUser": {
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        },
        "actAs": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "actAt": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "userDefaultLanguage": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "appUserId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "cashierId": {
          "type": "integer"
        },
        "cashierTitle": {
          "description": "Cashier title.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "department": {
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        },
        "departmentLocation": {
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        },
        "salesRepCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "expiryDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "disabledUntil": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "passwordChangeDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "userInfo": {
          "$ref": "#/definitions/employeeInfoType"
        },
        "userSessionInfo": {
          "description": "This is only used during log-in.",
          "$ref": "#/definitions/userSessionInfoType"
        },
        "attendantInfo": {
          "$ref": "#/definitions/attendantType"
        }
      }
    },
    "employeeInfoType": {
      "type": "object",
      "properties": {
        "personName": {
          "$ref": "#/definitions/personNameType"
        },
        "profileId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "addressInfo": {
          "$ref": "#/definitions/addressInfoType"
        },
        "emailInfo": {
          "$ref": "#/definitions/emailInfoType"
        },
        "phoneInfo": {
          "$ref": "#/definitions/telephoneInfoType"
        },
        "department": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "gender": {
          "description": "Identifies the profile gender code selected from Gender types List of values. Gender types LOV provides the values configured at gender configuration.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "genderCode": {
          "description": "Identifies the profile gender code based from configured gender list of values.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "birthDate": {
          "description": "Indicates the date of birth as indicated in the document, in ISO 8601 prescribed format.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "birthDateMasked": {
          "description": "Indicates the date of birth as masked.",
          "type": "string"
        }
      }
    },
    "userSessionInfoType": {
      "type": "object",
      "properties": {
        "businessDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "systemDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "terminal": {
          "type": "string"
        },
        "runningApp": {
          "type": "string"
        },
        "shareProfiles": {
          "type": "boolean"
        },
        "hotel": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "cro": {
          "$ref": "#/definitions/codeDescriptionType"
        },
        "chain": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cROCountryCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sessionDefaults": {
          "$ref": "#/definitions/userSessionDefaultsType"
        },
        "parameters": {
          "$ref": "#/definitions/parametersType"
        }
      }
    },
    "userSessionDefaultsType": {
      "type": "object",
      "properties": {
        "dbDateFormat": {
          "type": "string"
        },
        "oracleDateFormat": {
          "type": "string"
        },
        "oracleTimeFormat": {
          "type": "string"
        },
        "javaDateFormat": {
          "type": "string"
        },
        "javaTimeFormat": {
          "type": "string"
        },
        "currencyCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currencyFormat": {
          "type": "string"
        },
        "defaultLanguage": {
          "type": "string"
        },
        "baseLanguage": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "parametersType": {
      "type": "array",
      "description": "Collection of generic Name-Value-Pair parameters.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/parameterType"
      }
    },
    "parameterType": {
      "type": "object",
      "description": "Name value pair type that will hold generic parameter information. Only use this type when the parameters being passed are too dynamic to be defined.",
      "properties": {
        "parameterName": {
          "description": "Name of the parameter.",
          "type": "string"
        },
        "parameterValue": {
          "description": "Value of the parameter.",
          "type": "string"
        }
      }
    },
    "attendantType": {
      "type": "object",
      "properties": {
        "attendantId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "trackItReservationInfoType": {
      "type": "object",
      "description": "Reservation info associated with a Track It item.",
      "properties": {
        "reservationIdList": {
          "$ref": "#/definitions/reservationIdList"
        },
        "blockDates": {
          "$ref": "#/definitions/timeSpanType"
        },
        "guestInfo": {
          "$ref": "#/definitions/resGuestInfoType"
        },
        "roomType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomStatus": {
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "guarantee": {
          "$ref": "#/definitions/resGuaranteeType"
        },
        "reservationStatus": {
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "computedReservationStatus": {
          "$ref": "#/definitions/pMS_ResStatusType"
        }
      }
    },
    "resGuestInfoType": {
      "type": "object",
      "description": "Specifies Company or Travel Agent profile using IATA or Corp. No.",
      "properties": {
        "membership": {
          "description": "The Membership object identifying the frequent customer reward program.",
          "$ref": "#/definitions/membershipInfoType"
        },
        "namePrefix": {
          "description": "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)",
          "$ref": "#/definitions/namePrefixType"
        },
        "givenName": {
          "description": "Given name, first name or names",
          "$ref": "#/definitions/givenNameType"
        },
        "alternateGivenName": {
          "description": "Alternate given name, first name or names",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "middleName": {
          "description": "The middle name of the person name",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "surnamePrefix": {
          "description": "e.g \"van der\", \"von\", \"de\"",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "surname": {
          "description": "Family name, last name.",
          "$ref": "#/definitions/surnameType"
        },
        "alternateSurname": {
          "description": "Alternate family name, last name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameSuffix": {
          "description": "Hold various name suffixes and letters (e.g. Jr., Sr., III, Ret., Esq.).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "nameTitle": {
          "description": "Degree or honors (e.g., Ph.D., M.D.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "fullName": {
          "description": "Full display name",
          "type": "string"
        },
        "alternateFullName": {
          "description": "Altername full display name",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Phone number",
          "$ref": "#/definitions/phoneNumberType"
        },
        "email": {
          "description": "Email address",
          "$ref": "#/definitions/basicEmailType"
        },
        "birthDate": {
          "description": "Date of birth",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "nationality": {
          "description": "Affiliation or ethnicity to a particular country.",
          "$ref": "#/definitions/countryNameType"
        },
        "vip": {
          "description": "The supplier's ranking of the customer (e.g., VIP, numerical ranking).",
          "$ref": "#/definitions/vIPType"
        },
        "address": {
          "description": "Address information that is attached to the reservation guest",
          "$ref": "#/definitions/addressSearchType"
        },
        "anonymization": {
          "description": "Provides information about the guest's anonymization status",
          "$ref": "#/definitions/anonymizationType"
        },
        "accompanyGuests": {
          "description": "List of guest names that are accompanying the reservation guest",
          "$ref": "#/definitions/resAccompanyGuestListType"
        },
        "externalInfo": {
          "description": "External information about the guest associated with the reservation.",
          "$ref": "#/definitions/resGuestExternalInfoType"
        },
        "guestLastStayInfo": {
          "description": "Contains information regarding the last stay of this guest.",
          "$ref": "#/definitions/guestLastStayInfoType"
        },
        "guestRestrictedCode": {
          "description": "Guest profile restricted reason code",
          "type": "string"
        },
        "guestRestrictedReasonDesc": {
          "description": "Guest profile restricted reason description",
          "type": "string"
        },
        "guestRestricted": {
          "description": "True indicates there are restrictions associated with the current profile.",
          "type": "boolean"
        },
        "registrationCardNo": {
          "description": "Unique identifier of the police registration card number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "nameType": {
          "$ref": "#/definitions/nameTypeType"
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "membershipInfoType": {
      "type": "object",
      "description": "The Membership object identifies the frequent customer reward program.",
      "properties": {
        "membershipId": {
          "description": "Membership ID (Unique ID from the memberships table).",
          "type": "number"
        },
        "programCode": {
          "description": "The code or name of the membership program ('Hertz', 'AAdvantage', etc.).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bonusCode": {
          "description": "The code or name of the bonus program. BonusCode can be used to indicate the level of membership (Gold Club, Platinum member, etc.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "membershipTypeDesc": {
          "description": "The description of the ProgramCode.(Delta Previlige for code DP)",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "membershipLevelDesc": {
          "description": "The description of the Bonus Code.(Platinum for code P)",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "accountId": {
          "description": "The account identification number for this particular member in this particular program.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "membershipLevel": {
          "description": "The code or name of the membership level and indicates the level of membership (Gold Club, Platinum member, etc.). This is same as the BonusCode.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        }
      }
    },
    "namePrefixType": {
      "type": "string",
      "description": "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)",
      "minLength": 0,
      "maxLength": 40
    },
    "givenNameType": {
      "type": "string",
      "description": "Given name, first name or names",
      "minLength": 0,
      "maxLength": 40
    },
    "surnameType": {
      "type": "string",
      "description": "Family name, last name.",
      "minLength": 0,
      "maxLength": 80
    },
    "phoneNumberType": {
      "type": "string",
      "description": "Phone number",
      "minLength": 0,
      "maxLength": 40
    },
    "basicEmailType": {
      "type": "string",
      "description": "Email address",
      "minLength": 0,
      "maxLength": 2000
    },
    "vIPType": {
      "type": "object",
      "description": "The supplier's ranking of the customer.",
      "properties": {
        "vipCode": {
          "description": "VIP Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "vipDescription": {
          "description": "VIP Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        }
      }
    },
    "addressSearchType": {
      "type": "object",
      "description": "Address Details such as city, state, country, postal code etc.",
      "properties": {
        "cityName": {
          "description": "City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "postalCode": {
          "description": "Post Office Code number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 15
        },
        "state": {
          "description": "State or Province name (e.g., Texas).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "country": {
          "description": "Country name (e.g., Ireland).",
          "$ref": "#/definitions/countryNameType"
        },
        "streetAddress": {
          "description": "First Line of Street Address. For profile search it matches the first Address line.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "excludeNoCity": {
          "description": "When true indicates that only profiles with city will be fetched.",
          "type": "boolean"
        }
      }
    },
    "anonymizationType": {
      "type": "object",
      "description": "Provides information about guest's anonymization status.",
      "properties": {
        "anonymizationStatus": {
          "description": "Status of anonymization such as Requested or Anonymized.",
          "$ref": "#/definitions/anonymizationStatusType"
        },
        "anonymizationDate": {
          "description": "Date and Time when the guest was anonymized.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "anonymizationStatusType": {
      "type": "string",
      "description": "Guest has been anonymized.",
      "enum": [
        "Requested",
        "Anonymized"
      ]
    },
    "resAccompanyGuestListType": {
      "type": "array",
      "description": "Collection of accompany guests",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resAccompanyGuestInfoType"
      }
    },
    "resAccompanyGuestInfoType": {
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Given name, first name or names",
          "type": "string"
        },
        "lastName": {
          "description": "Family name, last name.",
          "type": "string"
        },
        "fullName": {
          "description": "String representation of the full name",
          "type": "string"
        },
        "registrationCardNo": {
          "description": "Unique identifier of the police registration card number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "profileIdList": {
          "description": "Unique identifiers for the Profile for both internal and external systems. In case of Travel Agent the IATA code and in case of Company can be any form of identifier as id.",
          "$ref": "#/definitions/profileIdList"
        }
      }
    },
    "resGuestExternalInfoType": {
      "type": "object",
      "description": "Specifies Company or Travel Agent profile using IATA or Corp. No.",
      "properties": {
        "givenName": {
          "description": "Given name, first name or names",
          "$ref": "#/definitions/givenNameType"
        },
        "surname": {
          "description": "Family name, last name.",
          "$ref": "#/definitions/surnameType"
        }
      }
    },
    "nameTypeType": {
      "type": "string",
      "enum": [
        "Guest",
        "Company",
        "Agent",
        "Contact",
        "Source",
        "Group",
        "Employee",
        "Hotel",
        "Purge"
      ]
    },
    "housekeepingRoomStatusType": {
      "type": "string",
      "description": "Simple type for functionSpaceDetails status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected, OutOfOrder, OutOfService.",
      "enum": [
        "Clean",
        "Dirty",
        "Pickup",
        "Inspected",
        "OutOfOrder",
        "OutOfService"
      ]
    },
    "trackItLogListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/trackItLogType"
      }
    },
    "trackItLogType": {
      "type": "object",
      "description": "Individual activity log related to the Track It ticket.",
      "properties": {
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "trackItLogId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "trackItId": {
          "$ref": "#/definitions/trackItId"
        },
        "type": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "businessDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "logUserId": {
          "type": "integer"
        },
        "logUserName": {
          "type": "string"
        },
        "logDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "hotelReservationsType": {
      "type": "object",
      "description": "A collection of Reservation objects and Unique IDs of Reservation.",
      "properties": {
        "reservation": {
          "description": "A collection of Reservations.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/hotelReservationType"
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "reservationLocatorsType": {
      "type": "array",
      "description": "Holds the Locator Information.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationLocatorType"
      }
    },
    "reservationLocatorType": {
      "type": "object",
      "description": "Holds the information for a Reservation Guest Locator",
      "properties": {
        "dateSpan": {
          "description": "Begin and End date range of the Guest Locator.",
          "$ref": "#/definitions/dateRangeType"
        },
        "blockDates": {
          "description": "Time span for the Guest Locator.",
          "$ref": "#/definitions/dateTimeSpanType"
        },
        "locatorText": {
          "description": "The Locator Text for the guest.",
          "type": "string"
        },
        "locatorOn": {
          "description": "Date and time of the Guest Locator.",
          "type": "string",
          "format": "date-time"
        },
        "locatorBy": {
          "description": "User that entered this Guest Locator.",
          "type": "string"
        },
        "locatorId": {
          "description": "Unique Id of the Guest Locator ( Locator Id )",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "serviceRequests": {
      "type": "array",
      "description": "Service request.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/serviceRequest"
      }
    },
    "serviceRequest": {
      "type": "object",
      "description": "Service request.",
      "properties": {
        "serviceRequestId": {
          "description": "Unique identifier of the service request.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "hotelId": {
          "description": "Hotel Code of the service request.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Service request code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "status": {
          "description": "The status of the service request.",
          "$ref": "#/definitions/serviceRequestStatusType"
        },
        "priority": {
          "description": "The priority level of the service request.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "department": {
          "description": "The department that is associated with the service request code.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "reservationIdList": {
          "description": "Unique identifier of the reservation.",
          "$ref": "#/definitions/reservationIdList"
        },
        "profileId": {
          "description": "Unique identifier of the guest.",
          "$ref": "#/definitions/profileId"
        },
        "guestName": {
          "description": "The guest name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "functionSpaceDetails": {
          "description": "The functionSpaceDetails number in which the service request was created.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "openDate": {
          "description": "The date-time in which the service request was opened.",
          "type": "string",
          "format": "date-time"
        },
        "guaranteedBy": {
          "description": "The user who guaranteed the completion of the service request.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "comment": {
          "description": "Description of the service request.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "action": {
          "description": "Description of the action taken to complete the request.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "guestContactMethod": {
          "description": "Communication method picked from guest profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "completionDate": {
          "description": "The date-time in which the service request was completed.",
          "type": "string",
          "format": "date-time"
        },
        "closedDate": {
          "description": "The date-time in which the service request was closed.",
          "type": "string",
          "format": "date-time"
        },
        "closedBy": {
          "description": "The user who closed the service request.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "closeDescription": {
          "description": "The follow up description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "serviceRequestStatusType": {
      "type": "string",
      "enum": [
        "Open",
        "PendingFollowUp",
        "Closed",
        "DoNotDisturb",
        "MakeUpRoom"
      ]
    },
    "prepaidCardsType": {
      "type": "array",
      "description": "Holds fixed charge detail.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/prepaidCardType"
      }
    },
    "prepaidCardType": {
      "type": "object",
      "description": "Holds fixed charge information.",
      "properties": {
        "hotelId": {
          "description": "Hotel context for the Reservations.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationId": {
          "description": "The unique ID of the reservation to which this record applies.",
          "$ref": "#/definitions/reservationId"
        },
        "name": {
          "description": "Family name, last name or Company Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "firstName": {
          "description": "Given name, first name or names.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "profileId": {
          "description": "Card / Account holder name ID",
          "$ref": "#/definitions/profileId"
        },
        "cardNo": {
          "description": "Prepaid card / account number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "cardNumberMasked": {
          "description": "Masked Prepaid card / account number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "amount": {
          "description": "Prepaid Card Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "pinCode": {
          "description": "Prepaid card pin code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 10
        },
        "interfaceId": {
          "description": "The unique ID for the Interface.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "cardDetails": {
          "description": "Prepaid Card details from vendor.",
          "$ref": "#/definitions/prepaidCardDetailsType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "giftCard": {
          "description": "Indicates a gift card type.",
          "type": "boolean"
        }
      }
    },
    "prepaidCardDetailsType": {
      "type": "object",
      "description": "Prepaid Card Details.",
      "properties": {
        "initialLoadDate": {
          "description": "Holds fixed charge detail.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "activateDate": {
          "description": "Holds fixed charge detail.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "initialCreditTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "creditTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "debitTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "reservedTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balanceTotal": {
          "description": "Holds fixed charge detail.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "validUntilDate": {
          "description": "Holds fixed charge detail.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expiredDate": {
          "description": "Holds fixed charge detail.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactions": {
          "description": "Holds fixed charge detail.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/prepaidCardTransactionType"
          }
        }
      }
    },
    "prepaidCardTransactionType": {
      "type": "object",
      "description": "Prepaid Card transaction.",
      "properties": {
        "transactionType": {
          "description": "Transaction type enumeration.",
          "$ref": "#/definitions/prepaidCardTrxTypeType"
        },
        "transactionDate": {
          "description": "Transaction number of the Prepaid card transaction.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "transactionNo": {
          "description": "Transaction number of the Prepaid card transaction.",
          "type": "number"
        },
        "amount": {
          "description": "Prepaid Card Amount.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "prepaidCardTrxTypeType": {
      "type": "string",
      "description": "Reload transaction.",
      "enum": [
        "Activate",
        "Cancel",
        "Cashout",
        "Inquiry",
        "Issue",
        "Redeem",
        "Reload"
      ]
    },
    "reservationPackageType": {
      "type": "object",
      "description": "A ReservationPackageType class.",
      "properties": {
        "packageHeaderType": {
          "description": "Package information from configuration.",
          "$ref": "#/definitions/packageCodeHeaderType"
        },
        "scheduleList": {
          "description": "A HotelPackageSchedule type.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/reservationPackageScheduleType"
          }
        },
        "newTimeSpan": {
          "description": "The changed dates(Start and End dates) for this product.",
          "$ref": "#/definitions/timeSpanType"
        },
        "consumptionDetails": {
          "description": "Package consumption details. Includes information for quantity , allowance etc.",
          "$ref": "#/definitions/packageConsumptionType"
        },
        "packageCode": {
          "description": "Package code. This is the unique code used for the package and is a required elementSpace.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "internalID": {
          "description": "Reservation Package Opera Internal Unique Id. This is the unique Id used for this reservation package.",
          "type": "number"
        },
        "ratePlanCode": {
          "description": "The rate code which contains this package. If the package is not part of a rate code, this will be empty. Required elementSpace and part of the key to fetch the correct package record on the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "startDate": {
          "description": "Required value when changing a reservation package. If the original eventStartDate date was null, then null is required.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "description": "Required value when changing a reservation package. If the original eventEndDate date was null, then null is required.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "packageGroup": {
          "description": "Package group code. If this package is part of a package group, the group code is indicated here. This is a required elementSpace and is part of the key to fetch the correct package record .",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "source": {
          "description": "Indicates if the source of the product is Rate header, Rate Detail or Reservation. For new development this field is to be used for passing the product scource",
          "$ref": "#/definitions/productSourceType"
        },
        "awardCode": {
          "description": "This is the Award code used to redeem the package if the package is a redemption package.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "points": {
          "description": "Indicates the points used to redeem the redemption package.",
          "type": "integer"
        }
      }
    },
    "packageCodeHeaderType": {
      "type": "object",
      "properties": {
        "primaryDetails": {
          "description": "Package code header primary details.",
          "$ref": "#/definitions/configPackagePrimaryDetailsType"
        },
        "transactionDetails": {
          "description": "Package code header transaction information.",
          "$ref": "#/definitions/configPackageTransactionType"
        },
        "postingAttributes": {
          "description": "Package code posting attributes.",
          "$ref": "#/definitions/configPostingAttributesType"
        },
        "usageDetails": {
          "description": "Package code usage information.",
          "$ref": "#/definitions/configPackageUsageDetailType"
        }
      }
    },
    "configPackagePrimaryDetailsType": {
      "type": "object",
      "description": "A Config Package Info type.",
      "properties": {
        "description": {
          "description": "The description of the package.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "shortDescription": {
          "description": "The short description of the package.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "forecastGroup": {
          "description": "The Forecast group package belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "arrangementCode": {
          "description": "Arrangement Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "beginSellDate": {
          "description": "Indicates the begin sell date of the package.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endSellDate": {
          "description": "Indicates the eventEndDate sell date of the package.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "configPackageTransactionType": {
      "type": "object",
      "description": "A HotelPackageTransaction type.",
      "properties": {
        "allowance": {
          "description": "Package is marked as an allowance, in case charge is expected back to the guest account from external interface eg. POS. which need to be offset against a consumption allowance.",
          "type": "boolean"
        },
        "currency": {
          "description": "The currency code for this package.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "postingType": {
          "description": "The posting frequency for this package, e.g., daily, arrival, departure, etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "calculationRule": {
          "description": "The price calculation rule for this package.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "packagePostingRules": {
          "description": "The package posting rule details.",
          "$ref": "#/definitions/packagePostingRulesType"
        }
      }
    },
    "packagePostingRulesType": {
      "type": "object",
      "properties": {
        "transactionCode": {
          "description": "The Transaction code used to post the package price.",
          "$ref": "#/definitions/packageTransactionCodeType"
        },
        "overageCode": {
          "description": "The overage code to record over consumed allowance.",
          "$ref": "#/definitions/packageTransactionCodeType"
        },
        "profitCode": {
          "description": "The transaction code to record package profit, if any, from un-consumed allowance.",
          "$ref": "#/definitions/packageTransactionCodeType"
        },
        "lossCode": {
          "description": "The transaction code to record package Loss, if any, from un-consumed allowance.",
          "$ref": "#/definitions/packageTransactionCodeType"
        },
        "alternateCodesList": {
          "description": "The alternate transaction code that can be consumed by the guest in place of the transaction code.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/packageTransactionCodeType"
          }
        }
      }
    },
    "packageTransactionCodeType": {
      "type": "object",
      "properties": {
        "description": {
          "description": "The description of the code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "code": {
          "description": "Posting / transaction code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "type": {
          "description": "Code is inclusive or exclusive of other chanrges such as taxes.",
          "$ref": "#/definitions/amountDeterminationType"
        }
      }
    },
    "configPostingAttributesType": {
      "type": "object",
      "description": "A config Package posting attributes type.",
      "properties": {
        "addToRate": {
          "description": "The package price is added to the functionSpaceDetails rate.",
          "type": "boolean"
        },
        "printSeparateLine": {
          "description": "The package price is printed on separate line of the folio.",
          "type": "boolean"
        },
        "sellSeparate": {
          "description": "Can the package be sold separate from rate plan code?",
          "type": "boolean"
        },
        "postNextDay": {
          "description": "package charges will be posted next business day.",
          "type": "boolean"
        },
        "forecastNextDay": {
          "description": "Package will be forecasted for consumption the next business day.",
          "type": "boolean"
        },
        "deliveryTimeRequired": {
          "description": "Indicates whether a delivery time is required for the package.",
          "type": "boolean"
        },
        "webBookable": {
          "description": "Can package be sold via Web channel.",
          "type": "boolean"
        },
        "formula": {
          "description": "The custom formula used for this package, if any.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "formulaFunctionName": {
          "description": "The custom formula function name used for this package, if any.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "formulaFunctionArguments": {
          "description": "The function argument name-value combination accepted by the custom formula used for this package.",
          "$ref": "#/definitions/functionArgumentsType"
        },
        "startTime": {
          "description": "Start time the package is valid.",
          "type": "string"
        },
        "endTime": {
          "description": "End time the package is valid.",
          "type": "string"
        },
        "catering": {
          "description": "Is package used for catering?",
          "type": "boolean"
        },
        "postingRhythm": {
          "description": "The posting rhythm for this package.",
          "$ref": "#/definitions/packagePostingRhythmType"
        },
        "priceCalculationRule": {
          "description": "The price calculation rule for this package.",
          "$ref": "#/definitions/packageCalculationRuleType"
        },
        "ticket": {
          "description": "Indicates whether a package is configured as a ticket or not.",
          "type": "boolean"
        },
        "inventoryItems": {
          "description": "Package Code Inventory Items type.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/pkgInventoryItemType"
          }
        },
        "calculatedPrice": {
          "description": "Calculated Package Price based from Number of Adults, Children and Calculation Rule.",
          "type": "number"
        }
      }
    },
    "functionArgumentsType": {
      "type": "array",
      "description": "Collection of function arguments and their corresponding values.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/functionArgumentType"
      }
    },
    "functionArgumentType": {
      "type": "object",
      "description": "This type provided details of a function argument and the value it holds.",
      "properties": {
        "name": {
          "description": "Specifies the name of the function argument.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "value": {
          "description": "Specifies the value held by the function argument.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "position": {
          "description": "Specifies the position of the function argument in the argument list.",
          "type": "integer"
        },
        "dataType": {
          "description": "Specifies the datatype of the function argument.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "required": {
          "description": "Argument of the function mandatory or not.",
          "type": "boolean"
        }
      }
    },
    "packagePostingRhythmType": {
      "type": "object",
      "description": "Package Posting rhythm type.",
      "properties": {
        "everyXNightsStartingNightY": {
          "description": "Post the package every X nights Staring from Night Y.",
          "type": "object",
          "properties": {
            "startOnNightY": {
              "description": "Starting night for consumption and posting prices.",
              "type": "integer"
            },
            "postEveryXNights": {
              "description": "Occurance of nights when the package needs to be posted and consumed.",
              "type": "integer"
            }
          }
        },
        "certainNightsOfTheWeek": {
          "description": "Post the package on certain nights of the week.",
          "type": "object",
          "properties": {
            "sunday": {
              "type": "boolean"
            },
            "monday": {
              "type": "boolean"
            },
            "tuesday": {
              "type": "boolean"
            },
            "wednesday": {
              "type": "boolean"
            },
            "thursday": {
              "type": "boolean"
            },
            "friday": {
              "type": "boolean"
            },
            "saturday": {
              "type": "boolean"
            }
          }
        },
        "customStaySchedule": {
          "description": "This user defined schedule lets you enter a posting rhythm over a 14-day period, starting with the arrival date, by assigning the day (number) within a guest stay for posting this package price.",
          "type": "object",
          "properties": {
            "night1": {
              "description": "Night 1 indicator.",
              "type": "boolean"
            },
            "night2": {
              "description": "Night 2 indicator.",
              "type": "boolean"
            },
            "night3": {
              "description": "Night 3 indicator.",
              "type": "boolean"
            },
            "night4": {
              "description": "Night 4 indicator.",
              "type": "boolean"
            },
            "night5": {
              "description": "Night 5 indicator.",
              "type": "boolean"
            },
            "night6": {
              "description": "Night 6 indicator.",
              "type": "boolean"
            },
            "night7": {
              "description": "Night 7 indicator.",
              "type": "boolean"
            },
            "night8": {
              "description": "Night 8 indicator.",
              "type": "boolean"
            },
            "night9": {
              "description": "Night 9 indicator.",
              "type": "boolean"
            },
            "night10": {
              "description": "Night 10 indicator.",
              "type": "boolean"
            },
            "night11": {
              "description": "Night 11 indicator.",
              "type": "boolean"
            },
            "night12": {
              "description": "Night 12 indicator.",
              "type": "boolean"
            },
            "night13": {
              "description": "Night 13 indicator.",
              "type": "boolean"
            },
            "night14": {
              "description": "Night 14 indicator.",
              "type": "boolean"
            }
          }
        },
        "customNightSchedule": {
          "description": "The eventStartDate and eventEndDate of the posting period is determined as follows: If the package is attached to a rate code: The period starts with the date when the rate code to which the package is attached becomes effective for the stay. The period ends with the date of the last night for that rate code (or the last night of the stay if the rate code remains in effect until the departure date). If the package is attached separately to the reservation: The Begin Date specified on the reservation when the package was attached is the eventStartDate date for the period. The End Date specified on the reservation when the package was attached is the eventEndDate date for the period. If no Begin Date and/or End Date are specified when the package is attached to the reservation, the Begin Date is assumed to be the arrival date and the End Date is assumed to be the departure date of the reservation, irrespective of when the package is attached to the reservation.",
          "type": "object",
          "properties": {
            "night1": {
              "description": "Night 1 indicator.",
              "type": "boolean"
            },
            "night2": {
              "description": "Night 2 indicator.",
              "type": "boolean"
            },
            "night3": {
              "description": "Night 3 indicator.",
              "type": "boolean"
            },
            "night4": {
              "description": "Night 4 indicator.",
              "type": "boolean"
            },
            "night5": {
              "description": "Night 5 indicator.",
              "type": "boolean"
            },
            "night6": {
              "description": "Night 6 indicator.",
              "type": "boolean"
            },
            "night7": {
              "description": "Night 7 indicator.",
              "type": "boolean"
            },
            "night8": {
              "description": "Night 8 indicator.",
              "type": "boolean"
            },
            "night9": {
              "description": "Night 9 indicator.",
              "type": "boolean"
            },
            "night10": {
              "description": "Night 10 indicator.",
              "type": "boolean"
            },
            "night11": {
              "description": "Night 11 indicator.",
              "type": "boolean"
            },
            "night12": {
              "description": "Night 12 indicator.",
              "type": "boolean"
            },
            "night13": {
              "description": "Night 13 indicator.",
              "type": "boolean"
            },
            "night14": {
              "description": "Night 14 indicator.",
              "type": "boolean"
            }
          }
        },
        "type": {
          "description": "Posting Rhythm for the package.",
          "$ref": "#/definitions/postingRhythmType"
        }
      }
    },
    "postingRhythmType": {
      "type": "string",
      "description": "Simple type for posting Rhythm types.",
      "enum": [
        "EveryNight",
        "ArrivalNight",
        "EveryXNightsStartingNightY",
        "CertainNightsOfTheWeek",
        "LastNight",
        "EveryNightExceptArrivalNight",
        "EveryNightExceptLast",
        "EveryNightExceptFirstAndLast",
        "CustomStaySchedule",
        "CustomNightSchedule",
        "FloatingAllowancePerStay",
        "TicketPosting"
      ]
    },
    "packageCalculationRuleType": {
      "type": "string",
      "description": "Simple type for package caluculation rules.",
      "enum": [
        "FlatRate",
        "PerPerson",
        "PerAdult",
        "PerChild",
        "PerRoom"
      ]
    },
    "pkgInventoryItemType": {
      "type": "object",
      "properties": {
        "articleNumber": {
          "description": "Article Number of the inventory item.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the inventory item.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "quantity": {
          "description": "Quantity of the inventory item allocated to the package.",
          "type": "integer"
        },
        "itemId": {
          "description": "Identifier for the inventory item.",
          "type": "integer"
        }
      }
    },
    "configPackageUsageDetailType": {
      "type": "object",
      "description": "A Config Package Usage Detail type.",
      "properties": {
        "source": {
          "description": "Indicates if the source of the product is Rate header, Rate Detail or Reservation.",
          "$ref": "#/definitions/productSourceType"
        },
        "usedInReservations": {
          "description": "Indicates if the package is used in, reserved or prospect reservations.",
          "type": "boolean"
        },
        "usedInRates": {
          "description": "Indicates if the package is used in any rate code.",
          "type": "boolean"
        },
        "usedInHouseReservations": {
          "description": "Indicates if any checked in reservations are using this product.",
          "type": "boolean"
        }
      }
    },
    "productSourceType": {
      "type": "string",
      "description": "Sources of Products",
      "enum": [
        "Reservation",
        "RateHeader",
        "RateDetail"
      ]
    },
    "reservationPackageScheduleType": {
      "type": "object",
      "description": "A HotelPackageSchedule type.",
      "properties": {
        "consumptionDate": {
          "description": "The date the package was used or can be used.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "unitPrice": {
          "description": "The price per unit of the package.",
          "type": "number"
        },
        "totalQuantity": {
          "description": "The total quantity of the package for this date, calculated based on the calculation rule as defined in the PackageHeaderType",
          "type": "integer"
        },
        "computedResvPrice": {
          "description": "Computed Reservation Price of the package. Calculation Will Be Performed Based On Other Parameters.",
          "type": "number"
        },
        "unitAllowance": {
          "description": "The allowance per unit of the package.",
          "type": "number"
        },
        "reservationDate": {
          "description": "The date of the Reservation when this package is applicable. This can be different from the date the package will be consumed. Example are next day packages. Reservation date is when the package is applied to the guest and Consumption date is when the guest can consume the package.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "originalUnitPrice": {
          "description": "The original price per unit of the package if it has been changed.",
          "type": "number"
        },
        "originalUnitAllowance": {
          "description": "The original allowance per unit of the package if it has been changed.",
          "type": "number"
        }
      }
    },
    "packageConsumptionType": {
      "type": "object",
      "description": "Package Consumption Information. Includes information on quantity of the package used, allowance consumption etc.",
      "properties": {
        "defaultQuantity": {
          "description": "The default quantity attached in the package.",
          "type": "integer"
        },
        "excludedQuantity": {
          "description": "The quantity which has been excluded in the package.",
          "type": "integer"
        },
        "totalQuantity": {
          "description": "The total quantity of the package, calculated based on the calculation rule as defined in the PackageHeaderType.",
          "type": "integer"
        },
        "allowanceConsumed": {
          "description": "Indicates if Allowance(for POS packages) has been consumed/posted for today.",
          "type": "boolean"
        }
      }
    },
    "resInventoryItemsType": {
      "type": "object",
      "description": "Defines a collection of inventory items attached to a reservation.",
      "properties": {
        "item": {
          "description": "Inventory item attached to a reservation.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/resInventoryItemType"
          }
        },
        "itemClassCode": {
          "description": "The Item Class ID which the item belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "resInventoryItemType": {
      "type": "object",
      "description": "An identifier used to uniquely reference an object in a system (e.g. an airline reservation reference, customer profile reference, booking confirmation number, or a reference to a previous availability quote).",
      "properties": {
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "item": {
          "description": "Specifies Items and its attributes. When used for data manipulation for Items setupCode on reservation, etc only code is considered. Other Attributes are for used to provide information during fetch operation.",
          "$ref": "#/definitions/itemInfoType"
        },
        "quantity": {
          "description": "Number of items booked.",
          "type": "integer"
        },
        "blockDates": {
          "description": "Begin and eventEndDate date and time of the items applicability.",
          "$ref": "#/definitions/dateRangeType"
        },
        "source": {
          "description": "If exists specifies whether the item is setupCode due to a Rate Plan, Package or a Block.",
          "$ref": "#/definitions/resInventoryItemSourceType"
        }
      }
    },
    "resInventoryItemSourceType": {
      "type": "object",
      "description": "Defines whether the item is setupCode due to a Rate Plan, Package or a Block.",
      "properties": {
        "ratePlanCode": {
          "description": "Rate Plan Code, If populated specifies that the item is setupCode due to a Rate Plan.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "packageCode": {
          "description": "Package Code, If populated specifies that the item is setupCode due to a Package.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "blockId": {
          "description": "Block Unique ID, If populated specifies that the item is setupCode due to a Block.",
          "$ref": "#/definitions/blockId"
        },
        "welcomeOffer": {
          "description": "If true, it implies that the item has been attached to the reservation as part of a Welcome Offer",
          "type": "boolean"
        },
        "packageInternalID": {
          "description": "Source Reservation Package Opera Internal Unique Id. This is the unique Id used for the reservation package associated with this item.",
          "type": "number"
        }
      }
    },
    "membershipType": {
      "type": "object",
      "description": "Detailed information of the memberships.",
      "properties": {
        "comment": {
          "description": "Additional comments regarding to the membership.",
          "$ref": "#/definitions/paragraphType"
        },
        "newMembershipNumber": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "nameOnCard": {
          "description": "Name to be displayed on the membership card.",
          "type": "string"
        },
        "programDescription": {
          "description": "Description of the membership program.",
          "type": "string"
        },
        "membershipLevel": {
          "description": "Indicates the membership level.",
          "type": "string"
        },
        "membershipLevelDescription": {
          "description": "Indicates the membership level description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "membershipClass": {
          "description": "Indicates the membership class.",
          "type": "string"
        },
        "earningPreference": {
          "description": "Earning preference to the membership.",
          "$ref": "#/definitions/membershipEarningPreferenceType"
        },
        "inactive": {
          "description": "Indicates whether membership is active or inactive.",
          "type": "boolean"
        },
        "benefits": {
          "description": "benefits for the membership.",
          "$ref": "#/definitions/benefitsType"
        },
        "tierAdministration": {
          "description": "Defines the degree of participation for this membership in the tier management portion of the program.",
          "$ref": "#/definitions/tierAdministrationType"
        },
        "downgrade": {
          "description": "Defines how downgrading will be handled for this membership.",
          "$ref": "#/definitions/downgradeType"
        },
        "reIssueNewCard": {
          "description": "The status of issuing new membership card to the member.",
          "$ref": "#/definitions/cardReIssueType"
        },
        "excludeFromBatch": {
          "description": "True if you want to exclude the member from the Membership Fulfillment extract,the member's actions will not be included in the fulfillment extract until this value set to false.",
          "type": "boolean"
        },
        "upgradeDescription": {
          "description": "Indicates Upgrade information which includes member's next tier level, requirements for the next upgrade.",
          "type": "string",
          "minLength": 0,
          "maxLength": 32000
        },
        "downgradeDescription": {
          "description": "Indicates information regarding the member's possible downgrades.",
          "type": "string",
          "minLength": 0,
          "maxLength": 32000
        },
        "rating": {
          "description": "Value Rating Type Description for this membership.",
          "type": "string"
        },
        "membershipEnrollmentCode": {
          "description": "Indicates how the guest enrolled in the program.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "memberStatus": {
          "description": "Indicates where the guest is in the membership enrollment process.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currentPoints": {
          "description": "Profile MemberShip Points.",
          "type": "number"
        },
        "pointsLabel": {
          "description": "Label used to refer to points for this membership type",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "enrollmentSource": {
          "description": "Source from where the enrollment is done.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "enrollmentResort": {
          "description": "Resort/CRO where enrollment is done.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "preferredCard": {
          "description": "Preferred Card.",
          "type": "boolean"
        },
        "membershipId": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "membershipType": {
          "description": "Type of membership.",
          "type": "string"
        },
        "primaryMembershipYn": {
          "description": "Indicator if Membership is a Primary Membership.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "primaryMembership": {
          "description": "Boolean indicator set to True implies membership is a Primary Membership.",
          "type": "boolean"
        },
        "membershipIdNo": {
          "description": "Membership ID Number.",
          "type": "integer"
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        },
        "centralSetup": {
          "description": "Indicates how the award points for this membership type will be managed.",
          "type": "boolean"
        },
        "signupDate": {
          "description": "Indicates when the member signed up for the loyalty program.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "effectiveDate": {
          "description": "Indicates the starting date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDate": {
          "description": "Indicates the ending date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDateExclusiveIndicator": {
          "description": "When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15 the last date of the period is Oct 14).",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "paragraphType": {
      "type": "object",
      "description": "An indication of a new paragraph for a sub-section of a formatted text message.",
      "properties": {
        "text": {
          "description": "Formatted text content.",
          "$ref": "#/definitions/formattedTextTextType"
        },
        "image": {
          "description": "An image for this paragraph.",
          "type": "string"
        },
        "url": {
          "description": "A URL for this paragraph.",
          "type": "string"
        }
      }
    },
    "membershipEarningPreferenceType": {
      "type": "string",
      "description": "The earning preference of a membership, it depends on the type of property. eg. when the property is a airline it should be Miles, other than Points.",
      "enum": [
        "Points",
        "Miles"
      ]
    },
    "benefitsType": {
      "type": "array",
      "description": "Basic information about membership benefit.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/benefitType"
      }
    },
    "benefitType": {
      "type": "object",
      "description": "Basic information about membership benefit.",
      "properties": {
        "code": {
          "description": "Benefit code associated with a membership.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "message": {
          "description": "Processing message for membership benefit.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "inactive": {
          "description": "Indicates whether membership benefit is active or inactive.",
          "type": "boolean"
        }
      }
    },
    "tierAdministrationType": {
      "type": "string",
      "description": "Do not upgrade membership. The membership may be downgraded.",
      "enum": [
        "Disabled",
        "NoUpgrade"
      ]
    },
    "downgradeType": {
      "type": "string",
      "description": "Do not downgrade membership when the next downgrade process runs. When the downgrade process runs, the membership will be automatically set to Grace.",
      "enum": [
        "Grace",
        "Never",
        "Period"
      ]
    },
    "cardReIssueType": {
      "type": "string",
      "description": "Request to re issue a new card.",
      "enum": [
        "Pending",
        "NotApplicable",
        "Requested"
      ]
    },
    "preferenceTypeType": {
      "type": "object",
      "description": "Preference details for the profile.",
      "properties": {
        "preference": {
          "description": "Collection of Preferences for the profile.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/preferenceType"
          }
        },
        "preferenceType": {
          "description": "Preference group code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "preferenceTypeDescription": {
          "description": "Preference group description.",
          "type": "string"
        },
        "sequence": {
          "description": "Preference Sequence.",
          "type": "string"
        },
        "maxQuantity": {
          "description": "Maximum quantity of preferences allowed per preference group.",
          "type": "integer"
        },
        "availableQuantity": {
          "description": "Available quantity of preferences (maximum quantity - Existing preferences)per preference group.",
          "type": "integer"
        },
        "maxResortUsedQuantity": {
          "description": "Maximum quantity of preferences used by any resort per preference group.",
          "type": "integer"
        },
        "reservationPreference": {
          "description": "Whether this preference is reservation preference or not.",
          "type": "boolean"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "preferenceType": {
      "type": "object",
      "description": "Guest Preference details for the profile.",
      "properties": {
        "preferenceValue": {
          "description": "Preference value for display purposes.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "description": {
          "description": "Preference Description for display purposes.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "global": {
          "description": "Whether this preference is property specific or not.",
          "type": "boolean"
        },
        "source": {
          "description": "Source of the preference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "hotels": {
          "description": "If specified preference belongs to the Hotels listed, otherwise it is a global preference.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "preferenceId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "excludedPreferencesCount": {
          "description": "Specifies the count of preferences excluded for the attached reservation preference.",
          "type": "integer"
        },
        "copyToProfile": {
          "description": "Specifies whether to copy the reservation preference to the profile or not.",
          "type": "boolean"
        }
      }
    },
    "reservationMembershipType": {
      "type": "object",
      "properties": {
        "comment": {
          "description": "Additional comments regarding to the membership.",
          "$ref": "#/definitions/paragraphType"
        },
        "newMembershipNumber": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "nameOnCard": {
          "description": "Name to be displayed on the membership card.",
          "type": "string"
        },
        "programDescription": {
          "description": "Description of the membership program.",
          "type": "string"
        },
        "membershipLevel": {
          "description": "Indicates the membership level.",
          "type": "string"
        },
        "membershipLevelDescription": {
          "description": "Indicates the membership level description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "membershipClass": {
          "description": "Indicates the membership class.",
          "type": "string"
        },
        "earningPreference": {
          "description": "Earning preference to the membership.",
          "$ref": "#/definitions/membershipEarningPreferenceType"
        },
        "inactive": {
          "description": "Indicates whether membership is active or inactive.",
          "type": "boolean"
        },
        "benefits": {
          "description": "benefits for the membership.",
          "$ref": "#/definitions/benefitsType"
        },
        "tierAdministration": {
          "description": "Defines the degree of participation for this membership in the tier management portion of the program.",
          "$ref": "#/definitions/tierAdministrationType"
        },
        "downgrade": {
          "description": "Defines how downgrading will be handled for this membership.",
          "$ref": "#/definitions/downgradeType"
        },
        "reIssueNewCard": {
          "description": "The status of issuing new membership card to the member.",
          "$ref": "#/definitions/cardReIssueType"
        },
        "excludeFromBatch": {
          "description": "True if you want to exclude the member from the Membership Fulfillment extract,the member's actions will not be included in the fulfillment extract until this value set to false.",
          "type": "boolean"
        },
        "upgradeDescription": {
          "description": "Indicates Upgrade information which includes member's next tier level, requirements for the next upgrade.",
          "type": "string",
          "minLength": 0,
          "maxLength": 32000
        },
        "downgradeDescription": {
          "description": "Indicates information regarding the member's possible downgrades.",
          "type": "string",
          "minLength": 0,
          "maxLength": 32000
        },
        "rating": {
          "description": "Value Rating Type Description for this membership.",
          "type": "string"
        },
        "membershipEnrollmentCode": {
          "description": "Indicates how the guest enrolled in the program.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "memberStatus": {
          "description": "Indicates where the guest is in the membership enrollment process.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "currentPoints": {
          "description": "Profile MemberShip Points.",
          "type": "number"
        },
        "pointsLabel": {
          "description": "Label used to refer to points for this membership type",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "enrollmentSource": {
          "description": "Source from where the enrollment is done.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "enrollmentResort": {
          "description": "Resort/CRO where enrollment is done.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "preferredCard": {
          "description": "Preferred Card.",
          "type": "boolean"
        },
        "membershipId": {
          "description": "Card Number of the membership.",
          "type": "string"
        },
        "membershipType": {
          "description": "Type of membership.",
          "type": "string"
        },
        "primaryMembershipYn": {
          "description": "Indicator if Membership is a Primary Membership.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1
        },
        "primaryMembership": {
          "description": "Boolean indicator set to True implies membership is a Primary Membership.",
          "type": "boolean"
        },
        "membershipIdNo": {
          "description": "Membership ID Number.",
          "type": "integer"
        },
        "playerRanking": {
          "description": "Ranking assigned to the Player Profile by the Gaming system.",
          "type": "integer"
        },
        "centralSetup": {
          "description": "Indicates how the award points for this membership type will be managed.",
          "type": "boolean"
        },
        "signupDate": {
          "description": "Indicates when the member signed up for the loyalty program.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "effectiveDate": {
          "description": "Indicates the starting date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDate": {
          "description": "Indicates the ending date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expireDateExclusiveIndicator": {
          "description": "When true, indicates that the ExpireDate is the first day after the applicable period (e.g. when expire date is Oct 15 the last date of the period is Oct 14).",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "linkMembership": {
          "type": "boolean"
        },
        "primary": {
          "type": "boolean"
        }
      },
      "description": "Detailed information of the memberships."
    },
    "reservationPaymentMethodsType": {
      "type": "array",
      "description": "Defines reservation payment methods.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationPaymentMethodType"
      }
    },
    "reservationPaymentMethodType": {
      "type": "object",
      "properties": {
        "paymentCard": {
          "$ref": "#/definitions/resPaymentCardType"
        },
        "balance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "authorizationRule": {
          "$ref": "#/definitions/authorizationRuleType"
        },
        "emailFolioInfo": {
          "description": "Information on an email for the customer.",
          "type": "object",
          "properties": {
            "email": {
              "description": "eMail deatils for the profile.",
              "$ref": "#/definitions/emailType"
            },
            "emailFolio": {
              "type": "boolean"
            },
            "id": {
              "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "type": {
              "description": "A reference to the type of object defined by the UniqueID elementSpace.",
              "type": "string",
              "minLength": 0,
              "maxLength": 40
            }
          }
        },
        "paymentMethod": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "folioView": {
          "type": "integer"
        }
      }
    },
    "resPaymentCardType": {
      "type": "object",
      "description": "Information on a credit card for the customer.",
      "properties": {
        "cardId": {
          "description": "credit card id",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "currentAuthorizedAmount": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "approvalAmountNeeded": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "approvalCode": {
          "description": "Approval code sent by the credit card company on a successful authorization.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "cardType": {
          "description": "Indicates the type of credit card from a defined list",
          "$ref": "#/definitions/cardTypeType"
        },
        "userDefinedCardType": {
          "description": "Indicates the user defined credit card type if credit card type from a defined list is not provided",
          "type": "string",
          "minLength": 0,
          "maxLength": 2
        },
        "cardNumber": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "cardNumberMasked": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "cardNumberLast4Digits": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "expirationDate": {
          "description": "Expiration date of the credit card",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expirationDateMasked": {
          "description": "Masked Expiration date of the credit card",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "expirationDateExpired": {
          "type": "boolean"
        },
        "cardHolderName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "attachCreditCardToProfile": {
          "description": "Attach the credit card to profile.",
          "type": "boolean"
        },
        "processing": {
          "description": "This contains information on whether EFT is enabled. A value of 'C' indicates EFT is enabled and 'M' indicates manual authorization is available for this payment card type.",
          "$ref": "#/definitions/cardProcessingType"
        },
        "swiped": {
          "type": "boolean"
        },
        "cardPresent": {
          "description": "Flag to determine if the credit card was swiped/manually entered , This elementSpace is only used when PAYMENT SERVICE DIRECTIVE(PSD) Opera Control is active.",
          "type": "boolean"
        },
        "cardOrToken": {
          "description": "This contains information on whether credit card is tokenized (token enabled). A value of 'Token' indicates credit card is token enabled and 'CardNumber' indicates non token environment for this payment card type.",
          "$ref": "#/definitions/cardNumberTypeType"
        },
        "citId": {
          "description": "Customer Initiated Transaction(CIT) Id for Credit Cards. This is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.",
          "type": "string",
          "minLength": 0,
          "maxLength": 30
        }
      }
    },
    "cardTypeType": {
      "type": "string",
      "description": "This is required for Credit Card Payment Methods. This indicates the type of Credit Card associated with this payment method.",
      "enum": [
        "Ab",
        "Am",
        "Ax",
        "Cb",
        "Dc",
        "Ds",
        "Dt",
        "Ec",
        "Er",
        "Jc",
        "Jl",
        "Mc",
        "Nb",
        "So",
        "St",
        "Sw",
        "Va",
        "Xy",
        "Zz",
        "Cp",
        "Cu"
      ]
    },
    "cardProcessingType": {
      "type": "string",
      "enum": [
        "Eft",
        "Manual"
      ]
    },
    "cardNumberTypeType": {
      "type": "string",
      "description": "Simple type for indicating if credit card number is tokenized.",
      "enum": [
        "CardNumber",
        "Token"
      ]
    },
    "authorizationRuleType": {
      "type": "object",
      "description": "Configured rule for computing the amount to authorize.",
      "properties": {
        "code": {
          "description": "The authorization rule code.",
          "type": "integer",
          "pattern": "[0-9]{1,9}"
        },
        "amount": {
          "description": "The amount applicable to the authorization rule.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "percent": {
          "description": "A percentage value if the authorization rule is percentage based.",
          "type": "number"
        }
      }
    },
    "routingInfoListType": {
      "type": "array",
      "description": "A routing info object can either be of type Folio OR of type Room with its corresponding instructions.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/routingInfoType"
      }
    },
    "routingInfoType": {
      "type": "object",
      "description": "A routing info object can either be of type Folio OR of type Room with its corresponding object.",
      "properties": {
        "folio": {
          "description": "Folio routing type.",
          "type": "object",
          "properties": {
            "guestInfo": {
              "description": "Guest details",
              "type": "object",
              "properties": {
                "profileIdList": {
                  "description": "Unique identifiers for the Profile for both internal and external systems.",
                  "$ref": "#/definitions/profileIdList"
                }
              }
            },
            "payeeInfo": {
              "$ref": "#/definitions/payeeInfoType"
            },
            "aRNumber": {
              "description": "Accounts Receivable.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            },
            "folioWindowNo": {
              "type": "integer"
            },
            "paymentMethod": {
              "type": "string",
              "maxLength": 2000
            }
          }
        },
        "functionSpaceDetails": {
          "description": "Room routing type.",
          "type": "object",
          "properties": {
            "roomId": {
              "description": "Room number to route the instructions.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "guestNameId": {
              "description": "Guest unique identifier to which the instruction will be routed.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "guestDisplayName": {
              "description": "Display Name for the guest.",
              "type": "string",
              "minLength": 0,
              "maxLength": 80
            },
            "reservationNameId": {
              "description": "Reservation name id to which the instruction will be routed.",
              "$ref": "#/definitions/uniqueID_Type"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            }
          }
        },
        "request": {
          "description": "Comp Accounting Request routing",
          "type": "object",
          "properties": {
            "compRequestInfo": {
              "$ref": "#/definitions/compRoutingRequestType"
            },
            "instructions": {
              "description": "Set of routing instructions associated to this routing type.",
              "type": "array",
              "maxItems": 4000,
              "items": {
                "$ref": "#/definitions/routingInstructionType"
              }
            }
          }
        },
        "refreshFolio": {
          "description": "On a successful update, the transactions that are already posted in the guest's folio will be re-organized based on the configured instructions.",
          "type": "boolean"
        }
      }
    },
    "payeeInfoType": {
      "type": "object",
      "description": "Payee information.",
      "properties": {
        "payeeId": {
          "description": "Opera name id of the payee.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "payeeName": {
          "description": "Name of the payee.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "payeeAddress": {
          "description": "Address of the payee.",
          "$ref": "#/definitions/addressInfoType"
        },
        "payeeAddressCount": {
          "description": "Payee multiple address count.",
          "type": "integer"
        },
        "payeeReferenceCurrency": {
          "description": "Reference currency of the payee.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "payeeAccountInfo": {
          "description": "AR account short info of the payee.",
          "$ref": "#/definitions/aRAccountShortInfoType"
        },
        "payeeTaxNumber": {
          "description": "The tax number of the payee.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "aRAccountShortInfoType": {
      "type": "object",
      "description": "Accounts Receivabales Account details type charged for batched posting.",
      "properties": {
        "accountName": {
          "description": "Name of the AR Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "accountId": {
          "description": "The unique ID for the Account.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "accountNo": {
          "description": "The Account Number for the Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "status": {
          "description": "The status of the account.",
          "$ref": "#/definitions/aRAccountStatusType"
        }
      }
    },
    "aRAccountStatusType": {
      "type": "object",
      "description": "Type for the Account Status. Status can be restricted and a message/description added to the Account.",
      "properties": {
        "restriction": {
          "description": "The Restriction Code added on the Account. This is available when the functionality for adding restriction codes is ON.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "User defined status message on the Account.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "restricted": {
          "description": "Flag to indicate if the Account is restricted.",
          "type": "boolean"
        }
      }
    },
    "routingInstructionType": {
      "type": "object",
      "description": "Routing limit can be one of the three: Credit Limit, Percetage Limit, Covers Limit",
      "properties": {
        "duration": {
          "description": "Duration of this instruction.",
          "type": "object",
          "properties": {
            "blockDates": {
              "$ref": "#/definitions/timeSpanType"
            },
            "sunday": {
              "type": "boolean"
            },
            "monday": {
              "type": "boolean"
            },
            "tuesday": {
              "type": "boolean"
            },
            "wednesday": {
              "type": "boolean"
            },
            "thursday": {
              "type": "boolean"
            },
            "friday": {
              "type": "boolean"
            },
            "saturday": {
              "type": "boolean"
            },
            "daily": {
              "description": "Flag to indicate if the routing instruction is a daily instruction.",
              "type": "boolean"
            }
          }
        },
        "transactionCodes": {
          "description": "Set of Transaction Codes configured in this time span.",
          "$ref": "#/definitions/trxCodesInfoType"
        },
        "billingInstructions": {
          "description": "Set of Billing Instructions configured in this time span.",
          "$ref": "#/definitions/billingInstructionsType"
        },
        "creditLimit": {
          "description": "Allowable credit amount for this routing instruction. Null value means no limit, 0 equals zero.",
          "type": "number"
        },
        "percentageLimit": {
          "description": "The routing limit percentage allowed for this routing instruction.",
          "type": "number"
        },
        "covers": {
          "description": "Number of covers for this routing instruction.",
          "type": "number"
        },
        "limitUsed": {
          "description": "Amount of Credit used for this routing instruction.",
          "type": "number"
        },
        "routingLinkId": {
          "description": "Internal Routing Link Id identifier to which limit group the instruction belongs.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "compRoutingRequestType": {
      "type": "object",
      "description": "Type for the details of a Comp Routing Request",
      "properties": {
        "requestedBy": {
          "description": "User who requested the Comp Routing",
          "$ref": "#/definitions/userInfoType"
        },
        "comments": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "declinedBy": {
          "description": "User information of user who declined comp routing request",
          "$ref": "#/definitions/userInfoType"
        },
        "status": {
          "description": "Comp routing status",
          "$ref": "#/definitions/compRoutingStatusType"
        }
      }
    },
    "compRoutingStatusType": {
      "type": "string",
      "description": "Status which indicates that the Request of Comp Routing was declined",
      "enum": [
        "Request",
        "Comp",
        "Declined"
      ]
    },
    "reservationPoliciesType": {
      "type": "object",
      "description": "A collection of reservation deposit and cancellation policies.",
      "properties": {
        "cancellationPolicies": {
          "description": "A collection of reservation cancellation policies..",
          "$ref": "#/definitions/resCancellationPoliciesType"
        },
        "depositPolicies": {
          "description": "A collection of reservation deposit policies.",
          "$ref": "#/definitions/resDepositPoliciesType"
        },
        "reservationIdList": {
          "description": "A list of Ids for reservation.",
          "$ref": "#/definitions/uniqueIDListType"
        },
        "name": {
          "description": "Name identifier for the reservation.",
          "type": "string"
        }
      }
    },
    "resCancellationPoliciesType": {
      "type": "array",
      "description": "A list of reservation cancellation policies.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resCancellationPolicyType"
      }
    },
    "resCancellationPolicyType": {
      "type": "object",
      "description": "A cancellation policy attached with the reservation.",
      "properties": {
        "revenueType": {
          "description": "Type of reservation.",
          "$ref": "#/definitions/depositCancelRevenueType"
        },
        "policy": {
          "description": "Cancellation policy details.",
          "$ref": "#/definitions/resCancelPenaltyType"
        },
        "percentageDue": {
          "description": "The percentage amount due for reservation cancellation.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "comments": {
          "description": "Comments attached with the reservation cancellation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "policyId": {
          "description": "Unique ID of the Reservation Policy.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "depositCancelRevenueType": {
      "type": "string",
      "description": "The type to indicate what revenue is to be used for calculating deposit/cancellation amounts.",
      "enum": [
        "Rooms",
        "Catering",
        "All"
      ]
    },
    "resCancelPenaltyType": {
      "type": "object",
      "description": "The CancelPenalty class defines the cancellation policy of the hotel facility.",
      "properties": {
        "deadline": {
          "description": "Cancellation deadline, absolute or relative.",
          "$ref": "#/definitions/policyDeadlineType"
        },
        "amountPercent": {
          "description": "Cancellation fee expressed as a fixed amount, or percentage of/or functionSpaceDetails nights.",
          "$ref": "#/definitions/policyAmountPercentType"
        },
        "penaltyDescription": {
          "description": "Text description of the Penalty in a given language.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "offsetUnit": {
          "$ref": "#/definitions/offsetUnitType"
        },
        "formattedRule": {
          "description": "Formatted Text Rule of the Cancellation Penalty.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "policyCode": {
          "description": "Policy Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "manual": {
          "description": "Flag to indicate if the cancellation policy is manual.",
          "type": "boolean"
        },
        "nonRefundable": {
          "description": "Indicates if the amount is refundable if booking is canceled.",
          "type": "boolean"
        },
        "effective": {
          "description": "Indicator if Cancellation Penalty is currently applicable or not.",
          "type": "boolean"
        }
      }
    },
    "policyDeadlineType": {
      "type": "object",
      "description": "Cancellation deadline, absolute or relative.",
      "properties": {
        "absoluteDeadline": {
          "description": "Defines the absolute deadline. Either this or the offset attributes may be used.",
          "type": "string",
          "format": "date-time"
        },
        "offsetFromArrival": {
          "description": "The number of days before arrival that allows cancellation without penalties.",
          "type": "integer"
        },
        "offsetDropTime": {
          "description": "Time on offset day the cancellation penalties applies.",
          "type": "string",
          "format": "date-time"
        },
        "offsetFromBookingDate": {
          "description": "The number of days after booking deposit must be paid.",
          "type": "integer"
        }
      }
    },
    "policyAmountPercentType": {
      "type": "object",
      "description": "Defines the percentage basis for calculating the fee amount or the amount.",
      "properties": {
        "basisType": {
          "description": "Provides the basis for how the amount of the guarantee is calculated.",
          "$ref": "#/definitions/policyBasisTypeType"
        },
        "nights": {
          "description": "The number of nights of the hotel stay that are used to calculate the fee amount.",
          "type": "integer"
        },
        "percent": {
          "description": "The percentage used to calculate the amount.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "policyBasisTypeType": {
      "type": "string",
      "description": "Full Amount.",
      "enum": [
        "FlatAmount",
        "Percentage",
        "Nights",
        "NightPercentage",
        "FullAmount"
      ]
    },
    "offsetUnitType": {
      "type": "string",
      "description": "Indicates deadline offset unit type.",
      "enum": [
        "Year",
        "Month",
        "Day",
        "Hour"
      ]
    },
    "resDepositPoliciesType": {
      "type": "array",
      "description": "A list of deposit policies attached with the reservation.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/resDepositPolicyType"
      }
    },
    "resDepositPolicyType": {
      "type": "object",
      "description": "A deposit policy attached with the reservation.",
      "properties": {
        "revenueType": {
          "description": "Type of reservation.",
          "$ref": "#/definitions/depositCancelRevenueType"
        },
        "policy": {
          "description": "Reservation deposit policy details.",
          "$ref": "#/definitions/depositPolicyType"
        },
        "comments": {
          "description": "Comments attached with a deposit.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "amountPaid": {
          "description": "Total amount paid against the reservation deposit.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "amountDue": {
          "description": "Total amount due against the reservation deposit.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "policyId": {
          "description": "Unique ID of the Reservation Policy.",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "depositPolicyType": {
      "type": "object",
      "description": "Used to define the deposit policy, guarantees policy, and/or accepted forms of payment.",
      "properties": {
        "amountPercent": {
          "description": "Payment expressed as a fixed amount, or a percentage of/or functionSpaceDetails nights.",
          "$ref": "#/definitions/policyAmountPercentType"
        },
        "deadline": {
          "description": "Payment deadline, absolute or relative.",
          "$ref": "#/definitions/policyDeadlineType"
        },
        "description": {
          "description": "Text description of the Payment in a given language.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "depositReceiptNo": {
          "description": "Receipt number associated with the deposit policy",
          "type": "integer"
        },
        "transactionDate": {
          "description": "Transaction Date associated with the deposit policy",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "depositReqReversed": {
          "description": "Flag to indicate if deposit policy is reversed",
          "type": "boolean"
        },
        "formattedRule": {
          "description": "Formatted Text Rule of the deposit policy.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "typeOfCharges": {
          "description": "Defines if the deposit amount is calculated based on Room Charges, Catering Charges or both",
          "$ref": "#/definitions/depositCancelRevenueType"
        },
        "policyCode": {
          "description": "Deposit Policy Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "manual": {
          "description": "Flag to indicate if the cancellation policy is manual.",
          "type": "boolean"
        }
      }
    },
    "resCashieringType": {
      "type": "object",
      "description": "Cashiering Information for the reservation.",
      "properties": {
        "revenuesAndBalances": {
          "description": "Revenues and Balances Amount summary for the reservation.",
          "$ref": "#/definitions/resRevenueBalanceType"
        },
        "billingPrivileges": {
          "description": "Billing privileges set on the reservation.",
          "$ref": "#/definitions/billingPrivilegesType"
        },
        "taxType": {
          "description": "This stores the code for the type of tax calculation especially with tax exemption, etc.",
          "$ref": "#/definitions/reservationTaxTypeInfo"
        },
        "bedTaxReporting": {
          "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
          "$ref": "#/definitions/bedTaxReportingType"
        },
        "folioTexts": {
          "description": "Additional text fields to display on the folio.",
          "$ref": "#/definitions/folioTextsType"
        },
        "periodicFolio": {
          "description": "Information regarding periodic folios set on the reservation.",
          "$ref": "#/definitions/resPeriodicFolioType"
        },
        "compAccounting": {
          "description": "Information regarding comp accounting on the reservation.",
          "$ref": "#/definitions/resCompAccountingType"
        },
        "reservationPreConfiguredRoutingInstruction": {
          "description": "Information regarding the selected preconfigured routing instruction on the reservation.",
          "$ref": "#/definitions/resPreConfiguredRoutingInstrType"
        },
        "financiallyResponsible": {
          "description": "The guest from whom payment has to be recovered (direct guest).",
          "type": "boolean"
        },
        "proratedBilling": {
          "description": "In case of Appartment style billing indicates whether a prorated amount should be used for an Apartment Style Billing rate.",
          "type": "boolean"
        },
        "lastRoomAndTaxPostedDate": {
          "description": "Date of the last Room And Tax posting. Used primarily to know the date in case of Advance Billing.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reverseCheckInAllowed": {
          "description": "This attribute is to verify if reverse check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "reverseAdvanceCheckInAllowed": {
          "description": "This attribute is to verify if reverse advance check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "transactionsPosted": {
          "description": "Specifies whether reservation has a financial transaction associated with it.",
          "type": "boolean"
        }
      }
    },
    "resRevenueBalanceType": {
      "type": "object",
      "description": "Revenue and Balance Amount summary for the reservation.",
      "properties": {
        "totalFixedCharge": {
          "description": "Total Fixed Charges on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalPayment": {
          "description": "Total payment received for the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "roomRevenue": {
          "description": "Room Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "foodAndBevRevenue": {
          "description": "Food and Beverage Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "otherRevenue": {
          "description": "Other Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "nonRevenue": {
          "description": "Total Non Revenue posted on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "totalRevenue": {
          "description": "Total Revenue generated by the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "balance": {
          "description": "Balance amount on the reservation.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "compBalance": {
          "description": "Comp Balance amount",
          "$ref": "#/definitions/currencyAmountType"
        }
      }
    },
    "billingPrivilegesType": {
      "type": "object",
      "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
      "properties": {
        "postingRestriction": {
          "description": "Flag used by interface program during check in.",
          "type": "boolean"
        },
        "preStayCharging": {
          "description": "Indicates if the reservation has charging privileges before arrival.",
          "type": "boolean"
        },
        "postStayCharging": {
          "description": "Indicates if the reservation has charging privileges after checkout.",
          "type": "boolean"
        },
        "folioCloseDate": {
          "description": "Date when folio was closed. This works with PostStayCharging flag.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "scheduledCheckout": {
          "description": "Indicates if the guest is scheduled for automatic check out.",
          "type": "boolean"
        },
        "scheduledCheckoutTime": {
          "description": "Time of automatic check out if guest is schedule for automatic check out.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "directBillAuthorized": {
          "description": "If Direct bill is authorized this will hold User ID who authorized it.",
          "type": "boolean"
        },
        "videoCheckout": {
          "description": "Indicates if the guest can do video checkout",
          "type": "boolean"
        },
        "allowAutoCheckin": {
          "description": "Indicated if a new reservation should be created and automatically checked in whenever the functionSpaceDetails is checked out. Available for pseudo functionSpaceDetails types only.",
          "type": "boolean"
        },
        "autoSettlement": {
          "description": "Indicates if the is a candidate for auto folio settlement.",
          "type": "boolean"
        },
        "autoSettlementType": {
          "description": "The folio settlement type for auto folio settlement.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "autoSettlementFreq": {
          "description": "The interval of days between each auto folio settlement.",
          "type": "integer"
        },
        "creditLimitAutoPay": {
          "description": "Indicates if the reservation will be included in the Automatic Credit Limit Overages process and also be listed in the Credit Limit Overages screen results.",
          "type": "boolean"
        }
      }
    },
    "reservationTaxTypeInfo": {
      "type": "object",
      "description": "Provides information about the Tax Type.",
      "properties": {
        "hotelId": {
          "description": "Code of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Code of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Tax Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "collectingAgentTax": {
          "description": "A boolean flag for Collecting Agent Tax",
          "type": "boolean"
        },
        "printAutoAdjust": {
          "description": "Print auto adjust information for this tax type on the tax exempt report.",
          "type": "boolean"
        },
        "reportExemptDays": {
          "description": "Number of days after which the guest will be tax exempt. Only used for tax exempt report.",
          "type": "integer"
        },
        "reportTaxPercentage": {
          "description": "Tax percentage. Only used for tax exempt report.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "minimumLengthOfStay": {
          "description": "Minimun Length of Stay.",
          "type": "integer"
        },
        "taxExemptNo": {
          "description": "Tax exempt number on the profile.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "bedTaxReportingType": {
      "type": "object",
      "description": "This stores the information for Bed Tax Reporting. Mainly used in Maldives.",
      "properties": {
        "taxRegistrationNo": {
          "description": "Tax Registration Number for Maldives Bed Tax Reporting.",
          "type": "number"
        },
        "visaNumber": {
          "description": "Visa number used for Maldives Bed Tax Reporting",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "visaIssueDate": {
          "description": "Visa Issue Date used for Maldives Bed Tax Reporting.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "visaExpiryDate": {
          "description": "Visa Expiration Date used for Maldives Bed Tax Reporting",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "taxableDays": {
          "description": "Number of days for which the Maldives tax is applicable.",
          "type": "integer"
        }
      }
    },
    "folioTextsType": {
      "type": "array",
      "description": "This stores the description for the type of tax calculation especially with tax exemption, etc.",
      "maxItems": 2,
      "items": {
        "type": "object",
        "properties": {
          "text": {
            "description": "Additional text field to display on the folio.",
            "type": "string",
            "minLength": 0,
            "maxLength": 50
          },
          "row": {
            "description": "Row number of the additional text.",
            "type": "integer"
          }
        }
      }
    },
    "resPeriodicFolioType": {
      "type": "object",
      "description": "Information regarding periodic folios set on the reservation.",
      "properties": {
        "lastSettlementDate": {
          "description": "Latest date when a direct bill settlement was automatically done using the \"Direct Bill Batch Folios\" option.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "lastFolioDate": {
          "description": "Latest date when a folio was printed using the \"Periodic Batch Folios\" option",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "frequency": {
          "description": "Frequency in number of days when folios should be printed for this reservation.",
          "type": "integer"
        }
      }
    },
    "resCompAccountingType": {
      "type": "object",
      "description": "Information regarding comp accounting on the reservation.",
      "properties": {
        "compType": {
          "description": "Code used to identify the casino comp type and ranking of a guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "authorizer": {
          "description": "ID of the employee who will act as the host for this guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "compPostings": {
          "description": "Indicates if the Comp Billing/posting Exist",
          "type": "string",
          "minLength": 0,
          "maxLength": 5
        }
      }
    },
    "resPreConfiguredRoutingInstrType": {
      "type": "object",
      "description": "Instruction to attach Pre-Configured Routing Instructions to a Reservation.",
      "properties": {
        "authorizerInfo": {
          "description": "The authorizer information for Promotion Code with attached Complimentary Routing",
          "$ref": "#/definitions/authorizerInfoType"
        },
        "ratePlanCode": {
          "description": "Rate Code with attached Routing Instruction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "profileType": {
          "description": "Profile Type with attached Routing Instruction.",
          "$ref": "#/definitions/resProfileTypeType"
        },
        "promotionCode": {
          "description": "Promotion Code with attached Complimentary Routing.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "authorizerInfoType": {
      "type": "object",
      "description": "Authorizer Information",
      "properties": {
        "authorizerId": {
          "$ref": "#/definitions/uniqueID_Type"
        },
        "authorizerUserName": {
          "description": "Application user name of the authorizer",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "authorizerName": {
          "description": "Full name of the authorizer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "authorizerRateCode": {
          "description": "Rate code of the authorizer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "inheritAuthorizerRateCode": {
          "description": "Indicates whether user has the choice to have reservation inherit rate code from the authorizer.",
          "type": "boolean"
        }
      }
    },
    "resHousekeepingType": {
      "type": "object",
      "description": "Holds housekeeping turndown service information for the functionSpaceDetails.",
      "properties": {
        "instructions": {
          "description": "Turndown instructions for the functionSpaceDetails.",
          "type": "string"
        },
        "facilityTaskInfo": {
          "description": "The facility task applicable for the current day. This will be information only and not used for any updates.",
          "$ref": "#/definitions/facilityTaskType"
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "turndownRequested": {
          "description": "Indicates whether guest wants turndown facility or not.",
          "type": "boolean"
        },
        "serviceTime": {
          "description": "This is the Turndown functionSpaceDetails service time.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "expectedServiceTime": {
          "description": "Expected Start Time for housekeeping task(s).",
          "type": "string"
        },
        "roomStatus": {
          "description": "Current functionSpaceDetails status. Current functionSpaceDetails status is populated only if functionSpaceDetails is assigned to the reservation and reservation is due in or in house.",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        }
      }
    },
    "facilityTaskType": {
      "type": "object",
      "description": "Information regarding facility task on a reservation.",
      "properties": {
        "task": {
          "description": "The Task Code.",
          "$ref": "#/definitions/housekeepingTaskCodeType"
        },
        "supplies": {
          "description": "Supplies associated with the task.",
          "$ref": "#/definitions/facilityCodesType"
        },
        "date": {
          "description": "The Date on which the task is applicable.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "housekeepingTaskCodeType": {
      "type": "object",
      "description": "Information related to a Task Code. Task Codes are used to generate task sheets in Rooms Management.",
      "properties": {
        "description": {
          "description": "Description of the Task Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "instructions": {
          "description": "Instructions for this Task Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "facilityDepartureTask": {
          "description": "Indicates if this task code is the default departure task for Facility Tasks. This requires",
          "type": "boolean"
        },
        "linenChange": {
          "description": "Indicates if a linen change is necessary.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Property where this task code is configured.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "The Code for the task.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sequence": {
          "description": "Ordering sequence for display.",
          "type": "integer"
        }
      }
    },
    "facilityCodesType": {
      "type": "array",
      "description": "List of the facility codes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/facilityCodeType"
      }
    },
    "facilityCodeType": {
      "type": "object",
      "description": "Facility Housekeeping Code, its description and quantity.",
      "properties": {
        "description": {
          "description": "Facility Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "quantity": {
          "description": "Signifies the quantity.",
          "type": "integer"
        },
        "code": {
          "description": "Facility code value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "linkedReservationsInfoType": {
      "type": "object",
      "description": "Linked Reservations.",
      "properties": {
        "reservationInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/linkedReservationInfoType"
          }
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "linkedReservationInfoType": {
      "type": "object",
      "properties": {
        "reservationIdList": {
          "$ref": "#/definitions/reservationIdList"
        },
        "blockDates": {
          "$ref": "#/definitions/timeSpanType"
        },
        "givenName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "surname": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "title": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "functionSpaceDetails": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ratePlanCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rate": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "guarantee": {
          "$ref": "#/definitions/resGuaranteeType"
        },
        "balance": {
          "$ref": "#/definitions/currencyAmountType"
        },
        "reservationBlock": {
          "description": "Key information about the block for the linked reservation.",
          "$ref": "#/definitions/reservationBlockType"
        },
        "displayColor": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "allowedActions": {
          "description": "Collection of allowed actions for the linked reservation.",
          "$ref": "#/definitions/reservationAllowedActionsType"
        },
        "reservationStatus": {
          "description": "Indicates the Actual status of the reservation.",
          "$ref": "#/definitions/pMS_ResStatusType"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "linkReservationType": {
          "$ref": "#/definitions/linkedReservationType"
        },
        "reverseCheckInAllowed": {
          "description": "This attribute is to verify if reverse check-in is allowed for the reservation.",
          "type": "boolean"
        },
        "roomNumberLocked": {
          "description": "This attribute is to verify if functionSpaceDetails number is locked for the reservation. When true the functionSpaceDetails number cannot be changed",
          "type": "boolean"
        },
        "suppressRate": {
          "description": "This attribute checks if rate is suppressed or not in order to properly show strike through.",
          "type": "boolean"
        }
      }
    },
    "reservationAllowedActionsType": {
      "type": "array",
      "description": "Allowed action.",
      "maxItems": 11,
      "items": {
        "$ref": "#/definitions/reservationAllowedActionType"
      }
    },
    "reservationAllowedActionType": {
      "type": "string",
      "description": "Flag indicating whether the Enrollment is in progress or not for the Profile associated with this Reservation.",
      "enum": [
        "Cancel",
        "Move",
        "PreCharge",
        "PostCharge",
        "FacilitySchedule",
        "Upsell",
        "PreCheckIn",
        "PostToNoShowCancel",
        "NoShow",
        "NameChange",
        "Discount",
        "HouseKeeping",
        "EnrollToPrimaryMembership",
        "EnrollInProgress"
      ]
    },
    "linkedReservationType": {
      "type": "string",
      "description": "Enumeration of the different Linked Reservation Types.",
      "enum": [
        "Linked",
        "Shared",
        "Default"
      ]
    },
    "userDefinedFieldsType": {
      "type": "object",
      "description": "A common type used to hold user defined fields(UDFs). This type should be used to handle UDFs on RReservation, Profiles, etc.",
      "properties": {
        "characterUDFs": {
          "description": "Collection of user defined fields of Character/String Type.",
          "$ref": "#/definitions/characterUDFsType"
        },
        "numericUDFs": {
          "description": "Collection of user defined fields of Numeric Type.",
          "$ref": "#/definitions/numericUDFsType"
        },
        "dateUDFs": {
          "description": "Collection of user defined fields of Date Type.",
          "$ref": "#/definitions/dateUDFsType"
        }
      }
    },
    "characterUDFsType": {
      "type": "array",
      "description": "Used to hold collection of user defined fields of Character/String Type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/characterUDFType"
      }
    },
    "characterUDFType": {
      "type": "object",
      "description": "Used to hold user defined field of Character/String Type.",
      "properties": {
        "name": {
          "description": "Used to hold user defined field of Character Type. It is highly recommended to use UDFC01, UDFC02,...UDFC40 (Total 40) as Character/String UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "numericUDFsType": {
      "type": "array",
      "description": "Used to hold collection of user defined fields of Numeric Type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/numericUDFType"
      }
    },
    "numericUDFType": {
      "type": "object",
      "description": "Used to hold user defined field of Numeric Type. It is highly recommended to use UDFN01, UDFN02,...UDFN40 (Total 40) as Numeric UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
      "properties": {
        "name": {
          "description": "Name of user defined field.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "number"
        },
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "dateUDFsType": {
      "type": "array",
      "description": "Used to hold collection of user defined fields of Date Type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/dateUDFType"
      }
    },
    "dateUDFType": {
      "type": "object",
      "description": "Used to hold user defined field of Date Type.",
      "properties": {
        "name": {
          "description": "Used to hold user defined field of Date Type. It is highly recommended to use UDFD01, UDFD02,...UDFN20 (Total 20) as Date UDF names(commonly used on Reservation, Profile etc.). Name is not restricted using enumeration, to provide flexibility of different name usage if required.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "value": {
          "description": "Value of user defined field.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "alternateName": {
          "description": "Label of user defined field used by vendors or customers.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "waitlistResType": {
      "type": "object",
      "description": "Information regarding why reservation is being /has been waitlisted.",
      "properties": {
        "reasonDescription": {
          "description": "Waitlist Reason Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "priorityDescription": {
          "description": "Waitlist priority Description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "description": {
          "description": "Description why the reservation is being /has been waitlisted.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "reasonCode": {
          "description": "Waitlist Reason Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "priorityCode": {
          "description": "Waitlist Priority Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "telephone": {
          "description": "Guest telephone number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "cateringResInfoType": {
      "type": "object",
      "description": "Information regarding catering event and catering revenue type associated to the reservation.",
      "properties": {
        "eventId": {
          "description": "Unique ID on a catering event associated to the reservation.",
          "$ref": "#/definitions/eventId"
        },
        "revenueType": {
          "description": "Catering revenue type associated to the reservation.",
          "type": "string"
        }
      }
    },
    "resStatClassificationType": {
      "type": "object",
      "description": "Statistical Classification information for the reservation.",
      "properties": {
        "roomType": {
          "description": "Room Type used to calculate statistics for export(DRS).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateTier": {
          "description": "Rate Tier used calculate statistics for export(DRS).",
          "type": "integer"
        }
      }
    },
    "alertsType": {
      "type": "array",
      "description": "List of alerts.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/alertType"
      }
    },
    "alertType": {
      "type": "object",
      "properties": {
        "code": {
          "description": "Code identifying the type of alert.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "global": {
          "description": "Indicate whether the alert is a global that is automatically and dynamically attached to all reservations that meet the alert criteria.",
          "type": "boolean"
        },
        "area": {
          "description": "The Area where the alert will be attached and shown.",
          "$ref": "#/definitions/alertAreaType"
        },
        "description": {
          "description": "The alert message.",
          "type": "string"
        },
        "screenNotification": {
          "description": "Notify by showing the alert on the screen",
          "type": "boolean"
        },
        "printerNotification": {
          "description": "Notify by sending the message to the printer.",
          "type": "boolean"
        },
        "printerName": {
          "description": "Printer used to print the alert notification.",
          "type": "string"
        },
        "reportId": {
          "description": "The module id of the report. This is used to printer the alert.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "reportName": {
          "description": "Report name of the report type.",
          "type": "string"
        },
        "reportDescription": {
          "description": "Report description. Mainly used for as a parameter for printing the alerts.",
          "type": "string",
          "minLength": 0,
          "maxLength": 1000
        },
        "guestInfo": {
          "description": "Contains information regarding the guest.",
          "$ref": "#/definitions/alertGuestInfoType"
        },
        "userDefinedFields": {
          "description": "Collections of user defined fields.",
          "$ref": "#/definitions/userDefinedFieldsType"
        },
        "welcomeOffer": {
          "description": "Contains information regarding welcome offer.",
          "$ref": "#/definitions/welcomeOfferType"
        },
        "stopCheckInCheckOut": {
          "description": "Indicates the Reservation Stop Check In/Check Out Global Alert.",
          "type": "boolean"
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "alertAreaType": {
      "type": "string",
      "enum": [
        "CheckIn",
        "CheckOut",
        "Reservation",
        "Billing",
        "InHouse"
      ]
    },
    "alertGuestInfoType": {
      "type": "object",
      "properties": {
        "guestName": {
          "description": "Guest Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "membership": {
          "description": "Membership information of the guest.",
          "$ref": "#/definitions/membershipType"
        },
        "vipStatus": {
          "description": "VIP status of the guest.",
          "$ref": "#/definitions/vIPStatusType"
        },
        "lastHotelCode": {
          "description": "Hotel code of the last stay location of the guest.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "lastStayDate": {
          "description": "Last stay date at the property.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "totalStay": {
          "description": "Holds total number of days that the guest have stayed in the property.",
          "type": "integer"
        },
        "comments": {
          "description": "Additional alert information regarding the membership of the guest.",
          "type": "string"
        },
        "preference": {
          "description": "Additional alert information regarding the guest.",
          "type": "string"
        },
        "preference2": {
          "description": "Additional mandatory alert information regarding the guest preferences.",
          "type": "string"
        },
        "guestPreferredLanguage": {
          "description": "Holds the language preferred by the guest.",
          "$ref": "#/definitions/languageType"
        },
        "totalBrandStay": {
          "description": "Holds total number of days that the guest have stayed in the properties for the same brand.",
          "type": "integer"
        },
        "birthDate": {
          "description": "Indicates the date of birth as indicated in the document, in ISO 8601 prescribed format.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "birthDateMasked": {
          "description": "Indicates the date of birth as masked.",
          "type": "string"
        }
      }
    },
    "languageType": {
      "type": "string",
      "minLength": 0,
      "maxLength": 40
    },
    "welcomeOfferType": {
      "type": "object",
      "properties": {
        "status": {
          "description": "Determines the status of the welcome offer.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "type": {
          "description": "Determines the welcome offer option selected while availing the welcome offer.",
          "$ref": "#/definitions/welcomeOfferOptionsType"
        }
      }
    },
    "welcomeOfferOptionsType": {
      "type": "string",
      "description": "None of the Welcome Offer option is selected.",
      "enum": [
        "BonusPoints",
        "Ecoupons",
        "Items",
        "PostIt",
        "NotSelected"
      ]
    },
    "hotelReservationTracesType": {
      "type": "array",
      "description": "List of Reservation Traces.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelReservationTraceType"
      }
    },
    "hotelReservationTraceType": {
      "type": "object",
      "description": "Extended Trace object to hold information for a reservation.",
      "properties": {
        "timeInfo": {
          "description": "Date of the trace.",
          "$ref": "#/definitions/traceTimeInfoType"
        },
        "reservationId": {
          "description": "Reservation ID of the reservation for which the traces are to be retrieved.",
          "$ref": "#/definitions/reservationId"
        },
        "departmentId": {
          "description": "Indicates the Department code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "traceText": {
          "description": "The information this trace contains.",
          "type": "string"
        },
        "resolveInfo": {
          "description": "Information regarding the status of the trace",
          "$ref": "#/definitions/traceResolveType"
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "callHistoryType": {
      "type": "array",
      "description": "Holds call information.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/callType"
      }
    },
    "callType": {
      "type": "object",
      "description": "Holds call information.",
      "properties": {
        "dateTimeSpan": {
          "description": "Call Time Span. Start Date and End Date is used for the Call duration.",
          "$ref": "#/definitions/dateTimeSpanType"
        },
        "caller": {
          "description": "Holds caller information.",
          "$ref": "#/definitions/callerType"
        },
        "reservation": {
          "description": "Holds Reservation Id and Hotel Code.",
          "type": "object",
          "properties": {
            "reservationIdList": {
              "description": "Holds Reservation related Ids.",
              "$ref": "#/definitions/reservationIdList"
            },
            "hotelId": {
              "description": "Holds Hotel Code.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            }
          }
        },
        "turnawayCode": {
          "description": "Call turn away code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "comments": {
          "description": "Call comments.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "callerType": {
      "type": "object",
      "description": "Holds caller information.",
      "properties": {
        "givenName": {
          "description": "Caller First Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 280
        },
        "surname": {
          "description": "Caller Last Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "phone": {
          "description": "Caller Phone Number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "email": {
          "description": "Caller Email.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "fax": {
          "description": "Caller Fax Number.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "fixedChargesType": {
      "type": "array",
      "description": "Holds fixed charge detail.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/fixedChargeType"
      }
    },
    "fixedChargeType": {
      "type": "object",
      "description": "Holds fixed charge information.",
      "properties": {
        "schedule": {
          "description": "Holds schedule of fixed charge.",
          "$ref": "#/definitions/fixedChargeScheduleType"
        },
        "charge": {
          "description": "Holds specific details of fixed charge.",
          "$ref": "#/definitions/fixedChargeDetailType"
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        }
      }
    },
    "fixedChargeScheduleType": {
      "type": "object",
      "description": "Holds schedule of fixed charge.",
      "properties": {
        "eventStartDate": {
          "description": "The starting value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "eventEndDate": {
          "description": "The ending value of the date range.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "frequency": {
          "description": "Frequency of a fixed charge.",
          "$ref": "#/definitions/fixedChargeFrequencyType"
        },
        "dayToExecute": {
          "description": "Day of when to execute fixed charge. Applicable when frequency is Daily or Weekly.",
          "type": "string",
          "minLength": 0,
          "maxLength": 3
        },
        "dateToExecute": {
          "description": "Date of when to execute yearly fixed charge. Applicable when frequency is Yearly.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "fixedChargeFrequencyType": {
      "type": "string",
      "description": "Yearly.",
      "enum": [
        "O",
        "D",
        "W",
        "M",
        "Q",
        "Y"
      ]
    },
    "fixedChargeDetailType": {
      "type": "object",
      "description": "Fixed charge amount could be specified by flat fee or be a percentage of the rate amount.",
      "properties": {
        "transaction": {
          "description": "Transaction code and description of a fixed charge.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "quantity": {
          "description": "Quantity of the product.",
          "type": "integer"
        },
        "chargeAmount": {
          "description": "Price of the product.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "percent": {
          "description": "Percentage of the rate amount.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "supplement": {
          "description": "Additional information regarding the fixed charge.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "article": {
          "description": "Holds related article code and description.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "roomNights": {
          "description": "Holds number of comp or cash functionSpaceDetails night to allocate.",
          "type": "integer"
        }
      }
    },
    "guestMessagesType": {
      "type": "array",
      "description": "Holds the Message Information",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/guestMessageType"
      }
    },
    "guestMessageType": {
      "type": "object",
      "description": "Holds the Message information for a Reservation",
      "properties": {
        "message": {
          "description": "Holds the Message Information",
          "$ref": "#/definitions/messageType"
        },
        "delivery": {
          "description": "Holds the Delivery Method Information",
          "$ref": "#/definitions/messageDeliveryType"
        },
        "url": {
          "description": "URL that identifies the location associated with the record identified by the UniqueID.",
          "type": "string"
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace. Refer to OpenTravel Code List Unique ID Type (UIT).",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "instance": {
          "description": "The identification of a record as it exists at a point in time. An instance is used in update messages where the sender must assure the server that the update sent refers to the most recent modification level of the object being updated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idContext": {
          "description": "Used to identify the source of the identifier (e.g., IATA, ABTA).",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "idExtension": {
          "description": "Additional identifying value assigned by the creating system.",
          "type": "integer"
        },
        "createDateTime": {
          "description": "Time stamp of the creation.",
          "type": "string",
          "format": "date-time"
        },
        "creatorId": {
          "description": "ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "lastModifyDateTime": {
          "description": "Time stamp of last modification.",
          "type": "string",
          "format": "date-time"
        },
        "lastModifierId": {
          "description": "Identifies the last software system or person to modify a record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "purgeDate": {
          "description": "Date an item will be purged from a database (e.g., from a live database to an archive).",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "messageType": {
      "type": "object",
      "description": "Holds the Message Information",
      "properties": {
        "messageText": {
          "description": "Message Content",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "messageDate": {
          "description": "Date the message was created",
          "type": "string",
          "format": "date-time"
        },
        "typeOfMessage": {
          "description": "Type of message (Voice/Text)",
          "$ref": "#/definitions/typeOfMessageType"
        },
        "recipient": {
          "description": "Recipient of the Message",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "operator": {
          "description": "User who created the Message",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "typeOfMessageType": {
      "type": "string",
      "description": "The type of Message for Guest Messages.",
      "enum": [
        "Tm",
        "Vm"
      ]
    },
    "messageDeliveryType": {
      "type": "object",
      "description": "Holds the Delivery Information of the Message",
      "properties": {
        "deliveryStatus": {
          "description": "Status of the Message (Received or Not Received)",
          "$ref": "#/definitions/messageStatusType"
        },
        "deliveryDate": {
          "description": "Date the message has been delivered (marked as received)",
          "type": "string",
          "format": "date-time"
        },
        "deliveredBy": {
          "description": "User who delivered the message (who marked message as received)",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "printDate": {
          "description": "Date when message has been printed",
          "type": "string",
          "format": "date-time"
        },
        "textMessageSentDate": {
          "description": "Date when message has been sent via SMS",
          "type": "string",
          "format": "date-time"
        },
        "textMessageSentBy": {
          "description": "User who sent the message",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "textMessageSentById": {
          "description": "User Id of who sent the message",
          "type": "integer"
        },
        "textMessageRecipientNo": {
          "description": "Number in which the message is to be sent.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "messageStatusType": {
      "type": "string",
      "description": "Status of the Message.",
      "enum": [
        "Mr",
        "Nr"
      ]
    },
    "overrideInstructionsType": {
      "type": "array",
      "description": "List of override actions done.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/overrideInstructionType"
      }
    },
    "overrideInstructionType": {
      "type": "object",
      "description": "Type for Overrides. Contains information for the override action performed while booking a reservation.",
      "properties": {
        "description": {
          "description": "The description of the restriction for which the override was done.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "date": {
          "description": "The date when the override was done.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "type": {
          "description": "The type of override done. If done for Availability, then it will be AVAILABILITY.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "userId": {
          "description": "Login ID of the user who performed the override.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "reservationQueueInformationType": {
      "type": "object",
      "description": "Information regarding the Date, Duration and Priority of the reservation on Queue for Check in.",
      "properties": {
        "blockDates": {
          "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield eventEndDate date.",
          "type": "object",
          "properties": {
            "startDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "endDate": {
              "type": "string",
              "format": "date",
              "maxLength": 8
            },
            "duration": {
              "type": "string"
            },
            "durationInSeconds": {
              "description": "The total duration, in seconds, the reservation is on Queue.",
              "type": "integer"
            }
          }
        },
        "guestTextInfo": {
          "description": "Information for the message sent to the user",
          "$ref": "#/definitions/queueTextInfoType"
        },
        "priority": {
          "description": "The Queue Priority given to this reservation.",
          "type": "integer"
        },
        "averageQueueTimeToCheckIn": {
          "description": "The average time, in seconds, a reservation was on queue prior to Check-In.",
          "type": "integer"
        },
        "averageQueueTimeCurrentReservations": {
          "description": "The average time, in seconds, of the reservations currently in queue.",
          "type": "integer"
        },
        "queueDate": {
          "description": "The Business date on which the reservation was due to arrive and is currently placed on Queue for Check In.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "queueTextInfoType": {
      "type": "object",
      "description": "Information regarding the message sent to guest.",
      "properties": {
        "sentTime": {
          "description": "Time the text was last sent to the user.",
          "type": "string",
          "format": "date-time"
        },
        "sentBy": {
          "description": "User name of the user who sent message.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "eCouponsType": {
      "type": "array",
      "description": "Collection of ECouponType object.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/eCouponType"
      }
    },
    "eCouponType": {
      "type": "object",
      "description": "Reservation eCoupon Type Information.",
      "properties": {
        "eCouponId": {
          "description": "ECouponID to attach the eCoupon to Reservation.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "code": {
          "description": "Code to attach the eCoupon to Reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the eCoupon attached to the Reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "autoAttached": {
          "description": "Determines whether the eCoupon is attached through the Rate Code or not.",
          "type": "boolean"
        },
        "issuedQuantity": {
          "description": "Assigned Quantity for the eCoupon when attached to Reservation.",
          "type": "integer"
        },
        "usedQuantity": {
          "description": "Used Quantity of the eCoupon for the Reservation.",
          "type": "integer"
        },
        "reason": {
          "description": "Reason for attaching/modifing eCoupon.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "ratePlanCode": {
          "description": "Rate plan of the attached eCoupon to Reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "welcomeOffer": {
          "description": "Determines whether this eCoupon is eligible for welcome offer or not.",
          "type": "boolean"
        }
      }
    },
    "reservationTransactionDiversionsType": {
      "type": "array",
      "description": "List of Transaction Diversion rules.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationTransactionDiversionType"
      }
    },
    "reservationTransactionDiversionType": {
      "type": "object",
      "description": "A Transaction Diversion Rule Type",
      "properties": {
        "vipCode": {
          "description": "VIP code to consider while applying Diversion Instruction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "membership": {
          "description": "Membership type to consider while applying Diversion Instruction.",
          "$ref": "#/definitions/membershipTypeLevelType"
        },
        "targetRoom": {
          "description": "Room number to receive all the diverted transactions configured for this instruction.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "transactionCodes": {
          "description": "Collection of Transaction Code List",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeDescriptionType"
          }
        },
        "description": {
          "description": "User defined message for the Transaction Diversion Rule.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "level": {
          "description": "Level of the Transaction Diversion rule that can be Property or Reservation.",
          "$ref": "#/definitions/transactionDiversionRuleLevelType"
        },
        "thresholds": {
          "description": "Threshold Details related to the Transaction diversion rule.",
          "$ref": "#/definitions/thresholdDetailsType"
        },
        "type": {
          "description": "Transaction Diversion Rule Types",
          "$ref": "#/definitions/transactionDiversionRuleTypeType"
        },
        "hotelId": {
          "description": "Hotel code with which Transaction Diversion Rule is associated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Transaction Diversion Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "displaySequence": {
          "description": "User configured Sequence number.",
          "type": "number"
        },
        "inactive": {
          "description": "Indicator that tells whether the transaction diversion rule is active or not.",
          "type": "boolean"
        },
        "notes": {
          "description": "The Note details related to the Transaction Diversion Rule.",
          "$ref": "#/definitions/commentInfoType"
        },
        "posted": {
          "description": "Transaction diversions that are posted.",
          "type": "integer"
        },
        "diverted": {
          "description": "Transaction diversions that are diverted .",
          "type": "integer"
        },
        "dailyDetails": {
          "description": "Collection of daily details of a Transaction diversion rule for a particular reservation.",
          "$ref": "#/definitions/transactionDiversionDailyDetailsType"
        }
      }
    },
    "membershipTypeLevelType": {
      "type": "object",
      "properties": {
        "type": {
          "description": "Code type for Rule Details",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "level": {
          "description": "Description type for Rule Details",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "transactionDiversionRuleLevelType": {
      "type": "string",
      "description": "Reservation level.",
      "enum": [
        "Property",
        "Reservation"
      ]
    },
    "thresholdDetailsType": {
      "type": "object",
      "description": "Type for the threshold elements.",
      "properties": {
        "entity": {
          "description": "Diversion entity type associated with the charge for the transaction diversion rule .",
          "$ref": "#/definitions/entityType"
        },
        "scope": {
          "description": "Diversion scope for the transaction diversion rule.",
          "$ref": "#/definitions/scopeType"
        },
        "minRequired": {
          "description": "Minimum required number of quantities, counts or minutes that must be posted.",
          "type": "integer"
        },
        "complimentary": {
          "description": "The number of quantities, counts or minutes for which transaction diversion is allowed .",
          "type": "integer"
        },
        "isEditable": {
          "description": "Configuring this flag to be TRUE will make the thresholds editable.",
          "type": "boolean"
        }
      }
    },
    "entityType": {
      "type": "string",
      "description": "Indicates the rule is based on Minutes associated with the charge.",
      "enum": [
        "ThresholdCount",
        "ThresholdQuantity",
        "ThresholdMinutes"
      ]
    },
    "scopeType": {
      "type": "string",
      "description": "Minimum required and complimentary values are applicable Per Stay.",
      "enum": [
        "PerDay",
        "PerStay"
      ]
    },
    "transactionDiversionRuleTypeType": {
      "type": "string",
      "description": "The rule type on which the Transaction Diversion Rule is based. If a reservation has any of the following code, Transaction Diversion rule gets active for that reservation",
      "enum": [
        "Vip",
        "Membership"
      ]
    },
    "transactionDiversionDailyDetailsType": {
      "type": "array",
      "description": "List of daily details for Transaction Diversion rule.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/transactionDiversionDailyDetailType"
      }
    },
    "transactionDiversionDailyDetailType": {
      "type": "object",
      "description": "List of daily details for Transaction Diversion rule.",
      "properties": {
        "posted": {
          "description": "Transaction diversion rules that are posted.",
          "type": "integer"
        },
        "diverted": {
          "description": "Transaction diversion rules that are diverted .",
          "type": "integer"
        },
        "date": {
          "description": "Daily details Date about when the rules are posted or diverted.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "advanceCheckInType": {
      "type": "object",
      "description": "Information relating to Reservation's Advance Checked In state and Expected Time of Return",
      "properties": {
        "advanceCheckedIn": {
          "description": "Indicates if the reservation is marked as Advance Checked In",
          "type": "boolean"
        },
        "expectedReturnTime": {
          "description": "Expected Return Time",
          "type": "string",
          "format": "date-time"
        },
        "eTRComments": {
          "description": "ETR Comments",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "ticketsType": {
      "type": "array",
      "description": "Collection of TicketType objects.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/ticketType"
      }
    },
    "ticketType": {
      "type": "object",
      "description": "Reservation Ticket Type Information.",
      "properties": {
        "ticketId": {
          "description": "Internal Unique ID.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "packageCode": {
          "description": "Package Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "reservationProductId": {
          "description": "Reference to the reservation product.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "ticketNumber": {
          "description": "Ticket number.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "description": {
          "description": "Package description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "issueDate": {
          "description": "Tickets issue date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "price": {
          "description": "Tickets price.",
          "type": "number"
        },
        "consumptionDate": {
          "description": "Tickets comsumption date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "rentalCode": {
          "description": "The Rate Code to which tickets belong to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "quantity": {
          "description": "Number of tickets used to create multiple tickets.",
          "type": "integer"
        },
        "reference": {
          "description": "Free text field for reference information.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "status": {
          "description": "The Status Code for outbound WS call.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "statusDescription": {
          "description": "The Status Description for outbound WS call.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "reservationECertificatesType": {
      "type": "array",
      "description": "Collection of ECertificateType object.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/reservationECertificateType"
      }
    },
    "reservationECertificateType": {
      "type": "object",
      "description": "Reservation ECertificate Type Information.",
      "properties": {
        "eCertificateNo": {
          "description": "ECertificate Number for the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "actionType": {
          "description": "ECertificate status for the reservation.",
          "$ref": "#/definitions/requestActionType"
        },
        "eCertificateType": {
          "description": "ECertificate Type where value can be PROMOTION,AWARD,BENEFIT and OTHER",
          "$ref": "#/definitions/eCertificateClassficationType"
        }
      }
    },
    "requestActionType": {
      "type": "string",
      "enum": [
        "Create",
        "Remove",
        "Query"
      ]
    },
    "eCertificateClassficationType": {
      "type": "string",
      "description": "Enumeration of the different type of Ecertificate.",
      "enum": [
        "Promotion",
        "Award",
        "Benefit",
        "Other"
      ]
    },
    "nameValueDetailType": {
      "type": "object",
      "description": "Detailed information returned during name value search.",
      "properties": {
        "nameValues": {
          "description": "Name Value List.",
          "$ref": "#/definitions/nameValuesType"
        }
      }
    },
    "nameValuesType": {
      "type": "array",
      "description": "List of name value pairs.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/nameValueType"
      }
    },
    "nameValueType": {
      "type": "object",
      "description": "Contains name value pair.",
      "properties": {
        "name": {
          "description": "Contains unique key which represents for record field.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "value": {
          "description": "Contains value for the record/column.",
          "type": "string",
          "minLength": 0,
          "maxLength": 4000
        },
        "formatString": {
          "description": "Contains format string for values.",
          "type": "string",
          "minLength": 0,
          "maxLength": 100
        },
        "dataType": {
          "description": "Contains data type for values.",
          "$ref": "#/definitions/nameValueDataTypeType"
        },
        "origin": {
          "description": "Contains Origin information.",
          "$ref": "#/definitions/nameValueOriginType"
        },
        "usageInstruction": {
          "description": "Contains value(s) to identify the reports to include the collected information in e.g. PFH=Print Folio Header, PFD=Print Folio Detail.",
          "$ref": "#/definitions/codeListType"
        }
      }
    },
    "nameValueDataTypeType": {
      "type": "string",
      "enum": [
        "String",
        "Number",
        "Date",
        "Datetime",
        "Time",
        "Integer"
      ]
    },
    "nameValueOriginType": {
      "type": "object",
      "description": "Contains origin details.",
      "properties": {
        "originName": {
          "description": "Contains origin i.e. Reseravtion, Profile, Folio or FinTrx.",
          "$ref": "#/definitions/nameValueModuleType"
        },
        "destination": {
          "description": "Contains destination column for Origin.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "id": {
          "description": "A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "type": {
          "description": "A reference to the type of object defined by the UniqueID elementSpace.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        }
      }
    },
    "nameValueModuleType": {
      "type": "string",
      "enum": [
        "Reservation",
        "Folio",
        "Profile",
        "Fintrix"
      ]
    },
    "customChargeExemptionsType": {
      "type": "array",
      "description": "List of Custom Charge Exemptions.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/customChargeExemptionType"
      }
    },
    "customChargeExemptionType": {
      "type": "object",
      "description": "Contains custom charges exemption information.",
      "properties": {
        "customChargesExemption": {
          "description": "Contains exemption code and description.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "customChargeQuantity": {
          "description": "Contains exemption quantity for the stay. When this value is configured, daily exemption quantities are not permitted.",
          "$ref": "#/definitions/customChargeQuantityType"
        },
        "customChargeDates": {
          "description": "Contains exemption detail information for each date.",
          "$ref": "#/definitions/customChargeExemptionDatesType"
        },
        "excludedDates": {
          "description": "Contains list of dates which are not valid for custom charge exemptions.",
          "$ref": "#/definitions/excludedDatesType"
        },
        "percentage": {
          "description": "Exemption Percentage",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "propertyExemption": {
          "description": "Flag specifying if custom charge exemptions is property level or not.",
          "type": "boolean"
        }
      }
    },
    "customChargeQuantityType": {
      "type": "object",
      "description": "Contains quantity of custom charge exemptions.",
      "properties": {
        "quantity": {
          "description": "Contains number of Custom Charge Exemption for a day.",
          "type": "integer"
        },
        "available": {
          "description": "Indicates if Custom Charges Exemption information is editable.",
          "type": "boolean"
        }
      }
    },
    "customChargeExemptionDatesType": {
      "type": "array",
      "description": "Contains List of Custom Charge Exemption information for a day.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/customChargeExemptionDateType"
      }
    },
    "customChargeExemptionDateType": {
      "type": "object",
      "description": "Contains Custom Charge Exemption information for a day.",
      "properties": {
        "date": {
          "description": "Contains Custom Charge Exemption date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "quantity": {
          "description": "Contains number of Custom Charge Exemption for a day.",
          "type": "integer"
        }
      }
    },
    "excludedDatesType": {
      "type": "array",
      "description": "Contains list of dates which are valid for custom charge exemptions.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/excludedDateType"
      }
    },
    "excludedDateType": {
      "type": "object",
      "description": "Specifies all the enabled dates.",
      "properties": {
        "date": {
          "description": "Contains exclusion date.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "reason": {
          "description": "Contains reason for exclusion.",
          "$ref": "#/definitions/exclusionReasonType"
        }
      }
    },
    "exclusionReasonType": {
      "type": "string",
      "description": "Custom Charge has already been Processed for this date within the reservation stay.",
      "enum": [
        "NotConfigured",
        "CustomChargeProcessed"
      ]
    },
    "foliosShortInfoType": {
      "type": "array",
      "description": "This type contains a list of generated bills for a reservation.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/folioShortInfoType"
      }
    },
    "folioShortInfoType": {
      "type": "object",
      "description": "This type contains information of generated bills.",
      "properties": {
        "folioNo": {
          "description": "Folio No of the bill generated.",
          "type": "number"
        },
        "folioType": {
          "description": "Folio type of the bill generated.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "folioView": {
          "description": "The folio window where the settlement is applied.",
          "type": "integer"
        },
        "autoGenerated": {
          "description": "Flag to indicate if the folio is auto generated or not.",
          "type": "boolean"
        },
        "internalFolioWindowID": {
          "description": "Internal window ID which is unique to the reservation. This ID can only be used for reference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "invoiceNo": {
          "description": "Invoice No after the folio is generated. Same invoice number may be referred in multiple folios",
          "type": "number"
        },
        "folioDate": {
          "description": "Date of Folio Generation.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "folioStatus": {
          "$ref": "#/definitions/folioStatusType"
        }
      }
    },
    "folioStatusType": {
      "type": "string",
      "description": "The Folio Status Example: DEPOSIT folio, VOID folio or the default OK folio status.",
      "enum": [
        "Deposit",
        "Void",
        "Ok",
        "Zero",
        "Compress",
        "Converted",
        "Internal"
      ]
    },
    "resAccessRestrictionType": {
      "type": "string",
      "description": "Indicates any Updates/Changes on the reservation as well as Reservation Cancellation are not allowed.",
      "enum": [
        "Change",
        "Cancel",
        "ChangeOrCancel"
      ]
    },
    "quickInsertResources": {
      "type": "object",
      "description": "Request object to add resource on an event in a hotel.",
      "properties": {
        "quickInsertResourceListInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/quickInsertResourceListType"
          }
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "quickInsertResourceListType": {
      "type": "object",
      "description": "Collection of quick insert resource(s).",
      "properties": {
        "hotelId": {
          "description": "Hotel code where menu(s) or item(s) or template(s) will be added.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "eventId": {
          "description": "Event ID for which menu, item or item template will be associated to.",
          "$ref": "#/definitions/eventId"
        },
        "quickInsertResourceInfo": {
          "description": "Quick insert resource type.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/quickInsertResourceType"
          }
        }
      }
    },
    "quickInsertResourceType": {
      "type": "object",
      "description": "Quick insert resource type.",
      "properties": {
        "quickInsertText": {
          "description": "Text that represents quick insert number of menu, item or item template name.",
          "type": "string"
        },
        "quantity": {
          "description": "Quantity of the menu, item or item template.",
          "type": "number"
        },
        "includeInPackage": {
          "description": "Flag to indicate if menu, item or item template is part of a package.",
          "type": "boolean"
        }
      }
    },
    "quickInsertResourceStatus": {
      "type": "object",
      "description": "Status/Info of the processed resource(s).",
      "properties": {
        "quickinsertResourcesProcessedInfo": {
          "$ref": "#/definitions/copyCateringEventsProcessedInfoList"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "eventsResources": {
      "type": "object",
      "description": "Response object for fetching event resources.",
      "properties": {
        "eventsResourcesList": {
          "description": "Event resources information for request criteria.",
          "$ref": "#/definitions/eventsResourcesListType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "eventsResourcesListType": {
      "type": "array",
      "description": "Event resource information.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/eventInfoType"
      }
    },
    "blockPostingAccountReservationsInfo": {
      "type": "object",
      "description": "Response object for retrieving block Posting account reservations.",
      "properties": {
        "blockPostingAccountReservations": {
          "description": "Collection of block Posting account reservations.",
          "$ref": "#/definitions/blockPostingAccountReservationsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "functionSpaceAvailabilityDetails": {
      "type": "object",
      "description": "Response object for retrieving availability for catering function spaces.",
      "properties": {
        "functionSpacesAvailability": {
          "description": "Collection of catering events postings after manage them.",
          "$ref": "#/definitions/functionSpacesAvailabilityType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "functionSpacesAvailabilityType": {
      "type": "array",
      "description": "Collection of available Function Spaces.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/functionSpaceAvailabilityType"
      }
    },
    "functionSpaceAvailabilityType": {
      "type": "object",
      "description": "The summary information for a function space.",
      "properties": {
        "hotelId": {
          "description": "Hotel Code where function space belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomCode": {
          "description": "Room Code of the Function Space.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "description": "Room Type of the Function Space.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "psuedoRoomType": {
          "description": "Indicates whether the functionSpaceDetails type is psuedo.",
          "type": "boolean"
        },
        "spaceName": {
          "description": "The Name of the Function Space.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "shortName": {
          "description": "The Short Name of the Function Space.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "floor": {
          "description": "The floor on which the Function Space is located.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "spaceType": {
          "description": "The Type which the Function Space belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "location": {
          "description": "The building on which the Function Space is located.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "comboSpace": {
          "description": "Indicate if the function space is a combination functionSpaceDetails.",
          "type": "boolean"
        },
        "elementSpace": {
          "description": "Indicate if the function space will be shown in the Function Diary by default.",
          "type": "boolean"
        },
        "shareable": {
          "description": "Indicate if the function space is shareable.",
          "type": "boolean"
        },
        "forceAlternate": {
          "description": "Indicate if the function space is forced to have alternate function spaces in case the function space becomes unvailable.",
          "type": "boolean"
        },
        "webBookable": {
          "description": "Indicates whether the Function Space is web bookable or not.",
          "type": "boolean"
        },
        "webViewable": {
          "description": "Indicates whether the Function Space is web viewable or not.",
          "type": "boolean"
        },
        "fullUtilizationTime": {
          "description": "The time in minutes that the function space would be considered at 100% utilization.",
          "type": "number"
        },
        "handicapFacilities": {
          "description": "Indicates whether the function space has handicap facilities.",
          "type": "boolean"
        },
        "orderBy1": {
          "description": "The first custom order for sorting the function space display.",
          "type": "integer"
        },
        "orderBy2": {
          "description": "The second custom order for sorting the function space display.",
          "type": "integer"
        },
        "orderBy3": {
          "description": "The third custom order for sorting the function space display.",
          "type": "integer"
        },
        "suggestedRateCode": {
          "description": "Rate Code suggested to be used by function space.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "suggestedRateAmount": {
          "description": "Rental amount suggested to be used by function space.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "suggestedSetupCode": {
          "description": "Setup Code suggested to be used by function space.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "available": {
          "description": "Flag that indicates if the function space can be reserved or not.",
          "type": "boolean"
        }
      }
    },
    "functionSpaceEvents": {
      "type": "object",
      "description": "Response object for fetching events shared by function space.",
      "properties": {
        "sharedFunctionSpaceEvents": {
          "description": "Collection of the events shared by function space.",
          "$ref": "#/definitions/sharedFunctionSpaceEventsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "sharedFunctionSpaceEventsType": {
      "type": "object",
      "description": "Collection of events shared by function space.",
      "properties": {
        "sharedFunctionSpaceEvent": {
          "description": "Pertain shared event Information.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/sharedFunctionSpaceEventType"
          }
        },
        "maxCapacity": {
          "description": "Maximum capcity of the shared function space.",
          "type": "integer"
        },
        "maxEvents": {
          "description": "Maximum number of events for the shared function space.",
          "type": "integer"
        }
      }
    },
    "sharedFunctionSpaceEventType": {
      "type": "object",
      "description": "Pertain shared event Information.",
      "properties": {
        "blockName": {
          "description": "Block Name.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "blockId": {
          "description": "Block ID for which the details are requested",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "eventName": {
          "description": "Name of event.",
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        },
        "eventId": {
          "description": "ID of Event.",
          "$ref": "#/definitions/eventId"
        },
        "eventType": {
          "description": "Type of event.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "eventStatus": {
          "description": "Status of the event. Examples are INQ, TEN, DEF, etc.",
          "$ref": "#/definitions/bookingStatusType"
        },
        "cateringDeductInventory": {
          "description": "Indicates if catering event's spaces are deducted from inventory",
          "type": "boolean"
        },
        "functionSpaceCode": {
          "description": "Function space of event.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "attendees": {
          "description": "Number of event attendees.",
          "type": "integer"
        },
        "isShared": {
          "description": "Indicates if catering event is shared or not",
          "type": "boolean"
        }
      }
    },
    "waitlistedEvents": {
      "type": "object",
      "description": "Response object for retrieving waitlisted and current events holding the function space.",
      "properties": {
        "waitlistedEventsGroups": {
          "description": "Collection of waitlisted catering events.",
          "$ref": "#/definitions/waitlistedEventsGroupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "waitlistedEventsGroupsType": {
      "type": "array",
      "description": "Collection of events waitlisted for a function space.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/waitlistedEventsType"
      }
    },
    "waitlistedEventsType": {
      "type": "array",
      "description": "Pertain waitlisted event Information.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/waitlistedEventType"
      }
    },
    "waitlistedEventType": {
      "type": "object",
      "description": "Catering Event information.",
      "properties": {
        "eventPrimaryInfo": {
          "description": "Pertain event primary information.",
          "$ref": "#/definitions/eventPrimaryInfoType"
        },
        "eventDetail": {
          "description": "Pertain detail event's information.",
          "$ref": "#/definitions/eventDetailType"
        },
        "eventResources": {
          "description": "Pertain detail event's information.",
          "$ref": "#/definitions/eventResourcesListType"
        },
        "processInstructions": {
          "description": "Instructions to control how the event is created.",
          "$ref": "#/definitions/eventProcessInstructionsType"
        },
        "eventBlockInfo": {
          "description": "Pertain information for block where event belongs to.",
          "$ref": "#/definitions/blockType"
        },
        "functionSpaceInformation": {
          "description": "Pertain event's function space information.",
          "$ref": "#/definitions/eventFunctionSpaceType"
        },
        "eventNotes": {
          "description": "Pertain event's notes.",
          "$ref": "#/definitions/eventNotesType"
        },
        "eventIndicators": {
          "description": "Indicators of additional information attached to the event",
          "$ref": "#/definitions/indicatorsType"
        },
        "onTheBooksRevenue": {
          "description": "On The Books (OTB) catering revenue for the event.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "subEventsDetail": {
          "description": "Pertain detail information of sub event/events.",
          "$ref": "#/definitions/lightEventsDetailType"
        },
        "altEventsDetail": {
          "description": "Pertain detail information of alternate event/events in case functionspace for current event becomes unavailable",
          "$ref": "#/definitions/lightEventsDetailType"
        },
        "masterEventDetail": {
          "description": "Pertain detail information of master event.",
          "$ref": "#/definitions/lightEventDetailType"
        },
        "eventRevenues": {
          "description": "Pertain event revenues.",
          "$ref": "#/definitions/eventRevenuesInformationType"
        },
        "waitlistId": {
          "description": "Unique identifier for waitlist record.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "priority": {
          "description": "Waitlist priority to determine event that gets function space when it becomes available.",
          "type": "integer"
        },
        "currentEventsHoldingFunctionSpace": {
          "description": "Collection of catering events holding the Function Space this catering event is waitlisted.",
          "$ref": "#/definitions/eventsInfoType"
        },
        "waitlistDate": {
          "description": "Date when function space got waitlisted.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "updateUser": {
          "description": "User id who modified the waitlist record.",
          "type": "integer"
        },
        "updateDate": {
          "description": "Date when waitlist was modified.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        }
      }
    },
    "manageWaitlistedEvents": {
      "type": "object",
      "description": "Request object for managing waitlisted catering events.",
      "properties": {
        "processingInstructions": {
          "description": "Information to know how to process waitlisted catering events.",
          "$ref": "#/definitions/waitlistedEventProcessingInstructionsType"
        },
        "waitlistedEvents": {
          "description": "Information to manage waitlisted catering events.",
          "$ref": "#/definitions/waitlistedEventsType"
        },
        "criteria": {
          "description": "Search criteria for fetching waitlisted catering events.",
          "$ref": "#/definitions/waitlistedEventsSearchType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "waitlistedEventProcessingInstructionsType": {
      "type": "string",
      "description": "A collection of supported processing instructions for waitlisted catering events.",
      "enum": [
        "IncreasePriority",
        "DecreasePriority",
        "ForceAvailability",
        "Reassign"
      ]
    },
    "waitlistedEventsSearchType": {
      "type": "object",
      "description": "Request object for retrieving waitlisted and current events holding the function space.",
      "properties": {
        "hotelId": {
          "description": "Hotel code of Function Space.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "functionSpaceCode": {
          "description": "Function space collection from which the waitlisted events to be fetch are scheduled.",
          "$ref": "#/definitions/codeListType"
        },
        "accountName": {
          "description": "Search a specific account's waitlisted events.",
          "type": "string"
        },
        "blockName": {
          "description": "Search a specific block's waitlisted events.",
          "type": "string"
        },
        "blockId": {
          "description": "Search a specific block's waitlisted events using a block Id.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "waitlistedTimeSpan": {
          "description": "Date range to search for waitlisted events.",
          "$ref": "#/definitions/dateTimeSpanType"
        }
      }
    },
    "blocksType": {
      "type": "object",
      "description": "A collection of Block objects or Unique IDs of Blocks.",
      "properties": {
        "blockInfo": {
          "description": "A collection of Blocks or Unique IDs of Blocks.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "object",
            "properties": {
              "block": {
                "description": "Provides detailed information regarding a block.",
                "$ref": "#/definitions/blockType"
              }
            }
          }
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        }
      }
    },
    "opportunityEvents": {
      "type": "object",
      "description": "Object containing details of the catering events which will be added to the Opportunity Block.",
      "properties": {
        "opportunityEventDetails": {
          "type": "array",
          "maxItems": 4000,
          "description": "Catering Event information getting added for Opportunity Block.",
          "items": {
            "$ref": "#/definitions/opportunityEventInfoType"
          }
        },
        "opportunityBlockInfo": {
          "description": "opportunityBlockInfo",
          "$ref": "#/definitions/opportunityBlockInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "opportunityBlockInfoType": {
      "type": "object",
      "description": "Opportunity Block Information",
      "properties": {
        "hotelId": {
          "description": "Unique Id that references an object uniquely in the system.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "blockId": {
          "description": "Unique Id that references an object uniquely in the system.",
          "$ref": "#/definitions/uniqueID_Type"
        },
        "blockTimeSpan": {
          "description": "Opportunity Block duration from blockStartDate and blockEndDate date and time.",
          "$ref": "#/definitions/dateTimeSpanType"
        }
      }
    },
    "opportunityEventInfoType": {
      "type": "object",
      "description": "Catering Event information.",
      "properties": {
        "opportunityEventDetail": {
          "description": "Detail opportunity event's information.",
          "$ref": "#/definitions/opportunityEventDetailType"
        },
        "eventNotes": {
          "description": "Event's notes.",
          "$ref": "#/definitions/eventNotesType"
        }
      }
    },
    "opportunityEventDetailType": {
      "type": "object",
      "description": "Information about the Catering Event which will be added to the Opportunity Block",
      "properties": {
        "eventName": {
          "description": "Name of event.",
          "$ref": "#/definitions/translationTextType60"
        },
        "eventType": {
          "description": "Type of event.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "day": {
          "description": "Identifies the days for which catering events will be added to the Opportunity Block.",
          "type": "string"
        },
        "quantity": {
          "description": "Identifies the quantity of the event type needed for the particular day, time and space time.",
          "type": "number"
        },
        "eventTimeSpan": {
          "description": "Event duration from eventStartDate and eventEndDate date and time.",
          "$ref": "#/definitions/dateTimeSpanType"
        },
        "eventStatus": {
          "description": "Status of the Event.",
          "$ref": "#/definitions/bookingStatusType"
        },
        "attendees": {
          "description": "Attendees defined for the catering event.",
          "$ref": "#/definitions/cateringEventsAttendeesType"
        },
        "doorcard": {
          "description": "It is the group details to display on the outside of a meeting functionSpace Details.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        }
      }
    },
    "resourceEvents": {
      "type": "object",
      "description": "Response object for fetching events.",
      "properties": {
        "resourceEventsSummaries": {
          "description": "Events matching the search criteria.",
          "$ref": "#/definitions/resourceEventsSummariesInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "resourceEventsSummariesInfoType": {
      "type": "object",
      "description": "Collection of events.",
      "properties": {
        "resourceEventSummary": {
          "description": "Contains resource events summary information",
          "type": "array",
          "maxItems": 200,
          "items": {
            "$ref": "#/definitions/resourceEventSummaryInfoType"
          }
        },
        "blockId": {
          "description": "Block ID for which the details are requested",
          "$ref": "#/definitions/uniqueID_Type"
        }
      }
    },
    "resourceEventSummaryInfoType": {
      "type": "object",
      "description": "Contains information about an event.",
      "properties": {
        "eventId": {
          "description": "Unique identifier of the event.",
          "$ref": "#/definitions/eventId"
        },
        "eventName": {
          "description": "Name of event.",
          "$ref": "#/definitions/translationTextType60"
        },
        "eventType": {
          "description": "Type of event.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "eventTimeSpan": {
          "description": "Pertain event duration from eventStartDate and eventEndDate date and time.",
          "$ref": "#/definitions/dateTimeSpanType"
        },
        "eventStatus": {
          "description": "Status details of the Event.",
          "$ref": "#/definitions/bookingStatusType"
        },
        "packageId": {
          "description": "Package Id of the Event.",
          "type": "number"
        },
        "masterEvent": {
          "description": "Indicates whether event is master event.",
          "type": "boolean"
        },
        "subEvent": {
          "description": "Flag to indicate if the event is a sub event.",
          "type": "boolean"
        },
        "alternateEvent": {
          "description": "Flag to indicate if the event is an alternate event.",
          "type": "boolean"
        },
        "room": {
          "description": "Room code of the function space.",
          "type": "string"
        }
      }
    },
    "transactionActionEnumType": {
      "type": "string",
      "enum": [
        "CREATE",
        "UPDATE",
        "DELETE"
      ]
    },
    "rESTPaginationGroup": {
      "type": "object",
      "description": "Provides Pagination Information for the REST API.",
      "properties": {
        "offset": {
          "description": "Indicates the index of the next applicable set(page).",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates number of records the API can return as per the API request limit sent. A maximum of 200 records can be only returned at a time.",
          "type": "integer"
        },
        "count": {
          "description": "Indicates number of records the API has returned actually as per the API request criteria.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether there are more records available to be returned as per the API request criteria or not.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Indicates total number of records available that can be returned as per the API request criteria.",
          "type": "integer"
        }
      }
    },
    "eventChangesByDateTimeSummaryType": {
      "description": "Event information for changed events by date time",
      "type": "object",
      "properties": {
        "hotelId": {
          "description": "The hotel code for changed event by date time.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "blockId": {
          "description": "Specifies the Block ID for the changed event by date time.",
          "$ref": "#/definitions/blockId"
        },
        "eventId": {
          "description": "Unique identifier of the changed event by date time.",
          "$ref": "#/definitions/eventId"
        },
        "startDate": {
          "description": "The start date for changed event by date time.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "description": "The end date for changed event by date time.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "eventStatus": {
          "description": "Status of the event.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "lastChangeDateTime": {
          "description": "Last change date and time for this event.",
          "type": "string",
          "format": "date-time"
        },
        "actionType": {
          "type": "string",
          "description": "Action performed on the Catering Event - CREATE, UPDATE, DELETE. When event is created/updated/deleted, then CREATE/UPDATE/DELETE will be set to actionType.",
          "$ref": "#/definitions/transactionActionEnumType"
        }
      }
    },
    "eventChangesByDateTimeSummary": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/rESTPaginationGroup"
        }
      ],
      "properties": {
        "eventList": {
          "description": "Collection of Catering Event changes by date and time.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/eventChangesByDateTimeSummaryType"
          }
        }
      }
    },
    "operaVersionNumberType": {
      "type": "string",
      "description": "Current Opera Version Number",
      "minLength": 0,
      "maxLength": 40
    },
    "pingDetail": {
      "type": "object",
      "description": "Response for Ping operation.",
      "properties": {
        "operaVersion": {
          "description": "Opera version number.",
          "$ref": "#/definitions/operaVersionNumberType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    }
  },
  "tags": [
    {
      "name": "EventManagement",
      "description": "The Event APIs will allow you to retrieve, create, manage and delete events and related event functionality such as event resources, catering packages and even event waitlists."
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}
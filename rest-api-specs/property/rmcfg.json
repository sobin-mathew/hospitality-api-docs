{
  "swagger": "2.0",
  "info": {
    "title": "OPERA Cloud Room Configuration API",
    "description": "APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>",
    "version": "24.4",
    "termsOfService": "https://www.oracle.com/legal/terms.html",
    "contact": {
      "email": "hospitality_apis_ww_grp@oracle.com"
    },
    "license": {
      "name": "UPL",
      "url": "https://opensource.org/licenses/upl"
    }
  },
  "schemes": [
    "https"
  ],
  "basePath": "/rm/config/v1",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/bedTypeRequests": {
      "get": {
        "summary": "Get Bed Type Requests",
        "description": "Use this API to return bed type requests based on search criteria such as fetchInactive, codes, wildCard, description.  <p> Bed types are referenced in room type configuration to identify the bed configuration in the room. <p>  <p><strong>OperationId:</strong>getBedTypeRequests</p>",
        "operationId": "getBedTypeRequests",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Bed Type Requests.",
            "schema": {
              "$ref": "#/definitions/bedTypeRequestsDetails"
            }
          },
          "204": {
            "description": "BedTypeRequests not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create Bed Type Requests",
        "description": "Use this API to create bed type requests. <p>Bed types are referenced in room type configuration to identify the bed configuration in the room.</p>  <p><strong>OperationId:</strong>postBedTypeRequests</p>",
        "operationId": "postBedTypeRequests",
        "parameters": [
          {
            "name": "bedTypeRequestsCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Bed Type Requests.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/bedTypeRequestsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/bedTypeRequests/{bedTypeRequestsId}": {
      "put": {
        "summary": "Change Bed Type Requests",
        "description": "Use this API to update bed type requests based on the bedTypeRequestsId, bedTypeRequestsToBeChanged. <p>Bed types are referenced in room type configuration to identify the bed configuration in the room.</p>  <p><strong>OperationId:</strong>putBedTypeRequests</p>",
        "operationId": "putBedTypeRequests",
        "parameters": [
          {
            "name": "bedTypeRequestsId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of Bed Type Requests."
          },
          {
            "name": "bedTypeRequestsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Bed Type Requests.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/bedTypeRequestsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete Bed Type Requests",
        "description": "Use this API to delete bed type requests based on the bedTypeRequestsId, bedTypeRequestsCodes. <p>Bed types are referenced in room type configuration to identify the bed configuration in the room.</p>  <p><strong>OperationId:</strong>deleteBedTypeRequests</p>",
        "operationId": "deleteBedTypeRequests",
        "parameters": [
          {
            "name": "bedTypeRequestsId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of Bed Type Requests."
          },
          {
            "name": "bedTypeRequestsCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/bedTypes": {
      "get": {
        "summary": "Get bed types",
        "description": "Use this API to return bed types based on search criteria such as fetchInactive, codes, wildCard, description.<p><strong>OperationId:</strong>getBedTypes</p>",
        "operationId": "getBedTypes",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Bed Types.",
            "schema": {
              "$ref": "#/definitions/bedTypesDetails"
            }
          },
          "204": {
            "description": "BedTypes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create a new Bed type",
        "description": "Use this API to create a new Bed type. <p><strong>OperationId:</strong>postBedTypes</p>",
        "operationId": "postBedTypes",
        "parameters": [
          {
            "name": "bedTypesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating a new Bed Type.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/bedTypesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/bedTypes/{bedTypesId}": {
      "put": {
        "summary": "Change an existing Bed type",
        "description": "Use this API to update an existing Bed type. <p><strong>OperationId:</strong>putBedTypes</p>",
        "operationId": "putBedTypes",
        "parameters": [
          {
            "name": "bedTypesId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of bed type"
          },
          {
            "name": "bedTypesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing an existing Bed Type.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/bedTypesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete an existing Bed type",
        "description": "Use this API to delete an existing Bed type. <p><strong>OperationId:</strong>deleteBedTypes</p>",
        "operationId": "deleteBedTypes",
        "parameters": [
          {
            "name": "bedTypesId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of bed type"
          },
          {
            "name": "bedTypeCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/buildingFloorMappings": {
      "get": {
        "summary": "Get Hotel level floor mappings to buildings",
        "description": "Use this API to get Hotel level floor mappings to buildings. <p><strong>OperationId:</strong>getBuildingFloorMappings</p>",
        "operationId": "getBuildingFloorMappings",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Specifies the hotel code for which floor mappings have to be searched.",
            "type": "string"
          },
          {
            "name": "buildingsCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching floor mappings to buildings.",
            "schema": {
              "$ref": "#/definitions/buildingFloorMappingsDetails"
            }
          },
          "204": {
            "description": "BuildingFloorMappings not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "put": {
        "summary": "Set Hotel level floor mappings to buildings",
        "description": "You can use this API to set Hotel level floor mappings to buildings. <p><strong>OperationId:</strong>setBuildingFloorMappings</p>",
        "operationId": "setBuildingFloorMappings",
        "parameters": [
          {
            "name": "setBuildingFloorMappings",
            "in": "body",
            "required": true,
            "description": "Request object for setting floor mappings to buildings.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/setBuildingFloorMappings"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/buildingGroups": {
      "get": {
        "summary": "Get Housekeeping Building Group info ",
        "description": "Use this API to return housekeeping building groups based on search criteria such as hotelId, codes, wildCard, descriptionWildCard. <p>Building groups are used to group multiple building together for the purpose of housekeeping task assignment; allowing task sheets to be generated per building group.</p> <p><strong>OperationId:</strong>getBuildingGroups</p>",
        "operationId": "getBuildingGroups",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Hotel associated with the Building/Building Group",
            "type": "string"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "descriptionWildCard",
            "in": "query",
            "required": false,
            "description": "The description or a part of the description based on which results should be filtered.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object after fetching Building Groups of the Hotel.",
            "schema": {
              "$ref": "#/definitions/buildingGroupsDetails"
            }
          },
          "204": {
            "description": "BuildingGroups not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create  Housekeeping Building Group",
        "description": "Use this API to create housekeeping building groups. <p>Building groups are used to group multiple building together for the purpose of housekeeping task assignment; allowing task sheets to be generated per building group.</p> <p><strong>OperationId:</strong>postBuildingGroups</p>",
        "operationId": "postBuildingGroups",
        "parameters": [
          {
            "name": "buildingGroupsCriteria",
            "in": "body",
            "required": true,
            "description": "Request object to create Building Group details of the Hotel.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/buildingGroupsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete  Housekeeping Building Group",
        "description": "Use this API to delete housekeeping building groups based on hotelIds, hotelId. <p>Building groups are used to group multiple building together for the purpose of housekeeping task assignment; allowing task sheets to be generated per building group.</p> <p><strong>OperationId:</strong>deleteBuildingGroups</p>",
        "operationId": "removeBuildingGroups",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel where the code is configured.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "put": {
        "summary": "Change Housekeeping Building Group",
        "description": "Use this API to update housekeeping building groups based on buildingGroupsToBeChanged. <p>Building groups are used to group multiple building together for the purpose of housekeeping task assignment; allowing task sheets to be generated per building group.</p> <p><strong>OperationId:</strong>changeBuildingGroups</p>",
        "operationId": "changeBuildingGroups",
        "parameters": [
          {
            "name": "buildingGroupsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object to change the Building Group details of the Hotel.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/buildingGroupsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/buildings": {
      "get": {
        "summary": "Get Building information",
        "description": "Use this API to return buildings based on search criteria such as hotelId, codes, wildCard, descriptionWildCard, buildingGroupCodes, buildingGroupWildCard. Buildings are used for the purpose of housekeeping task assignment; allowing task sheets to be generated per building. <p><strong>OperationId:</strong>getBuildings</p>",
        "operationId": "getBuildings",
        "parameters": [
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Hotel associated with the Building/Building Group",
            "type": "string"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "descriptionWildCard",
            "in": "query",
            "required": false,
            "description": "The description or a part of the description based on which results should be filtered.",
            "type": "string"
          },
          {
            "name": "buildingGroupCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "buildingGroupWildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object after fetching Building details of the Hotel.",
            "schema": {
              "$ref": "#/definitions/buildingsDetails"
            }
          },
          "204": {
            "description": "Buildings not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete Buildings",
        "description": "Use this API to delete buildings based on hotelIds, hotelId. Buildings are used for the purpose of housekeeping task assignment; allowing task sheets to be generated per building. <p><strong>OperationId:</strong>removeBuildings</p>",
        "operationId": "removeBuildings",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel where the code is configured.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "put": {
        "summary": "Change Buildings",
        "description": "Use this API to update buildings based on buildingsToBeChanged. Buildings are used for the purpose of housekeeping task assignment; allowing task sheets to be generated per building. <p><strong>OperationId:</strong>changeBuildings</p>",
        "operationId": "changeBuildings",
        "parameters": [
          {
            "name": "buildingsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object to change Building details of the Hotel.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/buildingsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create new Buildings",
        "description": "Use this API to create new buildings. Buildings are used for the purpose of housekeeping task assignment; allowing task sheets to be generated per building. <p><strong>OperationId:</strong>postBuildings</p>",
        "operationId": "postBuildings",
        "parameters": [
          {
            "name": "buildingsCriteria",
            "in": "body",
            "required": true,
            "description": "Request object to create Building details of the Hotel.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/buildingsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/floorTypes": {
      "get": {
        "summary": "Get Floor Types",
        "description": "Use this API to return floor types based on search criteria such as fetchInactive, codes, wildCard, description. <p><strong>OperationId:</strong>getFloorTypes</p>",
        "operationId": "getFloorTypes",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Floor Types.",
            "schema": {
              "$ref": "#/definitions/floorTypesDetails"
            }
          },
          "204": {
            "description": "FloorTypes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create Floor Types",
        "description": "Use this API to create floor types. <p><strong>OperationId:</strong>postFloorTypes</p>",
        "operationId": "postFloorTypes",
        "parameters": [
          {
            "name": "floorTypesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Floor Types.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/floorTypesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/floorTypes/{floorTypesId}": {
      "put": {
        "summary": "Change Floor Types",
        "description": "Use this API to update Floor Types. <p><strong>OperationId:</strong>putFloorTypes</p>",
        "operationId": "putFloorTypes",
        "parameters": [
          {
            "name": "floorTypesId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of Floor Types."
          },
          {
            "name": "floorTypesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Floor Types.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/floorTypesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete Floor Types",
        "description": "Use this API to delete floor types based on floorTypesId, floorTypesCodes. <p><strong>OperationId:</strong>deleteFloorTypes</p>",
        "operationId": "deleteFloorTypes",
        "parameters": [
          {
            "name": "floorTypesId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of Floor Types."
          },
          {
            "name": "floorTypesCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/floors": {
      "get": {
        "summary": "Get floors",
        "description": "Use this API to return floors based on search criteria such as hotelIds, floorCodes. Floor is referencing the story of a building that hotel rooms are located on. <p><strong>OperationId:</strong>getFloors</p>",
        "operationId": "getFloors",
        "parameters": [
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "floorCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching floors at the hotel level.",
            "schema": {
              "$ref": "#/definitions/floorsDetails"
            }
          },
          "204": {
            "description": "Floors not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create floors",
        "description": "Use this API to create floors. Floor is referencing the story of a building that hotel rooms are located on. <p><strong>OperationId:</strong>postFloors</p>",
        "operationId": "postFloors",
        "parameters": [
          {
            "name": "floorsCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating floors at the hotel level.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/floorsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/floors/{floorsId}": {
      "put": {
        "summary": "Change floors",
        "description": "Use this API to update floors based on floorsId, floorsToBeChanged.Floor is referencing the story of a building that hotel rooms are located on. <p><strong>OperationId:</strong>changeFloors</p>",
        "operationId": "changeFloors",
        "parameters": [
          {
            "name": "floorsId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of floor."
          },
          {
            "name": "floorsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing floors at the hotel level.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/floorsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete floors",
        "description": "Use this API to delete floors based on floorsId, hotelId. Floor is referencing the story of a building that hotel rooms are located on. <p><strong>OperationId:</strong>deleteFloors</p>",
        "operationId": "removeFloors",
        "parameters": [
          {
            "name": "floorsId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of floor."
          },
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Hotel where the code is configured.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/action/validate": {
      "put": {
        "summary": "Validate room types room class is currently in use",
        "description": "Use this API to validate room types room class is currently in use for a specific hotel based on search criteria such as hotelId, validateRoomClassInUse. <p><strong>OperationId:</strong>validateRoomClassInUse</p>",
        "operationId": "validateRoomClassInUse",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "validateRoomClassInUse",
            "in": "body",
            "required": true,
            "description": "Request object to validate if room type's room class is currently in use.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/validateRoomClassInUse"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/creditRules": {
      "get": {
        "summary": "Get Housekeeping Credit Rules",
        "description": "Use this API to return housekeeping credit rules for a specific hotel based on search criteria such as hotelId, ruleCodes, ruleType, includeInactive. <p> Housekeeping credit rules are used to add additional credits to the housekeeping tasks sheets depending on configured values i.e. travel credits between buildings, or floors, or inventory items i.e. cribs, rollaways.</p> <p><strong>OperationId:</strong>getHousekeepingCreditRules</p>",
        "operationId": "getHousekeepingCreditRules",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "ruleCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "ruleType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "A Facility Rule will add extra credit to a task assignment sheet when certain task conditions exist. Multiple Facility Task Rules will be applied on top of each other if the conditions are met. A Miscellaneous Rule will add extra credit to a task assignment sheet when the attendants are occupied with anything other than cleaning a room, for example a team meeting. A Special Rule will add extra credit to a task assignment sheet when the defined Specials are attached to a reservation. A Traveling Rule will add extra credit to a task assignment sheet when rooms from multiple Buildings, Section Groups, Sections and/or Floors are assigned. An Inventory Item Rule will add extra credit to a task assignment sheet when the defined Items are attached to a reservation.",
            "uniqueItems": true,
            "enum": [
              "FacilityTask",
              "Miscellaneous",
              "Special",
              "Travelling",
              "ItemInventory"
            ]
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "Flag to indicate if inactive credit rules should be included.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching housekeeping credit rules.",
            "schema": {
              "$ref": "#/definitions/housekeepingCreditRulesDetails"
            }
          },
          "204": {
            "description": "HousekeepingCreditRules not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create Housekeeping Credit Rules",
        "description": "Use this API to create housekeeping credit rules for a specific hotel. <p>Housekeeping credit rules are used to add additional credits to the housekeeping tasks sheets depending on configured values i.e. travel credits between buildings, or floors, or inventory items i.e. cribs, rollaways. </P> <p><strong>OperationId:</strong>postHousekeepingCreditRules</p>",
        "operationId": "postHousekeepingCreditRules",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "housekeepingCreditRulesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating housekeeping credit rules.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/housekeepingCreditRulesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/creditRules/{code}": {
      "put": {
        "summary": "Change Housekeeping Credit Rules",
        "description": "Use this API to update housekeeping credit rules for a specific hotel based on code, hotelId, housekeepingCreditRulesToBeChanged. <p>Housekeeping credit rules are used to add additional credits to the housekeeping tasks sheets depending on configured values i.e. travel credits between buildings, or floors, or inventory items i.e. cribs, rollaways.</p> <p><strong>OperationId:</strong>changeHousekeepingCreditRules</p>",
        "operationId": "changeHousekeepingCreditRules",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of rule code."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "housekeepingCreditRulesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing housekeeping credit rules.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/housekeepingCreditRulesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete Housekeeping Credit Rules",
        "description": "Use this API to delete housekeeping credit rules for a specific hotel based on code, hotelId. <p>Housekeeping credit rules are used to add additional credits to the housekeeping tasks sheets depending on configured values i.e. travel credits between buildings, or floors, or inventory items i.e. cribs, rollaways.</P> <p><strong>OperationId:</strong>removeHousekeepingCreditRules</p>",
        "operationId": "removeHousekeepingCreditRules",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of Code."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/housekeepingAttendants": {
      "get": {
        "summary": "Get Housekeeping Attendants",
        "description": "Use this API to return housekeeping attendants for a specific hotel based on search criteria such as hotelId, name, attendantsCodes, wildCard, includeInactive. OPERA Cloud enables you to store housekeeping attendant information, daily assignments, and tracks credits or number of rooms cleaned by each attendant. <p><strong>OperationId:</strong>getHousekeepingAttendants</p>",
        "operationId": "getHousekeepingAttendants",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "description": "Partial name of an attendant.",
            "type": "string"
          },
          {
            "name": "attendantsCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "Indicator that tells whether to include inactive in search results.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Housekeeping Attendants.",
            "schema": {
              "$ref": "#/definitions/housekeepingAttendantsDetails"
            }
          },
          "204": {
            "description": "HousekeepingAttendants not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create new housekeeping attendants configuration",
        "description": "Use this API to create housekeeping attendants for a specific hotel. OPERA Cloud enables you to store housekeeping attendant information, daily assignments, and tracks credits or number of rooms cleaned by each attendant. <p><strong>OperationId:</strong>postHousekeepingAttendants</p>",
        "operationId": "postHousekeepingAttendants",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "housekeepingAttendantsCriteria",
            "in": "body",
            "required": true,
            "description": "Add housekeeping attendant(S).",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/housekeepingAttendantsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/housekeepingAttendants/{attendantId}": {
      "put": {
        "summary": "Change housekeeping attendants configuration",
        "description": "Use this API to update housekeeping attendants for a specific hotel based on attendantId, hotelId, housekeepingAttendantsToBeChanged. <p>OPERA Cloud enables you to store housekeeping attendant information, daily assignments, and tracks credits or number of rooms cleaned by each attendant.</p> <p><strong>OperationId:</strong>changeHousekeepingAttendants</p>",
        "operationId": "changeHousekeepingAttendants",
        "parameters": [
          {
            "name": "attendantId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of attendant."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "housekeepingAttendantsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Modify housekeeping attendants",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/housekeepingAttendantsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete housekeeping attendants configuration",
        "description": "Use this API to delete housekeeping attendants for a specific hotel based on attendantId, hotelId, inactive.OPERA Cloud enables you to store housekeeping attendant information, daily assignments, and tracks credits or number of rooms cleaned by each attendant.<p><strong>OperationId:</strong>removeHousekeepingAttendants</p>",
        "operationId": "removeHousekeepingAttendants",
        "parameters": [
          {
            "name": "attendantId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of attendant."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "inactive",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Indicates whether the attendant is active or not.",
            "items": {
              "type": "boolean"
            },
            "required": false
          },
          {
            "name": "name",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "An attendant ID.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "phoneNo",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "An attendant's phone No.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "section",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Section where the attendant is assigned.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "floor",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Floor where the attendant is assigned.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "job",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Job which the attendant is assigned.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "friday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "monday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "saturday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sunday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "thursday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "tuesday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "wednesday",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "appUser",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Application User ID assigned for the attendant.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/housekeepingRoomSchedules": {
      "get": {
        "summary": "Get housekeeping room schedules",
        "description": "Use this API to return housekeeping room schedules for a specific hotel based on search criteria such as hotelId, roomTypeCodes, housekeepingRoomScheduleCodes. <p>Housekeeping room schedules reference housekeeping tasks and housekeeping codes associated to a room type.</p> <p><strong>OperationId:</strong>getHousekeepingRoomSchedules</p>",
        "operationId": "getHousekeepingRoomSchedules",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "roomTypeCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "housekeepingRoomScheduleCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching housekeeping tasks and housekeeping codes associated to a room type.",
            "schema": {
              "$ref": "#/definitions/housekeepingRoomSchedulesDetails"
            }
          },
          "204": {
            "description": "HousekeepingRoomSchedules not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create housekeeping room schedules",
        "description": "Use this API to create housekeeping room schedules for a specific hotel. Housekeeping room schedules reference housekeeping tasks and housekeeping codes associated to a room type. <p><strong>OperationId:</strong>postHousekeepingRoomSchedules</p>",
        "operationId": "postHousekeepingRoomSchedules",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "housekeepingRoomSchedulesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for associating housekeeping tasks and housekeeping codes to a room type.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/housekeepingRoomSchedulesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/housekeepingRoomSchedules/{roomScheduleId}": {
      "put": {
        "summary": "Change housekeeping room schedules",
        "description": "Use this API to update housekeeping room schedules for a specific hotel based on the roomScheduleId. Housekeeping room schedules reference housekeeping tasks and housekeeping codes associated to a room type. <p><strong>OperationId:</strong>changeHousekeepingRoomSchedules</p>",
        "operationId": "changeHousekeepingRoomSchedules",
        "parameters": [
          {
            "name": "roomScheduleId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of room scheduled."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "housekeepingRoomSchedulesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing housekeeping tasks and housekeeping codes associated to a room type.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/housekeepingRoomSchedulesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/housekeepingSectionGroups": {
      "get": {
        "summary": "Get Housekeeping Section Groups",
        "description": "Use this API to return housekeeping section groups for a specific hotel based on search criteria such as hotelId, housekeepingSectionGroupsCodes. <p>Housekeeping section groups and sections can be used to group rooms into sections or divisions meaningful to the housekeeping attendants with respect to floor numbers, various buildings, and group of rooms typically cleaned by one attendant during the day or turndowns during the evening.</p> <p><strong>OperationId:</strong>getHousekeepingSectionGroups</p>",
        "operationId": "getHousekeepingSectionGroups",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "List of Hotels.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "housekeepingSectionGroupsCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching housekeeping section Groups.",
            "schema": {
              "$ref": "#/definitions/housekeepingSectionGroupsDetails"
            }
          },
          "204": {
            "description": "HousekeepingSectionGroups not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create Housekeeping Section Groups",
        "description": "Use this API to create housekeeping section groups for a specific hotel. <p>Housekeeping section groups and sections can be used to group rooms into sections or divisions meaningful to the housekeeping attendants with respect to floor numbers, various buildings, and group of rooms typically cleaned by one attendant during the day or turndowns during the evening.</P> <p><strong>OperationId:</strong>postHousekeepingSectionGroups</p>",
        "operationId": "postHousekeepingSectionGroups",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "housekeepingSectionGroupsCriteria",
            "in": "body",
            "required": true,
            "description": "Request object to create House Keeping Section Groups for resort.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/housekeepingSectionGroupsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/housekeepingSectionGroups/{code}": {
      "delete": {
        "summary": "Delete Housekeeping Section Groups",
        "description": "Use this API to delete housekeeping section groups for a specific hotel based on hotelId, housekeepingSectionGroupsCode.<p> Housekeeping section groups and sections can be used to group rooms into sections or divisions meaningful to the housekeeping attendants with respect to floor numbers, various buildings, and group of rooms typically cleaned by one attendant during the day or turndowns during the evening.</p><p><strong>OperationId:</strong>removeHousekeepingSectionGroups</p>",
        "operationId": "removeHousekeepingSectionGroups",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of house keeping section group."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "housekeepingSectionGroupsCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "put": {
        "summary": "Change Housekeeping Section Groups",
        "description": "Use this API to update housekeeping section groups for a specific hotel based on code, hotelId, housekeepingSectionGroupsToBeChanged.<p>Housekeeping section groups and sections can be used to group rooms into sections or divisions meaningful to the housekeeping attendants with respect to floor numbers, various buildings, and group of rooms typically cleaned by one attendant during the day or turndowns during the evening.</p><p><strong>OperationId:</strong>changeHousekeepingSectionGroups</p>",
        "operationId": "changeHousekeepingSectionGroups",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of house keeping section group."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "housekeepingSectionGroupsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for modifying housekeeping section groups in resort.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/housekeepingSectionGroupsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/housekeepingSections": {
      "get": {
        "summary": "Get Housekeeping Sections",
        "description": "Use this API to return housekeeping sections for a specific hotel based on search criteria such as hotelId, includeInactive, housekeepingSectionsCodes, description. <p>Housekeeping section groups and sections can be used to group rooms into sections or divisions meaningful to the housekeeping attendants with respect to floor numbers, various buildings, and group of rooms typically cleaned by one attendant during the day or turndowns during the evening.</p> <p><strong>OperationId:</strong>getHousekeepingSections</p>",
        "operationId": "getHousekeepingSections",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "List of Hotels.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "Indicates if the Section Code is active.",
            "type": "boolean"
          },
          {
            "name": "housekeepingSectionsCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the Section.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching housekeeping section codes.",
            "schema": {
              "$ref": "#/definitions/housekeepingSectionsDetails"
            }
          },
          "204": {
            "description": "HousekeepingSections not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create Housekeeping Sections",
        "description": "Use this API to create housekeeping sections for a specific hotel. Housekeeping section groups and sections can be used to group rooms into sections or divisions meaningful to the housekeeping attendants with respect to floor numbers, various buildings, and group of rooms typically cleaned by one attendant during the day or turndowns during the evening. <p><strong>OperationId:</strong>postHousekeepingSections</p>",
        "operationId": "postHousekeepingSections",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "housekeepingSectionsCriteria",
            "in": "body",
            "required": true,
            "description": "Add housekeeping section codes configurations for resort.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/housekeepingSectionsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/housekeepingSections/{code}": {
      "delete": {
        "summary": "Delete Housekeeping Sections",
        "description": "Use this API to delete housekeeping sections for a specific hotel based on the code. Housekeeping section groups and sections can be used to group rooms into sections or divisions meaningful to the housekeeping attendants with respect to floor numbers, various buildings, and group of rooms typically cleaned by one attendant during the day or turndowns during the evening. <p><strong>OperationId:</strong>removeHousekeepingSections</p>",
        "operationId": "removeHousekeepingSections",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of house keeping sections."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "put": {
        "summary": "Change Housekeeping Sections",
        "description": "Use this API to update housekeeping sections for a specific hotel based on code, hotelId. Housekeeping section groups and sections can be used to group rooms into sections or divisions meaningful to the housekeeping attendants with respect to floor numbers, various buildings, and group of rooms typically cleaned by one attendant during the day or turndowns during the evening. <p><strong>OperationId:</strong>changeHousekeepingSections</p>",
        "operationId": "changeHousekeepingSections",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of house keeping sections."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "housekeepingSectionsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Modify housekeeping section codes in resort configurations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/housekeepingSectionsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/housekeepingSupplyCodes": {
      "get": {
        "summary": "Get Housekeeping Codes",
        "description": "Use this API to return housekeeping supply codes for a specific hotel based on search criteria such as hotelId, codes, wildCard. Housekeeping supplies such as pillow cases, hand towels, bath towels, shampoo can be used when scheduling housekeeping tasks. <p><strong>OperationId:</strong>getHouseKeepingSupplyCodes</p>",
        "operationId": "getHouseKeepingSupplyCodes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching housekeeping codes.",
            "schema": {
              "$ref": "#/definitions/housekeepingCodesDetails"
            }
          },
          "204": {
            "description": "HouseKeepingSupplyCodes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create Housekeeping Codes",
        "description": "Use this API to create housekeeping supply codes for a specific hotel. Housekeeping supplies such as pillow cases, hand towels, bath towels, shampoo can be used when scheduling housekeeping tasks. <p><strong>OperationId:</strong>postHousekeepingSupplyCodes</p>",
        "operationId": "postHousekeepingSupplyCodes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "housekeepingCodesCriteria",
            "in": "body",
            "required": true,
            "description": "Add housekeeping codes configurations for property.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/housekeepingCodesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/housekeepingSupplyCodes/{code}": {
      "delete": {
        "summary": "Delete Housekeeping Codes",
        "description": "Use this API to delete housekeeping supply codes for a specific hotel based on code, hotelId, housekeepingCodes, sequence. Housekeeping supplies such as pillow cases, hand towels, bath towels, shampoo can be used when scheduling housekeeping tasks. <p><strong>OperationId:</strong>removeHousekeepingSupplyCodes</p>",
        "operationId": "removeHousekeepingSupplyCodes",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of house keeping."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "housekeepingCodes",
            "in": "query",
            "required": false,
            "description": "Code for the code type.",
            "type": "string"
          },
          {
            "name": "sequence",
            "in": "query",
            "required": false,
            "description": "Display sequence for the housekeeping task.",
            "type": "number"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "put": {
        "summary": "Change Housekeeping Codes",
        "description": "Use this API to update housekeeping supply codes for a specific hotel based on code, hotelId, housekeepingCodesToBeChanged. Housekeeping supplies such as pillow cases, hand towels, bath towels, shampoo can be used when scheduling housekeeping tasks. <p><strong>OperationId:</strong>changeHousekeepingSupplyCodes</p>",
        "operationId": "changeHousekeepingSupplyCodes",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of house keeping."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "housekeepingCodesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Modify housekeeping codes in resort configurations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/housekeepingCodesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/housekeepingTaskSheetRooms": {
      "get": {
        "summary": "Get information related to housekeeping tasksheet rooms",
        "description": "Use this API to return information related to housekeeping tasksheet rooms for a specific hotel based on search criteria such as hotelId, building, floor, roomType, daySection, eveningSection, fromRoom, toRoom. Task Sheets inform housekeeping room attendants about their daily work assignments; providing a list of rooms assigned to attendants, any special instructions about specific rooms, and related reservations details. <p><strong>OperationId:</strong>getHousekeepingTaskSheetRooms</p>",
        "operationId": "getHousekeepingTaskSheetRooms",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "building",
            "in": "query",
            "required": false,
            "description": "Building code for which the housekeeping rooms have to be searched. This criteria can be applied only if the BUILDINGS parameter is active.",
            "type": "string"
          },
          {
            "name": "floor",
            "in": "query",
            "required": false,
            "description": "Floor code for which the housekeeping rooms have to be searched",
            "type": "string"
          },
          {
            "name": "roomType",
            "in": "query",
            "required": false,
            "description": "Room type for which the housekeeping rooms have to be searched",
            "type": "string"
          },
          {
            "name": "daySection",
            "in": "query",
            "required": false,
            "description": "Day section code for which the housekeeping rooms have to be searched. This criteria can be applied only if the HOUSEKEEPING_SECTIONS parameter is active.",
            "type": "string"
          },
          {
            "name": "eveningSection",
            "in": "query",
            "required": false,
            "description": "Evening section code for which the housekeeping rooms have to be searched. This criteria can be applied only if the HOUSEKEEPING_SECTIONS parameter is active.",
            "type": "string"
          },
          {
            "name": "fromRoom",
            "in": "query",
            "required": false,
            "description": "From Room code for which the housekeeping rooms have to be searched",
            "type": "string"
          },
          {
            "name": "toRoom",
            "in": "query",
            "required": false,
            "description": "To Room code for which the housekeeping rooms have to be searched",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching details about housekeeping tasksheet rooms.",
            "schema": {
              "$ref": "#/definitions/housekeepingTaskSheetRoomsDetails"
            }
          },
          "204": {
            "description": "HousekeepingTaskSheetRooms not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "put": {
        "summary": " set information related to housekeeping tasksheet rooms",
        "description": "Use this API to update information related to housekeeping tasksheet rooms for a specific hotel based on hotelId, setHousekeepingTaskSheetRooms.Task Sheets inform housekeeping room attendants about their daily work assignments; providing a list of rooms assigned to attendants, any special instructions about specific rooms, and related reservations details. <p><strong>OperationId:</strong>setHousekeepingTaskSheetRooms</p>",
        "operationId": "setHousekeepingTaskSheetRooms",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "setHousekeepingTaskSheetRooms",
            "in": "body",
            "required": true,
            "description": "Request object for setting details about housekeeping tasksheet rooms.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/setHousekeepingTaskSheetRooms"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/housekeepingTasks": {
      "get": {
        "summary": "Get Housekeeping Tasks",
        "description": "Use this API to return housekeeping tasks for a specific hotel based on search criteria such as hotelId, taskCodes, wildCard, includeInactive. Task codes enable you to create various housekeeping task sheets (for example, daily cleaning, mattress turning, inspections, turndown, etc.). <p><strong>OperationId:</strong>getHousekeepingTasks</p>",
        "operationId": "getHousekeepingTasks",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "taskCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "Flag to indicate if inactive tasks should be included.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching housekeeping tasks.",
            "schema": {
              "$ref": "#/definitions/housekeepingTasksDetails"
            }
          },
          "204": {
            "description": "HousekeepingTasks not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create Housekeeping Tasks",
        "description": "Use this API to create housekeeping tasks for a specific hotel. Task codes enable you to create various housekeeping task sheets (for example, daily cleaning, mattress turning, inspections, turndown, etc.). <p><strong>OperationId:</strong>postHousekeepingTasks</p>",
        "operationId": "postHousekeepingTasks",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "housekeepingTasksCriteria",
            "in": "body",
            "required": true,
            "description": "Add housekeeping tasks configurations for resort.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/housekeepingTasksCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/housekeepingTasks/{code}": {
      "delete": {
        "summary": "Delete Housekeeping Tasks",
        "description": "Use this API to delete housekeeping tasks for a specific hotel based on code, hotelId, forceRemove. Task codes enable you to create various housekeeping task sheets (for example, daily cleaning, mattress turning, inspections, turndown, etc.). <p><strong>OperationId:</strong>removeHousekeepingTasks</p>",
        "operationId": "removeHousekeepingTasks",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of task."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "forceRemove",
            "in": "query",
            "required": false,
            "description": "Flag to indicate if records that are marked as \"protected\" can be removed. If false, any attempt to remove records that are protected will return an error.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "put": {
        "summary": "Change Housekeeping Tasks",
        "description": "Use this API to update housekeeping tasks for a specific hotel based on code, hotelId, housekeepingTasksToBeChanged. Task codes enable you to create various housekeeping task sheets (for example, daily cleaning, mattress turning, inspections, turndown, etc.).<p><strong>OperationId:</strong>changeHousekeepingTasks</p>",
        "operationId": "changeHousekeepingTasks",
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of task."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "housekeepingTasksToBeChanged",
            "in": "body",
            "required": true,
            "description": "Modify housekeeping tasks in resort configurations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/housekeepingTasksToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/outOfOrderServiceReasons": {
      "get": {
        "summary": "Get Out Of Order Service Reasons",
        "description": "Use this API to return out of order service reasons for a specific hotel based on search criteria such as hotelId, includeInactive, limit offset, reasonCodes. Out of order (OO) and out of service (OS) are two additional housekeeping statuses. These options are used when changing the status for rooms that should not be sold due to damage, maintenance, low occupancy wing, etc. <p><strong>OperationId:</strong>getOutOfOrderServiceReasons</p> <p>The maximum allowable limit for this API is <strong>1000</strong>.</p>",
        "operationId": "getOutOfOrderServiceReasons",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "List of Hotels.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "Indicator that tells whether to include inactive out of order/service reasons in search results.",
            "type": "boolean"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "reasonCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Out of Order/Service Reason(s).",
            "schema": {
              "$ref": "#/definitions/outOfOrderServiceReasonsDetails"
            }
          },
          "204": {
            "description": "OutOfOrderServiceReasons not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create Out Of Order Service Reasons",
        "description": "Use this API to create out of order service reasons for a specific hotel. Out of order (OO) and out of service (OS) are two additional housekeeping statuses. These options are used when changing the status for rooms that should not be sold due to damage, maintenance, low occupancy wing, etc. <p><strong>OperationId:</strong>postOutOfOrderServiceReasons</p>",
        "operationId": "postOutOfOrderServiceReasons",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "outOfOrderServiceReasonsCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating new out of order/service reasons for hotels.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/outOfOrderServiceReasonsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/outOfOrderServiceReasons/{reasonCode}": {
      "put": {
        "summary": "Change Out Of Order Service Reasons",
        "description": "Use this API to update out of order service reasons for a specific hotel based on reasonCode, hotelId, outOfOrderServiceReasonsToBeChanged.Out of order (OO) and out of service (OS) are two additional housekeeping statuses. These options are used when changing the status for rooms that should not be sold due to damage, maintenance, low occupancy wing, etc.<p><strong>OperationId:</strong>changeOutOfOrderServiceReasons</p>",
        "operationId": "changeOutOfOrderServiceReasons",
        "parameters": [
          {
            "name": "reasonCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of reason."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "outOfOrderServiceReasonsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for modifying out of order/service reasons for hotels.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/outOfOrderServiceReasonsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete Out Of Order Service Reasons",
        "description": "Use this API to delete out of order service reasons for a specific hotel based on reasonCode, hotelId. Out of order (OO) and out of service (OS) are two additional housekeeping statuses. These options are used when changing the status for rooms that should not be sold due to damage, maintenance, low occupancy wing, etc. <p><strong>OperationId:</strong>removeOutOfOrderServiceReasons</p>",
        "operationId": "removeOutOfOrderServiceReasons",
        "parameters": [
          {
            "name": "reasonCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of reason."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/rateGroups": {
      "get": {
        "summary": "Get Room Groups",
        "description": "Use this API to get Room Groups. <p><strong>OperationId:</strong>getRoomGroups</p>",
        "operationId": "getRoomGroups",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Room Groups.",
            "schema": {
              "$ref": "#/definitions/roomGroupsDetails"
            }
          },
          "204": {
            "description": "RoomGroups not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create Room Groups",
        "description": "Use this API to create Room Groups. <p><strong>OperationId:</strong>postRoomGroups</p>",
        "operationId": "postRoomGroups",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "roomGroupsCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Room Groups.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomGroupsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/rateGroups/{rateGroupCode}": {
      "put": {
        "summary": "Change Room Groups",
        "description": "Use this API to update Room Groups. <p><strong>OperationId:</strong>changeRoomGroups</p>",
        "operationId": "changeRoomGroups",
        "parameters": [
          {
            "name": "rateGroupCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of rate group."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "roomGroupsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Room Groups.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomGroupsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete Room Groups",
        "description": "Use this API to delete Room Groups. <p><strong>OperationId:</strong>removeRoomGroups</p>",
        "operationId": "removeRoomGroups",
        "parameters": [
          {
            "name": "rateGroupCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of rate group."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "roomGroupsCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Configuration code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/roomClasses": {
      "get": {
        "summary": "Get Room Classes",
        "description": "Retrieve a list of a properties Room Classes. <p><strong>OperationId:</strong>getRoomClasses</p>",
        "operationId": "getRoomClasses",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "List of Hotels.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "roomClassCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching existing hotel level room classes.",
            "schema": {
              "$ref": "#/definitions/roomClassesDetails"
            }
          },
          "204": {
            "description": "RoomClasses not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create Room Class",
        "description": "Use this API to create a new hotel level room class. <p><strong>OperationId:</strong>postRoomClass</p>",
        "operationId": "postRoomClass",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "roomClassCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating a new hotel level room class.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomClassCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/roomClasses/{roomClassId}": {
      "put": {
        "summary": "Update a Room Class",
        "description": "Use this API to update an existing properties Room Class. <p><strong>OperationId:</strong>putRoomClass</p>",
        "operationId": "putRoomClass",
        "parameters": [
          {
            "name": "roomClassId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of room class."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "roomClassToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing an existing hotel level room class.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomClassToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete a Room Class",
        "description": "Use this API to delete an existing properties Room Class. <p><strong>OperationId:</strong>deleteRoomClass</p>",
        "operationId": "deleteRoomClass",
        "parameters": [
          {
            "name": "roomClassId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of room class."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "roomClass",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/roomConditions": {
      "get": {
        "summary": "Get room condition configuration ",
        "description": "Use this API to get room condition configuration . <p><strong>OperationId:</strong>getResortRoomConditions</p>",
        "operationId": "getResortRoomConditions",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "List of Hotels.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "roomConditionCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "inactive",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for information regarding room condition configuration in a resort.",
            "schema": {
              "$ref": "#/definitions/resortRoomConditionsDetails"
            }
          },
          "204": {
            "description": "ResortRoomConditions not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create room condition configuration ",
        "description": "Use this API to create room condition configuration . <p><strong>OperationId:</strong>postResortRoomCondition</p>",
        "operationId": "postResortRoomCondition",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "resortRoomConditionCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for Create Room Condition.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/resortRoomConditionCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/roomConditions/{roomConditionCode}": {
      "put": {
        "summary": "Change room condition configuration ",
        "description": "Use this API to update room condition configuration . <p><strong>OperationId:</strong>changeResortRoomCondition</p>",
        "operationId": "changeResortRoomCondition",
        "parameters": [
          {
            "name": "roomConditionCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of template."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "resortRoomConditionToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for Modifying Room Condition configuration in a resort.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/resortRoomConditionToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete room condition configuration ",
        "description": "Use this API to delete room condition configuration . <p><strong>OperationId:</strong>removeResortRoomCondition</p>",
        "operationId": "removeResortRoomCondition",
        "parameters": [
          {
            "name": "roomConditionCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of template."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/roomFeatures": {
      "get": {
        "summary": "Get hotel room features",
        "description": "Use this API to return room features for a specific property based on search criteria such as codes, wildCard.<p><strong>OperationId:</strong>getRoomFeatures</p>",
        "operationId": "getRoomFeatures",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "List of Hotels.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object to fetch room features of hotel.",
            "schema": {
              "$ref": "#/definitions/roomFeaturesDetails"
            }
          },
          "204": {
            "description": "RoomFeatures not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "put": {
        "summary": "Change Hotel Room Features",
        "description": "Use this API to update Hotel Room Features. <p><strong>OperationId:</strong>changeRoomFeatures</p>",
        "operationId": "changeRoomFeatures",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "roomFeaturesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing room features of hotel.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomFeaturesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create Hotel Room Features",
        "description": "Use this API to create Hotel Room Features. <p><strong>OperationId:</strong>postRoomFeatures</p>",
        "operationId": "postRoomFeatures",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "roomFeaturesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating room features of hotel.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomFeaturesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete Hotel Room Features",
        "description": "Use this API to delete Hotel Room Features. <p><strong>OperationId:</strong>removeRoomFeatures</p>",
        "operationId": "removeRoomFeatures",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "genericHotelParentCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Specifies the code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "genericHotelParentCodesGroup",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Specifies the group.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/roomMaintenanceReasons": {
      "get": {
        "summary": "Get Hotel Room Maintenance Reasons",
        "description": "Use this API to get Hotel Room Maintenance Reasons. <p><strong>OperationId:</strong>getHotelRoomMaintenanceReasons</p> <p>The maximum allowable limit for this API is <strong>1000</strong>.</p>",
        "operationId": "getHotelRoomMaintenanceReasons",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "List of Hotels.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "roomMaintenanceReasonCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "Inactive flag - whether or not to display inactive records",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching room maintenance reasons for a hotel.",
            "schema": {
              "$ref": "#/definitions/hotelRoomMaintenanceReasonsDetails"
            }
          },
          "204": {
            "description": "HotelRoomMaintenanceReasons not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create Hotel Room Maintenance Reasons",
        "description": "Use this API to create Hotel Room Maintenance Reasons. <p><strong>OperationId:</strong>postHotelRoomMaintenanceReasons</p>",
        "operationId": "postHotelRoomMaintenanceReasons",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelRoomMaintenanceReasonsCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating new room maintenance reasons for a hotel.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelRoomMaintenanceReasonsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/roomMaintenanceReasons/{reasonCode}": {
      "put": {
        "summary": "Change Hotel Room Maintenance Reasons",
        "description": "Use this API to update Hotel Room Maintenance Reasons. <p><strong>OperationId:</strong>changeHotelRoomMaintenanceReasons</p>",
        "operationId": "changeHotelRoomMaintenanceReasons",
        "parameters": [
          {
            "name": "reasonCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of reason."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelRoomMaintenanceReasonsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for modifying room maintenance reasons for a hotel.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/hotelRoomMaintenanceReasonsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete Hotel Room Maintenance Reasons",
        "description": "Use this API to delete Hotel Room Maintenance Reasons. <p><strong>OperationId:</strong>removeHotelRoomMaintenanceReasons</p>",
        "operationId": "removeHotelRoomMaintenanceReasons",
        "parameters": [
          {
            "name": "reasonCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of reason."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/roomSchedules/{sequenceId}": {
      "delete": {
        "summary": "Delete housekeeping room schedules",
        "description": "Use this API to remove the housekeeping room schedule for a specific property based on hotleId and sequence number of task. <p><strong>OperationId:</strong> removeHousekeepinSchedule </p>",
        "operationId": "removeHousekeepingSchedule",
        "parameters": [
          {
            "name": "sequenceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "description": "Unique sequence number of room scheduled."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 20,
            "description": "Unique ID of hotel."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/roomType/{roomTypeCode}": {
      "get": {
        "summary": "Get Room Type Information",
        "description": "Use this API to get Room Type details of a Property. The search criteria can include a list of Room Types and the  Property (hotelID). <p><strong>OperationId:</strong>getRoomTypeInfo</p>",
        "operationId": "getRoomTypeInfo",
        "parameters": [
          {
            "name": "roomTypeCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of room type."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching room type information.",
            "schema": {
              "$ref": "#/definitions/roomTypeInfoDetails"
            }
          },
          "204": {
            "description": "RoomTypeInfo not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/roomTypeCodes/{roomTypeCode}/housekeepingRoomSchedules/{roomScheduleId}": {
      "delete": {
        "summary": "Delete housekeeping room schedules",
        "description": "Use this API to delete housekeeping room schedules. <p><strong>OperationId:</strong>removeHousekeepingRoomSchedules</p>",
        "operationId": "removeHousekeepingRoomSchedules",
        "parameters": [
          {
            "name": "roomScheduleId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of room scheduled."
          },
          {
            "name": "roomTypeCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of room Type Code."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/roomTypes": {
      "get": {
        "summary": "Get hotel room types",
        "description": "Use this API to return room types for a specific property based on search criteria such as roomClassCodes, roomTypeCodes, physical, pseudo, etc.<p><strong>OperationId:</strong>getRoomTypes</p>",
        "operationId": "getRoomTypes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "List of Hotels.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "accessible",
            "in": "query",
            "required": false,
            "description": "Flag to indicate if accessible room type should be fetched.",
            "type": "boolean"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "Flag to indicate if inactive room types should be included.",
            "type": "boolean"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "physical",
            "in": "query",
            "required": false,
            "description": "Is it a physical sleep room type.",
            "type": "boolean"
          },
          {
            "name": "pseudo",
            "in": "query",
            "required": false,
            "description": "Is it a pseudo room type.",
            "type": "boolean"
          },
          {
            "name": "summaryInfo",
            "in": "query",
            "required": false,
            "description": "Flag to indicate if summary or detailed information should be fetched.",
            "type": "boolean"
          },
          {
            "name": "roomTypeCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "roomClassCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for Fetching existing Room Types.",
            "schema": {
              "$ref": "#/definitions/roomTypesDetails"
            }
          },
          "204": {
            "description": "RoomTypes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create a new room type",
        "description": "Use this API to create new room types for a property. A list of new room types can be passed as part of the request to Use this API to create multiple rooms in one request. <p><strong>OperationId:</strong>postRoomTypes</p>",
        "operationId": "postRoomTypes",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "roomTypesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for Creating a new Room Type.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomTypesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/roomTypes/{roomTypeId}": {
      "put": {
        "summary": "Update a Room Type",
        "description": "Use this API to update a Room Type from a property. A list of room types that need to be modified can also passed as part of the request. <p><strong>OperationId:</strong>putRoomTypes</p>",
        "operationId": "putRoomTypes",
        "parameters": [
          {
            "name": "roomTypeId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of room types."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "roomTypesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for Modifying Room Type.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomTypesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete Room Types",
        "description": "Use this API to delete a Room Type from a property. <p><strong>OperationId:</strong>deleteRoomTypes</p>",
        "operationId": "deleteRoomTypes",
        "parameters": [
          {
            "name": "roomTypeId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of room types."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "roomType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/rooms": {
      "get": {
        "summary": "Get hotel rooms",
        "description": "Use this API to return rooms for a specific property based on search criteria such as roomClassCodes, roomTypeCodes, room, etc.<p><strong>OperationId:</strong>getRooms</p>",
        "operationId": "getRooms",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "physical",
            "in": "query",
            "required": false,
            "description": "Is it a physical room type.",
            "type": "boolean"
          },
          {
            "name": "pseudo",
            "in": "query",
            "required": false,
            "description": "Is it a pseudo room type.",
            "type": "boolean"
          },
          {
            "name": "roomClassCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "roomTypeCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "room",
            "in": "query",
            "required": false,
            "description": "Room to be searched.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching complete information of existing rooms.",
            "schema": {
              "$ref": "#/definitions/roomsDetails"
            }
          },
          "204": {
            "description": "Rooms not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Post a new room",
        "description": "Use this API to create a new room for a specific property.<p><strong>OperationId:</strong>postRooms</p>",
        "operationId": "postRooms",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "roomCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating a new room.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/rooms/{roomsId}": {
      "put": {
        "summary": "Change an existing room",
        "description": "Use this API to update an existing room. <p><strong>OperationId:</strong>putRooms</p>",
        "operationId": "putRooms",
        "parameters": [
          {
            "name": "roomsId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of room."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "roomToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing details of an existing room.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete an existing room given hotel code and room",
        "description": "Use this API to delete an existing room given hotel code and room. <p><strong>OperationId:</strong>deleteRooms</p>",
        "operationId": "deleteRooms",
        "parameters": [
          {
            "name": "roomsId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of room."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "room",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/rooms/{roomsId}/copy": {
      "put": {
        "summary": "Copy Rooms",
        "description": "Use this API to create new rooms based on an existing room. Component rooms are not allowed to be copied. <p><strong>OperationId:</strong>copyRooms</p>",
        "operationId": "copyRooms",
        "parameters": [
          {
            "name": "roomsId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of room."
          },
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of hotel."
          },
          {
            "name": "copyRooms",
            "in": "body",
            "required": true,
            "description": "Request object for creating multiple rooms based on an existing room. New rooms may have different floor preferences, room features, housekeeping credits and room sections. The rest of the details except for attached connecting rooms will be copied from the base existing room. Component rooms are not allowed to be copied.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/copyRooms"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/vacantRoomStatus": {
      "get": {
        "summary": "Get vacant room status configuration.",
        "description": "Use this API to retrieve vacant room status configuration. <p><strong>OperationId:</strong>getVacantRoomStatus</p> <p>This API allows a time span of <strong>90</strong> days.</p>",
        "operationId": "getVacantRoomStatus",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 20,
            "description": "Hotel Code for which vacant room status needs to be fetched."
          },
          {
            "name": "roomTypes",
            "in": "query",
            "required": false,
            "type": "array",
            "description": "Room Type of the room.",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 400
            }
          },
          {
            "name": "beginDate",
            "in": "query",
            "required": false,
            "description": "The starting value of the date range. By default this would be the current business date.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "description": "The ending value of the date range.",
            "type": "string",
            "format": "date"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Vacant Room Status.",
            "schema": {
              "$ref": "#/definitions/vacantRoomStatusesList"
            }
          },
          "204": {
            "description": " Device Configuration List not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create vacant room status configuration.",
        "description": "Create a new vacant room status for specific room type for a defined date range or number of days or both date range and number of days together. <p><strong>OperationId:</strong>postVacantRoomStatus</p>",
        "operationId": "postVacantRoomStatus",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 20,
            "description": "Hotel Code for which vacant room status needs to be fetched."
          },
          {
            "name": "vacantRoomStatusDetails",
            "in": "body",
            "required": true,
            "description": "Request object for creating a vacant room housekeeping status details.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/vacantRoomStatusDetails"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{hotelId}/vacantRoomStatus/{vacantRoomStatusId}": {
      "put": {
        "summary": "Update the vacant room status configuration.",
        "description": "Update an existing vacant rooms status configuration. <p><strong>OperationId:</strong>putVacantRoomStatus</p>",
        "operationId": "putVacantRoomStatus",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 20,
            "description": "Hotel Code for which vacant room status needs to be fetched."
          },
          {
            "name": "vacantRoomStatusId",
            "in": "path",
            "required": true,
            "type": "number",
            "description": "The unique ID of the vacant room configuration to which this record applies."
          },
          {
            "name": "vacantRoomStatusDetails",
            "in": "body",
            "required": true,
            "description": "Request object for creating a vacant room housekeeping details.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/vacantRoomStatusDetails"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete vacant room status configuration.",
        "description": "Delete vacant room status configuration. <p><strong>OperationId:</strong>deleteVacantRoomStatus</p>",
        "operationId": "deleteVacantRoomStatus",
        "parameters": [
          {
            "name": "hotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 20,
            "description": "Hotel Code for which vacant room status needs to be fetched."
          },
          {
            "name": "vacantRoomStatusId",
            "in": "path",
            "required": true,
            "type": "number",
            "description": "The unique ID of the vacant room configuration to which this record applies."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{sourceHotelId}/buildingGroups/copy": {
      "put": {
        "summary": "Copy Building Groups",
        "description": "You can use this API to copy existing Housekeeping Building Groups from the source property to the target properties. <p><strong>OperationId:</strong>copyBuildingGroups</p>",
        "operationId": "copyBuildingGroups",
        "parameters": [
          {
            "name": "sourceHotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of source hotel."
          },
          {
            "name": "copyBuildingGroups",
            "in": "body",
            "required": true,
            "description": "Request object to copy Building Group details to hotel(s).",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/copyBuildingGroups"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{sourceHotelId}/buildings/copy": {
      "put": {
        "summary": " copy existing Building from source property to target properties",
        "description": "Copy existing Building from source property to target properties. <p><strong>OperationId:</strong>copyBuildings</p>",
        "operationId": "copyBuildings",
        "parameters": [
          {
            "name": "sourceHotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of source hotel."
          },
          {
            "name": "copyBuildings",
            "in": "body",
            "required": true,
            "description": "Request object for copying Building details to hotel(s).",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/copyBuildings"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{sourceHotelId}/housekeepingSectionGroups/copy": {
      "put": {
        "summary": " copy Housekeeping Section Groups",
        "description": "Copy Housekeeping Section Groups. <p><strong>OperationId:</strong>copyHousekeepingSectionGroups</p>",
        "operationId": "copyHousekeepingSectionGroups",
        "parameters": [
          {
            "name": "sourceHotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of source hotel."
          },
          {
            "name": "copyHousekeepingSectionGroups",
            "in": "body",
            "required": true,
            "description": "Request object for copying housekeeping section groups in resort.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/copyHousekeepingSectionGroups"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{sourceHotelId}/housekeepingSections/copy": {
      "put": {
        "summary": " copy Housekeeping Sections",
        "description": "Copy Housekeeping Sections. <p><strong>OperationId:</strong>copyHousekeepingSections</p>",
        "operationId": "copyHousekeepingSections",
        "parameters": [
          {
            "name": "sourceHotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of source hotel."
          },
          {
            "name": "copyHousekeepingSections",
            "in": "body",
            "required": true,
            "description": "List of the housekeeping section code(s) to be copied.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/copyHousekeepingSections"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/hotels/{sourceHotelId}/housekeepingSupplyCodes/copy": {
      "put": {
        "summary": " copy Housekeeping Codes",
        "description": "Copy Housekeeping Codes. <p><strong>OperationId:</strong>copyHousekeepingSupplyCodes</p>",
        "operationId": "copyHousekeepingSupplyCodes",
        "parameters": [
          {
            "name": "sourceHotelId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of source hotel."
          },
          {
            "name": "copyHousekeepingCodes",
            "in": "body",
            "required": true,
            "description": "List of the housekeeping code(s) to be copied.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/copyHousekeepingCodes"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/outOfOrderServiceReasons": {
      "get": {
        "summary": " Get template Out Of Order Service Reasons",
        "description": " Use this API to get template Out Of Order Service Reasons. <p><strong>OperationId:</strong>getTemplateOutOfOrderServiceReasons</p>",
        "operationId": "getTemplateOutOfOrderServiceReasons",
        "parameters": [
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "Indicator that tells whether to include inactive out of order/service reasons in search results.",
            "type": "boolean"
          },
          {
            "name": "reasonCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching template Out of order/service reason(s).",
            "schema": {
              "$ref": "#/definitions/templateOutOfOrderServiceReasonsDetails"
            }
          },
          "204": {
            "description": "TemplateOutOfOrderServiceReasons not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create a template Out Of Order Service Reason Code",
        "description": "Use this API to create a template Out Of Order Service Reason Code. <p><strong>OperationId:</strong>postTemplateOutOfOrderServiceReasons</p>",
        "operationId": "postTemplateOutOfOrderServiceReasons",
        "parameters": [
          {
            "name": "templateOutOfOrderServiceReasonsCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating new template out of order/service reasons.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateOutOfOrderServiceReasonsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/outOfOrderServiceReasons/{reasonCode}": {
      "put": {
        "summary": "Change a template Out Of Order Service Reason Code",
        "description": "Use this API to update a template Out Of Order Service Reason Code. <p><strong>OperationId:</strong>changeTemplateOutOfOrderServiceReasons</p>",
        "operationId": "changeTemplateOutOfOrderServiceReasons",
        "parameters": [
          {
            "name": "reasonCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of reason."
          },
          {
            "name": "templateOutOfOrderServiceReasonsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for modifying template out of order/service reasons.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateOutOfOrderServiceReasonsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete a template Out Of Order Service Reason Code",
        "description": "Use this API to delete a template Out Of Order Service Reason Code. <p><strong>OperationId:</strong>removeTemplateOutOfOrderServiceReasons</p>",
        "operationId": "removeTemplateOutOfOrderServiceReasons",
        "parameters": [
          {
            "name": "reasonCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of reason."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/roomClass": {
      "post": {
        "summary": "Create Room Class Template",
        "description": "This API is used to create a new room class template. <p><strong>OperationId:</strong>postRoomClassTemplates</p>",
        "operationId": "postRoomClassTemplates",
        "parameters": [
          {
            "name": "roomClassTemplateCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating a new room class template.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomClassTemplateCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/roomClasses": {
      "get": {
        "summary": "Get Room Class Templates",
        "description": "This API gets the room class templates that match the criteria in the request message. <p><strong>OperationId:</strong>getRoomClassTemplates</p>",
        "operationId": "getRoomClassTemplates",
        "parameters": [
          {
            "name": "roomClassCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for information regarding template room classes.",
            "schema": {
              "$ref": "#/definitions/roomClassTemplatesDetails"
            }
          },
          "204": {
            "description": "RoomClassTemplates not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/roomClasses/{roomClassTemplateId}": {
      "put": {
        "summary": "Change Room Class Template",
        "description": "This API is used to update an existing room class template. <p><strong>OperationId:</strong>putRoomClassTemplate</p>",
        "operationId": "putRoomClassTemplate",
        "parameters": [
          {
            "name": "roomClassTemplateId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of room class template."
          },
          {
            "name": "roomClassTemplateToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for modifying an existing room class template.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomClassTemplateToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete Room Class Template",
        "description": "Use this API to delete an existing room class template. <p><strong>OperationId:</strong>deleteRoomClassTemplate</p>",
        "operationId": "deleteRoomClassTemplate",
        "parameters": [
          {
            "name": "roomClassTemplateId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of room class template."
          },
          {
            "name": "roomClass",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/roomConditions": {
      "get": {
        "summary": "Get room condition templates",
        "description": "Use this API to get room condition templates. <p><strong>OperationId:</strong>getRoomConditionTemplates</p>",
        "operationId": "getRoomConditionTemplates",
        "parameters": [
          {
            "name": "roomConditionCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "inactive",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for information regarding room condition template of a property.",
            "schema": {
              "$ref": "#/definitions/roomConditionTemplatesDetails"
            }
          },
          "204": {
            "description": "RoomConditionTemplates not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create new room condition template",
        "description": "Use this API to create new room condition template. <p><strong>OperationId:</strong>postRoomConditionTemplate</p>",
        "operationId": "postRoomConditionTemplate",
        "parameters": [
          {
            "name": "roomConditionTemplateCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating a new Room Condition Template.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomConditionTemplateCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/roomConditions/{templateCode}": {
      "put": {
        "summary": "Change room condition template",
        "description": "Use this API to update a room condition template. <p><strong>OperationId:</strong>changeRoomConditionTemplate</p>",
        "operationId": "changeRoomConditionTemplate",
        "parameters": [
          {
            "name": "templateCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of template."
          },
          {
            "name": "roomConditionTemplateToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for Modifying Room Condition Template.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomConditionTemplateToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete room condition template",
        "description": "Use this API to delete room condition template. <p><strong>OperationId:</strong>removeRoomConditionTemplate</p>",
        "operationId": "removeRoomConditionTemplate",
        "parameters": [
          {
            "name": "templateCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of template."
          },
          {
            "name": "roomConditionTemplateCode",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/roomFeatures": {
      "get": {
        "summary": "Get template Room Features",
        "description": "Use this API to get template Room Features. <p><strong>OperationId:</strong>getTemplateRoomFeatures</p>",
        "operationId": "getTemplateRoomFeatures",
        "parameters": [
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object to fetch template room features.",
            "schema": {
              "$ref": "#/definitions/templateRoomFeaturesDetails"
            }
          },
          "204": {
            "description": "TemplateRoomFeatures not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create template Room Features",
        "description": "Use this API to create template Room Features. <p><strong>OperationId:</strong>postTemplateRoomFeatures</p>",
        "operationId": "postTemplateRoomFeatures",
        "parameters": [
          {
            "name": "templateRoomFeaturesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating template room features.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateRoomFeaturesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete template Room Features",
        "description": "Use this API to delete template Room Features. <p><strong>OperationId:</strong>removeTemplateRoomFeatures</p>",
        "operationId": "removeTemplateRoomFeatures",
        "parameters": [
          {
            "name": "genericTemplateParentCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Specifies the code.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "genericTemplateParentGroups",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Specifies the group.",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "put": {
        "summary": "Change template Room Features",
        "description": "Use this API to update template Room Features. <p><strong>OperationId:</strong>changeTemplateRoomFeatures</p>",
        "operationId": "changeTemplateRoomFeatures",
        "parameters": [
          {
            "name": "templateRoomFeaturesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing template room features.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateRoomFeaturesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/roomHierarchies": {
      "get": {
        "summary": "Get Room Hierarchies",
        "description": "Use this API to get Room Hierarchies. <p><strong>OperationId:</strong>getRoomHierarchies</p>",
        "operationId": "getRoomHierarchies",
        "parameters": [
          {
            "name": "roomHierarchyType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Provides the type of room hierarchy",
            "uniqueItems": true,
            "enum": [
              "Type",
              "Class"
            ]
          },
          {
            "name": "hotelIds",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "fromCode",
            "in": "query",
            "required": false,
            "description": "From code to process",
            "type": "string"
          },
          {
            "name": "toCode",
            "in": "query",
            "required": false,
            "description": "To code to process",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response for fetch room hierarchies",
            "schema": {
              "$ref": "#/definitions/roomHierarchiesDetails"
            }
          },
          "204": {
            "description": "RoomHierarchies not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create Room Hierarchies",
        "description": "Use this API to create Room Hierarchies. <p><strong>OperationId:</strong>postRoomHierarchies</p>",
        "operationId": "postRoomHierarchies",
        "parameters": [
          {
            "name": "roomHierarchiesCriteria",
            "in": "body",
            "required": true,
            "description": "Request to create room hierarchies",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomHierarchiesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete Room Hierarchies",
        "description": "Use this API to delete Room Hierarchies. <p><strong>OperationId:</strong>removeRoomHierarchies</p>",
        "operationId": "removeRoomHierarchies",
        "parameters": [
          {
            "name": "roomHierarchyType",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Provides the type of room hierarchy",
            "uniqueItems": true,
            "items": {
              "type": "string",
              "enum": [
                "Type",
                "Class"
              ]
            },
            "required": false
          },
          {
            "name": "hotelId",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Resort code in which the hierarchy should exist",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "name": "fromCode",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "From code to process",
            "items": {
              "type": "string"
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "put": {
        "summary": "Change Room Hierarchies",
        "description": "Use this API to update Room Hierarchies. <p><strong>OperationId:</strong>changeRoomHierarchies</p>",
        "operationId": "changeRoomHierarchies",
        "parameters": [
          {
            "name": "roomHierarchiesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request to change room hierarchies",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomHierarchiesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/roomHierarchies/copy": {
      "put": {
        "summary": " copy Room Hierarchies",
        "description": "You can use this API to copy Room Hierarchies. <p><strong>OperationId:</strong>copyRoomHierarchies</p>",
        "operationId": "copyRoomHierarchies",
        "parameters": [
          {
            "name": "copyRoomHierarchies",
            "in": "body",
            "required": true,
            "description": "Request to copy room hierarchies",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/copyRoomHierarchies"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/roomHierarchies/generate": {
      "post": {
        "summary": "generate the room hierarchies",
        "description": "Generate the room hierarchies. <p><strong>OperationId:</strong>generateRoomHierarchy</p>",
        "operationId": "generateRoomHierarchy",
        "parameters": [
          {
            "name": "roomHierarchiesToGenerate",
            "in": "body",
            "required": true,
            "description": "Generates the room hierarchies based on the AI cost function",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomHierarchiesToGenerate"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response for Generate Room Hierarchy",
            "schema": {
              "$ref": "#/definitions/roomHierarchiesDetails"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/roomMaintenanceReasons": {
      "get": {
        "summary": "Get Template Room Maintenance Reasons",
        "description": "Use this API to get Template Room Maintenance Reasons. <p><strong>OperationId:</strong>getTemplateRoomMaintenanceReasons</p>",
        "operationId": "getTemplateRoomMaintenanceReasons",
        "parameters": [
          {
            "name": "roomMaintenanceReasonCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "Inactive flag - whether or not to display inactive records",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching template room maintenance reasons.",
            "schema": {
              "$ref": "#/definitions/templateRoomMaintenanceReasonsDetails"
            }
          },
          "204": {
            "description": "TemplateRoomMaintenanceReasons not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create Template Room Maintenance Reasons",
        "description": "Use this API to create Template Room Maintenance Reasons. <p><strong>OperationId:</strong>postTemplateRoomMaintenanceReasons</p>",
        "operationId": "postTemplateRoomMaintenanceReasons",
        "parameters": [
          {
            "name": "templateRoomMaintenanceReasonsCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating new template room maintenance reasons.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateRoomMaintenanceReasonsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/roomMaintenanceReasons/{reasonCode}": {
      "put": {
        "summary": "Change Template Room Maintenance Reasons",
        "description": "Use this API to update Template Room Maintenance Reasons. <p><strong>OperationId:</strong>changeTemplateRoomMaintenanceReasons</p>",
        "operationId": "changeTemplateRoomMaintenanceReasons",
        "parameters": [
          {
            "name": "reasonCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of reason."
          },
          {
            "name": "templateRoomMaintenanceReasonsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for modifying template room maintenance reasons.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateRoomMaintenanceReasonsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete Template Room Maintenance Reasons",
        "description": "Use this API to delete Template Room Maintenance Reasons. <p><strong>OperationId:</strong>removeTemplateRoomMaintenanceReasons</p>",
        "operationId": "removeTemplateRoomMaintenanceReasons",
        "parameters": [
          {
            "name": "reasonCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of reason."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/roomMoveReasons": {
      "get": {
        "summary": "Get Room Move Reasons",
        "description": "Use this API to get Room Move Reasons. <p><strong>OperationId:</strong>getRoomMoveReasons</p>",
        "operationId": "getRoomMoveReasons",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Room Move Reasons.",
            "schema": {
              "$ref": "#/definitions/roomMoveReasonsDetails"
            }
          },
          "204": {
            "description": "RoomMoveReasons not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create Room Move Reasons",
        "description": "Use this API to create Room Move Reasons. <p><strong>OperationId:</strong>postRoomMoveReasons</p>",
        "operationId": "postRoomMoveReasons",
        "parameters": [
          {
            "name": "roomMoveReasonsCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Room Move Reasons.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomMoveReasonsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/roomMoveReasons/{reasonCode}": {
      "put": {
        "summary": "Change Room Move Reasons",
        "description": "Use this API to update Room Move Reasons. <p><strong>OperationId:</strong>changeRoomMoveReasons</p>",
        "operationId": "changeRoomMoveReasons",
        "parameters": [
          {
            "name": "reasonCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of Reasons."
          },
          {
            "name": "roomMoveReasonsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Room Move Reasons.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomMoveReasonsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete Room Move Reasons",
        "description": "Use this API to delete Room Move Reasons. <p><strong>OperationId:</strong>removeRoomMoveReasons</p>",
        "operationId": "removeRoomMoveReasons",
        "parameters": [
          {
            "name": "reasonCode",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique Code of Reasons."
          },
          {
            "name": "roomMoveReasonsCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/roomPotentials": {
      "get": {
        "summary": "Get Room Potentials",
        "description": "Use this API to get Room Potentials. <p><strong>OperationId:</strong>getRoomPotentials</p>",
        "operationId": "getRoomPotentials",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Room Potentials.",
            "schema": {
              "$ref": "#/definitions/roomPotentialsDetails"
            }
          },
          "204": {
            "description": "RoomPotentials not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create Room Potentials",
        "description": "Use this API to create Room Potentials. <p><strong>OperationId:</strong>postRoomPotentials</p>",
        "operationId": "postRoomPotentials",
        "parameters": [
          {
            "name": "roomPotentialsCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Room Potentials.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomPotentialsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/roomPotentials/{roomPotentialsId}": {
      "put": {
        "summary": "Change Room Potentials",
        "description": "Use this API to update Room Potentials. <p><strong>OperationId:</strong>putRoomPotentials</p>",
        "operationId": "putRoomPotentials",
        "parameters": [
          {
            "name": "roomPotentialsId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of Room Potentials."
          },
          {
            "name": "roomPotentialsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Room Potentials.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomPotentialsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete Room Potentials",
        "description": "Use this API to delete Room Potentials. <p><strong>OperationId:</strong>deleteRoomPotentials</p>",
        "operationId": "deleteRoomPotentials",
        "parameters": [
          {
            "name": "roomPotentialsId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of Room Potentials."
          },
          {
            "name": "roomPotentialsCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/roomPreferencePriorities": {
      "get": {
        "summary": "Get Room Preference Priorities",
        "description": "Use this API to get Room Preference Priorities. <p><strong>OperationId:</strong>getRoomPreferencePriorities</p>",
        "operationId": "getRoomPreferencePriorities",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Room Preference Priorities.",
            "schema": {
              "$ref": "#/definitions/roomPreferencePrioritiesDetails"
            }
          },
          "204": {
            "description": "RoomPreferencePriorities not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create Room Preference Priorities",
        "description": "Use this API to create Room Preference Priorities. <p><strong>OperationId:</strong>postRoomPreferencePriorities</p>",
        "operationId": "postRoomPreferencePriorities",
        "parameters": [
          {
            "name": "roomPreferencePrioritiesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Room Preference Priorities.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomPreferencePrioritiesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/roomPreferencePriorities/{roomPreferencePrioritiesId}": {
      "put": {
        "summary": "Change Room Preference Priorities",
        "description": "Use this API to update Room Preference Priorities. <p><strong>OperationId:</strong>putRoomPreferencePriorities</p>",
        "operationId": "putRoomPreferencePriorities",
        "parameters": [
          {
            "name": "roomPreferencePrioritiesId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of Room Preference Priorities."
          },
          {
            "name": "roomPreferencePrioritiesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Room Preference Priorities.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomPreferencePrioritiesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete Room Preference Priorities",
        "description": "Use this API to delete Room Preference Priorities. <p><strong>OperationId:</strong>deleteRoomPreferencePriorities</p>",
        "operationId": "deleteRoomPreferencePriorities",
        "parameters": [
          {
            "name": "roomPreferencePrioritiesId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of Room Preference Priorities."
          },
          {
            "name": "roomPreferencePrioritiesCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/roomSchedules/templates": {
      "get": {
        "summary": "Get housekeeping room schedules configured at template level.",
        "description": "Use this API to fetch housekeeping room schedule configured at template level for the given search criteria such Room Type, Housekeeping Room Schedule Codes.<p><strong>OperationId:</strong>getTemplateHousekeepingRoomSchedules</p>",
        "operationId": "getTemplateHousekeepingRoomSchedules",
        "parameters": [
          {
            "name": "roomTypeCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "housekeepingRoomScheduleCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object of fetch template housekeeping tasks and its associated housekeeping codes.",
            "schema": {
              "$ref": "#/definitions/templateHousekeepingRoomSchedulesDetails"
            }
          },
          "204": {
            "description": "Template HousekeepingRoomSchedules not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create housekeeping room schedules at template level",
        "description": "Use this API to create/configure housekeeping room schedule at template level for a given data like task code,room type,priority,sequence etc., and this operation is supported when either the Task Sheets or the Advance Task Sheets OPERA Control is active.<p><strong>OperationId:</strong>postTemplateHousekeepingRoomSchedule</p>",
        "operationId": "postTemplateHousekeepingRoomSchedule",
        "parameters": [
          {
            "name": "templateHousekeepingRoomSchedulesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object to create housekeeping room schedules at template level",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateHousekeepingRoomSchedulesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/roomSchedules/templates/{sequenceId}": {
      "put": {
        "summary": "Change housekeeping room schedules configured at template level",
        "description": "Use this API to update housekeeping room schedule configured at template level for a given unique sequence ID of the scheduled task and this operation is supported when either the Task Sheets or the Advance Task Sheets OPERA Control is active.<p><strong>OperationId:</strong>changeTemplateHousekeepingRoomSchedule</p>",
        "operationId": "changeTemplateHousekeepingRoomSchedule",
        "parameters": [
          {
            "name": "sequenceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "description": "Unique sequence number of room scheduled."
          },
          {
            "name": "templateHousekeepingRoomSchedulesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing housekeeping task schedules configured at template level.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateHousekeepingRoomSchedulesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete housekeeping room schedules configured at template level",
        "description": "Use this API to delete the housekeeping room schedules configured at template level for a given unique sequence ID of the scheduled template task. <p><strong>OperationId:</strong> deleteTemplateHousekeepingRoomSchedule </p>",
        "operationId": "deleteTemplateHousekeepingRoomSchedule",
        "parameters": [
          {
            "name": "sequenceId",
            "in": "path",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "description": "Unique sequence number of room scheduled."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/roomTypes": {
      "get": {
        "summary": "Get Room Type Templates",
        "description": "This API accepts the room type template request search criteria and gets the Room Type templates. <p><strong>OperationId:</strong>getRoomTypeTemplates</p>",
        "operationId": "getRoomTypeTemplates",
        "parameters": [
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "Include inactive Room type in search result?",
            "type": "boolean"
          },
          {
            "name": "physical",
            "in": "query",
            "default": "false",
            "required": false,
            "description": "Is it a physical sleep room type.",
            "type": "boolean"
          },
          {
            "name": "pseudo",
            "in": "query",
            "default": "false",
            "required": false,
            "description": "Is it a pseudo room type.",
            "type": "boolean"
          },
          {
            "name": "summaryInfo",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "roomTypeCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "roomClassCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for information regarding room type template of a property.",
            "schema": {
              "$ref": "#/definitions/roomTypeTemplatesDetails"
            }
          },
          "204": {
            "description": "RoomTypeTemplates not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create Room Type Templates",
        "description": "This API is used to Use this API to create new Room Type templates. <p><strong>OperationId:</strong>postRoomTypeTemplates</p>",
        "operationId": "postRoomTypeTemplates",
        "parameters": [
          {
            "name": "roomTypeTemplatesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating a new Room Type Template.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomTypeTemplatesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/roomTypes/{roomTypeTemplatesId}": {
      "put": {
        "summary": "Change Room Type Templates",
        "description": "This API is used to update a Room Type template. Use this API to updates can be made concurrently to multiple templates by passing Collection of Room Type templates with the new values. <p><strong>OperationId:</strong>putRoomTypeTemplates</p>",
        "operationId": "putRoomTypeTemplates",
        "parameters": [
          {
            "name": "roomTypeTemplatesId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of room type."
          },
          {
            "name": "roomTypeTemplatesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for Modifying existing Room Type Templates.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/roomTypeTemplatesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete new Room Type templates ",
        "description": "Use this API to delete new Room Type templates. <p><strong>OperationId:</strong>deleteRoomTypeTemplates</p>",
        "operationId": "deleteRoomTypeTemplates",
        "parameters": [
          {
            "name": "roomTypeTemplatesId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of room type."
          },
          {
            "name": "roomType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/roomsSummary": {
      "get": {
        "summary": "Get room summary",
        "description": "Use this API to return room summary information based on search criteria such as hotelId, roomClassCodes, roomTypeCodes, roomCodes, wildCard, etc.<p><strong>OperationId:</strong>getRoomsSummary</p>",
        "operationId": "getRoomsSummary",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Indicates maximum number of records a Web Service should return.",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "default": 0,
            "required": false,
            "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
            "type": "integer"
          },
          {
            "name": "physical",
            "in": "query",
            "required": false,
            "description": "Is it a physical room type.",
            "type": "boolean"
          },
          {
            "name": "pseudo",
            "in": "query",
            "required": false,
            "description": "Is it a pseudo room type.",
            "type": "boolean"
          },
          {
            "name": "hotelId",
            "in": "query",
            "required": false,
            "description": "Hotel code of room to be searched.",
            "type": "string"
          },
          {
            "name": "roomClassCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "roomTypeCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "roomCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "building",
            "in": "query",
            "required": false,
            "description": "Building associated with room to be searched.",
            "type": "string"
          },
          {
            "name": "ratingsCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching summary information of existing rooms.",
            "schema": {
              "$ref": "#/definitions/roomsSummaryDetails"
            }
          },
          "204": {
            "description": "RoomsSummary not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/smokingTypes": {
      "get": {
        "summary": "Get Smoking Types",
        "description": "Use this API to get Smoking Types. <p><strong>OperationId:</strong>getSmokingTypes</p>",
        "operationId": "getSmokingTypes",
        "parameters": [
          {
            "name": "fetchInactive",
            "in": "query",
            "required": false,
            "description": "Determines wether to fetch inactive records or not.",
            "type": "boolean"
          },
          {
            "name": "codes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "wildCard",
            "in": "query",
            "required": false,
            "description": "Wildcard search on the code.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "description": "Description of the code.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching Smoking Types.",
            "schema": {
              "$ref": "#/definitions/smokingTypesDetails"
            }
          },
          "204": {
            "description": "SmokingTypes not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "post": {
        "summary": "Create Smoking Types",
        "description": "Use this API to create Smoking Types. <p><strong>OperationId:</strong>postSmokingTypes</p>",
        "operationId": "postSmokingTypes",
        "parameters": [
          {
            "name": "smokingTypesCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating Smoking Types.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/smokingTypesCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/smokingTypes/{smokingTypesId}": {
      "put": {
        "summary": "Change Smoking Types",
        "description": "Use this API to update Smoking Types. <p><strong>OperationId:</strong>putSmokingTypes</p>",
        "operationId": "putSmokingTypes",
        "parameters": [
          {
            "name": "smokingTypesId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of Smoking Types."
          },
          {
            "name": "smokingTypesToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing Smoking Types.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/smokingTypesToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      },
      "delete": {
        "summary": "Delete Smoking Types",
        "description": "Use this API to delete Smoking Types. <p><strong>OperationId:</strong>deleteSmokingTypes</p>",
        "operationId": "deleteSmokingTypes",
        "parameters": [
          {
            "name": "smokingTypesId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of Smoking Types."
          },
          {
            "name": "smokingTypesCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "ChainConfig"
        ]
      }
    },
    "/templateFloors": {
      "get": {
        "summary": "Get template floors",
        "description": "Use this API to get template floors. <p><strong>OperationId:</strong>getTemplateFloors</p>",
        "operationId": "getTemplateFloors",
        "parameters": [
          {
            "name": "floors",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching floors at the template level.",
            "schema": {
              "$ref": "#/definitions/templateFloorsDetails"
            }
          },
          "204": {
            "description": "TemplateFloors not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create template floors",
        "description": "Use this API to create template floors. <p><strong>OperationId:</strong>postTemplateFloors</p>",
        "operationId": "postTemplateFloors",
        "parameters": [
          {
            "name": "templateFloorsCriteria",
            "in": "body",
            "required": true,
            "description": "Request object for creating floors at the template level.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateFloorsCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/templateFloors/{templateFloorsId}": {
      "put": {
        "summary": "Change template floors",
        "description": "Use this API to update template floors. <p><strong>OperationId:</strong>changeTemplateFloors</p>",
        "operationId": "changeTemplateFloors",
        "parameters": [
          {
            "name": "templateFloorsId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of template floors."
          },
          {
            "name": "templateFloorsToBeChanged",
            "in": "body",
            "required": true,
            "description": "Request object for changing floors at the template level.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateFloorsToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "delete": {
        "summary": "Delete template floors",
        "description": "Use this API to delete template floors. <p><strong>OperationId:</strong>removeTemplateFloors</p>",
        "operationId": "removeTemplateFloors",
        "parameters": [
          {
            "name": "templateFloorsId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique ID of template floors."
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/templateHousekeepingTasks": {
      "get": {
        "summary": "Get Template Housekeeping Tasks",
        "description": "Use this API to get template Housekeeping Tasks.<p><strong>OperationId:</strong>getTemplateHousekeepingTasks</p>",
        "operationId": "getTemplateHousekeepingTasks",
        "parameters": [
          {
            "name": "taskCodes",
            "in": "query",
            "type": "array",
            "collectionFormat": "multi",
            "description": "Codes to be searched.",
            "items": {
              "type": "string",
              "maxItems": 4000
            },
            "required": false
          },
          {
            "name": "includeInactive",
            "in": "query",
            "required": false,
            "description": "Flag to indicate if inactive tasks should be included.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              }
            },
            "description": "Response object for fetching housekeeping tasks.",
            "schema": {
              "$ref": "#/definitions/templateHousekeepingTasksDetails"
            }
          },
          "204": {
            "description": "HousekeepingTasks not found."
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "post": {
        "summary": "Create Template Housekeeping Tasks",
        "description": "Use this API to create template Housekeeping Tasks. <p><strong>OperationId:</strong>postTemplateHousekeepingTasks</p>",
        "operationId": "postTemplateHousekeepingTasks",
        "parameters": [
          {
            "name": "templateHousekeepingTasksCriteria",
            "in": "body",
            "required": true,
            "description": "Add housekeeping tasks configurations for resort.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateHousekeepingTasksCriteria"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "201": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    },
    "/templateHousekeepingTasks/{templateId}": {
      "delete": {
        "summary": "Delete a template Housekeeping Task",
        "description": "Use this API to delete a template Housekeeping Task. <p><strong>OperationId:</strong>deleteTemplateHousekeepingTask</p>",
        "operationId": "deleteTemplateHousekeepingTask",
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique id for template task."
          },
          {
            "name": "forceRemove",
            "in": "query",
            "required": false,
            "description": "Flag to indicate if records that are marked as \"protected\" can be removed. If false, any attempt to remove records that are protected will return an error.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "HATEOAS links which help the consumer to navigate to resources",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      },
      "put": {
        "summary": "Change a template Housekeeping Task",
        "description": "Use this API to update a template Housekeeping Task. <p><strong>OperationId:</strong>putTemplateHousekeepingTask</p>",
        "operationId": "putTemplateHousekeepingTask",
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 2000,
            "description": "Unique id for template task"
          },
          {
            "name": "templateHousekeepingTaskToBeChanged",
            "in": "body",
            "required": true,
            "description": "Modify housekeeping tasks in resort configurations.",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/templateHousekeepingTaskToBeChanged"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/authKey"
          },
          {
            "$ref": "#/parameters/x-app-key"
          },
          {
            "$ref": "#/parameters/x-hotelid"
          },
          {
            "$ref": "#/parameters/x-externalsystem"
          },
          {
            "$ref": "#/parameters/Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "headers": {
              "Content-Language": {
                "type": "string",
                "description": "Audience language",
                "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*",
                "x-example": "en-GB"
              },
              "Location": {
                "type": "string",
                "description": "Location of newly created resource"
              }
            },
            "description": "Response Body.",
            "schema": {
              "$ref": "#/definitions/status"
            }
          },
          "400": {
            "$ref": "#/responses/400"
          },
          "401": {
            "$ref": "#/responses/401"
          },
          "403": {
            "$ref": "#/responses/403"
          },
          "404": {
            "$ref": "#/responses/404"
          },
          "405": {
            "$ref": "#/responses/405"
          },
          "406": {
            "$ref": "#/responses/406"
          },
          "413": {
            "$ref": "#/responses/413"
          },
          "414": {
            "$ref": "#/responses/414"
          },
          "415": {
            "$ref": "#/responses/415"
          },
          "500": {
            "$ref": "#/responses/500"
          },
          "502": {
            "$ref": "#/responses/502"
          },
          "503": {
            "$ref": "#/responses/503"
          }
        },
        "consumes": [
          "application/json;charset=UTF-8"
        ],
        "produces": [
          "application/json;charset=UTF-8"
        ],
        "tags": [
          "HotelConfig"
        ]
      }
    }
  },
  "parameters": {
    "authKey": {
      "name": "authorization",
      "description": "Bearer token that needs to be passed which is generated post user authentication",
      "type": "string",
      "in": "header",
      "required": true
    },
    "x-app-key": {
      "name": "x-app-key",
      "description": "Client or Partner's Application Key",
      "type": "string",
      "pattern": "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$",
      "in": "header",
      "required": true
    },
    "x-hotelid": {
      "name": "x-hotelid",
      "type": "string",
      "description": "Mandatory parameter to identify the hotel code where the end user is logged in",
      "in": "header",
      "required": true
    },
    "x-externalsystem": {
      "name": "x-externalsystem",
      "type": "string",
      "maxLength": 80,
      "description": "External system code.",
      "in": "header",
      "x-example": "EXTERNALSYSTEMCODE"
    },
    "Accept-Language": {
      "name": "Accept-Language",
      "type": "string",
      "description": "Language code",
      "in": "header"
    },
    "x-hubid": {
      "name": "x-hubid",
      "type": "string",
      "description": "x-hubid is a logical grouping of multiple properties that allows api consumers to manage data from a group of properties. This x-hubid is a valid list of hub codes configured in OPERA to which the user has access. Rest APIs without hotelId in the operation path can support hub level integration using x-hubid",
      "in": "header"
    }
  },
  "responses": {
    "400": {
      "description": "Bad Request",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "401": {
      "description": "Unauthorized"
    },
    "403": {
      "description": "Forbidden"
    },
    "404": {
      "description": "Resource not found",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "405": {
      "description": "Method not allowed"
    },
    "406": {
      "description": "Not acceptable."
    },
    "413": {
      "description": "Request Entity Too Large"
    },
    "414": {
      "description": "Request URI Too Large"
    },
    "415": {
      "description": "Unsupported Media Type"
    },
    "500": {
      "description": "System Error",
      "schema": {
        "$ref": "#/definitions/exceptionDetailType"
      }
    },
    "502": {
      "description": "Bad Gateway"
    },
    "503": {
      "description": "Service Unavailable"
    }
  },
  "definitions": {
    "bedTypeRequestsDetails": {
      "type": "object",
      "description": "Response object for fetching Bed Type Requests.",
      "properties": {
        "bedTypeRequests": {
          "description": "Collection of Bed Type Requests.",
          "$ref": "#/definitions/bedTypeRequestsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "bedTypeRequestsType": {
      "type": "array",
      "description": "List of Bed Type Requests.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/bedTypeRequestType"
      }
    },
    "bedTypeRequestType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "translationTextType2000": {
      "type": "object",
      "description": "Contains Multiple translated texts and language codes.",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 2000.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "translationsTextType": {
      "type": "array",
      "description": "Language code for the translation.",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Used for Character Strings, length 0 to 2000.",
            "minLength": 0,
            "maxLength": 2000
          },
          "language": {
            "description": "Language identification.",
            "type": "string",
            "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          }
        },
        "description": "Language code for the translation."
      }
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/instanceLink"
      }
    },
    "instanceLink": {
      "type": "object",
      "description": "Metadata describing link description objects that MAY appear in the JSON instance representation.",
      "properties": {
        "href": {
          "description": "URI [RFC3986] or URI Template [RFC6570]. If the value is set to URI Template, then the \"templated\" property must be set to true.",
          "type": "string"
        },
        "rel": {
          "description": "Name of the link relation that, in addition to the type property, can be used to retrieve link details. For example, href or profile.",
          "type": "string"
        },
        "templated": {
          "description": "Boolean flag that specifies that \"href\" property is a URI or URI Template. If the property is a URI template, set this value to true. By default, this value is false.",
          "type": "boolean",
          "default": false
        },
        "method": {
          "description": "HTTP method for requesting the target of the link.",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "OPTIONS",
            "HEAD"
          ]
        },
        "targetSchema": {
          "description": "Link to the metadata of the resource, such as JSON-schema, that describes the resource expected when dereferencing the target resource..",
          "type": "string"
        },
        "operationId": {
          "description": "The operationId of the path you can call to follow this link.  This allows you to look up not only the path and method, but the description of that path and any parameters you need to supply.",
          "type": "string"
        },
        "title": {
          "description": "Exact copy of the \"summary\" field on the linked operation.",
          "type": "string"
        }
      }
    },
    "warningsType": {
      "type": "array",
      "description": "Used in conjunction with the Success element to define a business error.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/warningType"
      }
    },
    "warningType": {
      "type": "object",
      "description": "Used when a message has been successfully processed to report any warnings or business errors that occurred.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Property Value"
        },
        "shortText": {
          "description": "An abbreviated version of the error in textual format.",
          "type": "string",
          "maxLength": 2000
        },
        "code": {
          "description": "If present, this refers to a table of coded values exchanged between applications to identify errors or warnings.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "docURL": {
          "description": "If present, this URL refers to an online description of the error that occurred.",
          "type": "string",
          "maxLength": 2000
        },
        "status": {
          "description": "If present, recommended values are those enumerated in the ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data type is designated as string data, recognizing that trading partners may identify additional status conditions not included in the enumeration.",
          "type": "string",
          "maxLength": 2000
        },
        "tag": {
          "description": "If present, this attribute may identify an unknown or misspelled tag that caused an error in processing. It is recommended that the Tag attribute use XPath notation to identify the location of a tag in the event that more than one tag of the same name is present in the document. Alternatively, the tag name alone can be used to identify missing data [Type=ReqFieldMissing].",
          "type": "string",
          "maxLength": 2000
        },
        "recordId": {
          "description": "If present, this attribute allows for batch processing and the identification of the record that failed amongst a group of records. This value may contain a concatenation of a unique failed transaction ID with specific record(s) associated with that transaction.",
          "type": "string",
          "maxLength": 2000
        },
        "type": {
          "description": "The Warning element MUST contain the Type attribute that uses a recommended set of values to indicate the warning type. The validating XSD can expect to accept values that it has NOT been explicitly coded for and process them by using Type =\"Unknown\".",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "language": {
          "description": "Language identification.",
          "type": "string",
          "pattern": "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
        },
        "rph": {
          "description": "Reference Place Holder used as an index for this warning.",
          "type": "string",
          "minLength": 1,
          "maxLength": 8
        }
      }
    },
    "exceptionDetailType": {
      "title": "Error Detail",
      "description": "Complex type that contains error details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        },
        "o:errorDetails": {
          "description": "Details of the error message, consisting of a hierarchical tree structure.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/errorInstance"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "errorInstance": {
      "title": "Error Instance Details",
      "description": "Complex type that contains error instance details for a REST call.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Absolute URI [RFC3986] that identifies the problem type.  When dereferenced, it SHOULD provide a human-readable summary of the problem (for example, using HTML)."
        },
        "title": {
          "type": "string",
          "description": "Short, human-readable summary of the problem.  The summary SHOULD NOT change for subsequent occurrences of the problem, except for purposes of localization."
        },
        "status": {
          "type": "integer",
          "description": "HTTP status code for this occurrence of the problem, set by the origin server."
        },
        "detail": {
          "type": "string",
          "description": "Human-readable description specific to this occurrence of the problem."
        },
        "instance": {
          "type": "string",
          "description": "Absolute URI that identifies the specific occurrence of the problem.  It may or may not provide additional information if dereferenced."
        },
        "o:errorCode": {
          "type": "string",
          "description": "Application error code, which is different from HTTP error code."
        },
        "o:errorPath": {
          "type": "string",
          "description": "Path to the problem at the resource or property level."
        }
      },
      "required": [
        "type",
        "title"
      ]
    },
    "bedTypeRequestsCriteria": {
      "type": "object",
      "description": "Request object for creating Bed Type Requests.",
      "properties": {
        "bedTypeRequests": {
          "description": "Bed Type Requests to be created.",
          "$ref": "#/definitions/bedTypeRequestsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "status": {
      "type": "object",
      "description": "Response Body.",
      "properties": {
        "warnings": {
          "$ref": "#/definitions/warningsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        }
      }
    },
    "bedTypeRequestsToBeChanged": {
      "type": "object",
      "description": "Request object for changing Bed Type Requests.",
      "properties": {
        "bedTypeRequests": {
          "description": "Bed Type Requests to be changed.",
          "$ref": "#/definitions/bedTypeRequestsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "bedTypesDetails": {
      "type": "object",
      "description": "Response object for fetching Bed Types.",
      "properties": {
        "bedTypes": {
          "description": "Collection of Bed Types.",
          "$ref": "#/definitions/bedTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "bedTypesType": {
      "type": "array",
      "description": "Bed Type Enumeration element.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/bedTypeType"
      }
    },
    "bedTypeType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "bedTypesCriteria": {
      "type": "object",
      "description": "Request object for creating a new Bed Type.",
      "properties": {
        "bedTypes": {
          "description": "Bed Types to be created.",
          "$ref": "#/definitions/bedTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "bedTypesToBeChanged": {
      "type": "object",
      "description": "Request object for changing an existing Bed Type.",
      "properties": {
        "bedTypes": {
          "description": "Bed Type to be changed.",
          "$ref": "#/definitions/bedTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "buildingFloorMappingsDetails": {
      "type": "object",
      "description": "Response object for fetching floor mappings to buildings.",
      "properties": {
        "buildingFloorMappings": {
          "description": "Collection of floor building mappings configured.",
          "$ref": "#/definitions/buildingFloorMappingsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "buildingFloorMappingsType": {
      "type": "array",
      "description": "Collection of Floor to Building mapping details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/buildingFloorMappingType"
      }
    },
    "buildingFloorMappingType": {
      "type": "object",
      "description": "Building to Floor mapping details associated with the Hotel.",
      "properties": {
        "floorMappingId": {
          "description": "Hotel floor mapping ID details. If only ID is present, it will be considered to be removed.",
          "$ref": "#/definitions/buildingFloorMappingIDType"
        },
        "description": {
          "description": "The description of the house keeping building to floor mapping.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "targetCredits": {
          "description": "Target Credit for each task sheet created for this floor when auto task assignment is broken out by floor.",
          "type": "integer"
        },
        "roomCount": {
          "description": "Rooms associated with the floor in the building.",
          "type": "integer"
        },
        "credits": {
          "description": "Total Credits for all the rooms that belong to this building group.",
          "type": "integer"
        },
        "sequence": {
          "description": "Display sequence when auto task assignment is broken out by floor.",
          "type": "integer"
        }
      }
    },
    "buildingFloorMappingIDType": {
      "type": "object",
      "description": "Building to Floor mapping ID details.",
      "properties": {
        "hotelId": {
          "description": "Hotel Identifier of the Building and Floor.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "floorCode": {
          "description": "Floor Code Identifier of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "buildingCode": {
          "description": "Building Code Identifier of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "setBuildingFloorMappings": {
      "type": "object",
      "description": "Request object for setting floor mappings to buildings.",
      "properties": {
        "buildingFloorMappings": {
          "description": "Collection of floor building mappings to be configured.",
          "$ref": "#/definitions/buildingFloorMappingsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "buildingGroupsDetails": {
      "type": "object",
      "description": "Response object after fetching Building Groups of the Hotel.",
      "properties": {
        "buildingGroups": {
          "description": "Collection of Building Group detail of the Hotel.",
          "$ref": "#/definitions/buildingGroupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "buildingGroupsType": {
      "type": "array",
      "description": "Collection of Building Group details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/buildingGroupType"
      }
    },
    "buildingGroupType": {
      "type": "object",
      "description": "Building or Building Group details associated with the Hotel.",
      "properties": {
        "hotelId": {
          "description": "Hotel Identifier of the Building or Building Group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Building Group or Building Code Identifier of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "The description of the Building or Building Group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "targetCredits": {
          "description": "Target Credit for each task sheet created for this building when auto task assignment is broken out by building.",
          "type": "integer"
        },
        "rooms": {
          "description": "Rooms associated with the building.",
          "$ref": "#/definitions/codeListType"
        },
        "credits": {
          "description": "Total Credits for all the rooms that belong to this building group.",
          "type": "integer"
        },
        "sequence": {
          "description": "Building Sequence when task assignment is automatically generated by building.",
          "type": "integer"
        }
      }
    },
    "codeListType": {
      "type": "array",
      "maxItems": 4000,
      "items": {
        "type": "string",
        "minLength": 0,
        "maxLength": 20
      }
    },
    "buildingGroupsCriteria": {
      "type": "object",
      "description": "Request object to create Building Group details of the Hotel.",
      "properties": {
        "buildingGroups": {
          "description": "Collection of Building Group details to be created for the Hotel.",
          "$ref": "#/definitions/buildingGroupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "buildingGroupsToBeChanged": {
      "type": "object",
      "description": "Request object to change the Building Group details of the Hotel.",
      "properties": {
        "buildingGroups": {
          "description": "Collection of Building Group details to be changed for the Hotel.",
          "$ref": "#/definitions/buildingGroupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "buildingsDetails": {
      "type": "object",
      "description": "Response object after fetching Building details of the Hotel.",
      "properties": {
        "buildings": {
          "description": "Collection of Building details specified of the Hotel.",
          "$ref": "#/definitions/buildingsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "buildingsType": {
      "type": "array",
      "description": "Collection of Building details associated with Hotel.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/buildingType"
      }
    },
    "buildingType": {
      "type": "object",
      "description": "Building or Building Group details associated with the Hotel.",
      "properties": {
        "hotelId": {
          "description": "Hotel Identifier of the Building or Building Group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Building Group or Building Code Identifier of the Hotel.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "The description of the Building or Building Group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "targetCredits": {
          "description": "Target Credit for each task sheet created for this building when auto task assignment is broken out by building.",
          "type": "integer"
        },
        "rooms": {
          "description": "Rooms associated with the building.",
          "$ref": "#/definitions/codeListType"
        },
        "credits": {
          "description": "Total Credits for all the rooms that belong to this building group.",
          "type": "integer"
        },
        "sequence": {
          "description": "Building Sequence when task assignment is automatically generated by building.",
          "type": "integer"
        },
        "buildingGroupCode": {
          "description": "Building Group to which building belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "buildingsToBeChanged": {
      "type": "object",
      "description": "Request object to change Building details of the Hotel.",
      "properties": {
        "buildings": {
          "description": "Collection containing information of Building details to be changed.",
          "$ref": "#/definitions/buildingsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "buildingsCriteria": {
      "type": "object",
      "description": "Request object to create Building details of the Hotel.",
      "properties": {
        "buildings": {
          "description": "Collection containing information of Building details to be created.",
          "$ref": "#/definitions/buildingsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "floorTypesDetails": {
      "type": "object",
      "description": "Response object for fetching Floor Types.",
      "properties": {
        "floorTypes": {
          "description": "Collection of Floor Types.",
          "$ref": "#/definitions/floorTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "floorTypesType": {
      "type": "array",
      "description": "List of Floor Types.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/floorTypeType"
      }
    },
    "floorTypeType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "floorTypesCriteria": {
      "type": "object",
      "description": "Request object for creating Floor Types.",
      "properties": {
        "floorTypes": {
          "description": "Floor Types to be created.",
          "$ref": "#/definitions/floorTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "floorTypesToBeChanged": {
      "type": "object",
      "description": "Request object for changing Floor Types.",
      "properties": {
        "floorTypes": {
          "description": "Floor Types to be changed.",
          "$ref": "#/definitions/floorTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "floorsDetails": {
      "type": "object",
      "description": "Response object for fetching floors at the hotel level.",
      "properties": {
        "hotelFloors": {
          "description": "Collection of floors specified at the hotel level.",
          "$ref": "#/definitions/hotelFloorsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelFloorsType": {
      "type": "array",
      "description": "This type holds a collection of floors at the hotel level.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelFloorType"
      }
    },
    "hotelFloorType": {
      "type": "object",
      "description": "Base details common between both template and hotel level floors.",
      "properties": {
        "floor": {
          "description": "Specifies the floor code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description for the floor.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "housekeeping": {
          "description": "Flag to indicate if this floor should be available on the Task Sheet Workflow configuration.",
          "type": "boolean"
        },
        "sequence": {
          "description": "Display sequence for the floor.",
          "type": "integer"
        },
        "hotelId": {
          "description": "Specifies the hotel code for which the floor is specified.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "floorsCriteria": {
      "type": "object",
      "description": "Request object for creating floors at the hotel level.",
      "properties": {
        "hotelFloors": {
          "description": "Collection containing details of floors specified at the hotel level which have to be created.",
          "$ref": "#/definitions/hotelFloorsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "floorsToBeChanged": {
      "type": "object",
      "description": "Request object for changing floors at the hotel level.",
      "properties": {
        "hotelFloors": {
          "description": "Collection containing details of floors specified at the hotel level which have to be changed.",
          "$ref": "#/definitions/hotelFloorsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "validateRoomClassInUse": {
      "type": "object",
      "description": "Request object to validate if room type's room class is currently in use.",
      "properties": {
        "hotelId": {
          "description": "Hotel code where room type belongs to.",
          "$ref": "#/definitions/codeType"
        },
        "roomType": {
          "description": "Room Type where room class to be checked belongs to.",
          "$ref": "#/definitions/codeType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "codeType": {
      "type": "string",
      "description": "Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.",
      "minLength": 0,
      "maxLength": 20
    },
    "housekeepingCreditRulesDetails": {
      "type": "object",
      "description": "Response object for fetching housekeeping credit rules.",
      "properties": {
        "creditRules": {
          "description": "List of housekeeping credit rules for configuration.",
          "$ref": "#/definitions/housekeepingCreditRulesType"
        },
        "masterInfoList": {
          "description": "Refer to Generic common types document.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/masterInfoType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "housekeepingCreditRulesType": {
      "type": "array",
      "description": "The information of housekeeping credit rule for configuration.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/housekeepingCreditRuleType"
      }
    },
    "housekeepingCreditRuleType": {
      "type": "object",
      "description": "The information of housekeeping credit rule for configuration.",
      "properties": {
        "hotelId": {
          "description": "Hotel Code where housekeeping credit rule belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ruleCode": {
          "description": "Rule Code of housekeeping credit rule.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ruleType": {
          "description": "Rule Type of housekeeping credit rule.",
          "$ref": "#/definitions/housekeepingCreditRuleTypeType"
        },
        "description": {
          "description": "Description of housekeeping credit rule.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "facilityTaskRule": {
          "description": "When RuleType is set to FacilityTask, specifies task code and minimum task count.",
          "type": "object",
          "properties": {
            "taskCode": {
              "description": "When RuleType is set to FacilityTask, specifies which task code makes this credit rule applicable. For example, the credit value will be added to the task assignment sheet when this specific task code is assigned.",
              "type": "string",
              "minLength": 0,
              "maxLength": 20
            },
            "minimumTaskCount": {
              "description": "When RuleType is set to FacilityTask, specifies the minimum number of the facility task that must be assigned to a sheet before the rule is applicable to that sheet.",
              "type": "integer"
            }
          }
        },
        "special": {
          "description": "When RuleType is set to Special, specifies which special makes this credit rule applicable. For example, the credit value will be added to the task assignment sheet when the assigned room has this specific special applied to the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "travelType": {
          "description": "When RuleType is set to Travelling, specifies multiples of what unit makes this credit rule applicable. Possible values are Buildings, Section Groups, Sections, or Floors. For example, the credit value will be added to the task assignment sheet when there are rooms from multiple buildings, section groups, sections, or floors assigned.",
          "$ref": "#/definitions/housekeepingCreditRuleTravelTypeType"
        },
        "creditValue": {
          "description": "The additional credits which are applied to the task assignment sheet when the rule criteria has been met.",
          "type": "number"
        },
        "buildings": {
          "description": "List of buildings codes to which the credit rule is applicable. If no building codes are provided, the rule is applicable to the entire hotel. This element is only applicable when the parameter for BUILDINGS is active.",
          "$ref": "#/definitions/codeListType"
        },
        "daysOfWeek": {
          "description": "Days of the week for which the credit rule is automatically applied to task sheets. If no days of the week are specified the rule must be applied manually.",
          "$ref": "#/definitions/timeSpanDaysOfWeekType"
        },
        "inactive": {
          "description": "Indicates if the Housekeeping Credit Rule is inactive.",
          "type": "boolean"
        },
        "itemInventory": {
          "description": "When RuleType is set to Item Inventory, specifies which item inventory makes this credit rule applicable. For example, the credit value will be added to the task assignment sheet when the assigned room has this specific item inventory applied to the reservation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "housekeepingCreditRuleTypeType": {
      "type": "string",
      "description": "A Facility Rule will add extra credit to a task assignment sheet when certain task conditions exist. Multiple Facility Task Rules will be applied on top of each other if the conditions are met. A Miscellaneous Rule will add extra credit to a task assignment sheet when the attendants are occupied with anything other than cleaning a room, for example a team meeting. A Special Rule will add extra credit to a task assignment sheet when the defined Specials are attached to a reservation. A Traveling Rule will add extra credit to a task assignment sheet when rooms from multiple Buildings, Section Groups, Sections and/or Floors are assigned. An Inventory Item Rule will add extra credit to a task assignment sheet when the defined Items are attached to a reservation.",
      "enum": [
        "FacilityTask",
        "Miscellaneous",
        "Special",
        "Travelling",
        "ItemInventory"
      ]
    },
    "housekeepingCreditRuleTravelTypeType": {
      "type": "string",
      "description": "Applies to rooms across multiple section groups.",
      "enum": [
        "Building",
        "Floor",
        "Section",
        "SectionGroup"
      ]
    },
    "timeSpanDaysOfWeekType": {
      "type": "object",
      "description": "Container for Time span with days of week.",
      "properties": {
        "timeSpan": {
          "$ref": "#/definitions/timeSpanType"
        },
        "sunday": {
          "type": "boolean"
        },
        "monday": {
          "type": "boolean"
        },
        "tuesday": {
          "type": "boolean"
        },
        "wednesday": {
          "type": "boolean"
        },
        "thursday": {
          "type": "boolean"
        },
        "friday": {
          "type": "boolean"
        },
        "saturday": {
          "type": "boolean"
        }
      }
    },
    "timeSpanType": {
      "type": "object",
      "description": "Allows for a choice in description of the amount of time spanned by this type. EndDate specifies a specific date, while Duration provides a measure of time to add to the StartDate to yield end date.",
      "properties": {
        "startDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "duration": {
          "type": "string"
        }
      }
    },
    "masterInfoType": {
      "type": "object",
      "properties": {
        "codeInfo": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/codeInfoType"
          }
        },
        "codeType": {
          "$ref": "#/definitions/masterType"
        }
      }
    },
    "codeInfoType": {
      "type": "object",
      "description": "",
      "properties": {
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "addtionalCodeInfo": {
          "$ref": "#/definitions/addtionalCodeInfoType"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "addtionalCodeInfoType": {
      "type": "array",
      "description": "Holds name of additional code information",
      "maxItems": 4000,
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Holds name of additional code information",
            "$ref": "#/definitions/masterInfoCodeDetailType"
          },
          "value": {
            "description": "Holds value of additional code information",
            "type": "string",
            "minLength": 0,
            "maxLength": 2000
          }
        }
      }
    },
    "masterInfoCodeDetailType": {
      "type": "string",
      "enum": [
        "LongDescription",
        "ShortDescription"
      ]
    },
    "masterType": {
      "type": "string",
      "enum": [
        "Country",
        "State",
        "AddressType",
        "PhoneType",
        "RateCategory",
        "CalculationRule",
        "PostingRythym",
        "BillingInstruction",
        "TransactionCode",
        "DisplaySet",
        "MailingActions",
        "DistanceType",
        "District",
        "Territory",
        "FiscalRegion",
        "InventoryItem",
        "Package",
        "RoomFeaturePreference",
        "SpecialPreference",
        "Promotion",
        "Department",
        "ReservationPreference",
        "FacilityTask",
        "RoomType",
        "RateCode",
        "OutOfOrderReason",
        "Block"
      ]
    },
    "housekeepingCreditRulesCriteria": {
      "type": "object",
      "description": "Request object for creating housekeeping credit rules.",
      "properties": {
        "creditRules": {
          "description": "List of housekeeping credit rules for configuration.",
          "$ref": "#/definitions/housekeepingCreditRulesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "housekeepingCreditRulesToBeChanged": {
      "type": "object",
      "description": "Request object for changing housekeeping credit rules.",
      "properties": {
        "creditRules": {
          "description": "List of housekeeping credit rules for configuration.",
          "$ref": "#/definitions/housekeepingCreditRulesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "housekeepingAttendantsDetails": {
      "type": "object",
      "description": "Response object for fetching Housekeeping Attendants.",
      "properties": {
        "housekeepingAttendants": {
          "description": "Criteria to Housekeeping Attendants.",
          "$ref": "#/definitions/housekeepingAttendantsConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "housekeepingAttendantsConfigType": {
      "type": "array",
      "description": "Housekeeping Attendant Information.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/housekeepingAttendantType"
      }
    },
    "housekeepingAttendantType": {
      "type": "object",
      "description": "Housekeeping Attendant Information.",
      "properties": {
        "hotelId": {
          "description": "Resort Code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "attendantId": {
          "description": "An attendant ID.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "name": {
          "description": "An attendant ID.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "phoneNo": {
          "description": "An attendant's phone No.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "section": {
          "description": "Section where the attendant is assigned.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "floor": {
          "description": "Floor where the attendant is assigned.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "job": {
          "description": "Job which the attendant is assigned.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "workingDays": {
          "description": "Attendant's working days",
          "$ref": "#/definitions/daysOfWeekAttrType"
        },
        "appUser": {
          "description": "Application User ID assigned for the attendant.",
          "type": "string",
          "minLength": 0,
          "maxLength": 60
        },
        "inactive": {
          "description": "Indicates whether the attendant is active or not.",
          "type": "boolean"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "daysOfWeekAttrType": {
      "type": "object",
      "properties": {
        "sunday": {
          "type": "boolean"
        },
        "monday": {
          "type": "boolean"
        },
        "tuesday": {
          "type": "boolean"
        },
        "wednesday": {
          "type": "boolean"
        },
        "thursday": {
          "type": "boolean"
        },
        "friday": {
          "type": "boolean"
        },
        "saturday": {
          "type": "boolean"
        }
      }
    },
    "housekeepingAttendantsCriteria": {
      "type": "object",
      "description": "Add housekeeping attendant(S).",
      "properties": {
        "attendants": {
          "description": "List of the housekeeping attendant(s) to be added to the configuration of resort.",
          "$ref": "#/definitions/housekeepingAttendantsConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "housekeepingAttendantsToBeChanged": {
      "type": "object",
      "description": "Modify housekeeping attendants",
      "properties": {
        "attendants": {
          "description": "List of the housekeeping attendant(s) to be modified.",
          "$ref": "#/definitions/housekeepingAttendantsConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "housekeepingRoomSchedulesDetails": {
      "type": "object",
      "description": "Response object for fetching housekeeping tasks and housekeeping codes associated to a room type.",
      "properties": {
        "housekeepingRoomSchedules": {
          "description": "Collection of housekeeping tasks and housekeeping codes associated to a room type.",
          "$ref": "#/definitions/configHousekeepingRoomSchedulesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "configHousekeepingRoomSchedulesType": {
      "type": "array",
      "description": "This type holds a collection of housekeeping tasks attached to a room type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/configHousekeepingRoomScheduleType"
      }
    },
    "configHousekeepingRoomScheduleType": {
      "type": "object",
      "description": "Facility Housekeeping task code and description.",
      "properties": {
        "description": {
          "description": "Facility task description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "priority": {
          "description": "Signifies the priority of the task.",
          "type": "integer"
        },
        "code": {
          "description": "Code of the housekeeping task.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "credits": {
          "description": "Housekeeping credits associated with this housekeeping task.",
          "type": "integer"
        },
        "frequency": {
          "description": "Signifies frequency(i.e. every 2 days) with which housekeeping task is to be performed.",
          "$ref": "#/definitions/frequencyTypeType"
        },
        "frequencyDays": {
          "description": "Specify how often in days following the guest's arrival date, the housekeeping task is to be completed.",
          "type": "integer"
        },
        "specialRequests": {
          "description": "Specify a particular Special code to associate to a housekeeping task code.",
          "$ref": "#/definitions/codeListType"
        },
        "vIPStatuses": {
          "description": "Specify a particular VIP code to associate to a housekeeping task code.",
          "$ref": "#/definitions/codeListType"
        },
        "sequence": {
          "description": "Used to store the housekeeping task sequence.",
          "type": "integer"
        },
        "daysOfWeek": {
          "description": "This option, if applied, works in conjunction with the Every XX Day(s) option to allow you to control the days of the week on which this housekeeping task can take place.",
          "$ref": "#/definitions/timeSpanDaysOfWeekType"
        },
        "rateCodes": {
          "description": "Specify one or more Rate Codes to associate to a specific housekeeping task code.",
          "$ref": "#/definitions/codeListType"
        },
        "marketCodes": {
          "description": "Specify one or more Market Codes to associate to a specific housekeeping task code.",
          "$ref": "#/definitions/codeListType"
        },
        "cycleStartDay": {
          "description": "Signifies offset(in days) i.e. start on 3rd day from arrival.",
          "type": "integer"
        },
        "customizePromptText": {
          "description": "The information that is entered into this text box.",
          "type": "string",
          "minLength": 0,
          "maxLength": 400
        },
        "taskSupplies": {
          "description": "Collection of housekeeping task supplies for a room type.",
          "$ref": "#/definitions/configHousekeepingRoomScheduleTaskSuppliesType"
        },
        "roomType": {
          "description": "Specifies the room type code with description.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "guestRequested": {
          "description": "Signifies whether housekeeping task is a guest requested task.",
          "type": "boolean"
        },
        "defaultDepartureTask": {
          "description": "Signifies that task is a default task for the checked out room.",
          "type": "boolean"
        },
        "moveup": {
          "description": "Automatically moves the task up one day if it falls on the day before the guest's departure. It will only be available when the schedule is set to every 3 days or more.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Specifies the hotel code that the room type belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "membershipType": {
          "description": "Specify a Membership Type to associate to a specific housekeeping task code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "membershipLevels": {
          "description": "Specify one or more Membership Levels to associate to a specific housekeeping task code.",
          "$ref": "#/definitions/codeListType"
        }
      }
    },
    "frequencyTypeType": {
      "type": "string",
      "description": "Simple type for storing frequency type.",
      "enum": [
        "Everyday",
        "EveryXDays",
        "CustomSchedule",
        "DepartureDayOnly",
        "ArrivalDayOnly",
        "NotRequired",
        "SpecificDays"
      ]
    },
    "configHousekeepingRoomScheduleTaskSuppliesType": {
      "type": "array",
      "description": "This type holds a collection of housekeeping task supplies attached to a room type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/configHousekeepingRoomScheduleTaskSupplyType"
      }
    },
    "configHousekeepingRoomScheduleTaskSupplyType": {
      "type": "object",
      "description": "Facility Housekeeping Code, its description and quantity.",
      "properties": {
        "description": {
          "description": "Facility Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "quantity": {
          "description": "Signifies the quantity.",
          "type": "integer"
        },
        "code": {
          "description": "Facility code value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sequence": {
          "description": "Used to store the housekeeping room schedule sequence.",
          "type": "integer"
        },
        "roomType": {
          "description": "Specifies the room type code with description.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "hotelId": {
          "description": "Specifies the hotel code that the room type belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "housekeepingRoomScheduleCode": {
          "description": "Specifies the housekeeping room schedule code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "codeDescriptionType": {
      "type": "object",
      "description": "This contains a generic code and description information.",
      "properties": {
        "code": {
          "description": "Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "description.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "housekeepingRoomSchedulesCriteria": {
      "type": "object",
      "description": "Request object for associating housekeeping tasks and housekeeping codes to a room type.",
      "properties": {
        "housekeepingRoomSchedules": {
          "description": "Collection containing details of housekeeping tasks and housekeeping codes to be associated to a room type.",
          "$ref": "#/definitions/configHousekeepingRoomSchedulesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "housekeepingRoomSchedulesToBeChanged": {
      "type": "object",
      "description": "Request object for changing housekeeping tasks and housekeeping codes associated to a room type.",
      "properties": {
        "housekeepingRoomSchedules": {
          "description": "Collection containing details of housekeeping tasks and housekeeping codes associated to a room type which have to be changed.",
          "$ref": "#/definitions/configHousekeepingRoomSchedulesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "housekeepingSectionGroupsDetails": {
      "type": "object",
      "description": "Response object for fetching housekeeping section Groups.",
      "properties": {
        "housekeepingSectionGroups": {
          "description": "Collection of housekeeping section Groups.",
          "$ref": "#/definitions/housekeepingSectionGroupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "housekeepingSectionGroupsType": {
      "type": "array",
      "description": "List of the housekeeping section groups to be configured or fetched",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/housekeepingSectionGroupType"
      }
    },
    "housekeepingSectionGroupType": {
      "type": "object",
      "description": "Detailed information of Housekeeping Section Group.",
      "properties": {
        "hotelId": {
          "description": "Property of the Housekeeping section group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Housekeeping Section Group Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Housekeeping Section Group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "targetCredits": {
          "description": "Target Credit for each task Sheet when auto task assignment is broken out per Section Group.",
          "type": "integer"
        },
        "sequence": {
          "description": "Display sequence when task assignment is automatically broken out by Section Group.",
          "type": "integer"
        },
        "rooms": {
          "description": "Rooms count for this section group. This is auto populated while creating/fetching record.",
          "type": "integer"
        },
        "roomCredits": {
          "description": "Number of housekeeping credits. This is auto populated while creating/fetching record.",
          "type": "integer"
        }
      }
    },
    "housekeepingSectionGroupsCriteria": {
      "type": "object",
      "description": "Request object to create House Keeping Section Groups for resort.",
      "properties": {
        "housekeepingSectionGroups": {
          "description": "List of house keeping section groups to create for a resort.",
          "$ref": "#/definitions/housekeepingSectionGroupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "housekeepingSectionGroupsToBeChanged": {
      "type": "object",
      "description": "Request object for modifying housekeeping section groups in resort.",
      "properties": {
        "housekeepingSectionGroups": {
          "description": "List of house keeping section groups to change.",
          "$ref": "#/definitions/housekeepingSectionGroupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "housekeepingSectionsDetails": {
      "type": "object",
      "description": "Response object for fetching housekeeping section codes.",
      "properties": {
        "housekeepingSections": {
          "description": "Collection of housekeeping section codes.",
          "$ref": "#/definitions/housekeepingSectionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "housekeepingSectionsType": {
      "type": "array",
      "description": "List of the housekeeping sections to be configured or fetched",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/housekeepingSectionType"
      }
    },
    "housekeepingSectionType": {
      "type": "object",
      "description": "Information regarding Housekeeping Sections.",
      "properties": {
        "hotelId": {
          "description": "Property where this section is defined.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "The Housekeeping Section Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the Section.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "sectionGroup": {
          "description": "Housekeeping Section Group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "targetCredits": {
          "description": "Target Credit for each task sheet created for this section when auto task assignment is broken out by section.",
          "type": "integer"
        },
        "rooms": {
          "description": "Rooms count for this section code. This is auto populated while creating/fetching record.",
          "type": "integer"
        },
        "roomCredits": {
          "description": "Number of housekeeping credits. This is auto populated while creating/fetching record.",
          "type": "integer"
        },
        "sequence": {
          "description": "Display sequence when task assignment is automatically broken out by Section Group.",
          "type": "integer"
        },
        "inactive": {
          "description": "Indicates if the Section Code is active.",
          "type": "boolean"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "housekeepingSectionsCriteria": {
      "type": "object",
      "description": "Add housekeeping section codes configurations for resort.",
      "properties": {
        "housekeepingSections": {
          "description": "Add the housekeeping section code to the configuration of resort.",
          "$ref": "#/definitions/housekeepingSectionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "housekeepingSectionsToBeChanged": {
      "type": "object",
      "description": "Modify housekeeping section codes in resort configurations.",
      "properties": {
        "housekeepingSections": {
          "description": "The housekeeping section code to be modified in the configuration of the resort.",
          "$ref": "#/definitions/housekeepingSectionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "housekeepingCodesDetails": {
      "type": "object",
      "description": "Response object for fetching housekeeping codes.",
      "properties": {
        "codes": {
          "description": "Collection of housekeeping tasks.",
          "$ref": "#/definitions/housekeepingCodesConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "housekeepingCodesConfigType": {
      "type": "array",
      "description": "List of the housekeeping codes to be configured or fetched",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/housekeepingCodeConfigType"
      }
    },
    "housekeepingCodeConfigType": {
      "type": "object",
      "description": "Common code type for code, description",
      "properties": {
        "code": {
          "description": "Code for the code type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description for the code type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "sequence": {
          "description": "Display sequence for the housekeeping task.",
          "type": "number"
        },
        "hotelId": {
          "description": "Hotel Code for a housekeeping task.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "housekeepingCodesCriteria": {
      "type": "object",
      "description": "Add housekeeping codes configurations for property.",
      "properties": {
        "codes": {
          "description": "List of the housekeeping code(s) to be added to the configuration of resort.",
          "$ref": "#/definitions/housekeepingCodesConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "housekeepingCodesToBeChanged": {
      "type": "object",
      "description": "Modify housekeeping codes in resort configurations.",
      "properties": {
        "codes": {
          "description": "List of the housekeeping code(s) to be modified in the configuration of the resort.",
          "$ref": "#/definitions/housekeepingCodesConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "housekeepingTaskSheetRoomsDetails": {
      "type": "object",
      "description": "Response object for fetching details about housekeeping tasksheet rooms.",
      "properties": {
        "housekeepingTaskSheetRooms": {
          "description": "Collection containing information of housekeeping tasksheet rooms.",
          "$ref": "#/definitions/housekeepingTaskSheetRoomsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "housekeepingTaskSheetRoomsType": {
      "type": "array",
      "description": "Collection of housekeeping room details",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/housekeepingTaskSheetRoomType"
      }
    },
    "housekeepingTaskSheetRoomType": {
      "type": "object",
      "description": "Details used for storing information about a housekeeping room",
      "properties": {
        "hotelId": {
          "description": "Specifies the hotel code of the housekeeping room",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "room": {
          "description": "Specifies the housekeeping room code",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "description": "Specifies the housekeeping room type",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "building": {
          "description": "Specifies the building to which the housekeeping room is mapped to. This element will be used only if the BUILDINGS parameter is active.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "floor": {
          "description": "Specifies the floor to which the housekeeping room is mapped to",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "daySectionCode": {
          "description": "Specifies the day section code. This element will be used only if the HOUSEKEEPING_SECTIONS parameter is active.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "eveningSectionCode": {
          "description": "Specifies the evening section code. This element will be used only if the HOUSEKEEPING_SECTIONS parameter is active.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "ruleCredit": {
          "description": "This element will be used only if the value of HOUSEKEEPING_CREDITS setting is set to ROOM_TASK_RULE or FACILITY.",
          "type": "object",
          "properties": {
            "credits": {
              "description": "Specifies the base credits defined for each housekeeping room. This element will be used only if the value of HOUSEKEEPING_CREDITS setting is set to ROOM_TASK_RULE.",
              "type": "integer"
            },
            "turndownCredits": {
              "description": "Specifies the turndown credits for each housekeeping room. This element will be used only if the TURNDOWN parameter is active and HOUSEKEEPING_CREDITS setting is set to a value other than NONE.",
              "type": "integer"
            }
          }
        },
        "roomCredit": {
          "description": "This element will be used only if the value of HOUSEKEEPING_CREDITS setting is set to ROOM. Room credits can be defined for Stayover, Turndown, Departure and Pickup. For Turndown Credits to be used, the TURNDOWN parameter should be active and HOUSEKEEPING_CREDITS setting should be set to a value other than NONE. For Pickup Credits to be used, the PICKUP_STATUS parameter should be active.",
          "type": "array",
          "maxItems": 4,
          "items": {
            "$ref": "#/definitions/housekeepingCreditsType"
          }
        },
        "sequence": {
          "description": "Specifies the sorting sequence number for the housekeeping room",
          "type": "integer"
        }
      }
    },
    "housekeepingCreditsType": {
      "type": "object",
      "description": "Information regarding the credits for housekeeping tasks/rooms.",
      "properties": {
        "type": {
          "description": "The Type of Credit. Example: TOTAL credits for the task sheet, total TRAVELLING credits for the task sheet.",
          "$ref": "#/definitions/housekeepingCreditsDefinitionType"
        },
        "numberOfCredits": {
          "description": "Total number of Credits for the Type.",
          "type": "number"
        }
      }
    },
    "housekeepingCreditsDefinitionType": {
      "type": "string",
      "description": "Type for the different kinds of Credits which will be used in Rooms Management.",
      "enum": [
        "Departure",
        "Pickup",
        "Turndown",
        "StayOver",
        "FacilityTask",
        "Travelling",
        "Total"
      ]
    },
    "setHousekeepingTaskSheetRooms": {
      "type": "object",
      "description": "Request object for setting details about housekeeping tasksheet rooms.",
      "properties": {
        "housekeepingTaskSheetRooms": {
          "description": "Collection containing information which has to be set for housekeeping tasksheet rooms.",
          "$ref": "#/definitions/housekeepingTaskSheetRoomsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "housekeepingTasksDetails": {
      "type": "object",
      "description": "Response object for fetching housekeeping tasks.",
      "properties": {
        "tasks": {
          "description": "Collection of housekeeping tasks.",
          "$ref": "#/definitions/housekeepingTasksConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "housekeepingTasksConfigType": {
      "type": "array",
      "description": "List of the housekeeping tasks to be configured",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/housekeepingTaskConfigType"
      }
    },
    "housekeepingTaskConfigType": {
      "type": "object",
      "description": "Common code type for code, description",
      "properties": {
        "code": {
          "description": "Code for the code type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description for the code type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "instructions": {
          "description": "Instructions of the housekeeping task.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "sequence": {
          "description": "Display sequence for the housekeeping task.",
          "type": "number"
        },
        "color": {
          "description": "Display sequence for the housekeeping task.",
          "$ref": "#/definitions/colorType"
        },
        "linenChange": {
          "description": "Signifies whether housekeeping task requires linen change.",
          "type": "boolean"
        },
        "guestRequested": {
          "description": "Signifies whether housekeeping task is a guest requested task.",
          "type": "boolean"
        },
        "defaultDepartureTask": {
          "description": "Signifies that task is a default task for the checked out room.",
          "type": "boolean"
        },
        "protected": {
          "description": "Flag that determines whether this record is protected from removing or not",
          "type": "boolean"
        },
        "appliedCreditsPercentage": {
          "description": "Percentage of Credits that will be used for this task. Used when the Housekeeping Credits functionality is set to use ROOM_TASK_RULE. The default value is 100.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "inactive": {
          "description": "Indicates if the task is inactive.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel Code for a housekeeping task.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "colorType": {
      "type": "string",
      "description": "Color configuration type. This color configuration provides a visual category of entities.",
      "enum": [
        "Red",
        "DarkRed",
        "Green",
        "DarkGreen",
        "LightGreen",
        "Orange",
        "White",
        "Yellow",
        "DarkYellow",
        "Purple",
        "Brown",
        "Gray",
        "Aqua",
        "Chocolate",
        "Blue",
        "LightBlue",
        "DarkBlue",
        "Cyan",
        "DarkCyan",
        "Magenta",
        "DarkMagenta",
        "Black"
      ]
    },
    "housekeepingTasksCriteria": {
      "type": "object",
      "description": "Add housekeeping tasks configurations for resort.",
      "properties": {
        "tasks": {
          "description": "List of the housekeeping task(s) to be added to the configuration of resort.",
          "$ref": "#/definitions/housekeepingTasksConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "housekeepingTasksToBeChanged": {
      "type": "object",
      "description": "Modify housekeeping tasks in resort configurations.",
      "properties": {
        "tasks": {
          "description": "List of the housekeeping task(s) to be modified in the configuration of the resort.",
          "$ref": "#/definitions/housekeepingTasksConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "outOfOrderServiceReasonsDetails": {
      "type": "object",
      "description": "Response object for fetching Out of Order/Service Reason(s).",
      "properties": {
        "outOfOrderServiceReasons": {
          "description": "Collection of out of order/service reasons.",
          "$ref": "#/definitions/outOfOrderServiceReasonsType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "outOfOrderServiceReasonsType": {
      "type": "array",
      "description": "out of order/service reason details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/outOfOrderServiceReasonType"
      }
    },
    "outOfOrderServiceReasonType": {
      "type": "object",
      "description": "Base details of the Out of order/service reason.",
      "properties": {
        "description": {
          "description": "Description for the out of order/service reason.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "sequence": {
          "description": "Sequence number for displaying the out of order/service reason.",
          "type": "integer"
        },
        "reasonCode": {
          "description": "Out of order/service reason code identifying the reason.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "inactive": {
          "description": "Indicator that tells whether the out of order/service reason in the hotel is active or not.",
          "type": "boolean"
        },
        "includeInStatisticsYn": {
          "description": "Indicator for RNA to use to decide whether to include this room status in statistics, with no functional impact.",
          "type": "boolean"
        },
        "deductYn": {
          "description": "Indicator for room status display. Room status configured with 'true' will be displayed as OOO, 'false' will be displayed as OOS.",
          "type": "boolean"
        },
        "returnTimeRequired": {
          "description": "Indicator for Return Time Required display. If configured to true, then a time will be mandatory to determine when this unit (room) will be back to the inventory of the available rooms.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel code the out of order/service reason belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "outOfOrderServiceReasonsCriteria": {
      "type": "object",
      "description": "Request object for creating new out of order/service reasons for hotels.",
      "properties": {
        "outOfOrderServiceReasons": {
          "description": "Collection of out of order/service reasons to be created.",
          "$ref": "#/definitions/outOfOrderServiceReasonsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "outOfOrderServiceReasonsToBeChanged": {
      "type": "object",
      "description": "Request object for modifying out of order/service reasons for hotels.",
      "properties": {
        "outOfOrderServiceReasons": {
          "description": "Collection of out of order/service reasons to be modified.",
          "$ref": "#/definitions/outOfOrderServiceReasonsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomGroupsDetails": {
      "type": "object",
      "description": "Response object for fetching Room Groups.",
      "properties": {
        "roomGroups": {
          "description": "Collection of Room Pools fetched.",
          "$ref": "#/definitions/roomGroupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomGroupsType": {
      "type": "array",
      "description": "List of Room Pools.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomGroupType"
      }
    },
    "roomGroupType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "hotelId": {
          "description": "Hotel of the record.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "roomGroupsCriteria": {
      "type": "object",
      "description": "Request object for creating Room Groups.",
      "properties": {
        "roomGroups": {
          "description": "Collection of Room Groups to create.",
          "$ref": "#/definitions/roomGroupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomGroupsToBeChanged": {
      "type": "object",
      "description": "Request object for changing Room Groups.",
      "properties": {
        "roomGroups": {
          "description": "Collection of Room Groups to change.",
          "$ref": "#/definitions/roomGroupsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomClassesDetails": {
      "type": "object",
      "description": "Response object for fetching existing hotel level room classes.",
      "properties": {
        "roomClasses": {
          "description": "Collection of hotel level room classes and their information.",
          "$ref": "#/definitions/roomClassesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomClassesType": {
      "type": "array",
      "description": "Collection of hotel level room classes with attached room types.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomClassType"
      }
    },
    "roomClassType": {
      "type": "object",
      "description": "Common code type for code, description, seq and inactive",
      "properties": {
        "description": {
          "description": "Description for the code type.",
          "$ref": "#/definitions/translationTextType50"
        },
        "sequence": {
          "description": "Display sequence for the code type.",
          "type": "integer"
        },
        "code": {
          "description": "Code for the code type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "inactive": {
          "description": "Indicates the code type is inactive or not.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel code for the code type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomTypes": {
          "description": "Room types of a room class.",
          "$ref": "#/definitions/roomTypesSummaryType"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "translationTextType50": {
      "type": "object",
      "description": "Contains Multiple translated texts and language codes.",
      "properties": {
        "defaultText": {
          "description": "Default text with Character length from 0 to 50.",
          "type": "string",
          "minLength": 0,
          "maxLength": 50
        },
        "translatedTexts": {
          "description": "List of translated text and language codes.",
          "$ref": "#/definitions/translationsTextType"
        }
      }
    },
    "roomTypesSummaryType": {
      "type": "object",
      "description": "This type holds collection of room type.",
      "properties": {
        "roomTypeSummary": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomTypeSummaryType"
          }
        },
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "roomTypeSummaryType": {
      "type": "object",
      "description": "This type represents the summary of room type attributes.",
      "properties": {
        "roomClass": {
          "description": "Room class for the room type code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "shortDescription": {
          "description": "Short Description of room type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "activeDate": {
          "description": "Active date of the room type.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "pseudo": {
          "description": "Indicates if room type is pseudo.",
          "type": "boolean"
        },
        "accessible": {
          "description": "Indicates if room type is accessible.",
          "type": "boolean"
        },
        "sendToInterface": {
          "description": "Indicates if room type is sent to interface.",
          "type": "boolean"
        },
        "sellSequence": {
          "description": "Indicates room types sell sequence.",
          "type": "number"
        },
        "suite": {
          "description": "Indicates room type is a suite.",
          "type": "boolean"
        },
        "meetingRoom": {
          "description": "Indicates room type is meeting room. This Can be Meeting room flag cannot be unmarked at the property level. Can only be marked for non pseudo room types.",
          "type": "boolean"
        },
        "roomType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "numberOfRooms": {
          "description": "Number of rooms for this room type.",
          "type": "integer"
        },
        "inactive": {
          "description": "Indicates the room type is inactive or not.",
          "type": "boolean"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "roomClassCriteria": {
      "type": "object",
      "description": "Request object for creating a new hotel level room class.",
      "properties": {
        "roomClass": {
          "description": "Room class details to be created.",
          "$ref": "#/definitions/roomClassType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomClassToBeChanged": {
      "type": "object",
      "description": "Request object for changing an existing hotel level room class.",
      "properties": {
        "roomClass": {
          "description": "Room class details to be changed.",
          "$ref": "#/definitions/roomClassType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "resortRoomConditionsDetails": {
      "type": "object",
      "description": "Response object for information regarding room condition configuration in a resort.",
      "properties": {
        "roomConditions": {
          "description": "Contains the results of a successful operation.",
          "$ref": "#/definitions/roomCondtionsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomCondtionsType": {
      "type": "array",
      "description": "Collection of Resort Room Condition Configuration Type",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomCondtionType"
      }
    },
    "roomCondtionType": {
      "type": "object",
      "description": "Resort Room Condition Configuration Type",
      "properties": {
        "description": {
          "description": "Description for the room condition.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "displayInRoomAssignment": {
          "description": "Indicates types of assignment.",
          "type": "boolean"
        },
        "comments": {
          "description": "Comments for the room condition.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "displaySeq": {
          "type": "integer"
        },
        "inactive": {
          "type": "boolean"
        },
        "holdMinutes": {
          "type": "integer"
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "resortRoomConditionCriteria": {
      "type": "object",
      "description": "Request object for Create Room Condition.",
      "properties": {
        "roomCondition": {
          "description": "Room Condition details to be created.",
          "$ref": "#/definitions/roomCondtionType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "resortRoomConditionToBeChanged": {
      "type": "object",
      "description": "Request object for Modifying Room Condition configuration in a resort.",
      "properties": {
        "roomCondition": {
          "description": "Room Condition details to be updated.",
          "$ref": "#/definitions/roomCondtionType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomFeaturesDetails": {
      "type": "object",
      "description": "Response object to fetch room features of hotel.",
      "properties": {
        "roomFeatures": {
          "description": "Collection of hotel room features.",
          "$ref": "#/definitions/roomFeaturesConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomFeaturesConfigType": {
      "type": "array",
      "description": "Room feature details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomFeatureConfigType"
      }
    },
    "roomFeatureConfigType": {
      "type": "object",
      "description": "Common code type for code, description, seq and inactive",
      "properties": {
        "description": {
          "description": "Description for the code type.",
          "$ref": "#/definitions/translationTextType50"
        },
        "sequence": {
          "description": "Display sequence for the code type.",
          "type": "integer"
        },
        "code": {
          "description": "Code for the code type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "inactive": {
          "description": "Indicates the code type is inactive or not.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel code for the code type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "groupCode": {
          "description": "Group code to which this code type belongs.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "mappedPreferenceCodes": {
          "description": "Preference codes mapped to the room feature.",
          "$ref": "#/definitions/configHotelPreferencesType"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "configHotelPreferencesType": {
      "type": "array",
      "description": "This type holds a collection of preferences at the property level.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/configHotelPreferenceType"
      }
    },
    "configHotelPreferenceType": {
      "type": "object",
      "description": "Base details common between both template and property level preferences.",
      "properties": {
        "description": {
          "description": "The description about the preference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "code": {
          "description": "Specifies the preference code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "preferenceGroup": {
          "description": "Specifies the preference group the preference belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "preferenceSubGroup": {
          "description": "This is a placeholder element for future use. Functionality may not be available for the current implementation.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "housekeeping": {
          "description": "Flag to indicate if this preference should be available on the Task Sheet Workflow configuration. It is only applicable for preference types FLOOR and SPECIALS.",
          "type": "boolean"
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "hotelId": {
          "description": "Specifies the hotel code for which the preference is specified.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "roomFeaturesToBeChanged": {
      "type": "object",
      "description": "Request object for changing room features of hotel.",
      "properties": {
        "roomFeatures": {
          "description": "Collection containing details of hotel room features.",
          "$ref": "#/definitions/roomFeaturesConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomFeaturesCriteria": {
      "type": "object",
      "description": "Request object for creating room features of hotel.",
      "properties": {
        "roomFeatures": {
          "description": "Collection containing details of room features of hotel.",
          "$ref": "#/definitions/roomFeaturesConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelRoomMaintenanceReasonsDetails": {
      "type": "object",
      "description": "Response object for fetching room maintenance reasons for a hotel.",
      "properties": {
        "hotelRoomMaintenanceReasons": {
          "description": "Collection of hotel level room maintenance reasons.",
          "$ref": "#/definitions/hotelRoomMaintenanceReasonsType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelRoomMaintenanceReasonsType": {
      "type": "array",
      "description": "Details for room maintenance reason at hotel level.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/hotelRoomMaintenanceReasonType"
      }
    },
    "hotelRoomMaintenanceReasonType": {
      "type": "object",
      "description": "Base common structure for Room Maintenance at both hotel and template levels.",
      "properties": {
        "code": {
          "description": "Identification code for a particular room maintenance reason.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of a particular room maintenance reason.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "sellSequence": {
          "description": "Indicates the sell sequence for a particular room maintenance reason.",
          "type": "number"
        },
        "inactive": {
          "description": "Inactive flag for a particular room maintenance reason.",
          "type": "boolean"
        },
        "hotelId": {
          "description": "Hotel code that a particular room maintenance reason belongs to.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "hotelRoomMaintenanceReasonsCriteria": {
      "type": "object",
      "description": "Request object for creating new room maintenance reasons for a hotel.",
      "properties": {
        "hotelRoomMaintenanceReasons": {
          "description": "Collection of hotel room maintenance reasons to be created.",
          "$ref": "#/definitions/hotelRoomMaintenanceReasonsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "hotelRoomMaintenanceReasonsToBeChanged": {
      "type": "object",
      "description": "Request object for modifying room maintenance reasons for a hotel.",
      "properties": {
        "hotelRoomMaintenanceReasons": {
          "description": "Collection of hotel room maintenance reason to be changed.",
          "$ref": "#/definitions/hotelRoomMaintenanceReasonsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomTypeInfoDetails": {
      "type": "object",
      "description": "Response object for fetching room type information.",
      "properties": {
        "roomTypeMasterInfoType": {
          "description": "Room Type information based on the search criteria.",
          "$ref": "#/definitions/roomTypeMasterInfoType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomTypeMasterInfoType": {
      "type": "object",
      "description": "The RoomType element is used to contain all the room type information for a single room type.",
      "properties": {
        "roomType": {
          "description": "Room type information",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomTypeInfoType"
          }
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "roomTypeInfoType": {
      "type": "object",
      "properties": {
        "longDescription": {
          "description": "Detail description of the Room Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "webName": {
          "description": "Name corresponding to a RoomType.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "webPage": {
          "description": "URL providing more information about the Room Type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "roomFeatures": {
          "description": "Collection of room features.",
          "$ref": "#/definitions/roomFeaturesType"
        },
        "roomTypeAttributes": {
          "description": "Room type attributes.",
          "$ref": "#/definitions/roomTypeAttributesType"
        },
        "bookingChannelMappings": {
          "description": "Booking Channels mapping for the Room Type.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/bookingChannelMappingType"
          }
        },
        "bedTypeCodes": {
          "description": "Bed type code associated with room.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "bedType": {
          "description": "Information regarding the bed type associated with the room type.",
          "$ref": "#/definitions/bedTypeInfoType"
        },
        "roomType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "hotelId": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomClass": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "suite": {
          "description": "Indicates room type is a suite.",
          "type": "boolean"
        },
        "component": {
          "description": "Indicates room type is a Component Room.",
          "type": "boolean"
        },
        "invBlockCode": {
          "description": "Block code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "roomViewCode": {
          "description": "Represents the room view code like City view, River view, Ocean view etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "promotionCode": {
          "description": "Represents the promotional code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "roomQualifierCode": {
          "description": "Represents the room qualifier code like Deluxe,Economy,Suite etc.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "roomQualifierMatchIndicator": {
          "description": "Represents the match indicator of room qualifier code returned in the response with the requested room qualifier code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "accessible": {
          "description": "Indicates whether room type is accessible or not.",
          "type": "boolean"
        }
      }
    },
    "roomFeaturesType": {
      "type": "array",
      "description": "A recurring element that identifies the room features.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomFeatureType"
      }
    },
    "roomFeatureType": {
      "type": "object",
      "description": "Room Feature Information.",
      "properties": {
        "code": {
          "description": "A code representing a room feature.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "A code representing a room feature.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "orderSequence": {
          "description": "Display Order sequence.",
          "type": "number"
        },
        "quantity": {
          "description": "Indicates quantity.",
          "type": "integer"
        }
      }
    },
    "roomTypeAttributesType": {
      "type": "object",
      "description": "Attributes of property room type.",
      "properties": {
        "defaultOccupancy": {
          "description": "Default occupancy of property room type.",
          "type": "integer"
        },
        "maximumOccupancy": {
          "description": "Max occupancy of property room type.",
          "type": "integer"
        },
        "noOfPhysicalRooms": {
          "description": "Number of physical rooms of property room type.",
          "type": "integer"
        },
        "minimumOccupancy": {
          "description": "Minimum occupancy of property room type.",
          "type": "integer"
        },
        "maximumAdults": {
          "description": "Maximum adult occupancy of property room type.",
          "type": "integer"
        },
        "maximumChildren": {
          "description": "Maximum children occupancy of property room type.",
          "type": "integer"
        }
      }
    },
    "bookingChannelMappingType": {
      "type": "object",
      "properties": {
        "bookingChannelCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "name": {
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        }
      }
    },
    "bedTypeInfoType": {
      "type": "object",
      "description": "Information representing Bed type associated with a room type.",
      "properties": {
        "code": {
          "description": "Bed Type Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of Bed Type.",
          "$ref": "#/definitions/translationTextType2000"
        }
      }
    },
    "roomTypesDetails": {
      "type": "object",
      "description": "Response object for Fetching existing Room Types.",
      "properties": {
        "roomTypesSummary": {
          "description": "Contains the results of a successful operation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/roomTypesSummaryType"
          }
        },
        "roomTypes": {
          "description": "Collection of Room Type Templates and their information.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/roomTypesType"
          }
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomTypesType": {
      "type": "object",
      "description": "This type holds collection of room type.",
      "properties": {
        "roomType": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomTypeType"
          }
        },
        "hotelId": {
          "description": "Hotel Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "roomTypeType": {
      "type": "object",
      "description": "This type represents the room type attributes.",
      "properties": {
        "newRoomType": {
          "description": "New Room type code. (Used in change template room type operation)",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomClass": {
          "description": "Room class for the room type code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "bedType": {
          "description": "Bed type of room type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "shortDescription": {
          "description": "Short Description of room type.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "description": {
          "description": "Long Description of room type.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "smokingPreference": {
          "description": "Specifies the smoking preference for this room type. I.E. SM, NS.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "activeDate": {
          "description": "Active date of the room type.",
          "type": "string",
          "format": "date",
          "maxLength": 8
        },
        "pseudo": {
          "description": "Indicates if room type is pseudo.",
          "type": "boolean"
        },
        "accessible": {
          "description": "Indicates if room type is accessible.",
          "type": "boolean"
        },
        "suite": {
          "description": "Indicates room type is a suite.",
          "type": "object",
          "properties": {
            "value": {
              "type": "boolean",
              "description": "Property Value"
            },
            "editable": {
              "description": "Indicates if room type Room Components may be changed.",
              "type": "boolean"
            }
          }
        },
        "meetingRoom": {
          "description": "Indicates room type is meeting room. This Can be Meeting room flag cannot be unmarked at the property level. Can only be marked for non pseudo room types.",
          "type": "boolean"
        },
        "sendToInterface": {
          "description": "Indicates room type is sent to interface.",
          "type": "boolean"
        },
        "sellSequence": {
          "description": "Indicates room types sell sequence.",
          "type": "number"
        },
        "generic": {
          "description": "Indicates room type is generic.",
          "type": "boolean"
        },
        "maintenance": {
          "description": "Indicates room type is available for maintenance request.",
          "type": "boolean"
        },
        "defaultOccupancy": {
          "description": "Default occupancy for the room type.",
          "type": "number"
        },
        "minimumOccupancy": {
          "description": "Minimum occupancy for the room type.",
          "type": "integer"
        },
        "maximumOccupancy": {
          "description": "Maximum occupancy for the room type.",
          "type": "integer"
        },
        "maxAdults": {
          "description": "Maximum Adults for the room type.",
          "type": "integer"
        },
        "maxChildren": {
          "description": "Maximum Children for the room type.",
          "type": "integer"
        },
        "houseKeeping": {
          "description": "Room type shows in house keeping.",
          "type": "boolean"
        },
        "infoURL": {
          "description": "Room type info URL.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "autoPopulate": {
          "description": "Room type is automatically attached when new rate codes are created.",
          "type": "boolean"
        },
        "autoRoomAssign": {
          "description": "Room number is automatically assigned when a reservation is made for this Room Type.",
          "type": "boolean"
        },
        "autoCheckin": {
          "description": "Creates a new linked Reservation, and proceeds within check-in of the new reservation.",
          "type": "boolean"
        },
        "rateFloor": {
          "description": "This value will control the minimum amount that the selected room type can be sold",
          "type": "number"
        },
        "components": {
          "description": "Room type component details.",
          "$ref": "#/definitions/roomTypeComponentsType"
        },
        "features": {
          "description": "Room type feature details.",
          "$ref": "#/definitions/roomFeaturesType"
        },
        "yieldStatus": {
          "description": "Specify whether the room type is yieldable or non-yieldable (Available when a yield integration add-on license is active.)",
          "$ref": "#/definitions/roomTypeYieldableType"
        },
        "yieldCategory": {
          "description": "Yield category for this room type (Available when a yield integration add-on license is active and when room type is Yieldable.)",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "numberOfRooms": {
          "description": "Number of rooms for this room type.",
          "type": "integer"
        },
        "inactive": {
          "description": "Is Room type inactive?",
          "type": "boolean"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "roomTypeComponentsType": {
      "type": "array",
      "description": "Contains room components of a component room type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomTypeComponentType"
      }
    },
    "roomTypeComponentType": {
      "type": "object",
      "description": "Room component and its quantity for the component room type.",
      "properties": {
        "qty": {
          "description": "Quantity of room component for the component room type.",
          "type": "integer"
        },
        "description": {
          "description": "Description of room component.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "roomType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "roomTypeYieldableType": {
      "type": "string",
      "description": "Simple type for Yieldable or Non Yieldable",
      "enum": [
        "Yieldable",
        "NonYieldable"
      ]
    },
    "roomTypesCriteria": {
      "type": "object",
      "description": "Request object for Creating a new Room Type.",
      "properties": {
        "roomType": {
          "description": "Room Type details to be created.",
          "type": "object",
          "properties": {
            "roomTypeDetails": {
              "description": "Room Type details to be created.",
              "$ref": "#/definitions/roomTypeType"
            },
            "hotelId": {
              "$ref": "#/definitions/codeType"
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomTypesToBeChanged": {
      "type": "object",
      "description": "Request object for Modifying Room Type.",
      "properties": {
        "roomType": {
          "description": "Room Type details to be changed.",
          "type": "object",
          "properties": {
            "roomTypeDetails": {
              "description": "Room Type details to be changed.",
              "$ref": "#/definitions/roomTypeType"
            },
            "hotelId": {
              "$ref": "#/definitions/codeType"
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomsDetails": {
      "type": "object",
      "description": "Response object for fetching complete information of existing rooms.",
      "properties": {
        "rooms": {
          "description": "Collection of rooms with detailed information.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/configRoomsType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "configRoomsType": {
      "type": "object",
      "description": "This type holds collection of rooms with complete information.",
      "properties": {
        "room": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/configRoomType"
          }
        },
        "hotelId": {
          "description": "Hotel Code of the rooms.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "configRoomType": {
      "type": "object",
      "description": "This type represents the primary room attributes.",
      "properties": {
        "roomType": {
          "description": "Room type basic information of the room.",
          "$ref": "#/definitions/roomTypeShortInfoType"
        },
        "floor": {
          "description": "Floor of the Room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "floorDescription": {
          "description": "Description for the Floor of the Room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomFeatures": {
          "description": "Room Features for the room.",
          "$ref": "#/definitions/roomFeaturesType"
        },
        "roomDescription": {
          "description": "Detail Long Description Of The Room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the room.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "smokingPreference": {
          "description": "This indicates room smoking preference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "smokingPreferenceDescription": {
          "description": "This indicates the description of the room smoking preference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "building": {
          "description": "Building associated with the room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomAssignmentRating": {
          "description": "Assignment Rating associated with the room.",
          "$ref": "#/definitions/ratePlanRatingType"
        },
        "accessible": {
          "description": "Indicates whether the room is accessibility compliant.",
          "type": "boolean"
        },
        "roomId": {
          "description": "Code of the room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "meetingRoom": {
          "description": "Indicates whether the room is a Meeting Room",
          "type": "boolean"
        },
        "roomComponents": {
          "description": "Components of a room.",
          "$ref": "#/definitions/roomComponentsType"
        },
        "connectingRooms": {
          "description": "Connecting rooms of a room.",
          "$ref": "#/definitions/roomRoomsType"
        },
        "rateCode": {
          "description": "Published rate code of a room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rateAmount": {
          "description": "Published rate amount of a room.",
          "$ref": "#/definitions/currencyAmountType"
        },
        "maximumOccupancy": {
          "description": "Maximum occupancy of a room.",
          "type": "integer"
        },
        "sellSequence": {
          "description": "Display sequence of a room.",
          "type": "number"
        },
        "ownerRoom": {
          "description": "This indicates if room is marked as a owner room",
          "type": "boolean"
        },
        "unitGradeCode": {
          "description": "The Unit Grade Code attached to the room",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "smoking": {
          "description": "This indicates if smoking is allowed in the room.",
          "type": "boolean"
        },
        "keyCode": {
          "description": "Key code of a room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "keyOptions": {
          "description": "Key options of a room.",
          "$ref": "#/definitions/codeListType"
        },
        "squareUnits": {
          "description": "Square units of a room.",
          "type": "number"
        },
        "turndownService": {
          "description": "Turndown service flag of a room.",
          "type": "boolean"
        },
        "squareUnitsMeasurement": {
          "description": "Square unit measurement of a room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "phoneNumber": {
          "description": "Square unit measurement of a room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "housekeepingCredit": {
          "description": "Housekeeping credits of the room. This may include stayover, departure, pickup and turndown credits.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/housekeepingCreditsType"
          }
        },
        "roomSection": {
          "description": "Room section of the room. This includes day and evening sections.",
          "$ref": "#/definitions/roomSectionType"
        },
        "noOfBeds": {
          "description": "Number of beds of the room.",
          "type": "integer"
        }
      }
    },
    "roomTypeShortInfoType": {
      "type": "object",
      "description": "Basic information of room type.",
      "properties": {
        "pseudo": {
          "description": "Indicates if room is a pseudo. This is read-only.",
          "type": "boolean"
        },
        "suite": {
          "description": "Indicates if room is a suite. This is read-only.",
          "type": "boolean"
        },
        "roomClass": {
          "description": "Room Class of the room. This is read-only.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "shortDescription": {
          "description": "Short Description of room type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 200
        },
        "houseKeeping": {
          "description": "Indicates if room type of the room is flagged as housekeeping. This is read-only.",
          "type": "boolean"
        },
        "smokingPreference": {
          "description": "Specifies the smoking preference for room type of the room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "building": {
          "description": "Building associated with the room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomAssignmentRating": {
          "description": "Assignment Rating associated with the room.",
          "$ref": "#/definitions/ratePlanRatingType"
        },
        "minimumOccupancy": {
          "description": "Minimum occupancy for the room type.",
          "type": "integer"
        },
        "maximumOccupancy": {
          "description": "Maximum occupancy for the room type.",
          "type": "integer"
        },
        "roomFeatures": {
          "description": "Room Features for the room.",
          "$ref": "#/definitions/roomFeaturesType"
        },
        "accessible": {
          "description": "Indicates if room type is accessible.",
          "type": "boolean"
        },
        "roomType": {
          "description": "Room type of the room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "meetingRoom": {
          "description": "Indicates whether function space can be meeting room.",
          "type": "boolean"
        },
        "roomStatus": {
          "description": "Room Status of the room.",
          "type": "string"
        },
        "componentRoomsInfo": {
          "type": "array",
          "description": "This type holds information of Component Rooms attached to the Component Suite.",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/componentRoomInfoType"
          }
        },
        "componentSuitesInfo": {
          "type": "array",
          "description": "This type holds information of Component Suites to which the Component Room is attached.",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/componentSuiteInfoType"
          }
        }
      }
    },
    "ratePlanRatingType": {
      "type": "string",
      "description": "Possible Rate plan rating values.",
      "enum": [
        "MostImportant",
        "Important",
        "SomewhatImportant",
        "LessImportant",
        "LeastImportant",
        "NoValueSet"
      ]
    },
    "roomComponentsType": {
      "type": "array",
      "description": "Component of a room.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomComponentType"
      }
    },
    "roomComponentType": {
      "type": "object",
      "description": "Room component and its quantity for the component room type.",
      "properties": {
        "qty": {
          "description": "Quantity of room component for the component room type.",
          "type": "integer"
        },
        "description": {
          "description": "Description of room component.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "roomType": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "rooms": {
          "description": "Collection of rooms assigned to the room type component.",
          "$ref": "#/definitions/roomRoomsType"
        }
      }
    },
    "roomRoomsType": {
      "type": "array",
      "description": "Collection of rooms.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomRoomType"
      }
    },
    "roomRoomType": {
      "type": "object",
      "description": "This type represents the primary room attributes.",
      "properties": {
        "roomType": {
          "description": "Room type basic information of the room.",
          "$ref": "#/definitions/roomTypeShortInfoType"
        },
        "floor": {
          "description": "Floor of the Room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "floorDescription": {
          "description": "Description for the Floor of the Room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomFeatures": {
          "description": "Room Features for the room.",
          "$ref": "#/definitions/roomFeaturesType"
        },
        "roomDescription": {
          "description": "Detail Long Description Of The Room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the room.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "smokingPreference": {
          "description": "This indicates room smoking preference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "smokingPreferenceDescription": {
          "description": "This indicates the description of the room smoking preference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "building": {
          "description": "Building associated with the room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomAssignmentRating": {
          "description": "Assignment Rating associated with the room.",
          "$ref": "#/definitions/ratePlanRatingType"
        },
        "accessible": {
          "description": "Indicates whether the room is accessibility compliant.",
          "type": "boolean"
        },
        "roomId": {
          "description": "Code of the room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "meetingRoom": {
          "description": "Indicates whether the room is a Meeting Room",
          "type": "boolean"
        },
        "roomCondition": {
          "description": "Code and description of condition assigned on the room.",
          "$ref": "#/definitions/codeDescriptionType"
        }
      }
    },
    "currencyAmountType": {
      "type": "object",
      "description": "A monetary value expressed with a currency code.",
      "properties": {
        "amount": {
          "description": "A monetary amount.",
          "type": "number"
        },
        "currencyCode": {
          "description": "Provides a currency code to reflect the currency in which an amount may be expressed.",
          "type": "string",
          "minLength": 3,
          "maxLength": 3
        }
      }
    },
    "roomSectionType": {
      "type": "object",
      "properties": {
        "daySectionCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "eveningSectionCode": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "roomCriteria": {
      "type": "object",
      "description": "Request object for creating a new room.",
      "properties": {
        "room": {
          "description": "Room to be created.",
          "type": "object",
          "properties": {
            "roomDetails": {
              "description": "Room details to be created.",
              "$ref": "#/definitions/configRoomType"
            },
            "hotelId": {
              "description": "Hotel code of the room to be created.",
              "$ref": "#/definitions/codeType"
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomToBeChanged": {
      "type": "object",
      "description": "Request object for changing details of an existing room.",
      "properties": {
        "room": {
          "description": "Room to be changed.",
          "type": "object",
          "properties": {
            "roomDetails": {
              "description": "Room details to be changed.",
              "$ref": "#/definitions/configRoomType"
            },
            "hotelId": {
              "description": "Hotel code of the room to be changed.",
              "$ref": "#/definitions/codeType"
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyRooms": {
      "type": "object",
      "description": "Request object for creating multiple rooms based on an existing room. New rooms may have different floor preferences, room features, housekeeping credits and room sections. The rest of the details except for attached connecting rooms will be copied from the base existing room. Component rooms are not allowed to be copied.",
      "properties": {
        "copyRoom": {
          "description": "Object that holds primary details of room to be copied and collection of rooms to be created from it.",
          "$ref": "#/definitions/copyRoomType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyRoomType": {
      "type": "object",
      "description": "Primary details of room to be copied and collection of rooms to be created from it.",
      "properties": {
        "newRooms": {
          "description": "Collection of room details that may differ from the base existing room.",
          "$ref": "#/definitions/copyNewRoomsType"
        },
        "hotelId": {
          "description": "Hotel code of an existing room that will serve as the basis for the new rooms."
        },
        "roomId": {
          "description": "Room number of an existing room that will serve as the basis for the new rooms."
        }
      }
    },
    "copyNewRoomsType": {
      "type": "array",
      "description": "Room details that may differ from the base existing room.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/copyNewRoomType"
      }
    },
    "copyNewRoomType": {
      "type": "object",
      "description": "Room details that may differ from the base existing room. If any of Floor, RoomFeatures, HousekeepingCredits and RoomSection types is not passed together with this type, it means that it is expected to be empty for the new room; otherwise, they will have the value of the base existing room. Connecting rooms attached to the base existing room will not be created for the new room.",
      "properties": {
        "floors": {
          "description": "Floor preferences of the room.",
          "$ref": "#/definitions/codeListType"
        },
        "roomFeatures": {
          "description": "Room features of the room.",
          "$ref": "#/definitions/roomFeaturesType"
        },
        "housekeepingCredits": {
          "description": "Housekeeping credits of the room. This may include stayover, departure, pickup and turndown credits.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/housekeepingCreditsType"
          }
        },
        "roomSection": {
          "description": "Room section of the room. This includes day and evening sections.",
          "$ref": "#/definitions/roomSectionType"
        },
        "roomId": {
          "description": "Room number of the new room to be created.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "copyBuildingGroups": {
      "type": "object",
      "description": "Request object to copy Building Group details to hotel(s).",
      "properties": {
        "copyInstructions": {
          "description": "List of the Building Group details to be copied to hotel(s).",
          "$ref": "#/definitions/copyConfigurationCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyConfigurationCodesType": {
      "type": "array",
      "description": "Information needed to copy configuration code from one property to the other.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/copyConfigurationCodeType"
      }
    },
    "copyConfigurationCodeType": {
      "type": "object",
      "description": "Information needed to copy configuration code from one property to the other.",
      "properties": {
        "targetHotelCode": {
          "description": "Property to which configuration code type to be copied to.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "type": "string",
            "minLength": 0,
            "maxLength": 20
          }
        },
        "sourceHotelCode": {
          "description": "Code that is to be copied.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "code": {
          "description": "Source hotel code from which code is to be copied from.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "copyBuildings": {
      "type": "object",
      "description": "Request object for copying Building details to hotel(s).",
      "properties": {
        "copyInstructions": {
          "description": "List of the Building details to be copied to hotel(s).",
          "$ref": "#/definitions/copyConfigurationCodesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyHousekeepingSectionGroups": {
      "type": "object",
      "description": "Request object for copying housekeeping section groups in resort.",
      "properties": {
        "housekeepingSectionGroups": {
          "description": "List of house keeping section groups to copy.",
          "$ref": "#/definitions/housekeepingSectionGroupsCopyType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "housekeepingSectionGroupsCopyType": {
      "type": "array",
      "description": "List of the housekeeping section groups to be copied",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/housekeepingSectionGroupCopyType"
      }
    },
    "housekeepingSectionGroupCopyType": {
      "type": "object",
      "description": "Detailed information of Housekeeping Section Group to copy.",
      "properties": {
        "sourceHotelCode": {
          "description": "Source property of the Housekeeping section group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "housekeepingSectionGroupCopyInfo": {
          "description": "List of detailed information of Housekeeping section groups to copy.",
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/housekeepingSectionGroupCopyInfoType"
          }
        }
      }
    },
    "housekeepingSectionGroupCopyInfoType": {
      "type": "object",
      "description": "Detailed information of Housekeeping Section Group to copy.",
      "properties": {
        "targetHotelCode": {
          "description": "Source property of the Housekeeping section group.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "sourceSectiongroup": {
          "description": "Source Housekeeping Section Group Code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "copyAs": {
          "description": "The code and description to be used for the section group code being copied under the target hotel code.",
          "$ref": "#/definitions/codeDescriptionType"
        }
      }
    },
    "copyHousekeepingSections": {
      "type": "object",
      "properties": {
        "housekeepingSections": {
          "type": "array",
          "description": "List of the housekeeping section code(s) to be copied.",
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyHousekeepingCodes": {
      "type": "object",
      "properties": {
        "housekeepingCodes": {
          "type": "array",
          "description": "List of the housekeeping code(s) to be copied.",
          "items": {
            "$ref": "#/definitions/copyConfigurationCodeType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateOutOfOrderServiceReasonsDetails": {
      "type": "object",
      "description": "Response object for fetching template Out of order/service reason(s).",
      "properties": {
        "outOfOrderServiceReasons": {
          "description": "Collection of template Out of order/service reason(s).",
          "$ref": "#/definitions/templateOutOfOrderServiceReasonsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateOutOfOrderServiceReasonsType": {
      "type": "array",
      "description": "Template of out of order/service reason details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/templateOutOfOrderServiceReasonType"
      }
    },
    "templateOutOfOrderServiceReasonType": {
      "type": "object",
      "description": "Base details of the out of order/service reason",
      "properties": {
        "description": {
          "description": "Description for the out of order/service reason.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "sequence": {
          "description": "Sequence number for displaying the out of order/service reason.",
          "type": "integer"
        },
        "reasonCode": {
          "description": "Out of order/service reason code identifying the reason.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "inactive": {
          "description": "Indicator that tells whether the out of order/service reason in the hotel is active or not.",
          "type": "boolean"
        },
        "includeInStatisticsYn": {
          "description": "Indicator for RNA to use to decide whether to include this room status in statistics, with no functional impact.",
          "type": "boolean"
        },
        "deductYn": {
          "description": "Indicator for room status display. Room status configured with 'true' will be displayed as OOO, 'false' will be displayed as OOS.",
          "type": "boolean"
        },
        "returnTimeRequired": {
          "description": "Indicator for Return Time Required display. If configured to true, then a time will be mandatory to determine when this unit (room) will be back to the inventory of the available rooms.",
          "type": "boolean"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "templateOutOfOrderServiceReasonsCriteria": {
      "type": "object",
      "description": "Request object for creating new template out of order/service reasons.",
      "properties": {
        "templateOutOfOrderServiceReasons": {
          "description": "Collection of template of out of order/service reasons to be created.",
          "$ref": "#/definitions/templateOutOfOrderServiceReasonsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateOutOfOrderServiceReasonsToBeChanged": {
      "type": "object",
      "description": "Request object for modifying template out of order/service reasons.",
      "properties": {
        "templateOutOfOrderServiceReasons": {
          "description": "Collection of template of out of order/service reasons to be modified.",
          "$ref": "#/definitions/templateOutOfOrderServiceReasonsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomClassTemplateCriteria": {
      "type": "object",
      "description": "Request object for creating a new room class template.",
      "properties": {
        "roomClassTemplate": {
          "description": "Room class template details to be created.",
          "$ref": "#/definitions/roomClassTemplateType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomClassTemplateType": {
      "type": "object",
      "description": "Common code type for code, description, seq and inactive",
      "properties": {
        "description": {
          "description": "Description for the code type.",
          "$ref": "#/definitions/translationTextType50"
        },
        "sequence": {
          "description": "Display sequence for the code type.",
          "type": "integer"
        },
        "code": {
          "description": "Code for the code type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "inactive": {
          "description": "Indicates the code type is inactive or not.",
          "type": "boolean"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "roomClassTemplatesDetails": {
      "type": "object",
      "description": "Response object for information regarding template room classes.",
      "properties": {
        "roomClassTemplates": {
          "description": "Collection of room class templates and their information.",
          "$ref": "#/definitions/roomClassTemplatesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomClassTemplatesType": {
      "type": "array",
      "description": "Collection of template room classes.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomClassTemplateType"
      }
    },
    "roomClassTemplateToBeChanged": {
      "type": "object",
      "description": "Request object for modifying an existing room class template.",
      "properties": {
        "roomClassTemplate": {
          "description": "Room class template details to be changed.",
          "$ref": "#/definitions/roomClassTemplateType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomConditionTemplatesDetails": {
      "type": "object",
      "description": "Response object for information regarding room condition template of a property.",
      "properties": {
        "roomConditionTemplates": {
          "description": "Contains the results of a successful operation.",
          "$ref": "#/definitions/roomCondtionTemplatesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomCondtionTemplatesType": {
      "type": "array",
      "description": "Collection of Room Condition Template Type",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomCondtionTemplateType"
      }
    },
    "roomCondtionTemplateType": {
      "type": "object",
      "description": "Room Condition Template Type",
      "properties": {
        "description": {
          "description": "Description for the room condition.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "displayInRoomAssignment": {
          "description": "Indicates types of assignment.",
          "type": "boolean"
        },
        "comments": {
          "description": "Comments for the room condition.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "displaySeq": {
          "type": "integer"
        },
        "inactive": {
          "type": "boolean"
        },
        "code": {
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "roomConditionTemplateCriteria": {
      "type": "object",
      "description": "Request object for creating a new Room Condition Template.",
      "properties": {
        "roomConditionTemplate": {
          "description": "Room Condition Template details to be created.",
          "$ref": "#/definitions/roomCondtionTemplateType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomConditionTemplateToBeChanged": {
      "type": "object",
      "description": "Request object for Modifying Room Condition Template.",
      "properties": {
        "roomConditionTemplate": {
          "description": "Room Condition Template details to be changed.",
          "$ref": "#/definitions/roomCondtionTemplateType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateRoomFeaturesDetails": {
      "type": "object",
      "description": "Response object to fetch template room features.",
      "properties": {
        "templateRoomFeatures": {
          "description": "Collection of template room features.",
          "$ref": "#/definitions/templateRoomFeaturesConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateRoomFeaturesConfigType": {
      "type": "array",
      "description": "Template room feature details.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/templateRoomFeatureConfigType"
      }
    },
    "templateRoomFeatureConfigType": {
      "type": "object",
      "description": "Common code type for code, description, seq and inactive",
      "properties": {
        "description": {
          "description": "Description for the code type.",
          "$ref": "#/definitions/translationTextType50"
        },
        "sequence": {
          "description": "Display sequence for the code type.",
          "type": "integer"
        },
        "code": {
          "description": "Code for the code type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "inactive": {
          "description": "Indicates the code type is inactive or not.",
          "type": "boolean"
        },
        "chainCode": {
          "description": "Chain code for the code type.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "groupCode": {
          "description": "Group code to which this code type belongs.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "global": {
          "description": "Specifies whether the room feature is to be available for selection at all hotels.",
          "type": "boolean"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "templateRoomFeaturesCriteria": {
      "type": "object",
      "description": "Request object for creating template room features.",
      "properties": {
        "templateRoomFeatures": {
          "description": "Collection containing details of template room features.",
          "$ref": "#/definitions/templateRoomFeaturesConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateRoomFeaturesToBeChanged": {
      "type": "object",
      "description": "Request object for changing template room features.",
      "properties": {
        "templateRoomFeatures": {
          "description": "Collection containing details of template room features.",
          "$ref": "#/definitions/templateRoomFeaturesConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomHierarchiesDetails": {
      "type": "object",
      "description": "Response for fetch room hierarchies",
      "properties": {
        "roomHierarchies": {
          "$ref": "#/definitions/roomHierarchiesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomHierarchiesType": {
      "type": "array",
      "description": "Holds collection of room hierarchies",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomHierarchyType"
      }
    },
    "roomHierarchyType": {
      "type": "object",
      "description": "Room Hierarchy id type for create, change and delete",
      "properties": {
        "roomHierarchyType": {
          "description": "Room Hierarchy Type will take either Type or Class",
          "$ref": "#/definitions/roomHierarchyTypeType"
        },
        "hotelId": {
          "description": "Resort code in which the hierarchy should exist",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "fromCode": {
          "description": "From code to process",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "toCodes": {
          "description": "To codes to be processed",
          "$ref": "#/definitions/codeListType"
        },
        "displaySequence": {
          "description": "Display Sequence",
          "type": "integer"
        }
      }
    },
    "roomHierarchyTypeType": {
      "type": "string",
      "description": "Provides the type of room hierarchy",
      "enum": [
        "Type",
        "Class"
      ]
    },
    "roomHierarchiesCriteria": {
      "type": "object",
      "description": "Request to create room hierarchies",
      "properties": {
        "roomHierarchies": {
          "description": "Room hierarchies to be created",
          "$ref": "#/definitions/createRoomHierarchiesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "createRoomHierarchiesType": {
      "type": "object",
      "description": "Holds collection of room hierarchies",
      "properties": {
        "roomHierarchy": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/roomHierarchyType"
          }
        },
        "overwriteExisting": {
          "description": "Setting this flag to true will overwrite all existing hierarchies.",
          "type": "boolean"
        }
      }
    },
    "roomHierarchiesToBeChanged": {
      "type": "object",
      "description": "Request to change room hierarchies",
      "properties": {
        "roomHierarchies": {
          "description": "Room hierarchies to be created",
          "$ref": "#/definitions/roomHierarchiesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "copyRoomHierarchies": {
      "type": "object",
      "description": "Request to copy room hierarchies",
      "properties": {
        "copyRoomHierarchies": {
          "description": "Takes either Type or Class",
          "type": "object",
          "properties": {
            "roomHierarchyType": {
              "description": "Takes either Type or Class",
              "$ref": "#/definitions/roomHierarchyTypeType"
            },
            "roomHierarchies": {
              "description": "List of room hierarchies to be copied.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/copyConfigurationCodeType"
              }
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomHierarchiesToGenerate": {
      "type": "object",
      "description": "Generates the room hierarchies based on the AI cost function",
      "properties": {
        "criteria": {
          "description": "Criteria for generating the room hierarchy",
          "$ref": "#/definitions/roomHierarchySearchType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomHierarchySearchType": {
      "type": "object",
      "description": "Room hierarchy search type to fetch room hierarchies",
      "properties": {
        "roomHierarchyType": {
          "description": "Hierarchy Type will take either Type or Class",
          "$ref": "#/definitions/roomHierarchyTypeType"
        },
        "hotelCodes": {
          "description": "List of hotel codes to search",
          "$ref": "#/definitions/codeListType"
        },
        "fromCode": {
          "description": "From code to process",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "toCode": {
          "description": "To code to process",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        }
      }
    },
    "templateRoomMaintenanceReasonsDetails": {
      "type": "object",
      "description": "Response object for fetching template room maintenance reasons.",
      "properties": {
        "templateRoomMaintenanceReasons": {
          "description": "Collection of template level room maintenance reasons.",
          "$ref": "#/definitions/templateRoomMaintenanceReasonsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateRoomMaintenanceReasonsType": {
      "type": "array",
      "description": "Details for room maintenance reason at template level.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/templateRoomMaintenanceReasonType"
      }
    },
    "templateRoomMaintenanceReasonType": {
      "type": "object",
      "description": "Base common structure for Room Maintenance at both hotel and template levels.",
      "properties": {
        "code": {
          "description": "Identification code for a particular room maintenance reason.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of a particular room maintenance reason.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "sellSequence": {
          "description": "Indicates the sell sequence for a particular room maintenance reason.",
          "type": "number"
        },
        "inactive": {
          "description": "Inactive flag for a particular room maintenance reason.",
          "type": "boolean"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "templateRoomMaintenanceReasonsCriteria": {
      "type": "object",
      "description": "Request object for creating new template room maintenance reasons.",
      "properties": {
        "templateRoomMaintenanceReasons": {
          "description": "Collection of template room maintenance reasons to be created.",
          "$ref": "#/definitions/templateRoomMaintenanceReasonsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateRoomMaintenanceReasonsToBeChanged": {
      "type": "object",
      "description": "Request object for modifying template room maintenance reasons.",
      "properties": {
        "templateRoomMaintenanceReasons": {
          "description": "Collection of template room maintenance reasons to be changed.",
          "$ref": "#/definitions/templateRoomMaintenanceReasonsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomMoveReasonsDetails": {
      "type": "object",
      "description": "Response object for fetching Room Move Reasons.",
      "properties": {
        "roomMoveReasons": {
          "description": "Collection of Room Move Reasons.",
          "$ref": "#/definitions/roomMoveReasonsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomMoveReasonsType": {
      "type": "array",
      "description": "List of Room Move Reasons.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomMoveReasonType"
      }
    },
    "roomMoveReasonType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "roomMoveReasonsCriteria": {
      "type": "object",
      "description": "Request object for creating Room Move Reasons.",
      "properties": {
        "roomMoveReasons": {
          "description": "Room Move Reasons to be created.",
          "$ref": "#/definitions/roomMoveReasonsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomMoveReasonsToBeChanged": {
      "type": "object",
      "description": "Request object for changing Room Move Reasons.",
      "properties": {
        "roomMoveReasons": {
          "description": "Room Move Reasons to be changed.",
          "$ref": "#/definitions/roomMoveReasonsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomPotentialsDetails": {
      "type": "object",
      "description": "Response object for fetching Room Potentials.",
      "properties": {
        "roomPotentials": {
          "description": "Collection of Room Potentials.",
          "$ref": "#/definitions/roomPotentialsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomPotentialsType": {
      "type": "array",
      "description": "List of Room Potentials.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomPotentialType"
      }
    },
    "roomPotentialType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "inactive": {
          "description": "Determines whether this code is inactive or not.",
          "type": "boolean"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "roomPotentialsCriteria": {
      "type": "object",
      "description": "Request object for creating Room Potentials.",
      "properties": {
        "roomPotentials": {
          "description": "Room Potentials to be created.",
          "$ref": "#/definitions/roomPotentialsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomPotentialsToBeChanged": {
      "type": "object",
      "description": "Request object for changing Room Potentials.",
      "properties": {
        "roomPotentials": {
          "description": "Room Potentials to be changed.",
          "$ref": "#/definitions/roomPotentialsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomPreferencePrioritiesDetails": {
      "type": "object",
      "description": "Response object for fetching Room Preference Priorities.",
      "properties": {
        "roomPreferencePriorities": {
          "description": "Collection of Room Preference Priorities.",
          "$ref": "#/definitions/roomPreferencePrioritiesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomPreferencePrioritiesType": {
      "type": "array",
      "description": "List of Room Preference Priorities.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomPreferencePriorityType"
      }
    },
    "roomPreferencePriorityType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "roomPreferencePrioritiesCriteria": {
      "type": "object",
      "description": "Request object for creating Room Preference Priorities.",
      "properties": {
        "roomPreferencePriorities": {
          "description": "Room Preference Priorities to be created.",
          "$ref": "#/definitions/roomPreferencePrioritiesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomPreferencePrioritiesToBeChanged": {
      "type": "object",
      "description": "Request object for changing Room Preference Priorities.",
      "properties": {
        "roomPreferencePriorities": {
          "description": "Room Preference Priorities to be changed.",
          "$ref": "#/definitions/roomPreferencePrioritiesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomTypeTemplatesDetails": {
      "type": "object",
      "description": "Response object for information regarding room type template of a property.",
      "properties": {
        "roomTypeTemplatesSummary": {
          "description": "Contains the results of a successful operation.",
          "$ref": "#/definitions/roomTypeTemplateSummaryType"
        },
        "roomTypeTemplates": {
          "description": "Collection of Room Type Templates and their information.",
          "$ref": "#/definitions/roomTypeTemplateType"
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomTypeTemplateSummaryType": {
      "type": "array",
      "description": "This type holds collection of room type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomTypeSummaryType"
      }
    },
    "roomTypeTemplateType": {
      "type": "array",
      "description": "This type holds collection of room type.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/roomTypeType"
      }
    },
    "roomTypeTemplatesCriteria": {
      "type": "object",
      "description": "Request object for creating a new Room Type Template.",
      "properties": {
        "roomTypeTemplate": {
          "description": "Room Type template details to be created.",
          "type": "object",
          "properties": {
            "roomTypeTemplateDetails": {
              "description": "Room Type template details to be created.",
              "$ref": "#/definitions/roomTypeType"
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomTypeTemplatesToBeChanged": {
      "type": "object",
      "description": "Request object for Modifying existing Room Type Templates.",
      "properties": {
        "roomTypeTemplate": {
          "description": "Room Type template details to be changed.",
          "type": "object",
          "properties": {
            "roomTypeTemplateDetails": {
              "description": "Room Type template details to be changed.",
              "$ref": "#/definitions/roomTypeType"
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "roomsSummaryDetails": {
      "type": "object",
      "description": "Response object for fetching summary information of existing rooms.",
      "properties": {
        "rooms": {
          "description": "Collection of rooms.",
          "type": "object",
          "properties": {
            "roomsSummary": {
              "description": "Collection of rooms summary.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/configRoomsSummaryType"
              }
            },
            "totalPages": {
              "description": "Evaluated total page count based on the requested max fetch count.",
              "type": "integer"
            },
            "offset": {
              "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
              "type": "integer"
            },
            "limit": {
              "description": "Indicates maximum number of records a Web Service should return.",
              "type": "integer"
            },
            "hasMore": {
              "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
              "type": "boolean"
            },
            "totalResults": {
              "description": "Total number of rows queried",
              "type": "integer"
            },
            "count": {
              "description": "Total number of rows returned",
              "type": "integer"
            }
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "configRoomsSummaryType": {
      "type": "object",
      "description": "This type holds collection of rooms summary.",
      "properties": {
        "roomSummary": {
          "type": "array",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/configRoomSummaryType"
          }
        },
        "hotelId": {
          "description": "Hotel Code of the rooms.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "noOfRooms": {
          "description": "Current number of rooms.",
          "type": "integer"
        }
      }
    },
    "configRoomSummaryType": {
      "type": "object",
      "description": "This type represents the primary room attributes.",
      "properties": {
        "roomType": {
          "description": "Room type basic information of the room.",
          "$ref": "#/definitions/roomTypeShortInfoType"
        },
        "ownerRoom": {
          "description": "This indicates if room is marked as a owner room. This information is used when Room Rotation OPERA control is active.",
          "type": "boolean"
        },
        "unitGradeCode": {
          "description": "The Unit Grade Code attached to the room. This information is used when Room Rotation OPERA control is active.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "unitGradeCodeDescription": {
          "description": "The Unit Grade Code Description describes the unit grade code attached to the room. This information is used when Room Rotation OPERA control is active.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "floor": {
          "description": "Floor of the Room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "floorDescription": {
          "description": "Description for the Floor of the Room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomFeatures": {
          "description": "Room Features for the room.",
          "$ref": "#/definitions/roomFeaturesType"
        },
        "roomDescription": {
          "description": "Detail Long Description Of The Room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the room.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "smokingPreference": {
          "description": "This indicates room smoking preference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "smokingPreferenceDescription": {
          "description": "This indicates the description of the room smoking preference.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "building": {
          "description": "Building associated with the room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomAssignmentRating": {
          "description": "Assignment Rating associated with the room.",
          "$ref": "#/definitions/ratePlanRatingType"
        },
        "accessible": {
          "description": "Indicates whether the room is accessibility compliant.",
          "type": "boolean"
        },
        "roomId": {
          "description": "Code of the room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "meetingRoom": {
          "description": "Indicates whether the room is a Meeting Room",
          "type": "boolean"
        },
        "maximumOccupancy": {
          "description": "Maximum occupancy for the room type.",
          "type": "integer"
        },
        "squareUnits": {
          "description": "Square units of a room.",
          "type": "number"
        },
        "squareUnitsMeasurement": {
          "description": "Square unit measurement of a room.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "roomComponents": {
          "description": "Components of a room.",
          "$ref": "#/definitions/roomComponentsType"
        },
        "connectingRooms": {
          "description": "Connecting rooms of a room.",
          "$ref": "#/definitions/roomRoomsType"
        },
        "sellSequence": {
          "description": "Display sequence of a room.",
          "type": "number"
        }
      }
    },
    "smokingTypesDetails": {
      "type": "object",
      "description": "Response object for fetching Smoking Types.",
      "properties": {
        "smokingTypes": {
          "description": "Collection of Smoking Types.",
          "$ref": "#/definitions/smokingTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "smokingTypesType": {
      "type": "array",
      "description": "List of Smoking Types.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/smokingTypeType"
      }
    },
    "smokingTypeType": {
      "type": "object",
      "description": "Contains Common Master configuration detail.",
      "properties": {
        "code": {
          "description": "Common Master unique code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 40
        },
        "description": {
          "description": "Description of the Master code.",
          "$ref": "#/definitions/translationTextType2000"
        },
        "displayOrder": {
          "description": "Common Master record sequence number.",
          "type": "number"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "smokingTypesCriteria": {
      "type": "object",
      "description": "Request object for creating Smoking Types.",
      "properties": {
        "smokingTypes": {
          "description": "Smoking Types to be created.",
          "$ref": "#/definitions/smokingTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "smokingTypesToBeChanged": {
      "type": "object",
      "description": "Request object for changing Smoking Types.",
      "properties": {
        "smokingTypes": {
          "description": "Smoking Types to be changed.",
          "$ref": "#/definitions/smokingTypesType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateFloorsDetails": {
      "type": "object",
      "description": "Response object for fetching floors at the template level.",
      "properties": {
        "templateFloors": {
          "description": "Collection of floors specified at the template level.",
          "$ref": "#/definitions/templateFloorsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateFloorsType": {
      "type": "array",
      "description": "This type holds a collection of floors at the template level.",
      "maxItems": 4000,
      "items": {
        "$ref": "#/definitions/templateFloorType"
      }
    },
    "templateFloorType": {
      "type": "object",
      "description": "Base details common between both template and hotel level floors.",
      "properties": {
        "floor": {
          "description": "Specifies the floor code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description for the floor.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "housekeeping": {
          "description": "Flag to indicate if this floor should be available on the Task Sheet Workflow configuration.",
          "type": "boolean"
        },
        "sequence": {
          "description": "Display sequence for the floor.",
          "type": "integer"
        },
        "global": {
          "description": "Specifies whether the floor is to be available for selection at all hotels.",
          "type": "boolean"
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "templateFloorsCriteria": {
      "type": "object",
      "description": "Request object for creating floors at the template level.",
      "properties": {
        "templateFloors": {
          "description": "Collection containing details of floors specified at the template level which have to be created.",
          "$ref": "#/definitions/templateFloorsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateFloorsToBeChanged": {
      "type": "object",
      "description": "Request object for changing floors at the template level.",
      "properties": {
        "templateFloors": {
          "description": "Collection containing details of floors specified at the template level which have to be changed.",
          "$ref": "#/definitions/templateFloorsType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateHousekeepingTaskConfigType": {
      "type": "object",
      "description": "Common code type for template housekeeping task type.",
      "properties": {
        "code": {
          "description": "Code for template housekeeping task.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description for template housekeeping task.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "instructions": {
          "description": "Instructions of template housekeeping task for the housekeeping to follow.",
          "type": "string",
          "minLength": 0,
          "maxLength": 2000
        },
        "sequence": {
          "description": "Display sequence for template housekeeping task.",
          "type": "number",
          "minimum": 1,
          "maximum": 99999
        },
        "color": {
          "description": "Color configuration type for template housekeeping task.",
          "$ref": "#/definitions/colorType"
        },
        "linenChange": {
          "description": "Signifies whether template housekeeping task requires linen change.",
          "type": "boolean"
        },
        "guestRequested": {
          "description": "Signifies whether template housekeeping task is a guest requested task.",
          "type": "boolean"
        },
        "defaultDepartureTask": {
          "description": "Signifies that template task is a default task for the checked out room.",
          "type": "boolean"
        },
        "protected": {
          "description": "Flag that determines whether this record is protected from removing or not",
          "type": "boolean"
        },
        "appliedCreditsPercentage": {
          "description": "Percentage of Credits that will be used for this task. Used when the Housekeeping Credits functionality is set to use ROOM_TASK_RULE. The default value is 100.",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "inactive": {
          "description": "Indicates if the template task is inactive.",
          "type": "boolean"
        }
      }
    },
    "templateHousekeepingTasksDetails": {
      "type": "object",
      "description": "Response object for fetching housekeeping tasks.",
      "properties": {
        "tasks": {
          "type": "array",
          "description": "List of the housekeeping tasks to be configured",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/templateHousekeepingTaskConfigType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateHousekeepingTasksCriteria": {
      "type": "object",
      "description": "Add template housekeeping tasks configurations.",
      "properties": {
        "tasks": {
          "type": "array",
          "description": "List of the housekeeping tasks to be configured",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/templateHousekeepingTaskConfigType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateHousekeepingTaskToBeChanged": {
      "type": "object",
      "description": "Modify housekeeping task.",
      "properties": {
        "task": {
          "description": "Detail of the housekeeping task to be modified.",
          "$ref": "#/definitions/templateHousekeepingTaskConfigType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "configTemplateHousekeepingRoomScheduleType": {
      "type": "object",
      "description": "Type contains configuration details of the task schedules configured at template level.",
      "properties": {
        "code": {
          "description": "Code of the template housekeeping task.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of template housekeeping task.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "priority": {
          "description": "Signifies the priority of the template task.",
          "type": "integer"
        },
        "credits": {
          "description": "Housekeeping credits associated with this template housekeeping task.",
          "type": "integer"
        },
        "frequency": {
          "description": "Signifies frequency(i.e. every 2 days) with which template housekeeping task is to be performed.",
          "$ref": "#/definitions/frequencyTypeType"
        },
        "frequencyDays": {
          "description": "Specify how often in days following the guest's arrival date, the template housekeeping task is to be completed.",
          "type": "integer"
        },
        "specialRequests": {
          "description": "Specify a Special Request code to a template housekeeping task code.",
          "$ref": "#/definitions/codeListType"
        },
        "vIPStatuses": {
          "description": "Specify a particular VIP code associated to a template housekeeping task code.",
          "$ref": "#/definitions/codeListType"
        },
        "sequence": {
          "description": "Used to store the template housekeeping task sequence.",
          "type": "integer"
        },
        "daysOfWeek": {
          "description": "This option, if applied, works in conjunction with the Every XX Day(s) option to allow you to control the days of the week on which this template housekeeping task can take place.",
          "$ref": "#/definitions/timeSpanDaysOfWeekType"
        },
        "rateCodes": {
          "description": "Specify one or more Rate Codes associated to a specific template housekeeping task code.",
          "$ref": "#/definitions/codeListType"
        },
        "marketCodes": {
          "description": "Specify one or more Market Codes associated to a specific template housekeeping task code.",
          "$ref": "#/definitions/codeListType"
        },
        "cycleStartDay": {
          "description": "Signifies offset(in days) i.e. start on 3rd day from arrival.",
          "type": "integer"
        },
        "customizePromptText": {
          "description": "Indicates information about task message.",
          "type": "string",
          "minLength": 0,
          "maxLength": 400
        },
        "taskSupplies": {
          "type": "array",
          "description": "This type holds a collection of template housekeeping task supply codes.",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/configTemplateHousekeepingRoomScheduleTaskSupplyType"
          }
        },
        "roomType": {
          "description": "Specifies room type for which this task is being scheduled.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "guestRequested": {
          "description": "Indicate this task is only available when requested by the Guest.",
          "type": "boolean"
        },
        "defaultDepartureTask": {
          "description": "Signifies that template task is a default task for the checked out room.",
          "type": "boolean"
        },
        "moveup": {
          "description": "Automatically moves the template task up one day if it falls on the day before the guest's departure. It will only be available when the schedule is set to every 3 days or more.",
          "type": "boolean"
        },
        "membershipType": {
          "description": "Specify a Membership Type associated to a specific template housekeeping task code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "membershipLevels": {
          "description": "Specify one or more Membership Levels associated to a specific template housekeeping task code.",
          "$ref": "#/definitions/codeListType"
        }
      }
    },
    "configTemplateHousekeepingRoomScheduleTaskSupplyType": {
      "type": "object",
      "description": "Type to indicate associated supply codes for the template task",
      "properties": {
        "code": {
          "description": "Supply code value.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "description": {
          "description": "Description of the supply code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 80
        },
        "quantity": {
          "description": "Number of the items to be provided for this task.",
          "type": "integer"
        },
        "sequence": {
          "description": "Used to store the housekeeping room schedule sequence.",
          "type": "integer"
        },
        "roomType": {
          "description": "Specifies the room type being scheduled for the task.",
          "$ref": "#/definitions/codeDescriptionType"
        },
        "housekeepingRoomScheduleCode": {
          "description": "Specifies the housekeeping room schedule code.",
          "type": "string",
          "minLength": 0,
          "maxLength": 20
        },
        "managedBy": {
          "$ref": "#/definitions/managedByOptions"
        }
      }
    },
    "templateHousekeepingRoomSchedulesDetails": {
      "type": "object",
      "description": "Response object of fetch template housekeeping tasks and its assoicated housekeeping codes.",
      "properties": {
        "templateHousekeepingRoomSchedules": {
          "type": "array",
          "description": "This type holds a collection of housekeeping task schedules configured at template level.",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/configTemplateHousekeepingRoomScheduleType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateHousekeepingRoomSchedulesCriteria": {
      "type": "object",
      "description": "Request Criteria to configure housekeeping task schedules at template level.",
      "properties": {
        "templateHousekeepingRoomSchedules": {
          "type": "array",
          "description": "This type holds a collection of housekeeping task schedules configured at template level.",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/configTemplateHousekeepingRoomScheduleType"
          }
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "templateHousekeepingRoomSchedulesToBeChanged": {
      "type": "object",
      "description": "Request object for changing housekeeping schedule tasks and it's associated codes configured at template level",
      "properties": {
        "templateHousekeepingRoomSchedule": {
          "description": "This type holds a collection of housekeeping task schedules configured at template level.",
          "$ref": "#/definitions/configTemplateHousekeepingRoomScheduleType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "vacantRoomStatusesList": {
      "type": "object",
      "description": "Response object for fetching vacant room statuses.",
      "properties": {
        "vacantRoomStatus": {
          "type": "array",
          "description": "Holds collection of vacant room housekeeping statuses.",
          "maxItems": 4000,
          "items": {
            "$ref": "#/definitions/vacantRoomStatusType"
          }
        },
        "totalPages": {
          "description": "Evaluated total page count based on the requested max fetch count.",
          "type": "integer"
        },
        "offset": {
          "description": "Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.",
          "type": "integer"
        },
        "limit": {
          "description": "Indicates maximum number of records a Web Service should return.",
          "type": "integer"
        },
        "hasMore": {
          "description": "Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.",
          "type": "boolean"
        },
        "totalResults": {
          "description": "Total number of rows queried",
          "type": "integer"
        },
        "count": {
          "description": "Total number of rows returned",
          "type": "integer"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "vacantRoomStatusType": {
      "type": "object",
      "description": "Information related to vacant room housekeeping status.",
      "properties": {
        "roomTypes": {
          "description": "Room types of the room.",
          "type": "array",
          "maxItems": 400,
          "items": {
            "$ref": "#/definitions/codeDescriptionType"
          }
        },
        "beginDate": {
          "description": "The date from which the vacant room status will be updated during end of day.",
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "description": "The last date till which the vacant room status will be updated during end of day.",
          "type": "string",
          "format": "date"
        },
        "houseKeepingRoomStatus": {
          "description": "The housekeeping room status to be updated on vacant rooms for the given room types.",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "numberOfDays": {
          "description": "Number of days to change room status of those rooms that are vacant from X number of days.",
          "type": "number"
        },
        "vacantRoomStatusId": {
          "type": "number",
          "description": "The unique ID of the vacant room configuration to which this record applies."
        }
      }
    },
    "vacantRoomStatusDetails": {
      "type": "object",
      "description": "The request element used to create a vacant room statuses.",
      "properties": {
        "roomTypes": {
          "type": "array",
          "description": "Room Type of the room.",
          "maxItems": 400,
          "items": {
            "type": "string"
          }
        },
        "beginDate": {
          "description": "The starting value of the date range. By default this would be the current business date.",
          "type": "string",
          "format": "date"
        },
        "endDate": {
          "description": "The ending value of the date range. The time span between the endDate and the beginDate must not exceed two years.",
          "type": "string",
          "format": "date"
        },
        "numberOfDays": {
          "description": "Number of days to change room status of those rooms that are vacant from X number of days.",
          "type": "number",
          "minLength": 1,
          "maxLength": 365
        },
        "houseKeepingRoomStatus": {
          "description": "The housekeeping room status to be updated on vacant rooms for the given room types.",
          "$ref": "#/definitions/housekeepingRoomStatusType"
        },
        "links": {
          "$ref": "#/definitions/links"
        },
        "warnings": {
          "$ref": "#/definitions/warningsType"
        }
      }
    },
    "housekeepingRoomStatusType": {
      "type": "string",
      "description": "Simple type for room status instructions to be used in requests for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup, Inspected.",
      "enum": [
        "Clean",
        "Dirty",
        "Pickup",
        "Inspected"
      ]
    },
    "componentRoomInfoType": {
      "type": "object",
      "description": "This type holds information of a Component room attached to the Component Suite.",
      "properties": {
        "componentRoomNumber": {
          "type": "string",
          "description": "Component Room Number attached to the Component Suite."
        },
        "componentRoomType": {
          "type": "string",
          "description": "Room type of the Component Room attached to the Component Suite."
        },
        "componentRoomStatus": {
          "type": "string",
          "description": "Room Status of the Component Room attached to the Component Suite."
        }
      }
    },
    "componentSuiteInfoType": {
      "type": "object",
      "description": "This type holds information of the Component Suite to which the Component Room is attached.",
      "properties": {
        "componentSuiteNumber": {
          "type": "string",
          "description": "Component Suite Number to which the Component Room is attached."
        },
        "componentSuiteRoomType": {
          "type": "string",
          "description": "Component Suite Room Type to which the Component Room is attached."
        },
        "componentSuiteRoomStatus": {
          "type": "string",
          "description": "Component Suite Room Status to which the Component Room is attached."
        }
      }
    },
    "managedByOptions": {
      "description": "Describes of the Configuration is Managed by Enterprise or Property.",
      "type": "string",
      "enum": [
        "EnterpriseManaged",
        "PropertyManaged",
        "EnterpriseEnforced",
        "PropertyOverridden"
      ]
    }
  },
  "tags": [
    {
      "name": "ChainConfig",
      "description": "The ChainConfigService Web Service offers capability of creating, managing, and retrieving of chain configuration."
    },
    {
      "name": "HotelConfig",
      "description": "The Hotel Config Service Web Service offers capability to configure Master Data needed for Hotel Configuration such as managing Room Classes, Room Types, Rooms, etc."
    }
  ],
  "externalDocs": {
    "description": "Find out more about Oracle Hospitality",
    "url": "https://docs.oracle.com/en/industries/hospitality/integration_platforms.html"
  }
}